{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"0.%E5%89%8D%E8%A8%80/","text":"\u96f6\u3001\u524d\u8a00 1\u3001\u673a\u5668\u5b66\u4e60\u6d77\u5578 2006\u5e74\uff0cGeoffrey Hinton\u7b49\u4eba\u53d1\u8868\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u8bad\u7ec3\u80fd\u591f\u8bc6\u522b\u5177\u6709\u6700\u65b0\u7cbe\u5ea6\uff08> 98%\uff09\u7684\u624b\u5199\u6570\u5b57\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u3002\u4ed6\u4eec\u79f0\u8fd9\u79cd\u6280\u672f\u4e3a\u201cDeep Learning\u201d\u3002\u5f53\u65f6\uff0c\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u5e76\u4e14\u5927\u591a\u6570\u7814\u7a76\u4eba\u5458\u81ea 20 \u4e16\u7eaa 90 \u5e74\u4ee3\u4ee5\u6765\u5c31\u653e\u5f03\u4e86\u8fd9\u4e2a\u60f3\u6cd5\u3002\u8fd9\u7bc7\u8bba\u6587\u91cd\u65b0\u6fc0\u8d77\u4e86\u79d1\u5b66\u754c\u7684\u5174\u8da3\uff0c\u4e0d\u4e45\u4e4b\u540e\uff0c\u8bb8\u591a\u65b0\u53d1\u8868\u7684\u8bba\u6587\u8868\u660e\uff0c\u6df1\u5ea6\u5b66\u4e60\u4e0d\u4ec5\u662f\u53ef\u80fd\u7684\uff0c\u800c\u4e14\u80fd\u591f\u53d6\u5f97\u5176\u4ed6\u7684 Machine Learning \u6280\u672f\u90fd\u96be\u4ee5\u5339\u914d\u7684\u4ee4\u4eba\u5174\u594b\u7684\u6210\u5c31\uff08\u501f\u52a9\u5de8\u5927\u7684\u8ba1\u7b97\u80fd\u529b\u548c\u5927\u91cf\u7684\u6570\u636e\uff09\u3002\u8fd9\u79cd\u70ed\u60c5\u5f88\u5feb\u6269\u5c55\u5230\u673a\u5668\u5b66\u4e60\u7684\u8bb8\u591a\u7684\u5176\u4ed6\u9886\u57df\u3002 Deep Learning \u5feb\u901f\u53d1\u5c55\u7684 10 \u5e74\u95f4\u548c\u673a\u5668\u5b66\u4e60\u5df2\u7ecf\u5f81\u670d\u4e86\u8fd9\u4e2a\u884c\u4e1a\uff1a\u5b83\u73b0\u5728\u6210\u4e3a\u4e86\u5f53\u4eca\u9ad8\u79d1\u6280\u4ea7\u54c1\u4e2d\u7684\u8bb8\u591a\u9ed1\u79d1\u6280\u7684\u6838\u5fc3\uff0c\u6bd4\u5982\uff0c\u4e3a\u60a8\u7684\u7f51\u7edc\u641c\u7d22\u7ed3\u679c\u6392\u540d\uff0c\u4e3a\u667a\u80fd\u624b\u673a\u7684\u8bed\u97f3\u8bc6\u522b\u63d0\u4f9b\u652f\u6301\uff0c\u4e3a\u60a8\u63a8\u8350\u60a8\u559c\u6b22\u7684\u89c6\u9891\uff0c\u5728\u56f4\u68cb\u6e38\u620f\u4e2d\u51fb\u8d25\u4e16\u754c\u51a0\u519b\u3002\u5728\u4f60\u77e5\u9053\u4e4b\u524d\uff0c\u5b83\u90fd\u53ef\u80fd\u4f1a\u9a7e\u9a76\u60a8\u7684\u6c7d\u8f66\u3002 2\u3001\u60a8\u9879\u76ee\u4e2d\u7684\u673a\u5668\u5b66\u4e60 \u73b0\u5728\u4f60\u662f\u4e0d\u662f\u5bf9\u673a\u5668\u5b66\u4e60\u611f\u5230\u5174\u594b\uff0c\u5e76\u4e14\u5f88\u4e50\u610f\u52a0\u5165\u5230\u8fd9\u4e2a\u9635\u8425\u4e2d\uff1f \u4e5f\u8bb8\u4f60\u5e0c\u671b\u7ed9\u81ea\u5df1\u5236\u9020\u7684\u673a\u5668\u4eba\u8d4b\u4e88\u4e00\u4e2a\u81ea\u5df1\u7684\u5927\u8111\uff1f\u8ba9\u5b83\u53ef\u4ee5\u9762\u90e8\u8bc6\u522b\uff1f\u8fd8\u662f\u5b66\u4f1a\u5230\u5904\u8d70\u8d70\uff1f \u4e5f\u8bb8\u4f60\u7684\u516c\u53f8\u6709\u5927\u91cf\u7684\u6570\u636e\uff08\u7528\u6237\u65e5\u5fd7\uff0c\u8d22\u52a1\u6570\u636e\uff0c\u751f\u4ea7\u6570\u636e\uff0c\u673a\u5668\u4f20\u611f\u5668\u6570\u636e\uff0c\u70ed\u7ebf\u7edf\u8ba1\u6570\u636e\uff0c\u4eba\u529b\u8d44\u6e90\u62a5\u544a\u7b49\uff09\uff0c\u5982\u679c\u4f60\u77e5\u9053\u5728\u54ea\u65b9\u9762\u89c2\u5bdf\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e00\u4e9b\u9690\u85cf\u7740\u7684\u7470\u5b9d\u3002\u4f8b\u5982\uff1a * \u7ec6\u5206\u5ba2\u6237\uff0c\u4e3a\u6bcf\u4e2a\u56e2\u961f\u627e\u5230\u6700\u4f73\u7684\u8425\u9500\u7b56\u7565 * \u6839\u636e\u7c7b\u4f3c\u5ba2\u6237\u8d2d\u4e70\u7684\u4ea7\u54c1\u4e3a\u6bcf\u4e2a\u5ba2\u6237\u63a8\u8350\u4ea7\u54c1 * \u68c0\u6d4b\u54ea\u4e9b\u4ea4\u6613\u53ef\u80fd\u662f\u6b3a\u8bc8\u884c\u4e3a * \u9884\u6d4b\u4e0b\u4e00\u5e74\u7684\u6536\u5165 * \u66f4\u591a\u5e94\u7528 \u65e0\u8bba\u4ec0\u4e48\u539f\u56e0\uff0c\u4f60\u51b3\u5b9a\u5f00\u59cb\u5b66\u4e60\u673a\u5668\u5b66\u4e60\uff0c\u5e76\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u5b9e\u65bd\uff0c\u8fd9\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff01 3\u3001\u76ee\u6807\u548c\u65b9\u6cd5 \u672c\u4e66\u5047\u5b9a\u4f60\u5bf9\u673a\u5668\u5b66\u4e60\u51e0\u4e4e\u4e00\u65e0\u6240\u77e5\u3002\u5b83\u7684\u76ee\u6807\u662f\u7ed9\u4f60\u5b9e\u9645\u5b9e\u73b0\u80fd\u591f\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u7684\u7a0b\u5e8f\u6240\u9700\u7684\u6982\u5ff5\uff0c\u76f4\u89c9\u548c\u5de5\u5177\u3002 \u6211\u4eec\u5c06\u4ecb\u7ecd\u5927\u91cf\u7684\u6280\u672f\uff0c\u4ece\u6700\u7b80\u5355\u7684\u548c\u6700\u5e38\u7528\u7684\uff08\u5982\u7ebf\u6027\u56de\u5f52\uff09\u5230\u4e00\u4e9b\u5b9a\u671f\u8d62\u5f97\u6bd4\u8d5b\u7684\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u73b0\u6210\u7684 Python \u6846\u67b6\uff0c\u800c\u4e0d\u662f\u5b9e\u73b0\u6211\u4eec\u81ea\u5df1\u7684\u6bcf\u4e2a\u7b97\u6cd5\u7684\u73a9\u5177\u7248\u672c\uff1a Scikit-learn \u975e\u5e38\u6613\u4e8e\u4f7f\u7528\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e86\u8bb8\u591a\u6709\u6548\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u56e0\u6b64\u5b83\u4e3a\u5b66\u4e60\u673a\u5668\u5b66\u4e60\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u5207\u5165\u70b9\u3002 TensorFlow \u662f\u4f7f\u7528\u6570\u636e\u6d41\u56fe\u8fdb\u884c\u5206\u5e03\u5f0f\u6570\u503c\u8ba1\u7b97\u7684\u66f4\u590d\u6742\u7684\u5e93\u3002\u5b83\u901a\u8fc7\u5728\u6f5c\u5728\u7684\u6570\u5343\u4e2a\u591a GPU \u670d\u52a1\u5668\u4e0a\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0c\u53ef\u4ee5\u9ad8\u6548\u5730\u8bad\u7ec3\u548c\u8fd0\u884c\u975e\u5e38\u5927\u7684\u795e\u7ecf\u7f51\u7edc\u3002TensorFlow \u662f\u88ab Google \u521b\u9020\u7684\uff0c\u652f\u6301\u5176\u5927\u578b\u673a\u5668\u5b66\u4e60\u5e94\u7528\u7a0b\u5e8f\u3002\u4e8e 2015\u5e7411\u6708\u5f00\u6e90\u3002 \u672c\u4e66\u503e\u5411\u4e8e\u5b9e\u9645\u64cd\u4f5c\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u5177\u4f53\u7684\u5b9e\u4f8b\u548c\u4e00\u70b9\u7406\u8bba\u6765\u589e\u52a0\u5bf9\u673a\u5668\u5b66\u4e60\u7684\u76f4\u89c2\u7406\u89e3\u3002\u867d\u7136\u4f60\u53ef\u4ee5\u5728\u4e0d\u62ff\u7b14\u8bb0\u672c\u7535\u8111\u7684\u60c5\u51b5\u4e0b\u9605\u8bfb\u6b64\u4e66\uff0c\u4f46\u662f\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4f60\u901a\u8fc7 https://github.com/ageron/handson-ml \u5728\u7ebf\u5b9e\u73b0 Jupyter notebooks \u4e0a\u7684\u4ee3\u7801\u793a\u4f8b\u3002 4\u3001\u51c6\u5907\u6761\u4ef6 \u672c\u4e66\u5047\u5b9a\u60a8\u6709\u4e00\u4e9b Python \u7f16\u7a0b\u7ecf\u9a8c\uff0c\u5e76\u4e14\u6bd4\u8f83\u719f\u6089 Python \u7684\u4e3b\u8981\u79d1\u5b66\u5e93\uff0c\u7279\u522b\u662f NumPy\uff0cPandas \u548c Matplotlib \u3002 \u53e6\u5916\uff0c\u5982\u679c\u4f60\u5173\u5fc3\u7684\u662f\u5e95\u5c42\u5b9e\u73b0/\u539f\u7406\uff0c\u4f60\u5e94\u8be5\u5bf9\u5927\u5b66\u6c34\u5e73\u7684\u6570\u5b66\uff08\u5fae\u79ef\u5206\uff0c\u7ebf\u6027\u4ee3\u6570\uff0c\u6982\u7387\u548c\u7edf\u8ba1\u5b66\uff09\u6709\u4e00\u4e9b\u4e86\u89e3\u3002 \u5982\u679c\u4f60\u8fd8\u4e0d\u4e86\u89e3 Python\uff0chttp://learnpython.org/ \u662f\u4f60\u5b66\u4e60\u4f7f\u7528 Python \u7684\u597d\u5730\u65b9\u3002 python.org \u5b98\u65b9\u6559\u7a0b\u4e5f\u662f\u76f8\u5f53\u4e0d\u9519\u7684\u3002 \u5982\u679c\u4f60\u4ece\u672a\u4f7f\u7528\u8fc7 Jupyter \uff0c\u7b2c 2 \u7ae0\u5c06\u6307\u5bfc\u4f60\u5b8c\u6210\u5b89\u88c5\u548c\u57fa\u672c\u64cd\u4f5c\uff1a\u5b83\u662f\u4f60\u5de5\u5177\u7bb1\u4e2d\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\u3002 \u5982\u679c\u4f60\u4e0d\u719f\u6089 Python \u7684\u79d1\u5b66\u5e93\uff0c\u63d0\u4f9b\u7684\u4e00\u4e9b Jupyter notebook \u5305\u62ec\u4e86\u4e00\u4e9b\u6559\u7a0b\u3002\u8fd8\u6709\u4e00\u4e2a\u7ebf\u6027\u4ee3\u6570\u7684\u5feb\u901f\u6570\u5b66\u6559\u7a0b\u3002 5\u3001\u8def\u7ebf\u56fe \u8fd9\u672c\u4e66\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u3002 \u7b2c\u4e00\u90e8\u5206\uff0c\u673a\u5668\u5b66\u4e60\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u6db5\u76d6\u4ee5\u4e0b\u4e3b\u9898\uff1a \u4ec0\u4e48\u662f\u673a\u5668\u5b66\u4e60\uff1f\u5b83\u88ab\u8bd5\u56fe\u7528\u6765\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff1f\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u7684\u4e3b\u8981\u7c7b\u522b\u548c\u57fa\u672c\u6982\u5ff5\u662f\u4ec0\u4e48\uff1f \u5178\u578b\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u4e2d\u7684\u4e3b\u8981\u6b65\u9aa4\u3002 \u901a\u8fc7\u62df\u5408\u6570\u636e\u6765\u5b66\u4e60\u6a21\u578b\u3002 \u4f18\u5316\u6210\u672c\u51fd\u6570\uff08cost function\uff09\u3002 \u5904\u7406\uff0c\u6e05\u6d17\u548c\u51c6\u5907\u6570\u636e\u3002 \u9009\u62e9\u548c\u8bbe\u8ba1\u7279\u5f81\u3002 \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u9009\u62e9\u4e00\u4e2a\u6a21\u578b\u5e76\u8c03\u6574\u8d85\u53c2\u6570\u3002 \u673a\u5668\u5b66\u4e60\u7684\u4e3b\u8981\u6311\u6218\uff0c\u7279\u522b\u662f\u6b20\u62df\u5408\u548c\u8fc7\u62df\u5408\uff08\u504f\u5dee\u548c\u65b9\u5dee\u6743\u8861\uff09\u3002 \u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u964d\u7ef4\u4ee5\u5bf9\u6297 the curse of dimensionality\uff08\u7ef4\u5ea6\u8bc5\u5492\uff09 \u6700\u5e38\u89c1\u7684\u5b66\u4e60\u7b97\u6cd5\uff1a\u7ebf\u6027\u548c\u591a\u9879\u5f0f\u56de\u5f52\uff0c Logistic \u56de\u5f52\uff0ck-\u6700\u8fd1\u90bb\uff0c\u652f\u6301\u5411\u91cf\u673a\uff0c\u51b3\u7b56\u6811\uff0c\u968f\u673a\u68ee\u6797\u548c\u96c6\u6210\u65b9\u6cd5\u3002 \u7b2c\u4e8c\u90e8\u5206\uff0c\u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5b66\u4e60\uff0c\u5305\u62ec\u4ee5\u4e0b\u4e3b\u9898\uff1a \u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc\uff1f\u5b83\u4eec\u6709\u5565\u4f18\u52bf\uff1f \u4f7f\u7528 TensorFlow \u6784\u5efa\u548c\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u3002 \u6700\u91cd\u8981\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\uff1a\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5377\u79ef\u7f51\u7edc\uff0c\u9012\u5f52\u7f51\u7edc\uff0c\u957f\u671f\u77ed\u671f\u8bb0\u5fc6\u7f51\u7edc\uff08LSTM\uff09\u548c\u81ea\u52a8\u7f16\u7801\u5668\u3002 \u8bad\u7ec3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u6280\u5de7\u3002 \u5bf9\u4e8e\u5927\u6570\u636e\u96c6\u7f29\u653e\u795e\u7ecf\u7f51\u7edc\u3002 \u5f3a\u5316\u5b66\u4e60\u3002 \u7b2c\u4e00\u90e8\u5206\u4e3b\u8981\u57fa\u4e8e scikit-learn \uff0c\u800c\u7b2c\u4e8c\u90e8\u5206\u5219\u4f7f\u7528 TensorFlow \u3002 \u6ce8\u610f\uff1a\u4e0d\u8981\u592a\u6025\u4e8e\u6df1\u5165\u5b66\u4e60\u5230\u6838\u5fc3\u77e5\u8bc6\uff1a\u6df1\u5ea6\u5b66\u4e60\u65e0\u7591\u662f\u673a\u5668\u5b66\u4e60\u4e2d\u6700\u4ee4\u4eba\u5174\u594b\u7684\u9886\u57df\u4e4b\u4e00\uff0c\u4f46\u662f\u4f60\u5e94\u8be5\u9996\u5148\u638c\u63e1\u57fa\u7840\u77e5\u8bc6\u3002\u800c\u4e14\uff0c\u5927\u591a\u6570\u95ee\u9898\u53ef\u4ee5\u7528\u8f83\u7b80\u5355\u7684\u6280\u672f\u5f88\u597d\u5730\u89e3\u51b3\uff08\u800c\u4e0d\u9700\u8981\u6df1\u5ea6\u5b66\u4e60\uff09\uff0c\u6bd4\u5982\u968f\u673a\u68ee\u6797\u548c\u96c6\u6210\u65b9\u6cd5\uff08\u6211\u4eec\u4f1a\u5728\u7b2c\u4e00\u90e8\u5206\u8fdb\u884c\u8ba8\u8bba\uff09\u3002\u5982\u679c\u4f60\u62e5\u6709\u8db3\u591f\u7684\u6570\u636e\uff0c\u8ba1\u7b97\u80fd\u529b\u548c\u8010\u5fc3\uff0c\u6df1\u5ea6\u5b66\u4e60\u662f\u6700\u9002\u5408\u590d\u6742\u7684\u95ee\u9898\u7684\uff0c\u5982\u56fe\u50cf\u8bc6\u522b\uff0c\u8bed\u97f3\u8bc6\u522b\u6216\u81ea\u7136\u8bed\u8a00\u5904\u7406\u3002 6\u3001\u5176\u4ed6\u8d44\u6e90 \u6709\u8bb8\u591a\u8d44\u6e90\u53ef\u7528\u4e8e\u4e86\u89e3\u673a\u5668\u5b66\u4e60\u3002Andrew Ng \u5728 Coursera \u4e0a\u7684 ML \u8bfe\u7a0b \u548c Geoffrey Hinton \u5173\u4e8e \u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5b66\u4e60 \u7684\u8bfe\u7a0b\u90fd\u662f\u975e\u5e38\u68d2\u7684\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u8bfe\u7a0b\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\u6295\u5165\uff08\u5927\u6982\u662f\u51e0\u4e2a\u6708\uff09\u3002 \u8fd8\u6709\u8bb8\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u6bd4\u8f83\u6709\u8da3\u7684\u7f51\u7ad9\uff0c\u5f53\u7136\u8fd8\u5305\u62ec scikit-learn \u51fa\u8272\u7684 \u7528\u6237\u6307\u5357 \u3002\u4f60\u53ef\u80fd\u4f1a\u559c\u6b22\u4e0a Dataquest \uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u4ea4\u4e92\u5f0f\u6559\u7a0b\uff0c\u8fd8\u6709 ML \u535a\u5ba2\uff0c\u6bd4\u5982\u90a3\u4e9b\u5728 Quora \u4e0a\u5217\u51fa\u6765\u7684\u535a\u5ba2\u3002\u6700\u540e\uff0c Deep Learning \u7f51\u7ad9 \u6709\u4e00\u4e2a\u5f88\u597d\u7684\u8d44\u6e90\u5217\u8868\u6765\u5b66\u4e60\u66f4\u591a\u3002 \u5f53\u7136\uff0c\u8fd8\u6709\u5f88\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u5176\u4ed6\u4ecb\u7ecd\u6027\u4e66\u7c4d\uff0c\u7279\u522b\u662f\uff1a Joel Grus, Data Science from Scratch (O\u2019Reilly). \u8fd9\u672c\u4e66\u4ecb\u7ecd\u4e86\u673a\u5668\u5b66\u4e60\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5e76\u5728\u7eaf Python \u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e9b\u4e3b\u8981\u7b97\u6cd5\uff08\u4ece\u540d\u5b57\u4e0a\u770b\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u4ece\u5934\u5f00\u59cb\uff09\u3002 Stephen Marsland, Machine Learning: An Algorithmic Perspective (Chapman andHall). \u8fd9\u672c\u4e66\u5bf9\u673a\u5668\u5b66\u4e60\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u4ecb\u7ecd\uff0c\u6db5\u76d6\u4e86\u5e7f\u6cdb\u7684\u4e3b\u9898\uff0cPython \u4e2d\u7684\u4ee3\u7801\u793a\u4f8b\uff08\u4e5f\u662f\u4ece\u96f6\u5f00\u59cb\uff0c\u4f46\u662f\u4f7f\u7528 NumPy\uff09\u3002 Sebastian Raschka, Python Machine Learning (Packt Publishing). \u672c\u4e66\u4e5f\u5bf9\u673a\u5668\u5b66\u4e60\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u4ecb\u7ecd\uff0c\u4f46\u662f\u5229\u7528\u4e86 Python \u7684\u5f00\u6e90\u5e93\uff08Pylearn 2 \u548c Theano\uff09\u3002 Yaser S. Abu-Mostafa, Malik Magdon-Ismail, and Hsuan-Tien Lin, Learning fromData (AMLBook). \u5bf9 ML \u6709\u4e00\u4e2a\u76f8\u5bf9\u7406\u8bba\u5316\u7684\u4ecb\u7ecd\uff0c\u8fd9\u672c\u4e66\u63d0\u4f9b\u4e86\u6bd4\u8f83\u6df1\u523b\u7684\u89c1\u89e3\uff0c\u7279\u522b\u662f bias/variance tradeoff \uff08\u504f\u5dee/\u65b9\u5dee \u6743\u8861\uff09\uff08\u89c1\u7b2c 4 \u7ae0\uff09\u3002 Stuart Russell and Peter Norvig, Artificial Intelligence: A Modern Approach, 3rd Edition (Pearson). \u8fd9\u662f\u4e00\u672c\u5f88\u597d\u7684\uff08\u5e76\u4e14\u5f88\u5927\uff09\u7684\u4e66\uff0c\u6db5\u76d6\u4e86\u5305\u62ec\u673a\u5668\u5b66\u4e60\u5728\u5185\u7684\u5927\u91cf\u4e3b\u9898\u3002\u8fd9\u6709\u52a9\u4e8e\u66f4\u52a0\u6df1\u523b\u5730\u7406\u89e3 ML \u3002 \u6700\u540e\uff0c\u4e00\u4e2a\u5f88\u597d\u7684\u5b66\u4e60\u65b9\u6cd5\u5c31\u662f\u52a0\u5165 ML \u7ade\u8d5b\u7f51\u7ad9\uff0c\u4f8b\u5982 kaggle.com \uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\u4e0a\u953b\u70bc\u81ea\u5df1\u7684\u6280\u80fd\uff0c\u5e76\u4ece\u4e00\u4e9b\u6700\u597d\u7684 ML \u4e13\u4e1a\u4eba\u58eb\u90a3\u91cc\u83b7\u5f97\u5e2e\u52a9\u548c\u89c1\u89e3\u3002 7\u3001\u672c\u4e66\u4e2d\u7684\u4e00\u4e9b\u7ea6\u5b9a \u672c\u4e66\u4f7f\u7528\u4ee5\u4e0b\u5370\u5237\u7ea6\u5b9a\uff1a \u659c\u4f53 \u2014\u2014 \u6307\u793a\u65b0\u672f\u8bed\uff0c\u7f51\u5740\uff0c\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u6269\u5c55\u540d\u3002 \u7b49\u5bbd \u2014\u2014 \u7528\u4e8e\u7a0b\u5e8f\u6e05\u5355\uff0c\u4ee5\u53ca\u6bb5\u843d\u5185\u7528\u4e8e\u5f15\u7528\u7a0b\u5e8f\u5143\u7d20\uff0c\u5982\u53d8\u91cf\u6216\u51fd\u6570\u540d\u79f0\uff0c\u6570\u636e\u5e93\uff0c\u6570\u636e\u7c7b\u578b\uff0c\u73af\u5883\u53d8\u91cf\uff0c\u8bed\u53e5\u548c\u5173\u952e\u5b57\u3002 \u7b49\u5bbd\u7c97\u4f53 \u2014\u2014 \u663e\u793a\u5e94\u7531\u7528\u6237\u9010\u5b57\u8f93\u5165\u7684\u547d\u4ee4\u6216\u5176\u4ed6\u6587\u672c\u3002 \u7b49\u5bbd\u659c\u4f53 \u2014\u2014 \u663e\u793a\u5e94\u7531\u7528\u6237\u63d0\u4f9b\u7684\u503c\u6216\u7531\u4e0a\u4e0b\u6587\u786e\u5b9a\u7684\u503c\u66ff\u6362\u7684\u6587\u672c\u3002 \u5c0f\u677e\u9f20\u56fe\u6807 \u2014\u2014 \u6b64\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u5c0f\u63d0\u793a\u6216\u5efa\u8bae\u3002 \u5c0f\u4e4c\u9e26\u56fe\u6807 \u2014\u2014 \u6b64\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u666e\u901a\u7684\u8bf4\u660e\u3002 \u5c0f\u874e\u5b50\u56fe\u6807 \u2014\u2014 \u6b64\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u8b66\u544a\u548c\u6ce8\u610f\u3002 8\u3001\u4f7f\u7528\u4ee3\u7801\u793a\u4f8b \u8865\u5145\u6750\u6599\uff08\u4ee3\u7801\u793a\u4f8b\uff0c\u7ec3\u4e60\u9898\u7b49\uff09\u53ef\u4ee5\u4ece https://github.com/ageron/handson-ml \u4e0b\u8f7d\u3002 \u8fd9\u672c\u4e66\u662f\u4e3a\u4e86\u5e2e\u52a9\u4f60\u5b8c\u6210\u5de5\u4f5c\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u672c\u4e66\u63d0\u4f9b\u4e86\u793a\u4f8b\u4ee3\u7801\uff0c\u5219\u53ef\u4ee5\u5728\u7a0b\u5e8f\u548c\u6587\u6863\u4e2d\u4f7f\u7528\u5b83\u3002\u9664\u975e\u4f60\u590d\u5236\u4e86\u5927\u90e8\u5206\u4ee3\u7801\uff0c\u5426\u5219\u4f60\u65e0\u9700\u8054\u7cfb\u6211\u4eec\u83b7\u5f97\u8bb8\u53ef\u3002\u4f8b\u5982\uff0c\u7f16\u5199\u4f7f\u7528\u672c\u4e66\u4e2d\u51e0\u4e2a\u4ee3\u7801\u5757\u7684\u7a0b\u5e8f\u4e0d\u9700\u8981\u8bb8\u53ef\u3002\u9500\u552e\u6216\u8005\u5206\u53d1 O\u2019Reilly \u4e66\u7c4d\u7684 CD-ROM \u4f8b\u5b50\u9700\u8981\u83b7\u5f97\u8bb8\u53ef\u3002 \u901a\u8fc7\u5f15\u7528\u672c\u4e66\u548c\u4f7f\u7528\u793a\u4f8b\u4ee3\u7801\u6765\u56de\u7b54\u95ee\u9898\u5e76\u4e0d\u9700\u8981\u83b7\u5f97\u8bb8\u53ef\u3002\u5c06\u5927\u91cf\u6765\u81ea\u672c\u4e66\u7684\u793a\u4f8b\u4ee3\u7801\u6574\u5408\u5230\u4ea7\u54c1\u6587\u6863\u4e2d\u5e76\u4e0d\u9700\u8981\u83b7\u5f97\u8bb8\u53ef\u3002 \u6211\u4eec\u611f\u8c22\uff0c\u4f46\u662f\u5e76\u4e0d\u8981\u6c42\uff0c\u8d21\u732e\u3002\u8d21\u732e\u901a\u5e38\u5305\u62ec\u6807\u9898\uff0c\u4f5c\u8005\uff0c\u51fa\u7248\u5546\u548c ISBN \u3002\u4f8b\u5982\uff1a\u201cHands-On Machine Learning withScikit-Learn and TensorFlow by Aur\u00e9lien G\u00e9ron (O\u2019Reilly). Copyright 2017 Aur\u00e9lienG\u00e9ron, 978-1-491-96229-9.\u201d \u5982\u679c\u60a8\u89c9\u5f97\u60a8\u5bf9\u4ee3\u7801\u793a\u4f8b\u7684\u4f7f\u7528\u8d85\u51fa\u4e86\u5408\u7406\u4f7f\u7528\u8303\u56f4\u6216\u4e0a\u8ff0\u6743\u9650\uff0c\u8bf7\u968f\u65f6\u8054\u7cfb\u6211\u4eec\uff1apermissions@oreilly.com \u3002 9\u3001O\u2019Reilly Safari Safari \uff08\u4ee5\u524d\u88ab\u79f0\u4e3a Safari Books Online\uff09\u662f\u4e00\u4e2a\u9488\u5bf9\u4f01\u4e1a\uff0c\u653f\u5e9c\uff0c\u6559\u80b2\u5de5\u4f5c\u8005\u548c\u4e2a\u4eba\u7684\u57fa\u4e8e\u4f1a\u5458\u7684\u57f9\u8bad\u548c\u53c2\u8003\u5e73\u53f0\u3002 \u4f1a\u5458\u53ef\u4ee5\u8bbf\u95ee 250 \u591a\u5bb6\u53d1\u5e03\u5546\u7684\u6570\u5343\u672c\u56fe\u4e66\uff0c\u57f9\u8bad\u89c6\u9891\uff0c\u5b66\u4e60\u8def\u5f84\uff0c\u4e92\u52a8\u6559\u7a0b\u548c\u7b56\u5212\u64ad\u653e\u5217\u8868\uff0c\u5176\u4e2d\u5305\u62ec O\u2019Reilly Media\uff0c\u54c8\u4f5b\u5546\u4e1a\u8bc4\u8bba\uff0cPrentice Hall \u4e13\u4e1a\u4eba\u5458\uff0cAddison-Wesley \u4e13\u4e1a\u4eba\u5458\uff0cMicrosoft Press\uff0c Sams\uff0c Que\uff0c Peachpit Press\uff0c Adobe\uff0c Focal Press\uff0c Cisco Press \u7b49\u3002\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee http://oreilly.com/safari \u3002 10\u3001\u5982\u4f55\u8054\u7cfb\u6211\u4eec \u8bf7\u5411\u51fa\u7248\u5546\u53d1\u8868\u6709\u5173\u672c\u4e66\u7684\u8bc4\u8bba\u548c\u95ee\u9898\uff1a O\u2019Reilly Media, Inc. 1005 Gravenstein Highway North Sebastopol, CA 95472 800-998-9938 \uff08\u5728\u7f8e\u56fd\u6216\u8005\u52a0\u62ff\u5927\uff09 707-829-0515 \uff08\u56fd\u9645\u6216\u5730\u533a\uff09 707-829-0104 \uff08\u4f20\u771f\uff09 \u6211\u4eec\u6709\u4e00\u4e2a\u8fd9\u672c\u4e66\u7684\u7f51\u9875\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5217\u51fa\u4e86\u52d8\u8bef\u8868\uff0c\u4f8b\u5b50\u548c\u4efb\u4f55\u989d\u5916\u7684\u4fe1\u606f\u3002\u4f60\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u9875 http://bit.ly/hands-on-machine-learning-with-scikit-learn-and-tensorflow \u8981\u8bc4\u8bba\u6216\u8005\u8be2\u95ee\u6709\u5173\u672c\u4e66\u7684\u6280\u672f\u95ee\u9898\uff0c\u8bf7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u5230 bookquestions@oreilly.com \u3002 \u6709\u5173\u6211\u4eec\u7684\u4e66\u7c4d\uff0c\u8bfe\u7a0b\uff0c\u4f1a\u8bae\u548c\u65b0\u95fb\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684\u7f51\u7ad9 http://www.oreilly.com \u3002 \u5728 facebook \u4e0a\u627e\u5230\u6211\u4eec\uff1a http://facebook.com/oreilly \u5728 Twitter \u4e0a\u5173\u6ce8\u6211\u4eec\uff1ahttp://twitter.com/oreillymedia \u5728 Youtube \u4e0a\u89c2\u770b\u6211\u4eec\u7684\u89c6\u9891\uff1a http://www.youtube.com/oreillymedia 11\u3001\u81f4\u8c22 \u6211\u8981\u611f\u8c22\u6211\u7684 Google \u540c\u4e8b\uff0c\u7279\u522b\u662f Youtube \u89c6\u9891\u5206\u7c7b\u5c0f\u7ec4\uff0c\u6559\u7ed9\u6211\u5f88\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u77e5\u8bc6\u3002\u6ca1\u6709\u4ed6\u4eec\uff0c\u6211\u6c38\u8fdc\u65e0\u6cd5\u5f00\u59cb\u8fd9\u4e2a\u9879\u76ee\u3002\u7279\u522b\u611f\u8c22\u6211\u7684\u4e2a\u4eba ML \u4e13\u5bb6\uff1aCl\u00e9ment Courbet, Julien Dubois, Mathias Kende, Daniel Kitachewsky, James Pack, Alexander Pak, Anosh Raj, Vitor Sessak, Wiktor Tomczak, Ingrid von Glehn, Rich Washington, \u4ee5\u53ca Youtube Paris \u7684\u6240\u6709\u4eba\u3002 \u6211\u975e\u5e38\u611f\u8c22\u6240\u6709\u90a3\u4e9b\u4ece\u7e41\u5fd9\u7684\u751f\u6d3b\u4e2d\u62bd\u51fa\u65f6\u95f4\u6765\u4ed4\u7ec6\u9605\u8bfb\u6211\u7684\u4e66\u7684\u4eba\u3002\u611f\u8c22 Pete Warden \u56de\u7b54\u4e86\u6211\u6240\u6709\u7684 TensorFlow \u7684\u95ee\u9898\uff0c\u56de\u987e\u7b2c\u4e8c\u90e8\u5206\uff0c\u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u8da3\u7684\u89c1\u89e3\uff0c\u5f53\u7136\u4e5f\u6210\u4e3a\u4e86 TensorFlow \u6838\u5fc3\u56e2\u961f\u7684\u4e00\u5458\u3002\u4f60\u4e00\u5b9a\u60f3\u8981\u770b\u770b\u4ed6\u7684 \u535a\u5ba2 \uff01\u975e\u5e38\u611f\u8c22 Lukas Biewald \u5bf9\u7b2c\u4e8c\u90e8\u5206\u7684\u975e\u5e38\u5168\u9762\u7684\u5ba1\u67e5\uff1a\u4ed6\u6beb\u4e0d\u7559\u60c5\u5730\u5c1d\u8bd5\u4e86\u6240\u6709\u7684\u4ee3\u7801\uff08\u5e76\u4e14\u53d1\u73b0\u4e86\u4e00\u4e9b\u9519\u8bef\uff09\uff0c\u505a\u51fa\u4e86\u8bb8\u591a\u4f1f\u5927\u7684\u5efa\u8bae\uff0c\u800c\u4e14\u4ed6\u7684\u70ed\u60c5\u662f\u5177\u6709\u611f\u67d3\u529b\u7684\u3002\u4f60\u5e94\u8be5\u770b\u770b\u4ed6\u7684\u535a\u5ba2\uff0c\u548c\u4ed6\u7684\u8d85\u9177\u7684\u673a\u5668\u4eba\uff01\u611f\u8c22 Justin Francis \uff0c\u4ed6\u4e5f\u975e\u5e38\u5168\u9762\u5730\u5ba1\u67e5\u4e86\u7b2c\u4e8c\u90e8\u5206\uff0c\u7279\u522b\u662f\u5728\u7b2c 16 \u7ae0\u63d0\u5230\u4e86\u9519\u8bef\u5e76\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u89c1\u89e3\u3002\u4f60\u53ef\u4ee5\u5728 TensorFlow \u4e0a\u770b\u5230\u4ed6\u7684\u5e16\u5b50\uff01 \u4e5f\u975e\u5e38\u611f\u8c22 David Andrzejewski\uff0c\u4ed6\u5ba1\u67e5\u4e86\u7b2c\u4e00\u90e8\u5206\uff0c\u63d0\u4f9b\u4e86\u975e\u5e38\u6709\u7528\u7684\u53cd\u9988\u610f\u89c1\uff0c\u786e\u5b9a\u4e86\u4e0d\u660e\u786e\u7684\u90e8\u5206\u5e76\u63d0\u51fa\u4e86\u6539\u8fdb\u5efa\u8bae\u3002\u67e5\u770b\u4e00\u4e0b\u4ed6\u7684\u7f51\u9875\u5427\u3002\u611f\u8c22 Gr\u00e9goire Mesnil\uff0c\u4ed6\u5ba1\u67e5\u4e86\u7b2c\u4e8c\u90e8\u5206\uff0c\u5e76\u63d0\u4f9b\u4e86\u975e\u5e38\u6709\u8da3\u7684\u5173\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u5b9e\u7528\u5efa\u8bae\u3002\u611f\u8c22 Eddy Hung, Salim S\u00e9maoune, Karim Matrah, Ingrid von Glehn,Iain Smears, \u548c Vincent Guilbeau \u5bf9\u7b2c\u4e00\u90e8\u5206\u7684\u5ba1\u67e5\u548c\u5efa\u8bae\u3002\u6211\u8fd8\u8981\u611f\u8c22\u6211\u7684\u5cb3\u7236\uff0c\u524d\u6570\u5b66\u8001\u5e08 Michel Tessier \uff0c\u73b0\u5728\u662f Anton Chekhov \u7684\u4e00\u540d\u4f18\u79c0\u7ffb\u8bd1\uff0c\u5e2e\u52a9\u6211\u5728\u672c\u4e66\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u975e\u5e38\u597d\u7684\u6570\u5b66\u548c\u7b26\u53f7\uff0c\u5e76\u4e14\u5ba1\u67e5\u4e86\u7ebf\u6027\u4ee3\u6570 Jupyter notebook \u3002 \u5f53\u7136\uff0c\u5bf9\u6211\u4eb2\u7231\u7684\u5f1f\u5f1f\u8bf4\u4e00\u4e2a\u5de8\u5927\u7684 \u201c\u8c22\u8c22\u201d \uff0c\u4ed6\u6d4b\u8bd5\u4e86\u6bcf\u4e00\u884c\u4ee3\u7801\uff0c\u51e0\u4e4e\u5728\u6bcf\u4e2a\u90e8\u5206\u90fd\u63d0\u4f9b\u4e86\u53cd\u9988\uff0c\u5e76\u9f13\u52b1\u6211\u4ece\u7b2c\u4e00\u884c\u5230\u6700\u540e\u4e00\u884c\u3002\u7231\u4f60\uff0c\u6211\u7684\u5144\u5f1f\u3002 \u975e\u5e38\u611f\u8c22 O\u2019Reilly \u51fa\u8272\u7684\u5458\u5de5\uff0c\u7279\u522b\u662f Nicole Tache \uff0c\u4ed6\u7ed9\u51fa\u4e86\u6df1\u523b\u7684\u53cd\u9988\uff0c\u5e76\u4e14\u603b\u662f\u5f00\u6717\uff0c\u9f13\u821e\u548c\u4e50\u4e8e\u52a9\u4eba\u7684\u3002\u8fd8\u8981\u611f\u8c22 Marie Beaugureau, Ben Lorica, Mike Loukides, \u548c Laurel Ruma \u76f8\u4fe1\u8fd9\u4e2a\u9879\u76ee\u5e76\u5e2e\u52a9\u6211\u786e\u5b9a\u5176\u8303\u56f4\u3002\u611f\u8c22 Matt Hacker \u548c\u6240\u6709\u7684 Atlasteam \u56de\u7b54\u4e86\u5173\u4e8e\u683c\u5f0f\u5316\uff0casciidoc \u548c LaTeX \u7684\u6240\u6709\u6280\u672f\u56e2\u961f\u95ee\u9898\uff0c\u4e5f\u611f\u8c22 Rachel Monaghan, Nick Adams, \u548c\u6240\u6709\u7684\u5236\u4f5c\u56e2\u961f\u8fdb\u884c\u4e86\u6700\u7ec8\u7684\u5ba1\u67e5\u548c\u6570\u767e\u6b21\u7684\u4fee\u6b63\u3002 \u6700\u540e\u4f46\u4e5f\u5f88\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u6211\u975e\u5e38\u611f\u8c22\u6211\u7684\u7231\u59bb Emmanuelle \u548c\u4e09\u4e2a\u975e\u5e38\u68d2\u7684\u5b69\u5b50\uff0cAlexandre, R\u00e9mi, \u548c Gabrielle \uff0c\u5728\u8fd9\u672c\u4e66\u4e2d\u5199\u4e86\u5f88\u591a\uff0c\u95ee\u4e86\u5f88\u591a\u95ee\u9898\uff08\u8c01\u8bf4\u4e0d\u80fd\u6559 7 \u5c81\u7684\u5b69\u5b50\u795e\u7ecf\u7f51\u7edc\uff1f\uff09\uff0c\u751a\u81f3\u5e2e\u6211\u9001\u997c\u5e72\u548c\u5496\u5561\u3002\u4f60\u8fd8\u68a6\u60f3\u5f97\u5230\u4ec0\u4e48\u5462\uff1f","title":"0.\u524d\u8a00"},{"location":"0.%E5%89%8D%E8%A8%80/#_1","text":"","title":"\u96f6\u3001\u524d\u8a00"},{"location":"0.%E5%89%8D%E8%A8%80/#1","text":"2006\u5e74\uff0cGeoffrey Hinton\u7b49\u4eba\u53d1\u8868\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u8bad\u7ec3\u80fd\u591f\u8bc6\u522b\u5177\u6709\u6700\u65b0\u7cbe\u5ea6\uff08> 98%\uff09\u7684\u624b\u5199\u6570\u5b57\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u3002\u4ed6\u4eec\u79f0\u8fd9\u79cd\u6280\u672f\u4e3a\u201cDeep Learning\u201d\u3002\u5f53\u65f6\uff0c\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u5e76\u4e14\u5927\u591a\u6570\u7814\u7a76\u4eba\u5458\u81ea 20 \u4e16\u7eaa 90 \u5e74\u4ee3\u4ee5\u6765\u5c31\u653e\u5f03\u4e86\u8fd9\u4e2a\u60f3\u6cd5\u3002\u8fd9\u7bc7\u8bba\u6587\u91cd\u65b0\u6fc0\u8d77\u4e86\u79d1\u5b66\u754c\u7684\u5174\u8da3\uff0c\u4e0d\u4e45\u4e4b\u540e\uff0c\u8bb8\u591a\u65b0\u53d1\u8868\u7684\u8bba\u6587\u8868\u660e\uff0c\u6df1\u5ea6\u5b66\u4e60\u4e0d\u4ec5\u662f\u53ef\u80fd\u7684\uff0c\u800c\u4e14\u80fd\u591f\u53d6\u5f97\u5176\u4ed6\u7684 Machine Learning \u6280\u672f\u90fd\u96be\u4ee5\u5339\u914d\u7684\u4ee4\u4eba\u5174\u594b\u7684\u6210\u5c31\uff08\u501f\u52a9\u5de8\u5927\u7684\u8ba1\u7b97\u80fd\u529b\u548c\u5927\u91cf\u7684\u6570\u636e\uff09\u3002\u8fd9\u79cd\u70ed\u60c5\u5f88\u5feb\u6269\u5c55\u5230\u673a\u5668\u5b66\u4e60\u7684\u8bb8\u591a\u7684\u5176\u4ed6\u9886\u57df\u3002 Deep Learning \u5feb\u901f\u53d1\u5c55\u7684 10 \u5e74\u95f4\u548c\u673a\u5668\u5b66\u4e60\u5df2\u7ecf\u5f81\u670d\u4e86\u8fd9\u4e2a\u884c\u4e1a\uff1a\u5b83\u73b0\u5728\u6210\u4e3a\u4e86\u5f53\u4eca\u9ad8\u79d1\u6280\u4ea7\u54c1\u4e2d\u7684\u8bb8\u591a\u9ed1\u79d1\u6280\u7684\u6838\u5fc3\uff0c\u6bd4\u5982\uff0c\u4e3a\u60a8\u7684\u7f51\u7edc\u641c\u7d22\u7ed3\u679c\u6392\u540d\uff0c\u4e3a\u667a\u80fd\u624b\u673a\u7684\u8bed\u97f3\u8bc6\u522b\u63d0\u4f9b\u652f\u6301\uff0c\u4e3a\u60a8\u63a8\u8350\u60a8\u559c\u6b22\u7684\u89c6\u9891\uff0c\u5728\u56f4\u68cb\u6e38\u620f\u4e2d\u51fb\u8d25\u4e16\u754c\u51a0\u519b\u3002\u5728\u4f60\u77e5\u9053\u4e4b\u524d\uff0c\u5b83\u90fd\u53ef\u80fd\u4f1a\u9a7e\u9a76\u60a8\u7684\u6c7d\u8f66\u3002","title":"1\u3001\u673a\u5668\u5b66\u4e60\u6d77\u5578"},{"location":"0.%E5%89%8D%E8%A8%80/#2","text":"\u73b0\u5728\u4f60\u662f\u4e0d\u662f\u5bf9\u673a\u5668\u5b66\u4e60\u611f\u5230\u5174\u594b\uff0c\u5e76\u4e14\u5f88\u4e50\u610f\u52a0\u5165\u5230\u8fd9\u4e2a\u9635\u8425\u4e2d\uff1f \u4e5f\u8bb8\u4f60\u5e0c\u671b\u7ed9\u81ea\u5df1\u5236\u9020\u7684\u673a\u5668\u4eba\u8d4b\u4e88\u4e00\u4e2a\u81ea\u5df1\u7684\u5927\u8111\uff1f\u8ba9\u5b83\u53ef\u4ee5\u9762\u90e8\u8bc6\u522b\uff1f\u8fd8\u662f\u5b66\u4f1a\u5230\u5904\u8d70\u8d70\uff1f \u4e5f\u8bb8\u4f60\u7684\u516c\u53f8\u6709\u5927\u91cf\u7684\u6570\u636e\uff08\u7528\u6237\u65e5\u5fd7\uff0c\u8d22\u52a1\u6570\u636e\uff0c\u751f\u4ea7\u6570\u636e\uff0c\u673a\u5668\u4f20\u611f\u5668\u6570\u636e\uff0c\u70ed\u7ebf\u7edf\u8ba1\u6570\u636e\uff0c\u4eba\u529b\u8d44\u6e90\u62a5\u544a\u7b49\uff09\uff0c\u5982\u679c\u4f60\u77e5\u9053\u5728\u54ea\u65b9\u9762\u89c2\u5bdf\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e00\u4e9b\u9690\u85cf\u7740\u7684\u7470\u5b9d\u3002\u4f8b\u5982\uff1a * \u7ec6\u5206\u5ba2\u6237\uff0c\u4e3a\u6bcf\u4e2a\u56e2\u961f\u627e\u5230\u6700\u4f73\u7684\u8425\u9500\u7b56\u7565 * \u6839\u636e\u7c7b\u4f3c\u5ba2\u6237\u8d2d\u4e70\u7684\u4ea7\u54c1\u4e3a\u6bcf\u4e2a\u5ba2\u6237\u63a8\u8350\u4ea7\u54c1 * \u68c0\u6d4b\u54ea\u4e9b\u4ea4\u6613\u53ef\u80fd\u662f\u6b3a\u8bc8\u884c\u4e3a * \u9884\u6d4b\u4e0b\u4e00\u5e74\u7684\u6536\u5165 * \u66f4\u591a\u5e94\u7528 \u65e0\u8bba\u4ec0\u4e48\u539f\u56e0\uff0c\u4f60\u51b3\u5b9a\u5f00\u59cb\u5b66\u4e60\u673a\u5668\u5b66\u4e60\uff0c\u5e76\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u5b9e\u65bd\uff0c\u8fd9\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff01","title":"2\u3001\u60a8\u9879\u76ee\u4e2d\u7684\u673a\u5668\u5b66\u4e60"},{"location":"0.%E5%89%8D%E8%A8%80/#3","text":"\u672c\u4e66\u5047\u5b9a\u4f60\u5bf9\u673a\u5668\u5b66\u4e60\u51e0\u4e4e\u4e00\u65e0\u6240\u77e5\u3002\u5b83\u7684\u76ee\u6807\u662f\u7ed9\u4f60\u5b9e\u9645\u5b9e\u73b0\u80fd\u591f\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u7684\u7a0b\u5e8f\u6240\u9700\u7684\u6982\u5ff5\uff0c\u76f4\u89c9\u548c\u5de5\u5177\u3002 \u6211\u4eec\u5c06\u4ecb\u7ecd\u5927\u91cf\u7684\u6280\u672f\uff0c\u4ece\u6700\u7b80\u5355\u7684\u548c\u6700\u5e38\u7528\u7684\uff08\u5982\u7ebf\u6027\u56de\u5f52\uff09\u5230\u4e00\u4e9b\u5b9a\u671f\u8d62\u5f97\u6bd4\u8d5b\u7684\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u73b0\u6210\u7684 Python \u6846\u67b6\uff0c\u800c\u4e0d\u662f\u5b9e\u73b0\u6211\u4eec\u81ea\u5df1\u7684\u6bcf\u4e2a\u7b97\u6cd5\u7684\u73a9\u5177\u7248\u672c\uff1a Scikit-learn \u975e\u5e38\u6613\u4e8e\u4f7f\u7528\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e86\u8bb8\u591a\u6709\u6548\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u56e0\u6b64\u5b83\u4e3a\u5b66\u4e60\u673a\u5668\u5b66\u4e60\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u5207\u5165\u70b9\u3002 TensorFlow \u662f\u4f7f\u7528\u6570\u636e\u6d41\u56fe\u8fdb\u884c\u5206\u5e03\u5f0f\u6570\u503c\u8ba1\u7b97\u7684\u66f4\u590d\u6742\u7684\u5e93\u3002\u5b83\u901a\u8fc7\u5728\u6f5c\u5728\u7684\u6570\u5343\u4e2a\u591a GPU \u670d\u52a1\u5668\u4e0a\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0c\u53ef\u4ee5\u9ad8\u6548\u5730\u8bad\u7ec3\u548c\u8fd0\u884c\u975e\u5e38\u5927\u7684\u795e\u7ecf\u7f51\u7edc\u3002TensorFlow \u662f\u88ab Google \u521b\u9020\u7684\uff0c\u652f\u6301\u5176\u5927\u578b\u673a\u5668\u5b66\u4e60\u5e94\u7528\u7a0b\u5e8f\u3002\u4e8e 2015\u5e7411\u6708\u5f00\u6e90\u3002 \u672c\u4e66\u503e\u5411\u4e8e\u5b9e\u9645\u64cd\u4f5c\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u5177\u4f53\u7684\u5b9e\u4f8b\u548c\u4e00\u70b9\u7406\u8bba\u6765\u589e\u52a0\u5bf9\u673a\u5668\u5b66\u4e60\u7684\u76f4\u89c2\u7406\u89e3\u3002\u867d\u7136\u4f60\u53ef\u4ee5\u5728\u4e0d\u62ff\u7b14\u8bb0\u672c\u7535\u8111\u7684\u60c5\u51b5\u4e0b\u9605\u8bfb\u6b64\u4e66\uff0c\u4f46\u662f\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4f60\u901a\u8fc7 https://github.com/ageron/handson-ml \u5728\u7ebf\u5b9e\u73b0 Jupyter notebooks \u4e0a\u7684\u4ee3\u7801\u793a\u4f8b\u3002","title":"3\u3001\u76ee\u6807\u548c\u65b9\u6cd5"},{"location":"0.%E5%89%8D%E8%A8%80/#4","text":"\u672c\u4e66\u5047\u5b9a\u60a8\u6709\u4e00\u4e9b Python \u7f16\u7a0b\u7ecf\u9a8c\uff0c\u5e76\u4e14\u6bd4\u8f83\u719f\u6089 Python \u7684\u4e3b\u8981\u79d1\u5b66\u5e93\uff0c\u7279\u522b\u662f NumPy\uff0cPandas \u548c Matplotlib \u3002 \u53e6\u5916\uff0c\u5982\u679c\u4f60\u5173\u5fc3\u7684\u662f\u5e95\u5c42\u5b9e\u73b0/\u539f\u7406\uff0c\u4f60\u5e94\u8be5\u5bf9\u5927\u5b66\u6c34\u5e73\u7684\u6570\u5b66\uff08\u5fae\u79ef\u5206\uff0c\u7ebf\u6027\u4ee3\u6570\uff0c\u6982\u7387\u548c\u7edf\u8ba1\u5b66\uff09\u6709\u4e00\u4e9b\u4e86\u89e3\u3002 \u5982\u679c\u4f60\u8fd8\u4e0d\u4e86\u89e3 Python\uff0chttp://learnpython.org/ \u662f\u4f60\u5b66\u4e60\u4f7f\u7528 Python \u7684\u597d\u5730\u65b9\u3002 python.org \u5b98\u65b9\u6559\u7a0b\u4e5f\u662f\u76f8\u5f53\u4e0d\u9519\u7684\u3002 \u5982\u679c\u4f60\u4ece\u672a\u4f7f\u7528\u8fc7 Jupyter \uff0c\u7b2c 2 \u7ae0\u5c06\u6307\u5bfc\u4f60\u5b8c\u6210\u5b89\u88c5\u548c\u57fa\u672c\u64cd\u4f5c\uff1a\u5b83\u662f\u4f60\u5de5\u5177\u7bb1\u4e2d\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\u3002 \u5982\u679c\u4f60\u4e0d\u719f\u6089 Python \u7684\u79d1\u5b66\u5e93\uff0c\u63d0\u4f9b\u7684\u4e00\u4e9b Jupyter notebook \u5305\u62ec\u4e86\u4e00\u4e9b\u6559\u7a0b\u3002\u8fd8\u6709\u4e00\u4e2a\u7ebf\u6027\u4ee3\u6570\u7684\u5feb\u901f\u6570\u5b66\u6559\u7a0b\u3002","title":"4\u3001\u51c6\u5907\u6761\u4ef6"},{"location":"0.%E5%89%8D%E8%A8%80/#5","text":"\u8fd9\u672c\u4e66\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u3002 \u7b2c\u4e00\u90e8\u5206\uff0c\u673a\u5668\u5b66\u4e60\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u6db5\u76d6\u4ee5\u4e0b\u4e3b\u9898\uff1a \u4ec0\u4e48\u662f\u673a\u5668\u5b66\u4e60\uff1f\u5b83\u88ab\u8bd5\u56fe\u7528\u6765\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff1f\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u7684\u4e3b\u8981\u7c7b\u522b\u548c\u57fa\u672c\u6982\u5ff5\u662f\u4ec0\u4e48\uff1f \u5178\u578b\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u4e2d\u7684\u4e3b\u8981\u6b65\u9aa4\u3002 \u901a\u8fc7\u62df\u5408\u6570\u636e\u6765\u5b66\u4e60\u6a21\u578b\u3002 \u4f18\u5316\u6210\u672c\u51fd\u6570\uff08cost function\uff09\u3002 \u5904\u7406\uff0c\u6e05\u6d17\u548c\u51c6\u5907\u6570\u636e\u3002 \u9009\u62e9\u548c\u8bbe\u8ba1\u7279\u5f81\u3002 \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u9009\u62e9\u4e00\u4e2a\u6a21\u578b\u5e76\u8c03\u6574\u8d85\u53c2\u6570\u3002 \u673a\u5668\u5b66\u4e60\u7684\u4e3b\u8981\u6311\u6218\uff0c\u7279\u522b\u662f\u6b20\u62df\u5408\u548c\u8fc7\u62df\u5408\uff08\u504f\u5dee\u548c\u65b9\u5dee\u6743\u8861\uff09\u3002 \u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u964d\u7ef4\u4ee5\u5bf9\u6297 the curse of dimensionality\uff08\u7ef4\u5ea6\u8bc5\u5492\uff09 \u6700\u5e38\u89c1\u7684\u5b66\u4e60\u7b97\u6cd5\uff1a\u7ebf\u6027\u548c\u591a\u9879\u5f0f\u56de\u5f52\uff0c Logistic \u56de\u5f52\uff0ck-\u6700\u8fd1\u90bb\uff0c\u652f\u6301\u5411\u91cf\u673a\uff0c\u51b3\u7b56\u6811\uff0c\u968f\u673a\u68ee\u6797\u548c\u96c6\u6210\u65b9\u6cd5\u3002 \u7b2c\u4e8c\u90e8\u5206\uff0c\u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5b66\u4e60\uff0c\u5305\u62ec\u4ee5\u4e0b\u4e3b\u9898\uff1a \u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc\uff1f\u5b83\u4eec\u6709\u5565\u4f18\u52bf\uff1f \u4f7f\u7528 TensorFlow \u6784\u5efa\u548c\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u3002 \u6700\u91cd\u8981\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\uff1a\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5377\u79ef\u7f51\u7edc\uff0c\u9012\u5f52\u7f51\u7edc\uff0c\u957f\u671f\u77ed\u671f\u8bb0\u5fc6\u7f51\u7edc\uff08LSTM\uff09\u548c\u81ea\u52a8\u7f16\u7801\u5668\u3002 \u8bad\u7ec3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u6280\u5de7\u3002 \u5bf9\u4e8e\u5927\u6570\u636e\u96c6\u7f29\u653e\u795e\u7ecf\u7f51\u7edc\u3002 \u5f3a\u5316\u5b66\u4e60\u3002 \u7b2c\u4e00\u90e8\u5206\u4e3b\u8981\u57fa\u4e8e scikit-learn \uff0c\u800c\u7b2c\u4e8c\u90e8\u5206\u5219\u4f7f\u7528 TensorFlow \u3002 \u6ce8\u610f\uff1a\u4e0d\u8981\u592a\u6025\u4e8e\u6df1\u5165\u5b66\u4e60\u5230\u6838\u5fc3\u77e5\u8bc6\uff1a\u6df1\u5ea6\u5b66\u4e60\u65e0\u7591\u662f\u673a\u5668\u5b66\u4e60\u4e2d\u6700\u4ee4\u4eba\u5174\u594b\u7684\u9886\u57df\u4e4b\u4e00\uff0c\u4f46\u662f\u4f60\u5e94\u8be5\u9996\u5148\u638c\u63e1\u57fa\u7840\u77e5\u8bc6\u3002\u800c\u4e14\uff0c\u5927\u591a\u6570\u95ee\u9898\u53ef\u4ee5\u7528\u8f83\u7b80\u5355\u7684\u6280\u672f\u5f88\u597d\u5730\u89e3\u51b3\uff08\u800c\u4e0d\u9700\u8981\u6df1\u5ea6\u5b66\u4e60\uff09\uff0c\u6bd4\u5982\u968f\u673a\u68ee\u6797\u548c\u96c6\u6210\u65b9\u6cd5\uff08\u6211\u4eec\u4f1a\u5728\u7b2c\u4e00\u90e8\u5206\u8fdb\u884c\u8ba8\u8bba\uff09\u3002\u5982\u679c\u4f60\u62e5\u6709\u8db3\u591f\u7684\u6570\u636e\uff0c\u8ba1\u7b97\u80fd\u529b\u548c\u8010\u5fc3\uff0c\u6df1\u5ea6\u5b66\u4e60\u662f\u6700\u9002\u5408\u590d\u6742\u7684\u95ee\u9898\u7684\uff0c\u5982\u56fe\u50cf\u8bc6\u522b\uff0c\u8bed\u97f3\u8bc6\u522b\u6216\u81ea\u7136\u8bed\u8a00\u5904\u7406\u3002","title":"5\u3001\u8def\u7ebf\u56fe"},{"location":"0.%E5%89%8D%E8%A8%80/#6","text":"\u6709\u8bb8\u591a\u8d44\u6e90\u53ef\u7528\u4e8e\u4e86\u89e3\u673a\u5668\u5b66\u4e60\u3002Andrew Ng \u5728 Coursera \u4e0a\u7684 ML \u8bfe\u7a0b \u548c Geoffrey Hinton \u5173\u4e8e \u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5b66\u4e60 \u7684\u8bfe\u7a0b\u90fd\u662f\u975e\u5e38\u68d2\u7684\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u8bfe\u7a0b\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\u6295\u5165\uff08\u5927\u6982\u662f\u51e0\u4e2a\u6708\uff09\u3002 \u8fd8\u6709\u8bb8\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u6bd4\u8f83\u6709\u8da3\u7684\u7f51\u7ad9\uff0c\u5f53\u7136\u8fd8\u5305\u62ec scikit-learn \u51fa\u8272\u7684 \u7528\u6237\u6307\u5357 \u3002\u4f60\u53ef\u80fd\u4f1a\u559c\u6b22\u4e0a Dataquest \uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u4ea4\u4e92\u5f0f\u6559\u7a0b\uff0c\u8fd8\u6709 ML \u535a\u5ba2\uff0c\u6bd4\u5982\u90a3\u4e9b\u5728 Quora \u4e0a\u5217\u51fa\u6765\u7684\u535a\u5ba2\u3002\u6700\u540e\uff0c Deep Learning \u7f51\u7ad9 \u6709\u4e00\u4e2a\u5f88\u597d\u7684\u8d44\u6e90\u5217\u8868\u6765\u5b66\u4e60\u66f4\u591a\u3002 \u5f53\u7136\uff0c\u8fd8\u6709\u5f88\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u5176\u4ed6\u4ecb\u7ecd\u6027\u4e66\u7c4d\uff0c\u7279\u522b\u662f\uff1a Joel Grus, Data Science from Scratch (O\u2019Reilly). \u8fd9\u672c\u4e66\u4ecb\u7ecd\u4e86\u673a\u5668\u5b66\u4e60\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5e76\u5728\u7eaf Python \u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e9b\u4e3b\u8981\u7b97\u6cd5\uff08\u4ece\u540d\u5b57\u4e0a\u770b\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u4ece\u5934\u5f00\u59cb\uff09\u3002 Stephen Marsland, Machine Learning: An Algorithmic Perspective (Chapman andHall). \u8fd9\u672c\u4e66\u5bf9\u673a\u5668\u5b66\u4e60\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u4ecb\u7ecd\uff0c\u6db5\u76d6\u4e86\u5e7f\u6cdb\u7684\u4e3b\u9898\uff0cPython \u4e2d\u7684\u4ee3\u7801\u793a\u4f8b\uff08\u4e5f\u662f\u4ece\u96f6\u5f00\u59cb\uff0c\u4f46\u662f\u4f7f\u7528 NumPy\uff09\u3002 Sebastian Raschka, Python Machine Learning (Packt Publishing). \u672c\u4e66\u4e5f\u5bf9\u673a\u5668\u5b66\u4e60\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u4ecb\u7ecd\uff0c\u4f46\u662f\u5229\u7528\u4e86 Python \u7684\u5f00\u6e90\u5e93\uff08Pylearn 2 \u548c Theano\uff09\u3002 Yaser S. Abu-Mostafa, Malik Magdon-Ismail, and Hsuan-Tien Lin, Learning fromData (AMLBook). \u5bf9 ML \u6709\u4e00\u4e2a\u76f8\u5bf9\u7406\u8bba\u5316\u7684\u4ecb\u7ecd\uff0c\u8fd9\u672c\u4e66\u63d0\u4f9b\u4e86\u6bd4\u8f83\u6df1\u523b\u7684\u89c1\u89e3\uff0c\u7279\u522b\u662f bias/variance tradeoff \uff08\u504f\u5dee/\u65b9\u5dee \u6743\u8861\uff09\uff08\u89c1\u7b2c 4 \u7ae0\uff09\u3002 Stuart Russell and Peter Norvig, Artificial Intelligence: A Modern Approach, 3rd Edition (Pearson). \u8fd9\u662f\u4e00\u672c\u5f88\u597d\u7684\uff08\u5e76\u4e14\u5f88\u5927\uff09\u7684\u4e66\uff0c\u6db5\u76d6\u4e86\u5305\u62ec\u673a\u5668\u5b66\u4e60\u5728\u5185\u7684\u5927\u91cf\u4e3b\u9898\u3002\u8fd9\u6709\u52a9\u4e8e\u66f4\u52a0\u6df1\u523b\u5730\u7406\u89e3 ML \u3002 \u6700\u540e\uff0c\u4e00\u4e2a\u5f88\u597d\u7684\u5b66\u4e60\u65b9\u6cd5\u5c31\u662f\u52a0\u5165 ML \u7ade\u8d5b\u7f51\u7ad9\uff0c\u4f8b\u5982 kaggle.com \uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\u4e0a\u953b\u70bc\u81ea\u5df1\u7684\u6280\u80fd\uff0c\u5e76\u4ece\u4e00\u4e9b\u6700\u597d\u7684 ML \u4e13\u4e1a\u4eba\u58eb\u90a3\u91cc\u83b7\u5f97\u5e2e\u52a9\u548c\u89c1\u89e3\u3002","title":"6\u3001\u5176\u4ed6\u8d44\u6e90"},{"location":"0.%E5%89%8D%E8%A8%80/#7","text":"\u672c\u4e66\u4f7f\u7528\u4ee5\u4e0b\u5370\u5237\u7ea6\u5b9a\uff1a \u659c\u4f53 \u2014\u2014 \u6307\u793a\u65b0\u672f\u8bed\uff0c\u7f51\u5740\uff0c\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u6269\u5c55\u540d\u3002 \u7b49\u5bbd \u2014\u2014 \u7528\u4e8e\u7a0b\u5e8f\u6e05\u5355\uff0c\u4ee5\u53ca\u6bb5\u843d\u5185\u7528\u4e8e\u5f15\u7528\u7a0b\u5e8f\u5143\u7d20\uff0c\u5982\u53d8\u91cf\u6216\u51fd\u6570\u540d\u79f0\uff0c\u6570\u636e\u5e93\uff0c\u6570\u636e\u7c7b\u578b\uff0c\u73af\u5883\u53d8\u91cf\uff0c\u8bed\u53e5\u548c\u5173\u952e\u5b57\u3002 \u7b49\u5bbd\u7c97\u4f53 \u2014\u2014 \u663e\u793a\u5e94\u7531\u7528\u6237\u9010\u5b57\u8f93\u5165\u7684\u547d\u4ee4\u6216\u5176\u4ed6\u6587\u672c\u3002 \u7b49\u5bbd\u659c\u4f53 \u2014\u2014 \u663e\u793a\u5e94\u7531\u7528\u6237\u63d0\u4f9b\u7684\u503c\u6216\u7531\u4e0a\u4e0b\u6587\u786e\u5b9a\u7684\u503c\u66ff\u6362\u7684\u6587\u672c\u3002 \u5c0f\u677e\u9f20\u56fe\u6807 \u2014\u2014 \u6b64\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u5c0f\u63d0\u793a\u6216\u5efa\u8bae\u3002 \u5c0f\u4e4c\u9e26\u56fe\u6807 \u2014\u2014 \u6b64\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u666e\u901a\u7684\u8bf4\u660e\u3002 \u5c0f\u874e\u5b50\u56fe\u6807 \u2014\u2014 \u6b64\u5143\u7d20\u8868\u793a\u4e00\u4e2a\u8b66\u544a\u548c\u6ce8\u610f\u3002","title":"7\u3001\u672c\u4e66\u4e2d\u7684\u4e00\u4e9b\u7ea6\u5b9a"},{"location":"0.%E5%89%8D%E8%A8%80/#8","text":"\u8865\u5145\u6750\u6599\uff08\u4ee3\u7801\u793a\u4f8b\uff0c\u7ec3\u4e60\u9898\u7b49\uff09\u53ef\u4ee5\u4ece https://github.com/ageron/handson-ml \u4e0b\u8f7d\u3002 \u8fd9\u672c\u4e66\u662f\u4e3a\u4e86\u5e2e\u52a9\u4f60\u5b8c\u6210\u5de5\u4f5c\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u672c\u4e66\u63d0\u4f9b\u4e86\u793a\u4f8b\u4ee3\u7801\uff0c\u5219\u53ef\u4ee5\u5728\u7a0b\u5e8f\u548c\u6587\u6863\u4e2d\u4f7f\u7528\u5b83\u3002\u9664\u975e\u4f60\u590d\u5236\u4e86\u5927\u90e8\u5206\u4ee3\u7801\uff0c\u5426\u5219\u4f60\u65e0\u9700\u8054\u7cfb\u6211\u4eec\u83b7\u5f97\u8bb8\u53ef\u3002\u4f8b\u5982\uff0c\u7f16\u5199\u4f7f\u7528\u672c\u4e66\u4e2d\u51e0\u4e2a\u4ee3\u7801\u5757\u7684\u7a0b\u5e8f\u4e0d\u9700\u8981\u8bb8\u53ef\u3002\u9500\u552e\u6216\u8005\u5206\u53d1 O\u2019Reilly \u4e66\u7c4d\u7684 CD-ROM \u4f8b\u5b50\u9700\u8981\u83b7\u5f97\u8bb8\u53ef\u3002 \u901a\u8fc7\u5f15\u7528\u672c\u4e66\u548c\u4f7f\u7528\u793a\u4f8b\u4ee3\u7801\u6765\u56de\u7b54\u95ee\u9898\u5e76\u4e0d\u9700\u8981\u83b7\u5f97\u8bb8\u53ef\u3002\u5c06\u5927\u91cf\u6765\u81ea\u672c\u4e66\u7684\u793a\u4f8b\u4ee3\u7801\u6574\u5408\u5230\u4ea7\u54c1\u6587\u6863\u4e2d\u5e76\u4e0d\u9700\u8981\u83b7\u5f97\u8bb8\u53ef\u3002 \u6211\u4eec\u611f\u8c22\uff0c\u4f46\u662f\u5e76\u4e0d\u8981\u6c42\uff0c\u8d21\u732e\u3002\u8d21\u732e\u901a\u5e38\u5305\u62ec\u6807\u9898\uff0c\u4f5c\u8005\uff0c\u51fa\u7248\u5546\u548c ISBN \u3002\u4f8b\u5982\uff1a\u201cHands-On Machine Learning withScikit-Learn and TensorFlow by Aur\u00e9lien G\u00e9ron (O\u2019Reilly). Copyright 2017 Aur\u00e9lienG\u00e9ron, 978-1-491-96229-9.\u201d \u5982\u679c\u60a8\u89c9\u5f97\u60a8\u5bf9\u4ee3\u7801\u793a\u4f8b\u7684\u4f7f\u7528\u8d85\u51fa\u4e86\u5408\u7406\u4f7f\u7528\u8303\u56f4\u6216\u4e0a\u8ff0\u6743\u9650\uff0c\u8bf7\u968f\u65f6\u8054\u7cfb\u6211\u4eec\uff1apermissions@oreilly.com \u3002","title":"8\u3001\u4f7f\u7528\u4ee3\u7801\u793a\u4f8b"},{"location":"0.%E5%89%8D%E8%A8%80/#9oreilly-safari","text":"Safari \uff08\u4ee5\u524d\u88ab\u79f0\u4e3a Safari Books Online\uff09\u662f\u4e00\u4e2a\u9488\u5bf9\u4f01\u4e1a\uff0c\u653f\u5e9c\uff0c\u6559\u80b2\u5de5\u4f5c\u8005\u548c\u4e2a\u4eba\u7684\u57fa\u4e8e\u4f1a\u5458\u7684\u57f9\u8bad\u548c\u53c2\u8003\u5e73\u53f0\u3002 \u4f1a\u5458\u53ef\u4ee5\u8bbf\u95ee 250 \u591a\u5bb6\u53d1\u5e03\u5546\u7684\u6570\u5343\u672c\u56fe\u4e66\uff0c\u57f9\u8bad\u89c6\u9891\uff0c\u5b66\u4e60\u8def\u5f84\uff0c\u4e92\u52a8\u6559\u7a0b\u548c\u7b56\u5212\u64ad\u653e\u5217\u8868\uff0c\u5176\u4e2d\u5305\u62ec O\u2019Reilly Media\uff0c\u54c8\u4f5b\u5546\u4e1a\u8bc4\u8bba\uff0cPrentice Hall \u4e13\u4e1a\u4eba\u5458\uff0cAddison-Wesley \u4e13\u4e1a\u4eba\u5458\uff0cMicrosoft Press\uff0c Sams\uff0c Que\uff0c Peachpit Press\uff0c Adobe\uff0c Focal Press\uff0c Cisco Press \u7b49\u3002\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee http://oreilly.com/safari \u3002","title":"9\u3001O\u2019Reilly Safari"},{"location":"0.%E5%89%8D%E8%A8%80/#10","text":"\u8bf7\u5411\u51fa\u7248\u5546\u53d1\u8868\u6709\u5173\u672c\u4e66\u7684\u8bc4\u8bba\u548c\u95ee\u9898\uff1a O\u2019Reilly Media, Inc. 1005 Gravenstein Highway North Sebastopol, CA 95472 800-998-9938 \uff08\u5728\u7f8e\u56fd\u6216\u8005\u52a0\u62ff\u5927\uff09 707-829-0515 \uff08\u56fd\u9645\u6216\u5730\u533a\uff09 707-829-0104 \uff08\u4f20\u771f\uff09 \u6211\u4eec\u6709\u4e00\u4e2a\u8fd9\u672c\u4e66\u7684\u7f51\u9875\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5217\u51fa\u4e86\u52d8\u8bef\u8868\uff0c\u4f8b\u5b50\u548c\u4efb\u4f55\u989d\u5916\u7684\u4fe1\u606f\u3002\u4f60\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u9875 http://bit.ly/hands-on-machine-learning-with-scikit-learn-and-tensorflow \u8981\u8bc4\u8bba\u6216\u8005\u8be2\u95ee\u6709\u5173\u672c\u4e66\u7684\u6280\u672f\u95ee\u9898\uff0c\u8bf7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u5230 bookquestions@oreilly.com \u3002 \u6709\u5173\u6211\u4eec\u7684\u4e66\u7c4d\uff0c\u8bfe\u7a0b\uff0c\u4f1a\u8bae\u548c\u65b0\u95fb\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684\u7f51\u7ad9 http://www.oreilly.com \u3002 \u5728 facebook \u4e0a\u627e\u5230\u6211\u4eec\uff1a http://facebook.com/oreilly \u5728 Twitter \u4e0a\u5173\u6ce8\u6211\u4eec\uff1ahttp://twitter.com/oreillymedia \u5728 Youtube \u4e0a\u89c2\u770b\u6211\u4eec\u7684\u89c6\u9891\uff1a http://www.youtube.com/oreillymedia","title":"10\u3001\u5982\u4f55\u8054\u7cfb\u6211\u4eec"},{"location":"0.%E5%89%8D%E8%A8%80/#11","text":"\u6211\u8981\u611f\u8c22\u6211\u7684 Google \u540c\u4e8b\uff0c\u7279\u522b\u662f Youtube \u89c6\u9891\u5206\u7c7b\u5c0f\u7ec4\uff0c\u6559\u7ed9\u6211\u5f88\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u77e5\u8bc6\u3002\u6ca1\u6709\u4ed6\u4eec\uff0c\u6211\u6c38\u8fdc\u65e0\u6cd5\u5f00\u59cb\u8fd9\u4e2a\u9879\u76ee\u3002\u7279\u522b\u611f\u8c22\u6211\u7684\u4e2a\u4eba ML \u4e13\u5bb6\uff1aCl\u00e9ment Courbet, Julien Dubois, Mathias Kende, Daniel Kitachewsky, James Pack, Alexander Pak, Anosh Raj, Vitor Sessak, Wiktor Tomczak, Ingrid von Glehn, Rich Washington, \u4ee5\u53ca Youtube Paris \u7684\u6240\u6709\u4eba\u3002 \u6211\u975e\u5e38\u611f\u8c22\u6240\u6709\u90a3\u4e9b\u4ece\u7e41\u5fd9\u7684\u751f\u6d3b\u4e2d\u62bd\u51fa\u65f6\u95f4\u6765\u4ed4\u7ec6\u9605\u8bfb\u6211\u7684\u4e66\u7684\u4eba\u3002\u611f\u8c22 Pete Warden \u56de\u7b54\u4e86\u6211\u6240\u6709\u7684 TensorFlow \u7684\u95ee\u9898\uff0c\u56de\u987e\u7b2c\u4e8c\u90e8\u5206\uff0c\u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u8da3\u7684\u89c1\u89e3\uff0c\u5f53\u7136\u4e5f\u6210\u4e3a\u4e86 TensorFlow \u6838\u5fc3\u56e2\u961f\u7684\u4e00\u5458\u3002\u4f60\u4e00\u5b9a\u60f3\u8981\u770b\u770b\u4ed6\u7684 \u535a\u5ba2 \uff01\u975e\u5e38\u611f\u8c22 Lukas Biewald \u5bf9\u7b2c\u4e8c\u90e8\u5206\u7684\u975e\u5e38\u5168\u9762\u7684\u5ba1\u67e5\uff1a\u4ed6\u6beb\u4e0d\u7559\u60c5\u5730\u5c1d\u8bd5\u4e86\u6240\u6709\u7684\u4ee3\u7801\uff08\u5e76\u4e14\u53d1\u73b0\u4e86\u4e00\u4e9b\u9519\u8bef\uff09\uff0c\u505a\u51fa\u4e86\u8bb8\u591a\u4f1f\u5927\u7684\u5efa\u8bae\uff0c\u800c\u4e14\u4ed6\u7684\u70ed\u60c5\u662f\u5177\u6709\u611f\u67d3\u529b\u7684\u3002\u4f60\u5e94\u8be5\u770b\u770b\u4ed6\u7684\u535a\u5ba2\uff0c\u548c\u4ed6\u7684\u8d85\u9177\u7684\u673a\u5668\u4eba\uff01\u611f\u8c22 Justin Francis \uff0c\u4ed6\u4e5f\u975e\u5e38\u5168\u9762\u5730\u5ba1\u67e5\u4e86\u7b2c\u4e8c\u90e8\u5206\uff0c\u7279\u522b\u662f\u5728\u7b2c 16 \u7ae0\u63d0\u5230\u4e86\u9519\u8bef\u5e76\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u89c1\u89e3\u3002\u4f60\u53ef\u4ee5\u5728 TensorFlow \u4e0a\u770b\u5230\u4ed6\u7684\u5e16\u5b50\uff01 \u4e5f\u975e\u5e38\u611f\u8c22 David Andrzejewski\uff0c\u4ed6\u5ba1\u67e5\u4e86\u7b2c\u4e00\u90e8\u5206\uff0c\u63d0\u4f9b\u4e86\u975e\u5e38\u6709\u7528\u7684\u53cd\u9988\u610f\u89c1\uff0c\u786e\u5b9a\u4e86\u4e0d\u660e\u786e\u7684\u90e8\u5206\u5e76\u63d0\u51fa\u4e86\u6539\u8fdb\u5efa\u8bae\u3002\u67e5\u770b\u4e00\u4e0b\u4ed6\u7684\u7f51\u9875\u5427\u3002\u611f\u8c22 Gr\u00e9goire Mesnil\uff0c\u4ed6\u5ba1\u67e5\u4e86\u7b2c\u4e8c\u90e8\u5206\uff0c\u5e76\u63d0\u4f9b\u4e86\u975e\u5e38\u6709\u8da3\u7684\u5173\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u5b9e\u7528\u5efa\u8bae\u3002\u611f\u8c22 Eddy Hung, Salim S\u00e9maoune, Karim Matrah, Ingrid von Glehn,Iain Smears, \u548c Vincent Guilbeau \u5bf9\u7b2c\u4e00\u90e8\u5206\u7684\u5ba1\u67e5\u548c\u5efa\u8bae\u3002\u6211\u8fd8\u8981\u611f\u8c22\u6211\u7684\u5cb3\u7236\uff0c\u524d\u6570\u5b66\u8001\u5e08 Michel Tessier \uff0c\u73b0\u5728\u662f Anton Chekhov \u7684\u4e00\u540d\u4f18\u79c0\u7ffb\u8bd1\uff0c\u5e2e\u52a9\u6211\u5728\u672c\u4e66\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u975e\u5e38\u597d\u7684\u6570\u5b66\u548c\u7b26\u53f7\uff0c\u5e76\u4e14\u5ba1\u67e5\u4e86\u7ebf\u6027\u4ee3\u6570 Jupyter notebook \u3002 \u5f53\u7136\uff0c\u5bf9\u6211\u4eb2\u7231\u7684\u5f1f\u5f1f\u8bf4\u4e00\u4e2a\u5de8\u5927\u7684 \u201c\u8c22\u8c22\u201d \uff0c\u4ed6\u6d4b\u8bd5\u4e86\u6bcf\u4e00\u884c\u4ee3\u7801\uff0c\u51e0\u4e4e\u5728\u6bcf\u4e2a\u90e8\u5206\u90fd\u63d0\u4f9b\u4e86\u53cd\u9988\uff0c\u5e76\u9f13\u52b1\u6211\u4ece\u7b2c\u4e00\u884c\u5230\u6700\u540e\u4e00\u884c\u3002\u7231\u4f60\uff0c\u6211\u7684\u5144\u5f1f\u3002 \u975e\u5e38\u611f\u8c22 O\u2019Reilly \u51fa\u8272\u7684\u5458\u5de5\uff0c\u7279\u522b\u662f Nicole Tache \uff0c\u4ed6\u7ed9\u51fa\u4e86\u6df1\u523b\u7684\u53cd\u9988\uff0c\u5e76\u4e14\u603b\u662f\u5f00\u6717\uff0c\u9f13\u821e\u548c\u4e50\u4e8e\u52a9\u4eba\u7684\u3002\u8fd8\u8981\u611f\u8c22 Marie Beaugureau, Ben Lorica, Mike Loukides, \u548c Laurel Ruma \u76f8\u4fe1\u8fd9\u4e2a\u9879\u76ee\u5e76\u5e2e\u52a9\u6211\u786e\u5b9a\u5176\u8303\u56f4\u3002\u611f\u8c22 Matt Hacker \u548c\u6240\u6709\u7684 Atlasteam \u56de\u7b54\u4e86\u5173\u4e8e\u683c\u5f0f\u5316\uff0casciidoc \u548c LaTeX \u7684\u6240\u6709\u6280\u672f\u56e2\u961f\u95ee\u9898\uff0c\u4e5f\u611f\u8c22 Rachel Monaghan, Nick Adams, \u548c\u6240\u6709\u7684\u5236\u4f5c\u56e2\u961f\u8fdb\u884c\u4e86\u6700\u7ec8\u7684\u5ba1\u67e5\u548c\u6570\u767e\u6b21\u7684\u4fee\u6b63\u3002 \u6700\u540e\u4f46\u4e5f\u5f88\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u6211\u975e\u5e38\u611f\u8c22\u6211\u7684\u7231\u59bb Emmanuelle \u548c\u4e09\u4e2a\u975e\u5e38\u68d2\u7684\u5b69\u5b50\uff0cAlexandre, R\u00e9mi, \u548c Gabrielle \uff0c\u5728\u8fd9\u672c\u4e66\u4e2d\u5199\u4e86\u5f88\u591a\uff0c\u95ee\u4e86\u5f88\u591a\u95ee\u9898\uff08\u8c01\u8bf4\u4e0d\u80fd\u6559 7 \u5c81\u7684\u5b69\u5b50\u795e\u7ecf\u7f51\u7edc\uff1f\uff09\uff0c\u751a\u81f3\u5e2e\u6211\u9001\u997c\u5e72\u548c\u5496\u5561\u3002\u4f60\u8fd8\u68a6\u60f3\u5f97\u5230\u4ec0\u4e48\u5462\uff1f","title":"11\u3001\u81f4\u8c22"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/","text":"\u4e00\u3001\u673a\u5668\u5b66\u4e60\u6982\u89c8 \u5927\u591a\u6570\u4eba\u542c\u5230\u201c\u673a\u5668\u5b66\u4e60\u201d\uff0c\u5f80\u5f80\u4f1a\u5728\u8111\u6d77\u4e2d\u52fe\u52d2\u51fa\u4e00\u4e2a\u673a\u5668\u4eba\uff1a\u4e00\u4e2a\u53ef\u9760\u7684\u7ba1\u5bb6\uff0c\u6216\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u7ec8\u7ed3\u8005\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u95ee\u7684\u662f\u8c01\u3002\u4f46\u662f\u673a\u5668\u5b66\u4e60\u5e76\u4e0d\u662f\u672a\u6765\u7684\u5e7b\u60f3\uff0c\u5b83\u5df2\u7ecf\u6765\u5230\u6211\u4eec\u8eab\u8fb9\u4e86\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e00\u4e9b\u7279\u5b9a\u9886\u57df\u5df2\u7ecf\u5e94\u7528\u673a\u5668\u5b66\u4e60\u51e0\u5341\u5e74\u4e86\uff0c\u6bd4\u5982\u5149\u5b66\u5b57\u7b26\u8bc6\u522b \uff08Optical Character Recognition\uff0cOCR\uff09\u3002\u4f46\u662f\u76f4\u5230 1990 \u5e74\u4ee3\uff0c\u7b2c\u4e00\u4e2a\u5f71\u54cd\u4e86\u6570\u4ebf\u4eba\u7684\u673a\u5668\u5b66\u4e60\u5e94\u7528\u624d\u771f\u6b63\u6210\u719f\uff0c\u5b83\u5c31\u662f\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\uff08spam filter\uff09\u3002\u867d\u7136\u5e76\u4e0d\u662f\u4e00\u4e2a\u6709\u81ea\u6211\u610f\u8bc6\u7684\u5929\u7f51\u7cfb\u7edf\uff08Skynet\uff09\uff0c\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u4ece\u6280\u672f\u4e0a\u662f\u7b26\u5408\u673a\u5668\u5b66\u4e60\u7684\uff08\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u8fdb\u884c\u5b66\u4e60\uff0c\u7528\u6237\u51e0\u4e4e\u4e0d\u7528\u518d\u6807\u8bb0\u67d0\u4e2a\u90ae\u4ef6\u4e3a\u5783\u573e\u90ae\u4ef6\uff09\u3002\u540e\u6765\u51fa\u73b0\u4e86\u66f4\u591a\u7684\u6570\u4ee5\u767e\u8ba1\u7684\u673a\u5668\u5b66\u4e60\u4ea7\u54c1\uff0c\u652f\u6491\u4e86\u66f4\u591a\u4f60\u7ecf\u5e38\u4f7f\u7528\u7684\u4ea7\u54c1\u548c\u529f\u80fd\uff0c\u4ece\u63a8\u8350\u7cfb\u7edf\u5230\u8bed\u97f3\u8bc6\u522b\u3002 \u673a\u5668\u5b66\u4e60\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u5206\u522b\u662f\u4ec0\u4e48\u5462\uff1f\u786e\u5207\u7684\u8bb2\uff0c\u673a\u5668\u8fdb\u884c\u5b66\u4e60\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u5982\u679c\u6211\u4e0b\u8f7d\u4e86\u4e00\u4efd\u7ef4\u57fa\u767e\u79d1\u7684\u62f7\u8d1d\uff0c\u6211\u7684\u7535\u8111\u5c31\u771f\u7684\u5b66\u4f1a\u4e86\u4ec0\u4e48\u5417\uff1f\u5b83\u9a6c\u4e0a\u5c31\u53d8\u806a\u660e\u4e86\u5417\uff1f\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4f1a\u6f84\u6e05\u673a\u5668\u5b66\u4e60\u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4f60\u8981\u4f7f\u7528\u5b83\u3002 \u7136\u540e\uff0c\u5728\u6211\u4eec\u51fa\u53d1\u53bb\u63a2\u7d22\u673a\u5668\u5b66\u4e60\u65b0\u5927\u9646\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u89c2\u5bdf\u4e0b\u5730\u56fe\uff0c\u4ee5\u4fbf\u77e5\u9053\u8fd9\u7247\u5927\u9646\u4e0a\u7684\u4e3b\u8981\u5730\u533a\u548c\u6700\u660e\u663e\u7684\u5730\u6807\uff1a\u76d1\u7763\u5b66\u4e60vs\u975e\u76d1\u7763\u5b66\u4e60\uff0c\u5728\u7ebf\u5b66\u4e60vs\u6279\u91cf\u5b66\u4e60\uff0c\u57fa\u4e8e\u5b9e\u4f8bvs\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u4e00\u4e2a\u5178\u578b\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u8ba8\u8bba\u53ef\u80fd\u78b0\u5230\u7684\u96be\u70b9\uff0c\u4ee5\u53ca\u5982\u4f55\u8bc4\u4f30\u548c\u5fae\u8c03\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u3002 \u8fd9\u4e00\u7ae0\u4ecb\u7ecd\u4e86\u5927\u91cf\u6bcf\u4e2a\u6570\u636e\u79d1\u5b66\u5bb6\u9700\u8981\u7262\u8bb0\u5728\u5fc3\u7684\u57fa\u7840\u6982\u5ff5\uff08\u548c\u4e60\u8bed\uff09\u3002\u7b2c\u4e00\u7ae0\u53ea\u662f\u6982\u89c8\uff08\u552f\u4e00\u4e0d\u542b\u6709\u4ee3\u7801\u7684\u4e00\u7ae0\uff09\uff0c\u76f8\u5f53\u7b80\u5355\uff0c\u4f46\u4f60\u8981\u786e\u4fdd\u6bcf\u4e00\u70b9\u90fd\u641e\u660e\u767d\u4e86\uff0c\u518d\u7ee7\u7eed\u8fdb\u884c\u5b66\u4e60\u672c\u4e66\u5176\u4f59\u7ae0\u8282\u3002\u7aef\u8d77\u4e00\u676f\u5496\u5561\uff0c\u5f00\u59cb\u5b66\u4e60\u5427\uff01 \u63d0\u793a\uff1a\u5982\u679c\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u673a\u5668\u5b66\u4e60\u7684\u6240\u6709\u57fa\u7840\u6982\u5ff5\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ffb\u5230\u7b2c2\u7ae0\u3002\u5982\u679c\u4f60\u4e0d\u786e\u8ba4\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u56de\u7b54\u672c\u7ae0\u672b\u5c3e\u5217\u51fa\u7684\u95ee\u9898\uff0c\u7136\u540e\u518d\u7ee7\u7eed\u3002 \u4ec0\u4e48\u662f\u673a\u5668\u5b66\u4e60\uff1f \u673a\u5668\u5b66\u4e60\u662f\u901a\u8fc7\u7f16\u7a0b\u8ba9\u8ba1\u7b97\u673a\u4ece\u6570\u636e\u4e2d\u8fdb\u884c\u5b66\u4e60\u7684\u79d1\u5b66\uff08\u548c\u827a\u672f\uff09\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u66f4\u5e7f\u4e49\u7684\u6982\u5ff5\uff1a \u673a\u5668\u5b66\u4e60\u662f\u8ba9\u8ba1\u7b97\u673a\u5177\u6709\u5b66\u4e60\u7684\u80fd\u529b\uff0c\u65e0\u9700\u8fdb\u884c\u660e\u786e\u7f16\u7a0b\u3002 \u2014\u2014 \u4e9a\u745f\u00b7\u8428\u7f2a\u5c14\uff0c1959 \u548c\u4e00\u4e2a\u5de5\u7a0b\u6027\u7684\u6982\u5ff5\uff1a \u8ba1\u7b97\u673a\u7a0b\u5e8f\u5229\u7528\u7ecf\u9a8c E \u5b66\u4e60\u4efb\u52a1 T\uff0c\u6027\u80fd\u662f P\uff0c\u5982\u679c\u9488\u5bf9\u4efb\u52a1 T \u7684\u6027\u80fd P \u968f\u7740\u7ecf\u9a8c E \u4e0d\u65ad\u589e\u957f\uff0c\u5219\u79f0\u4e3a\u673a\u5668\u5b66\u4e60\u3002 \u2014\u2014 \u6c64\u59c6\u00b7\u7c73\u5207\u5c14\uff0c1997 \u4f8b\u5982\uff0c\u4f60\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u5c31\u662f\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u5783\u573e\u90ae\u4ef6\uff08\u6bd4\u5982\uff0c\u7528\u6237\u6807\u8bb0\u7684\u5783\u573e\u90ae\u4ef6\uff09\u548c\u666e\u901a\u90ae\u4ef6\uff08\u975e\u5783\u573e\u90ae\u4ef6\uff0c\u4e5f\u79f0\u4f5c ham\uff09\u5b66\u4e60\u6807\u8bb0\u5783\u573e\u90ae\u4ef6\u3002\u7528\u6765\u8fdb\u884c\u5b66\u4e60\u7684\u6837\u4f8b\u79f0\u4f5c\u8bad\u7ec3\u96c6\u3002\u6bcf\u4e2a\u8bad\u7ec3\u6837\u4f8b\u79f0\u4f5c\u8bad\u7ec3\u5b9e\u4f8b\uff08\u6216\u6837\u672c\uff09\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4efb\u52a1 T \u5c31\u662f\u6807\u8bb0\u65b0\u90ae\u4ef6\u662f\u5426\u662f\u5783\u573e\u90ae\u4ef6\uff0c\u7ecf\u9a8cE\u662f\u8bad\u7ec3\u6570\u636e\uff0c\u6027\u80fdP\u9700\u8981\u5b9a\u4e49\uff1a\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b63\u786e\u5206\u7c7b\u7684\u6bd4\u4f8b\u3002\u8fd9\u4e2a\u6027\u80fd\u6307\u6807\u79f0\u4e3a\u51c6\u786e\u7387\uff0c\u901a\u5e38\u7528\u5728\u5206\u7c7b\u4efb\u52a1\u4e2d\u3002 \u5982\u679c\u4f60\u4e0b\u8f7d\u4e86\u4e00\u4efd\u7ef4\u57fa\u767e\u79d1\u7684\u62f7\u8d1d\uff0c\u4f60\u7684\u7535\u8111\u867d\u7136\u6709\u4e86\u5f88\u591a\u6570\u636e\uff0c\u4f46\u4e0d\u4f1a\u9a6c\u4e0a\u53d8\u5f97\u806a\u660e\u8d77\u6765\u3002\u56e0\u6b64\uff0c\u8fd9\u4e0d\u662f\u673a\u5668\u5b66\u4e60\u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u673a\u5668\u5b66\u4e60\uff1f \u601d\u8003\u4e00\u4e0b\uff0c\u4f60\u4f1a\u5982\u4f55\u4f7f\u7528\u4f20\u7edf\u7684\u7f16\u7a0b\u6280\u672f\u5199\u4e00\u4e2a\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\uff08\u56fe 1-1\uff09\uff1a \u4f60\u5148\u89c2\u5bdf\u4e0b\u5783\u573e\u90ae\u4ef6\u4e00\u822c\u90fd\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e00\u4e9b\u8bcd\u6216\u77ed\u8bed\uff08\u6bd4\u5982 4U\u3001credit card\u3001free\u3001amazing\uff09\u5728\u90ae\u4ef6\u4e3b\u9898\u4e2d\u9891\u7e41\u51fa\u73b0\uff0c\u4e5f\u8bb8\u8fd8\u6ce8\u610f\u5230\u53d1\u4ef6\u4eba\u540d\u5b57\u3001\u90ae\u4ef6\u6b63\u6587\u7684\u683c\u5f0f\uff0c\u7b49\u7b49\u3002 \u4f60\u4e3a\u89c2\u5bdf\u5230\u7684\u89c4\u5f8b\u5199\u4e86\u4e00\u4e2a\u68c0\u6d4b\u7b97\u6cd5\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u4e86\u8fd9\u4e9b\u89c4\u5f8b\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u6807\u8bb0\u90ae\u4ef6\u4e3a\u5783\u573e\u90ae\u4ef6\u3002 \u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u91cd\u590d\u7b2c1\u6b65\u548c\u7b2c2\u6b65\uff0c\u76f4\u5230\u6ee1\u8db3\u8981\u6c42\u3002 \u56fe 1-1 \u4f20\u7edf\u65b9\u6cd5 \u8fd9\u4e2a\u95ee\u9898\u5e76\u4e0d\u7b80\u5355\uff0c\u4f60\u7684\u7a0b\u5e8f\u5f88\u53ef\u80fd\u4f1a\u53d8\u6210\u4e00\u957f\u4e32\u590d\u6742\u7684\u89c4\u5219\u2014\u2014 \u8fd9\u6837\u5c31\u4f1a\u5f88\u96be\u7ef4\u62a4\u3002 \u76f8\u53cd\u7684\uff0c\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u6280\u672f\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u4f1a\u81ea\u52a8\u5b66\u4e60\u54ea\u4e2a\u8bcd\u548c\u77ed\u8bed\u662f\u5783\u573e\u90ae\u4ef6\u7684\u9884\u6d4b\u503c\uff0c\u901a\u8fc7\u4e0e\u666e\u901a\u90ae\u4ef6\u6bd4\u8f83\uff0c\u68c0\u6d4b\u5783\u573e\u90ae\u4ef6\u4e2d\u53cd\u5e38\u9891\u6b21\u7684\u8bcd\u8bed\u683c\u5f0f\uff08\u56fe 1-2\uff09\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u77ed\u5f97\u591a\uff0c\u66f4\u6613\u7ef4\u62a4\uff0c\u4e5f\u66f4\u7cbe\u786e\u3002 \u56fe 1-2 \u673a\u5668\u5b66\u4e60\u65b9\u6cd5 \u8fdb\u800c\uff0c\u5982\u679c\u53d1\u9001\u5783\u573e\u90ae\u4ef6\u7684\u4eba\u53d1\u73b0\u6240\u6709\u5305\u542b\u201c4U\u201d\u7684\u90ae\u4ef6\u90fd\u88ab\u5c4f\u853d\u4e86\uff0c\u53ef\u80fd\u4f1a\u8f6c\u800c\u4f7f\u7528\u201cFor U\u201d\u3002\u4f7f\u7528\u4f20\u7edf\u65b9\u6cd5\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u9700\u8981\u66f4\u65b0\u4ee5\u6807\u8bb0\u201cFor U\u201d\u3002\u5982\u679c\u53d1\u9001\u5783\u573e\u90ae\u4ef6\u7684\u4eba\u6301\u7eed\u66f4\u6539\uff0c\u4f60\u5c31\u9700\u8981\u88ab\u52a8\u5730\u4e0d\u505c\u5730\u5199\u5165\u65b0\u89c4\u5219\u3002 \u76f8\u53cd\u7684\uff0c\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u4f1a\u81ea\u52a8\u6ce8\u610f\u5230\u201cFor U\u201d\u5728\u7528\u6237\u624b\u52a8\u6807\u8bb0\u5783\u573e\u90ae\u4ef6\u4e2d\u7684\u53cd\u5e38\u9891\u7e41\u6027\uff0c\u7136\u540e\u5c31\u80fd\u81ea\u52a8\u6807\u8bb0\u5783\u573e\u90ae\u4ef6\u800c\u65e0\u9700\u5e72\u9884\u4e86\uff08\u56fe1-3\uff09\u3002 \u56fe 1-3 \u81ea\u52a8\u9002\u5e94\u6539\u53d8 \u673a\u5668\u5b66\u4e60\u7684\u53e6\u4e00\u4e2a\u4f18\u70b9\u662f\u5584\u4e8e\u5904\u7406\u5bf9\u4e8e\u4f20\u7edf\u65b9\u6cd5\u592a\u590d\u6742\u6216\u662f\u6ca1\u6709\u5df2\u77e5\u7b97\u6cd5\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u8bed\u8a00\u8bc6\u522b\uff1a\u5047\u5982\u60f3\u5199\u4e00\u4e2a\u53ef\u4ee5\u8bc6\u522b\u201cone\u201d\u548c\u201ctwo\u201d\u7684\u7b80\u5355\u7a0b\u5e8f\u3002\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u201ctwo\u201d\u8d77\u59cb\u662f\u4e00\u4e2a\u9ad8\u97f3\uff08\u201cT\u201d\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u5199\u4e00\u4e2a\u53ef\u4ee5\u6d4b\u91cf\u9ad8\u97f3\u5f3a\u5ea6\u7684\u7b97\u6cd5\uff0c\u7528\u5b83\u533a\u5206 one \u548c two\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u80fd\u63a8\u5e7f\u5230\u5608\u6742\u73af\u5883\u4e0b\u7684\u6570\u767e\u4e07\u4eba\u7684\u6570\u5343\u8bcd\u6c47\u3001\u6570\u5341\u79cd\u8bed\u8a00\u3002\uff08\u73b0\u5728\uff09\u6700\u4f73\u7684\u65b9\u6cd5\u662f\u6839\u636e\u5927\u91cf\u5355\u8bcd\u7684\u5f55\u97f3\uff0c\u5199\u4e00\u4e2a\u53ef\u4ee5\u81ea\u6211\u5b66\u4e60\u7684\u7b97\u6cd5\u3002 \u6700\u540e\uff0c\u673a\u5668\u5b66\u4e60\u53ef\u4ee5\u5e2e\u52a9\u4eba\u7c7b\u8fdb\u884c\u5b66\u4e60\uff08\u56fe 1-4\uff09\uff1a\u53ef\u4ee5\u68c0\u67e5\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5df2\u7ecf\u638c\u63e1\u4e86\u4ec0\u4e48\uff08\u5c3d\u7ba1\u5bf9\u4e8e\u67d0\u4e9b\u7b97\u6cd5\uff0c\u8fd9\u6837\u505a\u4f1a\u6709\u70b9\u9ebb\u70e6\uff09\u3002\u4f8b\u5982\uff0c\u5f53\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u88ab\u8bad\u7ec3\u4e86\u8db3\u591f\u591a\u7684\u5783\u573e\u90ae\u4ef6\uff0c\u5c31\u53ef\u4ee5\u7528\u5b83\u5217\u51fa\u5783\u573e\u90ae\u4ef6\u9884\u6d4b\u503c\u7684\u5355\u8bcd\u548c\u5355\u8bcd\u7ec4\u5408\u5217\u8868\u3002\u6709\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e0d\u5f15\u4eba\u5173\u6ce8\u7684\u5173\u8054\u6216\u65b0\u8d8b\u52bf\uff0c\u6709\u52a9\u4e8e\u5bf9\u95ee\u9898\u66f4\u597d\u7684\u7406\u89e3\u3002 \u56fe 1-4 \u673a\u5668\u5b66\u4e60\u53ef\u4ee5\u5e2e\u52a9\u4eba\u7c7b\u5b66\u4e60 \u4f7f\u7528\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u6316\u6398\u5927\u91cf\u6570\u636e\uff0c\u53ef\u4ee5\u53d1\u73b0\u5e76\u4e0d\u663e\u8457\u7684\u89c4\u5f8b\u3002\u8fd9\u79f0\u4f5c\u6570\u636e\u6316\u6398\u3002 \u603b\u7ed3\u4e00\u4e0b\uff0c\u673a\u5668\u5b66\u4e60\u5584\u4e8e\uff1a \u9700\u8981\u8fdb\u884c\u5927\u91cf\u624b\u5de5\u8c03\u6574\u6216\u9700\u8981\u62e5\u6709\u957f\u4e32\u89c4\u5219\u624d\u80fd\u89e3\u51b3\u7684\u95ee\u9898\uff1a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u901a\u5e38\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u3001\u63d0\u9ad8\u6027\u80fd\u3002 \u95ee\u9898\u590d\u6742\uff0c\u4f20\u7edf\u65b9\u6cd5\u96be\u4ee5\u89e3\u51b3\uff1a\u6700\u597d\u7684\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u53ef\u4ee5\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002 \u73af\u5883\u6709\u6ce2\u52a8\uff1a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u53ef\u4ee5\u9002\u5e94\u65b0\u6570\u636e\u3002 \u6d1e\u5bdf\u590d\u6742\u95ee\u9898\u548c\u5927\u91cf\u6570\u636e\u3002 \u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u7684\u7c7b\u578b \u673a\u5668\u5b66\u4e60\u6709\u591a\u79cd\u7c7b\u578b\uff0c\u53ef\u4ee5\u6839\u636e\u5982\u4e0b\u89c4\u5219\u8fdb\u884c\u5206\u7c7b\uff1a \u662f\u5426\u5728\u4eba\u7c7b\u76d1\u7763\u4e0b\u8fdb\u884c\u8bad\u7ec3\uff08\u76d1\u7763\uff0c\u975e\u76d1\u7763\uff0c\u534a\u76d1\u7763\u548c\u5f3a\u5316\u5b66\u4e60\uff09 \u662f\u5426\u53ef\u4ee5\u52a8\u6001\u6e10\u8fdb\u5b66\u4e60\uff08\u5728\u7ebf\u5b66\u4e60 vs \u6279\u91cf\u5b66\u4e60\uff09 \u5b83\u4eec\u662f\u5426\u53ea\u662f\u901a\u8fc7\u7b80\u5355\u5730\u6bd4\u8f83\u65b0\u7684\u6570\u636e\u70b9\u548c\u5df2\u77e5\u7684\u6570\u636e\u70b9\uff0c\u6216\u8005\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u8fdb\u884c\u6a21\u5f0f\u8bc6\u522b\uff0c\u4ee5\u5efa\u7acb\u4e00\u4e2a\u9884\u6d4b\u6a21\u578b\uff0c\u5c31\u50cf\u79d1\u5b66\u5bb6\u6240\u505a\u7684\u90a3\u6837\uff08\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60 vs \u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\uff09 \u89c4\u5219\u5e76\u4e0d\u4ec5\u9650\u4e8e\u4ee5\u4e0a\u7684\uff0c\u4f60\u53ef\u4ee5\u5c06\u4ed6\u4eec\u8fdb\u884c\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5148\u8fdb\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u53ef\u4ee5\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u52a8\u6001\u8fdb\u884c\u5b66\u4e60\uff0c\u7528\u5783\u573e\u90ae\u4ef6\u548c\u666e\u901a\u90ae\u4ef6\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u5c31\u8ba9\u5b83\u6210\u4e86\u4e00\u4e2a\u5728\u7ebf\u3001\u57fa\u4e8e\u6a21\u578b\u3001\u76d1\u7763\u5b66\u4e60\u7cfb\u7edf\u3002 \u4e0b\u9762\u66f4\u4ed4\u7ec6\u5730\u5b66\u4e60\u8fd9\u4e9b\u89c4\u5219\u3002 \u76d1\u7763/\u975e\u76d1\u7763\u5b66\u4e60 \u673a\u5668\u5b66\u4e60\u53ef\u4ee5\u6839\u636e\u8bad\u7ec3\u65f6\u76d1\u7763\u7684\u91cf\u548c\u7c7b\u578b\u8fdb\u884c\u5206\u7c7b\u3002\u4e3b\u8981\u6709\u56db\u7c7b\uff1a\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u534a\u76d1\u7763\u5b66\u4e60\u548c\u5f3a\u5316\u5b66\u4e60\u3002 \u76d1\u7763\u5b66\u4e60 \u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u7528\u6765\u8bad\u7ec3\u7b97\u6cd5\u7684\u8bad\u7ec3\u6570\u636e\u5305\u542b\u4e86\u7b54\u6848\uff0c\u79f0\u4e3a\u6807\u7b7e\uff08\u56fe 1-5\uff09\u3002 \u56fe 1-5 \u7528\u4e8e\u76d1\u7763\u5b66\u4e60\uff08\u6bd4\u5982\u5783\u573e\u90ae\u4ef6\u5206\u7c7b\uff09\u7684\u52a0\u4e86\u6807\u7b7e\u7684\u8bad\u7ec3\u96c6 \u4e00\u4e2a\u5178\u578b\u7684\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\u662f\u5206\u7c7b\u3002\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff1a\u7528\u8bb8\u591a\u5e26\u6709\u5f52\u7c7b\uff08\u5783\u573e\u90ae\u4ef6\u6216\u666e\u901a\u90ae\u4ef6\uff09\u7684\u90ae\u4ef6\u6837\u672c\u8fdb\u884c\u8bad\u7ec3\uff0c\u8fc7\u6ee4\u5668\u5fc5\u987b\u8fd8\u80fd\u5bf9\u65b0\u90ae\u4ef6\u8fdb\u884c\u5206\u7c7b\u3002 \u53e6\u4e00\u4e2a\u5178\u578b\u4efb\u52a1\u662f\u9884\u6d4b\u76ee\u6807\u6570\u503c\uff0c\u4f8b\u5982\u7ed9\u51fa\u4e00\u4e9b\u7279\u5f81\uff08\u91cc\u7a0b\u6570\u3001\u8f66\u9f84\u3001\u54c1\u724c\u7b49\u7b49\uff09\u79f0\u4f5c\u9884\u6d4b\u503c\uff0c\u6765\u9884\u6d4b\u4e00\u8f86\u6c7d\u8f66\u7684\u4ef7\u683c\u3002\u8fd9\u7c7b\u4efb\u52a1\u79f0\u4f5c\u56de\u5f52\uff08\u56fe 1-6\uff09\u3002\u8981\u8bad\u7ec3\u8fd9\u4e2a\u7cfb\u7edf\uff0c\u4f60\u9700\u8981\u7ed9\u51fa\u5927\u91cf\u6c7d\u8f66\u6837\u672c\uff0c\u5305\u62ec\u5b83\u4eec\u7684\u9884\u6d4b\u503c\u548c\u6807\u7b7e\uff08\u5373\uff0c\u5b83\u4eec\u7684\u4ef7\u683c\uff09\u3002 \u6ce8\u89e3\uff1a\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u4e00\u4e2a\u5c5e\u6027\u5c31\u662f\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff08\u4f8b\u5982\uff0c\u201c\u91cc\u7a0b\u6570\u201d\uff09\uff0c\u53d6\u51b3\u4e8e\u5177\u4f53\u95ee\u9898\u4e00\u4e2a\u7279\u5f81\u4f1a\u6709\u591a\u4e2a\u542b\u4e49\uff0c\u4f46\u901a\u5e38\u662f\u5c5e\u6027\u52a0\u4e0a\u5b83\u7684\u503c\uff08\u4f8b\u5982\uff0c\u201c\u91cc\u7a0b\u6570 =15000 \u201d\uff09\u3002\u8bb8\u591a\u4eba\u662f\u4e0d\u533a\u5206\u5730\u4f7f\u7528\u5c5e\u6027\u548c\u7279\u5f81\u3002 \u56fe 1-6 \u56de\u5f52 \u6ce8\u610f\uff0c\u4e00\u4e9b\u56de\u5f52\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u5206\u7c7b\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u4f8b\u5982\uff0c\u903b\u8f91\u56de\u5f52\u901a\u5e38\u7528\u6765\u8fdb\u884c\u5206\u7c7b\uff0c\u5b83\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u5f52\u5c5e\u67d0\u4e00\u7c7b\u7684\u53ef\u80fd\u6027\u7684\u503c\uff08\u4f8b\u5982\uff0c20% \u51e0\u7387\u4e3a\u5783\u573e\u90ae\u4ef6\uff09\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u91cd\u8981\u7684\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff08\u672c\u4e66\u90fd\u6709\u4ecb\u7ecd\uff09\uff1a K\u8fd1\u90bb\u7b97\u6cd5 \u7ebf\u6027\u56de\u5f52 \u903b\u8f91\u56de\u5f52 \u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09 \u51b3\u7b56\u6811\u548c\u968f\u673a\u68ee\u6797 \u795e\u7ecf\u7f51\u7edc \u975e\u76d1\u7763\u5b66\u4e60 \u5728\u975e\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u4f60\u53ef\u80fd\u731c\u5230\u4e86\uff0c\u8bad\u7ec3\u6570\u636e\u662f\u6ca1\u6709\u52a0\u6807\u7b7e\u7684\uff08\u56fe 1-7\uff09\u3002\u7cfb\u7edf\u5728\u6ca1\u6709\u8001\u5e08\u7684\u6761\u4ef6\u4e0b\u8fdb\u884c\u5b66\u4e60\u3002 \u56fe 1-7 \u975e\u76d1\u7763\u5b66\u4e60\u7684\u4e00\u4e2a\u4e0d\u52a0\u6807\u7b7e\u7684\u8bad\u7ec3\u96c6 \u4e0b\u9762\u662f\u4e00\u4e9b\u6700\u91cd\u8981\u7684\u975e\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff08\u6211\u4eec\u4f1a\u5728\u7b2c 8 \u7ae0\u4ecb\u7ecd\u964d\u7ef4\uff09\uff1a \u805a\u7c7b K \u5747\u503c \u5c42\u6b21\u805a\u7c7b\u5206\u6790\uff08Hierarchical Cluster Analysis\uff0cHCA\uff09 \u671f\u671b\u6700\u5927\u503c \u53ef\u89c6\u5316\u548c\u964d\u7ef4 \u4e3b\u6210\u5206\u5206\u6790\uff08Principal Component Analysis\uff0cPCA\uff09 \u6838\u4e3b\u6210\u5206\u5206\u6790 \u5c40\u90e8\u7ebf\u6027\u5d4c\u5165\uff08Locally-Linear Embedding\uff0cLLE\uff09 t-\u5206\u5e03\u90bb\u57df\u5d4c\u5165\u7b97\u6cd5\uff08t-distributed Stochastic Neighbor Embedding\uff0ct-SNE\uff09 \u5173\u8054\u6027\u89c4\u5219\u5b66\u4e60 Apriori \u7b97\u6cd5 Eclat \u7b97\u6cd5 \u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u6709\u4e00\u4efd\u5173\u4e8e\u4f60\u7684\u535a\u5ba2\u8bbf\u5ba2\u7684\u5927\u91cf\u6570\u636e\u3002\u4f60\u60f3\u8fd0\u884c\u4e00\u4e2a\u805a\u7c7b\u7b97\u6cd5\uff0c\u68c0\u6d4b\u76f8\u4f3c\u8bbf\u5ba2\u7684\u5206\u7ec4\uff08\u56fe 1-8\uff09\u3002\u4f60\u4e0d\u4f1a\u544a\u8bc9\u7b97\u6cd5\u67d0\u4e2a\u8bbf\u5ba2\u5c5e\u4e8e\u54ea\u4e00\u7c7b\uff1a\u5b83\u4f1a\u81ea\u5df1\u627e\u51fa\u5173\u7cfb\uff0c\u65e0\u9700\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c\u7b97\u6cd5\u53ef\u80fd\u6ce8\u610f\u5230 40% \u7684\u8bbf\u5ba2\u662f\u559c\u6b22\u6f2b\u753b\u4e66\u7684\u7537\u6027\uff0c\u901a\u5e38\u662f\u665a\u4e0a\u8bbf\u95ee\uff0c20% \u662f\u79d1\u5e7b\u7231\u597d\u8005\uff0c\u4ed6\u4eec\u662f\u5728\u5468\u672b\u8bbf\u95ee\u7b49\u7b49\u3002\u5982\u679c\u4f60\u4f7f\u7528\u5c42\u6b21\u805a\u7c7b\u5206\u6790\uff0c\u5b83\u53ef\u80fd\u8fd8\u4f1a\u7ec6\u5206\u6bcf\u4e2a\u5206\u7ec4\u4e3a\u66f4\u5c0f\u7684\u7ec4\u3002\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u4e3a\u6bcf\u4e2a\u5206\u7ec4\u5b9a\u4f4d\u535a\u6587\u3002 \u56fe 1-8 \u805a\u7c7b \u53ef\u89c6\u5316\u7b97\u6cd5\u4e5f\u662f\u6781\u4f73\u7684\u975e\u76d1\u7763\u5b66\u4e60\u6848\u4f8b\uff1a\u7ed9\u7b97\u6cd5\u5927\u91cf\u590d\u6742\u7684\u4e14\u4e0d\u52a0\u6807\u7b7e\u7684\u6570\u636e\uff0c\u7b97\u6cd5\u8f93\u51fa\u6570\u636e\u76842D\u62163D\u56fe\u50cf\uff08\u56fe 1-9\uff09\u3002\u7b97\u6cd5\u4f1a\u8bd5\u56fe\u4fdd\u7559\u6570\u636e\u7684\u7ed3\u6784\uff08\u5373\u5c1d\u8bd5\u4fdd\u7559\u8f93\u5165\u7684\u72ec\u7acb\u805a\u7c7b\uff0c\u907f\u514d\u5728\u56fe\u50cf\u4e2d\u91cd\u53e0\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u660e\u767d\u6570\u636e\u662f\u5982\u4f55\u7ec4\u7ec7\u8d77\u6765\u7684\uff0c\u4e5f\u8bb8\u8fd8\u80fd\u53d1\u73b0\u9690\u85cf\u7684\u89c4\u5f8b\u3002 \u56fe 1-9 t-SNE \u53ef\u89c6\u5316\u6848\u4f8b\uff0c\u7a81\u51fa\u4e86\u805a\u7c7b\uff08\u6ce8\uff1a\u6ce8\u610f\u52a8\u7269\u662f\u4e0e\u6c7d\u8f66\u5206\u5f00\u7684\uff0c\u9a6c\u548c\u9e7f\u5f88\u8fd1\u3001\u4e0e\u9e1f\u8ddd\u79bb\u8fdc\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09 \u4e0e\u6b64\u6709\u5173\u8054\u7684\u4efb\u52a1\u662f\u964d\u7ef4\uff0c\u964d\u7ef4\u7684\u76ee\u7684\u662f\u7b80\u5316\u6570\u636e\u3001\u4f46\u662f\u4e0d\u80fd\u5931\u53bb\u5927\u90e8\u5206\u4fe1\u606f\u3002\u505a\u6cd5\u4e4b\u4e00\u662f\u5408\u5e76\u82e5\u5e72\u76f8\u5173\u7684\u7279\u5f81\u3002\u4f8b\u5982\uff0c\u6c7d\u8f66\u7684\u91cc\u7a0b\u6570\u4e0e\u8f66\u9f84\u9ad8\u5ea6\u76f8\u5173\uff0c\u964d\u7ef4\u7b97\u6cd5\u5c31\u4f1a\u5c06\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u8868\u793a\u6c7d\u8f66\u7684\u78e8\u635f\u3002\u8fd9\u53eb\u505a\u7279\u5f81\u63d0\u53d6\u3002 \u63d0\u793a\uff1a\u5728\u7528\u8bad\u7ec3\u96c6\u8bad\u7ec3\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff08\u6bd4\u5982\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff09\u65f6\uff0c\u6700\u597d\u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884c\u964d\u7ef4\u3002\u8fd9\u6837\u53ef\u4ee5\u8fd0\u884c\u7684\u66f4\u5feb\uff0c\u5360\u7528\u7684\u786c\u76d8\u548c\u5185\u5b58\u7a7a\u95f4\u66f4\u5c11\uff0c\u6709\u4e9b\u60c5\u51b5\u4e0b\u6027\u80fd\u4e5f\u66f4\u597d\u3002 \u53e6\u4e00\u4e2a\u91cd\u8981\u7684\u975e\u76d1\u7763\u4efb\u52a1\u662f\u5f02\u5e38\u68c0\u6d4b\uff08anomaly detection\uff09 \u2014\u2014 \u4f8b\u5982\uff0c\u68c0\u6d4b\u5f02\u5e38\u7684\u4fe1\u7528\u5361\u8f6c\u8d26\u4ee5\u9632\u6b3a\u8bc8\uff0c\u68c0\u6d4b\u5236\u9020\u7f3a\u9677\uff0c\u6216\u8005\u5728\u8bad\u7ec3\u4e4b\u524d\u81ea\u52a8\u4ece\u8bad\u7ec3\u6570\u636e\u96c6\u53bb\u9664\u5f02\u5e38\u503c\u3002\u5f02\u5e38\u68c0\u6d4b\u7684\u7cfb\u7edf\u4f7f\u7528\u6b63\u5e38\u503c\u8bad\u7ec3\u7684\uff0c\u5f53\u5b83\u78b0\u5230\u4e00\u4e2a\u65b0\u5b9e\u4f8b\uff0c\u5b83\u53ef\u4ee5\u5224\u65ad\u8fd9\u4e2a\u65b0\u5b9e\u4f8b\u662f\u50cf\u6b63\u5e38\u503c\u8fd8\u662f\u5f02\u5e38\u503c\uff08\u56fe 1-10\uff09\u3002 \u56fe 1-10 \u5f02\u5e38\u68c0\u6d4b \u6700\u540e\uff0c\u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u975e\u76d1\u7763\u4efb\u52a1\u662f\u5173\u8054\u89c4\u5219\u5b66\u4e60\uff0c\u5b83\u7684\u76ee\u6807\u662f\u6316\u6398\u5927\u91cf\u6570\u636e\u4ee5\u53d1\u73b0\u5c5e\u6027\u95f4\u6709\u8da3\u7684\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u62e5\u6709\u4e00\u4e2a\u8d85\u5e02\u3002\u5728\u9500\u552e\u65e5\u5fd7\u4e0a\u8fd0\u884c\u5173\u8054\u89c4\u5219\uff0c\u53ef\u80fd\u53d1\u73b0\u4e70\u4e86\u70e7\u70e4\u9171\u548c\u85af\u7247\u7684\u4eba\u4e5f\u4f1a\u4e70\u725b\u6392\u3002\u56e0\u6b64\uff0c\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5546\u54c1\u653e\u5728\u4e00\u8d77\u3002 \u534a\u76d1\u7763\u5b66\u4e60 \u4e00\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u5904\u7406\u90e8\u5206\u5e26\u6807\u7b7e\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u901a\u5e38\u662f\u5927\u91cf\u4e0d\u5e26\u6807\u7b7e\u6570\u636e\u52a0\u4e0a\u5c0f\u90e8\u5206\u5e26\u6807\u7b7e\u6570\u636e\u3002\u8fd9\u79f0\u4f5c\u534a\u76d1\u7763\u5b66\u4e60\uff08\u56fe 1-11\uff09\u3002 \u4e00\u4e9b\u56fe\u7247\u5b58\u50a8\u670d\u52a1\uff0c\u6bd4\u5982 Google Photos\uff0c\u662f\u534a\u76d1\u7763\u5b66\u4e60\u7684\u597d\u4f8b\u5b50\u3002\u4e00\u65e6\u4f60\u4e0a\u4f20\u4e86\u6240\u6709\u5bb6\u5ead\u76f8\u7247\uff0c\u5b83\u5c31\u80fd\u81ea\u52a8\u8bc6\u522b\u76f8\u540c\u7684\u4eba A \u51fa\u73b0\u4e86\u76f8\u7247 1\u30015\u300111 \u4e2d\uff0c\u53e6\u4e00\u4e2a\u4eba B \u51fa\u73b0\u5728\u4e86\u76f8\u7247 2\u30015\u30017 \u4e2d\u3002\u8fd9\u662f\u7b97\u6cd5\u7684\u975e\u76d1\u7763\u90e8\u5206\uff08\u805a\u7c7b\uff09\u3002\u73b0\u5728\u7cfb\u7edf\u9700\u8981\u7684\u5c31\u662f\u4f60\u544a\u8bc9\u8fd9\u4e24\u4e2a\u4eba\u662f\u8c01\u3002\u53ea\u8981\u7ed9\u6bcf\u4e2a\u4eba\u4e00\u4e2a\u6807\u7b7e\uff0c\u7b97\u6cd5\u5c31\u53ef\u4ee5\u547d\u540d\u6bcf\u5f20\u7167\u7247\u4e2d\u7684\u6bcf\u4e2a\u4eba\uff0c\u7279\u522b\u9002\u5408\u641c\u7d22\u7167\u7247\u3002 \u56fe 1-11 \u534a\u76d1\u7763\u5b66\u4e60 \u591a\u6570\u534a\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u662f\u975e\u76d1\u7763\u548c\u76d1\u7763\u7b97\u6cd5\u7684\u7ed3\u5408\u3002\u4f8b\u5982\uff0c\u6df1\u5ea6\u4fe1\u5ff5\u7f51\u7edc\uff08deep belief networks\uff09\u662f\u57fa\u4e8e\u88ab\u79f0\u4e3a\u4e92\u76f8\u53e0\u52a0\u7684\u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a\uff08restricted Boltzmann machines\uff0cRBM\uff09\u7684\u975e\u76d1\u7763\u7ec4\u4ef6\u3002RBM \u662f\u5148\u7528\u975e\u76d1\u7763\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3\uff0c\u518d\u7528\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u8fdb\u884c\u6574\u4e2a\u7cfb\u7edf\u5fae\u8c03\u3002 \u5f3a\u5316\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60\u975e\u5e38\u4e0d\u540c\u3002\u5b66\u4e60\u7cfb\u7edf\u5728\u8fd9\u91cc\u88ab\u79f0\u4e3a\u667a\u80fd\u4f53\uff08agent\uff09\uff0c\u53ef\u4ee5\u5bf9\u73af\u5883\u8fdb\u884c\u89c2\u5bdf\uff0c\u9009\u62e9\u548c\u6267\u884c\u52a8\u4f5c\uff0c\u83b7\u5f97\u5956\u52b1\uff08\u8d1f\u5956\u52b1\u662f\u60e9\u7f5a\uff0c\u89c1\u56fe 1-12\uff09\u3002\u7136\u540e\u5b83\u5fc5\u987b\u81ea\u5df1\u5b66\u4e60\u54ea\u4e2a\u662f\u6700\u4f73\u65b9\u6cd5\uff08\u79f0\u4e3a\u7b56\u7565\uff0cpolicy\uff09\uff0c\u4ee5\u5f97\u5230\u957f\u4e45\u7684\u6700\u5927\u5956\u52b1\u3002\u7b56\u7565\u51b3\u5b9a\u4e86\u667a\u80fd\u4f53\u5728\u7ed9\u5b9a\u60c5\u51b5\u4e0b\u5e94\u8be5\u91c7\u53d6\u7684\u884c\u52a8\u3002 \u56fe 1-12 \u5f3a\u5316\u5b66\u4e60 \u4f8b\u5982\uff0c\u8bb8\u591a\u673a\u5668\u4eba\u8fd0\u884c\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u4ee5\u5b66\u4e60\u5982\u4f55\u884c\u8d70\u3002DeepMind \u7684 AlphaGo \u4e5f\u662f\u5f3a\u5316\u5b66\u4e60\u7684\u4f8b\u5b50\uff1a\u5b83\u5728 2016 \u5e74\u4e09\u6708\u51fb\u8d25\u4e86\u4e16\u754c\u56f4\u68cb\u51a0\u519b\u674e\u4e16\u77f3\uff08\u8bd1\u8005\u6ce8\uff1a2017 \u5e74\u4e94\u6708\uff0cAlphaGo \u53c8\u51fb\u8d25\u4e86\u4e16\u754c\u6392\u540d\u7b2c\u4e00\u7684\u67ef\u6d01\uff09\u3002\u5b83\u662f\u901a\u8fc7\u5206\u6790\u6570\u767e\u4e07\u76d8\u68cb\u5c40\u5b66\u4e60\u5236\u80dc\u7b56\u7565\uff0c\u7136\u540e\u81ea\u5df1\u548c\u81ea\u5df1\u4e0b\u68cb\u3002\u8981\u6ce8\u610f\uff0c\u5728\u6bd4\u8d5b\u4e2d\u673a\u5668\u5b66\u4e60\u662f\u5173\u95ed\u7684\uff1bAlphaGo \u53ea\u662f\u4f7f\u7528\u5b83\u5b66\u4f1a\u7684\u7b56\u7565\u3002 \u6279\u91cf\u548c\u5728\u7ebf\u5b66\u4e60 \u53e6\u4e00\u4e2a\u7528\u6765\u5206\u7c7b\u673a\u5668\u5b66\u4e60\u7684\u51c6\u5219\u662f\uff0c\u5b83\u662f\u5426\u80fd\u4ece\u5bfc\u5165\u7684\u6570\u636e\u6d41\u8fdb\u884c\u6301\u7eed\u5b66\u4e60\u3002 \u6279\u91cf\u5b66\u4e60 \u5728\u6279\u91cf\u5b66\u4e60\u4e2d\uff0c\u7cfb\u7edf\u4e0d\u80fd\u8fdb\u884c\u6301\u7eed\u5b66\u4e60\uff1a\u5fc5\u987b\u7528\u6240\u6709\u53ef\u7528\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u901a\u5e38\u4f1a\u5360\u7528\u5927\u91cf\u65f6\u95f4\u548c\u8ba1\u7b97\u8d44\u6e90\uff0c\u6240\u4ee5\u4e00\u822c\u662f\u7ebf\u4e0b\u505a\u7684\u3002\u9996\u5148\u662f\u8fdb\u884c\u8bad\u7ec3\uff0c\u7136\u540e\u90e8\u7f72\u5728\u751f\u4ea7\u73af\u5883\u4e14\u505c\u6b62\u5b66\u4e60\uff0c\u5b83\u53ea\u662f\u4f7f\u7528\u5df2\u7ecf\u5b66\u5230\u7684\u7b56\u7565\u3002\u8fd9\u79f0\u4e3a\u79bb\u7ebf\u5b66\u4e60\u3002 \u5982\u679c\u4f60\u60f3\u8ba9\u4e00\u4e2a\u6279\u91cf\u5b66\u4e60\u7cfb\u7edf\u660e\u767d\u65b0\u6570\u636e\uff08\u4f8b\u5982\u5783\u573e\u90ae\u4ef6\u7684\u65b0\u7c7b\u578b\uff09\uff0c\u5c31\u9700\u8981\u4ece\u5934\u8bad\u7ec3\u4e00\u4e2a\u7cfb\u7edf\u7684\u65b0\u7248\u672c\uff0c\u4f7f\u7528\u5168\u90e8\u6570\u636e\u96c6\uff08\u4e0d\u4ec5\u6709\u65b0\u6570\u636e\u4e5f\u6709\u8001\u6570\u636e\uff09\uff0c\u7136\u540e\u505c\u6389\u8001\u7cfb\u7edf\uff0c\u6362\u4e0a\u65b0\u7cfb\u7edf\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u8bad\u7ec3\u3001\u8bc4\u4f30\u3001\u90e8\u7f72\u4e00\u5957\u673a\u5668\u5b66\u4e60\u7684\u7cfb\u7edf\u7684\u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u81ea\u52a8\u8fdb\u884c\uff08\u89c1\u56fe 1-3\uff09\uff0c\u6240\u4ee5\u5373\u4fbf\u662f\u6279\u91cf\u5b66\u4e60\u4e5f\u53ef\u4ee5\u9002\u5e94\u6539\u53d8\u3002\u53ea\u8981\u6709\u9700\u8981\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u66f4\u65b0\u6570\u636e\u3001\u8bad\u7ec3\u4e00\u4e2a\u65b0\u7248\u672c\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u901a\u5e38\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\uff0c\u4f46\u662f\u7528\u5168\u90e8\u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\u4f1a\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u6240\u4ee5\u4e00\u822c\u662f\u6bcf 24 \u5c0f\u65f6\u6216\u6bcf\u5468\u8bad\u7ec3\u4e00\u4e2a\u65b0\u7cfb\u7edf\u3002\u5982\u679c\u7cfb\u7edf\u9700\u8981\u5feb\u901f\u9002\u5e94\u53d8\u5316\u7684\u6570\u636e\uff08\u6bd4\u5982\uff0c\u9884\u6d4b\u80a1\u4ef7\u53d8\u5316\uff09\uff0c\u5c31\u9700\u8981\u4e00\u4e2a\u54cd\u5e94\u66f4\u53ca\u65f6\u7684\u65b9\u6848\u3002 \u53e6\u5916\uff0c\u7528\u5168\u90e8\u6570\u636e\u8bad\u7ec3\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u8d44\u6e90\uff08CPU\u3001\u5185\u5b58\u7a7a\u95f4\u3001\u78c1\u76d8\u7a7a\u95f4\u3001\u78c1\u76d8 I/O\u3001\u7f51\u7edc I/O \u7b49\u7b49\uff09\u3002\u5982\u679c\u4f60\u6709\u5927\u91cf\u6570\u636e\uff0c\u5e76\u8ba9\u7cfb\u7edf\u6bcf\u5929\u81ea\u52a8\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\uff0c\u5c31\u4f1a\u5f00\u9500\u5f88\u5927\u3002\u5982\u679c\u6570\u636e\u91cf\u5de8\u5927\uff0c\u751a\u81f3\u65e0\u6cd5\u4f7f\u7528\u6279\u91cf\u5b66\u4e60\u7b97\u6cd5\u3002 \u6700\u540e\uff0c\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u9700\u8981\u81ea\u52a8\u5b66\u4e60\uff0c\u4f46\u662f\u8d44\u6e90\u6709\u9650\uff08\u6bd4\u5982\uff0c\u4e00\u53f0\u667a\u80fd\u624b\u673a\u6216\u706b\u661f\u8f66\uff09\uff0c\u643a\u5e26\u5927\u91cf\u8bad\u7ec3\u6570\u636e\u3001\u6bcf\u5929\u82b1\u8d39\u6570\u5c0f\u65f6\u7684\u5927\u91cf\u8d44\u6e90\u8fdb\u884c\u8bad\u7ec3\u662f\u4e0d\u5b9e\u9645\u7684\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u4e9b\u60c5\u51b5\uff0c\u8fd8\u6709\u4e00\u4e2a\u66f4\u4f73\u7684\u65b9\u6848\u53ef\u4ee5\u8fdb\u884c\u6301\u7eed\u5b66\u4e60\u3002 \u5728\u7ebf\u5b66\u4e60 \u5728\u5728\u7ebf\u5b66\u4e60\u4e2d\uff0c\u662f\u7528\u6570\u636e\u5b9e\u4f8b\u6301\u7eed\u5730\u8fdb\u884c\u8bad\u7ec3\uff0c\u53ef\u4ee5\u4e00\u6b21\u4e00\u4e2a\u6216\u4e00\u6b21\u51e0\u4e2a\u5b9e\u4f8b\uff08\u79f0\u4e3a\u5c0f\u6279\u91cf\uff09\u3002\u6bcf\u4e2a\u5b66\u4e60\u6b65\u9aa4\u90fd\u5f88\u5feb\u4e14\u5ec9\u4ef7\uff0c\u6240\u4ee5\u7cfb\u7edf\u53ef\u4ee5\u52a8\u6001\u5730\u5b66\u4e60\u5230\u8fbe\u7684\u65b0\u6570\u636e\uff08\u89c1\u56fe 1-13\uff09\u3002 \u56fe 1-13 \u5728\u7ebf\u5b66\u4e60 \u5728\u7ebf\u5b66\u4e60\u5f88\u9002\u5408\u7cfb\u7edf\u63a5\u6536\u8fde\u7eed\u6d41\u7684\u6570\u636e\uff08\u6bd4\u5982\uff0c\u80a1\u7968\u4ef7\u683c\uff09\uff0c\u4e14\u9700\u8981\u81ea\u52a8\u5bf9\u6539\u53d8\u4f5c\u51fa\u8c03\u6574\u3002\u5982\u679c\u8ba1\u7b97\u8d44\u6e90\u6709\u9650\uff0c\u5728\u7ebf\u5b66\u4e60\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u65b9\u6848\uff1a\u4e00\u65e6\u5728\u7ebf\u5b66\u4e60\u7cfb\u7edf\u5b66\u4e60\u4e86\u65b0\u7684\u6570\u636e\u5b9e\u4f8b\uff0c\u5b83\u5c31\u4e0d\u518d\u9700\u8981\u8fd9\u4e9b\u6570\u636e\u4e86\uff0c\u6240\u4ee5\u6254\u6389\u8fd9\u4e9b\u6570\u636e\uff08\u9664\u975e\u4f60\u60f3\u6eda\u56de\u5230\u4e4b\u524d\u7684\u4e00\u4e2a\u72b6\u6001\uff0c\u518d\u6b21\u4f7f\u7528\u6570\u636e\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u7a7a\u95f4\u3002 \u5728\u7ebf\u5b66\u4e60\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u5f53\u673a\u5668\u7684\u5185\u5b58\u5b58\u4e0d\u4e0b\u5927\u91cf\u6570\u636e\u96c6\u65f6\uff0c\u7528\u6765\u8bad\u7ec3\u7cfb\u7edf\uff08\u8fd9\u79f0\u4f5c\u6838\u5916\u5b66\u4e60\uff0c out-of-core learning\uff09\u3002\u7b97\u6cd5\u52a0\u8f7d\u90e8\u5206\u7684\u6570\u636e\uff0c\u7528\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u7528\u6240\u6709\u6570\u636e\u90fd\u8fdb\u884c\u4e86\u8bad\u7ec3\uff08\u89c1\u56fe 1-14\uff09\u3002 \u8b66\u544a\uff1a\u8fd9\u4e2a\u6574\u4e2a\u8fc7\u7a0b\u901a\u5e38\u662f\u79bb\u7ebf\u5b8c\u6210\u7684\uff08\u5373\uff0c\u4e0d\u5728\u90e8\u7f72\u7684\u7cfb\u7edf\u4e0a\uff09\uff0c\u6240\u4ee5\u5728\u7ebf\u5b66\u4e60\u8fd9\u4e2a\u540d\u5b57\u4f1a\u8ba9\u4eba\u7591\u60d1\u3002\u53ef\u4ee5\u628a\u5b83\u60f3\u6210\u6301\u7eed\u5b66\u4e60\u3002 \u56fe 1-14 \u4f7f\u7528\u5728\u7ebf\u5b66\u4e60\u5904\u7406\u5927\u91cf\u6570\u636e\u96c6 \u5728\u7ebf\u5b66\u4e60\u7cfb\u7edf\u7684\u4e00\u4e2a\u91cd\u8981\u53c2\u6570\u662f\uff0c\u5b83\u4eec\u53ef\u4ee5\u591a\u5feb\u5730\u9002\u5e94\u6570\u636e\u7684\u6539\u53d8\uff1a\u8fd9\u88ab\u79f0\u4e3a\u5b66\u4e60\u901f\u7387\u3002\u5982\u679c\u4f60\u8bbe\u5b9a\u4e00\u4e2a\u9ad8\u5b66\u4e60\u901f\u7387\uff0c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u5feb\u901f\u9002\u5e94\u65b0\u6570\u636e\uff0c\u4f46\u662f\u4e5f\u4f1a\u5feb\u901f\u5fd8\u8bb0\u8001\u6570\u636e\uff08\u4f60\u53ef\u4e0d\u60f3\u8ba9\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u53ea\u6807\u8bb0\u6700\u65b0\u7684\u5783\u573e\u90ae\u4ef6\u79cd\u7c7b\uff09\u3002\u76f8\u53cd\u7684\uff0c\u5982\u679c\u4f60\u8bbe\u5b9a\u7684\u5b66\u4e60\u901f\u7387\u4f4e\uff0c\u7cfb\u7edf\u7684\u60f0\u6027\u5c31\u4f1a\u5f3a\uff1a\u5373\uff0c\u5b83\u5b66\u7684\u66f4\u6162\uff0c\u4f46\u5bf9\u65b0\u6570\u636e\u4e2d\u7684\u566a\u58f0\u6216\u6ca1\u6709\u4ee3\u8868\u6027\u7684\u6570\u636e\u70b9\u7ed3\u679c\u4e0d\u90a3\u4e48\u654f\u611f\u3002 \u5728\u7ebf\u5b66\u4e60\u7684\u6311\u6218\u4e4b\u4e00\u662f\uff0c\u5982\u679c\u574f\u6570\u636e\u88ab\u7528\u6765\u8fdb\u884c\u8bad\u7ec3\uff0c\u7cfb\u7edf\u7684\u6027\u80fd\u5c31\u4f1a\u9010\u6e10\u4e0b\u6ed1\u3002\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u90e8\u7f72\u7684\u7cfb\u7edf\uff0c\u7528\u6237\u5c31\u4f1a\u6ce8\u610f\u5230\u3002\u4f8b\u5982\uff0c\u574f\u6570\u636e\u53ef\u80fd\u6765\u81ea\u5931\u7075\u7684\u4f20\u611f\u5668\u6216\u673a\u5668\u4eba\uff0c\u6216\u67d0\u4eba\u5411\u641c\u7d22\u5f15\u64ce\u4f20\u5165\u5783\u573e\u4fe1\u606f\u4ee5\u63d0\u9ad8\u641c\u7d22\u6392\u540d\u3002\u8981\u51cf\u5c0f\u8fd9\u79cd\u98ce\u9669\uff0c\u4f60\u9700\u8981\u5bc6\u96c6\u76d1\u6d4b\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u6027\u80fd\u4e0b\u964d\uff0c\u8981\u5feb\u901f\u5173\u95ed\uff08\u6216\u662f\u6eda\u56de\u5230\u4e00\u4e2a\u4e4b\u524d\u7684\u72b6\u6001\uff09\u3002\u4f60\u53ef\u80fd\u8fd8\u8981\u76d1\u6d4b\u8f93\u5165\u6570\u636e\uff0c\u5bf9\u53cd\u5e38\u6570\u636e\u505a\u51fa\u53cd\u5e94\uff08\u6bd4\u5982\uff0c\u4f7f\u7528\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5\uff09\u3002 \u57fa\u4e8e\u5b9e\u4f8b vs \u57fa\u4e8e\u6a21\u578b\u5b66\u4e60 \u53e6\u4e00\u79cd\u5206\u7c7b\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\u662f\u5224\u65ad\u5b83\u4eec\u662f\u5982\u4f55\u8fdb\u884c\u5f52\u7eb3\u63a8\u5e7f\u7684\u3002\u5927\u591a\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u662f\u5173\u4e8e\u9884\u6d4b\u7684\u3002\u8fd9\u610f\u5473\u7740\u7ed9\u5b9a\u4e00\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u7cfb\u7edf\u9700\u8981\u80fd\u63a8\u5e7f\u5230\u4e4b\u524d\u6ca1\u89c1\u5230\u8fc7\u7684\u6837\u672c\u3002\u5bf9\u8bad\u7ec3\u6570\u636e\u96c6\u6709\u5f88\u597d\u7684\u6027\u80fd\u8fd8\u4e0d\u591f\uff0c\u771f\u6b63\u7684\u76ee\u6807\u662f\u5bf9\u65b0\u5b9e\u4f8b\u9884\u6d4b\u7684\u6027\u80fd\u3002 \u6709\u4e24\u79cd\u4e3b\u8981\u7684\u5f52\u7eb3\u65b9\u6cd5\uff1a\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60\u548c\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\u3002 \u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60 \u4e5f\u8bb8\u6700\u7b80\u5355\u7684\u5b66\u4e60\u5f62\u5f0f\u5c31\u662f\u7528\u8bb0\u5fc6\u5b66\u4e60\u3002\u5982\u679c\u7528\u8fd9\u79cd\u65b9\u6cd5\u505a\u4e00\u4e2a\u5783\u573e\u90ae\u4ef6\u68c0\u6d4b\u5668\uff0c\u53ea\u9700\u6807\u8bb0\u6240\u6709\u548c\u7528\u6237\u6807\u8bb0\u7684\u5783\u573e\u90ae\u4ef6\u76f8\u540c\u7684\u90ae\u4ef6 \u2014\u2014 \u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u5dee\uff0c\u4f46\u80af\u5b9a\u4e0d\u662f\u6700\u597d\u7684\u3002 \u4e0d\u4ec5\u80fd\u6807\u8bb0\u548c\u5df2\u77e5\u7684\u5783\u573e\u90ae\u4ef6\u76f8\u540c\u7684\u90ae\u4ef6\uff0c\u4f60\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u4e5f\u8981\u80fd\u6807\u8bb0\u7c7b\u4f3c\u5783\u573e\u90ae\u4ef6\u7684\u90ae\u4ef6\u3002\u8fd9\u5c31\u9700\u8981\u6d4b\u91cf\u4e24\u5c01\u90ae\u4ef6\u7684\u76f8\u4f3c\u6027\u3002\u4e00\u4e2a\uff08\u7b80\u5355\u7684\uff09\u76f8\u4f3c\u5ea6\u6d4b\u91cf\u65b9\u6cd5\u662f\u7edf\u8ba1\u4e24\u5c01\u90ae\u4ef6\u5305\u542b\u7684\u76f8\u540c\u5355\u8bcd\u7684\u6570\u91cf\u3002\u5982\u679c\u4e00\u5c01\u90ae\u4ef6\u542b\u6709\u8bb8\u591a\u5783\u573e\u90ae\u4ef6\u4e2d\u7684\u8bcd\uff0c\u5c31\u4f1a\u88ab\u6807\u8bb0\u4e3a\u5783\u573e\u90ae\u4ef6\u3002 \u8fd9\u88ab\u79f0\u4f5c\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60\uff1a\u7cfb\u7edf\u5148\u7528\u8bb0\u5fc6\u5b66\u4e60\u6848\u4f8b\uff0c\u7136\u540e\u4f7f\u7528\u76f8\u4f3c\u5ea6\u6d4b\u91cf\u63a8\u5e7f\u5230\u65b0\u7684\u4f8b\u5b50\uff08\u56fe 1-15\uff09\u3002 \u56fe 1-15 \u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60 \u57fa\u4e8e\u6a21\u578b\u5b66\u4e60 \u53e6\u4e00\u79cd\u4ece\u6837\u672c\u96c6\u8fdb\u884c\u5f52\u7eb3\u7684\u65b9\u6cd5\u662f\u5efa\u7acb\u8fd9\u4e9b\u6837\u672c\u7684\u6a21\u578b\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e2a\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u3002\u8fd9\u79f0\u4f5c\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\uff08\u56fe 1-16\uff09\u3002 \u56fe 1-16 \u57fa\u4e8e\u6a21\u578b\u5b66\u4e60 \u4f8b\u5982\uff0c\u4f60\u60f3\u77e5\u9053\u94b1\u662f\u5426\u80fd\u8ba9\u4eba\u5feb\u4e50\uff0c\u4f60\u4ece OECD \u7f51\u7ad9 \u4e0b\u8f7d\u4e86 Better Life Index \u6307\u6570\u6570\u636e\uff0c\u8fd8\u4ece IMF \u4e0b\u8f7d\u4e86\u4eba\u5747 GDP \u6570\u636e\u3002\u8868 1-1 \u5c55\u793a\u4e86\u6458\u8981\u3002 \u8868 1-1 \u94b1\u4f1a\u4f7f\u4eba\u5e78\u798f\u5417\uff1f \u7528\u4e00\u4e9b\u56fd\u5bb6\u7684\u6570\u636e\u753b\u56fe\uff08\u56fe 1-17\uff09\u3002 \u56fe 1-17 \u4f60\u770b\u5230\u8d8b\u52bf\u4e86\u5417\uff1f \u786e\u5b9e\u80fd\u770b\u5230\u8d8b\u52bf\uff01\u5c3d\u7ba1\u6570\u636e\u6709\u566a\u58f0\uff08\u5373\uff0c\u90e8\u5206\u968f\u673a\uff09\uff0c\u770b\u8d77\u6765\u751f\u6d3b\u6ee1\u610f\u5ea6\u662f\u968f\u7740\u4eba\u5747 GDP \u7684\u589e\u957f\u7ebf\u6027\u63d0\u9ad8\u7684\u3002\u6240\u4ee5\uff0c\u4f60\u51b3\u5b9a\u751f\u6d3b\u6ee1\u610f\u5ea6\u5efa\u6a21\u4e3a\u4eba\u5747 GDP \u7684\u7ebf\u6027\u51fd\u6570\u3002\u8fd9\u4e00\u6b65\u79f0\u4f5c\u6a21\u578b\u9009\u62e9\uff1a\u4f60\u9009\u4e00\u4e2a\u751f\u6d3b\u6ee1\u610f\u5ea6\u7684\u7ebf\u6027\u6a21\u578b\uff0c\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\uff0c\u4eba\u5747 GDP\uff08\u516c\u5f0f 1-1\uff09\u3002 \u516c\u5f0f 1-1 \u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u6a21\u578b \u8fd9\u4e2a\u6a21\u578b\u6709\u4e24\u4e2a\u53c2\u6570 \u03b80 \u548c \u03b81 \u3002\u901a\u8fc7\u8c03\u6574\u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u4f60\u7684\u6a21\u578b\u8868\u793a\u4efb\u4f55\u7ebf\u6027\u51fd\u6570\uff0c\u89c1\u56fe 1-18\u3002 \u56fe 1-18 \u51e0\u4e2a\u53ef\u80fd\u7684\u7ebf\u6027\u6a21\u578b \u5728\u4f7f\u7528\u6a21\u578b\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u786e\u5b9a \u03b80 \u548c \u03b81 \u3002\u5982\u4f55\u80fd\u77e5\u9053\u54ea\u4e2a\u503c\u53ef\u4ee5\u4f7f\u6a21\u578b\u7684\u6027\u80fd\u6700\u4f73\u5462\uff1f\u8981\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u9700\u8981\u6307\u5b9a\u6027\u80fd\u7684\u91cf\u5ea6\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5b9e\u7528\u51fd\u6570\uff08\u6216\u62df\u5408\u51fd\u6570\uff09\u7528\u6765\u6d4b\u91cf\u6a21\u578b\u662f\u5426\u591f\u597d\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4ee3\u4ef7\u51fd\u6570\u6765\u6d4b\u91cf\u6a21\u578b\u6709\u591a\u5dee\u3002\u5bf9\u4e8e\u7ebf\u6027\u56de\u5f52\u95ee\u9898\uff0c\u4eba\u4eec\u4e00\u822c\u662f\u7528\u4ee3\u4ef7\u51fd\u6570\u6d4b\u91cf\u7ebf\u6027\u6a21\u578b\u7684\u9884\u6d4b\u503c\u548c\u8bad\u7ec3\u6837\u672c\u7684\u8ddd\u79bb\u5dee\uff0c\u76ee\u6807\u662f\u4f7f\u8ddd\u79bb\u5dee\u6700\u5c0f\u3002 \u63a5\u4e0b\u6765\u5c31\u662f\u7ebf\u6027\u56de\u5f52\u7b97\u6cd5\uff0c\u4f60\u7528\u8bad\u7ec3\u6837\u672c\u8bad\u7ec3\u7b97\u6cd5\uff0c\u7b97\u6cd5\u627e\u5230\u4f7f\u7ebf\u6027\u6a21\u578b\u6700\u62df\u5408\u6570\u636e\u7684\u53c2\u6570\u3002\u8fd9\u79f0\u4f5c\u6a21\u578b\u8bad\u7ec3\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u7b97\u6cd5\u5f97\u5230\u7684\u53c2\u6570\u503c\u662f \u03b80=4.85 \u548c \u03b81=4.91\u00d710\u20135 \u3002 \u73b0\u5728\u6a21\u578b\u5df2\u7ecf\u6700\u7d27\u5bc6\u5730\u62df\u5408\u5230\u8bad\u7ec3\u6570\u636e\u4e86\uff0c\u89c1\u56fe 1-19\u3002 \u56fe 1-19 \u6700\u4f73\u62df\u5408\u8bad\u7ec3\u6570\u636e\u7684\u7ebf\u6027\u6a21\u578b \u6700\u540e\uff0c\u53ef\u4ee5\u51c6\u5907\u8fd0\u884c\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u4e86\u3002\u4f8b\u5982\uff0c\u5047\u5982\u4f60\u60f3\u77e5\u9053\u585e\u6d66\u8def\u65af\u4eba\u6709\u591a\u5e78\u798f\uff0c\u4f46 OECD \u6ca1\u6709\u5b83\u7684\u6570\u636e\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u7528\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\uff1a\u67e5\u8be2\u585e\u6d66\u8def\u65af\u7684\u4eba\u5747 GDP\uff0c\u4e3a 22587 \u7f8e\u5143\uff0c\u7136\u540e\u5e94\u7528\u6a21\u578b\u5f97\u5230\u751f\u6d3b\u6ee1\u610f\u5ea6\uff0c\u540e\u8005\u7684\u503c\u5728 4.85 + 22,587 \u00d7 4.91 \u00d7 10-5 = 5.96 \u5de6\u53f3\u3002 \u4e3a\u4e86\u6fc0\u8d77\u4f60\u7684\u5174\u8da3\uff0c\u6848\u4f8b 1-1 \u5c55\u793a\u4e86\u52a0\u8f7d\u6570\u636e\u3001\u51c6\u5907\u3001\u521b\u5efa\u6563\u70b9\u56fe\u7684 Python \u4ee3\u7801\uff0c\u7136\u540e\u8bad\u7ec3\u7ebf\u6027\u6a21\u578b\u5e76\u8fdb\u884c\u9884\u6d4b\u3002 \u6848\u4f8b 1-1\uff0c\u4f7f\u7528 Scikit-Learn \u8bad\u7ec3\u5e76\u8fd0\u884c\u7ebf\u6027\u6a21\u578b\u3002 import matplotlib import matplotlib.pyplot as plt import numpy as np import pandas as pd import sklearn # \u52a0\u8f7d\u6570\u636e oecd_bli = pd.read_csv(\"oecd_bli_2015.csv\", thousands=',') gdp_per_capita = pd.read_csv(\"gdp_per_capita.csv\",thousands=',',delimiter='\\t', encoding='latin1', na_values=\"n/a\") # \u51c6\u5907\u6570\u636e country_stats = prepare_country_stats(oecd_bli, gdp_per_capita) X = np.c_[country_stats[\"GDP per capita\"]] y = np.c_[country_stats[\"Life satisfaction\"]] # \u53ef\u89c6\u5316\u6570\u636e country_stats.plot(kind='scatter', x=\"GDP per capita\", y='Life satisfaction') plt.show() # \u9009\u62e9\u7ebf\u6027\u6a21\u578b lin_reg_model = sklearn.linear_model.LinearRegression() # \u8bad\u7ec3\u6a21\u578b lin_reg_model.fit(X, y) # \u5bf9\u585e\u6d66\u8def\u65af\u8fdb\u884c\u9884\u6d4b X_new = [[22587]] # \u585e\u6d66\u8def\u65af\u7684\u4eba\u5747GDP print(lin_reg_model.predict(X_new)) # outputs [[ 5.96242338]] \u6ce8\u89e3\uff1a\u5982\u679c\u4f60\u4e4b\u524d\u63a5\u89e6\u8fc7\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60\u7b97\u6cd5\uff0c\u4f60\u4f1a\u53d1\u73b0\u65af\u6d1b\u6587\u5c3c\u4e9a\u7684\u4eba\u5747 GDP\uff0820732 \u7f8e\u5143\uff09\u548c\u585e\u6d66\u8def\u65af\u5dee\u8ddd\u5f88\u5c0f\uff0cOECD \u6570\u636e\u4e0a\u65af\u6d1b\u6587\u5c3c\u4e9a\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u662f 5.7\uff0c\u5c31\u53ef\u4ee5\u9884\u6d4b\u585e\u6d66\u8def\u65af\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u4e5f\u662f 5.7\u3002\u5982\u679c\u653e\u5927\u4e00\u4e0b\u8303\u56f4\uff0c\u770b\u4e00\u4e0b\u63a5\u4e0b\u6765\u4e24\u4e2a\u4e34\u8fd1\u7684\u56fd\u5bb6\uff0c\u4f60\u4f1a\u53d1\u73b0\u8461\u8404\u7259\u548c\u897f\u73ed\u7259\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u5206\u522b\u662f 5.1 \u548c 6.5\u3002\u5bf9\u8fd9\u4e09\u4e2a\u503c\u8fdb\u884c\u5e73\u5747\u5f97\u5230 5.77\uff0c\u5c31\u548c\u57fa\u4e8e\u6a21\u578b\u7684\u9884\u6d4b\u503c\u5f88\u63a5\u8fd1\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\u53eb\u505ak\u8fd1\u90bb\u56de\u5f52\uff08\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c k=3 \uff09\u3002 \u5728\u524d\u9762\u7684\u4ee3\u7801\u4e2d\u66ff\u6362\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e3a K \u8fd1\u90bb\u6a21\u578b\uff0c\u53ea\u9700\u66f4\u6362\u4e0b\u9762\u4e00\u884c\uff1a ```py clf = sklearn.linear_model.LinearRegression() ``` \u4e3a\uff1a ```py clf = sklearn.neighbors.KNeighborsRegressor(n_neighbors=3) ``` \u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u4f60\u7684\u6a21\u578b\u5c31\u53ef\u4ee5\u4f5c\u51fa\u597d\u7684\u9884\u6d4b\u3002\u5982\u679c\u4e0d\u80fd\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u66f4\u591a\u7684\u5c5e\u6027\uff08\u5c31\u4e1a\u7387\u3001\u5065\u5eb7\u3001\u7a7a\u6c14\u6c61\u67d3\u7b49\u7b49\uff09\uff0c\u83b7\u53d6\u66f4\u591a\u66f4\u597d\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u6216\u9009\u62e9\u4e00\u4e2a\u66f4\u597d\u7684\u6a21\u578b\uff08\u6bd4\u5982\uff0c\u591a\u9879\u5f0f\u56de\u5f52\u6a21\u578b\uff09\u3002 \u603b\u7ed3\u4e00\u4e0b\uff1a \u7814\u7a76\u6570\u636e \u9009\u62e9\u6a21\u578b \u7528\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff08\u5373\uff0c\u5b66\u4e60\u7b97\u6cd5\u641c\u5bfb\u6a21\u578b\u53c2\u6570\u503c\uff0c\u4f7f\u4ee3\u4ef7\u51fd\u6570\u6700\u5c0f\uff09 \u6700\u540e\uff0c\u4f7f\u7528\u6a21\u578b\u5bf9\u65b0\u6848\u4f8b\u8fdb\u884c\u9884\u6d4b\uff08\u8fd9\u79f0\u4f5c\u63a8\u65ad\uff09\uff0c\u4f46\u613f\u8fd9\u4e2a\u6a21\u578b\u63a8\u5e7f\u6548\u679c\u4e0d\u5dee \u8fd9\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u3002\u5728\u7b2c 2 \u7ae0\u4e2d\uff0c\u4f60\u4f1a\u7b2c\u4e00\u624b\u5730\u63a5\u89e6\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\u3002 \u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u8bb8\u591a\u5173\u4e8e\u57fa\u7840\u7684\u5185\u5bb9\uff1a\u4f60\u73b0\u5728\u77e5\u9053\u4e86\u673a\u5668\u5b66\u4e60\u662f\u5173\u4e8e\u4ec0\u4e48\u7684\uff0c\u4e3a\u4ec0\u4e48\u5b83\u8fd9\u4e48\u6709\u7528\uff0c\u6700\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u7684\u5206\u7c7b\uff0c\u5178\u578b\u7684\u9879\u76ee\u5de5\u4f5c\u6d41\u7a0b\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u770b\u5b66\u4e60\u4e2d\u4f1a\u53d1\u751f\u4ec0\u4e48\u9519\u8bef\uff0c\u5bfc\u81f4\u4e0d\u80fd\u505a\u51fa\u51c6\u786e\u7684\u9884\u6d4b\u3002 \u673a\u5668\u5b66\u4e60\u7684\u4e3b\u8981\u6311\u6218 \u7b80\u800c\u8a00\u4e4b\uff0c\u56e0\u4e3a\u4f60\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u9009\u62e9\u4e00\u4e2a\u5b66\u4e60\u7b97\u6cd5\u5e76\u7528\u4e00\u4e9b\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u4e24\u4ef6\u4e8b\u5c31\u662f\u201c\u9519\u8bef\u7684\u7b97\u6cd5\u201d\u548c\u201c\u9519\u8bef\u7684\u6570\u636e\u201d\u3002\u6211\u4eec\u4ece\u9519\u8bef\u7684\u6570\u636e\u5f00\u59cb\u3002 \u8bad\u7ec3\u6570\u636e\u91cf\u4e0d\u8db3 \u8981\u8ba9\u4e00\u4e2a\u8e52\u8dda\u5b66\u6b65\u7684\u5b69\u5b50\u77e5\u9053\u4ec0\u4e48\u662f\u82f9\u679c\uff0c\u9700\u8981\u505a\u7684\u5c31\u662f\u6307\u7740\u4e00\u4e2a\u82f9\u679c\u8bf4\u201c\u82f9\u679c\u201d\uff08\u53ef\u80fd\u9700\u8981\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u51e0\u6b21\uff09\u3002\u73b0\u5728\u8fd9\u4e2a\u5b69\u5b50\u5c31\u80fd\u8ba4\u8bc6\u6240\u6709\u5f62\u72b6\u548c\u989c\u8272\u7684\u82f9\u679c\u3002\u771f\u662f\u4e2a\u5929\u624d\uff01 \u673a\u5668\u5b66\u4e60\u8fd8\u8fbe\u4e0d\u5230\u8fd9\u4e2a\u7a0b\u5ea6\uff1b\u9700\u8981\u5927\u91cf\u6570\u636e\uff0c\u624d\u80fd\u8ba9\u591a\u6570\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u5373\u4fbf\u5bf9\u4e8e\u975e\u5e38\u7b80\u5355\u7684\u95ee\u9898\uff0c\u4e00\u822c\u4e5f\u9700\u8981\u6570\u5343\u7684\u6837\u672c\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u56fe\u50cf\u6216\u8bed\u97f3\u8bc6\u522b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u6570\u767e\u4e07\u7684\u6837\u672c\uff08\u9664\u975e\u4f60\u80fd\u91cd\u590d\u4f7f\u7528\u90e8\u5206\u5b58\u5728\u7684\u6a21\u578b\uff09\u3002 \u6570\u636e\u4e0d\u5408\u7406\u7684\u6709\u6548\u6027 \u5728\u4e00\u7bc7 2001 \u5e74\u53d1\u8868\u7684 \u8457\u540d\u8bba\u6587 \u4e2d\uff0c\u5fae\u8f6f\u7814\u7a76\u5458 Michele Banko \u548c Eric Brill \u5c55\u793a\u4e86\u4e0d\u540c\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u5305\u62ec\u975e\u5e38\u7b80\u5355\u7684\u7b97\u6cd5\uff0c\u4e00\u65e6\u6709\u4e86\u5927\u91cf\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u5728\u8fdb\u884c\u53bb\u9664\u8bed\u8a00\u6b67\u4e49\u7684\u6d4b\u8bd5\u4e2d\u51e0\u4e4e\u6709\u76f8\u540c\u7684\u6027\u80fd\uff08\u89c1\u56fe 1-20\uff09\u3002 \u56fe 1-20 \u6570\u636e\u548c\u7b97\u6cd5\u7684\u91cd\u8981\u6027\u5bf9\u6bd4 \u8bba\u6587\u4f5c\u8005\u8bf4\uff1a\u201c\u7ed3\u679c\u8bf4\u660e\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u8003\u8651\u5728\u7b97\u6cd5\u5f00\u53d1 vs \u8bed\u6599\u5e93\u53d1\u5c55\u4e0a\u82b1\u8d39\u65f6\u95f4\u548c\u91d1\u94b1\u7684\u53d6\u820d\u3002\u201d \u5bf9\u4e8e\u590d\u6742\u95ee\u9898\uff0c\u6570\u636e\u6bd4\u7b97\u6cd5\u66f4\u91cd\u8981\u7684\u4e3b\u5f20\u5728 2009 \u5e74\u7531 Norvig \u53d1\u8868\u7684\u8bba\u6587 \u300aThe Unreasonable Effectiveness of Data\u300b \u5f97\u5230\u4e86\u8fdb\u4e00\u6b65\u7684\u63a8\u5e7f\u3002\u4f46\u662f\uff0c\u5e94\u8be5\u6ce8\u610f\u5230\uff0c\u5c0f\u578b\u548c\u4e2d\u578b\u7684\u6570\u636e\u96c6\u4ecd\u7136\u662f\u975e\u5e38\u5e38\u89c1\u7684\uff0c\u83b7\u5f97\u989d\u5916\u7684\u8bad\u7ec3\u6570\u636e\u5e76\u4e0d\u603b\u662f\u8f7b\u6613\u548c\u5ec9\u4ef7\u7684\uff0c\u6240\u4ee5\u4e0d\u8981\u629b\u5f03\u7b97\u6cd5\u3002 \u6ca1\u6709\u4ee3\u8868\u6027\u7684\u8bad\u7ec3\u6570\u636e \u4e3a\u4e86\u66f4\u597d\u5730\u8fdb\u884c\u5f52\u7eb3\u63a8\u5e7f\uff0c\u8ba9\u8bad\u7ec3\u6570\u636e\u5bf9\u65b0\u6570\u636e\u5177\u6709\u4ee3\u8868\u6027\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u65e0\u8bba\u4f60\u7528\u7684\u662f\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60\u6216\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\uff0c\u8fd9\u70b9\u90fd\u5f88\u91cd\u8981\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u4e4b\u524d\u7528\u6765\u8bad\u7ec3\u7ebf\u6027\u6a21\u578b\u7684\u56fd\u5bb6\u96c6\u5408\u4e0d\u591f\u5177\u6709\u4ee3\u8868\u6027\uff1a\u7f3a\u5c11\u4e86\u4e00\u4e9b\u56fd\u5bb6\u3002\u56fe 1-21 \u5c55\u793a\u4e86\u6dfb\u52a0\u8fd9\u4e9b\u7f3a\u5931\u56fd\u5bb6\u4e4b\u540e\u7684\u6570\u636e\u3002 \u56fe 1-21 \u4e00\u4e2a\u66f4\u5177\u4ee3\u8868\u6027\u7684\u8bad\u7ec3\u6837\u672c \u5982\u679c\u4f60\u7528\u8fd9\u4efd\u6570\u636e\u8bad\u7ec3\u7ebf\u6027\u6a21\u578b\uff0c\u5f97\u5230\u7684\u662f\u5b9e\u7ebf\uff0c\u65e7\u6a21\u578b\u7528\u865a\u7ebf\u8868\u793a\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u6dfb\u52a0\u51e0\u4e2a\u56fd\u5bb6\u4e0d\u4ec5\u53ef\u4ee5\u663e\u8457\u5730\u6539\u53d8\u6a21\u578b\uff0c\u5b83\u8fd8\u8bf4\u660e\u5982\u6b64\u7b80\u5355\u7684\u7ebf\u6027\u6a21\u578b\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u8fbe\u5230\u5f88\u597d\u7684\u6027\u80fd\u3002\u8c8c\u4f3c\u975e\u5e38\u5bcc\u88d5\u7684\u56fd\u5bb6\u6ca1\u6709\u4e2d\u7b49\u5bcc\u88d5\u7684\u56fd\u5bb6\u5feb\u4e50\uff08\u4e8b\u5b9e\u4e0a\uff0c\u975e\u5e38\u5bcc\u88d5\u7684\u56fd\u5bb6\u770b\u8d77\u6765\u66f4\u4e0d\u5feb\u4e50\uff09\uff0c\u76f8\u53cd\u7684\uff0c\u4e00\u4e9b\u8d2b\u7a77\u7684\u56fd\u5bb6\u770b\u4e0a\u53bb\u6bd4\u5bcc\u88d5\u7684\u56fd\u5bb6\u8fd8\u5e78\u798f\u3002 \u4f7f\u7528\u4e86\u6ca1\u6709\u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6\uff0c\u6211\u4eec\u8bad\u7ec3\u4e86\u4e00\u4e2a\u4e0d\u53ef\u80fd\u5f97\u5230\u51c6\u786e\u9884\u6d4b\u7684\u6a21\u578b\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u975e\u5e38\u8d2b\u7a77\u548c\u975e\u5e38\u5bcc\u88d5\u7684\u56fd\u5bb6\u3002 \u4f7f\u7528\u5177\u6709\u4ee3\u8868\u6027\u7684\u8bad\u7ec3\u96c6\u5bf9\u4e8e\u63a8\u5e7f\u5230\u65b0\u6848\u4f8b\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u4f46\u662f\u505a\u8d77\u6765\u6bd4\u8bf4\u8d77\u6765\u8981\u96be\uff1a\u5982\u679c\u6837\u672c\u592a\u5c0f\uff0c\u5c31\u4f1a\u6709\u6837\u672c\u566a\u58f0\uff08\u5373\uff0c\u4f1a\u6709\u4e00\u5b9a\u6982\u7387\u5305\u542b\u6ca1\u6709\u4ee3\u8868\u6027\u7684\u6570\u636e\uff09\uff0c\u4f46\u662f\u5373\u4f7f\u662f\u975e\u5e38\u5927\u7684\u6837\u672c\u4e5f\u53ef\u80fd\u6ca1\u6709\u4ee3\u8868\u6027\uff0c\u5982\u679c\u53d6\u6837\u65b9\u6cd5\u9519\u8bef\u7684\u8bdd\u3002\u8fd9\u53eb\u505a\u6837\u672c\u504f\u5dee\u3002 \u4e00\u4e2a\u6837\u672c\u504f\u5dee\u7684\u8457\u540d\u6848\u4f8b \u4e5f\u8bb8\u5173\u4e8e\u6837\u672c\u504f\u5dee\u6700\u6709\u540d\u7684\u6848\u4f8b\u53d1\u751f\u5728 1936 \u5e74\u5170\u767b\u548c\u7f57\u65af\u798f\u7684\u7f8e\u56fd\u5927\u9009\uff1a\u300a\u6587\u5b66\u6587\u6458\u300b\u505a\u4e86\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6c11\u8c03\uff0c\u7ed9 1000 \u4e07\u4eba\u90ae\u5bc4\u4e86\u8c03\u67e5\u4fe1\u3002\u5f97\u5230\u4e86 240 \u4e07\u56de\u4fe1\uff0c\u975e\u5e38\u6709\u4fe1\u5fc3\u5730\u9884\u6d4b\u5170\u767b\u4f1a\u4ee5 57% \u8d62\u5f97\u5927\u9009\u3002\u7136\u800c\uff0c\u7f57\u65af\u798f\u8d62\u5f97\u4e86 62% \u7684\u9009\u7968\u3002\u9519\u8bef\u53d1\u751f\u5728\u300a\u6587\u5b66\u6587\u6458\u300b\u7684\u53d6\u6837\u65b9\u6cd5\uff1a \u9996\u5148\uff0c\u4e3a\u4e86\u83b7\u53d6\u53d1\u4fe1\u5730\u5740\uff0c\u300a\u6587\u5b66\u6587\u6458\u300b\u4f7f\u7528\u4e86\u7535\u8bdd\u9ec4\u9875\u3001\u6742\u5fd7\u8ba2\u9605\u7528\u6237\u3001\u4ff1\u4e50\u90e8\u4f1a\u5458\u7b49\u76f8\u4f3c\u7684\u5217\u8868\u3002\u6240\u6709\u8fd9\u4e9b\u5217\u8868\u90fd\u504f\u5411\u4e8e\u5bcc\u88d5\u4eba\u7fa4\uff0c\u4ed6\u4eec\u90fd\u503e\u5411\u4e8e\u6295\u7968\u7ed9\u5171\u548c\u515a\uff08\u5373\u5170\u767b\uff09\u3002 \u7b2c\u4e8c\uff0c\u53ea\u6709 25% \u7684\u56de\u7b54\u4e86\u8c03\u7814\u3002\u8fd9\u5c31\u53c8\u4e00\u6b21\u5f15\u5165\u4e86\u6837\u672c\u504f\u5dee\uff0c\u5b83\u6392\u9664\u4e86\u4e0d\u5173\u5fc3\u653f\u6cbb\u7684\u4eba\u3001\u4e0d\u559c\u6b22\u300a\u6587\u5b66\u6587\u6458\u300b\u7684\u4eba\uff0c\u548c\u5176\u5b83\u5173\u952e\u4eba\u7fa4\u3002\u8fd9\u79cd\u7279\u6b8a\u7684\u6837\u672c\u504f\u5dee\u79f0\u4f5c\u65e0\u5e94\u7b54\u504f\u5dee\u3002 \u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5047\u5982\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u80fd\u8bc6\u522b\u653e\u514b\u97f3\u4e50\uff08Funk Music, \u522b\u540d\u9a9a\u4e50\uff09\u89c6\u9891\u7684\u7cfb\u7edf\u3002\u5efa\u7acb\u8bad\u7ec3\u96c6\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u5728 YouTube \u4e0a\u641c\u7d22\u201c\u653e\u514b\u97f3\u4e50\u201d\uff0c\u4f7f\u7528\u641c\u7d22\u5230\u7684\u89c6\u9891\u3002\u4f46\u662f\u8fd9\u6837\u5c31\u5047\u5b9a\u4e86 YouTube \u7684\u641c\u7d22\u5f15\u64ce\u8fd4\u56de\u7684\u89c6\u9891\u96c6\uff0c\u662f\u5bf9 YouTube \u4e0a\u7684\u6240\u6709\u653e\u514b\u97f3\u4e50\u6709\u4ee3\u8868\u6027\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u641c\u7d22\u7ed3\u679c\u4f1a\u504f\u5411\u4e8e\u4eba\u4eec\u6b4c\u624b\uff08\u5982\u679c\u4f60\u5c45\u4f4f\u5728\u5df4\u897f\uff0c\u4f60\u4f1a\u5f97\u5230\u8bb8\u591a\u201cfunk carioca\u201d\u89c6\u9891\uff0c\u5b83\u4eec\u548c James Brown \u7684\u622a\u7136\u4e0d\u540c\uff09\u3002\u4ece\u53e6\u4e00\u65b9\u9762\u6765\u8bb2\uff0c\u4f60\u600e\u4e48\u5f97\u5230\u4e00\u4e2a\u5927\u7684\u8bad\u7ec3\u96c6\u5462\uff1f \u4f4e\u8d28\u91cf\u6570\u636e \u5f88\u660e\u663e\uff0c\u5982\u679c\u8bad\u7ec3\u96c6\u4e2d\u7684\u9519\u8bef\u3001\u5f02\u5e38\u503c\u548c\u566a\u58f0\uff08\u9519\u8bef\u6d4b\u91cf\u5f15\u5165\u7684\uff09\u592a\u591a\uff0c\u7cfb\u7edf\u68c0\u6d4b\u51fa\u6f5c\u5728\u89c4\u5f8b\u7684\u96be\u5ea6\u5c31\u4f1a\u53d8\u5927\uff0c\u6027\u80fd\u5c31\u4f1a\u964d\u4f4e\u3002\u82b1\u8d39\u65f6\u95f4\u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u6e05\u7406\u662f\u5341\u5206\u91cd\u8981\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5927\u591a\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u4e00\u5927\u90e8\u5206\u65f6\u95f4\u662f\u505a\u6e05\u6d17\u5de5\u4f5c\u7684\u3002\u4f8b\u5982\uff1a \u5982\u679c\u4e00\u4e9b\u5b9e\u4f8b\u662f\u660e\u663e\u7684\u5f02\u5e38\u503c\uff0c\u6700\u597d\u5220\u6389\u5b83\u4eec\u6216\u5c1d\u8bd5\u624b\u5de5\u4fee\u6539\u9519\u8bef\uff1b \u5982\u679c\u4e00\u4e9b\u5b9e\u4f8b\u7f3a\u5c11\u7279\u5f81\uff08\u6bd4\u5982\uff0c\u4f60\u7684 5% \u7684\u987e\u5ba2\u6ca1\u6709\u8bf4\u660e\u5e74\u9f84\uff09\uff0c\u4f60\u5fc5\u987b\u51b3\u5b9a\u662f\u5426\u5ffd\u7565\u8fd9\u4e2a\u5c5e\u6027\u3001\u5ffd\u7565\u8fd9\u4e9b\u5b9e\u4f8b\u3001\u586b\u5165\u7f3a\u5931\u503c\uff08\u6bd4\u5982\uff0c\u5e74\u9f84\u4e2d\u4f4d\u6570\uff09\uff0c\u6216\u8005\u8bad\u7ec3\u4e00\u4e2a\u542b\u6709\u8fd9\u4e2a\u7279\u5f81\u7684\u6a21\u578b\u548c\u4e00\u4e2a\u4e0d\u542b\u6709\u8fd9\u4e2a\u7279\u5f81\u7684\u6a21\u578b\uff0c\u7b49\u7b49\u3002 \u4e0d\u76f8\u5173\u7684\u7279\u5f81 \u4fd7\u8bed\u8bf4\uff1a\u8fdb\u6765\u7684\u662f\u5783\u573e\uff0c\u51fa\u53bb\u7684\u4e5f\u662f\u5783\u573e\u3002\u4f60\u7684\u7cfb\u7edf\u53ea\u6709\u5728\u8bad\u7ec3\u6570\u636e\u5305\u542b\u8db3\u591f\u76f8\u5173\u7279\u5f81\u3001\u975e\u76f8\u5173\u7279\u5f81\u4e0d\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u80fd\u8fdb\u884c\u5b66\u4e60\u3002\u673a\u5668\u5b66\u4e60\u9879\u76ee\u6210\u529f\u7684\u5173\u952e\u4e4b\u4e00\u662f\u7528\u597d\u7684\u7279\u5f81\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4f5c\u7279\u5f81\u5de5\u7a0b\uff0c\u5305\u62ec\uff1a \u7279\u5f81\u9009\u62e9\uff1a\u5728\u6240\u6709\u5b58\u5728\u7684\u7279\u5f81\u4e2d\u9009\u53d6\u6700\u6709\u7528\u7684\u7279\u5f81\u8fdb\u884c\u8bad\u7ec3\u3002 \u7279\u5f81\u63d0\u53d6\uff1a\u7ec4\u5408\u5b58\u5728\u7684\u7279\u5f81\uff0c\u751f\u6210\u4e00\u4e2a\u66f4\u6709\u7528\u7684\u7279\u5f81\uff08\u5982\u524d\u9762\u770b\u5230\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u964d\u7ef4\u7b97\u6cd5\uff09\u3002 \u6536\u96c6\u65b0\u6570\u636e\u521b\u5efa\u65b0\u7279\u5f81\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u8fc7\u4e86\u8bb8\u591a\u574f\u6570\u636e\u7684\u4f8b\u5b50\uff0c\u63a5\u4e0b\u6765\u770b\u51e0\u4e2a\u574f\u7b97\u6cd5\u7684\u4f8b\u5b50\u3002 \u8fc7\u62df\u5408\u8bad\u7ec3\u6570\u636e \u5982\u679c\u4f60\u5728\u5916\u56fd\u6e38\u73a9\uff0c\u5f53\u5730\u7684\u51fa\u79df\u8f66\u53f8\u673a\u591a\u6536\u4e86\u4f60\u7684\u94b1\u3002\u4f60\u53ef\u80fd\u4f1a\u8bf4\u8fd9\u4e2a\u56fd\u5bb6\u6240\u6709\u7684\u51fa\u79df\u8f66\u53f8\u673a\u90fd\u662f\u5c0f\u5077\u3002\u8fc7\u5ea6\u5f52\u7eb3\u662f\u6211\u4eec\u4eba\u7c7b\u7ecf\u5e38\u505a\u7684\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5c0f\u5fc3\uff0c\u673a\u5668\u4e5f\u4f1a\u72af\u540c\u6837\u7684\u9519\u8bef\u3002\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u8fd9\u79f0\u4f5c\u8fc7\u62df\u5408\uff1a\u610f\u601d\u662f\u8bf4\uff0c\u6a21\u578b\u5728\u8bad\u7ec3\u6570\u636e\u4e0a\u8868\u73b0\u5f88\u597d\uff0c\u4f46\u662f\u63a8\u5e7f\u6548\u679c\u4e0d\u597d\u3002 \u56fe 1-22 \u5c55\u793a\u4e86\u4e00\u4e2a\u9ad8\u9636\u591a\u9879\u5f0f\u751f\u6d3b\u6ee1\u610f\u5ea6\u6a21\u578b\uff0c\u5b83\u5927\u5927\u8fc7\u62df\u5408\u4e86\u8bad\u7ec3\u6570\u636e\u3002\u5373\u4f7f\u5b83\u6bd4\u7b80\u5355\u7ebf\u6027\u6a21\u578b\u5728\u8bad\u7ec3\u6570\u636e\u4e0a\u8868\u73b0\u66f4\u597d\uff0c\u4f60\u4f1a\u76f8\u4fe1\u5b83\u7684\u9884\u6d4b\u5417\uff1f \u56fe 1-22 \u8fc7\u62df\u5408\u8bad\u7ec3\u6570\u636e \u590d\u6742\u7684\u6a21\u578b\uff0c\u6bd4\u5982\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff0c\u53ef\u4ee5\u68c0\u6d4b\u6570\u636e\u4e2d\u7684\u7ec6\u5fae\u89c4\u5f8b\uff0c\u4f46\u662f\u5982\u679c\u8bad\u7ec3\u96c6\u6709\u566a\u58f0\uff0c\u6216\u8005\u8bad\u7ec3\u96c6\u592a\u5c0f\uff08\u592a\u5c0f\u4f1a\u5f15\u5165\u6837\u672c\u566a\u58f0\uff09\uff0c\u6a21\u578b\u5c31\u4f1a\u53bb\u68c0\u6d4b\u566a\u58f0\u672c\u8eab\u7684\u89c4\u5f8b\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u4e9b\u89c4\u5f8b\u4e0d\u80fd\u63a8\u5e7f\u5230\u65b0\u5b9e\u4f8b\u3002\u4f8b\u5982\uff0c\u5047\u5982\u4f60\u7528\u66f4\u591a\u7684\u5c5e\u6027\u8bad\u7ec3\u751f\u6d3b\u6ee1\u610f\u5ea6\u6a21\u578b\uff0c\u5305\u62ec\u4e0d\u5305\u542b\u4fe1\u606f\u7684\u5c5e\u6027\uff0c\u6bd4\u5982\u56fd\u5bb6\u7684\u540d\u5b57\u3002\u5982\u6b64\u4e00\u6765\uff0c\u590d\u6742\u7684\u6a21\u578b\u53ef\u80fd\u4f1a\u68c0\u6d4b\u51fa\u8bad\u7ec3\u96c6\u4e2d\u540d\u5b57\u6709 w \u5b57\u6bcd\u7684\u56fd\u5bb6\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u5927\u4e8e 7\uff1a\u65b0\u897f\u5170\uff087.3\uff09\uff0c\u632a\u5a01\uff087.4\uff09\uff0c\u745e\u5178\uff087.2\uff09\u548c\u745e\u58eb\uff087.5\uff09\u3002\u4f60\u80fd\u76f8\u4fe1\u8fd9\u4e2a W-\u6ee1\u610f\u5ea6\u6cd5\u5219\u63a8\u5e7f\u5230\u5362\u65fa\u8fbe\u548c\u6d25\u5df4\u5e03\u97e6\u5417\uff1f\u5f88\u660e\u663e\uff0c\u8fd9\u4e2a\u89c4\u5f8b\u53ea\u662f\u8bad\u7ec3\u96c6\u6570\u636e\u4e2d\u5076\u7136\u51fa\u73b0\u7684\uff0c\u4f46\u662f\u6a21\u578b\u4e0d\u80fd\u5224\u65ad\u8fd9\u4e2a\u89c4\u5f8b\u662f\u771f\u5b9e\u7684\u3001\u8fd8\u662f\u566a\u58f0\u7684\u7ed3\u679c\u3002 \u8b66\u544a\uff1a\u8fc7\u62df\u5408\u53d1\u751f\u5728\u76f8\u5bf9\u4e8e\u8bad\u7ec3\u6570\u636e\u7684\u91cf\u548c\u566a\u58f0\uff0c\u6a21\u578b\u8fc7\u4e8e\u590d\u6742\u7684\u60c5\u51b5\u3002\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u6709\uff1a \u7b80\u5316\u6a21\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u53c2\u6570\u66f4\u5c11\u7684\u6a21\u578b\uff08\u6bd4\u5982\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\uff0c\u800c\u4e0d\u662f\u9ad8\u9636\u591a\u9879\u5f0f\u6a21\u578b\uff09\u3001\u51cf\u5c11\u8bad\u7ec3\u6570\u636e\u7684\u5c5e\u6027\u6570\u3001\u6216\u9650\u5236\u4e00\u4e0b\u6a21\u578b \u6536\u96c6\u66f4\u591a\u7684\u8bad\u7ec3\u6570\u636e \u51cf\u5c0f\u8bad\u7ec3\u6570\u636e\u7684\u566a\u58f0\uff08\u6bd4\u5982\uff0c\u4fee\u6539\u6570\u636e\u9519\u8bef\u548c\u53bb\u9664\u5f02\u5e38\u503c\uff09 \u9650\u5b9a\u4e00\u4e2a\u6a21\u578b\u4ee5\u8ba9\u5b83\u66f4\u7b80\u5355\uff0c\u964d\u4f4e\u8fc7\u62df\u5408\u7684\u98ce\u9669\u88ab\u79f0\u4f5c\u6b63\u5219\u5316\uff08regularization\uff09\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684\u7ebf\u6027\u6a21\u578b\u6709\u4e24\u4e2a\u53c2\u6570\uff0c \u03b80 \u548c \u03b81 \u3002\u5b83\u7ed9\u4e86\u5b66\u4e60\u7b97\u6cd5\u4e24\u4e2a\u81ea\u7531\u5ea6\u4ee5\u8ba9\u6a21\u578b\u9002\u5e94\u8bad\u7ec3\u6570\u636e\uff1a\u53ef\u4ee5\u8c03\u6574\u622a\u8ddd \u03b80 \u548c\u659c\u7387 \u03b81 \u3002\u5982\u679c\u5f3a\u5236 \u03b81=0 \uff0c\u7b97\u6cd5\u5c31\u53ea\u5269\u4e00\u4e2a\u81ea\u7531\u5ea6\uff0c\u62df\u5408\u6570\u636e\u5c31\u4f1a\u66f4\u4e3a\u56f0\u96be\uff1a\u80fd\u505a\u7684\u53ea\u662f\u5c06\u5728\u7ebf\u4e0b\u79fb\u52a8\uff0c\u5c3d\u53ef\u80fd\u5730\u9760\u8fd1\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u7ed3\u679c\u4f1a\u5728\u5e73\u5747\u503c\u9644\u8fd1\u3002\u8fd9\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b\uff01\u5982\u679c\u6211\u4eec\u5141\u8bb8\u7b97\u6cd5\u53ef\u4ee5\u4fee\u6539 \u03b81 \uff0c\u4f46\u662f\u53ea\u80fd\u5728\u4e00\u4e2a\u5f88\u5c0f\u7684\u8303\u56f4\u5185\u4fee\u6539\uff0c\u7b97\u6cd5\u7684\u81ea\u7531\u5ea6\u5c31\u4f1a\u4ecb\u4e8e 1 \u548c 2 \u4e4b\u95f4\u3002\u5b83\u8981\u6bd4\u4e24\u4e2a\u81ea\u7531\u5ea6\u7684\u6a21\u578b\u7b80\u5355\uff0c\u6bd4 1 \u4e2a\u81ea\u7531\u5ea6\u7684\u6a21\u578b\u8981\u590d\u6742\u3002\u4f60\u7684\u76ee\u6807\u662f\u5728\u5b8c\u7f8e\u62df\u5408\u6570\u636e\u548c\u4fdd\u6301\u6a21\u578b\u7b80\u5355\u6027\u4e0a\u627e\u5230\u5e73\u8861\uff0c\u786e\u4fdd\u7b97\u6cd5\u7684\u63a8\u5e7f\u6548\u679c\u3002 \u56fe 1-23 \u5c55\u793a\u4e86\u4e09\u4e2a\u6a21\u578b\uff1a\u865a\u7ebf\u8868\u793a\u7528\u7f3a\u5931\u90e8\u5206\u56fd\u5bb6\u7684\u6570\u636e\u8bad\u7ec3\u7684\u539f\u59cb\u6a21\u578b\uff0c\u77ed\u5212\u7ebf\u662f\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2a\u7528\u6240\u6709\u56fd\u5bb6\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u5b9e\u7ebf\u6a21\u578b\u7684\u8bad\u7ec3\u6570\u636e\u548c\u7b2c\u4e00\u4e2a\u76f8\u540c\uff0c\u4f46\u8fdb\u884c\u4e86\u6b63\u5219\u5316\u9650\u5236\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6b63\u5219\u5316\u5f3a\u5236\u6a21\u578b\u6709\u4e00\u4e2a\u5c0f\u7684\u659c\u7387\uff0c\u5b83\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u62df\u5408\u4e0d\u662f\u90a3\u4e48\u597d\uff0c\u4f46\u662f\u5bf9\u65b0\u6837\u672c\u7684\u63a8\u5e7f\u6548\u679c\u597d\u3002 \u56fe 1-23 \u6b63\u5219\u5316\u964d\u4f4e\u4e86\u8fc7\u5ea6\u62df\u5408\u7684\u98ce\u9669 \u6b63\u5219\u5316\u7684\u5ea6\u53ef\u4ee5\u7528\u4e00\u4e2a\u8d85\u53c2\u6570\uff08hyperparameter\uff09\u63a7\u5236\u3002\u8d85\u53c2\u6570\u662f\u4e00\u4e2a\u5b66\u4e60\u7b97\u6cd5\u7684\u53c2\u6570\uff08\u800c\u4e0d\u662f\u6a21\u578b\u7684\uff09\u3002\u8fd9\u6837\uff0c\u5b83\u662f\u4e0d\u4f1a\u88ab\u5b66\u4e60\u7b97\u6cd5\u672c\u8eab\u5f71\u54cd\u7684\uff0c\u5b83\u4f18\u4e8e\u8bad\u7ec3\uff0c\u5728\u8bad\u7ec3\u4e2d\u662f\u4fdd\u6301\u4e0d\u53d8\u7684\u3002\u5982\u679c\u4f60\u8bbe\u5b9a\u7684\u8d85\u53c2\u6570\u975e\u5e38\u5927\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u51e0\u4e4e\u662f\u5e73\u7684\u6a21\u578b\uff08\u659c\u7387\u63a5\u8fd1\u4e8e 0\uff09\uff1b\u8fd9\u79cd\u5b66\u4e60\u7b97\u6cd5\u51e0\u4e4e\u80af\u5b9a\u4e0d\u4f1a\u8fc7\u62df\u5408\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u662f\u4e5f\u5f88\u96be\u5f97\u5230\u4e00\u4e2a\u597d\u7684\u89e3\u3002\u8c03\u8282\u8d85\u53c2\u6570\u662f\u521b\u5efa\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u975e\u5e38\u91cd\u8981\u7684\u4e00\u90e8\u5206\uff08\u4e0b\u4e00\u7ae0\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u8be6\u7ec6\u7684\u4f8b\u5b50\uff09\u3002 \u6b20\u62df\u5408\u8bad\u7ec3\u6570\u636e \u4f60\u53ef\u80fd\u731c\u5230\u4e86\uff0c\u6b20\u62df\u5408\u662f\u548c\u8fc7\u62df\u5408\u76f8\u5bf9\u7684\uff1a\u5f53\u4f60\u7684\u6a21\u578b\u8fc7\u4e8e\u7b80\u5355\u65f6\u5c31\u4f1a\u53d1\u751f\u3002\u4f8b\u5982\uff0c\u751f\u6d3b\u6ee1\u610f\u5ea6\u7684\u7ebf\u6027\u6a21\u578b\u503e\u5411\u4e8e\u6b20\u62df\u5408\uff1b\u73b0\u5b9e\u8981\u6bd4\u8fd9\u4e2a\u6a21\u578b\u590d\u6742\u7684\u591a\uff0c\u6240\u4ee5\u9884\u6d4b\u5f88\u96be\u51c6\u786e\uff0c\u5373\u4f7f\u5728\u8bad\u7ec3\u6837\u672c\u4e0a\u4e5f\u5f88\u96be\u51c6\u786e\u3002 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u9009\u9879\u5305\u62ec\uff1a \u9009\u62e9\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u5e26\u6709\u66f4\u591a\u53c2\u6570 \u7528\u66f4\u597d\u7684\u7279\u5f81\u8bad\u7ec3\u5b66\u4e60\u7b97\u6cd5\uff08\u7279\u5f81\u5de5\u7a0b\uff09 \u51cf\u5c0f\u5bf9\u6a21\u578b\u7684\u9650\u5236\uff08\u6bd4\u5982\uff0c\u51cf\u5c0f\u6b63\u5219\u5316\u8d85\u53c2\u6570\uff09 \u56de\u987e \u73b0\u5728\uff0c\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u5f88\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u77e5\u8bc6\u3002\u7136\u800c\uff0c\u5b66\u8fc7\u4e86\u8fd9\u4e48\u591a\u6982\u5ff5\uff0c\u4f60\u53ef\u80fd\u4f1a\u611f\u5230\u6709\u4e9b\u8ff7\u5931\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u9000\u56de\u53bb\uff0c\u56de\u987e\u4e00\u4e0b\u91cd\u8981\u7684\uff1a \u673a\u5668\u5b66\u4e60\u662f\u8ba9\u673a\u5668\u901a\u8fc7\u5b66\u4e60\u6570\u636e\u5bf9\u67d0\u4e9b\u4efb\u52a1\u505a\u5f97\u66f4\u597d\uff0c\u800c\u4e0d\u4f7f\u7528\u786e\u5b9a\u7684\u4ee3\u7801\u89c4\u5219\u3002 \u6709\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\uff1a\u76d1\u7763\u6216\u975e\u76d1\u7763\uff0c\u6279\u91cf\u6216\u5728\u7ebf\uff0c\u57fa\u4e8e\u5b9e\u4f8b\u6216\u57fa\u4e8e\u6a21\u578b\uff0c\u7b49\u7b49\u3002 \u5728\u673a\u5668\u5b66\u4e60\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u4ece\u8bad\u7ec3\u96c6\u4e2d\u6536\u96c6\u6570\u636e\uff0c\u7136\u540e\u5bf9\u5b66\u4e60\u7b97\u6cd5\u8fdb\u884c\u8bad\u7ec3\u3002\u5982\u679c\u7b97\u6cd5\u662f\u57fa\u4e8e\u6a21\u578b\u7684\uff0c\u5c31\u8c03\u8282\u4e00\u4e9b\u53c2\u6570\uff0c\u8ba9\u6a21\u578b\u62df\u5408\u5230\u8bad\u7ec3\u96c6\uff08\u5373\uff0c\u5bf9\u8bad\u7ec3\u96c6\u672c\u8eab\u4f5c\u51fa\u597d\u7684\u9884\u6d4b\uff09\uff0c\u7136\u540e\u5e0c\u671b\u5b83\u5bf9\u65b0\u6837\u672c\u4e5f\u80fd\u6709\u597d\u9884\u6d4b\u3002\u5982\u679c\u7b97\u6cd5\u662f\u57fa\u4e8e\u5b9e\u4f8b\u7684\uff0c\u5c31\u662f\u7528\u8bb0\u5fc6\u5b66\u4e60\u6837\u672c\uff0c\u7136\u540e\u7528\u76f8\u4f3c\u5ea6\u63a8\u5e7f\u5230\u65b0\u5b9e\u4f8b\u3002 \u5982\u679c\u8bad\u7ec3\u96c6\u592a\u5c0f\u3001\u6570\u636e\u6ca1\u6709\u4ee3\u8868\u6027\u3001\u542b\u6709\u566a\u58f0\u3001\u6216\u63ba\u6709\u4e0d\u76f8\u5173\u7684\u7279\u5f81\uff08\u5783\u573e\u8fdb\uff0c\u5783\u573e\u51fa\uff09\uff0c\u7cfb\u7edf\u7684\u6027\u80fd\u4e0d\u4f1a\u597d\u3002\u6700\u540e\uff0c\u6a21\u578b\u4e0d\u80fd\u592a\u7b80\u5355\uff08\u4f1a\u53d1\u751f\u6b20\u62df\u5408\uff09\u6216\u592a\u590d\u6742\uff08\u4f1a\u53d1\u751f\u8fc7\u62df\u5408\uff09\u3002 \u8fd8\u5dee\u6700\u540e\u4e00\u4e2a\u4e3b\u9898\u8981\u5b66\u4e60\uff1a\u8bad\u7ec3\u5b8c\u4e86\u4e00\u4e2a\u6a21\u578b\uff0c\u4f60\u4e0d\u53ea\u5e0c\u671b\u5c06\u5b83\u63a8\u5e7f\u5230\u65b0\u6837\u672c\u3002\u5982\u679c\u4f60\u60f3\u8bc4\u4f30\u5b83\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u4f5c\u51fa\u5fc5\u8981\u7684\u5fae\u8c03\u3002\u4e00\u8d77\u6765\u770b\u4e00\u770b\u3002 \u6d4b\u8bd5\u548c\u786e\u8ba4 \u8981\u77e5\u9053\u4e00\u4e2a\u6a21\u578b\u63a8\u5e7f\u5230\u65b0\u6837\u672c\u7684\u6548\u679c\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662f\u771f\u6b63\u7684\u8fdb\u884c\u8bd5\u9a8c\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u6a21\u578b\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\uff0c\u89c2\u5bdf\u5b83\u7684\u6027\u80fd\u3002\u8fd9\u4e48\u505a\u53ef\u4ee5\uff0c\u4f46\u662f\u5982\u679c\u6a21\u578b\u7684\u6027\u80fd\u5f88\u5dee\uff0c\u5c31\u4f1a\u5f15\u8d77\u7528\u6237\u62b1\u6028 \u2014\u2014 \u8fd9\u4e0d\u662f\u6700\u597d\u7684\u65b9\u6cd5\u3002 \u66f4\u597d\u7684\u9009\u9879\u662f\u5c06\u4f60\u7684\u6570\u636e\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff1a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u6b63\u5982\u5b83\u4eec\u7684\u540d\u5b57\uff0c\u7528\u8bad\u7ec3\u96c6\u8fdb\u884c\u8bad\u7ec3\uff0c\u7528\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6d4b\u8bd5\u3002\u5bf9\u65b0\u6837\u672c\u7684\u9519\u8bef\u7387\u79f0\u4f5c\u63a8\u5e7f\u9519\u8bef\uff08\u6216\u6837\u672c\u5916\u9519\u8bef\uff09\uff0c\u901a\u8fc7\u6a21\u578b\u5bf9\u6d4b\u8bd5\u96c6\u7684\u8bc4\u4f30\uff0c\u4f60\u53ef\u4ee5\u9884\u4f30\u8fd9\u4e2a\u9519\u8bef\u3002\u8fd9\u4e2a\u503c\u53ef\u4ee5\u544a\u8bc9\u4f60\uff0c\u4f60\u7684\u6a21\u578b\u5bf9\u65b0\u6837\u672c\u7684\u6027\u80fd\u3002 \u5982\u679c\u8bad\u7ec3\u9519\u8bef\u7387\u4f4e\uff08\u5373\uff0c\u4f60\u7684\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u9519\u8bef\u4e0d\u591a\uff09\uff0c\u4f46\u662f\u63a8\u5e7f\u9519\u8bef\u7387\u9ad8\uff0c\u610f\u5473\u7740\u6a21\u578b\u5bf9\u8bad\u7ec3\u6570\u636e\u8fc7\u62df\u5408\u3002 \u63d0\u793a\uff1a\u4e00\u822c\u4f7f\u7528 80% \u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u4fdd\u755920%\u7528\u4e8e\u6d4b\u8bd5\u3002 \u56e0\u6b64\uff0c\u8bc4\u4f30\u4e00\u4e2a\u6a21\u578b\u5f88\u7b80\u5355\uff1a\u53ea\u8981\u4f7f\u7528\u6d4b\u8bd5\u96c6\u3002\u73b0\u5728\u5047\u8bbe\u4f60\u5728\u4e24\u4e2a\u6a21\u578b\u4e4b\u95f4\u72b9\u8c6b\u4e0d\u51b3\uff08\u6bd4\u5982\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u548c\u4e00\u4e2a\u591a\u9879\u5f0f\u6a21\u578b\uff09\uff1a\u5982\u4f55\u505a\u51b3\u5b9a\u5462\uff1f\u4e00\u79cd\u65b9\u6cd5\u662f\u4e24\u4e2a\u90fd\u8bad\u7ec3\uff0c\uff0c\u7136\u540e\u6bd4\u8f83\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u6548\u679c\u3002 \u73b0\u5728\u5047\u8bbe\u7ebf\u6027\u6a21\u578b\u7684\u6548\u679c\u66f4\u597d\uff0c\u4f46\u662f\u4f60\u60f3\u505a\u4e00\u4e9b\u6b63\u5219\u5316\u4ee5\u907f\u514d\u8fc7\u62df\u5408\u3002\u95ee\u9898\u662f\uff1a\u5982\u4f55\u9009\u62e9\u6b63\u5219\u5316\u8d85\u53c2\u6570\u7684\u503c\uff1f\u4e00\u79cd\u9009\u9879\u662f\u7528 100 \u4e2a\u4e0d\u540c\u7684\u8d85\u53c2\u6570\u8bad\u7ec3100\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u3002\u5047\u8bbe\u4f60\u53d1\u73b0\u6700\u4f73\u7684\u8d85\u53c2\u6570\u7684\u63a8\u5e7f\u9519\u8bef\u7387\u6700\u4f4e\uff0c\u6bd4\u5982\u53ea\u6709 5%\u3002\u7136\u540e\u5c31\u9009\u7528\u8fd9\u4e2a\u6a21\u578b\u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\uff0c\u4f46\u662f\u5b9e\u9645\u4e2d\u6027\u80fd\u4e0d\u4f73\uff0c\u8bef\u5dee\u7387\u8fbe\u5230\u4e86 15%\u3002\u53d1\u751f\u4e86\u4ec0\u4e48\u5462\uff1f \u7b54\u6848\u5728\u4e8e\uff0c\u4f60\u5728\u6d4b\u8bd5\u96c6\u4e0a\u591a\u6b21\u6d4b\u91cf\u4e86\u63a8\u5e7f\u8bef\u5dee\u7387\uff0c\u8c03\u6574\u4e86\u6a21\u578b\u548c\u8d85\u53c2\u6570\uff0c\u4ee5\u4f7f\u6a21\u578b\u6700\u9002\u5408\u8fd9\u4e2a\u96c6\u5408\u3002\u8fd9\u610f\u5473\u7740\u6a21\u578b\u5bf9\u65b0\u6570\u636e\u7684\u6027\u80fd\u4e0d\u4f1a\u9ad8\u3002 \u8fd9\u4e2a\u95ee\u9898\u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u518d\u4fdd\u7559\u4e00\u4e2a\u96c6\u5408\uff0c\u79f0\u4f5c\u9a8c\u8bc1\u96c6\u5408\u3002\u7528\u8bad\u7ec3\u96c6\u548c\u591a\u4e2a\u8d85\u53c2\u6570\u8bad\u7ec3\u591a\u4e2a\u6a21\u578b\uff0c\u9009\u62e9\u5728\u9a8c\u8bc1\u96c6\u4e0a\u6709\u6700\u4f73\u6027\u80fd\u7684\u6a21\u578b\u548c\u8d85\u53c2\u6570\u3002\u5f53\u4f60\u5bf9\u6a21\u578b\u6ee1\u610f\u65f6\uff0c\u7528\u6d4b\u8bd5\u96c6\u518d\u505a\u6700\u540e\u4e00\u6b21\u6d4b\u8bd5\uff0c\u4ee5\u5f97\u5230\u63a8\u5e7f\u8bef\u5dee\u7387\u7684\u9884\u4f30\u3002 \u4e3a\u4e86\u907f\u514d\u201c\u6d6a\u8d39\u201d\u8fc7\u591a\u8bad\u7ec3\u6570\u636e\u5728\u9a8c\u8bc1\u96c6\u4e0a\uff0c\u901a\u5e38\u7684\u529e\u6cd5\u662f\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\uff1a\u8bad\u7ec3\u96c6\u5206\u6210\u4e92\u8865\u7684\u5b50\u96c6\uff0c\u6bcf\u4e2a\u6a21\u578b\u7528\u4e0d\u540c\u7684\u5b50\u96c6\u8bad\u7ec3\uff0c\u518d\u7528\u5269\u4e0b\u7684\u5b50\u96c6\u9a8c\u8bc1\u3002\u4e00\u65e6\u786e\u5b9a\u6a21\u578b\u7c7b\u578b\u548c\u8d85\u53c2\u6570\uff0c\u6700\u7ec8\u7684\u6a21\u578b\u4f7f\u7528\u8fd9\u4e9b\u8d85\u53c2\u6570\u548c\u5168\u90e8\u7684\u8bad\u7ec3\u96c6\u8fdb\u884c\u8bad\u7ec3\uff0c\u7528\u6d4b\u8bd5\u96c6\u5f97\u5230\u63a8\u5e7f\u8bef\u5dee\u7387\u3002 \u6ca1\u6709\u514d\u8d39\u5348\u9910\u516c\u7406 \u6a21\u578b\u662f\u89c2\u5bdf\u7684\u7b80\u5316\u7248\u672c\u3002\u7b80\u5316\u610f\u5473\u7740\u820d\u5f03\u65e0\u6cd5\u8fdb\u884c\u63a8\u5e7f\u7684\u8868\u9762\u7ec6\u8282\u3002\u4f46\u662f\uff0c\u8981\u786e\u5b9a\u820d\u5f03\u4ec0\u4e48\u6570\u636e\u3001\u4fdd\u7559\u4ec0\u4e48\u6570\u636e\uff0c\u5fc5\u987b\u8981\u505a\u5047\u8bbe\u3002\u4f8b\u5982\uff0c\u7ebf\u6027\u6a21\u578b\u7684\u5047\u8bbe\u662f\u6570\u636e\u57fa\u672c\u4e0a\u662f\u7ebf\u6027\u7684\uff0c\u5b9e\u4f8b\u548c\u6a21\u578b\u76f4\u7ebf\u95f4\u7684\u8ddd\u79bb\u53ea\u662f\u566a\u97f3\uff0c\u53ef\u4ee5\u653e\u5fc3\u5ffd\u7565\u3002 \u5728\u4e00\u7bc7 1996 \u5e74\u7684 \u8457\u540d\u8bba\u6587 \u4e2d\uff0cDavid Wolpert \u8bc1\u660e\uff0c\u5982\u679c\u5b8c\u5168\u4e0d\u5bf9\u6570\u636e\u505a\u5047\u8bbe\uff0c\u5c31\u6ca1\u6709\u7406\u7531\u9009\u62e9\u4e00\u4e2a\u6a21\u578b\u800c\u4e0d\u9009\u53e6\u4e00\u4e2a\u3002\u8fd9\u79f0\u4f5c\u6ca1\u6709\u514d\u8d39\u5348\u9910\uff08NFL\uff09\u516c\u7406\u3002\u5bf9\u4e8e\u4e00\u4e9b\u6570\u636e\u96c6\uff0c\u6700\u4f73\u6a21\u578b\u662f\u7ebf\u6027\u6a21\u578b\uff0c\u800c\u5bf9\u5176\u5b83\u6570\u636e\u96c6\u662f\u795e\u7ecf\u7f51\u7edc\u3002\u6ca1\u6709\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u4fdd\u8bc1\u6548\u679c\u66f4\u597d\uff08\u5982\u8fd9\u4e2a\u516c\u7406\u7684\u540d\u5b57\u6240\u793a\uff09\u3002\u786e\u4fe1\u7684\u552f\u4e00\u65b9\u6cd5\u5c31\u662f\u6d4b\u8bd5\u6240\u6709\u7684\u6a21\u578b\u3002\u56e0\u4e3a\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u5b9e\u9645\u4e2d\u5c31\u5fc5\u987b\u8981\u505a\u4e00\u4e9b\u5bf9\u6570\u636e\u5408\u7406\u7684\u5047\u8bbe\uff0c\u53ea\u8bc4\u4f30\u51e0\u4e2a\u5408\u7406\u7684\u6a21\u578b\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u7b80\u5355\u4efb\u52a1\uff0c\u4f60\u53ef\u80fd\u662f\u7528\u4e0d\u540c\u7a0b\u5ea6\u7684\u6b63\u5219\u5316\u8bc4\u4f30\u7ebf\u6027\u6a21\u578b\uff0c\u5bf9\u4e8e\u590d\u6742\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u8981\u8bc4\u4f30\u51e0\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u3002 \u7ec3\u4e60 \u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u4e00\u4e9b\u673a\u5668\u5b66\u4e60\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u6982\u5ff5\u3002\u4e0b\u4e00\u7ae0\uff0c\u6211\u4eec\u4f1a\u66f4\u52a0\u6df1\u5165\uff0c\u5e76\u5199\u4e00\u4e9b\u4ee3\u7801\u3002\u5f00\u59cb\u4e0b\u7ae0\u4e4b\u524d\uff0c\u786e\u4fdd\u4f60\u80fd\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898\uff1a \u5982\u4f55\u5b9a\u4e49\u673a\u5668\u5b66\u4e60\uff1f \u673a\u5668\u5b66\u4e60\u53ef\u4ee5\u89e3\u51b3\u7684\u56db\u7c7b\u95ee\u9898\uff1f \u4ec0\u4e48\u662f\u5e26\u6807\u7b7e\u7684\u8bad\u7ec3\u96c6\uff1f \u6700\u5e38\u89c1\u7684\u4e24\u4e2a\u76d1\u7763\u4efb\u52a1\u662f\u4ec0\u4e48\uff1f \u6307\u51fa\u56db\u4e2a\u5e38\u89c1\u7684\u975e\u76d1\u7763\u4efb\u52a1\uff1f \u8981\u8ba9\u4e00\u4e2a\u673a\u5668\u4eba\u80fd\u5728\u5404\u79cd\u672a\u77e5\u5730\u5f62\u884c\u8d70\uff0c\u4f60\u4f1a\u91c7\u7528\u4ec0\u4e48\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff1f \u8981\u5bf9\u4f60\u7684\u987e\u5ba2\u8fdb\u884c\u5206\u7ec4\uff0c\u4f60\u4f1a\u91c7\u7528\u54ea\u7c7b\u7b97\u6cd5\uff1f \u5783\u573e\u90ae\u4ef6\u68c0\u6d4b\u662f\u76d1\u7763\u5b66\u4e60\u95ee\u9898\uff0c\u8fd8\u662f\u975e\u76d1\u7763\u5b66\u4e60\u95ee\u9898\uff1f \u4ec0\u4e48\u662f\u5728\u7ebf\u5b66\u4e60\u7cfb\u7edf\uff1f \u4ec0\u4e48\u662f\u6838\u5916\u5b66\u4e60\uff1f \u4ec0\u4e48\u5b66\u4e60\u7b97\u6cd5\u662f\u7528\u76f8\u4f3c\u5ea6\u505a\u9884\u6d4b\uff1f \u6a21\u578b\u53c2\u6570\u548c\u5b66\u4e60\u7b97\u6cd5\u7684\u8d85\u53c2\u6570\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f \u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\u7684\u7b97\u6cd5\u641c\u5bfb\u7684\u662f\u4ec0\u4e48\uff1f\u6700\u6210\u529f\u7684\u7b56\u7565\u662f\u4ec0\u4e48\uff1f\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\u5982\u4f55\u505a\u9884\u6d4b\uff1f \u673a\u5668\u5b66\u4e60\u7684\u56db\u4e2a\u4e3b\u8981\u6311\u6218\u662f\u4ec0\u4e48\uff1f \u5982\u679c\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u597d\uff0c\u4f46\u63a8\u5e7f\u5230\u65b0\u5b9e\u4f8b\u8868\u73b0\u5dee\uff0c\u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u7ed9\u51fa\u4e09\u4e2a\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u4ec0\u4e48\u662f\u6d4b\u8bd5\u96c6\uff0c\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5b83\uff1f \u9a8c\u8bc1\u96c6\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f \u5982\u679c\u7528\u6d4b\u8bd5\u96c6\u8c03\u8282\u8d85\u53c2\u6570\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f \u4ec0\u4e48\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u4e3a\u4ec0\u4e48\u5b83\u6bd4\u9a8c\u8bc1\u96c6\u597d\uff1f \u7ec3\u4e60\u7b54\u6848\u89c1\u9644\u5f55 A\u3002","title":"1.\u673a\u5668\u5b66\u4e60\u6982\u89c8"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_1","text":"\u5927\u591a\u6570\u4eba\u542c\u5230\u201c\u673a\u5668\u5b66\u4e60\u201d\uff0c\u5f80\u5f80\u4f1a\u5728\u8111\u6d77\u4e2d\u52fe\u52d2\u51fa\u4e00\u4e2a\u673a\u5668\u4eba\uff1a\u4e00\u4e2a\u53ef\u9760\u7684\u7ba1\u5bb6\uff0c\u6216\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u7ec8\u7ed3\u8005\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u95ee\u7684\u662f\u8c01\u3002\u4f46\u662f\u673a\u5668\u5b66\u4e60\u5e76\u4e0d\u662f\u672a\u6765\u7684\u5e7b\u60f3\uff0c\u5b83\u5df2\u7ecf\u6765\u5230\u6211\u4eec\u8eab\u8fb9\u4e86\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e00\u4e9b\u7279\u5b9a\u9886\u57df\u5df2\u7ecf\u5e94\u7528\u673a\u5668\u5b66\u4e60\u51e0\u5341\u5e74\u4e86\uff0c\u6bd4\u5982\u5149\u5b66\u5b57\u7b26\u8bc6\u522b \uff08Optical Character Recognition\uff0cOCR\uff09\u3002\u4f46\u662f\u76f4\u5230 1990 \u5e74\u4ee3\uff0c\u7b2c\u4e00\u4e2a\u5f71\u54cd\u4e86\u6570\u4ebf\u4eba\u7684\u673a\u5668\u5b66\u4e60\u5e94\u7528\u624d\u771f\u6b63\u6210\u719f\uff0c\u5b83\u5c31\u662f\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\uff08spam filter\uff09\u3002\u867d\u7136\u5e76\u4e0d\u662f\u4e00\u4e2a\u6709\u81ea\u6211\u610f\u8bc6\u7684\u5929\u7f51\u7cfb\u7edf\uff08Skynet\uff09\uff0c\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u4ece\u6280\u672f\u4e0a\u662f\u7b26\u5408\u673a\u5668\u5b66\u4e60\u7684\uff08\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u8fdb\u884c\u5b66\u4e60\uff0c\u7528\u6237\u51e0\u4e4e\u4e0d\u7528\u518d\u6807\u8bb0\u67d0\u4e2a\u90ae\u4ef6\u4e3a\u5783\u573e\u90ae\u4ef6\uff09\u3002\u540e\u6765\u51fa\u73b0\u4e86\u66f4\u591a\u7684\u6570\u4ee5\u767e\u8ba1\u7684\u673a\u5668\u5b66\u4e60\u4ea7\u54c1\uff0c\u652f\u6491\u4e86\u66f4\u591a\u4f60\u7ecf\u5e38\u4f7f\u7528\u7684\u4ea7\u54c1\u548c\u529f\u80fd\uff0c\u4ece\u63a8\u8350\u7cfb\u7edf\u5230\u8bed\u97f3\u8bc6\u522b\u3002 \u673a\u5668\u5b66\u4e60\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u5206\u522b\u662f\u4ec0\u4e48\u5462\uff1f\u786e\u5207\u7684\u8bb2\uff0c\u673a\u5668\u8fdb\u884c\u5b66\u4e60\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u5982\u679c\u6211\u4e0b\u8f7d\u4e86\u4e00\u4efd\u7ef4\u57fa\u767e\u79d1\u7684\u62f7\u8d1d\uff0c\u6211\u7684\u7535\u8111\u5c31\u771f\u7684\u5b66\u4f1a\u4e86\u4ec0\u4e48\u5417\uff1f\u5b83\u9a6c\u4e0a\u5c31\u53d8\u806a\u660e\u4e86\u5417\uff1f\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4f1a\u6f84\u6e05\u673a\u5668\u5b66\u4e60\u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4f60\u8981\u4f7f\u7528\u5b83\u3002 \u7136\u540e\uff0c\u5728\u6211\u4eec\u51fa\u53d1\u53bb\u63a2\u7d22\u673a\u5668\u5b66\u4e60\u65b0\u5927\u9646\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u89c2\u5bdf\u4e0b\u5730\u56fe\uff0c\u4ee5\u4fbf\u77e5\u9053\u8fd9\u7247\u5927\u9646\u4e0a\u7684\u4e3b\u8981\u5730\u533a\u548c\u6700\u660e\u663e\u7684\u5730\u6807\uff1a\u76d1\u7763\u5b66\u4e60vs\u975e\u76d1\u7763\u5b66\u4e60\uff0c\u5728\u7ebf\u5b66\u4e60vs\u6279\u91cf\u5b66\u4e60\uff0c\u57fa\u4e8e\u5b9e\u4f8bvs\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u4e00\u4e2a\u5178\u578b\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u8ba8\u8bba\u53ef\u80fd\u78b0\u5230\u7684\u96be\u70b9\uff0c\u4ee5\u53ca\u5982\u4f55\u8bc4\u4f30\u548c\u5fae\u8c03\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u3002 \u8fd9\u4e00\u7ae0\u4ecb\u7ecd\u4e86\u5927\u91cf\u6bcf\u4e2a\u6570\u636e\u79d1\u5b66\u5bb6\u9700\u8981\u7262\u8bb0\u5728\u5fc3\u7684\u57fa\u7840\u6982\u5ff5\uff08\u548c\u4e60\u8bed\uff09\u3002\u7b2c\u4e00\u7ae0\u53ea\u662f\u6982\u89c8\uff08\u552f\u4e00\u4e0d\u542b\u6709\u4ee3\u7801\u7684\u4e00\u7ae0\uff09\uff0c\u76f8\u5f53\u7b80\u5355\uff0c\u4f46\u4f60\u8981\u786e\u4fdd\u6bcf\u4e00\u70b9\u90fd\u641e\u660e\u767d\u4e86\uff0c\u518d\u7ee7\u7eed\u8fdb\u884c\u5b66\u4e60\u672c\u4e66\u5176\u4f59\u7ae0\u8282\u3002\u7aef\u8d77\u4e00\u676f\u5496\u5561\uff0c\u5f00\u59cb\u5b66\u4e60\u5427\uff01 \u63d0\u793a\uff1a\u5982\u679c\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u673a\u5668\u5b66\u4e60\u7684\u6240\u6709\u57fa\u7840\u6982\u5ff5\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ffb\u5230\u7b2c2\u7ae0\u3002\u5982\u679c\u4f60\u4e0d\u786e\u8ba4\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u56de\u7b54\u672c\u7ae0\u672b\u5c3e\u5217\u51fa\u7684\u95ee\u9898\uff0c\u7136\u540e\u518d\u7ee7\u7eed\u3002","title":"\u4e00\u3001\u673a\u5668\u5b66\u4e60\u6982\u89c8"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_2","text":"\u673a\u5668\u5b66\u4e60\u662f\u901a\u8fc7\u7f16\u7a0b\u8ba9\u8ba1\u7b97\u673a\u4ece\u6570\u636e\u4e2d\u8fdb\u884c\u5b66\u4e60\u7684\u79d1\u5b66\uff08\u548c\u827a\u672f\uff09\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u66f4\u5e7f\u4e49\u7684\u6982\u5ff5\uff1a \u673a\u5668\u5b66\u4e60\u662f\u8ba9\u8ba1\u7b97\u673a\u5177\u6709\u5b66\u4e60\u7684\u80fd\u529b\uff0c\u65e0\u9700\u8fdb\u884c\u660e\u786e\u7f16\u7a0b\u3002 \u2014\u2014 \u4e9a\u745f\u00b7\u8428\u7f2a\u5c14\uff0c1959 \u548c\u4e00\u4e2a\u5de5\u7a0b\u6027\u7684\u6982\u5ff5\uff1a \u8ba1\u7b97\u673a\u7a0b\u5e8f\u5229\u7528\u7ecf\u9a8c E \u5b66\u4e60\u4efb\u52a1 T\uff0c\u6027\u80fd\u662f P\uff0c\u5982\u679c\u9488\u5bf9\u4efb\u52a1 T \u7684\u6027\u80fd P \u968f\u7740\u7ecf\u9a8c E \u4e0d\u65ad\u589e\u957f\uff0c\u5219\u79f0\u4e3a\u673a\u5668\u5b66\u4e60\u3002 \u2014\u2014 \u6c64\u59c6\u00b7\u7c73\u5207\u5c14\uff0c1997 \u4f8b\u5982\uff0c\u4f60\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u5c31\u662f\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u5783\u573e\u90ae\u4ef6\uff08\u6bd4\u5982\uff0c\u7528\u6237\u6807\u8bb0\u7684\u5783\u573e\u90ae\u4ef6\uff09\u548c\u666e\u901a\u90ae\u4ef6\uff08\u975e\u5783\u573e\u90ae\u4ef6\uff0c\u4e5f\u79f0\u4f5c ham\uff09\u5b66\u4e60\u6807\u8bb0\u5783\u573e\u90ae\u4ef6\u3002\u7528\u6765\u8fdb\u884c\u5b66\u4e60\u7684\u6837\u4f8b\u79f0\u4f5c\u8bad\u7ec3\u96c6\u3002\u6bcf\u4e2a\u8bad\u7ec3\u6837\u4f8b\u79f0\u4f5c\u8bad\u7ec3\u5b9e\u4f8b\uff08\u6216\u6837\u672c\uff09\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4efb\u52a1 T \u5c31\u662f\u6807\u8bb0\u65b0\u90ae\u4ef6\u662f\u5426\u662f\u5783\u573e\u90ae\u4ef6\uff0c\u7ecf\u9a8cE\u662f\u8bad\u7ec3\u6570\u636e\uff0c\u6027\u80fdP\u9700\u8981\u5b9a\u4e49\uff1a\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b63\u786e\u5206\u7c7b\u7684\u6bd4\u4f8b\u3002\u8fd9\u4e2a\u6027\u80fd\u6307\u6807\u79f0\u4e3a\u51c6\u786e\u7387\uff0c\u901a\u5e38\u7528\u5728\u5206\u7c7b\u4efb\u52a1\u4e2d\u3002 \u5982\u679c\u4f60\u4e0b\u8f7d\u4e86\u4e00\u4efd\u7ef4\u57fa\u767e\u79d1\u7684\u62f7\u8d1d\uff0c\u4f60\u7684\u7535\u8111\u867d\u7136\u6709\u4e86\u5f88\u591a\u6570\u636e\uff0c\u4f46\u4e0d\u4f1a\u9a6c\u4e0a\u53d8\u5f97\u806a\u660e\u8d77\u6765\u3002\u56e0\u6b64\uff0c\u8fd9\u4e0d\u662f\u673a\u5668\u5b66\u4e60\u3002","title":"\u4ec0\u4e48\u662f\u673a\u5668\u5b66\u4e60\uff1f"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_3","text":"\u601d\u8003\u4e00\u4e0b\uff0c\u4f60\u4f1a\u5982\u4f55\u4f7f\u7528\u4f20\u7edf\u7684\u7f16\u7a0b\u6280\u672f\u5199\u4e00\u4e2a\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\uff08\u56fe 1-1\uff09\uff1a \u4f60\u5148\u89c2\u5bdf\u4e0b\u5783\u573e\u90ae\u4ef6\u4e00\u822c\u90fd\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e00\u4e9b\u8bcd\u6216\u77ed\u8bed\uff08\u6bd4\u5982 4U\u3001credit card\u3001free\u3001amazing\uff09\u5728\u90ae\u4ef6\u4e3b\u9898\u4e2d\u9891\u7e41\u51fa\u73b0\uff0c\u4e5f\u8bb8\u8fd8\u6ce8\u610f\u5230\u53d1\u4ef6\u4eba\u540d\u5b57\u3001\u90ae\u4ef6\u6b63\u6587\u7684\u683c\u5f0f\uff0c\u7b49\u7b49\u3002 \u4f60\u4e3a\u89c2\u5bdf\u5230\u7684\u89c4\u5f8b\u5199\u4e86\u4e00\u4e2a\u68c0\u6d4b\u7b97\u6cd5\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u4e86\u8fd9\u4e9b\u89c4\u5f8b\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u6807\u8bb0\u90ae\u4ef6\u4e3a\u5783\u573e\u90ae\u4ef6\u3002 \u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u91cd\u590d\u7b2c1\u6b65\u548c\u7b2c2\u6b65\uff0c\u76f4\u5230\u6ee1\u8db3\u8981\u6c42\u3002 \u56fe 1-1 \u4f20\u7edf\u65b9\u6cd5 \u8fd9\u4e2a\u95ee\u9898\u5e76\u4e0d\u7b80\u5355\uff0c\u4f60\u7684\u7a0b\u5e8f\u5f88\u53ef\u80fd\u4f1a\u53d8\u6210\u4e00\u957f\u4e32\u590d\u6742\u7684\u89c4\u5219\u2014\u2014 \u8fd9\u6837\u5c31\u4f1a\u5f88\u96be\u7ef4\u62a4\u3002 \u76f8\u53cd\u7684\uff0c\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u6280\u672f\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u4f1a\u81ea\u52a8\u5b66\u4e60\u54ea\u4e2a\u8bcd\u548c\u77ed\u8bed\u662f\u5783\u573e\u90ae\u4ef6\u7684\u9884\u6d4b\u503c\uff0c\u901a\u8fc7\u4e0e\u666e\u901a\u90ae\u4ef6\u6bd4\u8f83\uff0c\u68c0\u6d4b\u5783\u573e\u90ae\u4ef6\u4e2d\u53cd\u5e38\u9891\u6b21\u7684\u8bcd\u8bed\u683c\u5f0f\uff08\u56fe 1-2\uff09\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u77ed\u5f97\u591a\uff0c\u66f4\u6613\u7ef4\u62a4\uff0c\u4e5f\u66f4\u7cbe\u786e\u3002 \u56fe 1-2 \u673a\u5668\u5b66\u4e60\u65b9\u6cd5 \u8fdb\u800c\uff0c\u5982\u679c\u53d1\u9001\u5783\u573e\u90ae\u4ef6\u7684\u4eba\u53d1\u73b0\u6240\u6709\u5305\u542b\u201c4U\u201d\u7684\u90ae\u4ef6\u90fd\u88ab\u5c4f\u853d\u4e86\uff0c\u53ef\u80fd\u4f1a\u8f6c\u800c\u4f7f\u7528\u201cFor U\u201d\u3002\u4f7f\u7528\u4f20\u7edf\u65b9\u6cd5\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u9700\u8981\u66f4\u65b0\u4ee5\u6807\u8bb0\u201cFor U\u201d\u3002\u5982\u679c\u53d1\u9001\u5783\u573e\u90ae\u4ef6\u7684\u4eba\u6301\u7eed\u66f4\u6539\uff0c\u4f60\u5c31\u9700\u8981\u88ab\u52a8\u5730\u4e0d\u505c\u5730\u5199\u5165\u65b0\u89c4\u5219\u3002 \u76f8\u53cd\u7684\uff0c\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u4f1a\u81ea\u52a8\u6ce8\u610f\u5230\u201cFor U\u201d\u5728\u7528\u6237\u624b\u52a8\u6807\u8bb0\u5783\u573e\u90ae\u4ef6\u4e2d\u7684\u53cd\u5e38\u9891\u7e41\u6027\uff0c\u7136\u540e\u5c31\u80fd\u81ea\u52a8\u6807\u8bb0\u5783\u573e\u90ae\u4ef6\u800c\u65e0\u9700\u5e72\u9884\u4e86\uff08\u56fe1-3\uff09\u3002 \u56fe 1-3 \u81ea\u52a8\u9002\u5e94\u6539\u53d8 \u673a\u5668\u5b66\u4e60\u7684\u53e6\u4e00\u4e2a\u4f18\u70b9\u662f\u5584\u4e8e\u5904\u7406\u5bf9\u4e8e\u4f20\u7edf\u65b9\u6cd5\u592a\u590d\u6742\u6216\u662f\u6ca1\u6709\u5df2\u77e5\u7b97\u6cd5\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u8bed\u8a00\u8bc6\u522b\uff1a\u5047\u5982\u60f3\u5199\u4e00\u4e2a\u53ef\u4ee5\u8bc6\u522b\u201cone\u201d\u548c\u201ctwo\u201d\u7684\u7b80\u5355\u7a0b\u5e8f\u3002\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u201ctwo\u201d\u8d77\u59cb\u662f\u4e00\u4e2a\u9ad8\u97f3\uff08\u201cT\u201d\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u5199\u4e00\u4e2a\u53ef\u4ee5\u6d4b\u91cf\u9ad8\u97f3\u5f3a\u5ea6\u7684\u7b97\u6cd5\uff0c\u7528\u5b83\u533a\u5206 one \u548c two\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u80fd\u63a8\u5e7f\u5230\u5608\u6742\u73af\u5883\u4e0b\u7684\u6570\u767e\u4e07\u4eba\u7684\u6570\u5343\u8bcd\u6c47\u3001\u6570\u5341\u79cd\u8bed\u8a00\u3002\uff08\u73b0\u5728\uff09\u6700\u4f73\u7684\u65b9\u6cd5\u662f\u6839\u636e\u5927\u91cf\u5355\u8bcd\u7684\u5f55\u97f3\uff0c\u5199\u4e00\u4e2a\u53ef\u4ee5\u81ea\u6211\u5b66\u4e60\u7684\u7b97\u6cd5\u3002 \u6700\u540e\uff0c\u673a\u5668\u5b66\u4e60\u53ef\u4ee5\u5e2e\u52a9\u4eba\u7c7b\u8fdb\u884c\u5b66\u4e60\uff08\u56fe 1-4\uff09\uff1a\u53ef\u4ee5\u68c0\u67e5\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5df2\u7ecf\u638c\u63e1\u4e86\u4ec0\u4e48\uff08\u5c3d\u7ba1\u5bf9\u4e8e\u67d0\u4e9b\u7b97\u6cd5\uff0c\u8fd9\u6837\u505a\u4f1a\u6709\u70b9\u9ebb\u70e6\uff09\u3002\u4f8b\u5982\uff0c\u5f53\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u88ab\u8bad\u7ec3\u4e86\u8db3\u591f\u591a\u7684\u5783\u573e\u90ae\u4ef6\uff0c\u5c31\u53ef\u4ee5\u7528\u5b83\u5217\u51fa\u5783\u573e\u90ae\u4ef6\u9884\u6d4b\u503c\u7684\u5355\u8bcd\u548c\u5355\u8bcd\u7ec4\u5408\u5217\u8868\u3002\u6709\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e0d\u5f15\u4eba\u5173\u6ce8\u7684\u5173\u8054\u6216\u65b0\u8d8b\u52bf\uff0c\u6709\u52a9\u4e8e\u5bf9\u95ee\u9898\u66f4\u597d\u7684\u7406\u89e3\u3002 \u56fe 1-4 \u673a\u5668\u5b66\u4e60\u53ef\u4ee5\u5e2e\u52a9\u4eba\u7c7b\u5b66\u4e60 \u4f7f\u7528\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u6316\u6398\u5927\u91cf\u6570\u636e\uff0c\u53ef\u4ee5\u53d1\u73b0\u5e76\u4e0d\u663e\u8457\u7684\u89c4\u5f8b\u3002\u8fd9\u79f0\u4f5c\u6570\u636e\u6316\u6398\u3002 \u603b\u7ed3\u4e00\u4e0b\uff0c\u673a\u5668\u5b66\u4e60\u5584\u4e8e\uff1a \u9700\u8981\u8fdb\u884c\u5927\u91cf\u624b\u5de5\u8c03\u6574\u6216\u9700\u8981\u62e5\u6709\u957f\u4e32\u89c4\u5219\u624d\u80fd\u89e3\u51b3\u7684\u95ee\u9898\uff1a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u901a\u5e38\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u3001\u63d0\u9ad8\u6027\u80fd\u3002 \u95ee\u9898\u590d\u6742\uff0c\u4f20\u7edf\u65b9\u6cd5\u96be\u4ee5\u89e3\u51b3\uff1a\u6700\u597d\u7684\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u53ef\u4ee5\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002 \u73af\u5883\u6709\u6ce2\u52a8\uff1a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u53ef\u4ee5\u9002\u5e94\u65b0\u6570\u636e\u3002 \u6d1e\u5bdf\u590d\u6742\u95ee\u9898\u548c\u5927\u91cf\u6570\u636e\u3002","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u673a\u5668\u5b66\u4e60\uff1f"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_4","text":"\u673a\u5668\u5b66\u4e60\u6709\u591a\u79cd\u7c7b\u578b\uff0c\u53ef\u4ee5\u6839\u636e\u5982\u4e0b\u89c4\u5219\u8fdb\u884c\u5206\u7c7b\uff1a \u662f\u5426\u5728\u4eba\u7c7b\u76d1\u7763\u4e0b\u8fdb\u884c\u8bad\u7ec3\uff08\u76d1\u7763\uff0c\u975e\u76d1\u7763\uff0c\u534a\u76d1\u7763\u548c\u5f3a\u5316\u5b66\u4e60\uff09 \u662f\u5426\u53ef\u4ee5\u52a8\u6001\u6e10\u8fdb\u5b66\u4e60\uff08\u5728\u7ebf\u5b66\u4e60 vs \u6279\u91cf\u5b66\u4e60\uff09 \u5b83\u4eec\u662f\u5426\u53ea\u662f\u901a\u8fc7\u7b80\u5355\u5730\u6bd4\u8f83\u65b0\u7684\u6570\u636e\u70b9\u548c\u5df2\u77e5\u7684\u6570\u636e\u70b9\uff0c\u6216\u8005\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u8fdb\u884c\u6a21\u5f0f\u8bc6\u522b\uff0c\u4ee5\u5efa\u7acb\u4e00\u4e2a\u9884\u6d4b\u6a21\u578b\uff0c\u5c31\u50cf\u79d1\u5b66\u5bb6\u6240\u505a\u7684\u90a3\u6837\uff08\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60 vs \u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\uff09 \u89c4\u5219\u5e76\u4e0d\u4ec5\u9650\u4e8e\u4ee5\u4e0a\u7684\uff0c\u4f60\u53ef\u4ee5\u5c06\u4ed6\u4eec\u8fdb\u884c\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5148\u8fdb\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u53ef\u4ee5\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u52a8\u6001\u8fdb\u884c\u5b66\u4e60\uff0c\u7528\u5783\u573e\u90ae\u4ef6\u548c\u666e\u901a\u90ae\u4ef6\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u5c31\u8ba9\u5b83\u6210\u4e86\u4e00\u4e2a\u5728\u7ebf\u3001\u57fa\u4e8e\u6a21\u578b\u3001\u76d1\u7763\u5b66\u4e60\u7cfb\u7edf\u3002 \u4e0b\u9762\u66f4\u4ed4\u7ec6\u5730\u5b66\u4e60\u8fd9\u4e9b\u89c4\u5219\u3002","title":"\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u7684\u7c7b\u578b"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_5","text":"\u673a\u5668\u5b66\u4e60\u53ef\u4ee5\u6839\u636e\u8bad\u7ec3\u65f6\u76d1\u7763\u7684\u91cf\u548c\u7c7b\u578b\u8fdb\u884c\u5206\u7c7b\u3002\u4e3b\u8981\u6709\u56db\u7c7b\uff1a\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u534a\u76d1\u7763\u5b66\u4e60\u548c\u5f3a\u5316\u5b66\u4e60\u3002","title":"\u76d1\u7763/\u975e\u76d1\u7763\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_6","text":"\u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u7528\u6765\u8bad\u7ec3\u7b97\u6cd5\u7684\u8bad\u7ec3\u6570\u636e\u5305\u542b\u4e86\u7b54\u6848\uff0c\u79f0\u4e3a\u6807\u7b7e\uff08\u56fe 1-5\uff09\u3002 \u56fe 1-5 \u7528\u4e8e\u76d1\u7763\u5b66\u4e60\uff08\u6bd4\u5982\u5783\u573e\u90ae\u4ef6\u5206\u7c7b\uff09\u7684\u52a0\u4e86\u6807\u7b7e\u7684\u8bad\u7ec3\u96c6 \u4e00\u4e2a\u5178\u578b\u7684\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\u662f\u5206\u7c7b\u3002\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff1a\u7528\u8bb8\u591a\u5e26\u6709\u5f52\u7c7b\uff08\u5783\u573e\u90ae\u4ef6\u6216\u666e\u901a\u90ae\u4ef6\uff09\u7684\u90ae\u4ef6\u6837\u672c\u8fdb\u884c\u8bad\u7ec3\uff0c\u8fc7\u6ee4\u5668\u5fc5\u987b\u8fd8\u80fd\u5bf9\u65b0\u90ae\u4ef6\u8fdb\u884c\u5206\u7c7b\u3002 \u53e6\u4e00\u4e2a\u5178\u578b\u4efb\u52a1\u662f\u9884\u6d4b\u76ee\u6807\u6570\u503c\uff0c\u4f8b\u5982\u7ed9\u51fa\u4e00\u4e9b\u7279\u5f81\uff08\u91cc\u7a0b\u6570\u3001\u8f66\u9f84\u3001\u54c1\u724c\u7b49\u7b49\uff09\u79f0\u4f5c\u9884\u6d4b\u503c\uff0c\u6765\u9884\u6d4b\u4e00\u8f86\u6c7d\u8f66\u7684\u4ef7\u683c\u3002\u8fd9\u7c7b\u4efb\u52a1\u79f0\u4f5c\u56de\u5f52\uff08\u56fe 1-6\uff09\u3002\u8981\u8bad\u7ec3\u8fd9\u4e2a\u7cfb\u7edf\uff0c\u4f60\u9700\u8981\u7ed9\u51fa\u5927\u91cf\u6c7d\u8f66\u6837\u672c\uff0c\u5305\u62ec\u5b83\u4eec\u7684\u9884\u6d4b\u503c\u548c\u6807\u7b7e\uff08\u5373\uff0c\u5b83\u4eec\u7684\u4ef7\u683c\uff09\u3002 \u6ce8\u89e3\uff1a\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u4e00\u4e2a\u5c5e\u6027\u5c31\u662f\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff08\u4f8b\u5982\uff0c\u201c\u91cc\u7a0b\u6570\u201d\uff09\uff0c\u53d6\u51b3\u4e8e\u5177\u4f53\u95ee\u9898\u4e00\u4e2a\u7279\u5f81\u4f1a\u6709\u591a\u4e2a\u542b\u4e49\uff0c\u4f46\u901a\u5e38\u662f\u5c5e\u6027\u52a0\u4e0a\u5b83\u7684\u503c\uff08\u4f8b\u5982\uff0c\u201c\u91cc\u7a0b\u6570 =15000 \u201d\uff09\u3002\u8bb8\u591a\u4eba\u662f\u4e0d\u533a\u5206\u5730\u4f7f\u7528\u5c5e\u6027\u548c\u7279\u5f81\u3002 \u56fe 1-6 \u56de\u5f52 \u6ce8\u610f\uff0c\u4e00\u4e9b\u56de\u5f52\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u5206\u7c7b\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u4f8b\u5982\uff0c\u903b\u8f91\u56de\u5f52\u901a\u5e38\u7528\u6765\u8fdb\u884c\u5206\u7c7b\uff0c\u5b83\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u5f52\u5c5e\u67d0\u4e00\u7c7b\u7684\u53ef\u80fd\u6027\u7684\u503c\uff08\u4f8b\u5982\uff0c20% \u51e0\u7387\u4e3a\u5783\u573e\u90ae\u4ef6\uff09\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u91cd\u8981\u7684\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff08\u672c\u4e66\u90fd\u6709\u4ecb\u7ecd\uff09\uff1a K\u8fd1\u90bb\u7b97\u6cd5 \u7ebf\u6027\u56de\u5f52 \u903b\u8f91\u56de\u5f52 \u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09 \u51b3\u7b56\u6811\u548c\u968f\u673a\u68ee\u6797 \u795e\u7ecf\u7f51\u7edc","title":"\u76d1\u7763\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_7","text":"\u5728\u975e\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u4f60\u53ef\u80fd\u731c\u5230\u4e86\uff0c\u8bad\u7ec3\u6570\u636e\u662f\u6ca1\u6709\u52a0\u6807\u7b7e\u7684\uff08\u56fe 1-7\uff09\u3002\u7cfb\u7edf\u5728\u6ca1\u6709\u8001\u5e08\u7684\u6761\u4ef6\u4e0b\u8fdb\u884c\u5b66\u4e60\u3002 \u56fe 1-7 \u975e\u76d1\u7763\u5b66\u4e60\u7684\u4e00\u4e2a\u4e0d\u52a0\u6807\u7b7e\u7684\u8bad\u7ec3\u96c6 \u4e0b\u9762\u662f\u4e00\u4e9b\u6700\u91cd\u8981\u7684\u975e\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff08\u6211\u4eec\u4f1a\u5728\u7b2c 8 \u7ae0\u4ecb\u7ecd\u964d\u7ef4\uff09\uff1a \u805a\u7c7b K \u5747\u503c \u5c42\u6b21\u805a\u7c7b\u5206\u6790\uff08Hierarchical Cluster Analysis\uff0cHCA\uff09 \u671f\u671b\u6700\u5927\u503c \u53ef\u89c6\u5316\u548c\u964d\u7ef4 \u4e3b\u6210\u5206\u5206\u6790\uff08Principal Component Analysis\uff0cPCA\uff09 \u6838\u4e3b\u6210\u5206\u5206\u6790 \u5c40\u90e8\u7ebf\u6027\u5d4c\u5165\uff08Locally-Linear Embedding\uff0cLLE\uff09 t-\u5206\u5e03\u90bb\u57df\u5d4c\u5165\u7b97\u6cd5\uff08t-distributed Stochastic Neighbor Embedding\uff0ct-SNE\uff09 \u5173\u8054\u6027\u89c4\u5219\u5b66\u4e60 Apriori \u7b97\u6cd5 Eclat \u7b97\u6cd5 \u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u6709\u4e00\u4efd\u5173\u4e8e\u4f60\u7684\u535a\u5ba2\u8bbf\u5ba2\u7684\u5927\u91cf\u6570\u636e\u3002\u4f60\u60f3\u8fd0\u884c\u4e00\u4e2a\u805a\u7c7b\u7b97\u6cd5\uff0c\u68c0\u6d4b\u76f8\u4f3c\u8bbf\u5ba2\u7684\u5206\u7ec4\uff08\u56fe 1-8\uff09\u3002\u4f60\u4e0d\u4f1a\u544a\u8bc9\u7b97\u6cd5\u67d0\u4e2a\u8bbf\u5ba2\u5c5e\u4e8e\u54ea\u4e00\u7c7b\uff1a\u5b83\u4f1a\u81ea\u5df1\u627e\u51fa\u5173\u7cfb\uff0c\u65e0\u9700\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c\u7b97\u6cd5\u53ef\u80fd\u6ce8\u610f\u5230 40% \u7684\u8bbf\u5ba2\u662f\u559c\u6b22\u6f2b\u753b\u4e66\u7684\u7537\u6027\uff0c\u901a\u5e38\u662f\u665a\u4e0a\u8bbf\u95ee\uff0c20% \u662f\u79d1\u5e7b\u7231\u597d\u8005\uff0c\u4ed6\u4eec\u662f\u5728\u5468\u672b\u8bbf\u95ee\u7b49\u7b49\u3002\u5982\u679c\u4f60\u4f7f\u7528\u5c42\u6b21\u805a\u7c7b\u5206\u6790\uff0c\u5b83\u53ef\u80fd\u8fd8\u4f1a\u7ec6\u5206\u6bcf\u4e2a\u5206\u7ec4\u4e3a\u66f4\u5c0f\u7684\u7ec4\u3002\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u4e3a\u6bcf\u4e2a\u5206\u7ec4\u5b9a\u4f4d\u535a\u6587\u3002 \u56fe 1-8 \u805a\u7c7b \u53ef\u89c6\u5316\u7b97\u6cd5\u4e5f\u662f\u6781\u4f73\u7684\u975e\u76d1\u7763\u5b66\u4e60\u6848\u4f8b\uff1a\u7ed9\u7b97\u6cd5\u5927\u91cf\u590d\u6742\u7684\u4e14\u4e0d\u52a0\u6807\u7b7e\u7684\u6570\u636e\uff0c\u7b97\u6cd5\u8f93\u51fa\u6570\u636e\u76842D\u62163D\u56fe\u50cf\uff08\u56fe 1-9\uff09\u3002\u7b97\u6cd5\u4f1a\u8bd5\u56fe\u4fdd\u7559\u6570\u636e\u7684\u7ed3\u6784\uff08\u5373\u5c1d\u8bd5\u4fdd\u7559\u8f93\u5165\u7684\u72ec\u7acb\u805a\u7c7b\uff0c\u907f\u514d\u5728\u56fe\u50cf\u4e2d\u91cd\u53e0\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u660e\u767d\u6570\u636e\u662f\u5982\u4f55\u7ec4\u7ec7\u8d77\u6765\u7684\uff0c\u4e5f\u8bb8\u8fd8\u80fd\u53d1\u73b0\u9690\u85cf\u7684\u89c4\u5f8b\u3002 \u56fe 1-9 t-SNE \u53ef\u89c6\u5316\u6848\u4f8b\uff0c\u7a81\u51fa\u4e86\u805a\u7c7b\uff08\u6ce8\uff1a\u6ce8\u610f\u52a8\u7269\u662f\u4e0e\u6c7d\u8f66\u5206\u5f00\u7684\uff0c\u9a6c\u548c\u9e7f\u5f88\u8fd1\u3001\u4e0e\u9e1f\u8ddd\u79bb\u8fdc\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09 \u4e0e\u6b64\u6709\u5173\u8054\u7684\u4efb\u52a1\u662f\u964d\u7ef4\uff0c\u964d\u7ef4\u7684\u76ee\u7684\u662f\u7b80\u5316\u6570\u636e\u3001\u4f46\u662f\u4e0d\u80fd\u5931\u53bb\u5927\u90e8\u5206\u4fe1\u606f\u3002\u505a\u6cd5\u4e4b\u4e00\u662f\u5408\u5e76\u82e5\u5e72\u76f8\u5173\u7684\u7279\u5f81\u3002\u4f8b\u5982\uff0c\u6c7d\u8f66\u7684\u91cc\u7a0b\u6570\u4e0e\u8f66\u9f84\u9ad8\u5ea6\u76f8\u5173\uff0c\u964d\u7ef4\u7b97\u6cd5\u5c31\u4f1a\u5c06\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u8868\u793a\u6c7d\u8f66\u7684\u78e8\u635f\u3002\u8fd9\u53eb\u505a\u7279\u5f81\u63d0\u53d6\u3002 \u63d0\u793a\uff1a\u5728\u7528\u8bad\u7ec3\u96c6\u8bad\u7ec3\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff08\u6bd4\u5982\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff09\u65f6\uff0c\u6700\u597d\u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884c\u964d\u7ef4\u3002\u8fd9\u6837\u53ef\u4ee5\u8fd0\u884c\u7684\u66f4\u5feb\uff0c\u5360\u7528\u7684\u786c\u76d8\u548c\u5185\u5b58\u7a7a\u95f4\u66f4\u5c11\uff0c\u6709\u4e9b\u60c5\u51b5\u4e0b\u6027\u80fd\u4e5f\u66f4\u597d\u3002 \u53e6\u4e00\u4e2a\u91cd\u8981\u7684\u975e\u76d1\u7763\u4efb\u52a1\u662f\u5f02\u5e38\u68c0\u6d4b\uff08anomaly detection\uff09 \u2014\u2014 \u4f8b\u5982\uff0c\u68c0\u6d4b\u5f02\u5e38\u7684\u4fe1\u7528\u5361\u8f6c\u8d26\u4ee5\u9632\u6b3a\u8bc8\uff0c\u68c0\u6d4b\u5236\u9020\u7f3a\u9677\uff0c\u6216\u8005\u5728\u8bad\u7ec3\u4e4b\u524d\u81ea\u52a8\u4ece\u8bad\u7ec3\u6570\u636e\u96c6\u53bb\u9664\u5f02\u5e38\u503c\u3002\u5f02\u5e38\u68c0\u6d4b\u7684\u7cfb\u7edf\u4f7f\u7528\u6b63\u5e38\u503c\u8bad\u7ec3\u7684\uff0c\u5f53\u5b83\u78b0\u5230\u4e00\u4e2a\u65b0\u5b9e\u4f8b\uff0c\u5b83\u53ef\u4ee5\u5224\u65ad\u8fd9\u4e2a\u65b0\u5b9e\u4f8b\u662f\u50cf\u6b63\u5e38\u503c\u8fd8\u662f\u5f02\u5e38\u503c\uff08\u56fe 1-10\uff09\u3002 \u56fe 1-10 \u5f02\u5e38\u68c0\u6d4b \u6700\u540e\uff0c\u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u975e\u76d1\u7763\u4efb\u52a1\u662f\u5173\u8054\u89c4\u5219\u5b66\u4e60\uff0c\u5b83\u7684\u76ee\u6807\u662f\u6316\u6398\u5927\u91cf\u6570\u636e\u4ee5\u53d1\u73b0\u5c5e\u6027\u95f4\u6709\u8da3\u7684\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u62e5\u6709\u4e00\u4e2a\u8d85\u5e02\u3002\u5728\u9500\u552e\u65e5\u5fd7\u4e0a\u8fd0\u884c\u5173\u8054\u89c4\u5219\uff0c\u53ef\u80fd\u53d1\u73b0\u4e70\u4e86\u70e7\u70e4\u9171\u548c\u85af\u7247\u7684\u4eba\u4e5f\u4f1a\u4e70\u725b\u6392\u3002\u56e0\u6b64\uff0c\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5546\u54c1\u653e\u5728\u4e00\u8d77\u3002","title":"\u975e\u76d1\u7763\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_8","text":"\u4e00\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u5904\u7406\u90e8\u5206\u5e26\u6807\u7b7e\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u901a\u5e38\u662f\u5927\u91cf\u4e0d\u5e26\u6807\u7b7e\u6570\u636e\u52a0\u4e0a\u5c0f\u90e8\u5206\u5e26\u6807\u7b7e\u6570\u636e\u3002\u8fd9\u79f0\u4f5c\u534a\u76d1\u7763\u5b66\u4e60\uff08\u56fe 1-11\uff09\u3002 \u4e00\u4e9b\u56fe\u7247\u5b58\u50a8\u670d\u52a1\uff0c\u6bd4\u5982 Google Photos\uff0c\u662f\u534a\u76d1\u7763\u5b66\u4e60\u7684\u597d\u4f8b\u5b50\u3002\u4e00\u65e6\u4f60\u4e0a\u4f20\u4e86\u6240\u6709\u5bb6\u5ead\u76f8\u7247\uff0c\u5b83\u5c31\u80fd\u81ea\u52a8\u8bc6\u522b\u76f8\u540c\u7684\u4eba A \u51fa\u73b0\u4e86\u76f8\u7247 1\u30015\u300111 \u4e2d\uff0c\u53e6\u4e00\u4e2a\u4eba B \u51fa\u73b0\u5728\u4e86\u76f8\u7247 2\u30015\u30017 \u4e2d\u3002\u8fd9\u662f\u7b97\u6cd5\u7684\u975e\u76d1\u7763\u90e8\u5206\uff08\u805a\u7c7b\uff09\u3002\u73b0\u5728\u7cfb\u7edf\u9700\u8981\u7684\u5c31\u662f\u4f60\u544a\u8bc9\u8fd9\u4e24\u4e2a\u4eba\u662f\u8c01\u3002\u53ea\u8981\u7ed9\u6bcf\u4e2a\u4eba\u4e00\u4e2a\u6807\u7b7e\uff0c\u7b97\u6cd5\u5c31\u53ef\u4ee5\u547d\u540d\u6bcf\u5f20\u7167\u7247\u4e2d\u7684\u6bcf\u4e2a\u4eba\uff0c\u7279\u522b\u9002\u5408\u641c\u7d22\u7167\u7247\u3002 \u56fe 1-11 \u534a\u76d1\u7763\u5b66\u4e60 \u591a\u6570\u534a\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u662f\u975e\u76d1\u7763\u548c\u76d1\u7763\u7b97\u6cd5\u7684\u7ed3\u5408\u3002\u4f8b\u5982\uff0c\u6df1\u5ea6\u4fe1\u5ff5\u7f51\u7edc\uff08deep belief networks\uff09\u662f\u57fa\u4e8e\u88ab\u79f0\u4e3a\u4e92\u76f8\u53e0\u52a0\u7684\u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a\uff08restricted Boltzmann machines\uff0cRBM\uff09\u7684\u975e\u76d1\u7763\u7ec4\u4ef6\u3002RBM \u662f\u5148\u7528\u975e\u76d1\u7763\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3\uff0c\u518d\u7528\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u8fdb\u884c\u6574\u4e2a\u7cfb\u7edf\u5fae\u8c03\u3002","title":"\u534a\u76d1\u7763\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_9","text":"\u5f3a\u5316\u5b66\u4e60\u975e\u5e38\u4e0d\u540c\u3002\u5b66\u4e60\u7cfb\u7edf\u5728\u8fd9\u91cc\u88ab\u79f0\u4e3a\u667a\u80fd\u4f53\uff08agent\uff09\uff0c\u53ef\u4ee5\u5bf9\u73af\u5883\u8fdb\u884c\u89c2\u5bdf\uff0c\u9009\u62e9\u548c\u6267\u884c\u52a8\u4f5c\uff0c\u83b7\u5f97\u5956\u52b1\uff08\u8d1f\u5956\u52b1\u662f\u60e9\u7f5a\uff0c\u89c1\u56fe 1-12\uff09\u3002\u7136\u540e\u5b83\u5fc5\u987b\u81ea\u5df1\u5b66\u4e60\u54ea\u4e2a\u662f\u6700\u4f73\u65b9\u6cd5\uff08\u79f0\u4e3a\u7b56\u7565\uff0cpolicy\uff09\uff0c\u4ee5\u5f97\u5230\u957f\u4e45\u7684\u6700\u5927\u5956\u52b1\u3002\u7b56\u7565\u51b3\u5b9a\u4e86\u667a\u80fd\u4f53\u5728\u7ed9\u5b9a\u60c5\u51b5\u4e0b\u5e94\u8be5\u91c7\u53d6\u7684\u884c\u52a8\u3002 \u56fe 1-12 \u5f3a\u5316\u5b66\u4e60 \u4f8b\u5982\uff0c\u8bb8\u591a\u673a\u5668\u4eba\u8fd0\u884c\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u4ee5\u5b66\u4e60\u5982\u4f55\u884c\u8d70\u3002DeepMind \u7684 AlphaGo \u4e5f\u662f\u5f3a\u5316\u5b66\u4e60\u7684\u4f8b\u5b50\uff1a\u5b83\u5728 2016 \u5e74\u4e09\u6708\u51fb\u8d25\u4e86\u4e16\u754c\u56f4\u68cb\u51a0\u519b\u674e\u4e16\u77f3\uff08\u8bd1\u8005\u6ce8\uff1a2017 \u5e74\u4e94\u6708\uff0cAlphaGo \u53c8\u51fb\u8d25\u4e86\u4e16\u754c\u6392\u540d\u7b2c\u4e00\u7684\u67ef\u6d01\uff09\u3002\u5b83\u662f\u901a\u8fc7\u5206\u6790\u6570\u767e\u4e07\u76d8\u68cb\u5c40\u5b66\u4e60\u5236\u80dc\u7b56\u7565\uff0c\u7136\u540e\u81ea\u5df1\u548c\u81ea\u5df1\u4e0b\u68cb\u3002\u8981\u6ce8\u610f\uff0c\u5728\u6bd4\u8d5b\u4e2d\u673a\u5668\u5b66\u4e60\u662f\u5173\u95ed\u7684\uff1bAlphaGo \u53ea\u662f\u4f7f\u7528\u5b83\u5b66\u4f1a\u7684\u7b56\u7565\u3002","title":"\u5f3a\u5316\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_10","text":"\u53e6\u4e00\u4e2a\u7528\u6765\u5206\u7c7b\u673a\u5668\u5b66\u4e60\u7684\u51c6\u5219\u662f\uff0c\u5b83\u662f\u5426\u80fd\u4ece\u5bfc\u5165\u7684\u6570\u636e\u6d41\u8fdb\u884c\u6301\u7eed\u5b66\u4e60\u3002","title":"\u6279\u91cf\u548c\u5728\u7ebf\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_11","text":"\u5728\u6279\u91cf\u5b66\u4e60\u4e2d\uff0c\u7cfb\u7edf\u4e0d\u80fd\u8fdb\u884c\u6301\u7eed\u5b66\u4e60\uff1a\u5fc5\u987b\u7528\u6240\u6709\u53ef\u7528\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u901a\u5e38\u4f1a\u5360\u7528\u5927\u91cf\u65f6\u95f4\u548c\u8ba1\u7b97\u8d44\u6e90\uff0c\u6240\u4ee5\u4e00\u822c\u662f\u7ebf\u4e0b\u505a\u7684\u3002\u9996\u5148\u662f\u8fdb\u884c\u8bad\u7ec3\uff0c\u7136\u540e\u90e8\u7f72\u5728\u751f\u4ea7\u73af\u5883\u4e14\u505c\u6b62\u5b66\u4e60\uff0c\u5b83\u53ea\u662f\u4f7f\u7528\u5df2\u7ecf\u5b66\u5230\u7684\u7b56\u7565\u3002\u8fd9\u79f0\u4e3a\u79bb\u7ebf\u5b66\u4e60\u3002 \u5982\u679c\u4f60\u60f3\u8ba9\u4e00\u4e2a\u6279\u91cf\u5b66\u4e60\u7cfb\u7edf\u660e\u767d\u65b0\u6570\u636e\uff08\u4f8b\u5982\u5783\u573e\u90ae\u4ef6\u7684\u65b0\u7c7b\u578b\uff09\uff0c\u5c31\u9700\u8981\u4ece\u5934\u8bad\u7ec3\u4e00\u4e2a\u7cfb\u7edf\u7684\u65b0\u7248\u672c\uff0c\u4f7f\u7528\u5168\u90e8\u6570\u636e\u96c6\uff08\u4e0d\u4ec5\u6709\u65b0\u6570\u636e\u4e5f\u6709\u8001\u6570\u636e\uff09\uff0c\u7136\u540e\u505c\u6389\u8001\u7cfb\u7edf\uff0c\u6362\u4e0a\u65b0\u7cfb\u7edf\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u8bad\u7ec3\u3001\u8bc4\u4f30\u3001\u90e8\u7f72\u4e00\u5957\u673a\u5668\u5b66\u4e60\u7684\u7cfb\u7edf\u7684\u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u81ea\u52a8\u8fdb\u884c\uff08\u89c1\u56fe 1-3\uff09\uff0c\u6240\u4ee5\u5373\u4fbf\u662f\u6279\u91cf\u5b66\u4e60\u4e5f\u53ef\u4ee5\u9002\u5e94\u6539\u53d8\u3002\u53ea\u8981\u6709\u9700\u8981\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u66f4\u65b0\u6570\u636e\u3001\u8bad\u7ec3\u4e00\u4e2a\u65b0\u7248\u672c\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u901a\u5e38\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\uff0c\u4f46\u662f\u7528\u5168\u90e8\u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\u4f1a\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u6240\u4ee5\u4e00\u822c\u662f\u6bcf 24 \u5c0f\u65f6\u6216\u6bcf\u5468\u8bad\u7ec3\u4e00\u4e2a\u65b0\u7cfb\u7edf\u3002\u5982\u679c\u7cfb\u7edf\u9700\u8981\u5feb\u901f\u9002\u5e94\u53d8\u5316\u7684\u6570\u636e\uff08\u6bd4\u5982\uff0c\u9884\u6d4b\u80a1\u4ef7\u53d8\u5316\uff09\uff0c\u5c31\u9700\u8981\u4e00\u4e2a\u54cd\u5e94\u66f4\u53ca\u65f6\u7684\u65b9\u6848\u3002 \u53e6\u5916\uff0c\u7528\u5168\u90e8\u6570\u636e\u8bad\u7ec3\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u8d44\u6e90\uff08CPU\u3001\u5185\u5b58\u7a7a\u95f4\u3001\u78c1\u76d8\u7a7a\u95f4\u3001\u78c1\u76d8 I/O\u3001\u7f51\u7edc I/O \u7b49\u7b49\uff09\u3002\u5982\u679c\u4f60\u6709\u5927\u91cf\u6570\u636e\uff0c\u5e76\u8ba9\u7cfb\u7edf\u6bcf\u5929\u81ea\u52a8\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\uff0c\u5c31\u4f1a\u5f00\u9500\u5f88\u5927\u3002\u5982\u679c\u6570\u636e\u91cf\u5de8\u5927\uff0c\u751a\u81f3\u65e0\u6cd5\u4f7f\u7528\u6279\u91cf\u5b66\u4e60\u7b97\u6cd5\u3002 \u6700\u540e\uff0c\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u9700\u8981\u81ea\u52a8\u5b66\u4e60\uff0c\u4f46\u662f\u8d44\u6e90\u6709\u9650\uff08\u6bd4\u5982\uff0c\u4e00\u53f0\u667a\u80fd\u624b\u673a\u6216\u706b\u661f\u8f66\uff09\uff0c\u643a\u5e26\u5927\u91cf\u8bad\u7ec3\u6570\u636e\u3001\u6bcf\u5929\u82b1\u8d39\u6570\u5c0f\u65f6\u7684\u5927\u91cf\u8d44\u6e90\u8fdb\u884c\u8bad\u7ec3\u662f\u4e0d\u5b9e\u9645\u7684\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u4e9b\u60c5\u51b5\uff0c\u8fd8\u6709\u4e00\u4e2a\u66f4\u4f73\u7684\u65b9\u6848\u53ef\u4ee5\u8fdb\u884c\u6301\u7eed\u5b66\u4e60\u3002","title":"\u6279\u91cf\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_12","text":"\u5728\u5728\u7ebf\u5b66\u4e60\u4e2d\uff0c\u662f\u7528\u6570\u636e\u5b9e\u4f8b\u6301\u7eed\u5730\u8fdb\u884c\u8bad\u7ec3\uff0c\u53ef\u4ee5\u4e00\u6b21\u4e00\u4e2a\u6216\u4e00\u6b21\u51e0\u4e2a\u5b9e\u4f8b\uff08\u79f0\u4e3a\u5c0f\u6279\u91cf\uff09\u3002\u6bcf\u4e2a\u5b66\u4e60\u6b65\u9aa4\u90fd\u5f88\u5feb\u4e14\u5ec9\u4ef7\uff0c\u6240\u4ee5\u7cfb\u7edf\u53ef\u4ee5\u52a8\u6001\u5730\u5b66\u4e60\u5230\u8fbe\u7684\u65b0\u6570\u636e\uff08\u89c1\u56fe 1-13\uff09\u3002 \u56fe 1-13 \u5728\u7ebf\u5b66\u4e60 \u5728\u7ebf\u5b66\u4e60\u5f88\u9002\u5408\u7cfb\u7edf\u63a5\u6536\u8fde\u7eed\u6d41\u7684\u6570\u636e\uff08\u6bd4\u5982\uff0c\u80a1\u7968\u4ef7\u683c\uff09\uff0c\u4e14\u9700\u8981\u81ea\u52a8\u5bf9\u6539\u53d8\u4f5c\u51fa\u8c03\u6574\u3002\u5982\u679c\u8ba1\u7b97\u8d44\u6e90\u6709\u9650\uff0c\u5728\u7ebf\u5b66\u4e60\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u65b9\u6848\uff1a\u4e00\u65e6\u5728\u7ebf\u5b66\u4e60\u7cfb\u7edf\u5b66\u4e60\u4e86\u65b0\u7684\u6570\u636e\u5b9e\u4f8b\uff0c\u5b83\u5c31\u4e0d\u518d\u9700\u8981\u8fd9\u4e9b\u6570\u636e\u4e86\uff0c\u6240\u4ee5\u6254\u6389\u8fd9\u4e9b\u6570\u636e\uff08\u9664\u975e\u4f60\u60f3\u6eda\u56de\u5230\u4e4b\u524d\u7684\u4e00\u4e2a\u72b6\u6001\uff0c\u518d\u6b21\u4f7f\u7528\u6570\u636e\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u7a7a\u95f4\u3002 \u5728\u7ebf\u5b66\u4e60\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u5f53\u673a\u5668\u7684\u5185\u5b58\u5b58\u4e0d\u4e0b\u5927\u91cf\u6570\u636e\u96c6\u65f6\uff0c\u7528\u6765\u8bad\u7ec3\u7cfb\u7edf\uff08\u8fd9\u79f0\u4f5c\u6838\u5916\u5b66\u4e60\uff0c out-of-core learning\uff09\u3002\u7b97\u6cd5\u52a0\u8f7d\u90e8\u5206\u7684\u6570\u636e\uff0c\u7528\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u7528\u6240\u6709\u6570\u636e\u90fd\u8fdb\u884c\u4e86\u8bad\u7ec3\uff08\u89c1\u56fe 1-14\uff09\u3002 \u8b66\u544a\uff1a\u8fd9\u4e2a\u6574\u4e2a\u8fc7\u7a0b\u901a\u5e38\u662f\u79bb\u7ebf\u5b8c\u6210\u7684\uff08\u5373\uff0c\u4e0d\u5728\u90e8\u7f72\u7684\u7cfb\u7edf\u4e0a\uff09\uff0c\u6240\u4ee5\u5728\u7ebf\u5b66\u4e60\u8fd9\u4e2a\u540d\u5b57\u4f1a\u8ba9\u4eba\u7591\u60d1\u3002\u53ef\u4ee5\u628a\u5b83\u60f3\u6210\u6301\u7eed\u5b66\u4e60\u3002 \u56fe 1-14 \u4f7f\u7528\u5728\u7ebf\u5b66\u4e60\u5904\u7406\u5927\u91cf\u6570\u636e\u96c6 \u5728\u7ebf\u5b66\u4e60\u7cfb\u7edf\u7684\u4e00\u4e2a\u91cd\u8981\u53c2\u6570\u662f\uff0c\u5b83\u4eec\u53ef\u4ee5\u591a\u5feb\u5730\u9002\u5e94\u6570\u636e\u7684\u6539\u53d8\uff1a\u8fd9\u88ab\u79f0\u4e3a\u5b66\u4e60\u901f\u7387\u3002\u5982\u679c\u4f60\u8bbe\u5b9a\u4e00\u4e2a\u9ad8\u5b66\u4e60\u901f\u7387\uff0c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u5feb\u901f\u9002\u5e94\u65b0\u6570\u636e\uff0c\u4f46\u662f\u4e5f\u4f1a\u5feb\u901f\u5fd8\u8bb0\u8001\u6570\u636e\uff08\u4f60\u53ef\u4e0d\u60f3\u8ba9\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u53ea\u6807\u8bb0\u6700\u65b0\u7684\u5783\u573e\u90ae\u4ef6\u79cd\u7c7b\uff09\u3002\u76f8\u53cd\u7684\uff0c\u5982\u679c\u4f60\u8bbe\u5b9a\u7684\u5b66\u4e60\u901f\u7387\u4f4e\uff0c\u7cfb\u7edf\u7684\u60f0\u6027\u5c31\u4f1a\u5f3a\uff1a\u5373\uff0c\u5b83\u5b66\u7684\u66f4\u6162\uff0c\u4f46\u5bf9\u65b0\u6570\u636e\u4e2d\u7684\u566a\u58f0\u6216\u6ca1\u6709\u4ee3\u8868\u6027\u7684\u6570\u636e\u70b9\u7ed3\u679c\u4e0d\u90a3\u4e48\u654f\u611f\u3002 \u5728\u7ebf\u5b66\u4e60\u7684\u6311\u6218\u4e4b\u4e00\u662f\uff0c\u5982\u679c\u574f\u6570\u636e\u88ab\u7528\u6765\u8fdb\u884c\u8bad\u7ec3\uff0c\u7cfb\u7edf\u7684\u6027\u80fd\u5c31\u4f1a\u9010\u6e10\u4e0b\u6ed1\u3002\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u90e8\u7f72\u7684\u7cfb\u7edf\uff0c\u7528\u6237\u5c31\u4f1a\u6ce8\u610f\u5230\u3002\u4f8b\u5982\uff0c\u574f\u6570\u636e\u53ef\u80fd\u6765\u81ea\u5931\u7075\u7684\u4f20\u611f\u5668\u6216\u673a\u5668\u4eba\uff0c\u6216\u67d0\u4eba\u5411\u641c\u7d22\u5f15\u64ce\u4f20\u5165\u5783\u573e\u4fe1\u606f\u4ee5\u63d0\u9ad8\u641c\u7d22\u6392\u540d\u3002\u8981\u51cf\u5c0f\u8fd9\u79cd\u98ce\u9669\uff0c\u4f60\u9700\u8981\u5bc6\u96c6\u76d1\u6d4b\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u6027\u80fd\u4e0b\u964d\uff0c\u8981\u5feb\u901f\u5173\u95ed\uff08\u6216\u662f\u6eda\u56de\u5230\u4e00\u4e2a\u4e4b\u524d\u7684\u72b6\u6001\uff09\u3002\u4f60\u53ef\u80fd\u8fd8\u8981\u76d1\u6d4b\u8f93\u5165\u6570\u636e\uff0c\u5bf9\u53cd\u5e38\u6570\u636e\u505a\u51fa\u53cd\u5e94\uff08\u6bd4\u5982\uff0c\u4f7f\u7528\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5\uff09\u3002","title":"\u5728\u7ebf\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#vs","text":"\u53e6\u4e00\u79cd\u5206\u7c7b\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\u662f\u5224\u65ad\u5b83\u4eec\u662f\u5982\u4f55\u8fdb\u884c\u5f52\u7eb3\u63a8\u5e7f\u7684\u3002\u5927\u591a\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u662f\u5173\u4e8e\u9884\u6d4b\u7684\u3002\u8fd9\u610f\u5473\u7740\u7ed9\u5b9a\u4e00\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u7cfb\u7edf\u9700\u8981\u80fd\u63a8\u5e7f\u5230\u4e4b\u524d\u6ca1\u89c1\u5230\u8fc7\u7684\u6837\u672c\u3002\u5bf9\u8bad\u7ec3\u6570\u636e\u96c6\u6709\u5f88\u597d\u7684\u6027\u80fd\u8fd8\u4e0d\u591f\uff0c\u771f\u6b63\u7684\u76ee\u6807\u662f\u5bf9\u65b0\u5b9e\u4f8b\u9884\u6d4b\u7684\u6027\u80fd\u3002 \u6709\u4e24\u79cd\u4e3b\u8981\u7684\u5f52\u7eb3\u65b9\u6cd5\uff1a\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60\u548c\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\u3002","title":"\u57fa\u4e8e\u5b9e\u4f8b vs \u57fa\u4e8e\u6a21\u578b\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_13","text":"\u4e5f\u8bb8\u6700\u7b80\u5355\u7684\u5b66\u4e60\u5f62\u5f0f\u5c31\u662f\u7528\u8bb0\u5fc6\u5b66\u4e60\u3002\u5982\u679c\u7528\u8fd9\u79cd\u65b9\u6cd5\u505a\u4e00\u4e2a\u5783\u573e\u90ae\u4ef6\u68c0\u6d4b\u5668\uff0c\u53ea\u9700\u6807\u8bb0\u6240\u6709\u548c\u7528\u6237\u6807\u8bb0\u7684\u5783\u573e\u90ae\u4ef6\u76f8\u540c\u7684\u90ae\u4ef6 \u2014\u2014 \u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u5dee\uff0c\u4f46\u80af\u5b9a\u4e0d\u662f\u6700\u597d\u7684\u3002 \u4e0d\u4ec5\u80fd\u6807\u8bb0\u548c\u5df2\u77e5\u7684\u5783\u573e\u90ae\u4ef6\u76f8\u540c\u7684\u90ae\u4ef6\uff0c\u4f60\u7684\u5783\u573e\u90ae\u4ef6\u8fc7\u6ee4\u5668\u4e5f\u8981\u80fd\u6807\u8bb0\u7c7b\u4f3c\u5783\u573e\u90ae\u4ef6\u7684\u90ae\u4ef6\u3002\u8fd9\u5c31\u9700\u8981\u6d4b\u91cf\u4e24\u5c01\u90ae\u4ef6\u7684\u76f8\u4f3c\u6027\u3002\u4e00\u4e2a\uff08\u7b80\u5355\u7684\uff09\u76f8\u4f3c\u5ea6\u6d4b\u91cf\u65b9\u6cd5\u662f\u7edf\u8ba1\u4e24\u5c01\u90ae\u4ef6\u5305\u542b\u7684\u76f8\u540c\u5355\u8bcd\u7684\u6570\u91cf\u3002\u5982\u679c\u4e00\u5c01\u90ae\u4ef6\u542b\u6709\u8bb8\u591a\u5783\u573e\u90ae\u4ef6\u4e2d\u7684\u8bcd\uff0c\u5c31\u4f1a\u88ab\u6807\u8bb0\u4e3a\u5783\u573e\u90ae\u4ef6\u3002 \u8fd9\u88ab\u79f0\u4f5c\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60\uff1a\u7cfb\u7edf\u5148\u7528\u8bb0\u5fc6\u5b66\u4e60\u6848\u4f8b\uff0c\u7136\u540e\u4f7f\u7528\u76f8\u4f3c\u5ea6\u6d4b\u91cf\u63a8\u5e7f\u5230\u65b0\u7684\u4f8b\u5b50\uff08\u56fe 1-15\uff09\u3002 \u56fe 1-15 \u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60","title":"\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_14","text":"\u53e6\u4e00\u79cd\u4ece\u6837\u672c\u96c6\u8fdb\u884c\u5f52\u7eb3\u7684\u65b9\u6cd5\u662f\u5efa\u7acb\u8fd9\u4e9b\u6837\u672c\u7684\u6a21\u578b\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e2a\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u3002\u8fd9\u79f0\u4f5c\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\uff08\u56fe 1-16\uff09\u3002 \u56fe 1-16 \u57fa\u4e8e\u6a21\u578b\u5b66\u4e60 \u4f8b\u5982\uff0c\u4f60\u60f3\u77e5\u9053\u94b1\u662f\u5426\u80fd\u8ba9\u4eba\u5feb\u4e50\uff0c\u4f60\u4ece OECD \u7f51\u7ad9 \u4e0b\u8f7d\u4e86 Better Life Index \u6307\u6570\u6570\u636e\uff0c\u8fd8\u4ece IMF \u4e0b\u8f7d\u4e86\u4eba\u5747 GDP \u6570\u636e\u3002\u8868 1-1 \u5c55\u793a\u4e86\u6458\u8981\u3002 \u8868 1-1 \u94b1\u4f1a\u4f7f\u4eba\u5e78\u798f\u5417\uff1f \u7528\u4e00\u4e9b\u56fd\u5bb6\u7684\u6570\u636e\u753b\u56fe\uff08\u56fe 1-17\uff09\u3002 \u56fe 1-17 \u4f60\u770b\u5230\u8d8b\u52bf\u4e86\u5417\uff1f \u786e\u5b9e\u80fd\u770b\u5230\u8d8b\u52bf\uff01\u5c3d\u7ba1\u6570\u636e\u6709\u566a\u58f0\uff08\u5373\uff0c\u90e8\u5206\u968f\u673a\uff09\uff0c\u770b\u8d77\u6765\u751f\u6d3b\u6ee1\u610f\u5ea6\u662f\u968f\u7740\u4eba\u5747 GDP \u7684\u589e\u957f\u7ebf\u6027\u63d0\u9ad8\u7684\u3002\u6240\u4ee5\uff0c\u4f60\u51b3\u5b9a\u751f\u6d3b\u6ee1\u610f\u5ea6\u5efa\u6a21\u4e3a\u4eba\u5747 GDP \u7684\u7ebf\u6027\u51fd\u6570\u3002\u8fd9\u4e00\u6b65\u79f0\u4f5c\u6a21\u578b\u9009\u62e9\uff1a\u4f60\u9009\u4e00\u4e2a\u751f\u6d3b\u6ee1\u610f\u5ea6\u7684\u7ebf\u6027\u6a21\u578b\uff0c\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\uff0c\u4eba\u5747 GDP\uff08\u516c\u5f0f 1-1\uff09\u3002 \u516c\u5f0f 1-1 \u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u6a21\u578b \u8fd9\u4e2a\u6a21\u578b\u6709\u4e24\u4e2a\u53c2\u6570 \u03b80 \u548c \u03b81 \u3002\u901a\u8fc7\u8c03\u6574\u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u4f60\u7684\u6a21\u578b\u8868\u793a\u4efb\u4f55\u7ebf\u6027\u51fd\u6570\uff0c\u89c1\u56fe 1-18\u3002 \u56fe 1-18 \u51e0\u4e2a\u53ef\u80fd\u7684\u7ebf\u6027\u6a21\u578b \u5728\u4f7f\u7528\u6a21\u578b\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u786e\u5b9a \u03b80 \u548c \u03b81 \u3002\u5982\u4f55\u80fd\u77e5\u9053\u54ea\u4e2a\u503c\u53ef\u4ee5\u4f7f\u6a21\u578b\u7684\u6027\u80fd\u6700\u4f73\u5462\uff1f\u8981\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u9700\u8981\u6307\u5b9a\u6027\u80fd\u7684\u91cf\u5ea6\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5b9e\u7528\u51fd\u6570\uff08\u6216\u62df\u5408\u51fd\u6570\uff09\u7528\u6765\u6d4b\u91cf\u6a21\u578b\u662f\u5426\u591f\u597d\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4ee3\u4ef7\u51fd\u6570\u6765\u6d4b\u91cf\u6a21\u578b\u6709\u591a\u5dee\u3002\u5bf9\u4e8e\u7ebf\u6027\u56de\u5f52\u95ee\u9898\uff0c\u4eba\u4eec\u4e00\u822c\u662f\u7528\u4ee3\u4ef7\u51fd\u6570\u6d4b\u91cf\u7ebf\u6027\u6a21\u578b\u7684\u9884\u6d4b\u503c\u548c\u8bad\u7ec3\u6837\u672c\u7684\u8ddd\u79bb\u5dee\uff0c\u76ee\u6807\u662f\u4f7f\u8ddd\u79bb\u5dee\u6700\u5c0f\u3002 \u63a5\u4e0b\u6765\u5c31\u662f\u7ebf\u6027\u56de\u5f52\u7b97\u6cd5\uff0c\u4f60\u7528\u8bad\u7ec3\u6837\u672c\u8bad\u7ec3\u7b97\u6cd5\uff0c\u7b97\u6cd5\u627e\u5230\u4f7f\u7ebf\u6027\u6a21\u578b\u6700\u62df\u5408\u6570\u636e\u7684\u53c2\u6570\u3002\u8fd9\u79f0\u4f5c\u6a21\u578b\u8bad\u7ec3\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u7b97\u6cd5\u5f97\u5230\u7684\u53c2\u6570\u503c\u662f \u03b80=4.85 \u548c \u03b81=4.91\u00d710\u20135 \u3002 \u73b0\u5728\u6a21\u578b\u5df2\u7ecf\u6700\u7d27\u5bc6\u5730\u62df\u5408\u5230\u8bad\u7ec3\u6570\u636e\u4e86\uff0c\u89c1\u56fe 1-19\u3002 \u56fe 1-19 \u6700\u4f73\u62df\u5408\u8bad\u7ec3\u6570\u636e\u7684\u7ebf\u6027\u6a21\u578b \u6700\u540e\uff0c\u53ef\u4ee5\u51c6\u5907\u8fd0\u884c\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u4e86\u3002\u4f8b\u5982\uff0c\u5047\u5982\u4f60\u60f3\u77e5\u9053\u585e\u6d66\u8def\u65af\u4eba\u6709\u591a\u5e78\u798f\uff0c\u4f46 OECD \u6ca1\u6709\u5b83\u7684\u6570\u636e\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u7528\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\uff1a\u67e5\u8be2\u585e\u6d66\u8def\u65af\u7684\u4eba\u5747 GDP\uff0c\u4e3a 22587 \u7f8e\u5143\uff0c\u7136\u540e\u5e94\u7528\u6a21\u578b\u5f97\u5230\u751f\u6d3b\u6ee1\u610f\u5ea6\uff0c\u540e\u8005\u7684\u503c\u5728 4.85 + 22,587 \u00d7 4.91 \u00d7 10-5 = 5.96 \u5de6\u53f3\u3002 \u4e3a\u4e86\u6fc0\u8d77\u4f60\u7684\u5174\u8da3\uff0c\u6848\u4f8b 1-1 \u5c55\u793a\u4e86\u52a0\u8f7d\u6570\u636e\u3001\u51c6\u5907\u3001\u521b\u5efa\u6563\u70b9\u56fe\u7684 Python \u4ee3\u7801\uff0c\u7136\u540e\u8bad\u7ec3\u7ebf\u6027\u6a21\u578b\u5e76\u8fdb\u884c\u9884\u6d4b\u3002 \u6848\u4f8b 1-1\uff0c\u4f7f\u7528 Scikit-Learn \u8bad\u7ec3\u5e76\u8fd0\u884c\u7ebf\u6027\u6a21\u578b\u3002 import matplotlib import matplotlib.pyplot as plt import numpy as np import pandas as pd import sklearn # \u52a0\u8f7d\u6570\u636e oecd_bli = pd.read_csv(\"oecd_bli_2015.csv\", thousands=',') gdp_per_capita = pd.read_csv(\"gdp_per_capita.csv\",thousands=',',delimiter='\\t', encoding='latin1', na_values=\"n/a\") # \u51c6\u5907\u6570\u636e country_stats = prepare_country_stats(oecd_bli, gdp_per_capita) X = np.c_[country_stats[\"GDP per capita\"]] y = np.c_[country_stats[\"Life satisfaction\"]] # \u53ef\u89c6\u5316\u6570\u636e country_stats.plot(kind='scatter', x=\"GDP per capita\", y='Life satisfaction') plt.show() # \u9009\u62e9\u7ebf\u6027\u6a21\u578b lin_reg_model = sklearn.linear_model.LinearRegression() # \u8bad\u7ec3\u6a21\u578b lin_reg_model.fit(X, y) # \u5bf9\u585e\u6d66\u8def\u65af\u8fdb\u884c\u9884\u6d4b X_new = [[22587]] # \u585e\u6d66\u8def\u65af\u7684\u4eba\u5747GDP print(lin_reg_model.predict(X_new)) # outputs [[ 5.96242338]] \u6ce8\u89e3\uff1a\u5982\u679c\u4f60\u4e4b\u524d\u63a5\u89e6\u8fc7\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60\u7b97\u6cd5\uff0c\u4f60\u4f1a\u53d1\u73b0\u65af\u6d1b\u6587\u5c3c\u4e9a\u7684\u4eba\u5747 GDP\uff0820732 \u7f8e\u5143\uff09\u548c\u585e\u6d66\u8def\u65af\u5dee\u8ddd\u5f88\u5c0f\uff0cOECD \u6570\u636e\u4e0a\u65af\u6d1b\u6587\u5c3c\u4e9a\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u662f 5.7\uff0c\u5c31\u53ef\u4ee5\u9884\u6d4b\u585e\u6d66\u8def\u65af\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u4e5f\u662f 5.7\u3002\u5982\u679c\u653e\u5927\u4e00\u4e0b\u8303\u56f4\uff0c\u770b\u4e00\u4e0b\u63a5\u4e0b\u6765\u4e24\u4e2a\u4e34\u8fd1\u7684\u56fd\u5bb6\uff0c\u4f60\u4f1a\u53d1\u73b0\u8461\u8404\u7259\u548c\u897f\u73ed\u7259\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u5206\u522b\u662f 5.1 \u548c 6.5\u3002\u5bf9\u8fd9\u4e09\u4e2a\u503c\u8fdb\u884c\u5e73\u5747\u5f97\u5230 5.77\uff0c\u5c31\u548c\u57fa\u4e8e\u6a21\u578b\u7684\u9884\u6d4b\u503c\u5f88\u63a5\u8fd1\u3002\u8fd9\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\u53eb\u505ak\u8fd1\u90bb\u56de\u5f52\uff08\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c k=3 \uff09\u3002 \u5728\u524d\u9762\u7684\u4ee3\u7801\u4e2d\u66ff\u6362\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e3a K \u8fd1\u90bb\u6a21\u578b\uff0c\u53ea\u9700\u66f4\u6362\u4e0b\u9762\u4e00\u884c\uff1a ```py clf = sklearn.linear_model.LinearRegression() ``` \u4e3a\uff1a ```py clf = sklearn.neighbors.KNeighborsRegressor(n_neighbors=3) ``` \u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u4f60\u7684\u6a21\u578b\u5c31\u53ef\u4ee5\u4f5c\u51fa\u597d\u7684\u9884\u6d4b\u3002\u5982\u679c\u4e0d\u80fd\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u66f4\u591a\u7684\u5c5e\u6027\uff08\u5c31\u4e1a\u7387\u3001\u5065\u5eb7\u3001\u7a7a\u6c14\u6c61\u67d3\u7b49\u7b49\uff09\uff0c\u83b7\u53d6\u66f4\u591a\u66f4\u597d\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u6216\u9009\u62e9\u4e00\u4e2a\u66f4\u597d\u7684\u6a21\u578b\uff08\u6bd4\u5982\uff0c\u591a\u9879\u5f0f\u56de\u5f52\u6a21\u578b\uff09\u3002 \u603b\u7ed3\u4e00\u4e0b\uff1a \u7814\u7a76\u6570\u636e \u9009\u62e9\u6a21\u578b \u7528\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff08\u5373\uff0c\u5b66\u4e60\u7b97\u6cd5\u641c\u5bfb\u6a21\u578b\u53c2\u6570\u503c\uff0c\u4f7f\u4ee3\u4ef7\u51fd\u6570\u6700\u5c0f\uff09 \u6700\u540e\uff0c\u4f7f\u7528\u6a21\u578b\u5bf9\u65b0\u6848\u4f8b\u8fdb\u884c\u9884\u6d4b\uff08\u8fd9\u79f0\u4f5c\u63a8\u65ad\uff09\uff0c\u4f46\u613f\u8fd9\u4e2a\u6a21\u578b\u63a8\u5e7f\u6548\u679c\u4e0d\u5dee \u8fd9\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u3002\u5728\u7b2c 2 \u7ae0\u4e2d\uff0c\u4f60\u4f1a\u7b2c\u4e00\u624b\u5730\u63a5\u89e6\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\u3002 \u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86\u8bb8\u591a\u5173\u4e8e\u57fa\u7840\u7684\u5185\u5bb9\uff1a\u4f60\u73b0\u5728\u77e5\u9053\u4e86\u673a\u5668\u5b66\u4e60\u662f\u5173\u4e8e\u4ec0\u4e48\u7684\uff0c\u4e3a\u4ec0\u4e48\u5b83\u8fd9\u4e48\u6709\u7528\uff0c\u6700\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u7684\u5206\u7c7b\uff0c\u5178\u578b\u7684\u9879\u76ee\u5de5\u4f5c\u6d41\u7a0b\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u770b\u5b66\u4e60\u4e2d\u4f1a\u53d1\u751f\u4ec0\u4e48\u9519\u8bef\uff0c\u5bfc\u81f4\u4e0d\u80fd\u505a\u51fa\u51c6\u786e\u7684\u9884\u6d4b\u3002","title":"\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_15","text":"\u7b80\u800c\u8a00\u4e4b\uff0c\u56e0\u4e3a\u4f60\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u9009\u62e9\u4e00\u4e2a\u5b66\u4e60\u7b97\u6cd5\u5e76\u7528\u4e00\u4e9b\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u4e24\u4ef6\u4e8b\u5c31\u662f\u201c\u9519\u8bef\u7684\u7b97\u6cd5\u201d\u548c\u201c\u9519\u8bef\u7684\u6570\u636e\u201d\u3002\u6211\u4eec\u4ece\u9519\u8bef\u7684\u6570\u636e\u5f00\u59cb\u3002","title":"\u673a\u5668\u5b66\u4e60\u7684\u4e3b\u8981\u6311\u6218"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_16","text":"\u8981\u8ba9\u4e00\u4e2a\u8e52\u8dda\u5b66\u6b65\u7684\u5b69\u5b50\u77e5\u9053\u4ec0\u4e48\u662f\u82f9\u679c\uff0c\u9700\u8981\u505a\u7684\u5c31\u662f\u6307\u7740\u4e00\u4e2a\u82f9\u679c\u8bf4\u201c\u82f9\u679c\u201d\uff08\u53ef\u80fd\u9700\u8981\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u51e0\u6b21\uff09\u3002\u73b0\u5728\u8fd9\u4e2a\u5b69\u5b50\u5c31\u80fd\u8ba4\u8bc6\u6240\u6709\u5f62\u72b6\u548c\u989c\u8272\u7684\u82f9\u679c\u3002\u771f\u662f\u4e2a\u5929\u624d\uff01 \u673a\u5668\u5b66\u4e60\u8fd8\u8fbe\u4e0d\u5230\u8fd9\u4e2a\u7a0b\u5ea6\uff1b\u9700\u8981\u5927\u91cf\u6570\u636e\uff0c\u624d\u80fd\u8ba9\u591a\u6570\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u5373\u4fbf\u5bf9\u4e8e\u975e\u5e38\u7b80\u5355\u7684\u95ee\u9898\uff0c\u4e00\u822c\u4e5f\u9700\u8981\u6570\u5343\u7684\u6837\u672c\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u56fe\u50cf\u6216\u8bed\u97f3\u8bc6\u522b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u6570\u767e\u4e07\u7684\u6837\u672c\uff08\u9664\u975e\u4f60\u80fd\u91cd\u590d\u4f7f\u7528\u90e8\u5206\u5b58\u5728\u7684\u6a21\u578b\uff09\u3002 \u6570\u636e\u4e0d\u5408\u7406\u7684\u6709\u6548\u6027 \u5728\u4e00\u7bc7 2001 \u5e74\u53d1\u8868\u7684 \u8457\u540d\u8bba\u6587 \u4e2d\uff0c\u5fae\u8f6f\u7814\u7a76\u5458 Michele Banko \u548c Eric Brill \u5c55\u793a\u4e86\u4e0d\u540c\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u5305\u62ec\u975e\u5e38\u7b80\u5355\u7684\u7b97\u6cd5\uff0c\u4e00\u65e6\u6709\u4e86\u5927\u91cf\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u5728\u8fdb\u884c\u53bb\u9664\u8bed\u8a00\u6b67\u4e49\u7684\u6d4b\u8bd5\u4e2d\u51e0\u4e4e\u6709\u76f8\u540c\u7684\u6027\u80fd\uff08\u89c1\u56fe 1-20\uff09\u3002 \u56fe 1-20 \u6570\u636e\u548c\u7b97\u6cd5\u7684\u91cd\u8981\u6027\u5bf9\u6bd4 \u8bba\u6587\u4f5c\u8005\u8bf4\uff1a\u201c\u7ed3\u679c\u8bf4\u660e\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u8003\u8651\u5728\u7b97\u6cd5\u5f00\u53d1 vs \u8bed\u6599\u5e93\u53d1\u5c55\u4e0a\u82b1\u8d39\u65f6\u95f4\u548c\u91d1\u94b1\u7684\u53d6\u820d\u3002\u201d \u5bf9\u4e8e\u590d\u6742\u95ee\u9898\uff0c\u6570\u636e\u6bd4\u7b97\u6cd5\u66f4\u91cd\u8981\u7684\u4e3b\u5f20\u5728 2009 \u5e74\u7531 Norvig \u53d1\u8868\u7684\u8bba\u6587 \u300aThe Unreasonable Effectiveness of Data\u300b \u5f97\u5230\u4e86\u8fdb\u4e00\u6b65\u7684\u63a8\u5e7f\u3002\u4f46\u662f\uff0c\u5e94\u8be5\u6ce8\u610f\u5230\uff0c\u5c0f\u578b\u548c\u4e2d\u578b\u7684\u6570\u636e\u96c6\u4ecd\u7136\u662f\u975e\u5e38\u5e38\u89c1\u7684\uff0c\u83b7\u5f97\u989d\u5916\u7684\u8bad\u7ec3\u6570\u636e\u5e76\u4e0d\u603b\u662f\u8f7b\u6613\u548c\u5ec9\u4ef7\u7684\uff0c\u6240\u4ee5\u4e0d\u8981\u629b\u5f03\u7b97\u6cd5\u3002","title":"\u8bad\u7ec3\u6570\u636e\u91cf\u4e0d\u8db3"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_17","text":"\u4e3a\u4e86\u66f4\u597d\u5730\u8fdb\u884c\u5f52\u7eb3\u63a8\u5e7f\uff0c\u8ba9\u8bad\u7ec3\u6570\u636e\u5bf9\u65b0\u6570\u636e\u5177\u6709\u4ee3\u8868\u6027\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u65e0\u8bba\u4f60\u7528\u7684\u662f\u57fa\u4e8e\u5b9e\u4f8b\u5b66\u4e60\u6216\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\uff0c\u8fd9\u70b9\u90fd\u5f88\u91cd\u8981\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u4e4b\u524d\u7528\u6765\u8bad\u7ec3\u7ebf\u6027\u6a21\u578b\u7684\u56fd\u5bb6\u96c6\u5408\u4e0d\u591f\u5177\u6709\u4ee3\u8868\u6027\uff1a\u7f3a\u5c11\u4e86\u4e00\u4e9b\u56fd\u5bb6\u3002\u56fe 1-21 \u5c55\u793a\u4e86\u6dfb\u52a0\u8fd9\u4e9b\u7f3a\u5931\u56fd\u5bb6\u4e4b\u540e\u7684\u6570\u636e\u3002 \u56fe 1-21 \u4e00\u4e2a\u66f4\u5177\u4ee3\u8868\u6027\u7684\u8bad\u7ec3\u6837\u672c \u5982\u679c\u4f60\u7528\u8fd9\u4efd\u6570\u636e\u8bad\u7ec3\u7ebf\u6027\u6a21\u578b\uff0c\u5f97\u5230\u7684\u662f\u5b9e\u7ebf\uff0c\u65e7\u6a21\u578b\u7528\u865a\u7ebf\u8868\u793a\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u6dfb\u52a0\u51e0\u4e2a\u56fd\u5bb6\u4e0d\u4ec5\u53ef\u4ee5\u663e\u8457\u5730\u6539\u53d8\u6a21\u578b\uff0c\u5b83\u8fd8\u8bf4\u660e\u5982\u6b64\u7b80\u5355\u7684\u7ebf\u6027\u6a21\u578b\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u8fbe\u5230\u5f88\u597d\u7684\u6027\u80fd\u3002\u8c8c\u4f3c\u975e\u5e38\u5bcc\u88d5\u7684\u56fd\u5bb6\u6ca1\u6709\u4e2d\u7b49\u5bcc\u88d5\u7684\u56fd\u5bb6\u5feb\u4e50\uff08\u4e8b\u5b9e\u4e0a\uff0c\u975e\u5e38\u5bcc\u88d5\u7684\u56fd\u5bb6\u770b\u8d77\u6765\u66f4\u4e0d\u5feb\u4e50\uff09\uff0c\u76f8\u53cd\u7684\uff0c\u4e00\u4e9b\u8d2b\u7a77\u7684\u56fd\u5bb6\u770b\u4e0a\u53bb\u6bd4\u5bcc\u88d5\u7684\u56fd\u5bb6\u8fd8\u5e78\u798f\u3002 \u4f7f\u7528\u4e86\u6ca1\u6709\u4ee3\u8868\u6027\u7684\u6570\u636e\u96c6\uff0c\u6211\u4eec\u8bad\u7ec3\u4e86\u4e00\u4e2a\u4e0d\u53ef\u80fd\u5f97\u5230\u51c6\u786e\u9884\u6d4b\u7684\u6a21\u578b\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u975e\u5e38\u8d2b\u7a77\u548c\u975e\u5e38\u5bcc\u88d5\u7684\u56fd\u5bb6\u3002 \u4f7f\u7528\u5177\u6709\u4ee3\u8868\u6027\u7684\u8bad\u7ec3\u96c6\u5bf9\u4e8e\u63a8\u5e7f\u5230\u65b0\u6848\u4f8b\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u4f46\u662f\u505a\u8d77\u6765\u6bd4\u8bf4\u8d77\u6765\u8981\u96be\uff1a\u5982\u679c\u6837\u672c\u592a\u5c0f\uff0c\u5c31\u4f1a\u6709\u6837\u672c\u566a\u58f0\uff08\u5373\uff0c\u4f1a\u6709\u4e00\u5b9a\u6982\u7387\u5305\u542b\u6ca1\u6709\u4ee3\u8868\u6027\u7684\u6570\u636e\uff09\uff0c\u4f46\u662f\u5373\u4f7f\u662f\u975e\u5e38\u5927\u7684\u6837\u672c\u4e5f\u53ef\u80fd\u6ca1\u6709\u4ee3\u8868\u6027\uff0c\u5982\u679c\u53d6\u6837\u65b9\u6cd5\u9519\u8bef\u7684\u8bdd\u3002\u8fd9\u53eb\u505a\u6837\u672c\u504f\u5dee\u3002 \u4e00\u4e2a\u6837\u672c\u504f\u5dee\u7684\u8457\u540d\u6848\u4f8b \u4e5f\u8bb8\u5173\u4e8e\u6837\u672c\u504f\u5dee\u6700\u6709\u540d\u7684\u6848\u4f8b\u53d1\u751f\u5728 1936 \u5e74\u5170\u767b\u548c\u7f57\u65af\u798f\u7684\u7f8e\u56fd\u5927\u9009\uff1a\u300a\u6587\u5b66\u6587\u6458\u300b\u505a\u4e86\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6c11\u8c03\uff0c\u7ed9 1000 \u4e07\u4eba\u90ae\u5bc4\u4e86\u8c03\u67e5\u4fe1\u3002\u5f97\u5230\u4e86 240 \u4e07\u56de\u4fe1\uff0c\u975e\u5e38\u6709\u4fe1\u5fc3\u5730\u9884\u6d4b\u5170\u767b\u4f1a\u4ee5 57% \u8d62\u5f97\u5927\u9009\u3002\u7136\u800c\uff0c\u7f57\u65af\u798f\u8d62\u5f97\u4e86 62% \u7684\u9009\u7968\u3002\u9519\u8bef\u53d1\u751f\u5728\u300a\u6587\u5b66\u6587\u6458\u300b\u7684\u53d6\u6837\u65b9\u6cd5\uff1a \u9996\u5148\uff0c\u4e3a\u4e86\u83b7\u53d6\u53d1\u4fe1\u5730\u5740\uff0c\u300a\u6587\u5b66\u6587\u6458\u300b\u4f7f\u7528\u4e86\u7535\u8bdd\u9ec4\u9875\u3001\u6742\u5fd7\u8ba2\u9605\u7528\u6237\u3001\u4ff1\u4e50\u90e8\u4f1a\u5458\u7b49\u76f8\u4f3c\u7684\u5217\u8868\u3002\u6240\u6709\u8fd9\u4e9b\u5217\u8868\u90fd\u504f\u5411\u4e8e\u5bcc\u88d5\u4eba\u7fa4\uff0c\u4ed6\u4eec\u90fd\u503e\u5411\u4e8e\u6295\u7968\u7ed9\u5171\u548c\u515a\uff08\u5373\u5170\u767b\uff09\u3002 \u7b2c\u4e8c\uff0c\u53ea\u6709 25% \u7684\u56de\u7b54\u4e86\u8c03\u7814\u3002\u8fd9\u5c31\u53c8\u4e00\u6b21\u5f15\u5165\u4e86\u6837\u672c\u504f\u5dee\uff0c\u5b83\u6392\u9664\u4e86\u4e0d\u5173\u5fc3\u653f\u6cbb\u7684\u4eba\u3001\u4e0d\u559c\u6b22\u300a\u6587\u5b66\u6587\u6458\u300b\u7684\u4eba\uff0c\u548c\u5176\u5b83\u5173\u952e\u4eba\u7fa4\u3002\u8fd9\u79cd\u7279\u6b8a\u7684\u6837\u672c\u504f\u5dee\u79f0\u4f5c\u65e0\u5e94\u7b54\u504f\u5dee\u3002 \u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5047\u5982\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u80fd\u8bc6\u522b\u653e\u514b\u97f3\u4e50\uff08Funk Music, \u522b\u540d\u9a9a\u4e50\uff09\u89c6\u9891\u7684\u7cfb\u7edf\u3002\u5efa\u7acb\u8bad\u7ec3\u96c6\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u5728 YouTube \u4e0a\u641c\u7d22\u201c\u653e\u514b\u97f3\u4e50\u201d\uff0c\u4f7f\u7528\u641c\u7d22\u5230\u7684\u89c6\u9891\u3002\u4f46\u662f\u8fd9\u6837\u5c31\u5047\u5b9a\u4e86 YouTube \u7684\u641c\u7d22\u5f15\u64ce\u8fd4\u56de\u7684\u89c6\u9891\u96c6\uff0c\u662f\u5bf9 YouTube \u4e0a\u7684\u6240\u6709\u653e\u514b\u97f3\u4e50\u6709\u4ee3\u8868\u6027\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u641c\u7d22\u7ed3\u679c\u4f1a\u504f\u5411\u4e8e\u4eba\u4eec\u6b4c\u624b\uff08\u5982\u679c\u4f60\u5c45\u4f4f\u5728\u5df4\u897f\uff0c\u4f60\u4f1a\u5f97\u5230\u8bb8\u591a\u201cfunk carioca\u201d\u89c6\u9891\uff0c\u5b83\u4eec\u548c James Brown \u7684\u622a\u7136\u4e0d\u540c\uff09\u3002\u4ece\u53e6\u4e00\u65b9\u9762\u6765\u8bb2\uff0c\u4f60\u600e\u4e48\u5f97\u5230\u4e00\u4e2a\u5927\u7684\u8bad\u7ec3\u96c6\u5462\uff1f","title":"\u6ca1\u6709\u4ee3\u8868\u6027\u7684\u8bad\u7ec3\u6570\u636e"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_18","text":"\u5f88\u660e\u663e\uff0c\u5982\u679c\u8bad\u7ec3\u96c6\u4e2d\u7684\u9519\u8bef\u3001\u5f02\u5e38\u503c\u548c\u566a\u58f0\uff08\u9519\u8bef\u6d4b\u91cf\u5f15\u5165\u7684\uff09\u592a\u591a\uff0c\u7cfb\u7edf\u68c0\u6d4b\u51fa\u6f5c\u5728\u89c4\u5f8b\u7684\u96be\u5ea6\u5c31\u4f1a\u53d8\u5927\uff0c\u6027\u80fd\u5c31\u4f1a\u964d\u4f4e\u3002\u82b1\u8d39\u65f6\u95f4\u5bf9\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u6e05\u7406\u662f\u5341\u5206\u91cd\u8981\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5927\u591a\u6570\u636e\u79d1\u5b66\u5bb6\u7684\u4e00\u5927\u90e8\u5206\u65f6\u95f4\u662f\u505a\u6e05\u6d17\u5de5\u4f5c\u7684\u3002\u4f8b\u5982\uff1a \u5982\u679c\u4e00\u4e9b\u5b9e\u4f8b\u662f\u660e\u663e\u7684\u5f02\u5e38\u503c\uff0c\u6700\u597d\u5220\u6389\u5b83\u4eec\u6216\u5c1d\u8bd5\u624b\u5de5\u4fee\u6539\u9519\u8bef\uff1b \u5982\u679c\u4e00\u4e9b\u5b9e\u4f8b\u7f3a\u5c11\u7279\u5f81\uff08\u6bd4\u5982\uff0c\u4f60\u7684 5% \u7684\u987e\u5ba2\u6ca1\u6709\u8bf4\u660e\u5e74\u9f84\uff09\uff0c\u4f60\u5fc5\u987b\u51b3\u5b9a\u662f\u5426\u5ffd\u7565\u8fd9\u4e2a\u5c5e\u6027\u3001\u5ffd\u7565\u8fd9\u4e9b\u5b9e\u4f8b\u3001\u586b\u5165\u7f3a\u5931\u503c\uff08\u6bd4\u5982\uff0c\u5e74\u9f84\u4e2d\u4f4d\u6570\uff09\uff0c\u6216\u8005\u8bad\u7ec3\u4e00\u4e2a\u542b\u6709\u8fd9\u4e2a\u7279\u5f81\u7684\u6a21\u578b\u548c\u4e00\u4e2a\u4e0d\u542b\u6709\u8fd9\u4e2a\u7279\u5f81\u7684\u6a21\u578b\uff0c\u7b49\u7b49\u3002","title":"\u4f4e\u8d28\u91cf\u6570\u636e"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_19","text":"\u4fd7\u8bed\u8bf4\uff1a\u8fdb\u6765\u7684\u662f\u5783\u573e\uff0c\u51fa\u53bb\u7684\u4e5f\u662f\u5783\u573e\u3002\u4f60\u7684\u7cfb\u7edf\u53ea\u6709\u5728\u8bad\u7ec3\u6570\u636e\u5305\u542b\u8db3\u591f\u76f8\u5173\u7279\u5f81\u3001\u975e\u76f8\u5173\u7279\u5f81\u4e0d\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u80fd\u8fdb\u884c\u5b66\u4e60\u3002\u673a\u5668\u5b66\u4e60\u9879\u76ee\u6210\u529f\u7684\u5173\u952e\u4e4b\u4e00\u662f\u7528\u597d\u7684\u7279\u5f81\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4f5c\u7279\u5f81\u5de5\u7a0b\uff0c\u5305\u62ec\uff1a \u7279\u5f81\u9009\u62e9\uff1a\u5728\u6240\u6709\u5b58\u5728\u7684\u7279\u5f81\u4e2d\u9009\u53d6\u6700\u6709\u7528\u7684\u7279\u5f81\u8fdb\u884c\u8bad\u7ec3\u3002 \u7279\u5f81\u63d0\u53d6\uff1a\u7ec4\u5408\u5b58\u5728\u7684\u7279\u5f81\uff0c\u751f\u6210\u4e00\u4e2a\u66f4\u6709\u7528\u7684\u7279\u5f81\uff08\u5982\u524d\u9762\u770b\u5230\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u964d\u7ef4\u7b97\u6cd5\uff09\u3002 \u6536\u96c6\u65b0\u6570\u636e\u521b\u5efa\u65b0\u7279\u5f81\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u8fc7\u4e86\u8bb8\u591a\u574f\u6570\u636e\u7684\u4f8b\u5b50\uff0c\u63a5\u4e0b\u6765\u770b\u51e0\u4e2a\u574f\u7b97\u6cd5\u7684\u4f8b\u5b50\u3002","title":"\u4e0d\u76f8\u5173\u7684\u7279\u5f81"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_20","text":"\u5982\u679c\u4f60\u5728\u5916\u56fd\u6e38\u73a9\uff0c\u5f53\u5730\u7684\u51fa\u79df\u8f66\u53f8\u673a\u591a\u6536\u4e86\u4f60\u7684\u94b1\u3002\u4f60\u53ef\u80fd\u4f1a\u8bf4\u8fd9\u4e2a\u56fd\u5bb6\u6240\u6709\u7684\u51fa\u79df\u8f66\u53f8\u673a\u90fd\u662f\u5c0f\u5077\u3002\u8fc7\u5ea6\u5f52\u7eb3\u662f\u6211\u4eec\u4eba\u7c7b\u7ecf\u5e38\u505a\u7684\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5c0f\u5fc3\uff0c\u673a\u5668\u4e5f\u4f1a\u72af\u540c\u6837\u7684\u9519\u8bef\u3002\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u8fd9\u79f0\u4f5c\u8fc7\u62df\u5408\uff1a\u610f\u601d\u662f\u8bf4\uff0c\u6a21\u578b\u5728\u8bad\u7ec3\u6570\u636e\u4e0a\u8868\u73b0\u5f88\u597d\uff0c\u4f46\u662f\u63a8\u5e7f\u6548\u679c\u4e0d\u597d\u3002 \u56fe 1-22 \u5c55\u793a\u4e86\u4e00\u4e2a\u9ad8\u9636\u591a\u9879\u5f0f\u751f\u6d3b\u6ee1\u610f\u5ea6\u6a21\u578b\uff0c\u5b83\u5927\u5927\u8fc7\u62df\u5408\u4e86\u8bad\u7ec3\u6570\u636e\u3002\u5373\u4f7f\u5b83\u6bd4\u7b80\u5355\u7ebf\u6027\u6a21\u578b\u5728\u8bad\u7ec3\u6570\u636e\u4e0a\u8868\u73b0\u66f4\u597d\uff0c\u4f60\u4f1a\u76f8\u4fe1\u5b83\u7684\u9884\u6d4b\u5417\uff1f \u56fe 1-22 \u8fc7\u62df\u5408\u8bad\u7ec3\u6570\u636e \u590d\u6742\u7684\u6a21\u578b\uff0c\u6bd4\u5982\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff0c\u53ef\u4ee5\u68c0\u6d4b\u6570\u636e\u4e2d\u7684\u7ec6\u5fae\u89c4\u5f8b\uff0c\u4f46\u662f\u5982\u679c\u8bad\u7ec3\u96c6\u6709\u566a\u58f0\uff0c\u6216\u8005\u8bad\u7ec3\u96c6\u592a\u5c0f\uff08\u592a\u5c0f\u4f1a\u5f15\u5165\u6837\u672c\u566a\u58f0\uff09\uff0c\u6a21\u578b\u5c31\u4f1a\u53bb\u68c0\u6d4b\u566a\u58f0\u672c\u8eab\u7684\u89c4\u5f8b\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u4e9b\u89c4\u5f8b\u4e0d\u80fd\u63a8\u5e7f\u5230\u65b0\u5b9e\u4f8b\u3002\u4f8b\u5982\uff0c\u5047\u5982\u4f60\u7528\u66f4\u591a\u7684\u5c5e\u6027\u8bad\u7ec3\u751f\u6d3b\u6ee1\u610f\u5ea6\u6a21\u578b\uff0c\u5305\u62ec\u4e0d\u5305\u542b\u4fe1\u606f\u7684\u5c5e\u6027\uff0c\u6bd4\u5982\u56fd\u5bb6\u7684\u540d\u5b57\u3002\u5982\u6b64\u4e00\u6765\uff0c\u590d\u6742\u7684\u6a21\u578b\u53ef\u80fd\u4f1a\u68c0\u6d4b\u51fa\u8bad\u7ec3\u96c6\u4e2d\u540d\u5b57\u6709 w \u5b57\u6bcd\u7684\u56fd\u5bb6\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u5927\u4e8e 7\uff1a\u65b0\u897f\u5170\uff087.3\uff09\uff0c\u632a\u5a01\uff087.4\uff09\uff0c\u745e\u5178\uff087.2\uff09\u548c\u745e\u58eb\uff087.5\uff09\u3002\u4f60\u80fd\u76f8\u4fe1\u8fd9\u4e2a W-\u6ee1\u610f\u5ea6\u6cd5\u5219\u63a8\u5e7f\u5230\u5362\u65fa\u8fbe\u548c\u6d25\u5df4\u5e03\u97e6\u5417\uff1f\u5f88\u660e\u663e\uff0c\u8fd9\u4e2a\u89c4\u5f8b\u53ea\u662f\u8bad\u7ec3\u96c6\u6570\u636e\u4e2d\u5076\u7136\u51fa\u73b0\u7684\uff0c\u4f46\u662f\u6a21\u578b\u4e0d\u80fd\u5224\u65ad\u8fd9\u4e2a\u89c4\u5f8b\u662f\u771f\u5b9e\u7684\u3001\u8fd8\u662f\u566a\u58f0\u7684\u7ed3\u679c\u3002 \u8b66\u544a\uff1a\u8fc7\u62df\u5408\u53d1\u751f\u5728\u76f8\u5bf9\u4e8e\u8bad\u7ec3\u6570\u636e\u7684\u91cf\u548c\u566a\u58f0\uff0c\u6a21\u578b\u8fc7\u4e8e\u590d\u6742\u7684\u60c5\u51b5\u3002\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u6709\uff1a \u7b80\u5316\u6a21\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u53c2\u6570\u66f4\u5c11\u7684\u6a21\u578b\uff08\u6bd4\u5982\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\uff0c\u800c\u4e0d\u662f\u9ad8\u9636\u591a\u9879\u5f0f\u6a21\u578b\uff09\u3001\u51cf\u5c11\u8bad\u7ec3\u6570\u636e\u7684\u5c5e\u6027\u6570\u3001\u6216\u9650\u5236\u4e00\u4e0b\u6a21\u578b \u6536\u96c6\u66f4\u591a\u7684\u8bad\u7ec3\u6570\u636e \u51cf\u5c0f\u8bad\u7ec3\u6570\u636e\u7684\u566a\u58f0\uff08\u6bd4\u5982\uff0c\u4fee\u6539\u6570\u636e\u9519\u8bef\u548c\u53bb\u9664\u5f02\u5e38\u503c\uff09 \u9650\u5b9a\u4e00\u4e2a\u6a21\u578b\u4ee5\u8ba9\u5b83\u66f4\u7b80\u5355\uff0c\u964d\u4f4e\u8fc7\u62df\u5408\u7684\u98ce\u9669\u88ab\u79f0\u4f5c\u6b63\u5219\u5316\uff08regularization\uff09\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684\u7ebf\u6027\u6a21\u578b\u6709\u4e24\u4e2a\u53c2\u6570\uff0c \u03b80 \u548c \u03b81 \u3002\u5b83\u7ed9\u4e86\u5b66\u4e60\u7b97\u6cd5\u4e24\u4e2a\u81ea\u7531\u5ea6\u4ee5\u8ba9\u6a21\u578b\u9002\u5e94\u8bad\u7ec3\u6570\u636e\uff1a\u53ef\u4ee5\u8c03\u6574\u622a\u8ddd \u03b80 \u548c\u659c\u7387 \u03b81 \u3002\u5982\u679c\u5f3a\u5236 \u03b81=0 \uff0c\u7b97\u6cd5\u5c31\u53ea\u5269\u4e00\u4e2a\u81ea\u7531\u5ea6\uff0c\u62df\u5408\u6570\u636e\u5c31\u4f1a\u66f4\u4e3a\u56f0\u96be\uff1a\u80fd\u505a\u7684\u53ea\u662f\u5c06\u5728\u7ebf\u4e0b\u79fb\u52a8\uff0c\u5c3d\u53ef\u80fd\u5730\u9760\u8fd1\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u7ed3\u679c\u4f1a\u5728\u5e73\u5747\u503c\u9644\u8fd1\u3002\u8fd9\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b\uff01\u5982\u679c\u6211\u4eec\u5141\u8bb8\u7b97\u6cd5\u53ef\u4ee5\u4fee\u6539 \u03b81 \uff0c\u4f46\u662f\u53ea\u80fd\u5728\u4e00\u4e2a\u5f88\u5c0f\u7684\u8303\u56f4\u5185\u4fee\u6539\uff0c\u7b97\u6cd5\u7684\u81ea\u7531\u5ea6\u5c31\u4f1a\u4ecb\u4e8e 1 \u548c 2 \u4e4b\u95f4\u3002\u5b83\u8981\u6bd4\u4e24\u4e2a\u81ea\u7531\u5ea6\u7684\u6a21\u578b\u7b80\u5355\uff0c\u6bd4 1 \u4e2a\u81ea\u7531\u5ea6\u7684\u6a21\u578b\u8981\u590d\u6742\u3002\u4f60\u7684\u76ee\u6807\u662f\u5728\u5b8c\u7f8e\u62df\u5408\u6570\u636e\u548c\u4fdd\u6301\u6a21\u578b\u7b80\u5355\u6027\u4e0a\u627e\u5230\u5e73\u8861\uff0c\u786e\u4fdd\u7b97\u6cd5\u7684\u63a8\u5e7f\u6548\u679c\u3002 \u56fe 1-23 \u5c55\u793a\u4e86\u4e09\u4e2a\u6a21\u578b\uff1a\u865a\u7ebf\u8868\u793a\u7528\u7f3a\u5931\u90e8\u5206\u56fd\u5bb6\u7684\u6570\u636e\u8bad\u7ec3\u7684\u539f\u59cb\u6a21\u578b\uff0c\u77ed\u5212\u7ebf\u662f\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2a\u7528\u6240\u6709\u56fd\u5bb6\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u5b9e\u7ebf\u6a21\u578b\u7684\u8bad\u7ec3\u6570\u636e\u548c\u7b2c\u4e00\u4e2a\u76f8\u540c\uff0c\u4f46\u8fdb\u884c\u4e86\u6b63\u5219\u5316\u9650\u5236\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6b63\u5219\u5316\u5f3a\u5236\u6a21\u578b\u6709\u4e00\u4e2a\u5c0f\u7684\u659c\u7387\uff0c\u5b83\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u62df\u5408\u4e0d\u662f\u90a3\u4e48\u597d\uff0c\u4f46\u662f\u5bf9\u65b0\u6837\u672c\u7684\u63a8\u5e7f\u6548\u679c\u597d\u3002 \u56fe 1-23 \u6b63\u5219\u5316\u964d\u4f4e\u4e86\u8fc7\u5ea6\u62df\u5408\u7684\u98ce\u9669 \u6b63\u5219\u5316\u7684\u5ea6\u53ef\u4ee5\u7528\u4e00\u4e2a\u8d85\u53c2\u6570\uff08hyperparameter\uff09\u63a7\u5236\u3002\u8d85\u53c2\u6570\u662f\u4e00\u4e2a\u5b66\u4e60\u7b97\u6cd5\u7684\u53c2\u6570\uff08\u800c\u4e0d\u662f\u6a21\u578b\u7684\uff09\u3002\u8fd9\u6837\uff0c\u5b83\u662f\u4e0d\u4f1a\u88ab\u5b66\u4e60\u7b97\u6cd5\u672c\u8eab\u5f71\u54cd\u7684\uff0c\u5b83\u4f18\u4e8e\u8bad\u7ec3\uff0c\u5728\u8bad\u7ec3\u4e2d\u662f\u4fdd\u6301\u4e0d\u53d8\u7684\u3002\u5982\u679c\u4f60\u8bbe\u5b9a\u7684\u8d85\u53c2\u6570\u975e\u5e38\u5927\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u51e0\u4e4e\u662f\u5e73\u7684\u6a21\u578b\uff08\u659c\u7387\u63a5\u8fd1\u4e8e 0\uff09\uff1b\u8fd9\u79cd\u5b66\u4e60\u7b97\u6cd5\u51e0\u4e4e\u80af\u5b9a\u4e0d\u4f1a\u8fc7\u62df\u5408\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u662f\u4e5f\u5f88\u96be\u5f97\u5230\u4e00\u4e2a\u597d\u7684\u89e3\u3002\u8c03\u8282\u8d85\u53c2\u6570\u662f\u521b\u5efa\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u975e\u5e38\u91cd\u8981\u7684\u4e00\u90e8\u5206\uff08\u4e0b\u4e00\u7ae0\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u8be6\u7ec6\u7684\u4f8b\u5b50\uff09\u3002","title":"\u8fc7\u62df\u5408\u8bad\u7ec3\u6570\u636e"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_21","text":"\u4f60\u53ef\u80fd\u731c\u5230\u4e86\uff0c\u6b20\u62df\u5408\u662f\u548c\u8fc7\u62df\u5408\u76f8\u5bf9\u7684\uff1a\u5f53\u4f60\u7684\u6a21\u578b\u8fc7\u4e8e\u7b80\u5355\u65f6\u5c31\u4f1a\u53d1\u751f\u3002\u4f8b\u5982\uff0c\u751f\u6d3b\u6ee1\u610f\u5ea6\u7684\u7ebf\u6027\u6a21\u578b\u503e\u5411\u4e8e\u6b20\u62df\u5408\uff1b\u73b0\u5b9e\u8981\u6bd4\u8fd9\u4e2a\u6a21\u578b\u590d\u6742\u7684\u591a\uff0c\u6240\u4ee5\u9884\u6d4b\u5f88\u96be\u51c6\u786e\uff0c\u5373\u4f7f\u5728\u8bad\u7ec3\u6837\u672c\u4e0a\u4e5f\u5f88\u96be\u51c6\u786e\u3002 \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u9009\u9879\u5305\u62ec\uff1a \u9009\u62e9\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u5e26\u6709\u66f4\u591a\u53c2\u6570 \u7528\u66f4\u597d\u7684\u7279\u5f81\u8bad\u7ec3\u5b66\u4e60\u7b97\u6cd5\uff08\u7279\u5f81\u5de5\u7a0b\uff09 \u51cf\u5c0f\u5bf9\u6a21\u578b\u7684\u9650\u5236\uff08\u6bd4\u5982\uff0c\u51cf\u5c0f\u6b63\u5219\u5316\u8d85\u53c2\u6570\uff09","title":"\u6b20\u62df\u5408\u8bad\u7ec3\u6570\u636e"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_22","text":"\u73b0\u5728\uff0c\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u5f88\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u77e5\u8bc6\u3002\u7136\u800c\uff0c\u5b66\u8fc7\u4e86\u8fd9\u4e48\u591a\u6982\u5ff5\uff0c\u4f60\u53ef\u80fd\u4f1a\u611f\u5230\u6709\u4e9b\u8ff7\u5931\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u9000\u56de\u53bb\uff0c\u56de\u987e\u4e00\u4e0b\u91cd\u8981\u7684\uff1a \u673a\u5668\u5b66\u4e60\u662f\u8ba9\u673a\u5668\u901a\u8fc7\u5b66\u4e60\u6570\u636e\u5bf9\u67d0\u4e9b\u4efb\u52a1\u505a\u5f97\u66f4\u597d\uff0c\u800c\u4e0d\u4f7f\u7528\u786e\u5b9a\u7684\u4ee3\u7801\u89c4\u5219\u3002 \u6709\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\uff1a\u76d1\u7763\u6216\u975e\u76d1\u7763\uff0c\u6279\u91cf\u6216\u5728\u7ebf\uff0c\u57fa\u4e8e\u5b9e\u4f8b\u6216\u57fa\u4e8e\u6a21\u578b\uff0c\u7b49\u7b49\u3002 \u5728\u673a\u5668\u5b66\u4e60\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u4ece\u8bad\u7ec3\u96c6\u4e2d\u6536\u96c6\u6570\u636e\uff0c\u7136\u540e\u5bf9\u5b66\u4e60\u7b97\u6cd5\u8fdb\u884c\u8bad\u7ec3\u3002\u5982\u679c\u7b97\u6cd5\u662f\u57fa\u4e8e\u6a21\u578b\u7684\uff0c\u5c31\u8c03\u8282\u4e00\u4e9b\u53c2\u6570\uff0c\u8ba9\u6a21\u578b\u62df\u5408\u5230\u8bad\u7ec3\u96c6\uff08\u5373\uff0c\u5bf9\u8bad\u7ec3\u96c6\u672c\u8eab\u4f5c\u51fa\u597d\u7684\u9884\u6d4b\uff09\uff0c\u7136\u540e\u5e0c\u671b\u5b83\u5bf9\u65b0\u6837\u672c\u4e5f\u80fd\u6709\u597d\u9884\u6d4b\u3002\u5982\u679c\u7b97\u6cd5\u662f\u57fa\u4e8e\u5b9e\u4f8b\u7684\uff0c\u5c31\u662f\u7528\u8bb0\u5fc6\u5b66\u4e60\u6837\u672c\uff0c\u7136\u540e\u7528\u76f8\u4f3c\u5ea6\u63a8\u5e7f\u5230\u65b0\u5b9e\u4f8b\u3002 \u5982\u679c\u8bad\u7ec3\u96c6\u592a\u5c0f\u3001\u6570\u636e\u6ca1\u6709\u4ee3\u8868\u6027\u3001\u542b\u6709\u566a\u58f0\u3001\u6216\u63ba\u6709\u4e0d\u76f8\u5173\u7684\u7279\u5f81\uff08\u5783\u573e\u8fdb\uff0c\u5783\u573e\u51fa\uff09\uff0c\u7cfb\u7edf\u7684\u6027\u80fd\u4e0d\u4f1a\u597d\u3002\u6700\u540e\uff0c\u6a21\u578b\u4e0d\u80fd\u592a\u7b80\u5355\uff08\u4f1a\u53d1\u751f\u6b20\u62df\u5408\uff09\u6216\u592a\u590d\u6742\uff08\u4f1a\u53d1\u751f\u8fc7\u62df\u5408\uff09\u3002 \u8fd8\u5dee\u6700\u540e\u4e00\u4e2a\u4e3b\u9898\u8981\u5b66\u4e60\uff1a\u8bad\u7ec3\u5b8c\u4e86\u4e00\u4e2a\u6a21\u578b\uff0c\u4f60\u4e0d\u53ea\u5e0c\u671b\u5c06\u5b83\u63a8\u5e7f\u5230\u65b0\u6837\u672c\u3002\u5982\u679c\u4f60\u60f3\u8bc4\u4f30\u5b83\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u4f5c\u51fa\u5fc5\u8981\u7684\u5fae\u8c03\u3002\u4e00\u8d77\u6765\u770b\u4e00\u770b\u3002","title":"\u56de\u987e"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_23","text":"\u8981\u77e5\u9053\u4e00\u4e2a\u6a21\u578b\u63a8\u5e7f\u5230\u65b0\u6837\u672c\u7684\u6548\u679c\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662f\u771f\u6b63\u7684\u8fdb\u884c\u8bd5\u9a8c\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u6a21\u578b\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\uff0c\u89c2\u5bdf\u5b83\u7684\u6027\u80fd\u3002\u8fd9\u4e48\u505a\u53ef\u4ee5\uff0c\u4f46\u662f\u5982\u679c\u6a21\u578b\u7684\u6027\u80fd\u5f88\u5dee\uff0c\u5c31\u4f1a\u5f15\u8d77\u7528\u6237\u62b1\u6028 \u2014\u2014 \u8fd9\u4e0d\u662f\u6700\u597d\u7684\u65b9\u6cd5\u3002 \u66f4\u597d\u7684\u9009\u9879\u662f\u5c06\u4f60\u7684\u6570\u636e\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff1a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u6b63\u5982\u5b83\u4eec\u7684\u540d\u5b57\uff0c\u7528\u8bad\u7ec3\u96c6\u8fdb\u884c\u8bad\u7ec3\uff0c\u7528\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6d4b\u8bd5\u3002\u5bf9\u65b0\u6837\u672c\u7684\u9519\u8bef\u7387\u79f0\u4f5c\u63a8\u5e7f\u9519\u8bef\uff08\u6216\u6837\u672c\u5916\u9519\u8bef\uff09\uff0c\u901a\u8fc7\u6a21\u578b\u5bf9\u6d4b\u8bd5\u96c6\u7684\u8bc4\u4f30\uff0c\u4f60\u53ef\u4ee5\u9884\u4f30\u8fd9\u4e2a\u9519\u8bef\u3002\u8fd9\u4e2a\u503c\u53ef\u4ee5\u544a\u8bc9\u4f60\uff0c\u4f60\u7684\u6a21\u578b\u5bf9\u65b0\u6837\u672c\u7684\u6027\u80fd\u3002 \u5982\u679c\u8bad\u7ec3\u9519\u8bef\u7387\u4f4e\uff08\u5373\uff0c\u4f60\u7684\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u9519\u8bef\u4e0d\u591a\uff09\uff0c\u4f46\u662f\u63a8\u5e7f\u9519\u8bef\u7387\u9ad8\uff0c\u610f\u5473\u7740\u6a21\u578b\u5bf9\u8bad\u7ec3\u6570\u636e\u8fc7\u62df\u5408\u3002 \u63d0\u793a\uff1a\u4e00\u822c\u4f7f\u7528 80% \u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u4fdd\u755920%\u7528\u4e8e\u6d4b\u8bd5\u3002 \u56e0\u6b64\uff0c\u8bc4\u4f30\u4e00\u4e2a\u6a21\u578b\u5f88\u7b80\u5355\uff1a\u53ea\u8981\u4f7f\u7528\u6d4b\u8bd5\u96c6\u3002\u73b0\u5728\u5047\u8bbe\u4f60\u5728\u4e24\u4e2a\u6a21\u578b\u4e4b\u95f4\u72b9\u8c6b\u4e0d\u51b3\uff08\u6bd4\u5982\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u548c\u4e00\u4e2a\u591a\u9879\u5f0f\u6a21\u578b\uff09\uff1a\u5982\u4f55\u505a\u51b3\u5b9a\u5462\uff1f\u4e00\u79cd\u65b9\u6cd5\u662f\u4e24\u4e2a\u90fd\u8bad\u7ec3\uff0c\uff0c\u7136\u540e\u6bd4\u8f83\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u6548\u679c\u3002 \u73b0\u5728\u5047\u8bbe\u7ebf\u6027\u6a21\u578b\u7684\u6548\u679c\u66f4\u597d\uff0c\u4f46\u662f\u4f60\u60f3\u505a\u4e00\u4e9b\u6b63\u5219\u5316\u4ee5\u907f\u514d\u8fc7\u62df\u5408\u3002\u95ee\u9898\u662f\uff1a\u5982\u4f55\u9009\u62e9\u6b63\u5219\u5316\u8d85\u53c2\u6570\u7684\u503c\uff1f\u4e00\u79cd\u9009\u9879\u662f\u7528 100 \u4e2a\u4e0d\u540c\u7684\u8d85\u53c2\u6570\u8bad\u7ec3100\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\u3002\u5047\u8bbe\u4f60\u53d1\u73b0\u6700\u4f73\u7684\u8d85\u53c2\u6570\u7684\u63a8\u5e7f\u9519\u8bef\u7387\u6700\u4f4e\uff0c\u6bd4\u5982\u53ea\u6709 5%\u3002\u7136\u540e\u5c31\u9009\u7528\u8fd9\u4e2a\u6a21\u578b\u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\uff0c\u4f46\u662f\u5b9e\u9645\u4e2d\u6027\u80fd\u4e0d\u4f73\uff0c\u8bef\u5dee\u7387\u8fbe\u5230\u4e86 15%\u3002\u53d1\u751f\u4e86\u4ec0\u4e48\u5462\uff1f \u7b54\u6848\u5728\u4e8e\uff0c\u4f60\u5728\u6d4b\u8bd5\u96c6\u4e0a\u591a\u6b21\u6d4b\u91cf\u4e86\u63a8\u5e7f\u8bef\u5dee\u7387\uff0c\u8c03\u6574\u4e86\u6a21\u578b\u548c\u8d85\u53c2\u6570\uff0c\u4ee5\u4f7f\u6a21\u578b\u6700\u9002\u5408\u8fd9\u4e2a\u96c6\u5408\u3002\u8fd9\u610f\u5473\u7740\u6a21\u578b\u5bf9\u65b0\u6570\u636e\u7684\u6027\u80fd\u4e0d\u4f1a\u9ad8\u3002 \u8fd9\u4e2a\u95ee\u9898\u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u518d\u4fdd\u7559\u4e00\u4e2a\u96c6\u5408\uff0c\u79f0\u4f5c\u9a8c\u8bc1\u96c6\u5408\u3002\u7528\u8bad\u7ec3\u96c6\u548c\u591a\u4e2a\u8d85\u53c2\u6570\u8bad\u7ec3\u591a\u4e2a\u6a21\u578b\uff0c\u9009\u62e9\u5728\u9a8c\u8bc1\u96c6\u4e0a\u6709\u6700\u4f73\u6027\u80fd\u7684\u6a21\u578b\u548c\u8d85\u53c2\u6570\u3002\u5f53\u4f60\u5bf9\u6a21\u578b\u6ee1\u610f\u65f6\uff0c\u7528\u6d4b\u8bd5\u96c6\u518d\u505a\u6700\u540e\u4e00\u6b21\u6d4b\u8bd5\uff0c\u4ee5\u5f97\u5230\u63a8\u5e7f\u8bef\u5dee\u7387\u7684\u9884\u4f30\u3002 \u4e3a\u4e86\u907f\u514d\u201c\u6d6a\u8d39\u201d\u8fc7\u591a\u8bad\u7ec3\u6570\u636e\u5728\u9a8c\u8bc1\u96c6\u4e0a\uff0c\u901a\u5e38\u7684\u529e\u6cd5\u662f\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\uff1a\u8bad\u7ec3\u96c6\u5206\u6210\u4e92\u8865\u7684\u5b50\u96c6\uff0c\u6bcf\u4e2a\u6a21\u578b\u7528\u4e0d\u540c\u7684\u5b50\u96c6\u8bad\u7ec3\uff0c\u518d\u7528\u5269\u4e0b\u7684\u5b50\u96c6\u9a8c\u8bc1\u3002\u4e00\u65e6\u786e\u5b9a\u6a21\u578b\u7c7b\u578b\u548c\u8d85\u53c2\u6570\uff0c\u6700\u7ec8\u7684\u6a21\u578b\u4f7f\u7528\u8fd9\u4e9b\u8d85\u53c2\u6570\u548c\u5168\u90e8\u7684\u8bad\u7ec3\u96c6\u8fdb\u884c\u8bad\u7ec3\uff0c\u7528\u6d4b\u8bd5\u96c6\u5f97\u5230\u63a8\u5e7f\u8bef\u5dee\u7387\u3002 \u6ca1\u6709\u514d\u8d39\u5348\u9910\u516c\u7406 \u6a21\u578b\u662f\u89c2\u5bdf\u7684\u7b80\u5316\u7248\u672c\u3002\u7b80\u5316\u610f\u5473\u7740\u820d\u5f03\u65e0\u6cd5\u8fdb\u884c\u63a8\u5e7f\u7684\u8868\u9762\u7ec6\u8282\u3002\u4f46\u662f\uff0c\u8981\u786e\u5b9a\u820d\u5f03\u4ec0\u4e48\u6570\u636e\u3001\u4fdd\u7559\u4ec0\u4e48\u6570\u636e\uff0c\u5fc5\u987b\u8981\u505a\u5047\u8bbe\u3002\u4f8b\u5982\uff0c\u7ebf\u6027\u6a21\u578b\u7684\u5047\u8bbe\u662f\u6570\u636e\u57fa\u672c\u4e0a\u662f\u7ebf\u6027\u7684\uff0c\u5b9e\u4f8b\u548c\u6a21\u578b\u76f4\u7ebf\u95f4\u7684\u8ddd\u79bb\u53ea\u662f\u566a\u97f3\uff0c\u53ef\u4ee5\u653e\u5fc3\u5ffd\u7565\u3002 \u5728\u4e00\u7bc7 1996 \u5e74\u7684 \u8457\u540d\u8bba\u6587 \u4e2d\uff0cDavid Wolpert \u8bc1\u660e\uff0c\u5982\u679c\u5b8c\u5168\u4e0d\u5bf9\u6570\u636e\u505a\u5047\u8bbe\uff0c\u5c31\u6ca1\u6709\u7406\u7531\u9009\u62e9\u4e00\u4e2a\u6a21\u578b\u800c\u4e0d\u9009\u53e6\u4e00\u4e2a\u3002\u8fd9\u79f0\u4f5c\u6ca1\u6709\u514d\u8d39\u5348\u9910\uff08NFL\uff09\u516c\u7406\u3002\u5bf9\u4e8e\u4e00\u4e9b\u6570\u636e\u96c6\uff0c\u6700\u4f73\u6a21\u578b\u662f\u7ebf\u6027\u6a21\u578b\uff0c\u800c\u5bf9\u5176\u5b83\u6570\u636e\u96c6\u662f\u795e\u7ecf\u7f51\u7edc\u3002\u6ca1\u6709\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u4fdd\u8bc1\u6548\u679c\u66f4\u597d\uff08\u5982\u8fd9\u4e2a\u516c\u7406\u7684\u540d\u5b57\u6240\u793a\uff09\u3002\u786e\u4fe1\u7684\u552f\u4e00\u65b9\u6cd5\u5c31\u662f\u6d4b\u8bd5\u6240\u6709\u7684\u6a21\u578b\u3002\u56e0\u4e3a\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u5b9e\u9645\u4e2d\u5c31\u5fc5\u987b\u8981\u505a\u4e00\u4e9b\u5bf9\u6570\u636e\u5408\u7406\u7684\u5047\u8bbe\uff0c\u53ea\u8bc4\u4f30\u51e0\u4e2a\u5408\u7406\u7684\u6a21\u578b\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u7b80\u5355\u4efb\u52a1\uff0c\u4f60\u53ef\u80fd\u662f\u7528\u4e0d\u540c\u7a0b\u5ea6\u7684\u6b63\u5219\u5316\u8bc4\u4f30\u7ebf\u6027\u6a21\u578b\uff0c\u5bf9\u4e8e\u590d\u6742\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u8981\u8bc4\u4f30\u51e0\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u3002","title":"\u6d4b\u8bd5\u548c\u786e\u8ba4"},{"location":"1.%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%A7%88/#_24","text":"\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u4e00\u4e9b\u673a\u5668\u5b66\u4e60\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u6982\u5ff5\u3002\u4e0b\u4e00\u7ae0\uff0c\u6211\u4eec\u4f1a\u66f4\u52a0\u6df1\u5165\uff0c\u5e76\u5199\u4e00\u4e9b\u4ee3\u7801\u3002\u5f00\u59cb\u4e0b\u7ae0\u4e4b\u524d\uff0c\u786e\u4fdd\u4f60\u80fd\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898\uff1a \u5982\u4f55\u5b9a\u4e49\u673a\u5668\u5b66\u4e60\uff1f \u673a\u5668\u5b66\u4e60\u53ef\u4ee5\u89e3\u51b3\u7684\u56db\u7c7b\u95ee\u9898\uff1f \u4ec0\u4e48\u662f\u5e26\u6807\u7b7e\u7684\u8bad\u7ec3\u96c6\uff1f \u6700\u5e38\u89c1\u7684\u4e24\u4e2a\u76d1\u7763\u4efb\u52a1\u662f\u4ec0\u4e48\uff1f \u6307\u51fa\u56db\u4e2a\u5e38\u89c1\u7684\u975e\u76d1\u7763\u4efb\u52a1\uff1f \u8981\u8ba9\u4e00\u4e2a\u673a\u5668\u4eba\u80fd\u5728\u5404\u79cd\u672a\u77e5\u5730\u5f62\u884c\u8d70\uff0c\u4f60\u4f1a\u91c7\u7528\u4ec0\u4e48\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff1f \u8981\u5bf9\u4f60\u7684\u987e\u5ba2\u8fdb\u884c\u5206\u7ec4\uff0c\u4f60\u4f1a\u91c7\u7528\u54ea\u7c7b\u7b97\u6cd5\uff1f \u5783\u573e\u90ae\u4ef6\u68c0\u6d4b\u662f\u76d1\u7763\u5b66\u4e60\u95ee\u9898\uff0c\u8fd8\u662f\u975e\u76d1\u7763\u5b66\u4e60\u95ee\u9898\uff1f \u4ec0\u4e48\u662f\u5728\u7ebf\u5b66\u4e60\u7cfb\u7edf\uff1f \u4ec0\u4e48\u662f\u6838\u5916\u5b66\u4e60\uff1f \u4ec0\u4e48\u5b66\u4e60\u7b97\u6cd5\u662f\u7528\u76f8\u4f3c\u5ea6\u505a\u9884\u6d4b\uff1f \u6a21\u578b\u53c2\u6570\u548c\u5b66\u4e60\u7b97\u6cd5\u7684\u8d85\u53c2\u6570\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f \u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\u7684\u7b97\u6cd5\u641c\u5bfb\u7684\u662f\u4ec0\u4e48\uff1f\u6700\u6210\u529f\u7684\u7b56\u7565\u662f\u4ec0\u4e48\uff1f\u57fa\u4e8e\u6a21\u578b\u5b66\u4e60\u5982\u4f55\u505a\u9884\u6d4b\uff1f \u673a\u5668\u5b66\u4e60\u7684\u56db\u4e2a\u4e3b\u8981\u6311\u6218\u662f\u4ec0\u4e48\uff1f \u5982\u679c\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u597d\uff0c\u4f46\u63a8\u5e7f\u5230\u65b0\u5b9e\u4f8b\u8868\u73b0\u5dee\uff0c\u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u7ed9\u51fa\u4e09\u4e2a\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u4ec0\u4e48\u662f\u6d4b\u8bd5\u96c6\uff0c\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5b83\uff1f \u9a8c\u8bc1\u96c6\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f \u5982\u679c\u7528\u6d4b\u8bd5\u96c6\u8c03\u8282\u8d85\u53c2\u6570\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f \u4ec0\u4e48\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u4e3a\u4ec0\u4e48\u5b83\u6bd4\u9a8c\u8bc1\u96c6\u597d\uff1f \u7ec3\u4e60\u7b54\u6848\u89c1\u9644\u5f55 A\u3002","title":"\u7ec3\u4e60"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/","text":"\u5341\u3001\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4ecb\u7ecd \u9e1f\u7c7b\u542f\u53d1\u6211\u4eec\u98de\u7fd4\uff0c\u725b\u84a1\u690d\u7269\u542f\u53d1\u4e86\u5c3c\u9f99\u7ef3\uff0c\u5927\u81ea\u7136\u4e5f\u6fc0\u53d1\u4e86\u8bb8\u591a\u5176\u4ed6\u53d1\u660e\u3002\u4ece\u903b\u8f91\u4e0a\u770b\uff0c\u5927\u8111\u662f\u5982\u4f55\u6784\u5efa\u667a\u80fd\u673a\u5668\u7684\u7075\u611f\u3002\u8fd9\u662f\u542f\u53d1\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff08ANN\uff09\u7684\u5173\u952e\u601d\u60f3\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u98de\u673a\u53d7\u5230\u9e1f\u7c7b\u7684\u542f\u53d1\uff0c\u4f46\u5b83\u4eec\u4e0d\u5fc5\u62cd\u52a8\u7fc5\u8180\u3002\u540c\u6837\u7684\uff0cANN \u9010\u6e10\u53d8\u5f97\u4e0e\u4ed6\u4eec\u7684\u751f\u7269\u8868\u5144\u5f1f\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u4e00\u4e9b\u7814\u7a76\u8005\u751a\u81f3\u4e89\u8fa9\u8bf4\uff0c\u6211\u4eec\u5e94\u8be5\u5b8c\u5168\u653e\u5f03\u751f\u7269\u7c7b\u6bd4\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u8bf4\u201c\u5355\u4f4d\u201d\u800c\u4e0d\u662f\u201c\u795e\u7ecf\u5143\u201d\uff09\uff0c\u4ee5\u514d\u6211\u4eec\u628a\u6211\u4eec\u7684\u521b\u9020\u529b\u9650\u5236\u5728\u751f\u7269\u5b66\u7684\u7cfb\u7edf\u4e0a\u3002 \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u662f\u6df1\u5ea6\u5b66\u4e60\u7684\u6838\u5fc3\u3002\u5b83\u4eec\u5177\u6709\u901a\u7528\u6027\u3001\u5f3a\u5927\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u4f7f\u5f97\u5b83\u4eec\u80fd\u591f\u5f88\u597d\u5730\u89e3\u51b3\u5927\u578b\u548c\u9ad8\u5ea6\u590d\u6742\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u4f8b\u5982\u5206\u7c7b\u6570\u5341\u4ebf\u56fe\u50cf\uff08\u4f8b\u5982\uff0c\u8c37\u6b4c\u56fe\u50cf\uff09\uff0c\u5f3a\u5927\u7684\u8bed\u97f3\u8bc6\u522b\u670d\u52a1\uff08\u4f8b\u5982\uff0c\u82f9\u679c\u7684 Siri\uff09\uff0c\u901a\u8fc7\u6bcf\u5929\u8ffd\u8e2a\u6570\u767e\u4e07\u7684\u7528\u6237\u7684\u884c\u4e3a\u63a8\u8350\u6700\u597d\u7684\u89c6\u9891\uff08\u6bd4\u5982 YouTube\uff09\uff0c\u6216\u8005\u901a\u8fc7\u5728\u6e38\u620f\u4e2d\u51fb\u8d25\u4e16\u754c\u51a0\u519b\uff0c\u901a\u8fc7\u5b66\u4e60\u6570\u767e\u4e07\u7684\u6e38\u620f\uff0c\u7136\u540e\u4e0e\u81ea\u5df1\u5bf9\u6297\uff08DeepMind \u7684 AlgFaGo\uff09\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff0c\u4ece\u5feb\u901f\u6e38\u89c8\u7684\u7b2c\u4e00\u4e2aANN\u67b6\u6784\u5f00\u59cb\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u63d0\u51fa\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\uff0c\u5e76\u57fa\u4e8eTensorFlow\u5b9e\u73b0MNIST\u6570\u5b57\u5206\u7c7b\u95ee\u9898\uff08\u5728\u7b2c3\u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002 \u4ece\u751f\u7269\u5230\u4eba\u5de5\u795e\u7ecf\u5143 \u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u5df2\u7ecf\u5b58\u5728\u4e86\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\uff1a\u5b83\u4eec\u6700\u521d\u662f\u7531\u795e\u7ecf\u751f\u7406\u5b66\u5bb6 Warren McCulloch \u548c\u6570\u5b66\u5bb6 Walter Pitts \u5728 1943 \u63d0\u51fa\u3002McCulloch \u548c Pitts \u5728\u5176\u91cc\u7a0b\u7891\u5f0f\u7684\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u201c\u795e\u7ecf\u6d3b\u52a8\u5185\u5728\u7684\u903b\u8f91\u6f14\u7b97\u201d\uff0c\u63d0\u51fa\u4e86\u4e00\u4e2a\u7b80\u5316\u7684\u8ba1\u7b97\u6a21\u578b\uff0c\u5373\u751f\u7269\u795e\u7ecf\u5143\u5982\u4f55\u5728\u52a8\u7269\u5927\u8111\u4e2d\u534f\u540c\u5de5\u4f5c\uff0c\u7528\u903b\u8f91\u8fdb\u884c\u590d\u6742\u7684\u8ba1\u7b97\u3002\u8fd9\u662f\u7b2c\u4e00\u4e2a\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0c\u8bb8\u591a\u5176\u4ed6\u7684\u795e\u7ecf\u5143\u7ed3\u6784\u5df2\u7ecf\u88ab\u53d1\u660e\uff0c \u76f4\u5230 20 \u4e16\u7eaa 60 \u5e74\u4ee3\uff0c\u5b89\u7eb3\u65af\u7684\u65e9\u671f\u6210\u529f\u624d\u4f7f\u4eba\u4eec\u666e\u904d\u76f8\u4fe1\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u4e0e\u771f\u6b63\u7684\u667a\u80fd\u673a\u5668\u5bf9\u8bdd\u3002\u5f53\u663e\u7136\u7684\u8fd9\u4e2a\u627f\u8bfa\u5c06\u4e0d\u4f1a\u88ab\u5151\u73b0\uff08\u81f3\u5c11\u76f8\u5f53\u957f\u4e00\u6bb5\u65f6\u95f4\uff09\u65f6\uff0c\u8d44\u91d1\u98de\u5411\u522b\u5904\uff0cANN \u8fdb\u5165\u4e86\u4e00\u4e2a\u6f2b\u957f\u7684\u9ed1\u6697\u65f6\u4ee3\u300220 \u4e16\u7eaa 80 \u5e74\u4ee3\u521d\uff0c\u968f\u7740\u65b0\u7684\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u7684\u53d1\u660e\u548c\u66f4\u597d\u7684\u8bad\u7ec3\u6280\u672f\u7684\u53d1\u5c55\uff0c\u4eba\u4eec\u5bf9\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u5174\u8da3\u4e5f\u5728\u91cd\u65b0\u71c3\u8d77\u3002\u4f46\u5230\u4e86 20 \u4e16\u7eaa 90 \u5e74\u4ee3\uff0c\u5f3a\u5927\u7684\u53ef\u66ff\u4ee3\u673a\u5668\u5b66\u4e60\u6280\u672f\u7684\uff0c\u5982\u652f\u6301\u5411\u91cf\u673a\uff08\u89c1\u7b2c5\u7ae0\uff09\u53d7\u5230\u5927\u591a\u6570\u7814\u7a76\u8005\u7684\u9752\u7750\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f3c\u4e4e\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u7ed3\u679c\u548c\u66f4\u5f3a\u7684\u7406\u8bba\u57fa\u7840\u3002\u6700\u540e\uff0c\u6211\u4eec\u73b0\u5728\u76ee\u7779\u4e86\u53e6\u4e00\u80a1\u5bf9 ANN \u611f\u5174\u8da3\u7684\u6d6a\u6f6e\u3002\u8fd9\u6ce2\u4f1a\u50cf\u4ee5\u524d\u4e00\u6837\u6d88\u5931\u5417\uff1f\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u7406\u7531\u76f8\u4fe1\uff0c\u8fd9\u4e00\u70b9\u662f\u4e0d\u540c\u7684\uff0c\u5c06\u4f1a\u5bf9\u6211\u4eec\u7684\u751f\u6d3b\u4ea7\u751f\u66f4\u6df1\u8fdc\u7684\u5f71\u54cd\uff1a \u73b0\u5728\u6709\u5927\u91cf\u7684\u6570\u636e\u53ef\u7528\u4e8e\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\uff0cANN \u5728\u8bb8\u591a\u975e\u5e38\u590d\u6742\u7684\u95ee\u9898\u4e0a\u7ecf\u5e38\u4f18\u4e8e\u5176\u4ed6 ML \u6280\u672f\u3002 \u81ea\u4ece 90 \u5e74\u4ee3\u4ee5\u6765\uff0c\u8ba1\u7b97\u80fd\u529b\u7684\u5de8\u5927\u589e\u957f\u4f7f\u5f97\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u8bad\u7ec3\u5927\u578b\u795e\u7ecf\u7f51\u7edc\u6210\u4e3a\u53ef\u80fd\u3002\u8fd9\u90e8\u5206\u662f\u7531\u4e8e\u7a46\u5c14\u5b9a\u5f8b\uff0c\u4f46\u4e5f\u5f97\u76ca\u4e8e\u6e38\u620f\u4ea7\u4e1a\uff0c\u5b83\u5df2\u7ecf\u4ea7\u751f\u4e86\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u5f3a\u5927\u7684 GPU \u663e\u5361\u3002 \u6539\u8fdb\u4e86\u8bad\u7ec3\u7b97\u6cd5\u3002\u516c\u5e73\u5730\u8bf4\uff0c\u5b83\u4eec\u4e0e\u4e0a\u4e16\u7eaa 90 \u5e74\u4ee3\u4f7f\u7528\u7684\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u8fd9\u4e9b\u76f8\u5bf9\u8f83\u5c0f\u7684\u8c03\u6574\u4ea7\u751f\u4e86\u5de8\u5927\u7684\u6b63\u9762\u5f71\u54cd\u3002 \u5728\u5b9e\u8df5\u4e2d\uff0c\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e9b\u7406\u8bba\u5c40\u9650\u6027\u662f\u826f\u6027\u7684\u3002\u4f8b\u5982\uff0c\u8bb8\u591a\u4eba\u8ba4\u4e3a\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u7b97\u6cd5\u662f\u6ce8\u5b9a\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f88\u53ef\u80fd\u9677\u5165\u5c40\u90e8\u6700\u4f18\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u5728\u5b9e\u8df5\u4e2d\u662f\u76f8\u5f53\u7f55\u89c1\u7684\uff08\u6216\u8005\u5982\u679c\u5b83\u53d1\u751f\uff0c\u5b83\u4eec\u4e5f\u901a\u5e38\u76f8\u5f53\u63a5\u8fd1\u5168\u5c40\u6700\u4f18\uff09\u3002 ANN \u4f3c\u4e4e\u5df2\u7ecf\u8fdb\u5165\u4e86\u8d44\u91d1\u548c\u8fdb\u6b65\u7684\u826f\u6027\u5faa\u73af\u3002\u57fa\u4e8e ANN \u7684\u60ca\u4eba\u4ea7\u54c1\u5b9a\u671f\u6210\u4e3a\u5934\u6761\u65b0\u95fb\uff0c\u5438\u5f15\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\u548c\u8d44\u91d1\uff0c\u5bfc\u81f4\u8d8a\u6765\u8d8a\u591a\u7684\u8fdb\u6b65\uff0c\u751a\u81f3\u66f4\u60ca\u4eba\u7684\u4ea7\u54c1\u3002 \u751f\u7269\u795e\u7ecf\u5143 \u5728\u6211\u4eec\u8ba8\u8bba\u4eba\u5de5\u795e\u7ecf\u5143\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5feb\u901f\u770b\u4e00\u4e2a\u751f\u7269\u795e\u7ecf\u5143\uff08\u5982\u56fe 10-1 \u6240\u793a\uff09\u3002\u5b83\u662f\u4e00\u79cd\u5f02\u5e38\u7ec6\u80de\uff0c\u4e3b\u8981\u89c1\u4e8e\u52a8\u7269\u5927\u8111\u76ae\u5c42\uff08\u4f8b\u5982\uff0c\u4f60\u7684\u5927\u8111\uff09\uff0c\u7531\u5305\u542b\u7ec6\u80de\u6838\u548c\u5927\u591a\u6570\u7ec6\u80de\u590d\u6742\u6210\u5206\u7684\u7ec6\u80de\u4f53\u7ec4\u6210\uff0c\u8bb8\u591a\u5206\u652f\u6269\u5c55\u79f0\u4e3a\u6811\u7a81\uff0c\u52a0\u4e0a\u4e00\u4e2a\u975e\u5e38\u957f\u7684\u5ef6\u4f38\u79f0\u4e3a\u8f74\u7a81\u3002\u8f74\u7a81\u7684\u957f\u5ea6\u53ef\u80fd\u6bd4\u7ec6\u80de\u4f53\u957f\u51e0\u500d\uff0c\u6216\u957f\u8fbe\u51e0\u4e07\u500d\u3002\u5728\u5b83\u7684\u672b\u7aef\u9644\u8fd1\uff0c\u8f74\u7a81\u5206\u88c2\u6210\u8bb8\u591a\u79f0\u4e3a telodendria \u7684\u5206\u652f\uff0c\u5728\u8fd9\u4e9b\u5206\u652f\u7684\u9876\u7aef\u662f\u5fae\u5c0f\u7684\u7ed3\u6784\uff0c\u79f0\u4e3a\u7a81\u89e6\u672b\u7aef\uff08\u6216\u7b80\u5355\u7684\u7a81\u89e6\uff09\uff0c\u5b83\u4eec\u8fde\u63a5\u5230\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u6811\u7a81\uff08\u6216\u76f4\u63a5\u5230\u7ec6\u80de\u4f53\uff09\u3002\u751f\u7269\u795e\u7ecf\u5143\u63a5\u6536\u77ed\u7684\u7535\u8109\u51b2\uff0c\u79f0\u4e3a\u6765\u81ea\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u4fe1\u53f7\uff0c\u901a\u8fc7\u8fd9\u4e9b\u7a81\u89e6\u3002\u5f53\u795e\u7ecf\u5143\u5728\u51e0\u6beb\u79d2\u5185\u63a5\u6536\u5230\u6765\u81ea\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u8db3\u591f\u6570\u91cf\u7684\u4fe1\u53f7\u65f6\uff0c\u5b83\u5c31\u53d1\u5c04\u51fa\u81ea\u5df1\u7684\u4fe1\u53f7\u3002 \u56e0\u6b64\uff0c\u4e2a\u4f53\u7684\u751f\u7269\u795e\u7ecf\u5143\u4f3c\u4e4e\u4ee5\u4e00\u79cd\u76f8\u5f53\u7b80\u5355\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u4f46\u662f\u5b83\u4eec\u7ec4\u7ec7\u5728\u4e00\u4e2a\u5de8\u5927\u7684\u6570\u5341\u4ebf\u795e\u7ecf\u5143\u7684\u7f51\u7edc\u4e2d\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u901a\u5e38\u8fde\u63a5\u5230\u6570\u5343\u4e2a\u5176\u4ed6\u795e\u7ecf\u5143\u3002\u9ad8\u5ea6\u590d\u6742\u7684\u8ba1\u7b97\u53ef\u4ee5\u7531\u76f8\u5f53\u7b80\u5355\u7684\u795e\u7ecf\u5143\u7684\u5de8\u5927\u7f51\u7edc\u6765\u5b8c\u6210\uff0c\u5c31\u50cf\u4e00\u4e2a\u590d\u6742\u7684\u8681\u7a74\u53ef\u4ee5\u7531\u6bcf\u4e2a\u8682\u8681\u7684\u52aa\u529b\u6784\u9020\u51fa\u6765\u3002\u751f\u7269\u795e\u7ecf\u7f51\u7edc\uff08BNN\uff09\u7684\u4f53\u7cfb\u7ed3\u6784\u4ecd\u7136\u662f\u4e3b\u52a8\u7814\u7a76\u7684\u4e3b\u9898\uff0c\u4f46\u662f\u5927\u8111\u7684\u67d0\u4e9b\u90e8\u5206\u5df2\u7ecf\u88ab\u6620\u5c04\uff0c\u5e76\u4e14\u4f3c\u4e4e\u795e\u7ecf\u5143\u7ecf\u5e38\u7ec4\u7ec7\u5728\u8fde\u7eed\u7684\u5c42\u4e2d\uff0c\u5982\u56fe 10-2 \u6240\u793a\u3002 \u795e\u7ecf\u5143\u7684\u903b\u8f91\u8ba1\u7b97 Warren McCulloch \u548c Pitts \u63d0\u51fa\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u751f\u7269\u795e\u7ecf\u5143\u6a21\u578b\uff0c\u8fd9\u540e\u6765\u4f5c\u4e3a\u4e00\u4e2a\u4eba\u5de5\u795e\u7ecf\u5143\u6210\u4e3a\u4f17\u6240\u5468\u77e5\uff1a\u5b83\u6709\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u4e8c\u8fdb\u5236\uff08ON/OFF\uff09\u8f93\u5165\u548c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u8f93\u51fa\u3002\u5f53\u8d85\u8fc7\u4e00\u5b9a\u6570\u91cf\u7684\u8f93\u5165\u662f\u6fc0\u6d3b\u65f6\uff0c\u4eba\u5de5\u795e\u7ecf\u5143\u4f1a\u6fc0\u6d3b\u5176\u8f93\u51fa\u3002McCulloch \u548c Pitts \u8868\u660e\uff0c\u5373\u4f7f\u7528\u8fd9\u6837\u4e00\u4e2a\u7b80\u5316\u7684\u6a21\u578b\uff0c\u4e5f\u6709\u53ef\u80fd\u5efa\u7acb\u4e00\u4e2a\u4eba\u5de5\u795e\u7ecf\u5143\u7f51\u7edc\u6765\u8ba1\u7b97\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u903b\u8f91\u547d\u9898\u3002\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u6784\u5efa\u4e00\u4e9b\u6267\u884c\u5404\u79cd\u903b\u8f91\u8ba1\u7b97\u7684 ANN\uff08\u89c1\u56fe 10-3\uff09\uff0c\u5047\u8bbe\u5f53\u81f3\u5c11\u4e24\u4e2a\u8f93\u5165\u662f\u6fc0\u6d3b\u7684\u65f6\u5019\u795e\u7ecf\u5143\u88ab\u6fc0\u6d3b\u3002 \u5de6\u8fb9\u7684\u7b2c\u4e00\u4e2a\u7f51\u7edc\u4ec5\u4ec5\u662f\u786e\u8ba4\u51fd\u6570\uff1a\u5982\u679c\u795e\u7ecf\u5143 A \u88ab\u6fc0\u6d3b\uff0c\u90a3\u4e48\u795e\u7ecf\u5143 C \u4e5f\u88ab\u6fc0\u6d3b\uff08\u56e0\u4e3a\u5b83\u63a5\u6536\u6765\u81ea\u795e\u7ecf\u5143 A \u7684\u4e24\u4e2a\u8f93\u5165\u4fe1\u53f7\uff09\uff0c\u4f46\u662f\u5982\u679c\u795e\u7ecf\u5143 A \u5173\u95ed\uff0c\u90a3\u4e48\u795e\u7ecf\u5143 C \u4e5f\u5173\u95ed\u3002 \u7b2c\u4e8c\u7f51\u7edc\u6267\u884c\u903b\u8f91 AND\uff1a\u795e\u7ecf\u5143 C \u53ea\u6709\u5728\u6fc0\u6d3b\u795e\u7ecf\u5143 A \u548c B\uff08\u5355\u4e2a\u8f93\u5165\u4fe1\u53f7\u4e0d\u8db3\u4ee5\u6fc0\u6d3b\u795e\u7ecf\u5143 C\uff09\u65f6\u624d\u88ab\u6fc0\u6d3b\u3002 \u7b2c\u4e09\u7f51\u7edc\u6267\u884c\u903b\u8f91 OR\uff1a\u5982\u679c\u795e\u7ecf\u5143 A \u6216\u795e\u7ecf\u5143 B \u88ab\u6fc0\u6d3b\uff08\u6216\u4e24\u8005\uff09\uff0c\u795e\u7ecf\u5143 C \u88ab\u6fc0\u6d3b\u3002 \u6700\u540e\uff0c\u5982\u679c\u6211\u4eec\u5047\u8bbe\u8f93\u5165\u8fde\u63a5\u53ef\u4ee5\u6291\u5236\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\uff08\u751f\u7269\u795e\u7ecf\u5143\u662f\u8fd9\u6837\u7684\u60c5\u51b5\uff09\uff0c\u90a3\u4e48\u7b2c\u56db\u4e2a\u7f51\u7edc\u8ba1\u7b97\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u903b\u8f91\u547d\u9898\uff1a\u5982\u679c\u795e\u7ecf\u5143 B \u5173\u95ed\uff0c\u53ea\u6709\u5f53\u795e\u7ecf\u5143A\u662f\u6fc0\u6d3b\u7684\uff0c\u795e\u7ecf\u5143 C \u624d\u88ab\u6fc0\u6d3b\u3002\u5982\u679c\u795e\u7ecf\u5143 A \u59cb\u7ec8\u662f\u6fc0\u6d3b\u7684\uff0c\u90a3\u4e48\u4f60\u5f97\u5230\u4e00\u4e2a\u903b\u8f91 NOT\uff1a\u795e\u7ecf\u5143 C \u5728\u795e\u7ecf\u5143 B \u5173\u95ed\u65f6\u662f\u6fc0\u6d3b\u7684\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002 \u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u8c61\u5982\u4f55\u5c06\u8fd9\u4e9b\u7f51\u7edc\u7ec4\u5408\u8d77\u6765\u8ba1\u7b97\u590d\u6742\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\uff08\u53c2\u89c1\u672c\u7ae0\u672b\u5c3e\u7684\u7ec3\u4e60\uff09\u3002 \u611f\u77e5\u5668 \u611f\u77e5\u5668\u662f\u6700\u7b80\u5355\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u4e4b\u4e00\uff0c\u7531 Frank Rosenblatt \u53d1\u660e\u4e8e 1957\u3002\u5b83\u662f\u57fa\u4e8e\u4e00\u79cd\u7a0d\u5fae\u4e0d\u540c\u7684\u4eba\u5de5\u795e\u7ecf\u5143\uff08\u89c1\u56fe 10-4\uff09\uff0c\u79f0\u4e3a\u7ebf\u6027\u9608\u503c\u5355\u5143\uff08LTU\uff09\uff1a\u8f93\u5165\u548c\u8f93\u51fa\u73b0\u5728\u662f\u6570\u5b57\uff08\u800c\u4e0d\u662f\u4e8c\u8fdb\u5236\u5f00/\u5173\u503c\uff09\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8f93\u5165\u8fde\u63a5\u90fd\u4e0e\u6743\u91cd\u76f8\u8fde\u3002LTU\u8ba1\u7b97\u5176\u8f93\u5165\u7684\u52a0\u6743\u548c\uff08 z = W1\u00d71 + W2\u00d72 + ... + + WN\u00d7n = Wt\u00b7x \uff09\uff0c\u7136\u540e\u5c06\u9636\u8dc3\u51fd\u6570\u5e94\u7528\u4e8e\u8be5\u548c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\uff1a HW(x) = STEP(Z) = STEP(W^T\u00b7x) \u3002 \u6700\u5e38\u89c1\u7684\u5728\u611f\u77e5\u5668\u4e2d\u4f7f\u7528\u7684\u9636\u8dc3\u51fd\u6570\u662f Heaviside \u9636\u8dc3\u51fd\u6570\uff08\u89c1\u65b9\u7a0b 10-1\uff09\u3002\u6709\u65f6\u4f7f\u7528\u7b26\u53f7\u51fd\u6570\u4ee3\u66ff\u3002 \u5355\u4e00\u7684 LTU \u53ef\u88ab\u7528\u4f5c\u7b80\u5355\u7ebf\u6027\u4e8c\u5143\u5206\u7c7b\u3002\u5b83\u8ba1\u7b97\u8f93\u5165\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u5982\u679c\u7ed3\u679c\u8d85\u8fc7\u9608\u503c\uff0c\u5b83\u8f93\u51fa\u6b63\u7c7b\u6216\u8005\u8f93\u51fa\u8d1f\u7c7b\uff08\u5c31\u50cf\u4e00\u4e2a\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u6216\u7ebf\u6027 SVM\uff09\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5355\u4e00\u7684 LTU \u57fa\u4e8e\u82b1\u74e3\u957f\u5ea6\u548c\u5bbd\u5ea6\u53bb\u5206\u7c7b\u9e22\u5c3e\u82b1\uff08\u4e5f\u53ef\u6dfb\u52a0\u989d\u5916\u7684\u504f\u7f6e\u7279\u5f81 x0=1 \uff0c\u5c31\u50cf\u6211\u4eec\u5728\u524d\u4e00\u7ae0\u6240\u505a\u7684\uff09\u3002\u8bad\u7ec3\u4e00\u4e2a LTU \u610f\u5473\u7740\u53bb\u5bfb\u627e\u5408\u9002\u7684 W0 \u548c W1 \u503c\uff0c\uff08\u8bad\u7ec3\u7b97\u6cd5\u7a0d\u540e\u63d0\u5230\uff09\u3002 \u611f\u77e5\u5668\u7b80\u5355\u5730\u7531\u4e00\u5c42 LTU \u7ec4\u6210\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u8fde\u63a5\u5230\u6240\u6709\u8f93\u5165\u3002\u8fd9\u4e9b\u8fde\u63a5\u901a\u5e38\u7528\u7279\u6b8a\u7684\u88ab\u79f0\u4e3a\u8f93\u5165\u795e\u7ecf\u5143\u7684\u4f20\u9012\u795e\u7ecf\u5143\u6765\u8868\u793a\uff1a\u5b83\u4eec\u53ea\u8f93\u51fa\u5b83\u4eec\u6240\u8f93\u5165\u7684\u4efb\u4f55\u8f93\u5165\u3002\u6b64\u5916\uff0c\u901a\u5e38\u6dfb\u52a0\u989d\u5916\u504f\u7f6e\u7279\u5f81\uff08 X0=1 \uff09\u3002\u8fd9\u79cd\u504f\u7f6e\u7279\u6027\u901a\u5e38\u7528\u4e00\u79cd\u79f0\u4e3a\u504f\u7f6e\u795e\u7ecf\u5143\u7684\u7279\u6b8a\u7c7b\u578b\u7684\u795e\u7ecf\u5143\u6765\u8868\u793a\uff0c\u5b83\u603b\u662f\u8f93\u51fa 1\u3002 \u56fe 10-5 \u8868\u793a\u5177\u6709\u4e24\u4e2a\u8f93\u5165\u548c\u4e09\u4e2a\u8f93\u51fa\u7684\u611f\u77e5\u5668\u3002\u8be5\u611f\u77e5\u5668\u53ef\u4ee5\u5c06\u5b9e\u4f8b\u540c\u65f6\u5206\u7c7b\u4e3a\u4e09\u4e2a\u4e0d\u540c\u7684\u4e8c\u8fdb\u5236\u7c7b\uff0c\u8fd9\u4f7f\u5f97\u5b83\u662f\u4e00\u4e2a\u591a\u8f93\u51fa\u5206\u7c7b\u5668\u3002 \u90a3\u4e48\u611f\u77e5\u5668\u662f\u5982\u4f55\u8bad\u7ec3\u7684\u5462\uff1fFrank Rosenblatt \u63d0\u51fa\u7684\u611f\u77e5\u5668\u8bad\u7ec3\u7b97\u6cd5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d7\u5230 Hebb \u89c4\u5219\u7684\u542f\u53d1\u3002\u5728 1949 \u51fa\u7248\u7684\u300a\u884c\u4e3a\u7ec4\u7ec7\u300b\u4e00\u4e66\u4e2d\uff0cDonald Hebb \u63d0\u51fa\uff0c\u5f53\u4e00\u4e2a\u751f\u7269\u795e\u7ecf\u5143\u7ecf\u5e38\u89e6\u53d1\u53e6\u4e00\u4e2a\u795e\u7ecf\u5143\u65f6\uff0c\u8fd9\u4e24\u4e2a\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u8054\u7cfb\u5c31\u4f1a\u53d8\u5f97\u66f4\u5f3a\u3002\u8fd9\u4e2a\u60f3\u6cd5\u540e\u6765\u88ab Siegrid L\u00f6wel \u603b\u7ed3\u4e3a\u4e00\u4e2a\u5438\u5f15\u4eba\u7684\u77ed\u8bed\uff1a\u201c\u4e00\u8d77\u71c3\u70e7\u7684\u7ec6\u80de\uff0c\u6c47\u5408\u5728\u4e00\u8d77\u3002\u201d\u8fd9\u4e2a\u89c4\u5219\u540e\u6765\u88ab\u79f0\u4e3a Hebb \u89c4\u5219\uff08\u6216 HebBIN \u5b66\u4e60\uff09\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e24\u4e2a\u795e\u7ecf\u5143\u5177\u6709\u76f8\u540c\u7684\u8f93\u51fa\u65f6\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u6743\u91cd\u5c31\u4f1a\u589e\u52a0\u3002\u4f7f\u7528\u8fd9\u4e2a\u89c4\u5219\u7684\u53d8\u4f53\u6765\u8bad\u7ec3\u611f\u77e5\u5668\uff0c\u8be5\u89c4\u5219\u8003\u8651\u4e86\u7f51\u7edc\u6240\u72af\u7684\u9519\u8bef\uff1b\u5b83\u4e0d\u52a0\u5f3a\u5bfc\u81f4\u9519\u8bef\u8f93\u51fa\u7684\u8fde\u63a5\u3002\u66f4\u5177\u4f53\u5730\uff0c\u611f\u77e5\u5668\u4e00\u6b21\u88ab\u9988\u9001\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u5b9e\u4f8b\uff0c\u5b83\u8fdb\u884c\u9884\u6d4b\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4ea7\u751f\u9519\u8bef\u9884\u6d4b\u7684\u8f93\u51fa\u795e\u7ecf\u5143\uff0c\u5b83\u52a0\u5f3a\u4e86\u8f93\u5165\u7684\u8fde\u63a5\u6743\u91cd\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u6b63\u786e\u7684\u9884\u6d4b\u3002\u8be5\u89c4\u5219\u5728\u516c\u5f0f 10-2 \u4e2d\u793a\u51fa\u3002 \u5176\u4e2d Wi,j \u662f\u7b2c i \u8f93\u5165\u795e\u7ecf\u5143\u4e0e\u7b2c J \u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u8fde\u63a5\u6743\u91cd\u3002 xi \u662f\u5f53\u524d\u8bad\u7ec3\u5b9e\u4f8b\u4e0e\u8f93\u5165\u503c\u3002 Y \u5e3d\u662f\u5f53\u524d\u8bad\u7ec3\u5b9e\u4f8b\u7684\u7b2c J \u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002 Yj \u662f\u5f53\u524d\u8bad\u7ec3\u5b9e\u4f8b\u7684\u7b2c J \u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u76ee\u6807\u8f93\u51fa\u3002 \u03b5 \u662f\u5b66\u4e60\u7387\u3002 \u6bcf\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u51b3\u7b56\u8fb9\u754c\u662f\u7ebf\u6027\u7684\uff0c\u56e0\u6b64\u611f\u77e5\u673a\u4e0d\u80fd\u5b66\u4e60\u590d\u6742\u7684\u6a21\u5f0f\uff08\u5c31\u50cf Logistic \u56de\u5f52\u5206\u7c7b\u5668\uff09\u3002\u7136\u800c\uff0c\u5982\u679c\u8bad\u7ec3\u5b9e\u4f8b\u662f\u7ebf\u6027\u53ef\u5206\u79bb\u7684\uff0cRosenblatt \u8bc1\u660e\u8be5\u7b97\u6cd5\u5c06\u6536\u655b\u5230\u4e00\u4e2a\u89e3\u3002\u8fd9\u88ab\u79f0\u4e3a\u611f\u77e5\u5668\u6536\u655b\u5b9a\u7406\u3002 sklearn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u611f\u77e5\u5668\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a LTU \u7f51\u7edc\u3002\u5b83\u53ef\u4ee5\u50cf\u4f60\u6240\u671f\u671b\u7684\u90a3\u6837\u4f7f\u7528\uff0c\u4f8b\u5982\u5728 iris \u6570\u636e\u96c6\uff08\u7b2c 4 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff1a import numpy as np from sklearn.datasets import load_iris from sklearn.linear_model import Perceptron iris = load_iris() X = iris.data[:, (2, 3)] # \u82b1\u74e3\u957f\u5ea6\uff0c\u5bbd\u5ea6 y = (iris.target == 0).astype(np.int) per_clf = Perceptron(random_state=42) per_clf.fit(X, y) per_clf.predict([[2, 0.5]]) \u60a8\u53ef\u80fd\u5df2\u7ecf\u8ba4\u8bc6\u5230\uff0c\u611f\u77e5\u5668\u5b66\u4e60\u7b97\u6cd5\u7c7b\u4f3c\u4e8e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u3002\u4e8b\u5b9e\u4e0a\uff0csklearn \u7684\u611f\u77e5\u5668\u7c7b\u76f8\u5f53\u4e8e\u4f7f\u7528\u5177\u6709\u4ee5\u4e0b\u8d85\u53c2\u6570\u7684 SGD \u5206\u7c7b\u5668\uff1a loss=\"perceptron\" \uff0c learning_rate=\"constant\" \uff08\u5b66\u4e60\u7387\uff09\uff0c eta0=1 \uff0c penalty=None \uff08\u65e0\u6b63\u5219\u5316\uff09\u3002 \u6ce8\u610f\uff0c\u4e0e\u903b\u8f91\u65af\u8482\u56de\u5f52\u5206\u7c7b\u5668\u76f8\u53cd\uff0c\u611f\u77e5\u673a\u4e0d\u8f93\u51fa\u7c7b\u6982\u7387\uff0c\u800c\u662f\u57fa\u4e8e\u786c\u9608\u503c\u8fdb\u884c\u9884\u6d4b\u3002\u8fd9\u662f\u4f60\u559c\u6b22\u903b\u8f91\u65af\u8482\u56de\u5f52\u5f88\u597d\u7684\u4e00\u4e2a\u7406\u7531\u3002 \u5728\u4ed6\u4eec\u7684 1969 \u4e2a\u9898\u4e3a\u201c\u611f\u77e5\u8005\u201d\u7684\u4e13\u8457\u4e2d\uff0cMarvin Minsky \u548c Seymour Papert \u5f3a\u8c03\u4e86\u611f\u77e5\u673a\u7684\u8bb8\u591a\u4e25\u91cd\u7f3a\u9677\uff0c\u7279\u522b\u662f\u5b83\u4eec\u4e0d\u80fd\u89e3\u51b3\u4e00\u4e9b\u7410\u788e\u7684\u95ee\u9898\uff08\u4f8b\u5982\uff0c\u5f02\u6216\uff08XOR\uff09\u5206\u7c7b\u95ee\u9898\uff09\uff1b\u53c2\u89c1\u56fe 10-6 \u7684\u5de6\u4fa7\uff09\u3002\u5f53\u7136\uff0c\u5176\u4ed6\u7684\u7ebf\u6027\u5206\u7c7b\u6a21\u578b\uff08\u5982 Logistic \u56de\u5f52\u5206\u7c7b\u5668\uff09\u4e5f\u90fd\u5b9e\u73b0\u4e0d\u4e86\uff0c\u4f46\u7814\u7a76\u4eba\u5458\u671f\u671b\u4ece\u611f\u77e5\u5668\u4e2d\u5f97\u5230\u66f4\u591a\uff0c\u4ed6\u4eec\u7684\u5931\u671b\u662f\u5f88\u5927\u7684\uff1a\u56e0\u6b64\uff0c\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u653e\u5f03\u4e86\u8054\u7ed3\u4e3b\u4e49\uff08\u5373\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u7a76\uff09\uff0c\u8fd9\u6709\u5229\u4e8e\u66f4\u9ad8\u5c42\u6b21\u7684\u95ee\u9898\uff0c\u5982\u903b\u8f91\u3001\u95ee\u9898\u89e3\u51b3\u548c\u641c\u7d22\u3002 \u7136\u800c\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u611f\u77e5\u5668\u7684\u4e00\u4e9b\u5c40\u9650\u6027\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u591a\u4e2a\u611f\u77e5\u5668\u6765\u6d88\u9664\u3002\u7531\u6b64\u4ea7\u751f\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u88ab\u79f0\u4e3a\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\u3002\u7279\u522b\u5730\uff0cMLP \u53ef\u4ee5\u89e3\u51b3 XOR \u95ee\u9898\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u56fe 10-6 \u53f3\u4fa7\u6240\u793a\u7684 MLP \u7684\u8f93\u51fa\u6765\u9a8c\u8bc1\u8f93\u5165\u7684\u6bcf\u4e00\u4e2a\u7ec4\u5408\uff1a\u8f93\u5165 (0, 0) \u6216 (1, 1) \u7f51\u7edc\u8f93\u51fa 0\uff0c\u5e76\u4e14\u8f93\u5165 (0, 1) \u6216 (1, 0) \u5b83\u8f93\u51fa 1\u3002 \u591a\u5c42\u611f\u77e5\u5668\u4e0e\u53cd\u5411\u4f20\u64ad MLP \u7531\u4e00\u4e2a\uff08\u901a\u8fc7\uff09\u8f93\u5165\u5c42\u3001\u4e00\u4e2a\u6216\u591a\u4e2a\u79f0\u4e3a\u9690\u85cf\u5c42\u7684 LTU \u7ec4\u6210\uff0c\u4e00\u4e2a\u6700\u7ec8\u5c42 LTU \u79f0\u4e3a\u8f93\u51fa\u5c42\uff08\u89c1\u56fe 10-7\uff09\u3002\u9664\u4e86\u8f93\u51fa\u5c42\u4e4b\u5916\u7684\u6bcf\u4e00\u5c42\u5305\u62ec\u504f\u7f6e\u795e\u7ecf\u5143\uff0c\u5e76\u4e14\u5168\u8fde\u63a5\u5230\u4e0b\u4e00\u5c42\u3002\u5f53\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u6709\u4e24\u4e2a\u6216\u591a\u4e2a\u9690\u542b\u5c42\u65f6\uff0c\u79f0\u4e3a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff08DNN\uff09\u3002 \u591a\u5e74\u6765\uff0c\u7814\u7a76\u4eba\u5458\u52aa\u529b\u5bfb\u627e\u4e00\u79cd\u8bad\u7ec3 MLP \u7684\u65b9\u6cd5\uff0c\u4f46\u6ca1\u6709\u6210\u529f\u3002\u4f46\u5728 1986\uff0cD. E. Rumelhart \u7b49\u4eba\u63d0\u51fa\u4e86\u53cd\u5411\u4f20\u64ad\u8bad\u7ec3\u7b97\u6cd5\u3002\u7b2c 9 \u7ae0\u6211\u4eec\u5c06\u5176\u63cf\u8ff0\u4e3a\u4f7f\u7528\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u7684\u68af\u5ea6\u4e0b\u964d\uff08\u7b2c 4 \u7ae0\u8ba8\u8bba\u4e86\u68af\u5ea6\u4e0b\u964d\uff0c\u7b2c 9 \u7ae0\u8ba8\u8bba\u4e86\u81ea\u52a8\u5fae\u5206\uff09\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u7b97\u6cd5\u5c06\u5176\u9988\u9001\u5230\u7f51\u7edc\u5e76\u8ba1\u7b97\u6bcf\u4e2a\u8fde\u7eed\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff08\u8fd9\u662f\u5411\u524d\u4f20\u9012\uff0c\u5c31\u50cf\u5728\u8fdb\u884c\u9884\u6d4b\u65f6\u4e00\u6837\uff09\u3002\u7136\u540e\uff0c\u5b83\u6d4b\u91cf\u7f51\u7edc\u7684\u8f93\u51fa\u8bef\u5dee\uff08\u5373\uff0c\u671f\u671b\u8f93\u51fa\u548c\u7f51\u7edc\u5b9e\u9645\u8f93\u51fa\u4e4b\u95f4\u7684\u5dee\u503c\uff09\uff0c\u5e76\u4e14\u8ba1\u7b97\u6700\u540e\u9690\u85cf\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u5bf9\u6bcf\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u8bef\u5dee\u8d21\u732e\u591a\u5c11\u3002\u7136\u540e\uff0c\u7ee7\u7eed\u6d4b\u91cf\u8fd9\u4e9b\u8bef\u5dee\u8d21\u732e\u6709\u591a\u5c11\u6765\u81ea\u5148\u524d\u9690\u85cf\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u7b49\u7b49\uff0c\u76f4\u5230\u7b97\u6cd5\u5230\u8fbe\u8f93\u5165\u5c42\u3002\u8be5\u53cd\u5411\u901a\u8fc7\u6709\u6548\u5730\u6d4b\u91cf\u7f51\u7edc\u4e2d\u6240\u6709\u8fde\u63a5\u6743\u91cd\u7684\u8bef\u5dee\u68af\u5ea6\uff0c\u901a\u8fc7\u5728\u7f51\u7edc\u4e2d\u5411\u540e\u4f20\u64ad\u8bef\u5dee\u68af\u5ea6\uff08\u4e5f\u662f\u8be5\u7b97\u6cd5\u7684\u540d\u79f0\uff09\u3002\u5982\u679c\u4f60\u67e5\u770b\u4e00\u4e0b\u9644\u5f55 D \u4e2d\u7684\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u7b97\u6cd5\uff0c\u4f60\u4f1a\u53d1\u73b0\u53cd\u5411\u4f20\u64ad\u7684\u6b63\u5411\u548c\u53cd\u5411\u901a\u8fc7\u7b80\u5355\u5730\u6267\u884c\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u3002\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7684\u6700\u540e\u4e00\u6b65\u662f\u4f7f\u7528\u8f83\u65e9\u6d4b\u91cf\u7684\u8bef\u5dee\u68af\u5ea6\u5bf9\u7f51\u7edc\u4e2d\u7684\u6240\u6709\u8fde\u63a5\u6743\u503c\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4\u3002 \u8ba9\u6211\u4eec\u66f4\u7b80\u77ed\u4e00\u4e9b\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u9996\u5148\u8fdb\u884c\u9884\u6d4b\uff08\u524d\u5411\uff09\uff0c\u6d4b\u91cf\u8bef\u5dee\uff0c\u7136\u540e\u53cd\u5411\u904d\u5386\u6bcf\u4e2a\u5c42\u6765\u6d4b\u91cf\u6bcf\u4e2a\u8fde\u63a5\uff08\u53cd\u5411\u4f20\u9012\uff09\u7684\u8bef\u5dee\u8d21\u732e\uff0c\u6700\u540e\u7a0d\u5fae\u8c03\u6574\u8fde\u63a5\u5668\u6743\u503c\u4ee5\u51cf\u5c11\u8bef\u5dee\uff08\u68af\u5ea6\u4e0b\u964d\u6b65\u957f\uff09\u3002 \u4e3a\u4e86\u4f7f\u7b97\u6cd5\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f5c\u8005\u5bf9 MLP \u7684\u4f53\u7cfb\u7ed3\u6784\u8fdb\u884c\u4e86\u4e00\u4e2a\u5173\u952e\u6027\u7684\u6539\u53d8\uff1a\u7528 Logistic \u51fd\u6570\u4ee3\u66ff\u4e86\u9636\u8dc3\u51fd\u6570\uff0c \u03c3(z) = 1 / (1 + exp(\u2013z)) \u3002\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u9636\u8dc3\u51fd\u6570\u53ea\u5305\u542b\u5e73\u5766\u7684\u6bb5\uff0c\u56e0\u6b64\u6ca1\u6709\u68af\u5ea6\u6765\u5de5\u4f5c\uff08\u68af\u5ea6\u4e0b\u964d\u4e0d\u80fd\u5728\u5e73\u9762\u4e0a\u79fb\u52a8\uff09\uff0c\u800c Logistic \u51fd\u6570\u5230\u5904\u90fd\u6709\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u7684\u975e\u96f6\u5bfc\u6570\uff0c\u5141\u8bb8\u68af\u5ea6\u4e0b\u964d\u5728\u6bcf\u4e2a\u6b65\u4e0a\u53d6\u5f97\u4e00\u4e9b\u8fdb\u5c55\u3002\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u53ef\u4ee5\u4e0e\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\uff0c\u800c\u4e0d\u662f Logistic \u51fd\u6570\u3002\u53e6\u5916\u4e24\u4e2a\u6d41\u884c\u7684\u6fc0\u6d3b\u51fd\u6570\u662f\uff1a \u53cc\u66f2\u6b63\u5207\u51fd\u6570 tanh (z) = 2\u03c3(2z) \u2013 1 \u5c31\u50cf Logistic \u51fd\u6570\uff0c\u5b83\u662f S \u5f62\u7684\u3001\u8fde\u7eed\u7684\u3001\u53ef\u5fae\u7684\uff0c\u4f46\u662f\u5b83\u7684\u8f93\u51fa\u503c\u8303\u56f4\u4ece-1\u52301\uff08\u4e0d\u662f\u5728 Logistic \u51fd\u6570\u7684 0 \u5230 1\uff09\uff0c\u8fd9\u5f80\u5f80\u4f7f\u6bcf\u4e2a\u5c42\u7684\u8f93\u51fa\u5728\u8bad\u7ec3\u5f00\u59cb\u65f6\u6216\u591a\u6216\u5c11\u90fd\u6b63\u5219\u5316\u4e86\uff08\u5373\u4ee5 0 \u4e3a\u4e2d\u5fc3\uff09\u3002\u8fd9\u5e38\u5e38\u6709\u52a9\u4e8e\u52a0\u5feb\u6536\u655b\u901f\u5ea6\u3002 Relu \u51fd\u6570\uff08\u5728\u7b2c 9 \u7ae0\u4e2d\u4ecb\u7ecd\uff09 ReLU (z) = max (0, z) \u3002\u5b83\u662f\u8fde\u7eed\u7684\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\u5728 z=0 \u65f6\u4e0d\u53ef\u5fae\uff08\u659c\u7387\u7a81\u7136\u6539\u53d8\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u68af\u5ea6\u4e0b\u964d\u53cd\u5f39\uff09\u3002\u7136\u800c\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u5e76\u4e14\u5177\u6709\u5feb\u901f\u8ba1\u7b97\u7684\u4f18\u70b9\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u6ca1\u6709\u6700\u5927\u8f93\u51fa\u503c\u7684\u4e8b\u5b9e\u4e5f\u6709\u52a9\u4e8e\u51cf\u5c11\u68af\u5ea6\u4e0b\u964d\u671f\u95f4\u7684\u4e00\u4e9b\u95ee\u9898\uff08\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u56de\u987e\u8fd9\u4e00\u70b9\uff09\u3002 \u8fd9\u4e9b\u6d41\u884c\u7684\u6fc0\u6d3b\u51fd\u6570\u53ca\u5176\u884d\u751f\u7269\u5982\u56fe 10-8 \u6240\u793a\u3002 MLP \u901a\u5e38\u7528\u4e8e\u5206\u7c7b\uff0c\u6bcf\u4e2a\u8f93\u51fa\u5bf9\u5e94\u4e8e\u4e0d\u540c\u7684\u4e8c\u8fdb\u5236\u7c7b\uff08\u4f8b\u5982\uff0c\u5783\u573e\u90ae\u4ef6/\u6b63\u5e38\u90ae\u4ef6\uff0c\u7d27\u6025/\u975e\u7d27\u6025\uff0c\u7b49\u7b49\uff09\u3002\u5f53\u7c7b\u662f\u591a\u7c7b\u7684\uff08\u4f8b\u5982\uff0c0 \u5230 9 \u7684\u6570\u5b57\u56fe\u50cf\u5206\u7c7b\uff09\u65f6\uff0c\u8f93\u51fa\u5c42\u901a\u5e38\u901a\u8fc7\u7528\u5171\u4eab\u7684 softmax \u51fd\u6570\u66ff\u6362\u5355\u72ec\u7684\u6fc0\u6d3b\u51fd\u6570\u6765\u4fee\u6539\uff08\u89c1\u56fe 10-9\uff09\u3002\u7b2c 3 \u7ae0\u4ecb\u7ecd\u4e86 softmax \u51fd\u6570\u3002\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u5bf9\u5e94\u4e8e\u76f8\u5e94\u7c7b\u7684\u4f30\u8ba1\u6982\u7387\u3002\u6ce8\u610f\uff0c\u4fe1\u53f7\u53ea\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u6d41\u52a8\uff08\u4ece\u8f93\u5165\u5230\u8f93\u51fa\uff09\uff0c\u56e0\u6b64\u8fd9\u79cd\u7ed3\u6784\u662f\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff08FNN\uff09\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002 \u751f\u7269\u795e\u7ecf\u5143\u4f3c\u4e4e\u662f\u7528 sigmoid\uff08S \u578b\uff09\u6fc0\u6d3b\u51fd\u6570\u6d3b\u52a8\u7684\uff0c\u56e0\u6b64\u7814\u7a76\u4eba\u5458\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u575a\u6301 sigmoid \u51fd\u6570\u3002\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0cRelu \u6fc0\u6d3b\u51fd\u6570\u901a\u5e38\u5728 ANN \u5de5\u4f5c\u5f97\u66f4\u597d\u3002\u8fd9\u662f\u751f\u7269\u7814\u7a76\u8bef\u5bfc\u7684\u4f8b\u5b50\u4e4b\u4e00\u3002 \u7528 TensorFlow \u9ad8\u7ea7 API \u8bad\u7ec3 MLP \u4e0e TensorFlow \u4e00\u8d77\u8bad\u7ec3 MLP \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u9ad8\u7ea7 API TF.Learn\uff0c\u8fd9\u4e0e sklearn \u7684 API \u975e\u5e38\u76f8\u4f3c\u3002 DNNClassifier \u53ef\u4ee5\u5f88\u5bb9\u6613\u8bad\u7ec3\u5177\u6709\u4efb\u610f\u6570\u91cf\u9690\u5c42\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff0c\u800c softmax \u8f93\u51fa\u5c42\u8f93\u51fa\u4f30\u8ba1\u7684\u7c7b\u6982\u7387\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u8bad\u7ec3\u4e24\u4e2a\u9690\u85cf\u5c42\u7684 DNN\uff08\u4e00\u4e2a\u5177\u6709 300 \u4e2a\u795e\u7ecf\u5143\uff0c\u53e6\u4e00\u4e2a\u5177\u6709 100 \u4e2a\u795e\u7ecf\u5143\uff09\u548c\u4e00\u4e2a\u5177\u6709 10 \u4e2a\u795e\u7ecf\u5143\u7684 SOFTMax \u8f93\u51fa\u5c42\u8fdb\u884c\u5206\u7c7b\uff1a import tensorflow as tf feature_columns = tf.contrib.learn.infer_real_valued_columns_from_input(X) dnn_clf = tf.contrib.learn.DNNClassifier(hidden_units=[300, 100], n_classes=10, feature_columns=feature_columns) dnn_clf.fit(x=X, y=y, batch_size=50, steps=40000) \u5982\u679c\u4f60\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u8fd0\u884c\u8fd9\u4e2a\u4ee3\u7801\uff08\u5728\u7f29\u653e\u5b83\u4e4b\u540e\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u4f7f\u7528 skLearn \u7684 StandardScaler \uff09\uff0c\u4f60\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8fbe\u5230 98.1% \u4ee5\u4e0a\u7cbe\u5ea6\u7684\u6a21\u578b\uff01\u8fd9\u6bd4\u6211\u4eec\u5728\u7b2c 3 \u7ae0\u4e2d\u8bad\u7ec3\u7684\u6700\u597d\u7684\u6a21\u578b\u90fd\u8981\u597d\uff1a >>> from sklearn.metrics import accuracy_score >>> y_pred = list(dnn_clf.predict(X_test)) >>> accuracy_score(y_test, y_pred) 0.98180000000000001 TF.Learn \u5b66\u4e60\u5e93\u4e5f\u4e3a\u8bc4\u4f30\u6a21\u578b\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u4fbf\u7684\u529f\u80fd\uff1a >>> dnn_clf.evaluate(X_test, y_test) {'accuracy': 0.98180002, 'global_step': 40000, 'loss': 0.073678359} DNNClassifier \u57fa\u4e8e Relu \u6fc0\u6d3b\u51fd\u6570\u521b\u5efa\u6240\u6709\u795e\u7ecf\u5143\u5c42\uff08\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u8d85\u53c2\u6570 activation_fn \u6765\u6539\u53d8\u6fc0\u6d3b\u51fd\u6570\uff09\u3002\u8f93\u51fa\u5c42\u57fa\u4e8e SoftMax \u51fd\u6570\uff0c\u635f\u5931\u51fd\u6570\u662f\u4ea4\u53c9\u71b5\uff08\u5728\u7b2c 4 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002 TF.EXCEL API \u4ecd\u7136\u662f\u66f4\u65b0\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u4e9b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u7684\u4e00\u4e9b\u540d\u79f0\u548c\u51fd\u6570\u53ef\u80fd\u4f1a\u5728\u4f60\u8bfb\u8fd9\u672c\u4e66\u7684\u65f6\u5019\u53d1\u751f\u4e00\u4e9b\u53d8\u5316\u3002\u4f46\u603b\u7684\u601d\u60f3\u662f\u4e0d\u53d8\u3002 \u4f7f\u7528\u666e\u901a TensorFlow \u8bad\u7ec3 DNN \u5982\u679c\u60a8\u60f3\u8981\u66f4\u597d\u5730\u63a7\u5236\u7f51\u7edc\u67b6\u6784\uff0c\u60a8\u53ef\u80fd\u66f4\u559c\u6b22\u4f7f\u7528 TensorFlow \u7684\u8f83\u4f4e\u7ea7\u522b\u7684 Python API\uff08\u5728\u7b2c 9 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e0e\u4e4b\u524d\u7684 API \u76f8\u540c\u7684\u6a21\u578b\uff0c\u6211\u4eec\u5c06\u5b9e\u65bd Minibatch \u68af\u5ea6\u4e0b\u964d\u6765\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\u3002 \u7b2c\u4e00\u6b65\u662f\u5efa\u8bbe\u9636\u6bb5\uff0c\u6784\u5efa TensorFlow \u56fe\u3002 \u7b2c\u4e8c\u6b65\u662f\u6267\u884c\u9636\u6bb5\uff0c\u60a8\u5b9e\u9645\u8fd0\u884c\u8ba1\u7b97\u56fe\u8c31\u6765\u8bad\u7ec3\u6a21\u578b\u3002 \u6784\u9020\u9636\u6bb5 \u5f00\u59cb\u5427\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u5bfc\u5165 tensorflow \u5e93\u3002 \u7136\u540e\u6211\u4eec\u5fc5\u987b\u6307\u5b9a\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6570\u91cf\uff0c\u5e76\u8bbe\u7f6e\u6bcf\u4e2a\u5c42\u4e2d\u9690\u85cf\u7684\u795e\u7ecf\u5143\u6570\u91cf\uff1a import tensorflow as tf n_inputs = 28*28 # MNIST n_hidden1 = 300 n_hidden2 = 100 n_outputs = 10 \u63a5\u4e0b\u6765\uff0c\u4e0e\u7b2c 9 \u7ae0\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5360\u4f4d\u7b26\u8282\u70b9\u6765\u8868\u793a\u8bad\u7ec3\u6570\u636e\u548c\u76ee\u6807\u3002 X \u7684\u5f62\u72b6\u4ec5\u6709\u90e8\u5206\u88ab\u5b9a\u4e49\u3002 \u6211\u4eec\u77e5\u9053\u5b83\u5c06\u662f\u4e00\u4e2a 2D \u5f20\u91cf\uff08\u5373\u4e00\u4e2a\u77e9\u9635\uff09\uff0c\u6cbf\u7740\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5b9e\u4f8b\u548c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u7684\u7279\u5f81\uff0c\u6211\u4eec\u77e5\u9053\u7279\u5f81\u7684\u6570\u91cf\u5c06\u662f 28\u00d728 \uff08\u6bcf\u50cf\u7d20\u4e00\u4e2a\u7279\u5f81\uff09 \u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u6bcf\u4e2a\u8bad\u7ec3\u6279\u6b21\u5c06\u5305\u542b\u591a\u5c11\u4e2a\u5b9e\u4f8b\u3002 \u6240\u4ee5 X \u7684\u5f62\u72b6\u662f (None, n_inputs) \u3002 \u540c\u6837\uff0c\u6211\u4eec\u77e5\u9053 y \u5c06\u662f\u4e00\u4e2a 1D \u5f20\u91cf\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u4f46\u662f\u6211\u4eec\u518d\u6b21\u4e0d\u77e5\u9053\u5728\u8fd9\u4e00\u70b9\u4e0a\u8bad\u7ec3\u6279\u6b21\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u5f62\u72b6 (None) \u3002 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") \u73b0\u5728\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b9e\u9645\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u5360\u4f4d\u7b26 X \u5c06\u4f5c\u4e3a\u8f93\u5165\u5c42; \u5728\u6267\u884c\u9636\u6bb5\uff0c\u5b83\u5c06\u4e00\u6b21\u66f4\u6362\u4e00\u4e2a\u8bad\u7ec3\u6279\u6b21\uff08\u6ce8\u610f\u8bad\u7ec3\u6279\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u5c06\u7531\u795e\u7ecf\u7f51\u7edc\u540c\u65f6\u5904\u7406\uff09\u3002 \u73b0\u5728\u60a8\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42\u3002 \u4e24\u4e2a\u9690\u85cf\u7684\u5c42\u51e0\u4e4e\u76f8\u540c\uff1a\u5b83\u4eec\u53ea\u662f\u5b83\u4eec\u6240\u8fde\u63a5\u7684\u8f93\u5165\u548c\u5b83\u4eec\u5305\u542b\u7684\u795e\u7ecf\u5143\u7684\u6570\u91cf\u4e0d\u540c\u3002 \u8f93\u51fa\u5c42\u4e5f\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u5b83\u4f7f\u7528 softmax \u6fc0\u6d3b\u51fd\u6570\u800c\u4e0d\u662f ReLU \u6fc0\u6d3b\u51fd\u6570\u3002 \u6240\u4ee5\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a neuron_layer() \u51fd\u6570\uff0c\u6211\u4eec\u5c06\u4e00\u6b21\u521b\u5efa\u4e00\u4e2a\u56fe\u5c42\u3002 \u5b83\u5c06\u9700\u8981\u53c2\u6570\u6765\u6307\u5b9a\u8f93\u5165\uff0c\u795e\u7ecf\u5143\u6570\u91cf\uff0c\u6fc0\u6d3b\u51fd\u6570\u548c\u56fe\u5c42\u7684\u540d\u79f0\uff1a def neuron_layer(X, n_neurons, name, activation=None): with tf.name_scope(name): n_inputs = int(X.get_shape()[1]) stddev = 2 / np.sqrt(n_inputs) init = tf.truncated_normal((n_inputs, n_neurons), stddev=stddev) W = tf.Variable(init, name=\"weights\") b = tf.Variable(tf.zeros([n_neurons]), name=\"biases\") z = tf.matmul(X, W) + b if activation == \"relu\": return tf.nn.relu(z) else: return z \u6211\u4eec\u9010\u884c\u6d4f\u89c8\u8fd9\u4e2a\u4ee3\u7801\uff1a \u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528\u540d\u79f0\u8303\u56f4\u6765\u521b\u5efa\u6bcf\u5c42\u7684\u540d\u79f0\uff1a\u5b83\u5c06\u5305\u542b\u8be5\u795e\u7ecf\u5143\u5c42\u7684\u6240\u6709\u8ba1\u7b97\u8282\u70b9\u3002 \u8fd9\u662f\u53ef\u9009\u7684\uff0c\u4f46\u5982\u679c\u8282\u70b9\u7ec4\u7ec7\u826f\u597d\uff0c\u5219 TensorBoard \u56fe\u5f62\u5c06\u4f1a\u66f4\u52a0\u51fa\u8272\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u67e5\u627e\u8f93\u5165\u77e9\u9635\u7684\u5f62\u72b6\u5e76\u83b7\u5f97\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u7684\u5927\u5c0f\u6765\u83b7\u5f97\u8f93\u5165\u6570\u91cf\uff08\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u7528\u4e8e\u5b9e\u4f8b\uff09\u3002 \u63a5\u4e0b\u6765\u7684\u4e09\u884c\u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u6743\u91cd\u77e9\u9635\u7684 W \u53d8\u91cf\u3002 \u5b83\u5c06\u662f\u5305\u542b\u6bcf\u4e2a\u8f93\u5165\u548c\u6bcf\u4e2a\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u6240\u6709\u8fde\u63a5\u6743\u91cd\u76842D\u5f20\u91cf\uff1b\u56e0\u6b64\uff0c\u5b83\u7684\u5f62\u72b6\u5c06\u662f (n_inputs, n_neurons) \u3002\u5b83\u5c06\u88ab\u968f\u673a\u521d\u59cb\u5316\uff0c\u4f7f\u7528\u5177\u6709\u6807\u51c6\u5dee\u4e3a 2/\u221an \u7684\u622a\u65ad\u7684\u6b63\u6001\uff08\u9ad8\u65af\uff09\u5206\u5e03(\u4f7f\u7528\u622a\u65ad\u7684\u6b63\u6001\u5206\u5e03\u800c\u4e0d\u662f\u5e38\u89c4\u6b63\u6001\u5206\u5e03\u786e\u4fdd\u4e0d\u4f1a\u6709\u4efb\u4f55\u5927\u7684\u6743\u91cd\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51cf\u6162\u8bad\u7ec3\u3002).\u4f7f\u7528\u8fd9\u4e2a\u7279\u5b9a\u7684\u6807\u51c6\u5dee\u6709\u52a9\u4e8e\u7b97\u6cd5\u7684\u6536\u655b\u901f\u5ea6\u66f4\u5feb\uff08\u6211\u4eec\u5c06\u5728\u7b2c11\u7ae0\u4e2d\u8fdb\u4e00\u6b65\u8ba8\u8bba\u8fd9\u4e00\u70b9\uff09\uff0c\u8fd9\u662f\u5bf9\u795e\u7ecf\u7f51\u7edc\u7684\u5fae\u5c0f\u8c03\u6574\u4e4b\u4e00\uff0c\u5bf9\u5b83\u4eec\u7684\u6548\u7387\u4ea7\u751f\u4e86\u5de8\u5927\u7684\u5f71\u54cd\uff09\u3002 \u91cd\u8981\u7684\u662f\u4e3a\u6240\u6709\u9690\u85cf\u5c42\u968f\u673a\u521d\u59cb\u5316\u8fde\u63a5\u6743\u91cd\uff0c\u4ee5\u907f\u514d\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u65e0\u6cd5\u4e2d\u65ad\u7684\u4efb\u4f55\u5bf9\u79f0\u6027\u3002\uff08\u4f8b\u5982\uff0c\u5982\u679c\u5c06\u6240\u6709\u6743\u91cd\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u6240\u6709\u795e\u7ecf\u5143\u5c06\u8f93\u51fa 0\uff0c\u5e76\u4e14\u7ed9\u5b9a\u9690\u85cf\u5c42\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u7684\u8bef\u5dee\u68af\u5ea6\u5c06\u76f8\u540c\u3002 \u7136\u540e\uff0c\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4\u5c06\u5728\u6bcf\u4e2a\u5c42\u4e2d\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u66f4\u65b0\u6240\u6709\u6743\u91cd\uff0c\u56e0\u6b64\u5b83\u4eec\u5c06\u4fdd\u6301\u76f8\u7b49\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5c3d\u7ba1\u6bcf\u5c42\u6709\u6570\u767e\u4e2a\u795e\u7ecf\u5143\uff0c\u4f60\u7684\u6a21\u578b\u5c31\u50cf\u6bcf\u5c42\u53ea\u6709\u4e00\u4e2a\u795e\u7ecf\u5143\u4e00\u6837\u3002\uff09 \u4e0b\u4e00\u884c\u521b\u5efa\u4e00\u4e2a\u504f\u5dee\u7684 b \u53d8\u91cf\uff0c\u521d\u59cb\u5316\u4e3a 0\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u65e0\u5bf9\u79f0\u95ee\u9898\uff09\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u6709\u4e00\u4e2a\u504f\u7f6e\u53c2\u6570\u3002 \u7136\u540e\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe\u6765\u8ba1\u7b97 z = X\u00b7W + b \u3002 \u8be5\u5411\u91cf\u5316\u5b9e\u73b0\u5c06\u6709\u6548\u5730\u8ba1\u7b97\u8f93\u5165\u7684\u52a0\u6743\u548c\u52a0\u4e0a\u5c42\u4e2d\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u504f\u7f6e\uff0c\u5bf9\u4e8e\u6279\u6b21\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\uff0c\u4ec5\u9700\u4e00\u6b21. \u6700\u540e\uff0c\u5982\u679c\u6fc0\u6d3b\u53c2\u6570\u8bbe\u7f6e\u4e3a relu \uff0c\u5219\u4ee3\u7801\u8fd4\u56de relu(z) \uff08\u5373 max(0,z) \uff09\uff0c\u5426\u5219\u5b83\u53ea\u8fd4\u56de z \u3002 \u597d\u4e86\uff0c\u73b0\u5728\u4f60\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u795e\u7ecf\u5143\u5c42\u3002 \u8ba9\u6211\u4eec\u7528\u5b83\u6765\u521b\u5efa\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\uff01 \u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u4ee5 X \u4e3a\u8f93\u5165\u3002 \u7b2c\u4e8c\u4e2a\u5c06\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u4f5c\u4e3a\u5176\u8f93\u5165\u3002 \u6700\u540e\uff0c\u8f93\u51fa\u5c42\u5c06\u7b2c\u4e8c\u4e2a\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u4f5c\u4e3a\u5176\u8f93\u5165\u3002 with tf.name_scope(\"dnn\"): hidden1 = neuron_layer(X, n_hidden1, \"hidden1\", activation=\"relu\") hidden2 = neuron_layer(hidden1, n_hidden2, \"hidden2\", activation=\"relu\") logits = neuron_layer(hidden2, n_outputs, \"outputs\") \u8bf7\u6ce8\u610f\uff0c\u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u540d\u79f0\u8303\u56f4\u3002 \u8fd8\u8981\u6ce8\u610f\uff0clogit \u662f\u5728\u901a\u8fc7 softmax \u6fc0\u6d3b\u51fd\u6570\u4e4b\u524d\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\uff1a\u4e3a\u4e86\u4f18\u5316\uff0c\u6211\u4eec\u7a0d\u540e\u5c06\u5904\u7406 softmax \u8ba1\u7b97\u3002 \u6b63\u5982\u4f60\u6240\u671f\u671b\u7684\uff0cTensorFlow \u6709\u8bb8\u591a\u65b9\u4fbf\u7684\u529f\u80fd\u6765\u521b\u5efa\u6807\u51c6\u7684\u795e\u7ecf\u7f51\u7edc\u5c42\uff0c\u6240\u4ee5\u901a\u5e38\u4e0d\u9700\u8981\u50cf\u6211\u4eec\u521a\u624d\u90a3\u6837\u5b9a\u4e49\u4f60\u81ea\u5df1\u7684 neuron_layer() \u51fd\u6570\u3002 \u4f8b\u5982\uff0cTensorFlow \u7684 fully_connected() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u5b8c\u5168\u8fde\u63a5\u7684\u5c42\uff0c\u5176\u4e2d\u6240\u6709\u8f93\u5165\u90fd\u8fde\u63a5\u5230\u56fe\u5c42\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u3002 \u5b83\u4f7f\u7528\u6b63\u786e\u7684\u521d\u59cb\u5316\u7b56\u7565\u6765\u8d1f\u8d23\u521b\u5efa\u6743\u91cd\u548c\u504f\u7f6e\u53d8\u91cf\uff0c\u5e76\u4e14\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 ReLU \u6fc0\u6d3b\u51fd\u6570\uff08\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 activate_fn \u53c2\u6570\u6765\u66f4\u6539\u5b83\uff09\u3002 \u6b63\u5982\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u770b\u5230\u7684\uff0c\u5b83\u8fd8\u652f\u6301\u6b63\u5219\u5316\u548c\u5f52\u4e00\u5316\u53c2\u6570\u3002 \u6211\u4eec\u6765\u8c03\u6574\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u4f7f\u7528 fully_connected() \u51fd\u6570\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u7684 neuron_layer() \u51fd\u6570\u3002 \u53ea\u9700\u5bfc\u5165\u8be5\u529f\u80fd\uff0c\u5e76\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u66ff\u6362 dnn \u6784\u5efa\u90e8\u5206\uff1a from tensorflow.contrib.layers import fully_connected with tf.name_scope(\"dnn\"): hidden1 = fully_connected(X, n_hidden1, scope=\"hidden1\") hidden2 = fully_connected(hidden1, n_hidden2, scope=\"hidden2\") logits = fully_connected(hidden2, n_outputs, scope=\"outputs\", activation_fn=None) tensorflow.contrib \u5305\u5305\u542b\u8bb8\u591a\u6709\u7528\u7684\u529f\u80fd\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u5c1a\u672a\u5206\u7ea7\u6210\u4e3a\u4e3b\u8981 TensorFlow API \u4e00\u90e8\u5206\u7684\u5b9e\u9a8c\u4ee3\u7801\u7684\u5730\u65b9\u3002 \u56e0\u6b64\uff0c full_connected() \u51fd\u6570\uff08\u548c\u4efb\u4f55\u5176\u4ed6 contrib \u4ee3\u7801\uff09\u53ef\u80fd\u4f1a\u5728\u5c06\u6765\u66f4\u6539\u6216\u79fb\u52a8\u3002 \u4f7f\u7528 dense() \u4ee3\u66ff neuron_layer() \u6ce8\u610f\uff1a\u672c\u4e66\u4f7f\u7528 tensorflow.contrib.layers.fully_connected() \u800c\u4e0d\u662f tf.layers.dense() \uff08\u672c\u7ae0\u7f16\u5199\u65f6\u4e0d\u5b58\u5728\uff09\u3002 \u73b0\u5728\u6700\u597d\u4f7f\u7528 tf.layers.dense() \uff0c\u56e0\u4e3a contrib \u6a21\u5757\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u53ef\u80fd\u4f1a\u66f4\u6539\u6216\u5220\u9664\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002 dense() \u51fd\u6570\u4e0e fully_connected() \u51fd\u6570\u51e0\u4e4e\u76f8\u540c\uff0c\u9664\u4e86\u4e00\u4e9b\u7ec6\u5fae\u7684\u5dee\u522b\uff1a \u51e0\u4e2a\u53c2\u6570\u88ab\u91cd\u547d\u540d\uff1a scope \u53d8\u4e3a\u540d\u79f0\uff0c activation_fn \u53d8\u4e3a\u6fc0\u6d3b\uff08\u540c\u6837 _fn \u540e\u7f00\u4ece\u5176\u4ed6\u53c2\u6570\uff08\u5982 normalizer_fn \uff09\u4e2d\u5220\u9664\uff09\uff0c weights_initializer \u6210\u4e3a kernel_initializer \u7b49\u3002\u9ed8\u8ba4\u6fc0\u6d3b\u73b0\u5728\u662f\u65e0\uff0c\u800c\u4e0d\u662f tf.nn.relu \u3002 \u7b2c 11 \u7ae0\u8fd8\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u5dee\u5f02\u3002 with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, name=\"hidden1\", activation=tf.nn.relu) hidden2 = tf.layers.dense(hidden1, n_hidden2, name=\"hidden2\", activation=tf.nn.relu) logits = tf.layers.dense(hidden2, n_outputs, name=\"outputs\") \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u6211\u4eec\u7528\u6765\u8bad\u7ec3\u7684\u635f\u5931\u51fd\u6570\u3002 \u6b63\u5982\u6211\u4eec\u5728\u7b2c 4 \u7ae0\u4e2d\u5bf9 Softmax \u56de\u5f52\u6240\u505a\u7684\u90a3\u6837\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4ea4\u53c9\u71b5\u3002 \u6b63\u5982\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\uff0c\u4ea4\u53c9\u71b5\u5c06\u60e9\u7f5a\u4f30\u8ba1\u76ee\u6807\u7c7b\u7684\u6982\u7387\u8f83\u4f4e\u7684\u6a21\u578b\u3002 TensorFlow \u63d0\u4f9b\u4e86\u51e0\u79cd\u8ba1\u7b97\u4ea4\u53c9\u71b5\u7684\u529f\u80fd\u3002 \u6211\u4eec\u5c06\u4f7f\u7528 sparse_softmax_cross_entropy_with_logits() \uff1a\u5b83\u6839\u636e\u201clogit\u201d\u8ba1\u7b97\u4ea4\u53c9\u71b5\uff08\u5373\uff0c\u5728\u901a\u8fc7 softmax \u6fc0\u6d3b\u51fd\u6570\u4e4b\u524d\u7684\u7f51\u7edc\u8f93\u51fa\uff09\uff0c\u5e76\u4e14\u671f\u671b\u4ee5 0 \u5230 -1 \u6570\u91cf\u7684\u6574\u6570\u5f62\u5f0f\u7684\u6807\u7b7e\uff08\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u4ece 0 \u5230 9\uff09\u3002 \u8fd9\u5c06\u7ed9\u6211\u4eec\u4e00\u4e2a\u5305\u542b\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u4ea4\u53c9\u71b5\u7684 1D \u5f20\u91cf\u3002 \u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 TensorFlow \u7684 reduce_mean() \u51fd\u6570\u6765\u8ba1\u7b97\u6240\u6709\u5b9e\u4f8b\u7684\u5e73\u5747\u4ea4\u53c9\u71b5\u3002 with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") \u8be5 sparse_softmax_cross_entropy_with_logits() \u51fd\u6570\u7b49\u540c\u4e8e\u5e94\u7528 SOFTMAX \u6fc0\u6d3b\u51fd\u6570\uff0c\u7136\u540e\u8ba1\u7b97\u4ea4\u53c9\u71b5\uff0c\u4f46\u5b83\u66f4\u9ad8\u6548\uff0c\u5b83\u59a5\u5584\u7167\u987e\u7684\u8fb9\u754c\u60c5\u51b5\u4e0b\uff0c\u6bd4\u5982 logits \u7b49\u4e8e 0\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u6ca1\u6709\u8f83\u65e9\u7684\u5e94\u7528 SOFTMAX \u6fc0\u6d3b\u51fd\u6570\u3002 \u8fd8\u6709\u79f0\u4e3a softmax_cross_entropy_with_logits() \u7684\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u6807\u7b7e\u5355\u70ed\u8f7d\u4f53\u7684\u5f62\u5f0f\uff08\u800c\u4e0d\u662f\u6574\u6570 0 \u81f3\u7c7b\u7684\u6570\u76ee\u51cf 1\uff09\u3002 \u6211\u4eec\u6709\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u6211\u4eec\u6709\u635f\u5931\u51fd\u6570\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a GradientDescentOptimizer \u6765\u8c03\u6574\u6a21\u578b\u53c2\u6570\u4ee5\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002\u6ca1\u4ec0\u4e48\u65b0\u9c9c\u7684; \u5c31\u50cf\u6211\u4eec\u5728\u7b2c 9 \u7ae0\u4e2d\u6240\u505a\u7684\u90a3\u6837\uff1a learning_rate = 0.01 with tf.name_scope(\"train\"): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) \u5efa\u6a21\u9636\u6bb5\u7684\u6700\u540e\u4e00\u4e2a\u91cd\u8981\u6b65\u9aa4\u662f\u6307\u5b9a\u5982\u4f55\u8bc4\u4f30\u6a21\u578b\u3002 \u6211\u4eec\u5c06\u7b80\u5355\u5730\u5c06\u7cbe\u5ea6\u7528\u4f5c\u6211\u4eec\u7684\u7ee9\u6548\u6307\u6807\u3002 \u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b9e\u4f8b\uff0c\u901a\u8fc7\u68c0\u67e5\u6700\u9ad8 logit \u662f\u5426\u5bf9\u5e94\u4e8e\u76ee\u6807\u7c7b\u522b\u6765\u786e\u5b9a\u795e\u7ecf\u7f51\u7edc\u7684\u9884\u6d4b\u662f\u5426\u6b63\u786e\u3002 \u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 in_top_k() \u51fd\u6570\u3002 \u8fd9\u8fd4\u56de\u4e00\u4e2a\u5145\u6ee1\u5e03\u5c14\u503c\u7684 1D \u5f20\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e9b\u5e03\u5c14\u503c\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\uff0c\u7136\u540e\u8ba1\u7b97\u5e73\u5747\u503c\u3002 \u8fd9\u5c06\u7ed9\u6211\u4eec\u7f51\u7edc\u7684\u6574\u4f53\u51c6\u786e\u6027. with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) \u800c\u4e14\uff0c\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u521d\u59cb\u5316\u6240\u6709\u53d8\u91cf\u7684\u8282\u70b9\uff0c\u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e00\u4e2a Saver \u6765\u5c06\u6211\u4eec\u8bad\u7ec3\u6709\u7d20\u7684\u6a21\u578b\u53c2\u6570\u4fdd\u5b58\u5230\u78c1\u76d8\u4e2d\uff1a init = tf.global_variables_initializer() saver = tf.train.Saver() \u5efa\u6a21\u9636\u6bb5\u7ed3\u675f\u3002 \u8fd9\u662f\u4e0d\u5230 40 \u884c\u4ee3\u7801\uff0c\u4f46\u76f8\u5f53\u6fc0\u70c8\uff1a\u6211\u4eec\u4e3a\u8f93\u5165\u548c\u76ee\u6807\u521b\u5efa\u5360\u4f4d\u7b26\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6784\u5efa\u795e\u7ecf\u5143\u5c42\u7684\u51fd\u6570\uff0c\u6211\u4eec\u7528\u5b83\u6765\u521b\u5efa DNN\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u635f\u5931\u51fd\u6570\uff0c\u6211\u4eec \u521b\u5efa\u4e86\u4e00\u4e2a\u4f18\u5316\u5668\uff0c\u6700\u540e\u5b9a\u4e49\u4e86\u6027\u80fd\u6307\u6807\u3002 \u73b0\u5728\u5230\u6267\u884c\u9636\u6bb5\u3002 \u6267\u884c\u9636\u6bb5 \u8fd9\u90e8\u5206\u8981\u77ed\u5f97\u591a\uff0c\u66f4\u7b80\u5355\u3002 \u9996\u5148\uff0c\u6211\u4eec\u52a0\u8f7d MNIST\u3002 \u6211\u4eec\u53ef\u4ee5\u50cf\u4e4b\u524d\u7684\u7ae0\u8282\u90a3\u6837\u4f7f\u7528 ScikitLearn\uff0c\u4f46\u662f TensorFlow \u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\u52a9\u624b\u6765\u83b7\u53d6\u6570\u636e\uff0c\u5c06\u5176\u7f29\u653e\uff080 \u5230 1 \u4e4b\u95f4\uff09\uff0c\u5c06\u5b83\u6d17\u724c\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u529f\u80fd\u6765\u4e00\u6b21\u52a0\u8f7d\u4e00\u4e2a\u5c0f\u6279\u91cf\uff1a from tensorflow.examples.tutorials.mnist import input_data mnist = input_data.read_data_sets(\"/tmp/data/\") \u73b0\u5728\u6211\u4eec\u5b9a\u4e49\u6211\u4eec\u8981\u8fd0\u884c\u7684\u8fed\u4ee3\u6570\uff0c\u4ee5\u53ca\u5c0f\u6279\u91cf\u7684\u5927\u5c0f\uff1a n_epochs = 10001 batch_size = 50 \u73b0\u5728\u6211\u4eec\u53bb\u8bad\u7ec3\u6a21\u578b: with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) acc_train = accuracy.eval(feed_dict={X: X_batch, y: y_batch}) acc_test = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Train accuracy:\", acc_train, \"Test accuracy:\", acc_test) save_path = saver.save(sess, \"./my_model_final.ckpt\") \u8be5\u4ee3\u7801\u6253\u5f00\u4e00\u4e2a TensorFlow \u4f1a\u8bdd\uff0c\u5e76\u8fd0\u884c\u521d\u59cb\u5316\u6240\u6709\u53d8\u91cf\u7684 init \u8282\u70b9\u3002 \u7136\u540e\u5b83\u8fd0\u884c\u7684\u4e3b\u8981\u8bad\u7ec3\u5faa\u73af\uff1a\u5728\u6bcf\u4e2a\u65f6\u671f\uff0c\u901a\u8fc7\u4e00\u4e9b\u5c0f\u6279\u6b21\u7684\u5bf9\u5e94\u4e8e\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u7684\u4ee3\u7801\u8fdb\u884c\u8fed\u4ee3\u3002 \u6bcf\u4e2a\u5c0f\u6279\u91cf\u901a\u8fc7 next_batch() \u65b9\u6cd5\u83b7\u53d6\uff0c\u7136\u540e\u4ee3\u7801\u7b80\u5355\u5730\u8fd0\u884c\u8bad\u7ec3\u64cd\u4f5c\uff0c\u4e3a\u5f53\u524d\u7684\u5c0f\u6279\u91cf\u8f93\u5165\u6570\u636e\u548c\u76ee\u6807\u63d0\u4f9b\u3002 \u63a5\u4e0b\u6765\uff0c\u5728\u6bcf\u4e2a\u65f6\u671f\u7ed3\u675f\u65f6\uff0c\u4ee3\u7801\u8bc4\u4f30\u6700\u540e\u4e00\u4e2a\u5c0f\u6279\u91cf\u548c\u5b8c\u6574\u8bad\u7ec3\u96c6\u4e0a\u7684\u6a21\u578b\uff0c\u5e76\u6253\u5370\u51fa\u7ed3\u679c\u3002 \u6700\u540e\uff0c\u6a21\u578b\u53c2\u6570\u4fdd\u5b58\u5230\u78c1\u76d8\u3002 \u4f7f\u7528\u795e\u7ecf\u7f51\u7edc \u73b0\u5728\u795e\u7ecf\u7f51\u7edc\u88ab\u8bad\u7ec3\u4e86\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u8fdb\u884c\u9884\u6d4b\u3002 \u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u5efa\u6a21\u9636\u6bb5\uff0c\u4f46\u662f\u66f4\u6539\u6267\u884c\u9636\u6bb5\uff0c\u5982\u4e0b\u6240\u793a\uff1a with tf.Session() as sess: saver.restore(sess, \"./my_model_final.ckpt\") # or better, use save_path X_new_scaled = mnist.test.images[:20] Z = logits.eval(feed_dict={X: X_new_scaled}) y_pred = np.argmax(Z, axis=1) \u9996\u5148\uff0c\u4ee3\u7801\u4ece\u78c1\u76d8\u52a0\u8f7d\u6a21\u578b\u53c2\u6570\u3002 \u7136\u540e\u52a0\u8f7d\u4e00\u4e9b\u60a8\u60f3\u8981\u5206\u7c7b\u7684\u65b0\u56fe\u50cf\u3002 \u8bb0\u4f4f\u5e94\u7528\u4e0e\u8bad\u7ec3\u6570\u636e\u76f8\u540c\u7684\u7279\u5f81\u7f29\u653e\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u5176\u4ece 0 \u7f29\u653e\u5230 1\uff09\u3002 \u7136\u540e\u4ee3\u7801\u8bc4\u4f30\u5bf9\u6570\u70b9\u8282\u70b9\u3002 \u5982\u679c\u60a8\u60f3\u77e5\u9053\u6240\u6709\u4f30\u8ba1\u7684\u7c7b\u6982\u7387\uff0c\u5219\u9700\u8981\u5c06 softmax() \u51fd\u6570\u5e94\u7528\u4e8e\u5bf9\u6570\uff0c\u4f46\u5982\u679c\u60a8\u53ea\u60f3\u9884\u6d4b\u4e00\u4e2a\u7c7b\uff0c\u5219\u53ef\u4ee5\u7b80\u5355\u5730\u9009\u62e9\u5177\u6709\u6700\u9ad8 logit \u503c\u7684\u7c7b\uff08\u4f7f\u7528 argmax() \u51fd\u6570\u505a\u7684\u4f0e\u4fe9\uff09\u3002 \u5fae\u8c03\u795e\u7ecf\u7f51\u7edc\u8d85\u53c2\u6570 \u795e\u7ecf\u7f51\u7edc\u7684\u7075\u6d3b\u6027\u4e5f\u662f\u5176\u4e3b\u8981\u7f3a\u70b9\u4e4b\u4e00\uff1a\u6709\u5f88\u591a\u8d85\u53c2\u6570\u8981\u8fdb\u884c\u8c03\u6574\u3002 \u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u53ef\u60f3\u8c61\u7684\u7f51\u7edc\u62d3\u6251\uff08\u5982\u4f55\u795e\u7ecf\u5143\u4e92\u8fde\uff09\uff0c\u800c\u4e14\u5373\u4f7f\u5728\u7b80\u5355\u7684 MLP \u4e2d\uff0c\u60a8\u53ef\u4ee5\u66f4\u6539\u5c42\u6570\uff0c\u6bcf\u5c42\u795e\u7ecf\u5143\u6570\uff0c\u6bcf\u5c42\u4f7f\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\u7c7b\u578b\uff0c\u6743\u91cd\u521d\u59cb\u5316\u903b\u8f91\u7b49\u7b49\u3002 \u4f60\u600e\u4e48\u77e5\u9053\u4ec0\u4e48\u7ec4\u5408\u7684\u8d85\u53c2\u6570\u662f\u6700\u9002\u5408\u4f60\u7684\u4efb\u52a1\uff1f \u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5177\u6709\u4ea4\u53c9\u9a8c\u8bc1\u7684\u7f51\u683c\u641c\u7d22\u6765\u67e5\u627e\u6b63\u786e\u7684\u8d85\u53c2\u6570\uff0c\u5c31\u50cf\u60a8\u5728\u524d\u51e0\u7ae0\u4e2d\u6240\u505a\u7684\u90a3\u6837\uff0c\u4f46\u662f\u7531\u4e8e\u8981\u8c03\u6574\u8bb8\u591a\u8d85\u53c2\u6570\uff0c\u5e76\u4e14\u7531\u4e8e\u5728\u5927\u578b\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u9700\u8981\u5f88\u591a\u65f6\u95f4\uff0c \u60a8\u53ea\u80fd\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u63a2\u7d22\u8d85\u53c2\u6570\u7a7a\u95f4\u7684\u4e00\u5c0f\u90e8\u5206\u3002 \u6b63\u5982\u6211\u4eec\u5728\u7b2c2\u7ae0\u4e2d\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u4f7f\u7528 \u968f\u673a\u641c\u7d22 \u8981\u597d\u5f97\u591a\u3002\u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u4f7f\u7528\u8bf8\u5982 Oscar \u4e4b\u7c7b\u7684\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u7b97\u6cd5\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u627e\u5230\u4e00\u7ec4\u597d\u7684\u8d85\u53c2\u6570. \u5b83\u6709\u52a9\u4e8e\u4e86\u89e3\u6bcf\u4e2a\u8d85\u7ea7\u53c2\u6570\u7684\u503c\u662f\u5408\u7406\u7684\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u9650\u5236\u641c\u7d22\u7a7a\u95f4\u3002 \u6211\u4eec\u4ece\u9690\u85cf\u5c42\u6570\u5f00\u59cb\u3002 \u9690\u85cf\u5c42\u6570\u91cf \u5bf9\u4e8e\u8bb8\u591a\u95ee\u9898\uff0c\u60a8\u53ea\u9700\u4ece\u5355\u4e2a\u9690\u85cf\u5c42\u5f00\u59cb\uff0c\u60a8\u5c06\u83b7\u5f97\u5408\u7406\u7684\u7ed3\u679c\u3002 \u5b9e\u9645\u4e0a\u5df2\u7ecf\u8868\u660e\uff0c\u53ea\u6709\u4e00\u4e2a\u9690\u85cf\u5c42\u7684 MLP \u53ef\u4ee5\u5efa\u6a21\u751a\u81f3\u6700\u590d\u6742\u7684\u529f\u80fd\uff0c\u53ea\u8981\u5b83\u5177\u6709\u8db3\u591f\u7684\u795e\u7ecf\u5143\u3002 \u957f\u671f\u4ee5\u6765\uff0c\u8fd9\u4e9b\u4e8b\u5b9e\u8bf4\u670d\u4e86\u7814\u7a76\u4eba\u5458\uff0c\u6ca1\u6709\u5fc5\u8981\u8c03\u67e5\u4efb\u4f55\u66f4\u6df1\u5c42\u6b21\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u4f46\u662f\u4ed6\u4eec\u5ffd\u7565\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u6df1\u5c42\u7f51\u7edc\u5177\u6709\u6bd4\u6d45\u5c42\u7f51\u7edc\u66f4\u9ad8\u7684\u53c2\u6570\u6548\u7387\uff1a\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u6bd4\u6d45\u7f51\u683c\u66f4\u5c11\u7684\u795e\u7ecf\u5143\u6765\u5efa\u6a21\u590d\u6742\u7684\u51fd\u6570\uff0c\u4f7f\u5f97\u8bad\u7ec3\u66f4\u5feb\u3002 \u8981\u4e86\u89e3\u4e3a\u4ec0\u4e48\uff0c\u5047\u8bbe\u60a8\u88ab\u8981\u6c42\u4f7f\u7528\u4e00\u4e9b\u7ed8\u56fe\u8f6f\u4ef6\u7ed8\u5236\u4e00\u4e2a\u68ee\u6797\uff0c\u4f46\u662f\u60a8\u88ab\u7981\u6b62\u4f7f\u7528\u590d\u5236/\u7c98\u8d34\u3002 \u4f60\u5fc5\u987b\u5355\u72ec\u7ed8\u5236\u6bcf\u68f5\u6811\uff0c\u6bcf\u679d\u5206\u679d\uff0c\u6bcf\u53f6\u53f6\u3002 \u5982\u679c\u4f60\u53ef\u4ee5\u753b\u4e00\u4e2a\u53f6\uff0c\u590d\u5236/\u7c98\u8d34\u5b83\u6765\u7ed8\u5236\u4e00\u4e2a\u5206\u652f\uff0c\u7136\u540e\u590d\u5236/\u7c98\u8d34\u8be5\u5206\u652f\u6765\u521b\u5efa\u4e00\u4e2a\u6811\uff0c\u6700\u540e\u590d\u5236/\u7c98\u8d34\u8fd9\u4e2a\u6811\u6765\u5236\u4f5c\u4e00\u4e2a\u6797\uff0c\u4f60\u5c06\u5f88\u5feb\u5b8c\u6210\u3002 \u73b0\u5b9e\u4e16\u754c\u7684\u6570\u636e\u901a\u5e38\u4ee5\u8fd9\u6837\u4e00\u79cd\u5206\u5c42\u7684\u65b9\u5f0f\u8fdb\u884c\u7ed3\u6784\u5316\uff0cDNN \u81ea\u52a8\u5229\u7528\u8fd9\u4e00\u4e8b\u5b9e\uff1a\u8f83\u4f4e\u7684\u9690\u85cf\u5c42\u6a21\u62df\u4f4e\u7ea7\u7ed3\u6784\uff08\u4f8b\u5982\uff0c\u5404\u79cd\u5f62\u72b6\u548c\u65b9\u5411\u7684\u7ebf\u6bb5\uff09\uff0c\u4e2d\u95f4\u9690\u85cf\u5c42\u5c06\u8fd9\u4e9b\u4f4e\u7ea7\u7ed3\u6784\u7ec4\u5408\u5230 \u6a21\u578b\u4e2d\u7ea7\u7ed3\u6784\uff08\u4f8b\u5982\uff0c\u6b63\u65b9\u5f62\uff0c\u5706\u5f62\uff09\u548c\u6700\u9ad8\u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42\u5c06\u8fd9\u4e9b\u4e2d\u95f4\u7ed3\u6784\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4ee5\u6a21\u62df\u9ad8\u7ea7\u7ed3\u6784\uff08\u5982\u9762\uff09\u3002 \u8fd9\u79cd\u5206\u5c42\u67b6\u6784\u4e0d\u4ec5\u53ef\u4ee5\u5e2e\u52a9 DNN \u66f4\u5feb\u5730\u878d\u5408\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u63d0\u9ad8\u5176\u5c06\u5176\u63a8\u5e7f\u5230\u65b0\u6570\u636e\u96c6\u7684\u80fd\u529b\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5df2\u7ecf\u8bad\u7ec3\u4e86\u6a21\u578b\u4ee5\u8bc6\u522b\u56fe\u7247\u4e2d\u7684\u8138\u90e8\uff0c\u5e76\u4e14\u60a8\u73b0\u5728\u60f3\u8981\u8bad\u7ec3\u4e00\u4e2a\u65b0\u7684\u795e\u7ecf\u7f51\u7edc\u6765\u8bc6\u522b\u53d1\u578b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u4f7f\u7528\u7b2c\u4e00\u4e2a\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\u6b21\u6765\u542f\u52a8\u8bad\u7ec3\u3002 \u800c\u4e0d\u662f\u968f\u673a\u521d\u59cb\u5316\u65b0\u795e\u7ecf\u7f51\u7edc\u7684\u524d\u51e0\u5c42\u7684\u6743\u91cd\u548c\u504f\u7f6e\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u521d\u59cb\u5316\u4e3a\u7b2c\u4e00\u4e2a\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\u7684\u6743\u91cd\u548c\u504f\u7f6e\u7684\u503c\u3002\u8fd9\u6837\uff0c\u7f51\u7edc\u5c06\u4e0d\u5fc5\u4ece\u5927\u591a\u6570\u56fe\u7247\u4e2d\u4f4e\u7ed3\u6784\u4e2d\u4ece\u5934\u5b66\u4e60\uff1b\u5b83\u53ea\u9700\u8981\u5b66\u4e60\u66f4\u9ad8\u5c42\u6b21\u7684\u7ed3\u6784\uff08\u4f8b\u5982\u53d1\u578b\uff09\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u5bf9\u4e8e\u8bb8\u591a\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u4ece\u4e00\u4e2a\u6216\u4e24\u4e2a\u9690\u85cf\u5c42\u5f00\u59cb\uff0c\u5b83\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff08\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u53ea\u6709\u4e00\u4e2a\u9690\u85cf\u5c42\u548c\u51e0\u767e\u4e2a\u795e\u7ecf\u5143\uff0c\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u5bb9\u6613\u8fbe\u5230 97% \u4ee5\u4e0a\u7684\u51c6\u786e\u5ea6\u4f7f\u7528\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u603b\u795e\u7ecf\u5143\u6570\u91cf\u7684\u9690\u85cf\u5c42\uff0c\u5728\u5927\u81f4\u76f8\u540c\u7684\u8bad\u7ec3\u65f6\u95f4\u91cf\u4e2d\u7cbe\u786e\u5ea6\u4e3a 98%\uff09\u3002\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u9010\u6e10\u589e\u52a0\u9690\u85cf\u5c42\u7684\u6570\u91cf\uff0c\u76f4\u5230\u60a8\u5f00\u59cb\u8986\u76d6\u8bad\u7ec3\u96c6\u3002\u975e\u5e38\u590d\u6742\u7684\u4efb\u52a1\uff0c\u4f8b\u5982\u5927\u578b\u56fe\u50cf\u5206\u7c7b\u6216\u8bed\u97f3\u8bc6\u522b\uff0c\u901a\u5e38\u9700\u8981\u5177\u6709\u6570\u5341\u4e2a\u5c42\uff08\u6216\u751a\u81f3\u6570\u767e\u4e2a\u4f46\u4e0d\u5b8c\u5168\u76f8\u8fde\u7684\u7f51\u7edc\uff09\u7684\u7f51\u7edc\uff0c\u6b63\u5982\u6211\u4eec\u5c06\u5728\u7b2c 13 \u7ae0\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff09\uff0c\u5e76\u4e14\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u3002\u4f46\u662f\uff0c\u60a8\u5c06\u5f88\u5c11\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\u8fd9\u6837\u7684\u7f51\u7edc\uff1a\u91cd\u7528\u9884\u5148\u8bad\u7ec3\u7684\u6700\u5148\u8fdb\u7684\u7f51\u7edc\u6267\u884c\u7c7b\u4f3c\u4efb\u52a1\u7684\u90e8\u5206\u66f4\u4e3a\u5e38\u89c1\u3002\u8bad\u7ec3\u5c06\u4f1a\u66f4\u5feb\uff0c\u9700\u8981\u66f4\u5c11\u7684\u6570\u636e\uff08\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u8fdb\u884c\u8ba8\u8bba\uff09 \u6bcf\u5c42\u9690\u85cf\u5c42\u7684\u795e\u7ecf\u5143\u6570\u91cf \u663e\u7136\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u5c42\u4e2d\u795e\u7ecf\u5143\u7684\u6570\u91cf\u7531\u60a8\u7684\u4efb\u52a1\u9700\u8981\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7c7b\u578b\u51b3\u5b9a\u3002\u4f8b\u5982\uff0cMNIST \u4efb\u52a1\u9700\u8981 28\u00d728 = 784 \u4e2a\u8f93\u5165\u795e\u7ecf\u5143\u548c 10 \u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u3002\u5bf9\u4e8e\u9690\u85cf\u7684\u5c42\u6b21\u6765\u8bf4\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5f62\u6210\u4e00\u4e2a\u6f0f\u6597\uff0c\u6bcf\u4e2a\u5c42\u9762\u4e0a\u7684\u795e\u7ecf\u5143\u8d8a\u6765\u8d8a\u5c11\uff0c\u539f\u56e0\u5728\u4e8e\u8bb8\u591a\u4f4e\u7ea7\u522b\u529f\u80fd\u53ef\u4ee5\u5408\u5e76\u6210\u66f4\u5c11\u7684\u9ad8\u7ea7\u529f\u80fd\u3002\u4f8b\u5982\uff0cMNIST \u7684\u5178\u578b\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u5177\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\uff0c\u7b2c\u4e00\u4e2a\u5177\u6709 300 \u4e2a\u795e\u7ecf\u5143\uff0c\u7b2c\u4e8c\u4e2a\u5177\u6709 100 \u4e2a\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u505a\u6cd5\u73b0\u5728\u5e76\u4e0d\u5e38\u89c1\uff0c\u60a8\u53ef\u4ee5\u4e3a\u6240\u6709\u9690\u85cf\u5c42\u4f7f\u7528\u76f8\u540c\u7684\u5927\u5c0f - \u4f8b\u5982\uff0c\u6240\u6709\u9690\u85cf\u7684\u5c42\u4e0e 150 \u4e2a\u795e\u7ecf\u5143\uff1a\u8fd9\u6837\u53ea\u7528\u8c03\u6574\u4e00\u6b21\u8d85\u53c2\u6570\u800c\u4e0d\u662f\u6bcf\u5c42\u90fd\u9700\u8981\u8c03\u6574\uff08\u56e0\u4e3a\u5982\u679c\u6bcf\u5c42\u4e00\u6837\uff0c\u6bd4\u5982 150\uff0c\u4e4b\u540e\u8c03\u5c31\u6bcf\u5c42\u90fd\u8c03\u6210 160\uff09\u3002\u5c31\u50cf\u5c42\u6570\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u9010\u6e10\u589e\u52a0\u795e\u7ecf\u5143\u7684\u6570\u91cf\uff0c\u76f4\u5230\u7f51\u7edc\u5f00\u59cb\u8fc7\u5ea6\u62df\u5408\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u901a\u8fc7\u589e\u52a0\u6bcf\u5c42\u7684\u795e\u7ecf\u5143\u6570\u91cf\uff0c\u53ef\u4ee5\u589e\u52a0\u5c42\u6570\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u591a\u7684\u6d88\u8017\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u627e\u5230\u5b8c\u7f8e\u7684\u795e\u7ecf\u5143\u6570\u91cf\u4ecd\u7136\u662f\u9ed1\u8272\u7684\u827a\u672f. \u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u9009\u62e9\u4e00\u4e2a\u5177\u6709\u6bd4\u5b9e\u9645\u9700\u8981\u7684\u66f4\u591a\u5c42\u6b21\u548c\u795e\u7ecf\u5143\u7684\u6a21\u578b\uff0c\u7136\u540e\u4f7f\u7528\u65e9\u671f\u505c\u6b62\u6765\u9632\u6b62\u5b83\u8fc7\u5ea6\u62df\u5408\uff08\u4ee5\u53ca\u5176\u4ed6\u6b63\u5219\u5316\u6280\u672f\uff0c\u7279\u522b\u662f drop out\uff0c\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u770b\u5230\uff09\u3002 \u8fd9\u88ab\u79f0\u4e3a\u201c\u62c9\u4f38\u88e4\u201d\u7684\u65b9\u6cd5\uff1a\u800c\u4e0d\u662f\u6d6a\u8d39\u65f6\u95f4\u5bfb\u627e\u5b8c\u7f8e\u5339\u914d\u60a8\u7684\u5927\u5c0f\u7684\u88e4\u5b50\uff0c\u53ea\u9700\u4f7f\u7528\u5927\u578b\u4f38\u7f29\u88e4\uff0c\u7f29\u5c0f\u5230\u5408\u9002\u7684\u5c3a\u5bf8\u3002 \u6fc0\u6d3b\u51fd\u6570 \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u5728\u9690\u85cf\u5c42\u4e2d\u4f7f\u7528 ReLU \u6fc0\u6d3b\u51fd\u6570\uff08\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u4f53\uff0c\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u770b\u5230\uff09\u3002 \u4e0e\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\u76f8\u6bd4\uff0c\u8ba1\u7b97\u901f\u5ea6\u8981\u5feb\u4e00\u4e9b\uff0c\u800c\u68af\u5ea6\u4e0b\u964d\u5728\u5c40\u90e8\u6700\u9ad8\u70b9\u4e0a\u5e76\u4e0d\u4f1a\u88ab\u5361\u4f4f\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5bf9\u5927\u7684\u8f93\u5165\u503c\u9971\u548c\uff08\u4e0e\u903b\u8f91\u51fd\u6570\u6216\u53cc\u66f2\u6b63\u5207\u51fd\u6570\u76f8\u53cd, \u4ed6\u4eec\u5bb9\u6613\u5728 1 \u9971\u548c) \u5bf9\u4e8e\u8f93\u51fa\u5c42\uff0csoftmax \u6fc0\u6d3b\u51fd\u6570\u901a\u5e38\u662f\u5206\u7c7b\u4efb\u52a1\u7684\u826f\u597d\u9009\u62e9\uff08\u5f53\u8fd9\u4e9b\u7c7b\u662f\u4e92\u65a5\u7684\u65f6\uff09\u3002 \u5bf9\u4e8e\u56de\u5f52\u4efb\u52a1\uff0c\u60a8\u5b8c\u5168\u53ef\u4ee5\u4e0d\u4f7f\u7528\u6fc0\u6d3b\u51fd\u6570\u3002 \u8fd9\u5c31\u662f\u4eba\u9020\u795e\u7ecf\u7f51\u7edc\u7684\u8fd9\u4e2a\u4ecb\u7ecd\u3002 \u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u8bad\u7ec3\u975e\u5e38\u6df1\u7684\u7f51\u7edc\u7684\u6280\u672f\uff0c\u5e76\u5206\u53d1\u591a\u4e2a\u670d\u52a1\u5668\u548c GPU \u7684\u8bad\u7ec3\u3002 \u7136\u540e\u6211\u4eec\u5c06\u63a2\u8ba8\u4e00\u4e9b\u5176\u4ed6\u6d41\u884c\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\uff1a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u548c\u81ea\u52a8\u7f16\u7801\u5668\u3002 \u5b8c\u6574\u4ee3\u7801 from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf from sklearn.metrics import accuracy_score import numpy as np if __name__ == '__main__': n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 100 n_outputs = 10 mnist = input_data.read_data_sets(\"/tmp/data/\") X_train = mnist.train.images X_test = mnist.test.images y_train = mnist.train.labels.astype(\"int\") y_test = mnist.test.labels.astype(\"int\") X = tf.placeholder(tf.float32, shape= (None, n_inputs), name='X') y = tf.placeholder(tf.int64, shape=(None), name = 'y') with tf.name_scope('dnn'): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu ,name= 'hidden1') hidden2 = tf.layers.dense(hidden1, n_hidden2, name='hidden2', activation= tf.nn.relu) logits = tf.layers.dense(hidden2, n_outputs, name='outputs') with tf.name_scope('loss'): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels = y, logits = logits) loss = tf.reduce_mean(xentropy, name='loss')#\u6240\u6709\u503c\u6c42\u5e73\u5747 learning_rate = 0.01 with tf.name_scope('train'): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) with tf.name_scope('eval'): correct = tf.nn.in_top_k(logits ,y ,1)#\u662f\u5426\u4e0e\u771f\u503c\u4e00\u81f4 \u8fd4\u56de\u5e03\u5c14\u503c accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) #tf.cast\u5c06\u6570\u636e\u8f6c\u5316\u4e3a0,1\u5e8f\u5217 init = tf.global_variables_initializer() n_epochs = 20 batch_size = 50 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op,feed_dict={X:X_batch, y: y_batch}) acc_train = accuracy.eval(feed_dict={X:X_batch, y: y_batch}) acc_test = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Train accuracy:\", acc_train, \"Test accuracy:\", acc_test) \u7ec3\u4e60 \u4f7f\u7528\u539f\u59cb\u7684\u4eba\u5de5\u795e\u7ecf\u5143\uff08\u5982\u56fe 10-3 \u4e2d\u7684\u4e00\u4e2a\uff09\u6765\u8ba1\u7b97\u795e\u7ecf\u7f51\u7edc\uff0c\u8ba1\u7b97 A \u2295 B \uff08 \u2295 \u8868\u793a XOR \u8fd0\u7b97\uff09\u3002\u63d0\u793a\uff1a A \u2295 B = (A \u2227 \u00ac B) \u2228 (\u00ac A \u2227 B) \u3002 \u4e3a\u4ec0\u4e48\u901a\u5e38\u4f7f\u7528\u903b\u8f91\u65af\u8482\u56de\u5f52\u5206\u7c7b\u5668\u800c\u4e0d\u662f\u7ecf\u5178\u611f\u77e5\u5668\uff08\u5373\u4f7f\u7528\u611f\u77e5\u5668\u8bad\u7ec3\u7b97\u6cd5\u8bad\u7ec3\u5355\u5c42\u7684\u7ebf\u6027\u9608\u503c\u5355\u5143\uff09\uff1f\u4f60\u5982\u4f55\u8c03\u6574\u611f\u77e5\u5668\u4f7f\u4e4b\u7b49\u540c\u4e8e\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\uff1f \u4e3a\u4ec0\u4e48\u6fc0\u6d3b\u51fd\u6570\u662f\u8bad\u7ec3\u7b2c\u4e00\u4e2a MLP \u7684\u5173\u952e\u56e0\u7d20\uff1f \u8bf4\u51fa\u4e09\u79cd\u6d41\u884c\u7684\u6fc0\u6d3b\u51fd\u6570\u3002\u4f60\u80fd\u753b\u51fa\u5b83\u4eec\u5417\uff1f \u5047\u8bbe\u6709\u4e00\u4e2a MLP \u6709\u4e00\u4e2a 10 \u4e2a\u795e\u7ecf\u5143\u7ec4\u6210\u7684\u8f93\u5165\u5c42\uff0c\u63a5\u7740\u662f\u4e00\u4e2a 50 \u4e2a\u795e\u7ecf\u5143\u7684\u9690\u85cf\u5c42\uff0c\u6700\u540e\u4e00\u4e2a 3 \u4e2a\u795e\u7ecf\u5143\u8f93\u51fa\u5c42\u3002\u6240\u6709\u4eba\u5de5\u795e\u7ecf\u5143\u4f7f\u7528 Relu \u6fc0\u6d3b\u51fd\u6570\u3002 \u8f93\u5165\u77e9\u9635 X \u7684\u5f62\u72b6\u662f\u4ec0\u4e48\uff1f \u9690\u85cf\u5c42\u7684\u6743\u91cd\u5411\u91cf\u7684\u5f62\u72b6\u4ee5\u53ca\u5b83\u7684\u504f\u7f6e\u5411\u91cf\u7684\u5f62\u72b6\u5982\u4f55\uff1f \u8f93\u51fa\u5c42\u7684\u6743\u91cd\u5411\u91cf\u548c\u5b83\u7684\u504f\u7f6e\u5411\u91cf\u7684\u5f62\u72b6\u662f\u4ec0\u4e48\uff1f \u7f51\u7edc\u7684\u8f93\u51fa\u77e9\u9635 Y \u662f\u4ec0\u4e48\u5f62\u72b6\uff1f \u5199\u51fa\u8ba1\u7b97\u7f51\u7edc\u8f93\u51fa\u77e9\u9635\u7684\u65b9\u7a0b \u5982\u679c\u4f60\u60f3\u628a\u7535\u5b50\u90ae\u4ef6\u5206\u7c7b\u6210\u5783\u573e\u90ae\u4ef6\u6216\u6b63\u5e38\u90ae\u4ef6\uff0c\u4f60\u9700\u8981\u5728\u8f93\u51fa\u5c42\u4e2d\u6709\u591a\u5c11\u4e2a\u795e\u7ecf\u5143\uff1f\u5728\u8f93\u51fa\u5c42\u4e2d\u5e94\u8be5\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u6fc0\u6d3b\u51fd\u6570\uff1f\u5982\u679c\u4f60\u60f3\u89e3\u51b3 MNIST \u95ee\u9898\uff0c\u4f60\u9700\u8981\u591a\u5c11\u795e\u7ecf\u5143\u5728\u8f93\u51fa\u5c42\uff0c\u4f7f\u7528\u4ec0\u4e48\u6fc0\u6d3b\u51fd\u6570\uff1f\u5982\u7b2c 2 \u7ae0\uff0c\u4e00\u6837\u8ba9\u4f60\u7684\u7f51\u7edc\u9884\u6d4b\u623f\u5c4b\u4ef7\u683c\u3002 \u4ec0\u4e48\u662f\u53cd\u5411\u4f20\u64ad\uff0c\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\u53cd\u5411\u4f20\u64ad\u4e0e\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u4f60\u80fd\u5217\u51fa\u6240\u6709\u53ef\u4ee5\u5728 MLP \u4e2d\u8c03\u6574\u7684\u8d85\u53c2\u6570\u5417\uff1f\u5982\u679c MLP \u4e0e\u8bad\u7ec3\u6570\u636e\u76f8\u5339\u914d\uff0c\u4f60\u5982\u4f55\u8c03\u6574\u8fd9\u4e9b\u8d85\u53c2\u6570\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f \u5728 MNIST \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u6df1\u5c42 MLP \u5e76\u67e5\u770b\u662f\u5426\u53ef\u4ee5\u8d85\u8fc7 98% \u7684\u7cbe\u5ea6\u3002\u5c31\u50cf\u5728\u7b2c 9 \u7ae0\u7684\u6700\u540e\u4e00\u6b21\u7ec3\u4e60\u4e2d\uff0c\u5c1d\u8bd5\u6dfb\u52a0\u6240\u6709\u7684\u94c3\u58f0\u548c\u54e8\u5b50\uff08\u5373\uff0c\u4fdd\u5b58\u68c0\u67e5\u70b9\uff0c\u5728\u4e2d\u65ad\u7684\u60c5\u51b5\u4e0b\u6062\u590d\u6700\u540e\u4e00\u4e2a\u68c0\u67e5\u70b9\uff0c\u6dfb\u52a0\u6458\u8981\uff0c\u4f7f\u7528 TensorBoard \u7ed8\u5236\u5b66\u4e60\u66f2\u7ebf\uff0c\u7b49\u7b49\uff09\u3002 \u7ec3\u4e60\u7684\u7b54\u6848\u8bf7\u53c2\u7167\u9644\u5f55 A","title":"10.\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4ecb\u7ecd"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_1","text":"\u9e1f\u7c7b\u542f\u53d1\u6211\u4eec\u98de\u7fd4\uff0c\u725b\u84a1\u690d\u7269\u542f\u53d1\u4e86\u5c3c\u9f99\u7ef3\uff0c\u5927\u81ea\u7136\u4e5f\u6fc0\u53d1\u4e86\u8bb8\u591a\u5176\u4ed6\u53d1\u660e\u3002\u4ece\u903b\u8f91\u4e0a\u770b\uff0c\u5927\u8111\u662f\u5982\u4f55\u6784\u5efa\u667a\u80fd\u673a\u5668\u7684\u7075\u611f\u3002\u8fd9\u662f\u542f\u53d1\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff08ANN\uff09\u7684\u5173\u952e\u601d\u60f3\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u98de\u673a\u53d7\u5230\u9e1f\u7c7b\u7684\u542f\u53d1\uff0c\u4f46\u5b83\u4eec\u4e0d\u5fc5\u62cd\u52a8\u7fc5\u8180\u3002\u540c\u6837\u7684\uff0cANN \u9010\u6e10\u53d8\u5f97\u4e0e\u4ed6\u4eec\u7684\u751f\u7269\u8868\u5144\u5f1f\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u4e00\u4e9b\u7814\u7a76\u8005\u751a\u81f3\u4e89\u8fa9\u8bf4\uff0c\u6211\u4eec\u5e94\u8be5\u5b8c\u5168\u653e\u5f03\u751f\u7269\u7c7b\u6bd4\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u8bf4\u201c\u5355\u4f4d\u201d\u800c\u4e0d\u662f\u201c\u795e\u7ecf\u5143\u201d\uff09\uff0c\u4ee5\u514d\u6211\u4eec\u628a\u6211\u4eec\u7684\u521b\u9020\u529b\u9650\u5236\u5728\u751f\u7269\u5b66\u7684\u7cfb\u7edf\u4e0a\u3002 \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u662f\u6df1\u5ea6\u5b66\u4e60\u7684\u6838\u5fc3\u3002\u5b83\u4eec\u5177\u6709\u901a\u7528\u6027\u3001\u5f3a\u5927\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u4f7f\u5f97\u5b83\u4eec\u80fd\u591f\u5f88\u597d\u5730\u89e3\u51b3\u5927\u578b\u548c\u9ad8\u5ea6\u590d\u6742\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u4f8b\u5982\u5206\u7c7b\u6570\u5341\u4ebf\u56fe\u50cf\uff08\u4f8b\u5982\uff0c\u8c37\u6b4c\u56fe\u50cf\uff09\uff0c\u5f3a\u5927\u7684\u8bed\u97f3\u8bc6\u522b\u670d\u52a1\uff08\u4f8b\u5982\uff0c\u82f9\u679c\u7684 Siri\uff09\uff0c\u901a\u8fc7\u6bcf\u5929\u8ffd\u8e2a\u6570\u767e\u4e07\u7684\u7528\u6237\u7684\u884c\u4e3a\u63a8\u8350\u6700\u597d\u7684\u89c6\u9891\uff08\u6bd4\u5982 YouTube\uff09\uff0c\u6216\u8005\u901a\u8fc7\u5728\u6e38\u620f\u4e2d\u51fb\u8d25\u4e16\u754c\u51a0\u519b\uff0c\u901a\u8fc7\u5b66\u4e60\u6570\u767e\u4e07\u7684\u6e38\u620f\uff0c\u7136\u540e\u4e0e\u81ea\u5df1\u5bf9\u6297\uff08DeepMind \u7684 AlgFaGo\uff09\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff0c\u4ece\u5feb\u901f\u6e38\u89c8\u7684\u7b2c\u4e00\u4e2aANN\u67b6\u6784\u5f00\u59cb\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u63d0\u51fa\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\uff0c\u5e76\u57fa\u4e8eTensorFlow\u5b9e\u73b0MNIST\u6570\u5b57\u5206\u7c7b\u95ee\u9898\uff08\u5728\u7b2c3\u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002","title":"\u5341\u3001\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4ecb\u7ecd"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_2","text":"\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u5df2\u7ecf\u5b58\u5728\u4e86\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\uff1a\u5b83\u4eec\u6700\u521d\u662f\u7531\u795e\u7ecf\u751f\u7406\u5b66\u5bb6 Warren McCulloch \u548c\u6570\u5b66\u5bb6 Walter Pitts \u5728 1943 \u63d0\u51fa\u3002McCulloch \u548c Pitts \u5728\u5176\u91cc\u7a0b\u7891\u5f0f\u7684\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u201c\u795e\u7ecf\u6d3b\u52a8\u5185\u5728\u7684\u903b\u8f91\u6f14\u7b97\u201d\uff0c\u63d0\u51fa\u4e86\u4e00\u4e2a\u7b80\u5316\u7684\u8ba1\u7b97\u6a21\u578b\uff0c\u5373\u751f\u7269\u795e\u7ecf\u5143\u5982\u4f55\u5728\u52a8\u7269\u5927\u8111\u4e2d\u534f\u540c\u5de5\u4f5c\uff0c\u7528\u903b\u8f91\u8fdb\u884c\u590d\u6742\u7684\u8ba1\u7b97\u3002\u8fd9\u662f\u7b2c\u4e00\u4e2a\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0c\u8bb8\u591a\u5176\u4ed6\u7684\u795e\u7ecf\u5143\u7ed3\u6784\u5df2\u7ecf\u88ab\u53d1\u660e\uff0c \u76f4\u5230 20 \u4e16\u7eaa 60 \u5e74\u4ee3\uff0c\u5b89\u7eb3\u65af\u7684\u65e9\u671f\u6210\u529f\u624d\u4f7f\u4eba\u4eec\u666e\u904d\u76f8\u4fe1\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u4e0e\u771f\u6b63\u7684\u667a\u80fd\u673a\u5668\u5bf9\u8bdd\u3002\u5f53\u663e\u7136\u7684\u8fd9\u4e2a\u627f\u8bfa\u5c06\u4e0d\u4f1a\u88ab\u5151\u73b0\uff08\u81f3\u5c11\u76f8\u5f53\u957f\u4e00\u6bb5\u65f6\u95f4\uff09\u65f6\uff0c\u8d44\u91d1\u98de\u5411\u522b\u5904\uff0cANN \u8fdb\u5165\u4e86\u4e00\u4e2a\u6f2b\u957f\u7684\u9ed1\u6697\u65f6\u4ee3\u300220 \u4e16\u7eaa 80 \u5e74\u4ee3\u521d\uff0c\u968f\u7740\u65b0\u7684\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u7684\u53d1\u660e\u548c\u66f4\u597d\u7684\u8bad\u7ec3\u6280\u672f\u7684\u53d1\u5c55\uff0c\u4eba\u4eec\u5bf9\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u5174\u8da3\u4e5f\u5728\u91cd\u65b0\u71c3\u8d77\u3002\u4f46\u5230\u4e86 20 \u4e16\u7eaa 90 \u5e74\u4ee3\uff0c\u5f3a\u5927\u7684\u53ef\u66ff\u4ee3\u673a\u5668\u5b66\u4e60\u6280\u672f\u7684\uff0c\u5982\u652f\u6301\u5411\u91cf\u673a\uff08\u89c1\u7b2c5\u7ae0\uff09\u53d7\u5230\u5927\u591a\u6570\u7814\u7a76\u8005\u7684\u9752\u7750\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f3c\u4e4e\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u7ed3\u679c\u548c\u66f4\u5f3a\u7684\u7406\u8bba\u57fa\u7840\u3002\u6700\u540e\uff0c\u6211\u4eec\u73b0\u5728\u76ee\u7779\u4e86\u53e6\u4e00\u80a1\u5bf9 ANN \u611f\u5174\u8da3\u7684\u6d6a\u6f6e\u3002\u8fd9\u6ce2\u4f1a\u50cf\u4ee5\u524d\u4e00\u6837\u6d88\u5931\u5417\uff1f\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u7406\u7531\u76f8\u4fe1\uff0c\u8fd9\u4e00\u70b9\u662f\u4e0d\u540c\u7684\uff0c\u5c06\u4f1a\u5bf9\u6211\u4eec\u7684\u751f\u6d3b\u4ea7\u751f\u66f4\u6df1\u8fdc\u7684\u5f71\u54cd\uff1a \u73b0\u5728\u6709\u5927\u91cf\u7684\u6570\u636e\u53ef\u7528\u4e8e\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\uff0cANN \u5728\u8bb8\u591a\u975e\u5e38\u590d\u6742\u7684\u95ee\u9898\u4e0a\u7ecf\u5e38\u4f18\u4e8e\u5176\u4ed6 ML \u6280\u672f\u3002 \u81ea\u4ece 90 \u5e74\u4ee3\u4ee5\u6765\uff0c\u8ba1\u7b97\u80fd\u529b\u7684\u5de8\u5927\u589e\u957f\u4f7f\u5f97\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u8bad\u7ec3\u5927\u578b\u795e\u7ecf\u7f51\u7edc\u6210\u4e3a\u53ef\u80fd\u3002\u8fd9\u90e8\u5206\u662f\u7531\u4e8e\u7a46\u5c14\u5b9a\u5f8b\uff0c\u4f46\u4e5f\u5f97\u76ca\u4e8e\u6e38\u620f\u4ea7\u4e1a\uff0c\u5b83\u5df2\u7ecf\u4ea7\u751f\u4e86\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u5f3a\u5927\u7684 GPU \u663e\u5361\u3002 \u6539\u8fdb\u4e86\u8bad\u7ec3\u7b97\u6cd5\u3002\u516c\u5e73\u5730\u8bf4\uff0c\u5b83\u4eec\u4e0e\u4e0a\u4e16\u7eaa 90 \u5e74\u4ee3\u4f7f\u7528\u7684\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u8fd9\u4e9b\u76f8\u5bf9\u8f83\u5c0f\u7684\u8c03\u6574\u4ea7\u751f\u4e86\u5de8\u5927\u7684\u6b63\u9762\u5f71\u54cd\u3002 \u5728\u5b9e\u8df5\u4e2d\uff0c\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e9b\u7406\u8bba\u5c40\u9650\u6027\u662f\u826f\u6027\u7684\u3002\u4f8b\u5982\uff0c\u8bb8\u591a\u4eba\u8ba4\u4e3a\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u7b97\u6cd5\u662f\u6ce8\u5b9a\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f88\u53ef\u80fd\u9677\u5165\u5c40\u90e8\u6700\u4f18\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u5728\u5b9e\u8df5\u4e2d\u662f\u76f8\u5f53\u7f55\u89c1\u7684\uff08\u6216\u8005\u5982\u679c\u5b83\u53d1\u751f\uff0c\u5b83\u4eec\u4e5f\u901a\u5e38\u76f8\u5f53\u63a5\u8fd1\u5168\u5c40\u6700\u4f18\uff09\u3002 ANN \u4f3c\u4e4e\u5df2\u7ecf\u8fdb\u5165\u4e86\u8d44\u91d1\u548c\u8fdb\u6b65\u7684\u826f\u6027\u5faa\u73af\u3002\u57fa\u4e8e ANN \u7684\u60ca\u4eba\u4ea7\u54c1\u5b9a\u671f\u6210\u4e3a\u5934\u6761\u65b0\u95fb\uff0c\u5438\u5f15\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\u548c\u8d44\u91d1\uff0c\u5bfc\u81f4\u8d8a\u6765\u8d8a\u591a\u7684\u8fdb\u6b65\uff0c\u751a\u81f3\u66f4\u60ca\u4eba\u7684\u4ea7\u54c1\u3002","title":"\u4ece\u751f\u7269\u5230\u4eba\u5de5\u795e\u7ecf\u5143"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_3","text":"\u5728\u6211\u4eec\u8ba8\u8bba\u4eba\u5de5\u795e\u7ecf\u5143\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5feb\u901f\u770b\u4e00\u4e2a\u751f\u7269\u795e\u7ecf\u5143\uff08\u5982\u56fe 10-1 \u6240\u793a\uff09\u3002\u5b83\u662f\u4e00\u79cd\u5f02\u5e38\u7ec6\u80de\uff0c\u4e3b\u8981\u89c1\u4e8e\u52a8\u7269\u5927\u8111\u76ae\u5c42\uff08\u4f8b\u5982\uff0c\u4f60\u7684\u5927\u8111\uff09\uff0c\u7531\u5305\u542b\u7ec6\u80de\u6838\u548c\u5927\u591a\u6570\u7ec6\u80de\u590d\u6742\u6210\u5206\u7684\u7ec6\u80de\u4f53\u7ec4\u6210\uff0c\u8bb8\u591a\u5206\u652f\u6269\u5c55\u79f0\u4e3a\u6811\u7a81\uff0c\u52a0\u4e0a\u4e00\u4e2a\u975e\u5e38\u957f\u7684\u5ef6\u4f38\u79f0\u4e3a\u8f74\u7a81\u3002\u8f74\u7a81\u7684\u957f\u5ea6\u53ef\u80fd\u6bd4\u7ec6\u80de\u4f53\u957f\u51e0\u500d\uff0c\u6216\u957f\u8fbe\u51e0\u4e07\u500d\u3002\u5728\u5b83\u7684\u672b\u7aef\u9644\u8fd1\uff0c\u8f74\u7a81\u5206\u88c2\u6210\u8bb8\u591a\u79f0\u4e3a telodendria \u7684\u5206\u652f\uff0c\u5728\u8fd9\u4e9b\u5206\u652f\u7684\u9876\u7aef\u662f\u5fae\u5c0f\u7684\u7ed3\u6784\uff0c\u79f0\u4e3a\u7a81\u89e6\u672b\u7aef\uff08\u6216\u7b80\u5355\u7684\u7a81\u89e6\uff09\uff0c\u5b83\u4eec\u8fde\u63a5\u5230\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u6811\u7a81\uff08\u6216\u76f4\u63a5\u5230\u7ec6\u80de\u4f53\uff09\u3002\u751f\u7269\u795e\u7ecf\u5143\u63a5\u6536\u77ed\u7684\u7535\u8109\u51b2\uff0c\u79f0\u4e3a\u6765\u81ea\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u4fe1\u53f7\uff0c\u901a\u8fc7\u8fd9\u4e9b\u7a81\u89e6\u3002\u5f53\u795e\u7ecf\u5143\u5728\u51e0\u6beb\u79d2\u5185\u63a5\u6536\u5230\u6765\u81ea\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u8db3\u591f\u6570\u91cf\u7684\u4fe1\u53f7\u65f6\uff0c\u5b83\u5c31\u53d1\u5c04\u51fa\u81ea\u5df1\u7684\u4fe1\u53f7\u3002 \u56e0\u6b64\uff0c\u4e2a\u4f53\u7684\u751f\u7269\u795e\u7ecf\u5143\u4f3c\u4e4e\u4ee5\u4e00\u79cd\u76f8\u5f53\u7b80\u5355\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u4f46\u662f\u5b83\u4eec\u7ec4\u7ec7\u5728\u4e00\u4e2a\u5de8\u5927\u7684\u6570\u5341\u4ebf\u795e\u7ecf\u5143\u7684\u7f51\u7edc\u4e2d\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u901a\u5e38\u8fde\u63a5\u5230\u6570\u5343\u4e2a\u5176\u4ed6\u795e\u7ecf\u5143\u3002\u9ad8\u5ea6\u590d\u6742\u7684\u8ba1\u7b97\u53ef\u4ee5\u7531\u76f8\u5f53\u7b80\u5355\u7684\u795e\u7ecf\u5143\u7684\u5de8\u5927\u7f51\u7edc\u6765\u5b8c\u6210\uff0c\u5c31\u50cf\u4e00\u4e2a\u590d\u6742\u7684\u8681\u7a74\u53ef\u4ee5\u7531\u6bcf\u4e2a\u8682\u8681\u7684\u52aa\u529b\u6784\u9020\u51fa\u6765\u3002\u751f\u7269\u795e\u7ecf\u7f51\u7edc\uff08BNN\uff09\u7684\u4f53\u7cfb\u7ed3\u6784\u4ecd\u7136\u662f\u4e3b\u52a8\u7814\u7a76\u7684\u4e3b\u9898\uff0c\u4f46\u662f\u5927\u8111\u7684\u67d0\u4e9b\u90e8\u5206\u5df2\u7ecf\u88ab\u6620\u5c04\uff0c\u5e76\u4e14\u4f3c\u4e4e\u795e\u7ecf\u5143\u7ecf\u5e38\u7ec4\u7ec7\u5728\u8fde\u7eed\u7684\u5c42\u4e2d\uff0c\u5982\u56fe 10-2 \u6240\u793a\u3002","title":"\u751f\u7269\u795e\u7ecf\u5143"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_4","text":"Warren McCulloch \u548c Pitts \u63d0\u51fa\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u751f\u7269\u795e\u7ecf\u5143\u6a21\u578b\uff0c\u8fd9\u540e\u6765\u4f5c\u4e3a\u4e00\u4e2a\u4eba\u5de5\u795e\u7ecf\u5143\u6210\u4e3a\u4f17\u6240\u5468\u77e5\uff1a\u5b83\u6709\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u4e8c\u8fdb\u5236\uff08ON/OFF\uff09\u8f93\u5165\u548c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u8f93\u51fa\u3002\u5f53\u8d85\u8fc7\u4e00\u5b9a\u6570\u91cf\u7684\u8f93\u5165\u662f\u6fc0\u6d3b\u65f6\uff0c\u4eba\u5de5\u795e\u7ecf\u5143\u4f1a\u6fc0\u6d3b\u5176\u8f93\u51fa\u3002McCulloch \u548c Pitts \u8868\u660e\uff0c\u5373\u4f7f\u7528\u8fd9\u6837\u4e00\u4e2a\u7b80\u5316\u7684\u6a21\u578b\uff0c\u4e5f\u6709\u53ef\u80fd\u5efa\u7acb\u4e00\u4e2a\u4eba\u5de5\u795e\u7ecf\u5143\u7f51\u7edc\u6765\u8ba1\u7b97\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u903b\u8f91\u547d\u9898\u3002\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u6784\u5efa\u4e00\u4e9b\u6267\u884c\u5404\u79cd\u903b\u8f91\u8ba1\u7b97\u7684 ANN\uff08\u89c1\u56fe 10-3\uff09\uff0c\u5047\u8bbe\u5f53\u81f3\u5c11\u4e24\u4e2a\u8f93\u5165\u662f\u6fc0\u6d3b\u7684\u65f6\u5019\u795e\u7ecf\u5143\u88ab\u6fc0\u6d3b\u3002 \u5de6\u8fb9\u7684\u7b2c\u4e00\u4e2a\u7f51\u7edc\u4ec5\u4ec5\u662f\u786e\u8ba4\u51fd\u6570\uff1a\u5982\u679c\u795e\u7ecf\u5143 A \u88ab\u6fc0\u6d3b\uff0c\u90a3\u4e48\u795e\u7ecf\u5143 C \u4e5f\u88ab\u6fc0\u6d3b\uff08\u56e0\u4e3a\u5b83\u63a5\u6536\u6765\u81ea\u795e\u7ecf\u5143 A \u7684\u4e24\u4e2a\u8f93\u5165\u4fe1\u53f7\uff09\uff0c\u4f46\u662f\u5982\u679c\u795e\u7ecf\u5143 A \u5173\u95ed\uff0c\u90a3\u4e48\u795e\u7ecf\u5143 C \u4e5f\u5173\u95ed\u3002 \u7b2c\u4e8c\u7f51\u7edc\u6267\u884c\u903b\u8f91 AND\uff1a\u795e\u7ecf\u5143 C \u53ea\u6709\u5728\u6fc0\u6d3b\u795e\u7ecf\u5143 A \u548c B\uff08\u5355\u4e2a\u8f93\u5165\u4fe1\u53f7\u4e0d\u8db3\u4ee5\u6fc0\u6d3b\u795e\u7ecf\u5143 C\uff09\u65f6\u624d\u88ab\u6fc0\u6d3b\u3002 \u7b2c\u4e09\u7f51\u7edc\u6267\u884c\u903b\u8f91 OR\uff1a\u5982\u679c\u795e\u7ecf\u5143 A \u6216\u795e\u7ecf\u5143 B \u88ab\u6fc0\u6d3b\uff08\u6216\u4e24\u8005\uff09\uff0c\u795e\u7ecf\u5143 C \u88ab\u6fc0\u6d3b\u3002 \u6700\u540e\uff0c\u5982\u679c\u6211\u4eec\u5047\u8bbe\u8f93\u5165\u8fde\u63a5\u53ef\u4ee5\u6291\u5236\u795e\u7ecf\u5143\u7684\u6d3b\u52a8\uff08\u751f\u7269\u795e\u7ecf\u5143\u662f\u8fd9\u6837\u7684\u60c5\u51b5\uff09\uff0c\u90a3\u4e48\u7b2c\u56db\u4e2a\u7f51\u7edc\u8ba1\u7b97\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u903b\u8f91\u547d\u9898\uff1a\u5982\u679c\u795e\u7ecf\u5143 B \u5173\u95ed\uff0c\u53ea\u6709\u5f53\u795e\u7ecf\u5143A\u662f\u6fc0\u6d3b\u7684\uff0c\u795e\u7ecf\u5143 C \u624d\u88ab\u6fc0\u6d3b\u3002\u5982\u679c\u795e\u7ecf\u5143 A \u59cb\u7ec8\u662f\u6fc0\u6d3b\u7684\uff0c\u90a3\u4e48\u4f60\u5f97\u5230\u4e00\u4e2a\u903b\u8f91 NOT\uff1a\u795e\u7ecf\u5143 C \u5728\u795e\u7ecf\u5143 B \u5173\u95ed\u65f6\u662f\u6fc0\u6d3b\u7684\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002 \u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u8c61\u5982\u4f55\u5c06\u8fd9\u4e9b\u7f51\u7edc\u7ec4\u5408\u8d77\u6765\u8ba1\u7b97\u590d\u6742\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\uff08\u53c2\u89c1\u672c\u7ae0\u672b\u5c3e\u7684\u7ec3\u4e60\uff09\u3002","title":"\u795e\u7ecf\u5143\u7684\u903b\u8f91\u8ba1\u7b97"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_5","text":"\u611f\u77e5\u5668\u662f\u6700\u7b80\u5355\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u4e4b\u4e00\uff0c\u7531 Frank Rosenblatt \u53d1\u660e\u4e8e 1957\u3002\u5b83\u662f\u57fa\u4e8e\u4e00\u79cd\u7a0d\u5fae\u4e0d\u540c\u7684\u4eba\u5de5\u795e\u7ecf\u5143\uff08\u89c1\u56fe 10-4\uff09\uff0c\u79f0\u4e3a\u7ebf\u6027\u9608\u503c\u5355\u5143\uff08LTU\uff09\uff1a\u8f93\u5165\u548c\u8f93\u51fa\u73b0\u5728\u662f\u6570\u5b57\uff08\u800c\u4e0d\u662f\u4e8c\u8fdb\u5236\u5f00/\u5173\u503c\uff09\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8f93\u5165\u8fde\u63a5\u90fd\u4e0e\u6743\u91cd\u76f8\u8fde\u3002LTU\u8ba1\u7b97\u5176\u8f93\u5165\u7684\u52a0\u6743\u548c\uff08 z = W1\u00d71 + W2\u00d72 + ... + + WN\u00d7n = Wt\u00b7x \uff09\uff0c\u7136\u540e\u5c06\u9636\u8dc3\u51fd\u6570\u5e94\u7528\u4e8e\u8be5\u548c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\uff1a HW(x) = STEP(Z) = STEP(W^T\u00b7x) \u3002 \u6700\u5e38\u89c1\u7684\u5728\u611f\u77e5\u5668\u4e2d\u4f7f\u7528\u7684\u9636\u8dc3\u51fd\u6570\u662f Heaviside \u9636\u8dc3\u51fd\u6570\uff08\u89c1\u65b9\u7a0b 10-1\uff09\u3002\u6709\u65f6\u4f7f\u7528\u7b26\u53f7\u51fd\u6570\u4ee3\u66ff\u3002 \u5355\u4e00\u7684 LTU \u53ef\u88ab\u7528\u4f5c\u7b80\u5355\u7ebf\u6027\u4e8c\u5143\u5206\u7c7b\u3002\u5b83\u8ba1\u7b97\u8f93\u5165\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u5982\u679c\u7ed3\u679c\u8d85\u8fc7\u9608\u503c\uff0c\u5b83\u8f93\u51fa\u6b63\u7c7b\u6216\u8005\u8f93\u51fa\u8d1f\u7c7b\uff08\u5c31\u50cf\u4e00\u4e2a\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u6216\u7ebf\u6027 SVM\uff09\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5355\u4e00\u7684 LTU \u57fa\u4e8e\u82b1\u74e3\u957f\u5ea6\u548c\u5bbd\u5ea6\u53bb\u5206\u7c7b\u9e22\u5c3e\u82b1\uff08\u4e5f\u53ef\u6dfb\u52a0\u989d\u5916\u7684\u504f\u7f6e\u7279\u5f81 x0=1 \uff0c\u5c31\u50cf\u6211\u4eec\u5728\u524d\u4e00\u7ae0\u6240\u505a\u7684\uff09\u3002\u8bad\u7ec3\u4e00\u4e2a LTU \u610f\u5473\u7740\u53bb\u5bfb\u627e\u5408\u9002\u7684 W0 \u548c W1 \u503c\uff0c\uff08\u8bad\u7ec3\u7b97\u6cd5\u7a0d\u540e\u63d0\u5230\uff09\u3002 \u611f\u77e5\u5668\u7b80\u5355\u5730\u7531\u4e00\u5c42 LTU \u7ec4\u6210\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u8fde\u63a5\u5230\u6240\u6709\u8f93\u5165\u3002\u8fd9\u4e9b\u8fde\u63a5\u901a\u5e38\u7528\u7279\u6b8a\u7684\u88ab\u79f0\u4e3a\u8f93\u5165\u795e\u7ecf\u5143\u7684\u4f20\u9012\u795e\u7ecf\u5143\u6765\u8868\u793a\uff1a\u5b83\u4eec\u53ea\u8f93\u51fa\u5b83\u4eec\u6240\u8f93\u5165\u7684\u4efb\u4f55\u8f93\u5165\u3002\u6b64\u5916\uff0c\u901a\u5e38\u6dfb\u52a0\u989d\u5916\u504f\u7f6e\u7279\u5f81\uff08 X0=1 \uff09\u3002\u8fd9\u79cd\u504f\u7f6e\u7279\u6027\u901a\u5e38\u7528\u4e00\u79cd\u79f0\u4e3a\u504f\u7f6e\u795e\u7ecf\u5143\u7684\u7279\u6b8a\u7c7b\u578b\u7684\u795e\u7ecf\u5143\u6765\u8868\u793a\uff0c\u5b83\u603b\u662f\u8f93\u51fa 1\u3002 \u56fe 10-5 \u8868\u793a\u5177\u6709\u4e24\u4e2a\u8f93\u5165\u548c\u4e09\u4e2a\u8f93\u51fa\u7684\u611f\u77e5\u5668\u3002\u8be5\u611f\u77e5\u5668\u53ef\u4ee5\u5c06\u5b9e\u4f8b\u540c\u65f6\u5206\u7c7b\u4e3a\u4e09\u4e2a\u4e0d\u540c\u7684\u4e8c\u8fdb\u5236\u7c7b\uff0c\u8fd9\u4f7f\u5f97\u5b83\u662f\u4e00\u4e2a\u591a\u8f93\u51fa\u5206\u7c7b\u5668\u3002 \u90a3\u4e48\u611f\u77e5\u5668\u662f\u5982\u4f55\u8bad\u7ec3\u7684\u5462\uff1fFrank Rosenblatt \u63d0\u51fa\u7684\u611f\u77e5\u5668\u8bad\u7ec3\u7b97\u6cd5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d7\u5230 Hebb \u89c4\u5219\u7684\u542f\u53d1\u3002\u5728 1949 \u51fa\u7248\u7684\u300a\u884c\u4e3a\u7ec4\u7ec7\u300b\u4e00\u4e66\u4e2d\uff0cDonald Hebb \u63d0\u51fa\uff0c\u5f53\u4e00\u4e2a\u751f\u7269\u795e\u7ecf\u5143\u7ecf\u5e38\u89e6\u53d1\u53e6\u4e00\u4e2a\u795e\u7ecf\u5143\u65f6\uff0c\u8fd9\u4e24\u4e2a\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u8054\u7cfb\u5c31\u4f1a\u53d8\u5f97\u66f4\u5f3a\u3002\u8fd9\u4e2a\u60f3\u6cd5\u540e\u6765\u88ab Siegrid L\u00f6wel \u603b\u7ed3\u4e3a\u4e00\u4e2a\u5438\u5f15\u4eba\u7684\u77ed\u8bed\uff1a\u201c\u4e00\u8d77\u71c3\u70e7\u7684\u7ec6\u80de\uff0c\u6c47\u5408\u5728\u4e00\u8d77\u3002\u201d\u8fd9\u4e2a\u89c4\u5219\u540e\u6765\u88ab\u79f0\u4e3a Hebb \u89c4\u5219\uff08\u6216 HebBIN \u5b66\u4e60\uff09\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e24\u4e2a\u795e\u7ecf\u5143\u5177\u6709\u76f8\u540c\u7684\u8f93\u51fa\u65f6\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u6743\u91cd\u5c31\u4f1a\u589e\u52a0\u3002\u4f7f\u7528\u8fd9\u4e2a\u89c4\u5219\u7684\u53d8\u4f53\u6765\u8bad\u7ec3\u611f\u77e5\u5668\uff0c\u8be5\u89c4\u5219\u8003\u8651\u4e86\u7f51\u7edc\u6240\u72af\u7684\u9519\u8bef\uff1b\u5b83\u4e0d\u52a0\u5f3a\u5bfc\u81f4\u9519\u8bef\u8f93\u51fa\u7684\u8fde\u63a5\u3002\u66f4\u5177\u4f53\u5730\uff0c\u611f\u77e5\u5668\u4e00\u6b21\u88ab\u9988\u9001\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u5b9e\u4f8b\uff0c\u5b83\u8fdb\u884c\u9884\u6d4b\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4ea7\u751f\u9519\u8bef\u9884\u6d4b\u7684\u8f93\u51fa\u795e\u7ecf\u5143\uff0c\u5b83\u52a0\u5f3a\u4e86\u8f93\u5165\u7684\u8fde\u63a5\u6743\u91cd\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u6b63\u786e\u7684\u9884\u6d4b\u3002\u8be5\u89c4\u5219\u5728\u516c\u5f0f 10-2 \u4e2d\u793a\u51fa\u3002 \u5176\u4e2d Wi,j \u662f\u7b2c i \u8f93\u5165\u795e\u7ecf\u5143\u4e0e\u7b2c J \u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u8fde\u63a5\u6743\u91cd\u3002 xi \u662f\u5f53\u524d\u8bad\u7ec3\u5b9e\u4f8b\u4e0e\u8f93\u5165\u503c\u3002 Y \u5e3d\u662f\u5f53\u524d\u8bad\u7ec3\u5b9e\u4f8b\u7684\u7b2c J \u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002 Yj \u662f\u5f53\u524d\u8bad\u7ec3\u5b9e\u4f8b\u7684\u7b2c J \u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u76ee\u6807\u8f93\u51fa\u3002 \u03b5 \u662f\u5b66\u4e60\u7387\u3002 \u6bcf\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u51b3\u7b56\u8fb9\u754c\u662f\u7ebf\u6027\u7684\uff0c\u56e0\u6b64\u611f\u77e5\u673a\u4e0d\u80fd\u5b66\u4e60\u590d\u6742\u7684\u6a21\u5f0f\uff08\u5c31\u50cf Logistic \u56de\u5f52\u5206\u7c7b\u5668\uff09\u3002\u7136\u800c\uff0c\u5982\u679c\u8bad\u7ec3\u5b9e\u4f8b\u662f\u7ebf\u6027\u53ef\u5206\u79bb\u7684\uff0cRosenblatt \u8bc1\u660e\u8be5\u7b97\u6cd5\u5c06\u6536\u655b\u5230\u4e00\u4e2a\u89e3\u3002\u8fd9\u88ab\u79f0\u4e3a\u611f\u77e5\u5668\u6536\u655b\u5b9a\u7406\u3002 sklearn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u611f\u77e5\u5668\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a LTU \u7f51\u7edc\u3002\u5b83\u53ef\u4ee5\u50cf\u4f60\u6240\u671f\u671b\u7684\u90a3\u6837\u4f7f\u7528\uff0c\u4f8b\u5982\u5728 iris \u6570\u636e\u96c6\uff08\u7b2c 4 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff1a import numpy as np from sklearn.datasets import load_iris from sklearn.linear_model import Perceptron iris = load_iris() X = iris.data[:, (2, 3)] # \u82b1\u74e3\u957f\u5ea6\uff0c\u5bbd\u5ea6 y = (iris.target == 0).astype(np.int) per_clf = Perceptron(random_state=42) per_clf.fit(X, y) per_clf.predict([[2, 0.5]]) \u60a8\u53ef\u80fd\u5df2\u7ecf\u8ba4\u8bc6\u5230\uff0c\u611f\u77e5\u5668\u5b66\u4e60\u7b97\u6cd5\u7c7b\u4f3c\u4e8e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u3002\u4e8b\u5b9e\u4e0a\uff0csklearn \u7684\u611f\u77e5\u5668\u7c7b\u76f8\u5f53\u4e8e\u4f7f\u7528\u5177\u6709\u4ee5\u4e0b\u8d85\u53c2\u6570\u7684 SGD \u5206\u7c7b\u5668\uff1a loss=\"perceptron\" \uff0c learning_rate=\"constant\" \uff08\u5b66\u4e60\u7387\uff09\uff0c eta0=1 \uff0c penalty=None \uff08\u65e0\u6b63\u5219\u5316\uff09\u3002 \u6ce8\u610f\uff0c\u4e0e\u903b\u8f91\u65af\u8482\u56de\u5f52\u5206\u7c7b\u5668\u76f8\u53cd\uff0c\u611f\u77e5\u673a\u4e0d\u8f93\u51fa\u7c7b\u6982\u7387\uff0c\u800c\u662f\u57fa\u4e8e\u786c\u9608\u503c\u8fdb\u884c\u9884\u6d4b\u3002\u8fd9\u662f\u4f60\u559c\u6b22\u903b\u8f91\u65af\u8482\u56de\u5f52\u5f88\u597d\u7684\u4e00\u4e2a\u7406\u7531\u3002 \u5728\u4ed6\u4eec\u7684 1969 \u4e2a\u9898\u4e3a\u201c\u611f\u77e5\u8005\u201d\u7684\u4e13\u8457\u4e2d\uff0cMarvin Minsky \u548c Seymour Papert \u5f3a\u8c03\u4e86\u611f\u77e5\u673a\u7684\u8bb8\u591a\u4e25\u91cd\u7f3a\u9677\uff0c\u7279\u522b\u662f\u5b83\u4eec\u4e0d\u80fd\u89e3\u51b3\u4e00\u4e9b\u7410\u788e\u7684\u95ee\u9898\uff08\u4f8b\u5982\uff0c\u5f02\u6216\uff08XOR\uff09\u5206\u7c7b\u95ee\u9898\uff09\uff1b\u53c2\u89c1\u56fe 10-6 \u7684\u5de6\u4fa7\uff09\u3002\u5f53\u7136\uff0c\u5176\u4ed6\u7684\u7ebf\u6027\u5206\u7c7b\u6a21\u578b\uff08\u5982 Logistic \u56de\u5f52\u5206\u7c7b\u5668\uff09\u4e5f\u90fd\u5b9e\u73b0\u4e0d\u4e86\uff0c\u4f46\u7814\u7a76\u4eba\u5458\u671f\u671b\u4ece\u611f\u77e5\u5668\u4e2d\u5f97\u5230\u66f4\u591a\uff0c\u4ed6\u4eec\u7684\u5931\u671b\u662f\u5f88\u5927\u7684\uff1a\u56e0\u6b64\uff0c\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u653e\u5f03\u4e86\u8054\u7ed3\u4e3b\u4e49\uff08\u5373\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u7a76\uff09\uff0c\u8fd9\u6709\u5229\u4e8e\u66f4\u9ad8\u5c42\u6b21\u7684\u95ee\u9898\uff0c\u5982\u903b\u8f91\u3001\u95ee\u9898\u89e3\u51b3\u548c\u641c\u7d22\u3002 \u7136\u800c\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u611f\u77e5\u5668\u7684\u4e00\u4e9b\u5c40\u9650\u6027\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u591a\u4e2a\u611f\u77e5\u5668\u6765\u6d88\u9664\u3002\u7531\u6b64\u4ea7\u751f\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u88ab\u79f0\u4e3a\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\u3002\u7279\u522b\u5730\uff0cMLP \u53ef\u4ee5\u89e3\u51b3 XOR \u95ee\u9898\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u56fe 10-6 \u53f3\u4fa7\u6240\u793a\u7684 MLP \u7684\u8f93\u51fa\u6765\u9a8c\u8bc1\u8f93\u5165\u7684\u6bcf\u4e00\u4e2a\u7ec4\u5408\uff1a\u8f93\u5165 (0, 0) \u6216 (1, 1) \u7f51\u7edc\u8f93\u51fa 0\uff0c\u5e76\u4e14\u8f93\u5165 (0, 1) \u6216 (1, 0) \u5b83\u8f93\u51fa 1\u3002","title":"\u611f\u77e5\u5668"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_6","text":"MLP \u7531\u4e00\u4e2a\uff08\u901a\u8fc7\uff09\u8f93\u5165\u5c42\u3001\u4e00\u4e2a\u6216\u591a\u4e2a\u79f0\u4e3a\u9690\u85cf\u5c42\u7684 LTU \u7ec4\u6210\uff0c\u4e00\u4e2a\u6700\u7ec8\u5c42 LTU \u79f0\u4e3a\u8f93\u51fa\u5c42\uff08\u89c1\u56fe 10-7\uff09\u3002\u9664\u4e86\u8f93\u51fa\u5c42\u4e4b\u5916\u7684\u6bcf\u4e00\u5c42\u5305\u62ec\u504f\u7f6e\u795e\u7ecf\u5143\uff0c\u5e76\u4e14\u5168\u8fde\u63a5\u5230\u4e0b\u4e00\u5c42\u3002\u5f53\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u6709\u4e24\u4e2a\u6216\u591a\u4e2a\u9690\u542b\u5c42\u65f6\uff0c\u79f0\u4e3a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff08DNN\uff09\u3002 \u591a\u5e74\u6765\uff0c\u7814\u7a76\u4eba\u5458\u52aa\u529b\u5bfb\u627e\u4e00\u79cd\u8bad\u7ec3 MLP \u7684\u65b9\u6cd5\uff0c\u4f46\u6ca1\u6709\u6210\u529f\u3002\u4f46\u5728 1986\uff0cD. E. Rumelhart \u7b49\u4eba\u63d0\u51fa\u4e86\u53cd\u5411\u4f20\u64ad\u8bad\u7ec3\u7b97\u6cd5\u3002\u7b2c 9 \u7ae0\u6211\u4eec\u5c06\u5176\u63cf\u8ff0\u4e3a\u4f7f\u7528\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u7684\u68af\u5ea6\u4e0b\u964d\uff08\u7b2c 4 \u7ae0\u8ba8\u8bba\u4e86\u68af\u5ea6\u4e0b\u964d\uff0c\u7b2c 9 \u7ae0\u8ba8\u8bba\u4e86\u81ea\u52a8\u5fae\u5206\uff09\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u7b97\u6cd5\u5c06\u5176\u9988\u9001\u5230\u7f51\u7edc\u5e76\u8ba1\u7b97\u6bcf\u4e2a\u8fde\u7eed\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff08\u8fd9\u662f\u5411\u524d\u4f20\u9012\uff0c\u5c31\u50cf\u5728\u8fdb\u884c\u9884\u6d4b\u65f6\u4e00\u6837\uff09\u3002\u7136\u540e\uff0c\u5b83\u6d4b\u91cf\u7f51\u7edc\u7684\u8f93\u51fa\u8bef\u5dee\uff08\u5373\uff0c\u671f\u671b\u8f93\u51fa\u548c\u7f51\u7edc\u5b9e\u9645\u8f93\u51fa\u4e4b\u95f4\u7684\u5dee\u503c\uff09\uff0c\u5e76\u4e14\u8ba1\u7b97\u6700\u540e\u9690\u85cf\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u5bf9\u6bcf\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u8bef\u5dee\u8d21\u732e\u591a\u5c11\u3002\u7136\u540e\uff0c\u7ee7\u7eed\u6d4b\u91cf\u8fd9\u4e9b\u8bef\u5dee\u8d21\u732e\u6709\u591a\u5c11\u6765\u81ea\u5148\u524d\u9690\u85cf\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u7b49\u7b49\uff0c\u76f4\u5230\u7b97\u6cd5\u5230\u8fbe\u8f93\u5165\u5c42\u3002\u8be5\u53cd\u5411\u901a\u8fc7\u6709\u6548\u5730\u6d4b\u91cf\u7f51\u7edc\u4e2d\u6240\u6709\u8fde\u63a5\u6743\u91cd\u7684\u8bef\u5dee\u68af\u5ea6\uff0c\u901a\u8fc7\u5728\u7f51\u7edc\u4e2d\u5411\u540e\u4f20\u64ad\u8bef\u5dee\u68af\u5ea6\uff08\u4e5f\u662f\u8be5\u7b97\u6cd5\u7684\u540d\u79f0\uff09\u3002\u5982\u679c\u4f60\u67e5\u770b\u4e00\u4e0b\u9644\u5f55 D \u4e2d\u7684\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u7b97\u6cd5\uff0c\u4f60\u4f1a\u53d1\u73b0\u53cd\u5411\u4f20\u64ad\u7684\u6b63\u5411\u548c\u53cd\u5411\u901a\u8fc7\u7b80\u5355\u5730\u6267\u884c\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u3002\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7684\u6700\u540e\u4e00\u6b65\u662f\u4f7f\u7528\u8f83\u65e9\u6d4b\u91cf\u7684\u8bef\u5dee\u68af\u5ea6\u5bf9\u7f51\u7edc\u4e2d\u7684\u6240\u6709\u8fde\u63a5\u6743\u503c\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4\u3002 \u8ba9\u6211\u4eec\u66f4\u7b80\u77ed\u4e00\u4e9b\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u9996\u5148\u8fdb\u884c\u9884\u6d4b\uff08\u524d\u5411\uff09\uff0c\u6d4b\u91cf\u8bef\u5dee\uff0c\u7136\u540e\u53cd\u5411\u904d\u5386\u6bcf\u4e2a\u5c42\u6765\u6d4b\u91cf\u6bcf\u4e2a\u8fde\u63a5\uff08\u53cd\u5411\u4f20\u9012\uff09\u7684\u8bef\u5dee\u8d21\u732e\uff0c\u6700\u540e\u7a0d\u5fae\u8c03\u6574\u8fde\u63a5\u5668\u6743\u503c\u4ee5\u51cf\u5c11\u8bef\u5dee\uff08\u68af\u5ea6\u4e0b\u964d\u6b65\u957f\uff09\u3002 \u4e3a\u4e86\u4f7f\u7b97\u6cd5\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f5c\u8005\u5bf9 MLP \u7684\u4f53\u7cfb\u7ed3\u6784\u8fdb\u884c\u4e86\u4e00\u4e2a\u5173\u952e\u6027\u7684\u6539\u53d8\uff1a\u7528 Logistic \u51fd\u6570\u4ee3\u66ff\u4e86\u9636\u8dc3\u51fd\u6570\uff0c \u03c3(z) = 1 / (1 + exp(\u2013z)) \u3002\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u9636\u8dc3\u51fd\u6570\u53ea\u5305\u542b\u5e73\u5766\u7684\u6bb5\uff0c\u56e0\u6b64\u6ca1\u6709\u68af\u5ea6\u6765\u5de5\u4f5c\uff08\u68af\u5ea6\u4e0b\u964d\u4e0d\u80fd\u5728\u5e73\u9762\u4e0a\u79fb\u52a8\uff09\uff0c\u800c Logistic \u51fd\u6570\u5230\u5904\u90fd\u6709\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u7684\u975e\u96f6\u5bfc\u6570\uff0c\u5141\u8bb8\u68af\u5ea6\u4e0b\u964d\u5728\u6bcf\u4e2a\u6b65\u4e0a\u53d6\u5f97\u4e00\u4e9b\u8fdb\u5c55\u3002\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u53ef\u4ee5\u4e0e\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\uff0c\u800c\u4e0d\u662f Logistic \u51fd\u6570\u3002\u53e6\u5916\u4e24\u4e2a\u6d41\u884c\u7684\u6fc0\u6d3b\u51fd\u6570\u662f\uff1a \u53cc\u66f2\u6b63\u5207\u51fd\u6570 tanh (z) = 2\u03c3(2z) \u2013 1 \u5c31\u50cf Logistic \u51fd\u6570\uff0c\u5b83\u662f S \u5f62\u7684\u3001\u8fde\u7eed\u7684\u3001\u53ef\u5fae\u7684\uff0c\u4f46\u662f\u5b83\u7684\u8f93\u51fa\u503c\u8303\u56f4\u4ece-1\u52301\uff08\u4e0d\u662f\u5728 Logistic \u51fd\u6570\u7684 0 \u5230 1\uff09\uff0c\u8fd9\u5f80\u5f80\u4f7f\u6bcf\u4e2a\u5c42\u7684\u8f93\u51fa\u5728\u8bad\u7ec3\u5f00\u59cb\u65f6\u6216\u591a\u6216\u5c11\u90fd\u6b63\u5219\u5316\u4e86\uff08\u5373\u4ee5 0 \u4e3a\u4e2d\u5fc3\uff09\u3002\u8fd9\u5e38\u5e38\u6709\u52a9\u4e8e\u52a0\u5feb\u6536\u655b\u901f\u5ea6\u3002 Relu \u51fd\u6570\uff08\u5728\u7b2c 9 \u7ae0\u4e2d\u4ecb\u7ecd\uff09 ReLU (z) = max (0, z) \u3002\u5b83\u662f\u8fde\u7eed\u7684\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\u5728 z=0 \u65f6\u4e0d\u53ef\u5fae\uff08\u659c\u7387\u7a81\u7136\u6539\u53d8\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u68af\u5ea6\u4e0b\u964d\u53cd\u5f39\uff09\u3002\u7136\u800c\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u5e76\u4e14\u5177\u6709\u5feb\u901f\u8ba1\u7b97\u7684\u4f18\u70b9\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u6ca1\u6709\u6700\u5927\u8f93\u51fa\u503c\u7684\u4e8b\u5b9e\u4e5f\u6709\u52a9\u4e8e\u51cf\u5c11\u68af\u5ea6\u4e0b\u964d\u671f\u95f4\u7684\u4e00\u4e9b\u95ee\u9898\uff08\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u56de\u987e\u8fd9\u4e00\u70b9\uff09\u3002 \u8fd9\u4e9b\u6d41\u884c\u7684\u6fc0\u6d3b\u51fd\u6570\u53ca\u5176\u884d\u751f\u7269\u5982\u56fe 10-8 \u6240\u793a\u3002 MLP \u901a\u5e38\u7528\u4e8e\u5206\u7c7b\uff0c\u6bcf\u4e2a\u8f93\u51fa\u5bf9\u5e94\u4e8e\u4e0d\u540c\u7684\u4e8c\u8fdb\u5236\u7c7b\uff08\u4f8b\u5982\uff0c\u5783\u573e\u90ae\u4ef6/\u6b63\u5e38\u90ae\u4ef6\uff0c\u7d27\u6025/\u975e\u7d27\u6025\uff0c\u7b49\u7b49\uff09\u3002\u5f53\u7c7b\u662f\u591a\u7c7b\u7684\uff08\u4f8b\u5982\uff0c0 \u5230 9 \u7684\u6570\u5b57\u56fe\u50cf\u5206\u7c7b\uff09\u65f6\uff0c\u8f93\u51fa\u5c42\u901a\u5e38\u901a\u8fc7\u7528\u5171\u4eab\u7684 softmax \u51fd\u6570\u66ff\u6362\u5355\u72ec\u7684\u6fc0\u6d3b\u51fd\u6570\u6765\u4fee\u6539\uff08\u89c1\u56fe 10-9\uff09\u3002\u7b2c 3 \u7ae0\u4ecb\u7ecd\u4e86 softmax \u51fd\u6570\u3002\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u5bf9\u5e94\u4e8e\u76f8\u5e94\u7c7b\u7684\u4f30\u8ba1\u6982\u7387\u3002\u6ce8\u610f\uff0c\u4fe1\u53f7\u53ea\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u6d41\u52a8\uff08\u4ece\u8f93\u5165\u5230\u8f93\u51fa\uff09\uff0c\u56e0\u6b64\u8fd9\u79cd\u7ed3\u6784\u662f\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff08FNN\uff09\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002 \u751f\u7269\u795e\u7ecf\u5143\u4f3c\u4e4e\u662f\u7528 sigmoid\uff08S \u578b\uff09\u6fc0\u6d3b\u51fd\u6570\u6d3b\u52a8\u7684\uff0c\u56e0\u6b64\u7814\u7a76\u4eba\u5458\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u575a\u6301 sigmoid \u51fd\u6570\u3002\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0cRelu \u6fc0\u6d3b\u51fd\u6570\u901a\u5e38\u5728 ANN \u5de5\u4f5c\u5f97\u66f4\u597d\u3002\u8fd9\u662f\u751f\u7269\u7814\u7a76\u8bef\u5bfc\u7684\u4f8b\u5b50\u4e4b\u4e00\u3002","title":"\u591a\u5c42\u611f\u77e5\u5668\u4e0e\u53cd\u5411\u4f20\u64ad"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#tensorflow-api-mlp","text":"\u4e0e TensorFlow \u4e00\u8d77\u8bad\u7ec3 MLP \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u9ad8\u7ea7 API TF.Learn\uff0c\u8fd9\u4e0e sklearn \u7684 API \u975e\u5e38\u76f8\u4f3c\u3002 DNNClassifier \u53ef\u4ee5\u5f88\u5bb9\u6613\u8bad\u7ec3\u5177\u6709\u4efb\u610f\u6570\u91cf\u9690\u5c42\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff0c\u800c softmax \u8f93\u51fa\u5c42\u8f93\u51fa\u4f30\u8ba1\u7684\u7c7b\u6982\u7387\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u8bad\u7ec3\u4e24\u4e2a\u9690\u85cf\u5c42\u7684 DNN\uff08\u4e00\u4e2a\u5177\u6709 300 \u4e2a\u795e\u7ecf\u5143\uff0c\u53e6\u4e00\u4e2a\u5177\u6709 100 \u4e2a\u795e\u7ecf\u5143\uff09\u548c\u4e00\u4e2a\u5177\u6709 10 \u4e2a\u795e\u7ecf\u5143\u7684 SOFTMax \u8f93\u51fa\u5c42\u8fdb\u884c\u5206\u7c7b\uff1a import tensorflow as tf feature_columns = tf.contrib.learn.infer_real_valued_columns_from_input(X) dnn_clf = tf.contrib.learn.DNNClassifier(hidden_units=[300, 100], n_classes=10, feature_columns=feature_columns) dnn_clf.fit(x=X, y=y, batch_size=50, steps=40000) \u5982\u679c\u4f60\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u8fd0\u884c\u8fd9\u4e2a\u4ee3\u7801\uff08\u5728\u7f29\u653e\u5b83\u4e4b\u540e\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u4f7f\u7528 skLearn \u7684 StandardScaler \uff09\uff0c\u4f60\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8fbe\u5230 98.1% \u4ee5\u4e0a\u7cbe\u5ea6\u7684\u6a21\u578b\uff01\u8fd9\u6bd4\u6211\u4eec\u5728\u7b2c 3 \u7ae0\u4e2d\u8bad\u7ec3\u7684\u6700\u597d\u7684\u6a21\u578b\u90fd\u8981\u597d\uff1a >>> from sklearn.metrics import accuracy_score >>> y_pred = list(dnn_clf.predict(X_test)) >>> accuracy_score(y_test, y_pred) 0.98180000000000001 TF.Learn \u5b66\u4e60\u5e93\u4e5f\u4e3a\u8bc4\u4f30\u6a21\u578b\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u4fbf\u7684\u529f\u80fd\uff1a >>> dnn_clf.evaluate(X_test, y_test) {'accuracy': 0.98180002, 'global_step': 40000, 'loss': 0.073678359} DNNClassifier \u57fa\u4e8e Relu \u6fc0\u6d3b\u51fd\u6570\u521b\u5efa\u6240\u6709\u795e\u7ecf\u5143\u5c42\uff08\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u8d85\u53c2\u6570 activation_fn \u6765\u6539\u53d8\u6fc0\u6d3b\u51fd\u6570\uff09\u3002\u8f93\u51fa\u5c42\u57fa\u4e8e SoftMax \u51fd\u6570\uff0c\u635f\u5931\u51fd\u6570\u662f\u4ea4\u53c9\u71b5\uff08\u5728\u7b2c 4 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002 TF.EXCEL API \u4ecd\u7136\u662f\u66f4\u65b0\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u4e9b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u7684\u4e00\u4e9b\u540d\u79f0\u548c\u51fd\u6570\u53ef\u80fd\u4f1a\u5728\u4f60\u8bfb\u8fd9\u672c\u4e66\u7684\u65f6\u5019\u53d1\u751f\u4e00\u4e9b\u53d8\u5316\u3002\u4f46\u603b\u7684\u601d\u60f3\u662f\u4e0d\u53d8\u3002","title":"\u7528 TensorFlow \u9ad8\u7ea7 API \u8bad\u7ec3 MLP"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#tensorflow-dnn","text":"\u5982\u679c\u60a8\u60f3\u8981\u66f4\u597d\u5730\u63a7\u5236\u7f51\u7edc\u67b6\u6784\uff0c\u60a8\u53ef\u80fd\u66f4\u559c\u6b22\u4f7f\u7528 TensorFlow \u7684\u8f83\u4f4e\u7ea7\u522b\u7684 Python API\uff08\u5728\u7b2c 9 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e0e\u4e4b\u524d\u7684 API \u76f8\u540c\u7684\u6a21\u578b\uff0c\u6211\u4eec\u5c06\u5b9e\u65bd Minibatch \u68af\u5ea6\u4e0b\u964d\u6765\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\u3002 \u7b2c\u4e00\u6b65\u662f\u5efa\u8bbe\u9636\u6bb5\uff0c\u6784\u5efa TensorFlow \u56fe\u3002 \u7b2c\u4e8c\u6b65\u662f\u6267\u884c\u9636\u6bb5\uff0c\u60a8\u5b9e\u9645\u8fd0\u884c\u8ba1\u7b97\u56fe\u8c31\u6765\u8bad\u7ec3\u6a21\u578b\u3002","title":"\u4f7f\u7528\u666e\u901a TensorFlow \u8bad\u7ec3 DNN"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_7","text":"\u5f00\u59cb\u5427\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u5bfc\u5165 tensorflow \u5e93\u3002 \u7136\u540e\u6211\u4eec\u5fc5\u987b\u6307\u5b9a\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6570\u91cf\uff0c\u5e76\u8bbe\u7f6e\u6bcf\u4e2a\u5c42\u4e2d\u9690\u85cf\u7684\u795e\u7ecf\u5143\u6570\u91cf\uff1a import tensorflow as tf n_inputs = 28*28 # MNIST n_hidden1 = 300 n_hidden2 = 100 n_outputs = 10 \u63a5\u4e0b\u6765\uff0c\u4e0e\u7b2c 9 \u7ae0\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5360\u4f4d\u7b26\u8282\u70b9\u6765\u8868\u793a\u8bad\u7ec3\u6570\u636e\u548c\u76ee\u6807\u3002 X \u7684\u5f62\u72b6\u4ec5\u6709\u90e8\u5206\u88ab\u5b9a\u4e49\u3002 \u6211\u4eec\u77e5\u9053\u5b83\u5c06\u662f\u4e00\u4e2a 2D \u5f20\u91cf\uff08\u5373\u4e00\u4e2a\u77e9\u9635\uff09\uff0c\u6cbf\u7740\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5b9e\u4f8b\u548c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u7684\u7279\u5f81\uff0c\u6211\u4eec\u77e5\u9053\u7279\u5f81\u7684\u6570\u91cf\u5c06\u662f 28\u00d728 \uff08\u6bcf\u50cf\u7d20\u4e00\u4e2a\u7279\u5f81\uff09 \u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u6bcf\u4e2a\u8bad\u7ec3\u6279\u6b21\u5c06\u5305\u542b\u591a\u5c11\u4e2a\u5b9e\u4f8b\u3002 \u6240\u4ee5 X \u7684\u5f62\u72b6\u662f (None, n_inputs) \u3002 \u540c\u6837\uff0c\u6211\u4eec\u77e5\u9053 y \u5c06\u662f\u4e00\u4e2a 1D \u5f20\u91cf\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u4f46\u662f\u6211\u4eec\u518d\u6b21\u4e0d\u77e5\u9053\u5728\u8fd9\u4e00\u70b9\u4e0a\u8bad\u7ec3\u6279\u6b21\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u5f62\u72b6 (None) \u3002 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") \u73b0\u5728\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b9e\u9645\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u5360\u4f4d\u7b26 X \u5c06\u4f5c\u4e3a\u8f93\u5165\u5c42; \u5728\u6267\u884c\u9636\u6bb5\uff0c\u5b83\u5c06\u4e00\u6b21\u66f4\u6362\u4e00\u4e2a\u8bad\u7ec3\u6279\u6b21\uff08\u6ce8\u610f\u8bad\u7ec3\u6279\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u5c06\u7531\u795e\u7ecf\u7f51\u7edc\u540c\u65f6\u5904\u7406\uff09\u3002 \u73b0\u5728\u60a8\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42\u3002 \u4e24\u4e2a\u9690\u85cf\u7684\u5c42\u51e0\u4e4e\u76f8\u540c\uff1a\u5b83\u4eec\u53ea\u662f\u5b83\u4eec\u6240\u8fde\u63a5\u7684\u8f93\u5165\u548c\u5b83\u4eec\u5305\u542b\u7684\u795e\u7ecf\u5143\u7684\u6570\u91cf\u4e0d\u540c\u3002 \u8f93\u51fa\u5c42\u4e5f\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u5b83\u4f7f\u7528 softmax \u6fc0\u6d3b\u51fd\u6570\u800c\u4e0d\u662f ReLU \u6fc0\u6d3b\u51fd\u6570\u3002 \u6240\u4ee5\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a neuron_layer() \u51fd\u6570\uff0c\u6211\u4eec\u5c06\u4e00\u6b21\u521b\u5efa\u4e00\u4e2a\u56fe\u5c42\u3002 \u5b83\u5c06\u9700\u8981\u53c2\u6570\u6765\u6307\u5b9a\u8f93\u5165\uff0c\u795e\u7ecf\u5143\u6570\u91cf\uff0c\u6fc0\u6d3b\u51fd\u6570\u548c\u56fe\u5c42\u7684\u540d\u79f0\uff1a def neuron_layer(X, n_neurons, name, activation=None): with tf.name_scope(name): n_inputs = int(X.get_shape()[1]) stddev = 2 / np.sqrt(n_inputs) init = tf.truncated_normal((n_inputs, n_neurons), stddev=stddev) W = tf.Variable(init, name=\"weights\") b = tf.Variable(tf.zeros([n_neurons]), name=\"biases\") z = tf.matmul(X, W) + b if activation == \"relu\": return tf.nn.relu(z) else: return z \u6211\u4eec\u9010\u884c\u6d4f\u89c8\u8fd9\u4e2a\u4ee3\u7801\uff1a \u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528\u540d\u79f0\u8303\u56f4\u6765\u521b\u5efa\u6bcf\u5c42\u7684\u540d\u79f0\uff1a\u5b83\u5c06\u5305\u542b\u8be5\u795e\u7ecf\u5143\u5c42\u7684\u6240\u6709\u8ba1\u7b97\u8282\u70b9\u3002 \u8fd9\u662f\u53ef\u9009\u7684\uff0c\u4f46\u5982\u679c\u8282\u70b9\u7ec4\u7ec7\u826f\u597d\uff0c\u5219 TensorBoard \u56fe\u5f62\u5c06\u4f1a\u66f4\u52a0\u51fa\u8272\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u67e5\u627e\u8f93\u5165\u77e9\u9635\u7684\u5f62\u72b6\u5e76\u83b7\u5f97\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u7684\u5927\u5c0f\u6765\u83b7\u5f97\u8f93\u5165\u6570\u91cf\uff08\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u7528\u4e8e\u5b9e\u4f8b\uff09\u3002 \u63a5\u4e0b\u6765\u7684\u4e09\u884c\u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u6743\u91cd\u77e9\u9635\u7684 W \u53d8\u91cf\u3002 \u5b83\u5c06\u662f\u5305\u542b\u6bcf\u4e2a\u8f93\u5165\u548c\u6bcf\u4e2a\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u6240\u6709\u8fde\u63a5\u6743\u91cd\u76842D\u5f20\u91cf\uff1b\u56e0\u6b64\uff0c\u5b83\u7684\u5f62\u72b6\u5c06\u662f (n_inputs, n_neurons) \u3002\u5b83\u5c06\u88ab\u968f\u673a\u521d\u59cb\u5316\uff0c\u4f7f\u7528\u5177\u6709\u6807\u51c6\u5dee\u4e3a 2/\u221an \u7684\u622a\u65ad\u7684\u6b63\u6001\uff08\u9ad8\u65af\uff09\u5206\u5e03(\u4f7f\u7528\u622a\u65ad\u7684\u6b63\u6001\u5206\u5e03\u800c\u4e0d\u662f\u5e38\u89c4\u6b63\u6001\u5206\u5e03\u786e\u4fdd\u4e0d\u4f1a\u6709\u4efb\u4f55\u5927\u7684\u6743\u91cd\uff0c\u8fd9\u53ef\u80fd\u4f1a\u51cf\u6162\u8bad\u7ec3\u3002).\u4f7f\u7528\u8fd9\u4e2a\u7279\u5b9a\u7684\u6807\u51c6\u5dee\u6709\u52a9\u4e8e\u7b97\u6cd5\u7684\u6536\u655b\u901f\u5ea6\u66f4\u5feb\uff08\u6211\u4eec\u5c06\u5728\u7b2c11\u7ae0\u4e2d\u8fdb\u4e00\u6b65\u8ba8\u8bba\u8fd9\u4e00\u70b9\uff09\uff0c\u8fd9\u662f\u5bf9\u795e\u7ecf\u7f51\u7edc\u7684\u5fae\u5c0f\u8c03\u6574\u4e4b\u4e00\uff0c\u5bf9\u5b83\u4eec\u7684\u6548\u7387\u4ea7\u751f\u4e86\u5de8\u5927\u7684\u5f71\u54cd\uff09\u3002 \u91cd\u8981\u7684\u662f\u4e3a\u6240\u6709\u9690\u85cf\u5c42\u968f\u673a\u521d\u59cb\u5316\u8fde\u63a5\u6743\u91cd\uff0c\u4ee5\u907f\u514d\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u65e0\u6cd5\u4e2d\u65ad\u7684\u4efb\u4f55\u5bf9\u79f0\u6027\u3002\uff08\u4f8b\u5982\uff0c\u5982\u679c\u5c06\u6240\u6709\u6743\u91cd\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u6240\u6709\u795e\u7ecf\u5143\u5c06\u8f93\u51fa 0\uff0c\u5e76\u4e14\u7ed9\u5b9a\u9690\u85cf\u5c42\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u7684\u8bef\u5dee\u68af\u5ea6\u5c06\u76f8\u540c\u3002 \u7136\u540e\uff0c\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4\u5c06\u5728\u6bcf\u4e2a\u5c42\u4e2d\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u66f4\u65b0\u6240\u6709\u6743\u91cd\uff0c\u56e0\u6b64\u5b83\u4eec\u5c06\u4fdd\u6301\u76f8\u7b49\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5c3d\u7ba1\u6bcf\u5c42\u6709\u6570\u767e\u4e2a\u795e\u7ecf\u5143\uff0c\u4f60\u7684\u6a21\u578b\u5c31\u50cf\u6bcf\u5c42\u53ea\u6709\u4e00\u4e2a\u795e\u7ecf\u5143\u4e00\u6837\u3002\uff09 \u4e0b\u4e00\u884c\u521b\u5efa\u4e00\u4e2a\u504f\u5dee\u7684 b \u53d8\u91cf\uff0c\u521d\u59cb\u5316\u4e3a 0\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u65e0\u5bf9\u79f0\u95ee\u9898\uff09\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u6709\u4e00\u4e2a\u504f\u7f6e\u53c2\u6570\u3002 \u7136\u540e\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe\u6765\u8ba1\u7b97 z = X\u00b7W + b \u3002 \u8be5\u5411\u91cf\u5316\u5b9e\u73b0\u5c06\u6709\u6548\u5730\u8ba1\u7b97\u8f93\u5165\u7684\u52a0\u6743\u548c\u52a0\u4e0a\u5c42\u4e2d\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u504f\u7f6e\uff0c\u5bf9\u4e8e\u6279\u6b21\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\uff0c\u4ec5\u9700\u4e00\u6b21. \u6700\u540e\uff0c\u5982\u679c\u6fc0\u6d3b\u53c2\u6570\u8bbe\u7f6e\u4e3a relu \uff0c\u5219\u4ee3\u7801\u8fd4\u56de relu(z) \uff08\u5373 max(0,z) \uff09\uff0c\u5426\u5219\u5b83\u53ea\u8fd4\u56de z \u3002 \u597d\u4e86\uff0c\u73b0\u5728\u4f60\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u795e\u7ecf\u5143\u5c42\u3002 \u8ba9\u6211\u4eec\u7528\u5b83\u6765\u521b\u5efa\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\uff01 \u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u4ee5 X \u4e3a\u8f93\u5165\u3002 \u7b2c\u4e8c\u4e2a\u5c06\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u4f5c\u4e3a\u5176\u8f93\u5165\u3002 \u6700\u540e\uff0c\u8f93\u51fa\u5c42\u5c06\u7b2c\u4e8c\u4e2a\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u4f5c\u4e3a\u5176\u8f93\u5165\u3002 with tf.name_scope(\"dnn\"): hidden1 = neuron_layer(X, n_hidden1, \"hidden1\", activation=\"relu\") hidden2 = neuron_layer(hidden1, n_hidden2, \"hidden2\", activation=\"relu\") logits = neuron_layer(hidden2, n_outputs, \"outputs\") \u8bf7\u6ce8\u610f\uff0c\u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u540d\u79f0\u8303\u56f4\u3002 \u8fd8\u8981\u6ce8\u610f\uff0clogit \u662f\u5728\u901a\u8fc7 softmax \u6fc0\u6d3b\u51fd\u6570\u4e4b\u524d\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\uff1a\u4e3a\u4e86\u4f18\u5316\uff0c\u6211\u4eec\u7a0d\u540e\u5c06\u5904\u7406 softmax \u8ba1\u7b97\u3002 \u6b63\u5982\u4f60\u6240\u671f\u671b\u7684\uff0cTensorFlow \u6709\u8bb8\u591a\u65b9\u4fbf\u7684\u529f\u80fd\u6765\u521b\u5efa\u6807\u51c6\u7684\u795e\u7ecf\u7f51\u7edc\u5c42\uff0c\u6240\u4ee5\u901a\u5e38\u4e0d\u9700\u8981\u50cf\u6211\u4eec\u521a\u624d\u90a3\u6837\u5b9a\u4e49\u4f60\u81ea\u5df1\u7684 neuron_layer() \u51fd\u6570\u3002 \u4f8b\u5982\uff0cTensorFlow \u7684 fully_connected() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u5b8c\u5168\u8fde\u63a5\u7684\u5c42\uff0c\u5176\u4e2d\u6240\u6709\u8f93\u5165\u90fd\u8fde\u63a5\u5230\u56fe\u5c42\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u3002 \u5b83\u4f7f\u7528\u6b63\u786e\u7684\u521d\u59cb\u5316\u7b56\u7565\u6765\u8d1f\u8d23\u521b\u5efa\u6743\u91cd\u548c\u504f\u7f6e\u53d8\u91cf\uff0c\u5e76\u4e14\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 ReLU \u6fc0\u6d3b\u51fd\u6570\uff08\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 activate_fn \u53c2\u6570\u6765\u66f4\u6539\u5b83\uff09\u3002 \u6b63\u5982\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u770b\u5230\u7684\uff0c\u5b83\u8fd8\u652f\u6301\u6b63\u5219\u5316\u548c\u5f52\u4e00\u5316\u53c2\u6570\u3002 \u6211\u4eec\u6765\u8c03\u6574\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u4f7f\u7528 fully_connected() \u51fd\u6570\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u7684 neuron_layer() \u51fd\u6570\u3002 \u53ea\u9700\u5bfc\u5165\u8be5\u529f\u80fd\uff0c\u5e76\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u66ff\u6362 dnn \u6784\u5efa\u90e8\u5206\uff1a from tensorflow.contrib.layers import fully_connected with tf.name_scope(\"dnn\"): hidden1 = fully_connected(X, n_hidden1, scope=\"hidden1\") hidden2 = fully_connected(hidden1, n_hidden2, scope=\"hidden2\") logits = fully_connected(hidden2, n_outputs, scope=\"outputs\", activation_fn=None) tensorflow.contrib \u5305\u5305\u542b\u8bb8\u591a\u6709\u7528\u7684\u529f\u80fd\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u5c1a\u672a\u5206\u7ea7\u6210\u4e3a\u4e3b\u8981 TensorFlow API \u4e00\u90e8\u5206\u7684\u5b9e\u9a8c\u4ee3\u7801\u7684\u5730\u65b9\u3002 \u56e0\u6b64\uff0c full_connected() \u51fd\u6570\uff08\u548c\u4efb\u4f55\u5176\u4ed6 contrib \u4ee3\u7801\uff09\u53ef\u80fd\u4f1a\u5728\u5c06\u6765\u66f4\u6539\u6216\u79fb\u52a8\u3002 \u4f7f\u7528 dense() \u4ee3\u66ff neuron_layer() \u6ce8\u610f\uff1a\u672c\u4e66\u4f7f\u7528 tensorflow.contrib.layers.fully_connected() \u800c\u4e0d\u662f tf.layers.dense() \uff08\u672c\u7ae0\u7f16\u5199\u65f6\u4e0d\u5b58\u5728\uff09\u3002 \u73b0\u5728\u6700\u597d\u4f7f\u7528 tf.layers.dense() \uff0c\u56e0\u4e3a contrib \u6a21\u5757\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u53ef\u80fd\u4f1a\u66f4\u6539\u6216\u5220\u9664\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002 dense() \u51fd\u6570\u4e0e fully_connected() \u51fd\u6570\u51e0\u4e4e\u76f8\u540c\uff0c\u9664\u4e86\u4e00\u4e9b\u7ec6\u5fae\u7684\u5dee\u522b\uff1a \u51e0\u4e2a\u53c2\u6570\u88ab\u91cd\u547d\u540d\uff1a scope \u53d8\u4e3a\u540d\u79f0\uff0c activation_fn \u53d8\u4e3a\u6fc0\u6d3b\uff08\u540c\u6837 _fn \u540e\u7f00\u4ece\u5176\u4ed6\u53c2\u6570\uff08\u5982 normalizer_fn \uff09\u4e2d\u5220\u9664\uff09\uff0c weights_initializer \u6210\u4e3a kernel_initializer \u7b49\u3002\u9ed8\u8ba4\u6fc0\u6d3b\u73b0\u5728\u662f\u65e0\uff0c\u800c\u4e0d\u662f tf.nn.relu \u3002 \u7b2c 11 \u7ae0\u8fd8\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u5dee\u5f02\u3002 with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, name=\"hidden1\", activation=tf.nn.relu) hidden2 = tf.layers.dense(hidden1, n_hidden2, name=\"hidden2\", activation=tf.nn.relu) logits = tf.layers.dense(hidden2, n_outputs, name=\"outputs\") \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u6211\u4eec\u7528\u6765\u8bad\u7ec3\u7684\u635f\u5931\u51fd\u6570\u3002 \u6b63\u5982\u6211\u4eec\u5728\u7b2c 4 \u7ae0\u4e2d\u5bf9 Softmax \u56de\u5f52\u6240\u505a\u7684\u90a3\u6837\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4ea4\u53c9\u71b5\u3002 \u6b63\u5982\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\uff0c\u4ea4\u53c9\u71b5\u5c06\u60e9\u7f5a\u4f30\u8ba1\u76ee\u6807\u7c7b\u7684\u6982\u7387\u8f83\u4f4e\u7684\u6a21\u578b\u3002 TensorFlow \u63d0\u4f9b\u4e86\u51e0\u79cd\u8ba1\u7b97\u4ea4\u53c9\u71b5\u7684\u529f\u80fd\u3002 \u6211\u4eec\u5c06\u4f7f\u7528 sparse_softmax_cross_entropy_with_logits() \uff1a\u5b83\u6839\u636e\u201clogit\u201d\u8ba1\u7b97\u4ea4\u53c9\u71b5\uff08\u5373\uff0c\u5728\u901a\u8fc7 softmax \u6fc0\u6d3b\u51fd\u6570\u4e4b\u524d\u7684\u7f51\u7edc\u8f93\u51fa\uff09\uff0c\u5e76\u4e14\u671f\u671b\u4ee5 0 \u5230 -1 \u6570\u91cf\u7684\u6574\u6570\u5f62\u5f0f\u7684\u6807\u7b7e\uff08\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u4ece 0 \u5230 9\uff09\u3002 \u8fd9\u5c06\u7ed9\u6211\u4eec\u4e00\u4e2a\u5305\u542b\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u4ea4\u53c9\u71b5\u7684 1D \u5f20\u91cf\u3002 \u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 TensorFlow \u7684 reduce_mean() \u51fd\u6570\u6765\u8ba1\u7b97\u6240\u6709\u5b9e\u4f8b\u7684\u5e73\u5747\u4ea4\u53c9\u71b5\u3002 with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") \u8be5 sparse_softmax_cross_entropy_with_logits() \u51fd\u6570\u7b49\u540c\u4e8e\u5e94\u7528 SOFTMAX \u6fc0\u6d3b\u51fd\u6570\uff0c\u7136\u540e\u8ba1\u7b97\u4ea4\u53c9\u71b5\uff0c\u4f46\u5b83\u66f4\u9ad8\u6548\uff0c\u5b83\u59a5\u5584\u7167\u987e\u7684\u8fb9\u754c\u60c5\u51b5\u4e0b\uff0c\u6bd4\u5982 logits \u7b49\u4e8e 0\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u6ca1\u6709\u8f83\u65e9\u7684\u5e94\u7528 SOFTMAX \u6fc0\u6d3b\u51fd\u6570\u3002 \u8fd8\u6709\u79f0\u4e3a softmax_cross_entropy_with_logits() \u7684\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u6807\u7b7e\u5355\u70ed\u8f7d\u4f53\u7684\u5f62\u5f0f\uff08\u800c\u4e0d\u662f\u6574\u6570 0 \u81f3\u7c7b\u7684\u6570\u76ee\u51cf 1\uff09\u3002 \u6211\u4eec\u6709\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u6211\u4eec\u6709\u635f\u5931\u51fd\u6570\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a GradientDescentOptimizer \u6765\u8c03\u6574\u6a21\u578b\u53c2\u6570\u4ee5\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002\u6ca1\u4ec0\u4e48\u65b0\u9c9c\u7684; \u5c31\u50cf\u6211\u4eec\u5728\u7b2c 9 \u7ae0\u4e2d\u6240\u505a\u7684\u90a3\u6837\uff1a learning_rate = 0.01 with tf.name_scope(\"train\"): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) \u5efa\u6a21\u9636\u6bb5\u7684\u6700\u540e\u4e00\u4e2a\u91cd\u8981\u6b65\u9aa4\u662f\u6307\u5b9a\u5982\u4f55\u8bc4\u4f30\u6a21\u578b\u3002 \u6211\u4eec\u5c06\u7b80\u5355\u5730\u5c06\u7cbe\u5ea6\u7528\u4f5c\u6211\u4eec\u7684\u7ee9\u6548\u6307\u6807\u3002 \u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b9e\u4f8b\uff0c\u901a\u8fc7\u68c0\u67e5\u6700\u9ad8 logit \u662f\u5426\u5bf9\u5e94\u4e8e\u76ee\u6807\u7c7b\u522b\u6765\u786e\u5b9a\u795e\u7ecf\u7f51\u7edc\u7684\u9884\u6d4b\u662f\u5426\u6b63\u786e\u3002 \u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 in_top_k() \u51fd\u6570\u3002 \u8fd9\u8fd4\u56de\u4e00\u4e2a\u5145\u6ee1\u5e03\u5c14\u503c\u7684 1D \u5f20\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e9b\u5e03\u5c14\u503c\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\uff0c\u7136\u540e\u8ba1\u7b97\u5e73\u5747\u503c\u3002 \u8fd9\u5c06\u7ed9\u6211\u4eec\u7f51\u7edc\u7684\u6574\u4f53\u51c6\u786e\u6027. with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) \u800c\u4e14\uff0c\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u521d\u59cb\u5316\u6240\u6709\u53d8\u91cf\u7684\u8282\u70b9\uff0c\u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e00\u4e2a Saver \u6765\u5c06\u6211\u4eec\u8bad\u7ec3\u6709\u7d20\u7684\u6a21\u578b\u53c2\u6570\u4fdd\u5b58\u5230\u78c1\u76d8\u4e2d\uff1a init = tf.global_variables_initializer() saver = tf.train.Saver() \u5efa\u6a21\u9636\u6bb5\u7ed3\u675f\u3002 \u8fd9\u662f\u4e0d\u5230 40 \u884c\u4ee3\u7801\uff0c\u4f46\u76f8\u5f53\u6fc0\u70c8\uff1a\u6211\u4eec\u4e3a\u8f93\u5165\u548c\u76ee\u6807\u521b\u5efa\u5360\u4f4d\u7b26\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6784\u5efa\u795e\u7ecf\u5143\u5c42\u7684\u51fd\u6570\uff0c\u6211\u4eec\u7528\u5b83\u6765\u521b\u5efa DNN\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u635f\u5931\u51fd\u6570\uff0c\u6211\u4eec \u521b\u5efa\u4e86\u4e00\u4e2a\u4f18\u5316\u5668\uff0c\u6700\u540e\u5b9a\u4e49\u4e86\u6027\u80fd\u6307\u6807\u3002 \u73b0\u5728\u5230\u6267\u884c\u9636\u6bb5\u3002","title":"\u6784\u9020\u9636\u6bb5"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_8","text":"\u8fd9\u90e8\u5206\u8981\u77ed\u5f97\u591a\uff0c\u66f4\u7b80\u5355\u3002 \u9996\u5148\uff0c\u6211\u4eec\u52a0\u8f7d MNIST\u3002 \u6211\u4eec\u53ef\u4ee5\u50cf\u4e4b\u524d\u7684\u7ae0\u8282\u90a3\u6837\u4f7f\u7528 ScikitLearn\uff0c\u4f46\u662f TensorFlow \u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\u52a9\u624b\u6765\u83b7\u53d6\u6570\u636e\uff0c\u5c06\u5176\u7f29\u653e\uff080 \u5230 1 \u4e4b\u95f4\uff09\uff0c\u5c06\u5b83\u6d17\u724c\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u529f\u80fd\u6765\u4e00\u6b21\u52a0\u8f7d\u4e00\u4e2a\u5c0f\u6279\u91cf\uff1a from tensorflow.examples.tutorials.mnist import input_data mnist = input_data.read_data_sets(\"/tmp/data/\") \u73b0\u5728\u6211\u4eec\u5b9a\u4e49\u6211\u4eec\u8981\u8fd0\u884c\u7684\u8fed\u4ee3\u6570\uff0c\u4ee5\u53ca\u5c0f\u6279\u91cf\u7684\u5927\u5c0f\uff1a n_epochs = 10001 batch_size = 50 \u73b0\u5728\u6211\u4eec\u53bb\u8bad\u7ec3\u6a21\u578b: with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) acc_train = accuracy.eval(feed_dict={X: X_batch, y: y_batch}) acc_test = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Train accuracy:\", acc_train, \"Test accuracy:\", acc_test) save_path = saver.save(sess, \"./my_model_final.ckpt\") \u8be5\u4ee3\u7801\u6253\u5f00\u4e00\u4e2a TensorFlow \u4f1a\u8bdd\uff0c\u5e76\u8fd0\u884c\u521d\u59cb\u5316\u6240\u6709\u53d8\u91cf\u7684 init \u8282\u70b9\u3002 \u7136\u540e\u5b83\u8fd0\u884c\u7684\u4e3b\u8981\u8bad\u7ec3\u5faa\u73af\uff1a\u5728\u6bcf\u4e2a\u65f6\u671f\uff0c\u901a\u8fc7\u4e00\u4e9b\u5c0f\u6279\u6b21\u7684\u5bf9\u5e94\u4e8e\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u7684\u4ee3\u7801\u8fdb\u884c\u8fed\u4ee3\u3002 \u6bcf\u4e2a\u5c0f\u6279\u91cf\u901a\u8fc7 next_batch() \u65b9\u6cd5\u83b7\u53d6\uff0c\u7136\u540e\u4ee3\u7801\u7b80\u5355\u5730\u8fd0\u884c\u8bad\u7ec3\u64cd\u4f5c\uff0c\u4e3a\u5f53\u524d\u7684\u5c0f\u6279\u91cf\u8f93\u5165\u6570\u636e\u548c\u76ee\u6807\u63d0\u4f9b\u3002 \u63a5\u4e0b\u6765\uff0c\u5728\u6bcf\u4e2a\u65f6\u671f\u7ed3\u675f\u65f6\uff0c\u4ee3\u7801\u8bc4\u4f30\u6700\u540e\u4e00\u4e2a\u5c0f\u6279\u91cf\u548c\u5b8c\u6574\u8bad\u7ec3\u96c6\u4e0a\u7684\u6a21\u578b\uff0c\u5e76\u6253\u5370\u51fa\u7ed3\u679c\u3002 \u6700\u540e\uff0c\u6a21\u578b\u53c2\u6570\u4fdd\u5b58\u5230\u78c1\u76d8\u3002","title":"\u6267\u884c\u9636\u6bb5"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_9","text":"\u73b0\u5728\u795e\u7ecf\u7f51\u7edc\u88ab\u8bad\u7ec3\u4e86\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u8fdb\u884c\u9884\u6d4b\u3002 \u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u5efa\u6a21\u9636\u6bb5\uff0c\u4f46\u662f\u66f4\u6539\u6267\u884c\u9636\u6bb5\uff0c\u5982\u4e0b\u6240\u793a\uff1a with tf.Session() as sess: saver.restore(sess, \"./my_model_final.ckpt\") # or better, use save_path X_new_scaled = mnist.test.images[:20] Z = logits.eval(feed_dict={X: X_new_scaled}) y_pred = np.argmax(Z, axis=1) \u9996\u5148\uff0c\u4ee3\u7801\u4ece\u78c1\u76d8\u52a0\u8f7d\u6a21\u578b\u53c2\u6570\u3002 \u7136\u540e\u52a0\u8f7d\u4e00\u4e9b\u60a8\u60f3\u8981\u5206\u7c7b\u7684\u65b0\u56fe\u50cf\u3002 \u8bb0\u4f4f\u5e94\u7528\u4e0e\u8bad\u7ec3\u6570\u636e\u76f8\u540c\u7684\u7279\u5f81\u7f29\u653e\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u5176\u4ece 0 \u7f29\u653e\u5230 1\uff09\u3002 \u7136\u540e\u4ee3\u7801\u8bc4\u4f30\u5bf9\u6570\u70b9\u8282\u70b9\u3002 \u5982\u679c\u60a8\u60f3\u77e5\u9053\u6240\u6709\u4f30\u8ba1\u7684\u7c7b\u6982\u7387\uff0c\u5219\u9700\u8981\u5c06 softmax() \u51fd\u6570\u5e94\u7528\u4e8e\u5bf9\u6570\uff0c\u4f46\u5982\u679c\u60a8\u53ea\u60f3\u9884\u6d4b\u4e00\u4e2a\u7c7b\uff0c\u5219\u53ef\u4ee5\u7b80\u5355\u5730\u9009\u62e9\u5177\u6709\u6700\u9ad8 logit \u503c\u7684\u7c7b\uff08\u4f7f\u7528 argmax() \u51fd\u6570\u505a\u7684\u4f0e\u4fe9\uff09\u3002","title":"\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_10","text":"\u795e\u7ecf\u7f51\u7edc\u7684\u7075\u6d3b\u6027\u4e5f\u662f\u5176\u4e3b\u8981\u7f3a\u70b9\u4e4b\u4e00\uff1a\u6709\u5f88\u591a\u8d85\u53c2\u6570\u8981\u8fdb\u884c\u8c03\u6574\u3002 \u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u53ef\u60f3\u8c61\u7684\u7f51\u7edc\u62d3\u6251\uff08\u5982\u4f55\u795e\u7ecf\u5143\u4e92\u8fde\uff09\uff0c\u800c\u4e14\u5373\u4f7f\u5728\u7b80\u5355\u7684 MLP \u4e2d\uff0c\u60a8\u53ef\u4ee5\u66f4\u6539\u5c42\u6570\uff0c\u6bcf\u5c42\u795e\u7ecf\u5143\u6570\uff0c\u6bcf\u5c42\u4f7f\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\u7c7b\u578b\uff0c\u6743\u91cd\u521d\u59cb\u5316\u903b\u8f91\u7b49\u7b49\u3002 \u4f60\u600e\u4e48\u77e5\u9053\u4ec0\u4e48\u7ec4\u5408\u7684\u8d85\u53c2\u6570\u662f\u6700\u9002\u5408\u4f60\u7684\u4efb\u52a1\uff1f \u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5177\u6709\u4ea4\u53c9\u9a8c\u8bc1\u7684\u7f51\u683c\u641c\u7d22\u6765\u67e5\u627e\u6b63\u786e\u7684\u8d85\u53c2\u6570\uff0c\u5c31\u50cf\u60a8\u5728\u524d\u51e0\u7ae0\u4e2d\u6240\u505a\u7684\u90a3\u6837\uff0c\u4f46\u662f\u7531\u4e8e\u8981\u8c03\u6574\u8bb8\u591a\u8d85\u53c2\u6570\uff0c\u5e76\u4e14\u7531\u4e8e\u5728\u5927\u578b\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u9700\u8981\u5f88\u591a\u65f6\u95f4\uff0c \u60a8\u53ea\u80fd\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u63a2\u7d22\u8d85\u53c2\u6570\u7a7a\u95f4\u7684\u4e00\u5c0f\u90e8\u5206\u3002 \u6b63\u5982\u6211\u4eec\u5728\u7b2c2\u7ae0\u4e2d\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u4f7f\u7528 \u968f\u673a\u641c\u7d22 \u8981\u597d\u5f97\u591a\u3002\u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u4f7f\u7528\u8bf8\u5982 Oscar \u4e4b\u7c7b\u7684\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u7b97\u6cd5\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u627e\u5230\u4e00\u7ec4\u597d\u7684\u8d85\u53c2\u6570. \u5b83\u6709\u52a9\u4e8e\u4e86\u89e3\u6bcf\u4e2a\u8d85\u7ea7\u53c2\u6570\u7684\u503c\u662f\u5408\u7406\u7684\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u9650\u5236\u641c\u7d22\u7a7a\u95f4\u3002 \u6211\u4eec\u4ece\u9690\u85cf\u5c42\u6570\u5f00\u59cb\u3002","title":"\u5fae\u8c03\u795e\u7ecf\u7f51\u7edc\u8d85\u53c2\u6570"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_11","text":"\u5bf9\u4e8e\u8bb8\u591a\u95ee\u9898\uff0c\u60a8\u53ea\u9700\u4ece\u5355\u4e2a\u9690\u85cf\u5c42\u5f00\u59cb\uff0c\u60a8\u5c06\u83b7\u5f97\u5408\u7406\u7684\u7ed3\u679c\u3002 \u5b9e\u9645\u4e0a\u5df2\u7ecf\u8868\u660e\uff0c\u53ea\u6709\u4e00\u4e2a\u9690\u85cf\u5c42\u7684 MLP \u53ef\u4ee5\u5efa\u6a21\u751a\u81f3\u6700\u590d\u6742\u7684\u529f\u80fd\uff0c\u53ea\u8981\u5b83\u5177\u6709\u8db3\u591f\u7684\u795e\u7ecf\u5143\u3002 \u957f\u671f\u4ee5\u6765\uff0c\u8fd9\u4e9b\u4e8b\u5b9e\u8bf4\u670d\u4e86\u7814\u7a76\u4eba\u5458\uff0c\u6ca1\u6709\u5fc5\u8981\u8c03\u67e5\u4efb\u4f55\u66f4\u6df1\u5c42\u6b21\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u4f46\u662f\u4ed6\u4eec\u5ffd\u7565\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u6df1\u5c42\u7f51\u7edc\u5177\u6709\u6bd4\u6d45\u5c42\u7f51\u7edc\u66f4\u9ad8\u7684\u53c2\u6570\u6548\u7387\uff1a\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u6bd4\u6d45\u7f51\u683c\u66f4\u5c11\u7684\u795e\u7ecf\u5143\u6765\u5efa\u6a21\u590d\u6742\u7684\u51fd\u6570\uff0c\u4f7f\u5f97\u8bad\u7ec3\u66f4\u5feb\u3002 \u8981\u4e86\u89e3\u4e3a\u4ec0\u4e48\uff0c\u5047\u8bbe\u60a8\u88ab\u8981\u6c42\u4f7f\u7528\u4e00\u4e9b\u7ed8\u56fe\u8f6f\u4ef6\u7ed8\u5236\u4e00\u4e2a\u68ee\u6797\uff0c\u4f46\u662f\u60a8\u88ab\u7981\u6b62\u4f7f\u7528\u590d\u5236/\u7c98\u8d34\u3002 \u4f60\u5fc5\u987b\u5355\u72ec\u7ed8\u5236\u6bcf\u68f5\u6811\uff0c\u6bcf\u679d\u5206\u679d\uff0c\u6bcf\u53f6\u53f6\u3002 \u5982\u679c\u4f60\u53ef\u4ee5\u753b\u4e00\u4e2a\u53f6\uff0c\u590d\u5236/\u7c98\u8d34\u5b83\u6765\u7ed8\u5236\u4e00\u4e2a\u5206\u652f\uff0c\u7136\u540e\u590d\u5236/\u7c98\u8d34\u8be5\u5206\u652f\u6765\u521b\u5efa\u4e00\u4e2a\u6811\uff0c\u6700\u540e\u590d\u5236/\u7c98\u8d34\u8fd9\u4e2a\u6811\u6765\u5236\u4f5c\u4e00\u4e2a\u6797\uff0c\u4f60\u5c06\u5f88\u5feb\u5b8c\u6210\u3002 \u73b0\u5b9e\u4e16\u754c\u7684\u6570\u636e\u901a\u5e38\u4ee5\u8fd9\u6837\u4e00\u79cd\u5206\u5c42\u7684\u65b9\u5f0f\u8fdb\u884c\u7ed3\u6784\u5316\uff0cDNN \u81ea\u52a8\u5229\u7528\u8fd9\u4e00\u4e8b\u5b9e\uff1a\u8f83\u4f4e\u7684\u9690\u85cf\u5c42\u6a21\u62df\u4f4e\u7ea7\u7ed3\u6784\uff08\u4f8b\u5982\uff0c\u5404\u79cd\u5f62\u72b6\u548c\u65b9\u5411\u7684\u7ebf\u6bb5\uff09\uff0c\u4e2d\u95f4\u9690\u85cf\u5c42\u5c06\u8fd9\u4e9b\u4f4e\u7ea7\u7ed3\u6784\u7ec4\u5408\u5230 \u6a21\u578b\u4e2d\u7ea7\u7ed3\u6784\uff08\u4f8b\u5982\uff0c\u6b63\u65b9\u5f62\uff0c\u5706\u5f62\uff09\u548c\u6700\u9ad8\u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42\u5c06\u8fd9\u4e9b\u4e2d\u95f4\u7ed3\u6784\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4ee5\u6a21\u62df\u9ad8\u7ea7\u7ed3\u6784\uff08\u5982\u9762\uff09\u3002 \u8fd9\u79cd\u5206\u5c42\u67b6\u6784\u4e0d\u4ec5\u53ef\u4ee5\u5e2e\u52a9 DNN \u66f4\u5feb\u5730\u878d\u5408\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u63d0\u9ad8\u5176\u5c06\u5176\u63a8\u5e7f\u5230\u65b0\u6570\u636e\u96c6\u7684\u80fd\u529b\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5df2\u7ecf\u8bad\u7ec3\u4e86\u6a21\u578b\u4ee5\u8bc6\u522b\u56fe\u7247\u4e2d\u7684\u8138\u90e8\uff0c\u5e76\u4e14\u60a8\u73b0\u5728\u60f3\u8981\u8bad\u7ec3\u4e00\u4e2a\u65b0\u7684\u795e\u7ecf\u7f51\u7edc\u6765\u8bc6\u522b\u53d1\u578b\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u4f7f\u7528\u7b2c\u4e00\u4e2a\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\u6b21\u6765\u542f\u52a8\u8bad\u7ec3\u3002 \u800c\u4e0d\u662f\u968f\u673a\u521d\u59cb\u5316\u65b0\u795e\u7ecf\u7f51\u7edc\u7684\u524d\u51e0\u5c42\u7684\u6743\u91cd\u548c\u504f\u7f6e\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u521d\u59cb\u5316\u4e3a\u7b2c\u4e00\u4e2a\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\u7684\u6743\u91cd\u548c\u504f\u7f6e\u7684\u503c\u3002\u8fd9\u6837\uff0c\u7f51\u7edc\u5c06\u4e0d\u5fc5\u4ece\u5927\u591a\u6570\u56fe\u7247\u4e2d\u4f4e\u7ed3\u6784\u4e2d\u4ece\u5934\u5b66\u4e60\uff1b\u5b83\u53ea\u9700\u8981\u5b66\u4e60\u66f4\u9ad8\u5c42\u6b21\u7684\u7ed3\u6784\uff08\u4f8b\u5982\u53d1\u578b\uff09\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u5bf9\u4e8e\u8bb8\u591a\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u4ece\u4e00\u4e2a\u6216\u4e24\u4e2a\u9690\u85cf\u5c42\u5f00\u59cb\uff0c\u5b83\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff08\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u53ea\u6709\u4e00\u4e2a\u9690\u85cf\u5c42\u548c\u51e0\u767e\u4e2a\u795e\u7ecf\u5143\uff0c\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u5bb9\u6613\u8fbe\u5230 97% \u4ee5\u4e0a\u7684\u51c6\u786e\u5ea6\u4f7f\u7528\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u603b\u795e\u7ecf\u5143\u6570\u91cf\u7684\u9690\u85cf\u5c42\uff0c\u5728\u5927\u81f4\u76f8\u540c\u7684\u8bad\u7ec3\u65f6\u95f4\u91cf\u4e2d\u7cbe\u786e\u5ea6\u4e3a 98%\uff09\u3002\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u9010\u6e10\u589e\u52a0\u9690\u85cf\u5c42\u7684\u6570\u91cf\uff0c\u76f4\u5230\u60a8\u5f00\u59cb\u8986\u76d6\u8bad\u7ec3\u96c6\u3002\u975e\u5e38\u590d\u6742\u7684\u4efb\u52a1\uff0c\u4f8b\u5982\u5927\u578b\u56fe\u50cf\u5206\u7c7b\u6216\u8bed\u97f3\u8bc6\u522b\uff0c\u901a\u5e38\u9700\u8981\u5177\u6709\u6570\u5341\u4e2a\u5c42\uff08\u6216\u751a\u81f3\u6570\u767e\u4e2a\u4f46\u4e0d\u5b8c\u5168\u76f8\u8fde\u7684\u7f51\u7edc\uff09\u7684\u7f51\u7edc\uff0c\u6b63\u5982\u6211\u4eec\u5c06\u5728\u7b2c 13 \u7ae0\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff09\uff0c\u5e76\u4e14\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u3002\u4f46\u662f\uff0c\u60a8\u5c06\u5f88\u5c11\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\u8fd9\u6837\u7684\u7f51\u7edc\uff1a\u91cd\u7528\u9884\u5148\u8bad\u7ec3\u7684\u6700\u5148\u8fdb\u7684\u7f51\u7edc\u6267\u884c\u7c7b\u4f3c\u4efb\u52a1\u7684\u90e8\u5206\u66f4\u4e3a\u5e38\u89c1\u3002\u8bad\u7ec3\u5c06\u4f1a\u66f4\u5feb\uff0c\u9700\u8981\u66f4\u5c11\u7684\u6570\u636e\uff08\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u8fdb\u884c\u8ba8\u8bba\uff09","title":"\u9690\u85cf\u5c42\u6570\u91cf"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_12","text":"\u663e\u7136\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u5c42\u4e2d\u795e\u7ecf\u5143\u7684\u6570\u91cf\u7531\u60a8\u7684\u4efb\u52a1\u9700\u8981\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7c7b\u578b\u51b3\u5b9a\u3002\u4f8b\u5982\uff0cMNIST \u4efb\u52a1\u9700\u8981 28\u00d728 = 784 \u4e2a\u8f93\u5165\u795e\u7ecf\u5143\u548c 10 \u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u3002\u5bf9\u4e8e\u9690\u85cf\u7684\u5c42\u6b21\u6765\u8bf4\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5f62\u6210\u4e00\u4e2a\u6f0f\u6597\uff0c\u6bcf\u4e2a\u5c42\u9762\u4e0a\u7684\u795e\u7ecf\u5143\u8d8a\u6765\u8d8a\u5c11\uff0c\u539f\u56e0\u5728\u4e8e\u8bb8\u591a\u4f4e\u7ea7\u522b\u529f\u80fd\u53ef\u4ee5\u5408\u5e76\u6210\u66f4\u5c11\u7684\u9ad8\u7ea7\u529f\u80fd\u3002\u4f8b\u5982\uff0cMNIST \u7684\u5178\u578b\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u5177\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\uff0c\u7b2c\u4e00\u4e2a\u5177\u6709 300 \u4e2a\u795e\u7ecf\u5143\uff0c\u7b2c\u4e8c\u4e2a\u5177\u6709 100 \u4e2a\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u505a\u6cd5\u73b0\u5728\u5e76\u4e0d\u5e38\u89c1\uff0c\u60a8\u53ef\u4ee5\u4e3a\u6240\u6709\u9690\u85cf\u5c42\u4f7f\u7528\u76f8\u540c\u7684\u5927\u5c0f - \u4f8b\u5982\uff0c\u6240\u6709\u9690\u85cf\u7684\u5c42\u4e0e 150 \u4e2a\u795e\u7ecf\u5143\uff1a\u8fd9\u6837\u53ea\u7528\u8c03\u6574\u4e00\u6b21\u8d85\u53c2\u6570\u800c\u4e0d\u662f\u6bcf\u5c42\u90fd\u9700\u8981\u8c03\u6574\uff08\u56e0\u4e3a\u5982\u679c\u6bcf\u5c42\u4e00\u6837\uff0c\u6bd4\u5982 150\uff0c\u4e4b\u540e\u8c03\u5c31\u6bcf\u5c42\u90fd\u8c03\u6210 160\uff09\u3002\u5c31\u50cf\u5c42\u6570\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u9010\u6e10\u589e\u52a0\u795e\u7ecf\u5143\u7684\u6570\u91cf\uff0c\u76f4\u5230\u7f51\u7edc\u5f00\u59cb\u8fc7\u5ea6\u62df\u5408\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u901a\u8fc7\u589e\u52a0\u6bcf\u5c42\u7684\u795e\u7ecf\u5143\u6570\u91cf\uff0c\u53ef\u4ee5\u589e\u52a0\u5c42\u6570\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u591a\u7684\u6d88\u8017\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u627e\u5230\u5b8c\u7f8e\u7684\u795e\u7ecf\u5143\u6570\u91cf\u4ecd\u7136\u662f\u9ed1\u8272\u7684\u827a\u672f. \u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u9009\u62e9\u4e00\u4e2a\u5177\u6709\u6bd4\u5b9e\u9645\u9700\u8981\u7684\u66f4\u591a\u5c42\u6b21\u548c\u795e\u7ecf\u5143\u7684\u6a21\u578b\uff0c\u7136\u540e\u4f7f\u7528\u65e9\u671f\u505c\u6b62\u6765\u9632\u6b62\u5b83\u8fc7\u5ea6\u62df\u5408\uff08\u4ee5\u53ca\u5176\u4ed6\u6b63\u5219\u5316\u6280\u672f\uff0c\u7279\u522b\u662f drop out\uff0c\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u770b\u5230\uff09\u3002 \u8fd9\u88ab\u79f0\u4e3a\u201c\u62c9\u4f38\u88e4\u201d\u7684\u65b9\u6cd5\uff1a\u800c\u4e0d\u662f\u6d6a\u8d39\u65f6\u95f4\u5bfb\u627e\u5b8c\u7f8e\u5339\u914d\u60a8\u7684\u5927\u5c0f\u7684\u88e4\u5b50\uff0c\u53ea\u9700\u4f7f\u7528\u5927\u578b\u4f38\u7f29\u88e4\uff0c\u7f29\u5c0f\u5230\u5408\u9002\u7684\u5c3a\u5bf8\u3002","title":"\u6bcf\u5c42\u9690\u85cf\u5c42\u7684\u795e\u7ecf\u5143\u6570\u91cf"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_13","text":"\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u5728\u9690\u85cf\u5c42\u4e2d\u4f7f\u7528 ReLU \u6fc0\u6d3b\u51fd\u6570\uff08\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u4f53\uff0c\u6211\u4eec\u5c06\u5728\u7b2c 11 \u7ae0\u4e2d\u770b\u5230\uff09\u3002 \u4e0e\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\u76f8\u6bd4\uff0c\u8ba1\u7b97\u901f\u5ea6\u8981\u5feb\u4e00\u4e9b\uff0c\u800c\u68af\u5ea6\u4e0b\u964d\u5728\u5c40\u90e8\u6700\u9ad8\u70b9\u4e0a\u5e76\u4e0d\u4f1a\u88ab\u5361\u4f4f\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5bf9\u5927\u7684\u8f93\u5165\u503c\u9971\u548c\uff08\u4e0e\u903b\u8f91\u51fd\u6570\u6216\u53cc\u66f2\u6b63\u5207\u51fd\u6570\u76f8\u53cd, \u4ed6\u4eec\u5bb9\u6613\u5728 1 \u9971\u548c) \u5bf9\u4e8e\u8f93\u51fa\u5c42\uff0csoftmax \u6fc0\u6d3b\u51fd\u6570\u901a\u5e38\u662f\u5206\u7c7b\u4efb\u52a1\u7684\u826f\u597d\u9009\u62e9\uff08\u5f53\u8fd9\u4e9b\u7c7b\u662f\u4e92\u65a5\u7684\u65f6\uff09\u3002 \u5bf9\u4e8e\u56de\u5f52\u4efb\u52a1\uff0c\u60a8\u5b8c\u5168\u53ef\u4ee5\u4e0d\u4f7f\u7528\u6fc0\u6d3b\u51fd\u6570\u3002 \u8fd9\u5c31\u662f\u4eba\u9020\u795e\u7ecf\u7f51\u7edc\u7684\u8fd9\u4e2a\u4ecb\u7ecd\u3002 \u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u8bad\u7ec3\u975e\u5e38\u6df1\u7684\u7f51\u7edc\u7684\u6280\u672f\uff0c\u5e76\u5206\u53d1\u591a\u4e2a\u670d\u52a1\u5668\u548c GPU \u7684\u8bad\u7ec3\u3002 \u7136\u540e\u6211\u4eec\u5c06\u63a2\u8ba8\u4e00\u4e9b\u5176\u4ed6\u6d41\u884c\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\uff1a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u548c\u81ea\u52a8\u7f16\u7801\u5668\u3002","title":"\u6fc0\u6d3b\u51fd\u6570"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_14","text":"from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf from sklearn.metrics import accuracy_score import numpy as np if __name__ == '__main__': n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 100 n_outputs = 10 mnist = input_data.read_data_sets(\"/tmp/data/\") X_train = mnist.train.images X_test = mnist.test.images y_train = mnist.train.labels.astype(\"int\") y_test = mnist.test.labels.astype(\"int\") X = tf.placeholder(tf.float32, shape= (None, n_inputs), name='X') y = tf.placeholder(tf.int64, shape=(None), name = 'y') with tf.name_scope('dnn'): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu ,name= 'hidden1') hidden2 = tf.layers.dense(hidden1, n_hidden2, name='hidden2', activation= tf.nn.relu) logits = tf.layers.dense(hidden2, n_outputs, name='outputs') with tf.name_scope('loss'): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels = y, logits = logits) loss = tf.reduce_mean(xentropy, name='loss')#\u6240\u6709\u503c\u6c42\u5e73\u5747 learning_rate = 0.01 with tf.name_scope('train'): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) with tf.name_scope('eval'): correct = tf.nn.in_top_k(logits ,y ,1)#\u662f\u5426\u4e0e\u771f\u503c\u4e00\u81f4 \u8fd4\u56de\u5e03\u5c14\u503c accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) #tf.cast\u5c06\u6570\u636e\u8f6c\u5316\u4e3a0,1\u5e8f\u5217 init = tf.global_variables_initializer() n_epochs = 20 batch_size = 50 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op,feed_dict={X:X_batch, y: y_batch}) acc_train = accuracy.eval(feed_dict={X:X_batch, y: y_batch}) acc_test = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Train accuracy:\", acc_train, \"Test accuracy:\", acc_test)","title":"\u5b8c\u6574\u4ee3\u7801"},{"location":"10.%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BB%8B%E7%BB%8D/#_15","text":"\u4f7f\u7528\u539f\u59cb\u7684\u4eba\u5de5\u795e\u7ecf\u5143\uff08\u5982\u56fe 10-3 \u4e2d\u7684\u4e00\u4e2a\uff09\u6765\u8ba1\u7b97\u795e\u7ecf\u7f51\u7edc\uff0c\u8ba1\u7b97 A \u2295 B \uff08 \u2295 \u8868\u793a XOR \u8fd0\u7b97\uff09\u3002\u63d0\u793a\uff1a A \u2295 B = (A \u2227 \u00ac B) \u2228 (\u00ac A \u2227 B) \u3002 \u4e3a\u4ec0\u4e48\u901a\u5e38\u4f7f\u7528\u903b\u8f91\u65af\u8482\u56de\u5f52\u5206\u7c7b\u5668\u800c\u4e0d\u662f\u7ecf\u5178\u611f\u77e5\u5668\uff08\u5373\u4f7f\u7528\u611f\u77e5\u5668\u8bad\u7ec3\u7b97\u6cd5\u8bad\u7ec3\u5355\u5c42\u7684\u7ebf\u6027\u9608\u503c\u5355\u5143\uff09\uff1f\u4f60\u5982\u4f55\u8c03\u6574\u611f\u77e5\u5668\u4f7f\u4e4b\u7b49\u540c\u4e8e\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\uff1f \u4e3a\u4ec0\u4e48\u6fc0\u6d3b\u51fd\u6570\u662f\u8bad\u7ec3\u7b2c\u4e00\u4e2a MLP \u7684\u5173\u952e\u56e0\u7d20\uff1f \u8bf4\u51fa\u4e09\u79cd\u6d41\u884c\u7684\u6fc0\u6d3b\u51fd\u6570\u3002\u4f60\u80fd\u753b\u51fa\u5b83\u4eec\u5417\uff1f \u5047\u8bbe\u6709\u4e00\u4e2a MLP \u6709\u4e00\u4e2a 10 \u4e2a\u795e\u7ecf\u5143\u7ec4\u6210\u7684\u8f93\u5165\u5c42\uff0c\u63a5\u7740\u662f\u4e00\u4e2a 50 \u4e2a\u795e\u7ecf\u5143\u7684\u9690\u85cf\u5c42\uff0c\u6700\u540e\u4e00\u4e2a 3 \u4e2a\u795e\u7ecf\u5143\u8f93\u51fa\u5c42\u3002\u6240\u6709\u4eba\u5de5\u795e\u7ecf\u5143\u4f7f\u7528 Relu \u6fc0\u6d3b\u51fd\u6570\u3002 \u8f93\u5165\u77e9\u9635 X \u7684\u5f62\u72b6\u662f\u4ec0\u4e48\uff1f \u9690\u85cf\u5c42\u7684\u6743\u91cd\u5411\u91cf\u7684\u5f62\u72b6\u4ee5\u53ca\u5b83\u7684\u504f\u7f6e\u5411\u91cf\u7684\u5f62\u72b6\u5982\u4f55\uff1f \u8f93\u51fa\u5c42\u7684\u6743\u91cd\u5411\u91cf\u548c\u5b83\u7684\u504f\u7f6e\u5411\u91cf\u7684\u5f62\u72b6\u662f\u4ec0\u4e48\uff1f \u7f51\u7edc\u7684\u8f93\u51fa\u77e9\u9635 Y \u662f\u4ec0\u4e48\u5f62\u72b6\uff1f \u5199\u51fa\u8ba1\u7b97\u7f51\u7edc\u8f93\u51fa\u77e9\u9635\u7684\u65b9\u7a0b \u5982\u679c\u4f60\u60f3\u628a\u7535\u5b50\u90ae\u4ef6\u5206\u7c7b\u6210\u5783\u573e\u90ae\u4ef6\u6216\u6b63\u5e38\u90ae\u4ef6\uff0c\u4f60\u9700\u8981\u5728\u8f93\u51fa\u5c42\u4e2d\u6709\u591a\u5c11\u4e2a\u795e\u7ecf\u5143\uff1f\u5728\u8f93\u51fa\u5c42\u4e2d\u5e94\u8be5\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u6fc0\u6d3b\u51fd\u6570\uff1f\u5982\u679c\u4f60\u60f3\u89e3\u51b3 MNIST \u95ee\u9898\uff0c\u4f60\u9700\u8981\u591a\u5c11\u795e\u7ecf\u5143\u5728\u8f93\u51fa\u5c42\uff0c\u4f7f\u7528\u4ec0\u4e48\u6fc0\u6d3b\u51fd\u6570\uff1f\u5982\u7b2c 2 \u7ae0\uff0c\u4e00\u6837\u8ba9\u4f60\u7684\u7f51\u7edc\u9884\u6d4b\u623f\u5c4b\u4ef7\u683c\u3002 \u4ec0\u4e48\u662f\u53cd\u5411\u4f20\u64ad\uff0c\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\u53cd\u5411\u4f20\u64ad\u4e0e\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u4f60\u80fd\u5217\u51fa\u6240\u6709\u53ef\u4ee5\u5728 MLP \u4e2d\u8c03\u6574\u7684\u8d85\u53c2\u6570\u5417\uff1f\u5982\u679c MLP \u4e0e\u8bad\u7ec3\u6570\u636e\u76f8\u5339\u914d\uff0c\u4f60\u5982\u4f55\u8c03\u6574\u8fd9\u4e9b\u8d85\u53c2\u6570\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f \u5728 MNIST \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u6df1\u5c42 MLP \u5e76\u67e5\u770b\u662f\u5426\u53ef\u4ee5\u8d85\u8fc7 98% \u7684\u7cbe\u5ea6\u3002\u5c31\u50cf\u5728\u7b2c 9 \u7ae0\u7684\u6700\u540e\u4e00\u6b21\u7ec3\u4e60\u4e2d\uff0c\u5c1d\u8bd5\u6dfb\u52a0\u6240\u6709\u7684\u94c3\u58f0\u548c\u54e8\u5b50\uff08\u5373\uff0c\u4fdd\u5b58\u68c0\u67e5\u70b9\uff0c\u5728\u4e2d\u65ad\u7684\u60c5\u51b5\u4e0b\u6062\u590d\u6700\u540e\u4e00\u4e2a\u68c0\u67e5\u70b9\uff0c\u6dfb\u52a0\u6458\u8981\uff0c\u4f7f\u7528 TensorBoard \u7ed8\u5236\u5b66\u4e60\u66f2\u7ebf\uff0c\u7b49\u7b49\uff09\u3002 \u7ec3\u4e60\u7684\u7b54\u6848\u8bf7\u53c2\u7167\u9644\u5f55 A","title":"\u7ec3\u4e60"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/","text":"\u5341\u4e00\u3001\u8bad\u7ec3\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc \u7b2c 10 \u7ae0\u4ecb\u7ecd\u4e86\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u3002 \u4f46\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u6d45\u7684 DNN\uff0c\u53ea\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\u3002 \u5982\u679c\u4f60\u9700\u8981\u89e3\u51b3\u975e\u5e38\u590d\u6742\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u68c0\u6d4b\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\u4e2d\u7684\u6570\u767e\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8be5\u600e\u4e48\u529e\uff1f \u4f60\u53ef\u80fd\u9700\u8981\u8bad\u7ec3\u66f4\u6df1\u7684 DNN\uff0c\u4e5f\u8bb8\u6709 10 \u5c42\uff0c\u6bcf\u5c42\u5305\u542b\u6570\u767e\u4e2a\u795e\u7ecf\u5143\uff0c\u901a\u8fc7\u6570\u5341\u4e07\u4e2a\u8fde\u63a5\u6765\u8fde\u63a5\u3002 \u8fd9\u4e0d\u4f1a\u662f\u95f2\u5ead\u4fe1\u6b65\uff1a \u9996\u5148\uff0c\u4f60\u5c06\u9762\u4e34\u68d8\u624b\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff08\u6216\u76f8\u5173\u7684\u68af\u5ea6\u7206\u70b8\u95ee\u9898\uff09\uff0c\u8fd9\u4f1a\u5f71\u54cd\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4f7f\u8f83\u4f4e\u5c42\u96be\u4ee5\u8bad\u7ec3\u3002 \u5176\u6b21\uff0c\u5bf9\u4e8e\u5982\u6b64\u5e9e\u5927\u7684\u7f51\u7edc\uff0c\u8bad\u7ec3\u5c06\u975e\u5e38\u7f13\u6162\u3002 \u7b2c\u4e09\uff0c\u5177\u6709\u6570\u767e\u4e07\u53c2\u6570\u7684\u6a21\u578b\u5c06\u4f1a\u6709\u4e25\u91cd\u7684\u8fc7\u62df\u5408\u8bad\u7ec3\u96c6\u7684\u98ce\u9669\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f9d\u6b21\u8ba8\u8bba\u8fd9\u4e9b\u95ee\u9898\uff0c\u5e76\u63d0\u51fa\u89e3\u51b3\u95ee\u9898\u7684\u6280\u5de7\u3002 \u6211\u4eec\u5c06\u4ece\u89e3\u91ca\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u5f00\u59cb\uff0c\u5e76\u63a2\u8ba8\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u770b\u770b\u5404\u79cd\u4f18\u5316\u5668\uff0c\u4e0e\u666e\u901a\u68af\u5ea6\u4e0b\u964d\u76f8\u6bd4\uff0c\u5b83\u4eec\u53ef\u4ee5\u52a0\u901f\u5927\u578b\u6a21\u578b\u7684\u8bad\u7ec3\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c06\u6d4f\u89c8\u4e00\u4e9b\u6d41\u884c\u7684\u5927\u578b\u795e\u7ecf\u7f51\u7edc\u6b63\u5219\u5316\u6280\u672f\u3002 \u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\uff0c\u4f60\u5c06\u80fd\u591f\u8bad\u7ec3\u975e\u5e38\u6df1\u7684\u7f51\u7edc\uff1a\u6b22\u8fce\u6765\u5230\u6df1\u5ea6\u5b66\u4e60\u7684\u4e16\u754c\uff01 \u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898 \u6b63\u5982\u6211\u4eec\u5728\u7b2c 10 \u7ae0\u4e2d\u6240\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7684\u5de5\u4f5c\u539f\u7406\u662f\u4ece\u8f93\u51fa\u5c42\u5230\u8f93\u5165\u5c42\uff0c\u4f20\u64ad\u8bef\u5dee\u7684\u68af\u5ea6\u3002 \u4e00\u65e6\u8be5\u7b97\u6cd5\u5df2\u7ecf\u8ba1\u7b97\u4e86\u7f51\u7edc\u4e2d\u6bcf\u4e2a\u53c2\u6570\u7684\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\uff0c\u5b83\u5c31\u4f7f\u7528\u8fd9\u4e9b\u68af\u5ea6\u6765\u7528\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4\u6765\u66f4\u65b0\u6bcf\u4e2a\u53c2\u6570\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u68af\u5ea6\u5f80\u5f80\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u968f\u7740\u7b97\u6cd5\u8fdb\u5c55\u5230\u8f83\u4f4e\u5c42\u3002 \u7ed3\u679c\uff0c\u68af\u5ea6\u4e0b\u964d\u66f4\u65b0\u4f7f\u5f97\u4f4e\u5c42\u8fde\u63a5\u6743\u91cd\u5b9e\u9645\u4e0a\u4fdd\u6301\u4e0d\u53d8\uff0c\u5e76\u4e14\u8bad\u7ec3\u6c38\u8fdc\u4e0d\u4f1a\u6536\u655b\u5230\u826f\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u8fd9\u88ab\u79f0\u4e3a\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u76f8\u53cd\u7684\u60c5\u51b5\uff1a\u68af\u5ea6\u53ef\u80fd\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\uff0c\u8bb8\u591a\u5c42\u5f97\u5230\u4e86\u975e\u5e38\u5927\u7684\u6743\u91cd\u66f4\u65b0\uff0c\u7b97\u6cd5\u53d1\u6563\u3002\u8fd9\u662f\u68af\u5ea6\u7206\u70b8\u7684\u95ee\u9898\uff0c\u5728\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u4e2d\u6700\u4e3a\u5e38\u89c1\uff08\u89c1\u7b2c 14 \u7ae0\uff09\u3002 \u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u53d7\u68af\u5ea6\u4e0d\u7a33\u5b9a\u4e4b\u82e6; \u4e0d\u540c\u7684\u5c42\u6b21\u53ef\u80fd\u4ee5\u975e\u5e38\u4e0d\u540c\u7684\u901f\u5ea6\u5b66\u4e60\u3002 \u867d\u7136\u8fd9\u79cd\u4e0d\u5e78\u7684\u884c\u4e3a\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u7684\u5b9e\u9a8c\u89c2\u5bdf\uff08\u8fd9\u662f\u9020\u6210\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u88ab\u629b\u5f03\u7684\u539f\u56e0\u4e4b\u4e00\uff09\uff0c\u4f46\u76f4\u5230 2010 \u5e74\u5de6\u53f3\uff0c\u4eba\u4eec\u624d\u6709\u4e86\u660e\u663e\u7684\u8fdb\u6b65\u3002 Xavier Glorot \u548c Yoshua Bengio \u53d1\u8868\u7684\u9898\u4e3a\u300aUnderstanding the Difficulty of Training Deep Feedforward Neural Networks\u300b\u7684\u8bba\u6587\u53d1\u73b0\u4e86\u4e00\u4e9b\u7591\u95ee\uff0c\u5305\u62ec\u6d41\u884c\u7684 sigmoid \u6fc0\u6d3b\u51fd\u6570\u548c\u5f53\u65f6\u6700\u53d7\u6b22\u8fce\u7684\u6743\u91cd\u521d\u59cb\u5316\u6280\u672f\u7684\u7ec4\u5408\uff0c\u5373\u968f\u673a\u521d\u59cb\u5316\u65f6\u4f7f\u7528\u5e73\u5747\u503c\u4e3a 0\uff0c\u6807\u51c6\u5dee\u4e3a 1 \u7684\u6b63\u6001\u5206\u5e03\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4ed6\u4eec\u8868\u660e\uff0c\u7528\u8fd9\u4e2a\u6fc0\u6d3b\u51fd\u6570\u548c\u8fd9\u4e2a\u521d\u59cb\u5316\u65b9\u6848\uff0c\u6bcf\u5c42\u8f93\u51fa\u7684\u65b9\u5dee\u8fdc\u5927\u4e8e\u5176\u8f93\u5165\u7684\u65b9\u5dee\u3002\u7f51\u7edc\u6b63\u5411\uff0c\u6bcf\u5c42\u7684\u65b9\u5dee\u6301\u7eed\u589e\u52a0\uff0c\u76f4\u5230\u6fc0\u6d3b\u51fd\u6570\u5728\u9876\u5c42\u9971\u548c\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u56e0\u4e3alogistic\u51fd\u6570\u7684\u5e73\u5747\u503c\u4e3a 0.5 \u800c\u4e0d\u662f 0\uff08\u53cc\u66f2\u6b63\u5207\u51fd\u6570\u7684\u5e73\u5747\u503c\u4e3a 0\uff0c\u8868\u73b0\u7565\u597d\u4e8e\u6df1\u5c42\u7f51\u7edc\u4e2d\u7684logistic\u51fd\u6570\uff09 \u770b\u4e00\u4e0blogistic \u6fc0\u6d3b\u51fd\u6570\uff08\u53c2\u89c1\u56fe 11-1\uff09\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u8f93\u5165\u53d8\u5927\uff08\u8d1f\u6216\u6b63\uff09\u65f6\uff0c\u51fd\u6570\u9971\u548c\u5728 0 \u6216 1\uff0c\u5bfc\u6570\u975e\u5e38\u63a5\u8fd1 0\u3002\u56e0\u6b64\uff0c\u5f53\u53cd\u5411\u4f20\u64ad\u5f00\u59cb\u65f6\uff0c \u5b83\u51e0\u4e4e\u6ca1\u6709\u68af\u5ea6\u901a\u8fc7\u7f51\u7edc\u4f20\u64ad\u56de\u6765\uff0c\u800c\u4e14\u7531\u4e8e\u53cd\u5411\u4f20\u64ad\u901a\u8fc7\u9876\u5c42\u5411\u4e0b\u4f20\u9012\uff0c\u6240\u4ee5\u5b58\u5728\u7684\u5c0f\u68af\u5ea6\u4e0d\u65ad\u5730\u88ab\u7a00\u91ca\uff0c\u56e0\u6b64\u8f83\u4f4e\u5c42\u786e\u5b9e\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u53ef\u7528\u3002 Glorot \u548c Bengio \u5728\u4ed6\u4eec\u7684\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u663e\u8457\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u3002 \u6211\u4eec\u9700\u8981\u4fe1\u53f7\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u6b63\u786e\u5730\u6d41\u52a8\uff1a\u5728\u8fdb\u884c\u9884\u6d4b\u65f6\u662f\u6b63\u5411\u7684\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u68af\u5ea6\u65f6\u662f\u53cd\u5411\u7684\u3002 \u6211\u4eec\u4e0d\u5e0c\u671b\u4fe1\u53f7\u6d88\u5931\uff0c\u4e5f\u4e0d\u5e0c\u671b\u5b83\u7206\u70b8\u5e76\u9971\u548c\u3002 \u4e3a\u4e86\u4f7f\u4fe1\u53f7\u6b63\u786e\u6d41\u52a8\uff0c\u4f5c\u8005\u8ba4\u4e3a\uff0c\u6211\u4eec\u9700\u8981\u6bcf\u5c42\u8f93\u51fa\u7684\u65b9\u5dee\u7b49\u4e8e\u5176\u8f93\u5165\u7684\u65b9\u5dee\u3002\uff08\u8fd9\u91cc\u6709\u4e00\u4e2a\u6bd4\u55bb\uff1a\u5982\u679c\u5c06\u9ea6\u514b\u98ce\u653e\u5927\u5668\u7684\u65cb\u94ae\u8bbe\u7f6e\u5f97\u592a\u63a5\u8fd1\u4e8e\u96f6\uff0c\u4eba\u4eec\u542c\u4e0d\u5230\u58f0\u97f3\uff0c\u4f46\u662f\u5982\u679c\u5c06\u9ea6\u514b\u98ce\u653e\u5927\u5668\u8bbe\u7f6e\u5f97\u592a\u5927\uff0c\u58f0\u97f3\u5c31\u4f1a\u9971\u548c\uff0c\u4eba\u4eec\u5c31\u4f1a\u542c\u4e0d\u61c2\u4f60\u5728\u8bf4\u4ec0\u4e48\u3002 \u73b0\u5728\u60f3\u8c61\u4e00\u4e0b\u8fd9\u6837\u4e00\u4e2a\u653e\u5927\u5668\u7684\u94fe\u6761\uff1a\u5b83\u4eec\u90fd\u9700\u8981\u6b63\u786e\u8bbe\u7f6e\uff0c\u4ee5\u4fbf\u5728\u94fe\u6761\u7684\u672b\u7aef\u54cd\u4eae\u800c\u6e05\u6670\u5730\u53d1\u51fa\u58f0\u97f3\u3002 \u4f60\u7684\u58f0\u97f3\u5fc5\u987b\u4ee5\u6bcf\u4e2a\u653e\u5927\u5668\u7684\u632f\u5e45\u76f8\u540c\u7684\u5e45\u5ea6\u51fa\u6765\u3002\uff09\u800c\u4e14\u6211\u4eec\u4e5f\u9700\u8981\u68af\u5ea6\u5728\u76f8\u53cd\u65b9\u5411\u4e0a\u6d41\u8fc7\u4e00\u5c42\u4e4b\u524d\u548c\u4e4b\u540e\u6709\u76f8\u540c\u7684\u65b9\u5dee\uff08\u5982\u679c\u60a8\u5bf9\u6570\u5b66\u7ec6\u8282\u611f\u5174\u8da3\uff0c\u8bf7\u67e5\u9605\u8bba\u6587\uff09\u3002\u5b9e\u9645\u4e0a\u4e0d\u53ef\u80fd\u4fdd\u8bc1\u4e24\u8005\u90fd\u662f\u4e00\u6837\u7684\uff0c\u9664\u975e\u8fd9\u4e2a\u5c42\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8fde\u63a5\uff0c\u4f46\u662f\u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u6298\u8877\u529e\u6cd5\uff0c\u5728\u5b9e\u8df5\u4e2d\u8bc1\u660e\u8fd9\u4e2a\u6298\u4e2d\u529e\u6cd5\u975e\u5e38\u597d\uff1a\u968f\u673a\u521d\u59cb\u5316\u8fde\u63a5\u6743\u91cd\u5fc5\u987b\u5982\u516c\u5f0f 11-1 \u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\u5176\u4e2d n_inputs \u548c n_outputs \u662f\u6743\u91cd\u6b63\u5728\u88ab\u521d\u59cb\u5316\u7684\u5c42\uff08\u4e5f\u79f0\u4e3a\u6247\u5165\u548c\u6247\u51fa\uff09\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8fde\u63a5\u7684\u6570\u91cf\u3002 \u8fd9\u79cd\u521d\u59cb\u5316\u7b56\u7565\u901a\u5e38\u88ab\u79f0\u4e3aXavier\u521d\u59cb\u5316\uff08\u5728\u4f5c\u8005\u7684\u540d\u5b57\u4e4b\u540e\uff09\uff0c\u6216\u8005\u6709\u65f6\u662f Glorot \u521d\u59cb\u5316\u3002 \u5f53\u8f93\u5165\u8fde\u63a5\u7684\u6570\u91cf\u5927\u81f4\u7b49\u4e8e\u8f93\u51fa\u8fde\u63a5\u7684\u6570\u91cf\u65f6\uff0c\u53ef\u4ee5\u5f97\u5230\u66f4\u7b80\u5355\u7684\u7b49\u5f0f \u6211\u4eec\u5728\u7b2c 10 \u7ae0\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e2a\u7b80\u5316\u7684\u7b56\u7565\u3002 \u4f7f\u7528 Xavier \u521d\u59cb\u5316\u7b56\u7565\u53ef\u4ee5\u5927\u5927\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\uff0c\u8fd9\u662f\u5bfc\u81f4\u6df1\u5ea6\u5b66\u4e60\u76ee\u524d\u53d6\u5f97\u6210\u529f\u7684\u6280\u5de7\u4e4b\u4e00\u3002 \u6700\u8fd1\u7684\u4e00\u4e9b\u8bba\u6587\u9488\u5bf9\u4e0d\u540c\u7684\u6fc0\u6d3b\u51fd\u6570\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u7684\u7b56\u7565\uff0c\u5982\u8868 11-1 \u6240\u793a\u3002 ReLU \u6fc0\u6d3b\u51fd\u6570\uff08\u53ca\u5176\u53d8\u4f53\uff0c\u5305\u62ec\u7b80\u79f0 ELU \u6fc0\u6d3b\uff09\u7684\u521d\u59cb\u5316\u7b56\u7565\u6709\u65f6\u79f0\u4e3a He \u521d\u59cb\u5316\uff08\u5728\u5176\u4f5c\u8005\u7684\u59d3\u6c0f\u4e4b\u540e\uff09\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c fully_connected() \u51fd\u6570\uff08\u5728\u7b2c 10 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u4f7f\u7528 Xavier \u521d\u59cb\u5316\uff08\u5177\u6709\u7edf\u4e00\u7684\u5206\u5e03\uff09\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684 variance_scaling_initializer() \u51fd\u6570\u6765\u5c06\u5176\u66f4\u6539\u4e3a He \u521d\u59cb\u5316\uff1a \u6ce8\u610f\uff1a\u672c\u4e66\u4f7f\u7528 tensorflow.contrib.layers.fully_connected() \u800c\u4e0d\u662f tf.layers.dense() \uff08\u672c\u7ae0\u7f16\u5199\u65f6\u4e0d\u5b58\u5728\uff09\u3002 \u73b0\u5728\u6700\u597d\u4f7f\u7528 tf.layers.dense() \uff0c\u56e0\u4e3a contrib \u6a21\u5757\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u53ef\u80fd\u4f1a\u66f4\u6539\u6216\u5220\u9664\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002 dense() \u51fd\u6570\u51e0\u4e4e\u4e0e fully_connected() \u51fd\u6570\u5b8c\u5168\u76f8\u540c\u3002 \u4e0e\u672c\u7ae0\u6709\u5173\u7684\u4e3b\u8981\u5dee\u5f02\u662f\uff1a \u51e0\u4e2a\u53c2\u6570\u88ab\u91cd\u65b0\u547d\u540d\uff1a\u8303\u56f4\u53d8\u6210\u540d\u5b57\uff0c activation_fn \u53d8\u6210\u6fc0\u6d3b\uff08\u7c7b\u4f3c\u5730\uff0c _fn \u540e\u7f00\u4ece\u8bf8\u5982 normalizer_fn \u4e4b\u7c7b\u7684\u5176\u4ed6\u53c2\u6570\u4e2d\u79fb\u9664\uff09\uff0c weights_initializer \u53d8\u6210 kernel_initializer \u7b49\u7b49\u3002\u9ed8\u8ba4\u6fc0\u6d3b\u73b0\u5728\u662f None \uff0c\u800c\u4e0d\u662f tf.nn.relu \u3002 \u5b83\u4e0d\u652f\u6301 tensorflow.contrib.framework.arg_scope() \uff08\u7a0d\u540e\u5728\u7b2c 11 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002 \u5b83\u4e0d\u652f\u6301\u6b63\u5219\u5316\u7684\u53c2\u6570\uff08\u7a0d\u540e\u5728\u7b2c 11 \u7ae0\u4ecb\u7ecd\uff09\u3002 he_init = tf.contrib.layers.variance_scaling_initializer() hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, kernel_initializer=he_init, name=\"hidden1\") He \u521d\u59cb\u5316\u53ea\u8003\u8651\u4e86\u6247\u5165\uff0c\u800c\u4e0d\u662f\u50cf Xavier \u521d\u59cb\u5316\u90a3\u6837\u6247\u5165\u548c\u6247\u51fa\u4e4b\u95f4\u7684\u5e73\u5747\u503c\u3002 \u8fd9\u4e5f\u662f variance_scaling_initializer() \u51fd\u6570\u7684\u9ed8\u8ba4\u503c\uff0c\u4f46\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u53c2\u6570 mode =\"FAN_AVG\" \u6765\u66f4\u6539\u5b83\u3002 \u975e\u9971\u548c\u6fc0\u6d3b\u51fd\u6570 Glorot \u548c Bengio \u5728 2010 \u5e74\u7684\u8bba\u6587\u4e2d\u7684\u4e00\u4e2a\u89c1\u89e3\u662f\uff0c\u6d88\u5931/\u7206\u70b8\u7684\u68af\u5ea6\u95ee\u9898\u90e8\u5206\u662f\u7531\u4e8e\u6fc0\u6d3b\u51fd\u6570\u7684\u9009\u62e9\u4e0d\u597d\u9020\u6210\u7684\u3002 \u5728\u90a3\u4e4b\u524d\uff0c\u5927\u591a\u6570\u4eba\u90fd\u8ba4\u4e3a\uff0c\u5982\u679c\u5927\u81ea\u7136\u9009\u62e9\u5728\u751f\u7269\u795e\u7ecf\u5143\u4e2d\u4f7f\u7528 sigmoid \u6fc0\u6d3b\u51fd\u6570\uff0c\u5b83\u4eec\u5fc5\u5b9a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002 \u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\u5728\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e2d\u8868\u73b0\u5f97\u66f4\u597d\uff0c\u7279\u522b\u662f ReLU \u6fc0\u6d3b\u51fd\u6570\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5b83\u5bf9\u6b63\u503c\u4e0d\u4f1a\u9971\u548c\uff08\u4e5f\u56e0\u4e3a\u5b83\u7684\u8ba1\u7b97\u901f\u5ea6\u5f88\u5feb\uff09\u3002 \u4e0d\u5e78\u7684\u662f\uff0cReLU\u6fc0\u6d3b\u529f\u80fd\u5e76\u4e0d\u5b8c\u7f8e\u3002 \u5b83\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a \u201cReLU \u6b7b\u533a\u201d \u7684\u95ee\u9898\uff1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e9b\u795e\u7ecf\u5143\u6709\u6548\u5730\u6b7b\u4ea1\uff0c\u610f\u5473\u7740\u5b83\u4eec\u505c\u6b62\u8f93\u51fa 0 \u4ee5\u5916\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u4f60\u7f51\u7edc\u7684\u4e00\u534a\u795e\u7ecf\u5143\u5df2\u7ecf\u6b7b\u4ea1\uff0c\u7279\u522b\u662f\u5982\u679c\u4f60\u4f7f\u7528\u5927\u5b66\u4e60\u7387\u3002 \u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u5982\u679c\u795e\u7ecf\u5143\u7684\u6743\u91cd\u5f97\u5230\u66f4\u65b0\uff0c\u4f7f\u5f97\u795e\u7ecf\u5143\u8f93\u5165\u7684\u52a0\u6743\u548c\u4e3a\u8d1f\uff0c\u5219\u5b83\u5c06\u5f00\u59cb\u8f93\u51fa 0 \u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u7531\u4e8e\u5f53\u8f93\u5165\u4e3a\u8d1f\u65f6\uff0cReLU\u51fd\u6570\u7684\u68af\u5ea6\u4e3a0\uff0c\u795e\u7ecf\u5143\u4e0d\u53ef\u80fd\u6062\u590d\u751f\u673a\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528 ReLU \u51fd\u6570\u7684\u4e00\u4e2a\u53d8\u4f53\uff0c\u6bd4\u5982 leaky ReLU\u3002\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e3a LeakyReLU\u03b1(z)= max(\u03b1z\uff0cz) \uff08\u89c1\u56fe 11-2\uff09\u3002\u8d85\u53c2\u6570 \u03b1 \u5b9a\u4e49\u4e86\u51fd\u6570\u201cleaks\u201d\u7684\u7a0b\u5ea6\uff1a\u5b83\u662f z < 0 \u65f6\u51fd\u6570\u7684\u659c\u7387\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a 0.01\u3002\u8fd9\u4e2a\u5c0f\u659c\u5761\u786e\u4fdd leaky ReLU \u6c38\u4e0d\u6b7b\u4ea1\uff1b\u4ed6\u4eec\u53ef\u80fd\u4f1a\u957f\u671f\u660f\u8ff7\uff0c\u4f46\u4ed6\u4eec\u6709\u673a\u4f1a\u6700\u7ec8\u9192\u6765\u3002\u6700\u8fd1\u7684\u4e00\u7bc7\u8bba\u6587\u6bd4\u8f83\u4e86\u51e0\u79cd ReLU \u6fc0\u6d3b\u529f\u80fd\u7684\u53d8\u4f53\uff0c\u5176\u4e2d\u4e00\u4e2a\u7ed3\u8bba\u662f leaky Relu \u603b\u662f\u4f18\u4e8e\u4e25\u683c\u7684 ReLU \u6fc0\u6d3b\u51fd\u6570\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8bbe\u5b9a \u03b1= 0.2 \uff08\u5de8\u5927 leak\uff09\u4f3c\u4e4e\u5bfc\u81f4\u6bd4 \u03b1= 0.01 \uff08\u5c0f leak\uff09\u66f4\u597d\u7684\u6027\u80fd\u3002\u4ed6\u4eec\u8fd8\u8bc4\u4f30\u4e86\u968f\u673a\u5316 leaky ReLU\uff08RReLU\uff09\uff0c\u5176\u4e2d \u03b1 \u5728\u8bad\u7ec3\u671f\u95f4\u5728\u7ed9\u5b9a\u8303\u56f4\u5185\u968f\u673a\u6311\u9009\uff0c\u5e76\u5728\u6d4b\u8bd5\u671f\u95f4\u56fa\u5b9a\u4e3a\u5e73\u5747\u503c\u3002\u5b83\u8868\u73b0\u76f8\u5f53\u597d\uff0c\u4f3c\u4e4e\u662f\u4e00\u4e2a\u6b63\u5219\u9879\uff08\u51cf\u5c11\u8bad\u7ec3\u96c6\u7684\u8fc7\u62df\u5408\u98ce\u9669\uff09\u3002\u6700\u540e\uff0c\u4ed6\u4eec\u8fd8\u8bc4\u4f30\u4e86\u53c2\u6570 leaky ReLU\uff08PReLU\uff09\uff0c\u5176\u4e2d \u03b1 \u88ab\u6388\u6743\u5728\u8bad\u7ec3\u671f\u95f4\u88ab\u5b66\u4e60\uff08\u800c\u4e0d\u662f\u8d85\u53c2\u6570\uff0c\u5b83\u53d8\u6210\u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6\u53c2\u6570\u4e00\u6837\u88ab\u53cd\u5411\u4f20\u64ad\u4fee\u6539\u7684\u53c2\u6570\uff09\u3002\u636e\u62a5\u9053\u8fd9\u5728\u5927\u578b\u56fe\u50cf\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\u5f3a\u4e8e ReLU\uff0c\u4f46\u662f\u5bf9\u4e8e\u8f83\u5c0f\u7684\u6570\u636e\u96c6\uff0c\u5176\u5177\u6709\u8fc7\u5ea6\u62df\u5408\u8bad\u7ec3\u96c6\u7684\u98ce\u9669\u3002 \u6700\u540e\uff0cDjork-Arn\u00e9 Clevert \u7b49\u4eba\u5728 2015 \u5e74\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u79f0\u4e3a\u6307\u6570\u7ebf\u6027\u5355\u5143\uff08exponential linear unit\uff0cELU\uff09\u7684\u65b0\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u5728\u4ed6\u4eec\u7684\u5b9e\u9a8c\u4e2d\u8868\u73b0\u4f18\u4e8e\u6240\u6709\u7684 ReLU \u53d8\u4f53\uff1a\u8bad\u7ec3\u65f6\u95f4\u51cf\u5c11\uff0c\u795e\u7ecf\u7f51\u7edc\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8868\u73b0\u7684\u66f4\u597d\u3002 \u5982\u56fe 11-3 \u6240\u793a\uff0c\u516c\u5f0f 11-2 \u7ed9\u51fa\u4e86\u5b83\u7684\u5b9a\u4e49\u3002 \u5b83\u770b\u8d77\u6765\u5f88\u50cf ReLU \u51fd\u6570\uff0c\u4f46\u6709\u4e00\u4e9b\u533a\u522b\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff1a \u9996\u5148\u5b83\u5728 z < 0 \u65f6\u53d6\u8d1f\u503c\uff0c\u8fd9\u4f7f\u5f97\u8be5\u5355\u5143\u7684\u5e73\u5747\u8f93\u51fa\u63a5\u8fd1\u4e8e 0\u3002\u8fd9\u6709\u52a9\u4e8e\u51cf\u8f7b\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c\u5982\u524d\u6240\u8ff0\u3002 \u8d85\u53c2\u6570 \u03b1 \u5b9a\u4e49\u4e3a\u5f53 z \u662f\u4e00\u4e2a\u5927\u7684\u8d1f\u6570\u65f6\uff0cELU \u51fd\u6570\u63a5\u8fd1\u7684\u503c\u3002\u5b83\u901a\u5e38\u8bbe\u7f6e\u4e3a 1\uff0c\u4f46\u662f\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u53ef\u4ee5\u50cf\u8c03\u6574\u5176\u4ed6\u8d85\u53c2\u6570\u4e00\u6837\u8c03\u6574\u5b83\u3002 \u5176\u6b21\uff0c\u5b83\u5bf9 z < 0 \u6709\u4e00\u4e2a\u975e\u96f6\u7684\u68af\u5ea6\uff0c\u907f\u514d\u4e86\u795e\u7ecf\u5143\u6b7b\u4ea1\u7684\u95ee\u9898\u3002 \u7b2c\u4e09\uff0c\u51fd\u6570\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u662f\u5e73\u6ed1\u7684\uff0c\u5305\u62ec z = 0 \u5de6\u53f3\uff0c\u8fd9\u6709\u52a9\u4e8e\u52a0\u901f\u68af\u5ea6\u4e0b\u964d\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5f39\u56de z = 0 \u7684\u5de6\u4fa7\u548c\u53f3\u4fa7\u3002 ELU \u6fc0\u6d3b\u51fd\u6570\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u8ba1\u7b97\u901f\u5ea6\u6162\u4e8e ReLU \u53ca\u5176\u53d8\u4f53\uff08\u7531\u4e8e\u4f7f\u7528\u6307\u6570\u51fd\u6570\uff09\uff0c\u4f46\u662f\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u662f\u901a\u8fc7\u66f4\u5feb\u7684\u6536\u655b\u901f\u5ea6\u6765\u8865\u507f\u7684\u3002 \u7136\u800c\uff0c\u5728\u6d4b\u8bd5\u65f6\u95f4\uff0cELU \u7f51\u7edc\u5c06\u6bd4 ReLU \u7f51\u7edc\u6162\u3002 \u90a3\u4e48\u4f60\u5e94\u8be5\u4f7f\u7528\u54ea\u4e2a\u6fc0\u6d3b\u51fd\u6570\u6765\u5904\u7406\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u9690\u85cf\u5c42\uff1f \u867d\u7136\u4f60\u7684\u91cc\u7a0b\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u4e00\u822c ELU > leaky ReLU\uff08\u53ca\u5176\u53d8\u4f53\uff09> ReLU > tanh > sigmoid\u3002 \u5982\u679c\u60a8\u5173\u5fc3\u8fd0\u884c\u65f6\u6027\u80fd\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u559c\u6b22 leaky ReLU\u8d85\u8fc7ELU\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u8c03\u6574\u53e6\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684\u9ed8\u8ba4\u7684 \u03b1 \u503c\uff08leaky ReLU \u4e3a 0.01\uff0cELU \u4e3a 1\uff09\u3002 \u5982\u679c\u60a8\u6709\u5145\u8db3\u7684\u65f6\u95f4\u548c\u8ba1\u7b97\u80fd\u529b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u8bc4\u4f30\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\uff0c\u7279\u522b\u662f\u5982\u679c\u60a8\u7684\u795e\u7ecf\u7f51\u7edc\u8fc7\u62df\u5408\uff0c\u5219\u4e3aRReLU; \u5982\u679c\u60a8\u62e5\u6709\u5e9e\u5927\u7684\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5219\u4e3a PReLU\u3002 TensorFlow \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u4ee5\u7528\u6765\u5efa\u7acb\u795e\u7ecf\u7f51\u7edc\u7684 elu() \u51fd\u6570\u3002 \u8c03\u7528 fully_connected() \u51fd\u6570\u65f6\uff0c\u53ea\u9700\u8bbe\u7f6e activation_fn \u53c2\u6570\u5373\u53ef\uff1a hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.elu, name=\"hidden1\") TensorFlow \u6ca1\u6709\u9488\u5bf9 leaky ReLU \u7684\u9884\u5b9a\u4e49\u51fd\u6570\uff0c\u4f46\u662f\u5f88\u5bb9\u6613\u5b9a\u4e49\uff1a def leaky_relu(z, name=None): return tf.maximum(0.01 * z, z, name=name) hidden1 = tf.layers.dense(X, n_hidden1, activation=leaky_relu, name=\"hidden1\") \u6279\u91cf\u6807\u51c6\u5316 \u5c3d\u7ba1\u4f7f\u7528 He\u521d\u59cb\u5316\u548c ELU\uff08\u6216\u4efb\u4f55 ReLU \u53d8\u4f53\uff09\u53ef\u4ee5\u663e\u8457\u51cf\u5c11\u8bad\u7ec3\u5f00\u59cb\u9636\u6bb5\u7684\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u5728\u8bad\u7ec3\u671f\u95f4\u95ee\u9898\u4e0d\u4f1a\u56de\u6765\u3002 \u5728 2015 \u5e74\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0cSergey Ioffe \u548c Christian Szegedy \u63d0\u51fa\u4e86\u4e00\u79cd\u79f0\u4e3a\u6279\u91cf\u6807\u51c6\u5316\uff08Batch Normalization\uff0cBN\uff09\u7684\u6280\u672f\u6765\u89e3\u51b3\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898\uff0c\u6bcf\u5c42\u8f93\u5165\u7684\u5206\u5e03\u5728\u8bad\u7ec3\u671f\u95f4\u6539\u53d8\u7684\u95ee\u9898\uff0c\u66f4\u666e\u904d\u7684\u95ee\u9898\u662f\u5f53\u524d\u4e00\u5c42\u7684\u53c2\u6570\u6539\u53d8\uff0c\u6bcf\u5c42\u8f93\u5165\u7684\u5206\u5e03\u4f1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u53d1\u751f\u53d8\u5316\uff08\u4ed6\u4eec\u79f0\u4e4b\u4e3a\u5185\u90e8\u534f\u53d8\u91cf\u504f\u79fb\u95ee\u9898\uff09\u3002 \u8be5\u6280\u672f\u5305\u62ec\u5728\u6bcf\u5c42\u7684\u6fc0\u6d3b\u51fd\u6570\u4e4b\u524d\u5728\u6a21\u578b\u4e2d\u6dfb\u52a0\u64cd\u4f5c\uff0c\u7b80\u5355\u5730\u5bf9\u8f93\u5165\u8fdb\u884czero-centering\u548c\u89c4\u8303\u5316\uff0c\u7136\u540e\u6bcf\u5c42\u4f7f\u7528\u4e24\u4e2a\u65b0\u53c2\u6570\uff08\u4e00\u4e2a\u7528\u4e8e\u5c3a\u5ea6\u53d8\u6362\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u504f\u79fb\uff09\u5bf9\u7ed3\u679c\u8fdb\u884c\u5c3a\u5ea6\u53d8\u6362\u548c\u504f\u79fb\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u8ba9\u6a21\u578b\u5b66\u4e60\u5230\u6bcf\u5c42\u8f93\u5165\u503c\u7684\u6700\u4f73\u5c3a\u5ea6,\u5747\u503c\u3002\u4e3a\u4e86\u5bf9\u8f93\u5165\u8fdb\u884c\u5f52\u96f6\u548c\u5f52\u4e00\u5316\uff0c\u7b97\u6cd5\u9700\u8981\u4f30\u8ba1\u8f93\u5165\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u3002 \u5b83\u901a\u8fc7\u8bc4\u4f30\u5f53\u524d\u5c0f\u6279\u91cf\u8f93\u5165\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\uff08\u56e0\u6b64\u547d\u540d\u4e3a\u201c\u6279\u91cf\u6807\u51c6\u5316\u201d\uff09\u6765\u5b9e\u73b0\u3002 \u6574\u4e2a\u64cd\u4f5c\u5728\u65b9\u7a0b 11-3 \u4e2d\u3002 \u662f\u6574\u4e2a\u5c0f\u6279\u91cfB\u7684\u7ecf\u9a8c\u5747\u503c \u662f\u7ecf\u9a8c\u6027\u7684\u6807\u51c6\u5dee\uff0c\u4e5f\u662f\u6765\u8bc4\u4f30\u6574\u4e2a\u5c0f\u6279\u91cf\u7684\u3002 \u662f\u5c0f\u6279\u91cf\u4e2d\u7684\u5b9e\u4f8b\u6570\u91cf\u3002 \u662f\u4ee5\u4e3a\u96f6\u4e2d\u5fc3\u548c\u6807\u51c6\u5316\u7684\u8f93\u5165\u3002 \u662f\u5c42\u7684\u7f29\u653e\u53c2\u6570\u3002 \u662f\u5c42\u7684\u79fb\u52a8\u53c2\u6570\uff08\u504f\u79fb\u91cf\uff09 \u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\u5b57\uff0c\u4ee5\u907f\u514d\u88ab\u96f6\u9664\uff08\u901a\u5e38\u4e3a 10 ^ -3 \uff09\u3002 \u8fd9\u88ab\u79f0\u4e3a\u5e73\u6ed1\u9879\uff08\u62c9\u5e03\u62c9\u65af\u5e73\u6ed1\uff0cLaplace Smoothing\uff09\u3002 \u662fBN\u64cd\u4f5c\u7684\u8f93\u51fa\uff1a\u5b83\u662f\u8f93\u5165\u7684\u7f29\u653e\u548c\u79fb\u4f4d\u7248\u672c\u3002 \u5728\u6d4b\u8bd5\u65f6\uff0c\u6ca1\u6709\u5c0f\u6279\u91cf\u8ba1\u7b97\u7ecf\u9a8c\u5747\u503c\u548c\u6807\u51c6\u5dee\uff0c\u6240\u4ee5\u60a8\u53ea\u9700\u4f7f\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u3002 \u8fd9\u4e9b\u901a\u5e38\u5728\u8bad\u7ec3\u671f\u95f4\u4f7f\u7528\u79fb\u52a8\u5e73\u5747\u503c\u8fdb\u884c\u6709\u6548\u8ba1\u7b97\u3002 \u56e0\u6b64\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u6bcf\u4e2a\u6279\u6b21\u6807\u51c6\u5316\u7684\u5c42\u6b21\u90fd\u5b66\u4e60\u4e86\u56db\u4e2a\u53c2\u6570\uff1a \u03b3 \uff08\u6807\u5ea6\uff09\uff0c \u03b2 \uff08\u504f\u79fb\uff09\uff0c \u03bc \uff08\u5e73\u5747\u503c\uff09\u548c \u03c3 \uff08\u6807\u51c6\u5dee\uff09\u3002 \u4f5c\u8005\u8bc1\u660e\uff0c\u8fd9\u9879\u6280\u672f\u5927\u5927\u6539\u5584\u4e86\u4ed6\u4eec\u8bd5\u9a8c\u7684\u6240\u6709\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u3002\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u5927\u5927\u51cf\u5c11\u4e86\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u9971\u548c\u6fc0\u6d3b\u51fd\u6570\uff0c\u5982 tanh \u751a\u81f3 sigmoid \u6fc0\u6d3b\u51fd\u6570\u3002\u7f51\u7edc\u5bf9\u6743\u91cd\u521d\u59cb\u5316\u4e5f\u4e0d\u90a3\u4e48\u654f\u611f\u3002\u4ed6\u4eec\u80fd\u591f\u4f7f\u7528\u66f4\u5927\u7684\u5b66\u4e60\u7387\uff0c\u663e\u8457\u52a0\u5feb\u4e86\u5b66\u4e60\u8fc7\u7a0b\u3002\u5177\u4f53\u5730\uff0c\u4ed6\u4eec\u6307\u51fa\uff0c\u201c\u5e94\u7528\u4e8e\u6700\u5148\u8fdb\u7684\u56fe\u50cf\u5206\u7c7b\u6a21\u578b\uff0c\u6279\u6807\u51c6\u5316\u7528\u5c11\u4e86 14 \u500d\u7684\u8bad\u7ec3\u6b65\u9aa4\u5b9e\u73b0\u4e86\u76f8\u540c\u7684\u7cbe\u5ea6\uff0c\u4ee5\u663e\u8457\u7684\u4f18\u52bf\u51fb\u8d25\u4e86\u539f\u59cb\u6a21\u578b\u3002[...] \u4f7f\u7528\u6279\u91cf\u6807\u51c6\u5316\u7684\u7f51\u7edc\u96c6\u5408\uff0c\u6211\u4eec\u6539\u8fdb\u4e86 ImageNet \u5206\u7c7b\u4e0a\u7684\u6700\u4f73\u516c\u5e03\u7ed3\u679c\uff1a\u8fbe\u52304.9% \u7684\u524d5\u4e2a\u9a8c\u8bc1\u9519\u8bef\uff08\u548c 4.8% \u7684\u6d4b\u8bd5\u9519\u8bef\uff09\uff0c\u8d85\u51fa\u4e86\u4eba\u7c7b\u8bc4\u4f30\u8005\u7684\u51c6\u786e\u6027\u3002\u6279\u91cf\u6807\u51c6\u5316\u4e5f\u50cf\u4e00\u4e2a\u6b63\u5219\u5316\u9879\u4e00\u6837\uff0c\u51cf\u5c11\u4e86\u5bf9\u5176\u4ed6\u6b63\u5219\u5316\u6280\u672f\u7684\u9700\u6c42\uff08\u5982\u672c\u7ae0\u7a0d\u540e\u63cf\u8ff0\u7684 dropout\uff09. \u7136\u800c\uff0c\u6279\u91cf\u6807\u51c6\u5316\u7684\u786e\u4f1a\u589e\u52a0\u6a21\u578b\u7684\u590d\u6742\u6027\uff08\u5c3d\u7ba1\u5b83\u4e0d\u9700\u8981\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u4f1a\u7167\u987e\u5230\u8fd9\u4e00\u70b9\uff0c\u53ea\u8981\u5b83\u662f\u6279\u91cf\u6807\u51c6\u5316\u7684\uff09\u3002 \u6b64\u5916\uff0c\u8fd8\u5b58\u5728\u8fd0\u884c\u65f6\u95f4\u7684\u635f\u5931\uff1a\u7531\u4e8e\u6bcf\u5c42\u6240\u9700\u7684\u989d\u5916\u8ba1\u7b97\uff0c\u795e\u7ecf\u7f51\u7edc\u7684\u9884\u6d4b\u901f\u5ea6\u8f83\u6162\u3002 \u6240\u4ee5\uff0c\u5982\u679c\u4f60\u9700\u8981\u9884\u6d4b\u95ea\u7535\u822c\u5feb\u901f\uff0c\u4f60\u53ef\u80fd\u60f3\u8981\u68c0\u67e5\u666e\u901aELU + He\u521d\u59cb\u5316\u6267\u884c\u4e4b\u524d\u5982\u4f55\u6267\u884c\u6279\u91cf\u6807\u51c6\u5316\u3002 \u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u8bad\u7ec3\u8d77\u521d\u76f8\u5f53\u7f13\u6162\uff0c\u800c\u6e10\u53d8\u4e0b\u964d\u6b63\u5728\u5bfb\u627e\u6bcf\u5c42\u7684\u6700\u4f73\u5c3a\u5ea6\u548c\u504f\u79fb\u91cf\uff0c\u4f46\u4e00\u65e6\u627e\u5230\u5408\u7406\u7684\u597d\u503c\uff0c\u5b83\u5c31\u4f1a\u52a0\u901f\u3002 \u4f7f\u7528 TensorFlow \u5b9e\u73b0\u6279\u91cf\u6807\u51c6\u5316 TensorFlow \u63d0\u4f9b\u4e86\u4e00\u4e2a batch_normalization() \u51fd\u6570\uff0c\u5b83\u7b80\u5355\u5730\u5bf9\u8f93\u5165\u8fdb\u884c\u5c45\u4e2d\u548c\u6807\u51c6\u5316\uff0c\u4f46\u662f\u60a8\u5fc5\u987b\u81ea\u5df1\u8ba1\u7b97\u5e73\u5747\u503c\u548c\u6807\u51c6\u5dee\uff08\u57fa\u4e8e\u8bad\u7ec3\u671f\u95f4\u7684\u5c0f\u6279\u91cf\u6570\u636e\u6216\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u5b8c\u6574\u6570\u636e\u96c6\uff09 \u4f5c\u4e3a\u8fd9\u4e2a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u8fd8\u5fc5\u987b\u5904\u7406\u7f29\u653e\u548c\u504f\u79fb\u91cf\u53c2\u6570\u7684\u521b\u5efa\uff08\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u6b64\u51fd\u6570\uff09\u3002 \u8fd9\u662f\u53ef\u884c\u7684\uff0c\u4f46\u4e0d\u662f\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5\u3002 \u76f8\u53cd\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 batch_norm() \u51fd\u6570\uff0c\u5b83\u4e3a\u4f60\u5904\u7406\u6240\u6709\u8fd9\u4e9b\u3002 \u60a8\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u5b83\uff0c\u6216\u8005\u544a\u8bc9 fully_connected() \u51fd\u6570\u4f7f\u7528\u5b83\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\uff1a \u6ce8\u610f\uff1a\u672c\u4e66\u4f7f\u7528 tensorflow.contrib.layers.batch_norm() \u800c\u4e0d\u662f tf.layers.batch_normalization() \uff08\u672c\u7ae0\u5199\u4f5c\u65f6\u4e0d\u5b58\u5728\uff09\u3002 \u73b0\u5728\u6700\u597d\u4f7f\u7528 tf.layers.batch_normalization() \uff0c\u56e0\u4e3a contrib \u6a21\u5757\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u53ef\u80fd\u4f1a\u6539\u53d8\u6216\u88ab\u5220\u9664\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002 \u6211\u4eec\u73b0\u5728\u4e0d\u4f7f\u7528 batch_norm() \u51fd\u6570\u4f5c\u4e3a fully_connected() \u51fd\u6570\u7684\u6b63\u5219\u5316\u53c2\u6570\uff0c\u800c\u662f\u4f7f\u7528 batch_normalization() \uff0c\u5e76\u660e\u786e\u5730\u521b\u5efa\u4e00\u4e2a\u4e0d\u540c\u7684\u5c42\u3002 \u53c2\u6570\u6709\u4e9b\u4e0d\u540c\uff0c\u7279\u522b\u662f\uff1a decay \u66f4\u540d\u4e3a momentum is_training \u88ab\u91cd\u547d\u540d\u4e3a training updates_collections \u88ab\u5220\u9664\uff1a\u6279\u91cf\u6807\u51c6\u5316\u6240\u9700\u7684\u66f4\u65b0\u64cd\u4f5c\u88ab\u6dfb\u52a0\u5230 UPDATE_OPS \u96c6\u5408\u4e2d\uff0c\u5e76\u4e14\u60a8\u9700\u8981\u5728\u8bad\u7ec3\u671f\u95f4\u660e\u786e\u5730\u8fd0\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff08\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u6267\u884c\u9636\u6bb5\uff09 \u6211\u4eec\u4e0d\u9700\u8981\u6307\u5b9a scale = True \uff0c\u56e0\u4e3a\u8fd9\u662f\u9ed8\u8ba4\u503c\u3002 \u8fd8\u8981\u6ce8\u610f\uff0c\u4e3a\u4e86\u5728\u6bcf\u4e2a\u9690\u85cf\u5c42\u6fc0\u6d3b\u51fd\u6570\u4e4b\u524d\u8fd0\u884c\u6279\u91cf\u6807\u51c6\u5316\uff0c\u6211\u4eec\u624b\u52a8\u5e94\u7528 RELU \u6fc0\u6d3b\u51fd\u6570\uff0c\u5728\u6279\u91cf\u89c4\u8303\u5c42\u4e4b\u540e\u3002\u6ce8\u610f\uff1a\u7531\u4e8e tf.layers.dense() \u51fd\u6570\u4e0e\u672c\u4e66\u4e2d\u4f7f\u7528\u7684 tf.contrib.layers.arg_scope() \u4e0d\u517c\u5bb9\uff0c\u6211\u4eec\u73b0\u5728\u4f7f\u7528 python \u7684 functools.partial() \u51fd\u6570\u3002 \u5b83\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u521b\u5efa\u4e00\u4e2a my_dense_layer() \u51fd\u6570\uff0c\u53ea\u9700\u8c03\u7528 tf.layers.dense() \uff0c\u5e76\u81ea\u52a8\u8bbe\u7f6e\u6240\u9700\u7684\u53c2\u6570\uff08\u9664\u975e\u5728\u8c03\u7528 my_dense_layer() \u65f6\u8986\u76d6\u5b83\u4eec\uff09\u3002 \u5982\u60a8\u6240\u89c1\uff0c\u4ee3\u7801\u4fdd\u6301\u975e\u5e38\u76f8\u4f3c\u3002 import tensorflow as tf n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 100 n_outputs = 10 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") training = tf.placeholder_with_default(False, shape=(), name='training') hidden1 = tf.layers.dense(X, n_hidden1, name=\"hidden1\") bn1 = tf.layers.batch_normalization(hidden1, training=training, momentum=0.9) bn1_act = tf.nn.elu(bn1) hidden2 = tf.layers.dense(bn1_act, n_hidden2, name=\"hidden2\") bn2 = tf.layers.batch_normalization(hidden2, training=training, momentum=0.9) bn2_act = tf.nn.elu(bn2) logits_before_bn = tf.layers.dense(bn2_act, n_outputs, name=\"outputs\") logits = tf.layers.batch_normalization(logits_before_bn, training=training, momentum=0.9) X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") training = tf.placeholder_with_default(False, shape=(), name='training') \u4e3a\u4e86\u907f\u514d\u4e00\u904d\u53c8\u4e00\u904d\u91cd\u590d\u76f8\u540c\u7684\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Python \u7684 partial() \u51fd\u6570\uff1a from functools import partial my_batch_norm_layer = partial(tf.layers.batch_normalization, training=training, momentum=0.9) hidden1 = tf.layers.dense(X, n_hidden1, name=\"hidden1\") bn1 = my_batch_norm_layer(hidden1) bn1_act = tf.nn.elu(bn1) hidden2 = tf.layers.dense(bn1_act, n_hidden2, name=\"hidden2\") bn2 = my_batch_norm_layer(hidden2) bn2_act = tf.nn.elu(bn2) logits_before_bn = tf.layers.dense(bn2_act, n_outputs, name=\"outputs\") logits = my_batch_norm_layer(logits_before_bn) \u5b8c\u6574\u4ee3\u7801 from functools import partial from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf if __name__ == '__main__': n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 100 n_outputs = 10 mnist = input_data.read_data_sets(\"/tmp/data/\") batch_norm_momentum = 0.9 learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name = 'X') y = tf.placeholder(tf.int64, shape=None, name = 'y') training = tf.placeholder_with_default(False, shape=(), name = 'training')#\u7ed9Batch norm\u52a0\u4e00\u4e2aplaceholder with tf.name_scope(\"dnn\"): he_init = tf.contrib.layers.variance_scaling_initializer() #\u5bf9\u6743\u91cd\u7684\u521d\u59cb\u5316 my_batch_norm_layer = partial( tf.layers.batch_normalization, training = training, momentum = batch_norm_momentum ) my_dense_layer = partial( tf.layers.dense, kernel_initializer = he_init ) hidden1 = my_dense_layer(X ,n_hidden1 ,name = 'hidden1') bn1 = tf.nn.elu(my_batch_norm_layer(hidden1)) hidden2 = my_dense_layer(bn1, n_hidden2, name = 'hidden2') bn2 = tf.nn.elu(my_batch_norm_layer(hidden2)) logists_before_bn = my_dense_layer(bn2, n_outputs, name = 'outputs') logists = my_batch_norm_layer(logists_before_bn) with tf.name_scope('loss'): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels = y, logits= logists) loss = tf.reduce_mean(xentropy, name = 'loss') with tf.name_scope('train'): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logists, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) init = tf.global_variables_initializer() saver = tf.train.Saver() n_epoches = 20 batch_size = 200 # \u6ce8\u610f\uff1a\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f tf.layers.batch_normalization() \u800c\u4e0d\u662f tf.contrib.layers.batch_norm()\uff08\u5982\u672c\u4e66\u6240\u8ff0\uff09\uff0c # \u6240\u4ee5\u6211\u4eec\u9700\u8981\u660e\u786e\u8fd0\u884c\u6279\u91cf\u89c4\u8303\u5316\u6240\u9700\u7684\u989d\u5916\u66f4\u65b0\u64cd\u4f5c\uff08sess.run([ training_op\uff0cextra_update_ops], ...)\u3002 extra_update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS) with tf.Session() as sess: init.run() for epoch in range(n_epoches): for iteraton in range(mnist.train.num_examples//batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run([training_op,extra_update_ops], feed_dict={training:True, X:X_batch, y:y_batch}) accuracy_val = accuracy.eval(feed_dict= {X:mnist.test.images, y:mnist.test.labels}) print(epoch, 'Test accuracy:', accuracy_val) \u4ec0\u4e48\uff01\uff1f \u8fd9\u5bf9 MNIST \u6765\u8bf4\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u51c6\u786e\u6027\u3002 \u5f53\u7136\uff0c\u5982\u679c\u4f60\u8bad\u7ec3\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u51c6\u786e\u6027\u5c31\u8d8a\u597d\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u6837\u4e00\u4e2a\u6d45\u7684\u7f51\u7edc\uff0c\u6279\u91cf\u8303\u6570\u548c ELU \u4e0d\u592a\u53ef\u80fd\u4ea7\u751f\u975e\u5e38\u79ef\u6781\u7684\u5f71\u54cd\uff1a\u5b83\u4eec\u5927\u90e8\u5206\u90fd\u662f\u4e3a\u4e86\u66f4\u6df1\u7684\u7f51\u7edc\u800c\u53d1\u5149\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u8fd8\u53ef\u4ee5\u8bad\u7ec3\u64cd\u4f5c\u53d6\u51b3\u4e8e\u66f4\u65b0\u64cd\u4f5c\uff1a with tf.name_scope(\"train\"): optimizer = tf.train.GradientDescentOptimizer(learning_rate) extra_update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS) with tf.control_dependencies(extra_update_ops): training_op = optimizer.minimize(loss) \u8fd9\u6837\uff0c\u4f60\u53ea\u9700\u8981\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8bc4\u4f30training_op\uff0cTensorFlow\u4e5f\u4f1a\u81ea\u52a8\u8fd0\u884c\u66f4\u65b0\u64cd\u4f5c\uff1a sess.run(training_op, feed_dict={training: True, X: X_batch, y: y_batch}) \u68af\u5ea6\u88c1\u526a \u51cf\u5c11\u68af\u5ea6\u7206\u70b8\u95ee\u9898\u7684\u4e00\u79cd\u5e38\u7528\u6280\u672f\u662f\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u7b80\u5355\u5730\u526a\u5207\u68af\u5ea6\uff0c\u4f7f\u5b83\u4eec\u4e0d\u8d85\u8fc7\u67d0\u4e2a\u9608\u503c\uff08\u8fd9\u5bf9\u4e8e\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\u662f\u975e\u5e38\u6709\u7528\u7684\uff1b\u53c2\u89c1\u7b2c 14 \u7ae0\uff09\u3002 \u8fd9\u5c31\u662f\u6240\u8c13\u7684\u68af\u5ea6\u88c1\u526a\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4eba\u4eec\u66f4\u559c\u6b22\u6279\u91cf\u6807\u51c6\u5316\uff0c\u4f46\u4e86\u89e3\u68af\u5ea6\u88c1\u526a\u4ee5\u53ca\u5982\u4f55\u5b9e\u73b0\u5b83\u4ecd\u7136\u662f\u6709\u7528\u7684\u3002 \u5728 TensorFlow \u4e2d\uff0c\u4f18\u5316\u5668\u7684 minimize() \u51fd\u6570\u8d1f\u8d23\u8ba1\u7b97\u68af\u5ea6\u5e76\u5e94\u7528\u5b83\u4eec\uff0c\u6240\u4ee5\u60a8\u5fc5\u987b\u9996\u5148\u8c03\u7528\u4f18\u5316\u5668\u7684 compute_gradients() \u65b9\u6cd5\uff0c\u7136\u540e\u4f7f\u7528 clip_by_value() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u88c1\u526a\u68af\u5ea6\u7684\u64cd\u4f5c\uff0c\u6700\u540e \u521b\u5efa\u4e00\u4e2a\u64cd\u4f5c\u6765\u4f7f\u7528\u4f18\u5316\u5668\u7684 apply_gradients() \u65b9\u6cd5\u5e94\u7528\u88c1\u526a\u68af\u5ea6\uff1a threshold = 1.0 optimizer = tf.train.GradientDescentOptimizer(learning_rate) grads_and_vars = optimizer.compute_gradients(loss) capped_gvs = [(tf.clip_by_value(grad, -threshold, threshold), var) for grad, var in grads_and_vars] training_op = optimizer.apply_gradients(capped_gvs) \u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u60a8\u5c06\u5728\u6bcf\u4e2a\u8bad\u7ec3\u9636\u6bb5\u8fd0\u884c\u8fd9\u4e2a training_op \u3002 \u5b83\u5c06\u8ba1\u7b97\u68af\u5ea6\uff0c\u5c06\u5b83\u4eec\u88c1\u526a\u5230 -1.0 \u548c 1.0 \u4e4b\u95f4\uff0c\u5e76\u5e94\u7528\u5b83\u4eec\u3002 threhold \u662f\u60a8\u53ef\u4ee5\u8c03\u6574\u7684\u8d85\u53c2\u6570\u3002 \u590d\u7528\u9884\u8bad\u7ec3\u5c42 \u4ece\u96f6\u5f00\u59cb\u8bad\u7ec3\u4e00\u4e2a\u975e\u5e38\u5927\u7684 DNN \u901a\u5e38\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u76f8\u53cd\uff0c\u60a8\u5e94\u8be5\u603b\u662f\u5c1d\u8bd5\u627e\u5230\u4e00\u4e2a\u73b0\u6709\u7684\u795e\u7ecf\u7f51\u7edc\u6765\u5b8c\u6210\u4e0e\u60a8\u6b63\u5728\u5c1d\u8bd5\u89e3\u51b3\u7684\u4efb\u52a1\u7c7b\u4f3c\u7684\u4efb\u52a1\uff0c\u7136\u540e\u590d\u7528\u8fd9\u4e2a\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\uff1a\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8fc1\u79fb\u5b66\u4e60\u3002\u8fd9\u4e0d\u4ec5\u4f1a\u5927\u5927\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\uff0c\u8fd8\u5c06\u9700\u8981\u66f4\u5c11\u7684\u8bad\u7ec3\u6570\u636e\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u53ef\u4ee5\u8bbf\u95ee\u7ecf\u8fc7\u8bad\u7ec3\u7684 DNN\uff0c\u5c06\u56fe\u7247\u5206\u4e3a 100 \u4e2a\u4e0d\u540c\u7684\u7c7b\u522b\uff0c\u5305\u62ec\u52a8\u7269\uff0c\u690d\u7269\uff0c\u8f66\u8f86\u548c\u65e5\u5e38\u7269\u54c1\u3002 \u60a8\u73b0\u5728\u60f3\u8981\u8bad\u7ec3\u4e00\u4e2a DNN \u6765\u5bf9\u7279\u5b9a\u7c7b\u578b\u7684\u8f66\u8f86\u8fdb\u884c\u5206\u7c7b\u3002 \u8fd9\u4e9b\u4efb\u52a1\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u6b64\u60a8\u5e94\u8be5\u5c1d\u8bd5\u91cd\u65b0\u4f7f\u7528\u7b2c\u4e00\u4e2a\u7f51\u7edc\u7684\u4e00\u90e8\u5206\uff08\u8bf7\u53c2\u89c1\u56fe 11-4\uff09\u3002 \u5982\u679c\u65b0\u4efb\u52a1\u7684\u8f93\u5165\u56fe\u50cf\u4e0e\u539f\u59cb\u4efb\u52a1\u4e2d\u4f7f\u7528\u7684\u8f93\u5165\u56fe\u50cf\u7684\u5927\u5c0f\u4e0d\u4e00\u81f4\uff0c\u5219\u5fc5\u987b\u6dfb\u52a0\u9884\u5904\u7406\u6b65\u9aa4\u4ee5\u5c06\u5176\u5927\u5c0f\u8c03\u6574\u4e3a\u539f\u59cb\u6a21\u578b\u7684\u9884\u671f\u5927\u5c0f\u3002 \u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u5982\u679c\u8f93\u5165\u5177\u6709\u7c7b\u4f3c\u7684\u4f4e\u7ea7\u5c42\u6b21\u7684\u7279\u5f81\uff0c\u5219\u8fc1\u79fb\u5b66\u4e60\u5c06\u5f88\u597d\u5730\u5de5\u4f5c\u3002 \u590d\u7528 TensorFlow \u6a21\u578b \u5982\u679c\u539f\u59cb\u6a21\u578b\u4f7f\u7528 TensorFlow \u8fdb\u884c\u8bad\u7ec3\uff0c\u5219\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u5176\u6062\u590d\u5e76\u5728\u65b0\u4efb\u52a1\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff1a [...] # construct the original model with tf.Session() as sess: saver.restore(sess, \"./my_model_final.ckpt\") # continue training the model... \u5b8c\u6574\u4ee3\u7801: n_inputs = 28 * 28 # MNIST n_hidden1 = 300 n_hidden2 = 50 n_hidden3 = 50 n_hidden4 = 50 n_outputs = 10 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") hidden3 = tf.layers.dense(hidden2, n_hidden3, activation=tf.nn.relu, name=\"hidden3\") hidden4 = tf.layers.dense(hidden3, n_hidden4, activation=tf.nn.relu, name=\"hidden4\") hidden5 = tf.layers.dense(hidden4, n_hidden5, activation=tf.nn.relu, name=\"hidden5\") logits = tf.layers.dense(hidden5, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32), name=\"accuracy\") learning_rate = 0.01 threshold = 1.0 optimizer = tf.train.GradientDescentOptimizer(learning_rate) grads_and_vars = optimizer.compute_gradients(loss) capped_gvs = [(tf.clip_by_value(grad, -threshold, threshold), var) for grad, var in grads_and_vars] training_op = optimizer.apply_gradients(capped_gvs) init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: saver.restore(sess, \"./my_model_final.ckpt\") for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) accuracy_val = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Test accuracy:\", accuracy_val) save_path = saver.save(sess, \"./my_new_model_final.ckpt\") \u4f46\u662f\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ea\u9700\u8981\u91cd\u65b0\u4f7f\u7528\u539f\u59cb\u6a21\u578b\u7684\u4e00\u90e8\u5206\uff08\u5c31\u50cf\u6211\u4eec\u5c06\u8981\u8ba8\u8bba\u7684\u90a3\u6837\uff09\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5c06 Saver \u914d\u7f6e\u4e3a\u4ec5\u6062\u590d\u539f\u59cb\u6a21\u578b\u4e2d\u7684\u4e00\u90e8\u5206\u53d8\u91cf\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u53ea\u6062\u590d\u9690\u85cf\u7684\u5c421,2\u548c3\uff1a n_inputs = 28 * 28 # MNIST n_hidden1 = 300 # reused n_hidden2 = 50 # reused n_hidden3 = 50 # reused n_hidden4 = 20 # new! n_outputs = 10 # new! X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") # reused hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") # reused hidden3 = tf.layers.dense(hidden2, n_hidden3, activation=tf.nn.relu, name=\"hidden3\") # reused hidden4 = tf.layers.dense(hidden3, n_hidden4, activation=tf.nn.relu, name=\"hidden4\") # new! logits = tf.layers.dense(hidden4, n_outputs, name=\"outputs\") # new! with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32), name=\"accuracy\") with tf.name_scope(\"train\"): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) [...] # build new model with the same definition as before for hidden layers 1-3 reuse_vars = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope=\"hidden[123]\") # regular expression reuse_vars_dict = dict([(var.op.name, var) for var in reuse_vars]) restore_saver = tf.train.Saver(reuse_vars_dict) # to restore layers 1-3 init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: init.run() restore_saver.restore(sess, \"./my_model_final.ckpt\") for epoch in range(n_epochs): # not shown in the book for iteration in range(mnist.train.num_examples // batch_size): # not shown X_batch, y_batch = mnist.train.next_batch(batch_size) # not shown sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) # not shown accuracy_val = accuracy.eval(feed_dict={X: mnist.test.images, # not shown y: mnist.test.labels}) # not shown print(epoch, \"Test accuracy:\", accuracy_val) # not shown save_path = saver.save(sess, \"./my_new_model_final.ckpt\") \u9996\u5148\u6211\u4eec\u5efa\u7acb\u65b0\u7684\u6a21\u578b\uff0c\u786e\u4fdd\u590d\u5236\u539f\u59cb\u6a21\u578b\u7684\u9690\u85cf\u5c42 1 \u5230 3\u3002\u6211\u4eec\u8fd8\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\u6765\u521d\u59cb\u5316\u6240\u6709\u53d8\u91cf\u3002 \u7136\u540e\u6211\u4eec\u5f97\u5230\u521a\u521a\u7528 trainable = True \uff08\u8fd9\u662f\u9ed8\u8ba4\u503c\uff09\u521b\u5efa\u7684\u6240\u6709\u53d8\u91cf\u7684\u5217\u8868\uff0c\u6211\u4eec\u53ea\u4fdd\u7559\u90a3\u4e9b\u8303\u56f4\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f hidden [123] \u76f8\u5339\u914d\u7684\u53d8\u91cf\uff08\u5373\uff0c\u6211\u4eec\u5f97\u5230\u6240\u6709\u53ef\u8bad\u7ec3\u7684\u9690\u85cf\u5c42 1 \u5230 3 \u4e2d\u7684\u53d8\u91cf\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b57\u5178\uff0c\u5c06\u539f\u59cb\u6a21\u578b\u4e2d\u6bcf\u4e2a\u53d8\u91cf\u7684\u540d\u79f0\u6620\u5c04\u5230\u65b0\u6a21\u578b\u4e2d\u7684\u540d\u79f0\uff08\u901a\u5e38\u9700\u8981\u4fdd\u6301\u5b8c\u5168\u76f8\u540c\u7684\u540d\u79f0\uff09\u3002 \u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Saver \uff0c\u5b83\u5c06\u53ea\u6062\u590d\u8fd9\u4e9b\u53d8\u91cf\uff0c\u5e76\u4e14\u521b\u5efa\u53e6\u4e00\u4e2a Saver \u6765\u4fdd\u5b58\u6574\u4e2a\u65b0\u6a21\u578b\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7b2c 1 \u5c42\u5230\u7b2c 3 \u5c42\u3002\u7136\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u4e00\u4e2a\u4f1a\u8bdd\u5e76\u521d\u59cb\u5316\u6a21\u578b\u4e2d\u7684\u6240\u6709\u53d8\u91cf\uff0c\u7136\u540e\u4ece\u539f\u59cb\u6a21\u578b\u7684\u5c42 1 \u5230 3\u4e2d\u6062\u590d\u53d8\u91cf\u503c\u3002\u6700\u540e\uff0c\u6211\u4eec\u5728\u65b0\u4efb\u52a1\u4e0a\u8bad\u7ec3\u6a21\u578b\u5e76\u4fdd\u5b58\u3002 \u4efb\u52a1\u8d8a\u76f8\u4f3c\uff0c\u60a8\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u7684\u5c42\u8d8a\u591a\uff08\u4ece\u8f83\u4f4e\u5c42\u5f00\u59cb\uff09\u3002 \u5bf9\u4e8e\u975e\u5e38\u76f8\u4f3c\u7684\u4efb\u52a1\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4fdd\u7559\u6240\u6709\u9690\u85cf\u7684\u5c42\uff0c\u53ea\u66ff\u6362\u8f93\u51fa\u5c42\u3002 \u590d\u7528\u6765\u81ea\u5176\u5b83\u6846\u67b6\u7684\u6a21\u578b \u5982\u679c\u6a21\u578b\u662f\u4f7f\u7528\u5176\u4ed6\u6846\u67b6\u8fdb\u884c\u8bad\u7ec3\u7684\uff0c\u5219\u9700\u8981\u624b\u52a8\u52a0\u8f7d\u6743\u91cd\uff08\u4f8b\u5982\uff0c\u5982\u679c\u4f7f\u7528 Theano \u8bad\u7ec3\uff0c\u5219\u4f7f\u7528 Theano \u4ee3\u7801\uff09\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u5206\u914d\u7ed9\u76f8\u5e94\u7684\u53d8\u91cf\u3002 \u8fd9\u53ef\u80fd\u662f\u76f8\u5f53\u4e4f\u5473\u7684\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u590d\u5236\u4f7f\u7528\u53e6\u4e00\u4e2a\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u7684\u6743\u91cd\u548c\u504f\u7f6e\uff1a \u51bb\u7ed3\u8f83\u4f4e\u5c42 \u7b2c\u4e00\u4e2a DNN \u7684\u8f83\u4f4e\u5c42\u53ef\u80fd\u5df2\u7ecf\u5b66\u4f1a\u4e86\u68c0\u6d4b\u56fe\u7247\u4e2d\u7684\u4f4e\u7ea7\u7279\u5f81\uff0c\u8fd9\u5c06\u5728\u4e24\u4e2a\u56fe\u50cf\u5206\u7c7b\u4efb\u52a1\u4e2d\u6709\u7528\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u6309\u7167\u539f\u6837\u91cd\u65b0\u4f7f\u7528\u8fd9\u4e9b\u5c42\u3002 \u5728\u8bad\u7ec3\u65b0\u7684 DNN \u65f6\uff0c\u201c\u51bb\u7ed3\u201d\u6743\u91cd\u901a\u5e38\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1a\u5982\u679c\u8f83\u4f4e\u5c42\u6743\u91cd\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u8f83\u9ad8\u5c42\u6743\u91cd\u5c06\u66f4\u5bb9\u6613\u8bad\u7ec3\uff08\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u9700\u8981\u5b66\u4e60\u4e00\u4e2a\u79fb\u52a8\u7684\u76ee\u6807\uff09\u3002 \u8981\u5728\u8bad\u7ec3\u671f\u95f4\u51bb\u7ed3\u8f83\u4f4e\u5c42\uff0c\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7ed9\u4f18\u5316\u5668\u5217\u51fa\u8981\u8bad\u7ec3\u7684\u53d8\u91cf\uff0c\u4e0d\u5305\u62ec\u6765\u81ea\u8f83\u4f4e\u5c42\u7684\u53d8\u91cf\uff1a \u7b2c\u4e00\u884c\u83b7\u5f97\u9690\u85cf\u5c42 3 \u548c 4 \u4ee5\u53ca\u8f93\u51fa\u5c42\u4e2d\u6240\u6709\u53ef\u8bad\u7ec3\u53d8\u91cf\u7684\u5217\u8868\u3002 \u8fd9\u7559\u4e0b\u4e86\u9690\u85cf\u5c42 1 \u548c 2 \u4e2d\u7684\u53d8\u91cf\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u53d7\u9650\u5236\u7684\u53ef\u5217\u8868\u53d8\u91cf\u5217\u8868\u63d0\u4f9b\u7ed9 optimizer \u7684 minimize() \u51fd\u6570\u3002\u5f53\u5f53\uff01 \u73b0\u5728\uff0c\u5c42 1 \u548c\u5c42 2 \u88ab\u51bb\u7ed3\uff1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff08\u901a\u5e38\u79f0\u4e3a\u51bb\u7ed3\u5c42\uff09\u3002 \u7f13\u5b58\u51bb\u7ed3\u5c42 \u7531\u4e8e\u51bb\u7ed3\u5c42\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7f13\u5b58\u6700\u4e0a\u9762\u7684\u51bb\u7ed3\u5c42\u7684\u8f93\u51fa\u3002 \u7531\u4e8e\u8bad\u7ec3\u8d2f\u7a7f\u6574\u4e2a\u6570\u636e\u96c6\u5f88\u591a\u6b21\uff0c\u8fd9\u5c06\u7ed9\u4f60\u4e00\u4e2a\u5de8\u5927\u7684\u901f\u5ea6\u63d0\u5347\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u53ea\u9700\u8981\u7ecf\u8fc7\u4e00\u6b21\u51bb\u7ed3\u5c42\uff08\u800c\u4e0d\u662f\u6bcf\u4e2a\u8fed\u4ee3\u4e00\u6b21\uff09\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5148\u8fd0\u884c\u6574\u4e2a\u8bad\u7ec3\u96c6\uff08\u5047\u8bbe\u4f60\u6709\u8db3\u591f\u7684\u5185\u5b58\uff09\uff1a hidden2_outputs = sess.run(hidden2, feed_dict={X: X_train}) \u7136\u540e\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u518d\u5bf9\u8bad\u7ec3\u5b9e\u4f8b\u5efa\u7acb\u6279\u6b21\uff0c\u800c\u662f\u4ece\u9690\u85cf\u5c422\u7684\u8f93\u51fa\u5efa\u7acb\u6279\u6b21\uff0c\u5e76\u5c06\u5b83\u4eec\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u64cd\u4f5c\uff1a \u6700\u540e\u4e00\u884c\u8fd0\u884c\u5148\u524d\u5b9a\u4e49\u7684\u8bad\u7ec3\u64cd\u4f5c\uff08\u51bb\u7ed3\u5c42 1 \u548c 2\uff09\uff0c\u5e76\u4ece\u7b2c\u4e8c\u4e2a\u9690\u85cf\u5c42\uff08\u4ee5\u53ca\u8be5\u6279\u6b21\u7684\u76ee\u6807\uff09\u4e3a\u5176\u8f93\u51fa\u4e00\u6279\u8f93\u51fa\u3002 \u56e0\u4e3a\u6211\u4eec\u7ed9 TensorFlow \u9690\u85cf\u5c42 2 \u7684\u8f93\u51fa\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u53bb\u8bc4\u4f30\u5b83\uff08\u6216\u8005\u5b83\u6240\u4f9d\u8d56\u7684\u4efb\u4f55\u8282\u70b9\uff09\u3002 \u8c03\u6574\uff0c\u5220\u9664\u6216\u66ff\u6362\u8f83\u9ad8\u5c42 \u539f\u59cb\u6a21\u578b\u7684\u8f93\u51fa\u5c42\u901a\u5e38\u5e94\u8be5\u88ab\u66ff\u6362\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u65b0\u7684\u4efb\u52a1\u6765\u8bf4\uff0c\u6700\u6709\u53ef\u80fd\u6ca1\u6709\u7528\u5904\uff0c\u751a\u81f3\u53ef\u80fd\u6ca1\u6709\u9002\u5408\u65b0\u4efb\u52a1\u7684\u8f93\u51fa\u6570\u91cf\u3002 \u7c7b\u4f3c\u5730\uff0c\u539f\u59cb\u6a21\u578b\u7684\u8f83\u9ad8\u9690\u85cf\u5c42\u4e0d\u592a\u53ef\u80fd\u50cf\u8f83\u4f4e\u5c42\u4e00\u6837\u6709\u7528\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u65b0\u4efb\u52a1\u6765\u8bf4\u6700\u6709\u7528\u7684\u9ad8\u5c42\u7279\u5f81\u53ef\u80fd\u4e0e\u5bf9\u539f\u59cb\u4efb\u52a1\u6700\u6709\u7528\u7684\u9ad8\u5c42\u7279\u5f81\u660e\u663e\u4e0d\u540c\u3002 \u4f60\u9700\u8981\u627e\u5230\u6b63\u786e\u7684\u5c42\u6570\u6765\u590d\u7528\u3002 \u5c1d\u8bd5\u5148\u51bb\u7ed3\u6240\u6709\u590d\u5236\u7684\u5c42\uff0c\u7136\u540e\u8bad\u7ec3\u6a21\u578b\u5e76\u67e5\u770b\u5b83\u662f\u5982\u4f55\u6267\u884c\u7684\u3002 \u7136\u540e\u5c1d\u8bd5\u89e3\u51bb\u4e00\u4e2a\u6216\u4e24\u4e2a\u8f83\u9ad8\u9690\u85cf\u5c42\uff0c\u8ba9\u53cd\u5411\u4f20\u64ad\u8c03\u6574\u5b83\u4eec\uff0c\u770b\u770b\u6027\u80fd\u662f\u5426\u63d0\u9ad8\u3002 \u60a8\u62e5\u6709\u7684\u8bad\u7ec3\u6570\u636e\u8d8a\u591a\uff0c\u60a8\u53ef\u4ee5\u89e3\u51bb\u7684\u5c42\u6570\u5c31\u8d8a\u591a\u3002 \u5982\u679c\u4ecd\u7136\u65e0\u6cd5\u83b7\u5f97\u826f\u597d\u7684\u6027\u80fd\uff0c\u5e76\u4e14\u60a8\u7684\u8bad\u7ec3\u6570\u636e\u5f88\u5c11\uff0c\u8bf7\u5c1d\u8bd5\u5220\u9664\u9876\u90e8\u7684\u9690\u85cf\u5c42\uff0c\u5e76\u518d\u6b21\u51bb\u7ed3\u6240\u6709\u5269\u4f59\u7684\u9690\u85cf\u5c42\u3002 \u60a8\u53ef\u4ee5\u8fed\u4ee3\uff0c\u76f4\u5230\u627e\u5230\u6b63\u786e\u7684\u5c42\u6570\u91cd\u590d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u6709\u8db3\u591f\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u66ff\u6362\u9876\u90e8\u7684\u9690\u85cf\u5c42\uff0c\u800c\u4e0d\u662f\u4e22\u6389\u5b83\u4eec\uff0c\u751a\u81f3\u53ef\u4ee5\u6dfb\u52a0\u66f4\u591a\u7684\u9690\u85cf\u5c42\u3002 Model Zoos \u4f60\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u4f60\u60f3\u8981\u89e3\u51b3\u7684\u4efb\u52a1\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\uff1f \u9996\u5148\u770b\u770b\u663e\u7136\u662f\u5728\u4f60\u81ea\u5df1\u7684\u6a21\u578b\u76ee\u5f55\u3002 \u8fd9\u662f\u4fdd\u5b58\u6240\u6709\u6a21\u578b\u5e76\u7ec4\u7ec7\u5b83\u4eec\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u7531\uff0c\u4ee5\u4fbf\u60a8\u4ee5\u540e\u53ef\u4ee5\u8f7b\u677e\u5730\u68c0\u7d22\u5b83\u4eec\u3002 \u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u5728\u6a21\u578b\u52a8\u7269\u56ed\u4e2d\u641c\u7d22\u3002 \u8bb8\u591a\u4eba\u4e3a\u4e86\u5404\u79cd\u4e0d\u540c\u7684\u4efb\u52a1\u800c\u8bad\u7ec3\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u5e76\u4e14\u5584\u610f\u5730\u5411\u516c\u4f17\u53d1\u5e03\u9884\u8bad\u7ec3\u6a21\u578b\u3002 TensorFlow \u5728 https://github.com/tensorflow/models \u4e2d\u6709\u81ea\u5df1\u7684\u6a21\u578b\u52a8\u7269\u56ed\u3002 \u7279\u522b\u662f\uff0c\u5b83\u5305\u542b\u4e86\u5927\u591a\u6570\u6700\u5148\u8fdb\u7684\u56fe\u50cf\u5206\u7c7b\u7f51\u7edc\uff0c\u5982 VGG\uff0cInception \u548c ResNet\uff08\u53c2\u89c1\u7b2c 13 \u7ae0\uff0c\u68c0\u67e5 model/slim \u76ee\u5f55\uff09\uff0c\u5305\u62ec\u4ee3\u7801\uff0c\u9884\u8bad\u7ec3\u6a21\u578b\u548c \u5de5\u5177\u6765\u4e0b\u8f7d\u6d41\u884c\u7684\u56fe\u50cf\u6570\u636e\u96c6\u3002 \u53e6\u4e00\u4e2a\u6d41\u884c\u7684\u6a21\u578b\u52a8\u7269\u56ed\u662f Caffe \u6a21\u578b\u52a8\u7269\u56ed\u3002 \u5b83\u8fd8\u5305\u542b\u8bb8\u591a\u5728\u5404\u79cd\u6570\u636e\u96c6\uff08\u4f8b\u5982\uff0cImageNet\uff0cPlaces \u6570\u636e\u5e93\uff0cCIFAR10 \u7b49\uff09\u4e0a\u8bad\u7ec3\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u578b\uff08\u4f8b\u5982\uff0cLeNet\uff0cAlexNet\uff0cZFNet\uff0cGoogLeNet\uff0cVGGNet\uff0c\u5f00\u59cb\uff09\u3002 Saumitro Dasgupta \u5199\u4e86\u4e00\u4e2a\u8f6c\u6362\u5668\uff0c\u53ef\u4ee5\u5728 https://github.com/ethereon/caffetensorflow \u3002 \u65e0\u76d1\u7763\u7684\u9884\u8bad\u7ec3 \u5047\u8bbe\u4f60\u60f3\u8981\u89e3\u51b3\u4e00\u4e2a\u590d\u6742\u7684\u4efb\u52a1\uff0c\u4f60\u6ca1\u6709\u592a\u591a\u7684\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u4f60\u4e0d\u80fd\u627e\u5230\u4e00\u4e2a\u7c7b\u4f3c\u7684\u4efb\u52a1\u8bad\u7ec3\u6a21\u578b\u3002 \u4e0d\u8981\u5931\u53bb\u6240\u6709\u5e0c\u671b\uff01 \u9996\u5148\uff0c\u4f60\u5f53\u7136\u5e94\u8be5\u5c1d\u8bd5\u6536\u96c6\u66f4\u591a\u7684\u6709\u6807\u7b7e\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u592a\u96be\u6216\u592a\u6602\u8d35\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u8fdb\u884c\u65e0\u76d1\u7763\u7684\u8bad\u7ec3\uff08\u89c1\u56fe 11-5\uff09\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u6709\u5f88\u591a\u672a\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u9010\u5c42\u8bad\u7ec3\u5c42\uff0c\u4ece\u6700\u4f4e\u5c42\u5f00\u59cb\uff0c\u7136\u540e\u4e0a\u5347\uff0c\u4f7f\u7528\u65e0\u76d1\u7763\u7684\u7279\u5f81\u68c0\u6d4b\u7b97\u6cd5\uff0c\u5982\u9650\u5236\u73bb\u5c14\u5179\u66fc\u673a\uff08RBM\uff1b\u89c1\u9644\u5f55 E\uff09\u6216\u81ea\u52a8\u7f16\u7801\u5668\uff08\u89c1\u7b2c 15 \u7ae0\uff09\u3002 \u6bcf\u4e2a\u5c42\u90fd\u88ab\u8bad\u7ec3\u6210\u5148\u524d\u8bad\u7ec3\u8fc7\u7684\u5c42\u7684\u8f93\u51fa\uff08\u9664\u4e86\u88ab\u8bad\u7ec3\u7684\u5c42\u4e4b\u5916\u7684\u6240\u6709\u5c42\u90fd\u88ab\u51bb\u7ed3\uff09\u3002 \u4e00\u65e6\u6240\u6709\u5c42\u90fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u4e86\u8bad\u7ec3\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u76d1\u7763\u5f0f\u5b66\u4e60\uff08\u5373\u53cd\u5411\u4f20\u64ad\uff09\u5bf9\u7f51\u7edc\u8fdb\u884c\u5fae\u8c03\u3002 \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u6f2b\u957f\u800c\u4e4f\u5473\u7684\u8fc7\u7a0b\uff0c\u4f46\u901a\u5e38\u8fd0\u4f5c\u826f\u597d\u3002 \u5b9e\u9645\u4e0a\uff0c\u8fd9\u662f Geoffrey Hinton \u548c\u4ed6\u7684\u56e2\u961f\u5728 2006 \u5e74\u4f7f\u7528\u7684\u6280\u672f\uff0c\u5bfc\u81f4\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u590d\u5174\u548c\u6df1\u5ea6\u5b66\u4e60\u7684\u6210\u529f\u3002 \u76f4\u5230 2010 \u5e74\uff0c\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\uff08\u901a\u5e38\u4f7f\u7528 RBM\uff09\u662f\u6df1\u5ea6\u7f51\u7edc\u7684\u6807\u51c6\uff0c\u53ea\u6709\u5728\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u5f97\u5230\u7f13\u89e3\u4e4b\u540e\uff0c\u7eaf\u8bad\u7ec3 DNN \u624d\u66f4\u4e3a\u666e\u904d\u3002 \u7136\u800c\uff0c\u5f53\u60a8\u6709\u4e00\u4e2a\u590d\u6742\u7684\u4efb\u52a1\u9700\u8981\u89e3\u51b3\u65f6\uff0c\u65e0\u76d1\u7763\u8bad\u7ec3\uff08\u73b0\u5728\u901a\u5e38\u4f7f\u7528\u81ea\u52a8\u7f16\u7801\u5668\u800c\u4e0d\u662f RBM\uff09\u4ecd\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u6ca1\u6709\u7c7b\u4f3c\u7684\u6a21\u578b\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u800c\u4e14\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\u5f88\u5c11\uff0c\u4f46\u662f\u5927\u91cf\u7684\u672a\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\u3002\uff08\u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u63d0\u51fa\u4e00\u4e2a\u76d1\u7763\u7684\u4efb\u52a1\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u6536\u96c6\u5927\u91cf\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u7136\u540e\u4f7f\u7528\u8fc1\u79fb\u5b66\u4e60\uff0c\u5982\u524d\u6240\u8ff0\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u8981\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u8bc6\u522b\u56fe\u7247\u4e2d\u7684\u670b\u53cb\uff0c\u4f60\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u4e0b\u8f7d\u6570\u767e\u4e07\u5f20\u8138\u5e76\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668\u6765\u68c0\u6d4b\u4e24\u5f20\u8138\u662f\u5426\u76f8\u540c\uff0c\u7136\u540e\u4f7f\u7528\u6b64\u5206\u7c7b\u5668\u5c06\u65b0\u56fe\u7247\u4e0e\u4f60\u670b\u53cb\u7684\u6bcf\u5f20\u7167\u7247\u505a\u6bd4\u8f83\u3002\uff09 \u5728\u8f85\u52a9\u4efb\u52a1\u4e0a\u9884\u8bad\u7ec3 \u6700\u540e\u4e00\u79cd\u9009\u62e9\u662f\u5728\u8f85\u52a9\u4efb\u52a1\u4e0a\u8bad\u7ec3\u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u83b7\u53d6\u6216\u751f\u6210\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u7136\u540e\u91cd\u65b0\u4f7f\u7528\u8be5\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\u6765\u5b8c\u6210\u60a8\u7684\u5b9e\u9645\u4efb\u52a1\u3002 \u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\u5c06\u5b66\u4e60\u53ef\u80fd\u88ab\u7b2c\u4e8c\u4e2a\u795e\u7ecf\u7f51\u7edc\u91cd\u590d\u4f7f\u7528\u7684\u7279\u5f81\u68c0\u6d4b\u5668\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5efa\u7acb\u4e00\u4e2a\u8bc6\u522b\u9762\u5b54\u7684\u7cfb\u7edf\uff0c\u4f60\u53ef\u80fd\u53ea\u6709\u51e0\u4e2a\u4eba\u7684\u7167\u7247 - \u663e\u7136\u4e0d\u8db3\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u597d\u7684\u5206\u7c7b\u5668\u3002 \u6536\u96c6\u6bcf\u4e2a\u4eba\u7684\u6570\u767e\u5f20\u7167\u7247\u5c06\u662f\u4e0d\u5b9e\u9645\u7684\u3002 \u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u6536\u96c6\u5927\u91cf\u968f\u673a\u4eba\u5458\u7684\u7167\u7247\uff0c\u5e76\u8bad\u7ec3\u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6765\u68c0\u6d4b\u4e24\u5f20\u4e0d\u540c\u7684\u7167\u7247\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4eba\u3002 \u8fd9\u6837\u7684\u7f51\u7edc\u5c06\u5b66\u4e60\u9762\u90e8\u4f18\u79c0\u7684\u7279\u5f81\u68c0\u6d4b\u5668\uff0c\u6240\u4ee5\u91cd\u590d\u4f7f\u7528\u5b83\u7684\u8f83\u4f4e\u5c42\u5c06\u5141\u8bb8\u4f60\u4f7f\u7528\u5f88\u5c11\u7684\u8bad\u7ec3\u6570\u636e\u6765\u8bad\u7ec3\u4e00\u4e2a\u597d\u7684\u9762\u90e8\u5206\u7c7b\u5668\u3002 \u6536\u96c6\u6ca1\u6709\u6807\u7b7e\u7684\u8bad\u7ec3\u6837\u672c\u901a\u5e38\u662f\u76f8\u5f53\u4fbf\u5b9c\u7684\uff0c\u4f46\u6807\u6ce8\u5b83\u4eec\u5374\u76f8\u5f53\u6602\u8d35\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e00\u79cd\u5e38\u89c1\u7684\u6280\u672f\u662f\u5c06\u6240\u6709\u8bad\u7ec3\u6837\u4f8b\u6807\u8bb0\u4e3a\u201c\u597d\u201d\uff0c\u7136\u540e\u901a\u8fc7\u7834\u574f\u597d\u7684\u8bad\u7ec3\u6837\u4f8b\u4ea7\u751f\u8bb8\u591a\u65b0\u7684\u8bad\u7ec3\u6837\u4f8b\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6837\u4f8b\u6807\u8bb0\u4e3a\u201c\u574f\u201d\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u8bad\u7ec3\u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc \u5c06\u5b9e\u4f8b\u5206\u7c7b\u4e3a\u597d\u6216\u4e0d\u597d\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4e0b\u8f7d\u6570\u767e\u4e07\u4e2a\u53e5\u5b50\uff0c\u5c06\u5176\u6807\u8bb0\u4e3a\u201c\u597d\u201d\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u53e5\u5b50\u4e2d\u968f\u673a\u66f4\u6539\u4e00\u4e2a\u5355\u8bcd\uff0c\u5e76\u5c06\u7ed3\u679c\u8bed\u53e5\u6807\u8bb0\u4e3a\u201c\u4e0d\u597d\u201d\u3002\u5982\u679c\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u544a\u8bc9\u201cThe dog sleeps\u201d\u662f\u597d\u7684\u53e5\u5b50\uff0c\u4f46\u201cThe dog they\u201d\u662f\u574f\u7684\uff0c\u5b83\u53ef\u80fd\u77e5\u9053\u76f8\u5f53\u591a\u7684\u8bed\u8a00\u3002 \u91cd\u7528\u5176\u8f83\u4f4e\u5c42\u53ef\u80fd\u6709\u52a9\u4e8e\u8bb8\u591a\u8bed\u8a00\u5904\u7406\u4efb\u52a1\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8bad\u7ec3\u7b2c\u4e00\u4e2a\u7f51\u7edc\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u8f93\u51fa\u4e00\u4e2a\u5206\u6570\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2a\u635f\u5931\u51fd\u6570\u786e\u4fdd\u4e00\u4e2a\u597d\u7684\u5b9e\u4f8b\u7684\u5206\u6570\u5927\u4e8e\u4e00\u4e2a\u574f\u5b9e\u4f8b\u7684\u5206\u6570\u81f3\u5c11\u4e00\u5b9a\u7684\u8fb9\u9645\u3002 \u8fd9\u88ab\u79f0\u4e3a\u6700\u5927\u8fb9\u9645\u5b66\u4e60. \u66f4\u5feb\u7684\u4f18\u5316\u5668 \u8bad\u7ec3\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u4f1a\u975e\u5e38\u7f13\u6162\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u56db\u79cd\u52a0\u901f\u8bad\u7ec3\u7684\u65b9\u6cd5\uff08\u5e76\u4e14\u8fbe\u5230\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff09\uff1a\u5bf9\u8fde\u63a5\u6743\u91cd\u5e94\u7528\u826f\u597d\u7684\u521d\u59cb\u5316\u7b56\u7565\uff0c\u4f7f\u7528\u826f\u597d\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u4f7f\u7528\u6279\u91cf\u89c4\u8303\u5316\u4ee5\u53ca\u91cd\u7528\u9884\u8bad\u7ec3\u7f51\u7edc\u7684\u90e8\u5206\u3002 \u53e6\u4e00\u4e2a\u5de8\u5927\u7684\u901f\u5ea6\u63d0\u5347\u6765\u81ea\u4f7f\u7528\u6bd4\u666e\u901a\u6e10\u53d8\u4e0b\u964d\u4f18\u5316\u5668\u66f4\u5feb\u7684\u4f18\u5316\u5668\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u6700\u6d41\u884c\u7684\uff1a\u52a8\u91cf\u4f18\u5316\uff0cNesterov \u52a0\u901f\u68af\u5ea6\uff0cAdaGrad\uff0cRMSProp\uff0c\u6700\u540e\u662f Adam \u4f18\u5316\u3002 \u5267\u900f\uff1a\u672c\u8282\u7684\u7ed3\u8bba\u662f\uff0c\u60a8\u51e0\u4e4e\u603b\u662f\u5e94\u8be5\u4f7f\u7528 Adam_optimization \uff0c\u6240\u4ee5\u5982\u679c\u60a8\u4e0d\u5173\u5fc3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u53ea\u9700\u4f7f\u7528 AdamOptimizer \u66ff\u6362\u60a8\u7684 GradientDescentOptimizer \uff0c\u7136\u540e\u8df3\u5230\u4e0b\u4e00\u8282\uff01 \u53ea\u9700\u8981\u8fd9\u4e48\u5c0f\u7684\u6539\u52a8\uff0c\u8bad\u7ec3\u901a\u5e38\u4f1a\u5feb\u51e0\u500d\u3002 \u4f46\u662f\uff0cAdam \u4f18\u5316\u786e\u5b9e\u6709\u4e09\u4e2a\u53ef\u4ee5\u8c03\u6574\u7684\u8d85\u53c2\u6570\uff08\u52a0\u4e0a\u5b66\u4e60\u7387\uff09\u3002 \u9ed8\u8ba4\u503c\u901a\u5e38\u5de5\u4f5c\u7684\u4e0d\u9519\uff0c\u4f46\u5982\u679c\u60a8\u9700\u8981\u8c03\u6574\u5b83\u4eec\uff0c\u77e5\u9053\u4ed6\u4eec\u600e\u4e48\u5b9e\u73b0\u7684\u53ef\u80fd\u4f1a\u6709\u5e2e\u52a9\u3002 Adam \u4f18\u5316\u7ed3\u5408\u4e86\u6765\u81ea\u5176\u4ed6\u4f18\u5316\u7b97\u6cd5\u7684\u51e0\u4e2a\u60f3\u6cd5\uff0c\u6240\u4ee5\u5148\u770b\u770b\u8fd9\u4e9b\u7b97\u6cd5\u662f\u6709\u7528\u7684\u3002 \u52a8\u91cf\u4f18\u5316 \u60f3\u8c61\u4e00\u4e0b\uff0c\u4e00\u4e2a\u4fdd\u9f84\u7403\u5728\u4e00\u4e2a\u5149\u6ed1\u7684\u8868\u9762\u4e0a\u5e73\u7f13\u7684\u659c\u5761\u4e0a\u6eda\u52a8\uff1a\u5b83\u4f1a\u7f13\u6162\u5730\u5f00\u59cb\uff0c\u4f46\u662f\u5b83\u4f1a\u5f88\u5feb\u5730\u8fbe\u5230\u6700\u7ec8\u7684\u901f\u5ea6\uff08\u5982\u679c\u6709\u4e00\u4e9b\u6469\u64e6\u6216\u7a7a\u6c14\u963b\u529b\u7684\u8bdd\uff09\u3002 \u8fd9\u662f Boris Polyak \u5728 1964 \u5e74\u63d0\u51fa\u7684\u52a8\u91cf\u4f18\u5316\u80cc\u540e\u7684\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u60f3\u6cd5\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u666e\u901a\u7684\u68af\u5ea6\u4e0b\u964d\u53ea\u9700\u8981\u6cbf\u7740\u659c\u5761\u8fdb\u884c\u5c0f\u7684\u6709\u89c4\u5f8b\u7684\u4e0b\u964d\u6b65\u9aa4\uff0c\u6240\u4ee5\u9700\u8981\u66f4\u591a\u7684\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\u5e95\u90e8\u3002 \u56de\u60f3\u4e00\u4e0b\uff0c\u68af\u5ea6\u4e0b\u964d\u53ea\u662f\u901a\u8fc7\u76f4\u63a5\u51cf\u53bb\u635f\u5931\u51fd\u6570 J(\u03b8) \u76f8\u5bf9\u4e8e\u6743\u91cd \u03b8 \u7684\u68af\u5ea6\uff0c\u4e58\u4ee5\u5b66\u4e60\u7387 \u03b7 \u6765\u66f4\u65b0\u6743\u91cd \u03b8 \u3002 \u65b9\u7a0b\u662f\uff1a \u3002\u5b83\u4e0d\u5173\u5fc3\u65e9\u671f\u7684\u68af\u5ea6\u662f\u4ec0\u4e48\u3002 \u5982\u679c\u5c40\u90e8\u68af\u5ea6\u5f88\u5c0f\uff0c\u5219\u4f1a\u975e\u5e38\u7f13\u6162\u3002 \u52a8\u91cf\u4f18\u5316\u5f88\u5173\u5fc3\u4ee5\u524d\u7684\u68af\u5ea6\uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u5b83\u5c06\u52a8\u91cf\u77e2\u91cf m \uff08\u4e58\u4ee5\u5b66\u4e60\u7387 \u03b7 \uff09\u4e0e\u5c40\u90e8\u68af\u5ea6\u76f8\u52a0\uff0c\u5e76\u4e14\u901a\u8fc7\u7b80\u5355\u5730\u51cf\u53bb\u8be5\u52a8\u91cf\u77e2\u91cf\u6765\u66f4\u65b0\u6743\u91cd\uff08\u53c2\u89c1\u516c\u5f0f 11-4\uff09\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u68af\u5ea6\u7528\u4f5c\u52a0\u901f\u5ea6\uff0c\u4e0d\u7528\u4f5c\u901f\u5ea6\u3002 \u4e3a\u4e86\u6a21\u62df\u67d0\u79cd\u6469\u64e6\u673a\u5236\uff0c\u907f\u514d\u52a8\u91cf\u8fc7\u5927\uff0c\u8be5\u7b97\u6cd5\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u8d85\u53c2\u6570 \u03b2 \uff0c\u7b80\u79f0\u4e3a\u52a8\u91cf\uff0c\u5b83\u5fc5\u987b\u8bbe\u7f6e\u5728 0\uff08\u9ad8\u6469\u64e6\uff09\u548c 1\uff08\u65e0\u6469\u64e6\uff09\u4e4b\u95f4\u3002 \u5178\u578b\u7684\u52a8\u91cf\u503c\u662f 0.9\u3002 \u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u9a8c\u8bc1\uff0c\u5982\u679c\u68af\u5ea6\u4fdd\u6301\u4e0d\u53d8\uff0c\u5219\u6700\u7ec8\u901f\u5ea6\uff08\u5373\uff0c\u6743\u91cd\u66f4\u65b0\u7684\u6700\u5927\u5927\u5c0f\uff09\u7b49\u4e8e\u8be5\u68af\u5ea6\u4e58\u4ee5\u5b66\u4e60\u7387 \u03b7 \u4e58\u4ee5 1/(1-\u03b2) \u3002 \u4f8b\u5982\uff0c\u5982\u679c \u03b2 = 0.9 \uff0c\u5219\u6700\u7ec8\u901f\u5ea6\u7b49\u4e8e\u5b66\u4e60\u7387\u7684\u68af\u5ea6\u4e58\u4ee5 10 \u500d\uff0c\u56e0\u6b64\u52a8\u91cf\u4f18\u5316\u6bd4\u68af\u5ea6\u4e0b\u964d\u5feb 10 \u500d\uff01 \u8fd9\u4f7f\u52a8\u91cf\u4f18\u5316\u6bd4\u68af\u5ea6\u4e0b\u964d\u5feb\u5f97\u591a\u3002 \u7279\u522b\u662f\uff0c\u6211\u4eec\u5728\u7b2c\u56db\u7ae0\u4e2d\u770b\u5230\uff0c\u5f53\u8f93\u5165\u91cf\u5177\u6709\u975e\u5e38\u4e0d\u540c\u7684\u5c3a\u5ea6\u65f6\uff0c\u635f\u5931\u51fd\u6570\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u7ec6\u957f\u7684\u7897\uff08\u89c1\u56fe 4-7\uff09\u3002 \u68af\u5ea6\u4e0b\u964d\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u8981\u82b1\u5f88\u957f\u7684\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\u5e95\u90e8\u3002 \u76f8\u53cd\uff0c\u52a8\u91cf\u4f18\u5316\u4f1a\u8d8a\u6765\u8d8a\u5feb\u5730\u6eda\u4e0b\u5c71\u8c37\u5e95\u90e8\uff0c\u76f4\u5230\u8fbe\u5230\u5e95\u90e8\uff08\u6700\u4f73\uff09\u3002 \u5728\u4e0d\u4f7f\u7528\u6279\u6807\u51c6\u5316\u7684\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u8f83\u9ad8\u5c42\u5f80\u5f80\u4f1a\u5f97\u5230\u5177\u6709\u4e0d\u540c\u7684\u5c3a\u5ea6\u7684\u8f93\u5165\uff0c\u6240\u4ee5\u4f7f\u7528\u52a8\u91cf\u4f18\u5316\u4f1a\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002 \u5b83\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u6eda\u8fc7\u5c40\u90e8\u6700\u4f18\u503c\u3002 \u7531\u4e8e\u52a8\u91cf\u7684\u539f\u56e0\uff0c\u4f18\u5316\u5668\u53ef\u80fd\u4f1a\u8d85\u8c03\u4e00\u4e9b\uff0c\u7136\u540e\u518d\u56de\u6765\uff0c\u518d\u6b21\u8d85\u8c03\uff0c\u5e76\u5728\u7a33\u5b9a\u5728\u6700\u5c0f\u503c\u4e4b\u524d\u591a\u6b21\u632f\u8361\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u7cfb\u7edf\u4e2d\u6709\u4e00\u70b9\u6469\u64e6\u7684\u539f\u56e0\u4e4b\u4e00\uff1a\u5b83\u6d88\u9664\u4e86\u8fd9\u4e9b\u632f\u8361\uff0c\u4ece\u800c\u52a0\u901f\u4e86\u6536\u655b\u3002 \u5728 TensorFlow \u4e2d\u5b9e\u73b0\u52a8\u91cf\u4f18\u5316\u662f\u4e00\u4ef6\u7b80\u5355\u7684\u4e8b\u60c5\uff1a\u53ea\u9700\u7528 MomentumOptimizer \u66ff\u6362 GradientDescentOptimizer \uff0c\u7136\u540e\u8eba\u4e0b\u6765\u8d5a\u94b1\uff01 \u52a8\u91cf\u4f18\u5316\u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u5b83\u589e\u52a0\u4e86\u53e6\u4e00\u4e2a\u8d85\u53c2\u6570\u6765\u8c03\u6574\u3002 \u7136\u800c\uff0c0.9 \u7684\u52a8\u91cf\u503c\u901a\u5e38\u5728\u5b9e\u8df5\u4e2d\u8fd0\u884c\u826f\u597d\uff0c\u51e0\u4e4e\u603b\u662f\u6bd4\u68af\u5ea6\u4e0b\u964d\u5feb\u3002 Nesterov \u52a0\u901f\u68af\u5ea6 Yurii Nesterov \u5728 1983 \u5e74\u63d0\u51fa\u7684\u52a8\u91cf\u4f18\u5316\u7684\u4e00\u4e2a\u5c0f\u53d8\u4f53\u51e0\u4e4e\u603b\u662f\u6bd4\u666e\u901a\u7684\u52a8\u91cf\u4f18\u5316\u66f4\u5feb\u3002 Nesterov \u52a8\u91cf\u4f18\u5316\u6216 Nesterov \u52a0\u901f\u68af\u5ea6\uff08Nesterov Accelerated Gradient\uff0cNAG\uff09\u7684\u601d\u60f3\u662f\u6d4b\u91cf\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u4e0d\u662f\u5728\u5c40\u90e8\u4f4d\u7f6e\uff0c\u800c\u662f\u5728\u52a8\u91cf\u65b9\u5411\u7a0d\u5fae\u9760\u524d\uff08\u89c1\u516c\u5f0f 11-5\uff09\u3002 \u4e0e\u666e\u901a\u7684\u52a8\u91cf\u4f18\u5316\u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\u68af\u5ea6\u662f\u5728 \u03b8+\u03b2m \u800c\u4e0d\u662f\u5728 \u03b8 \u5904\u6d4b\u91cf\u7684\u3002 \u8fd9\u4e2a\u5c0f\u5c0f\u7684\u8c03\u6574\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u4e00\u822c\u6765\u8bf4\uff0c\u52a8\u91cf\u77e2\u91cf\u5c06\u6307\u5411\u6b63\u786e\u7684\u65b9\u5411\uff08\u5373\u671d\u5411\u6700\u4f18\u65b9\u5411\uff09\uff0c\u6240\u4ee5\u4f7f\u7528\u5728\u8be5\u65b9\u5411\u4e0a\u6d4b\u5f97\u7684\u68af\u5ea6\u7a0d\u5fae\u66f4\u7cbe\u786e\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 \u539f\u59cb\u4f4d\u7f6e\u7684\u68af\u5ea6\uff0c\u5982\u56fe11-6\u6240\u793a\uff08\u5176\u4e2d \u22071 \u4ee3\u8868\u5728\u8d77\u70b9 \u03b8 \u5904\u6d4b\u91cf\u7684\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\uff0c \u22072 \u4ee3\u8868\u4f4d\u4e8e \u03b8+\u03b2m \u7684\u70b9\u5904\u7684\u68af\u5ea6\uff09\u3002 \u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0cNesterov \u66f4\u65b0\u7a0d\u5fae\u9760\u8fd1\u6700\u4f73\u503c\u3002 \u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fd9\u4e9b\u5c0f\u7684\u6539\u8fdb\u52a0\u8d77\u6765\uff0cNAG \u6700\u7ec8\u6bd4\u5e38\u89c4\u7684\u52a8\u91cf\u4f18\u5316\u5feb\u5f97\u591a\u3002 \u6b64\u5916\uff0c\u8bf7\u6ce8\u610f\uff0c\u5f53\u52a8\u91cf\u63a8\u52a8\u6743\u91cd\u6a2a\u8de8\u5c71\u8c37\u65f6\uff0c\u25bd1\u7ee7\u7eed\u63a8\u8fdb\u8d8a\u8fc7\u5c71\u8c37\uff0c\u800c\u25bd2\u63a8\u56de\u5c71\u8c37\u7684\u5e95\u90e8\u3002 \u8fd9\u6709\u52a9\u4e8e\u51cf\u5c11\u632f\u8361\uff0c\u4ece\u800c\u66f4\u5feb\u5730\u6536\u655b\u3002 \u4e0e\u5e38\u89c4\u7684\u52a8\u91cf\u4f18\u5316\u76f8\u6bd4\uff0cNAG \u51e0\u4e4e\u603b\u80fd\u52a0\u901f\u8bad\u7ec3\u3002 \u8981\u4f7f\u7528\u5b83\uff0c\u53ea\u9700\u5728\u521b\u5efa MomentumOptimizer \u65f6\u8bbe\u7f6e use_nesterov = True \uff1a AdaGrad \u518d\u6b21\u8003\u8651\u7ec6\u957f\u7897\u7684\u95ee\u9898\uff1a\u68af\u5ea6\u4e0b\u964d\u4ece\u6700\u9661\u5ced\u7684\u659c\u5761\u5feb\u901f\u4e0b\u964d\uff0c\u7136\u540e\u7f13\u6162\u5730\u4e0b\u5230\u8c37\u5e95\u3002 \u5982\u679c\u7b97\u6cd5\u80fd\u591f\u65e9\u671f\u68c0\u6d4b\u5230\u8fd9\u4e2a\u95ee\u9898\u5e76\u4e14\u7ea0\u6b63\u5b83\u7684\u65b9\u5411\u6765\u6307\u5411\u5168\u5c40\u6700\u4f18\u70b9\uff0c\u90a3\u5c06\u662f\u975e\u5e38\u597d\u7684\u3002 AdaGrad \u7b97\u6cd5\u901a\u8fc7\u6cbf\u7740\u6700\u9661\u7684\u7ef4\u5ea6\u7f29\u5c0f\u68af\u5ea6\u5411\u91cf\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff08\u89c1\u516c\u5f0f 11-6\uff09\uff1a \u7b2c\u4e00\u6b65\u5c06\u68af\u5ea6\u7684\u5e73\u65b9\u7d2f\u52a0\u5230\u77e2\u91cf s \u4e2d\uff08 \u2297 \u7b26\u53f7\u8868\u793a\u5355\u5143\u4e58\u6cd5\uff09\u3002 \u8fd9\u4e2a\u5411\u91cf\u5316\u5f62\u5f0f\u76f8\u5f53\u4e8e\u5411\u91cf s \u7684\u6bcf\u4e2a\u5143\u7d20 si \u8ba1\u7b97 \u3002\u6362\u4e00\u79cd\u8bf4\u6cd5\uff0c\u6bcf\u4e2a \u7d2f\u52a0\u635f\u5931\u51fd\u6570\u5bf9\u53c2\u6570 \u7684\u504f\u5bfc\u6570\u7684\u5e73\u65b9\u3002 \u5982\u679c\u635f\u5931\u51fd\u6570\u6cbf\u7740\u7b2c i \u7ef4\u9661\u5ced\uff0c\u5219\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c \u5c06\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\u3002 \u7b2c\u4e8c\u6b65\u51e0\u4e4e\u4e0e\u68af\u5ea6\u4e0b\u964d\u76f8\u540c\uff0c\u4f46\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u4e0d\u540c\uff1a\u68af\u5ea6\u77e2\u91cf\u6309\u6bd4\u4f8b\u7f29\u5c0f \uff08 \u2298 \u7b26\u53f7\u8868\u793a\u5143\u7d20\u5206\u5272\uff0c \u03b5 \u662f\u907f\u514d\u88ab\u96f6\u9664\u7684\u5e73\u6ed1\u9879\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a \u3002 \u8fd9\u4e2a\u77e2\u91cf\u5316\u7684\u5f62\u5f0f\u76f8\u5f53\u4e8e\u8ba1\u7b97 \u5bf9\u4e8e\u6240\u6709\u53c2\u6570 \uff08\u540c\u65f6\uff09\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u79cd\u7b97\u6cd5\u4f1a\u964d\u4f4e\u5b66\u4e60\u901f\u5ea6\uff0c\u4f46\u5bf9\u4e8e\u9661\u5ced\u7684\u5c3a\u5bf8\uff0c\u5176\u901f\u5ea6\u8981\u5feb\u4e8e\u5177\u6709\u6e29\u548c\u7684\u659c\u7387\u7684\u5c3a\u5bf8\u3002 \u8fd9\u88ab\u79f0\u4e3a\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u3002 \u5b83\u6709\u52a9\u4e8e\u5c06\u66f4\u65b0\u7684\u7ed3\u679c\u66f4\u76f4\u63a5\u5730\u6307\u5411\u5168\u5c40\u6700\u4f18\uff08\u89c1\u56fe 11-7\uff09\u3002 \u53e6\u4e00\u4e2a\u597d\u5904\u662f\u5b83\u4e0d\u9700\u8981\u90a3\u4e48\u591a\u7684\u53bb\u8c03\u6574\u5b66\u4e60\u7387\u8d85\u53c2\u6570 \u03b7 \u3002 \u5bf9\u4e8e\u7b80\u5355\u7684\u4e8c\u6b21\u95ee\u9898\uff0cAdaGrad \u7ecf\u5e38\u8868\u73b0\u826f\u597d\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u5b83\u7ecf\u5e38\u505c\u6b62\u5f97\u592a\u65e9\u3002 \u5b66\u4e60\u7387\u88ab\u7f29\u51cf\u5f97\u592a\u591a\uff0c\u4ee5\u81f3\u4e8e\u5728\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u4e4b\u524d\uff0c\u7b97\u6cd5\u5b8c\u5168\u505c\u6b62\u3002 \u6240\u4ee5\uff0c\u5373\u4f7f TensorFlow \u6709\u4e00\u4e2a AdagradOptimizer \uff0c\u4f60\u4e5f\u4e0d\u5e94\u8be5\u7528\u5b83\u6765\u8bad\u7ec3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff08\u867d\u7136\u5bf9\u7ebf\u6027\u56de\u5f52\u8fd9\u6837\u7b80\u5355\u7684\u4efb\u52a1\u53ef\u80fd\u662f\u6709\u6548\u7684\uff09\u3002 RMSProp \u5c3d\u7ba1 AdaGrad \u7684\u901f\u5ea6\u53d8\u6162\u4e86\u4e00\u70b9\uff0c\u5e76\u4e14\u4ece\u672a\u6536\u655b\u5230\u5168\u5c40\u6700\u4f18\uff0c\u4f46\u662f RMSProp \u7b97\u6cd5\u901a\u8fc7\u4ec5\u7d2f\u79ef\u6700\u8fd1\u8fed\u4ee3\uff08\u800c\u4e0d\u662f\u4ece\u8bad\u7ec3\u5f00\u59cb\u4ee5\u6765\u7684\u6240\u6709\u68af\u5ea6\uff09\u7684\u68af\u5ea6\u6765\u4fee\u6b63\u8fd9\u4e2a\u95ee\u9898\u3002 \u5b83\u901a\u8fc7\u5728\u7b2c\u4e00\u6b65\u4e2d\u4f7f\u7528\u6307\u6570\u8870\u51cf\u6765\u5b9e\u73b0\uff08\u89c1\u516c\u5f0f 11-7\uff09\u3002 \u4ed6\u7684\u8870\u53d8\u7387 \u03b2 \u901a\u5e38\u8bbe\u5b9a\u4e3a 0.9\u3002 \u662f\u7684\uff0c\u5b83\u53c8\u662f\u4e00\u4e2a\u65b0\u7684\u8d85\u53c2\u6570\uff0c\u4f46\u662f\u8fd9\u4e2a\u9ed8\u8ba4\u503c\u901a\u5e38\u8fd0\u884c\u826f\u597d\uff0c\u6240\u4ee5\u4f60\u53ef\u80fd\u6839\u672c\u4e0d\u9700\u8981\u8c03\u6574\u5b83\u3002 \u6b63\u5982\u60a8\u6240\u6599\uff0cTensorFlow \u62e5\u6709\u4e00\u4e2a RMSPropOptimizer \u7c7b\uff1a \u9664\u4e86\u975e\u5e38\u7b80\u5355\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u4f18\u5316\u5668\u51e0\u4e4e\u603b\u662f\u6bd4 AdaGrad \u6267\u884c\u5f97\u66f4\u597d\u3002 \u5b83\u901a\u5e38\u4e5f\u6bd4\u52a8\u91cf\u4f18\u5316\u548c Nesterov \u52a0\u901f\u68af\u5ea6\u8868\u73b0\u66f4\u597d\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u9996\u9009\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u76f4\u5230 Adam \u4f18\u5316\u51fa\u73b0\u3002 Adam \u4f18\u5316 Adam\uff0c\u4ee3\u8868\u81ea\u9002\u5e94\u77e9\u4f30\u8ba1\uff0c\u7ed3\u5408\u4e86\u52a8\u91cf\u4f18\u5316\u548c RMSProp \u7684\u601d\u60f3\uff1a\u5c31\u50cf\u52a8\u91cf\u4f18\u5316\u4e00\u6837\uff0c\u5b83\u8ffd\u8e2a\u8fc7\u53bb\u68af\u5ea6\u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c\uff0c\u5c31\u50cf RMSProp \u4e00\u6837\uff0c\u5b83\u8ddf\u8e2a\u8fc7\u53bb\u5e73\u65b9\u68af\u5ea6\u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c \uff08\u89c1\u65b9\u7a0b\u5f0f 11-8\uff09\u3002 T \u4ee3\u8868\u8fed\u4ee3\u6b21\u6570\uff08\u4ece 1 \u5f00\u59cb\uff09\u3002 \u5982\u679c\u4f60\u53ea\u770b\u6b65\u9aa4 1, 2 \u548c 5\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230 Adam \u4e0e\u52a8\u91cf\u4f18\u5316\u548c RMSProp \u7684\u76f8\u4f3c\u6027\u3002 \u552f\u4e00\u7684\u533a\u522b\u662f\u7b2c 1 \u6b65\u8ba1\u7b97\u6307\u6570\u8870\u51cf\u7684\u5e73\u5747\u503c\uff0c\u800c\u4e0d\u662f\u6307\u6570\u8870\u51cf\u7684\u548c\uff0c\u4f46\u9664\u4e86\u4e00\u4e2a\u5e38\u6570\u56e0\u5b50\uff08\u8870\u51cf\u5e73\u5747\u503c\u53ea\u662f\u8870\u51cf\u548c\u7684 1 - \u03b21 \u500d\uff09\u4e4b\u5916\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u7b49\u6548\u7684\u3002 \u6b65\u9aa4 3 \u548c\u6b65\u9aa4 4 \u662f\u4e00\u4e2a\u6280\u672f\u7ec6\u8282\uff1a\u7531\u4e8e m \u548c s \u521d\u59cb\u5316\u4e3a 0\uff0c\u6240\u4ee5\u5728\u8bad\u7ec3\u5f00\u59cb\u65f6\u5b83\u4eec\u4f1a\u504f\u54110\uff0c\u6240\u4ee5\u8fd9\u4e24\u6b65\u5c06\u5728\u8bad\u7ec3\u5f00\u59cb\u65f6\u5e2e\u52a9\u63d0\u9ad8 m \u548c s \u3002 \u52a8\u91cf\u8870\u51cf\u8d85\u53c2\u6570 \u03b21 \u901a\u5e38\u521d\u59cb\u5316\u4e3a 0.9\uff0c\u800c\u7f29\u653e\u8870\u51cf\u8d85\u53c2\u6570 \u03b22 \u901a\u5e38\u521d\u59cb\u5316\u4e3a 0.999\u3002 \u5982\u524d\u6240\u8ff0\uff0c\u5e73\u6ed1\u9879 \u03b5 \u901a\u5e38\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\uff0c\u4f8b\u5982 \u3002\u8fd9\u4e9b\u662f TensorFlow \u7684 AdamOptimizer \u7c7b\u7684\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\uff1a \u5b9e\u9645\u4e0a\uff0c\u7531\u4e8e Adam \u662f\u4e00\u79cd\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u7b97\u6cd5\uff08\u5982 AdaGrad \u548c RMSProp\uff09\uff0c\u6240\u4ee5\u5bf9\u5b66\u4e60\u7387\u8d85\u53c2\u6570 \u03b7 \u7684\u8c03\u6574\u8f83\u5c11\u3002 \u60a8\u7ecf\u5e38\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c \u03b7= 0.001 \uff0c\u4f7f Adam \u66f4\u5bb9\u6613\u4f7f\u7528\u76f8\u5bf9\u4e8e\u68af\u5ea6\u4e0b\u964d\u3002 \u8fc4\u4eca\u4e3a\u6b62\u6240\u8ba8\u8bba\u7684\u6240\u6709\u4f18\u5316\u6280\u672f\u90fd\u53ea\u4f9d\u8d56\u4e8e\u4e00\u9636\u504f\u5bfc\u6570\uff08\u96c5\u53ef\u6bd4\u77e9\u9635\uff09\u3002 \u4f18\u5316\u6587\u732e\u5305\u542b\u57fa\u4e8e\u4e8c\u9636\u504f\u5bfc\u6570\uff08\u6d77\u68ee\u77e9\u9635\uff09\u7684\u60ca\u4eba\u7b97\u6cd5\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5f88\u96be\u5e94\u7528\u4e8e\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8f93\u51fa\u6709 n ^ 2 \u4e2a\u6d77\u68ee\u503c\uff08\u5176\u4e2d n \u662f\u53c2\u6570\u7684\u6570\u91cf\uff09\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u8f93\u51fa\u53ea\u6709 n \u4e2a\u96c5\u514b\u6bd4\u503c\u3002 \u7531\u4e8e DNN \u901a\u5e38\u5177\u6709\u6570\u4ee5\u4e07\u8ba1\u7684\u53c2\u6570\uff0c\u4e8c\u9636\u4f18\u5316\u7b97\u6cd5\u901a\u5e38\u751a\u81f3\u4e0d\u9002\u5408\u5185\u5b58\uff0c\u751a\u81f3\u5728\u4ed6\u4eec\u8fd9\u6837\u505a\u65f6\uff0c\u8ba1\u7b97\u6d77\u68ee\u77e9\u9635\u4e5f\u662f\u592a\u6162\u4e86\u3002 \u8bad\u7ec3\u7a00\u758f\u6a21\u578b \u6240\u6709\u521a\u521a\u63d0\u51fa\u7684\u4f18\u5316\u7b97\u6cd5\u90fd\u4f1a\u4ea7\u751f\u5bc6\u96c6\u7684\u6a21\u578b\uff0c\u8fd9\u610f\u5473\u7740\u5927\u591a\u6570\u53c2\u6570\u90fd\u662f\u975e\u96f6\u7684\u3002 \u5982\u679c\u4f60\u5728\u8fd0\u884c\u65f6\u9700\u8981\u4e00\u4e2a\u975e\u5e38\u5feb\u901f\u7684\u6a21\u578b\uff0c\u6216\u8005\u5982\u679c\u4f60\u9700\u8981\u5b83\u5360\u7528\u8f83\u5c11\u7684\u5185\u5b58\uff0c\u4f60\u53ef\u80fd\u66f4\u559c\u6b22\u7528\u4e00\u4e2a\u7a00\u758f\u6a21\u578b\u6765\u4ee3\u66ff\u3002 \u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u4e00\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u65b9\u6cd5\u662f\u50cf\u5e73\u5e38\u4e00\u6837\u8bad\u7ec3\u6a21\u578b\uff0c\u7136\u540e\u6446\u8131\u5fae\u5c0f\u7684\u6743\u91cd\uff08\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a 0\uff09\u3002 \u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5e94\u7528\u5f3a l1 \u6b63\u5219\u5316\uff0c\u56e0\u4e3a\u5b83\u4f1a\u63a8\u52a8\u4f18\u5316\u5668\u5c3d\u53ef\u80fd\u591a\u5730\u6d88\u9664\u6743\u91cd\uff08\u5982\u7b2c 4 \u7ae0\u5173\u4e8e Lasso \u56de\u5f52\u7684\u8ba8\u8bba\uff09\u3002 \u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u6280\u672f\u53ef\u80fd\u4ecd\u7136\u4e0d\u8db3\u3002 \u6700\u540e\u4e00\u4e2a\u9009\u62e9\u662f\u5e94\u7528\u53cc\u91cd\u5e73\u5747\uff0c\u901a\u5e38\u79f0\u4e3a\u9075\u5faa\u6b63\u5219\u5316\u9886\u5bfc\u8005\uff08FTRL\uff09\uff0c\u4e00\u79cd\u7531\u5c24\u91cc\u00b7\u6d85\u65af\u6377\u7f57\u592b\uff08Yurii Nesterov\uff09\u63d0\u51fa\u7684\u6280\u672f\u3002 \u5f53\u4e0e l1 \u6b63\u5219\u5316\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u8fd9\u79cd\u6280\u672f\u901a\u5e38\u5bfc\u81f4\u975e\u5e38\u7a00\u758f\u7684\u6a21\u578b\u3002 TensorFlow \u5728 FTRLOptimizer \u7c7b\u4e2d\u5b9e\u73b0\u79f0\u4e3a FTRL-Proximal \u7684 FTRL \u53d8\u4f53\u3002 \u5b66\u4e60\u7387\u8c03\u6574 \u627e\u5230\u4e00\u4e2a\u597d\u7684\u5b66\u4e60\u901f\u5ea6\u53ef\u80fd\u4f1a\u975e\u5e38\u68d8\u624b\u3002 \u5982\u679c\u8bbe\u7f6e\u592a\u9ad8\uff0c\u8bad\u7ec3\u5b9e\u9645\u4e0a\u53ef\u80fd\u504f\u79bb\uff08\u5982\u6211\u4eec\u5728\u7b2c 4 \u7ae0\uff09\u3002 \u5982\u679c\u8bbe\u7f6e\u5f97\u592a\u4f4e\uff0c\u8bad\u7ec3\u6700\u7ec8\u4f1a\u6536\u655b\u5230\u6700\u4f73\u72b6\u6001\uff0c\u4f46\u8fd9\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002 \u5982\u679c\u5c06\u5176\u8bbe\u7f6e\u5f97\u592a\u9ad8\uff0c\u5f00\u59cb\u7684\u8fdb\u5ea6\u4f1a\u975e\u5e38\u5feb\uff0c\u4f46\u6700\u7ec8\u4f1a\u5728\u6700\u4f18\u89e3\u5468\u56f4\u8df3\u52a8\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u5b89\u987f\u4e0b\u6765\uff08\u9664\u975e\u60a8\u4f7f\u7528\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u4f18\u5316\u7b97\u6cd5\uff0c\u5982 AdaGrad\uff0cRMSProp \u6216 Adam\uff0c\u4f46\u662f \u5373\u4f7f\u8fd9\u6837\u53ef\u80fd\u9700\u8981\u65f6\u95f4\u6765\u89e3\u51b3\uff09\u3002 \u5982\u679c\u60a8\u7684\u8ba1\u7b97\u9884\u7b97\u6709\u9650\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u5fc5\u987b\u5728\u6b63\u786e\u6536\u655b\u4e4b\u524d\u4e2d\u65ad\u8bad\u7ec3\uff0c\u4ea7\u751f\u6b21\u4f18\u89e3\u51b3\u65b9\u6848\uff08\u53c2\u89c1\u56fe 11-8\uff09\u3002 \u901a\u8fc7\u4f7f\u7528\u5404\u79cd\u5b66\u4e60\u7387\u548c\u6bd4\u8f83\u5b66\u4e60\u66f2\u7ebf\uff0c\u5728\u51e0\u4e2a\u8fed\u4ee3\u5185\u5bf9\u60a8\u7684\u7f51\u7edc\u8fdb\u884c\u591a\u6b21\u8bad\u7ec3\uff0c\u60a8\u4e5f\u8bb8\u80fd\u591f\u627e\u5230\u76f8\u5f53\u597d\u7684\u5b66\u4e60\u7387\u3002 \u7406\u60f3\u7684\u5b66\u4e60\u7387\u5c06\u4f1a\u5feb\u901f\u5b66\u4e60\u5e76\u6536\u655b\u5230\u826f\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u7136\u800c\uff0c\u4f60\u53ef\u4ee5\u505a\u5f97\u6bd4\u4e0d\u65ad\u7684\u5b66\u4e60\u7387\u66f4\u597d\uff1a\u5982\u679c\u4f60\u4ece\u4e00\u4e2a\u9ad8\u7684\u5b66\u4e60\u7387\u5f00\u59cb\uff0c\u7136\u540e\u4e00\u65e6\u5b83\u505c\u6b62\u5feb\u901f\u7684\u8fdb\u6b65\u5c31\u51cf\u5c11\u5b83\uff0c\u4f60\u53ef\u4ee5\u6bd4\u6700\u4f73\u7684\u6052\u5b9a\u5b66\u4e60\u7387\u66f4\u5feb\u5730\u8fbe\u5230\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u6709\u8bb8\u591a\u4e0d\u540c\u7684\u7b56\u7565\uff0c\u4ee5\u51cf\u5c11\u8bad\u7ec3\u671f\u95f4\u7684\u5b66\u4e60\u7387\u3002 \u8fd9\u4e9b\u7b56\u7565\u88ab\u79f0\u4e3a\u5b66\u4e60\u7387\u8c03\u6574\uff08\u6211\u4eec\u5728\u7b2c 4 \u7ae0\u4e2d\u7b80\u8981\u4ecb\u7ecd\u4e86\u8fd9\u4e2a\u6982\u5ff5\uff09\uff0c\u5176\u4e2d\u6700\u5e38\u89c1\u7684\u662f\uff1a \u9884\u5b9a\u7684\u5206\u6bb5\u6052\u5b9a\u5b66\u4e60\u7387: \u4f8b\u5982\uff0c\u9996\u5148\u5c06\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a \uff0c\u7136\u540e\u5728 50 \u4e2a\u8fed\u4ee3\u4e4b\u540e\u5c06\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a \u3002\u867d\u7136\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u4f46\u662f\u901a\u5e38\u9700\u8981\u5f04\u6e05\u695a\u6b63\u786e\u7684\u5b66\u4e60\u901f\u5ea6\u4ee5\u53ca\u4f55\u65f6\u4f7f\u7528\u5b83\u4eec\u3002 \u6027\u80fd\u8c03\u5ea6: \u6bcf N \u6b65\u6d4b\u91cf\u9a8c\u8bc1\u8bef\u5dee\uff08\u5c31\u50cf\u63d0\u524d\u505c\u6b62\u4e00\u6837\uff09\uff0c\u5f53\u8bef\u5dee\u4e0b\u964d\u65f6\uff0c\u5c06\u5b66\u4e60\u7387\u964d\u4f4e\u4e00\u4e2a\u56e0\u5b50 \u03bb \u3002 \u6307\u6570\u8c03\u5ea6: \u5c06\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a\u8fed\u4ee3\u6b21\u6570 t \u7684\u51fd\u6570\uff1a \u3002 \u8fd9\u5f88\u597d\uff0c\u4f46\u5b83\u9700\u8981\u8c03\u6574 \u03b70 \u548c r \u3002 \u5b66\u4e60\u7387\u5c06\u7531\u6bcf r \u6b65\u4e0b\u964d 10 \u500d\u3002 \u5e42\u8c03\u5ea6: \u8bbe\u5b66\u4e60\u7387\u4e3a \u3002 \u8d85\u53c2\u6570 c \u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3a 1\u3002\u8fd9\u4e0e\u6307\u6570\u8c03\u5ea6\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b66\u4e60\u7387\u4e0b\u964d\u8981\u6162\u5f97\u591a\u3002 Andrew Senior \u7b492013\u5e74\u7684\u8bba\u6587\u3002 \u6bd4\u8f83\u4e86\u4f7f\u7528\u52a8\u91cf\u4f18\u5316\u8bad\u7ec3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\u65f6\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u5b66\u4e60\u7387\u8c03\u6574\u7684\u6027\u80fd\u3002 \u4f5c\u8005\u5f97\u51fa\u7ed3\u8bba\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6027\u80fd\u8c03\u5ea6\u548c\u6307\u6570\u8c03\u5ea6\u90fd\u8868\u73b0\u826f\u597d\uff0c\u4f46\u4ed6\u4eec\u66f4\u559c\u6b22\u6307\u6570\u8c03\u5ea6\uff0c\u56e0\u4e3a\u5b83\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u5bb9\u6613\u8c03\u6574\uff0c\u6536\u655b\u901f\u5ea6\u7565\u5feb\u4e8e\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u3002 \u4f7f\u7528 TensorFlow \u5b9e\u73b0\u5b66\u4e60\u7387\u8c03\u6574\u975e\u5e38\u7b80\u5355\uff1a initial_learning_rate = 0.1 decay_steps = 10000 decay_rate = 1/10 global_step = tf.Variable(0, trainable=False, name=\"global_step\") learning_rate = tf.train.exponential_decay(initial_learning_rate, global_step, decay_steps, decay_rate) optimizer = tf.train.MomentumOptimizer(learning_rate, momentum=0.9) training_op = optimizer.minimize(loss, global_step=global_step) \u8bbe\u7f6e\u8d85\u53c2\u6570\u503c\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4e0d\u53ef\u8bad\u7ec3\u7684\u53d8\u91cf global_step \uff08\u521d\u59cb\u5316\u4e3a 0\uff09\u4ee5\u8ddf\u8e2a\u5f53\u524d\u7684\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570\u3002 \u7136\u540e\u6211\u4eec\u4f7f\u7528 TensorFlow \u7684 exponential_decay() \u51fd\u6570\u6765\u5b9a\u4e49\u6307\u6570\u8870\u51cf\u7684\u5b66\u4e60\u7387\uff08 \u03b70= 0.1 \u548c r = 10,000 \uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u8870\u51cf\u7684\u5b66\u4e60\u7387\u521b\u5efa\u4e00\u4e2a\u4f18\u5316\u5668\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662f\u4e00\u4e2a MomentumOptimizer \uff09\u3002 \u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528\u4f18\u5316\u5668\u7684 minimize() \u65b9\u6cd5\u6765\u521b\u5efa\u8bad\u7ec3\u64cd\u4f5c\uff1b\u56e0\u4e3a\u6211\u4eec\u5c06 global_step \u53d8\u91cf\u4f20\u9012\u7ed9\u5b83\uff0c\u6240\u4ee5\u8bf7\u6ce8\u610f\u589e\u52a0\u5b83\u3002 \u5c31\u662f\u8fd9\u6837\uff01 \u7531\u4e8e AdaGrad\uff0cRMSProp \u548c Adam \u4f18\u5316\u81ea\u52a8\u964d\u4f4e\u4e86\u8bad\u7ec3\u671f\u95f4\u7684\u5b66\u4e60\u7387\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u6dfb\u52a0\u989d\u5916\u7684\u5b66\u4e60\u7387\u8c03\u6574\u3002 \u5bf9\u4e8e\u5176\u4ed6\u4f18\u5316\u7b97\u6cd5\uff0c\u4f7f\u7528\u6307\u6570\u8870\u51cf\u6216\u6027\u80fd\u8c03\u5ea6\u53ef\u663e\u8457\u52a0\u901f\u6536\u655b\u3002 \u5b8c\u6574\u4ee3\u7801: n_inputs = 28 * 28 # MNIST n_hidden1 = 300 n_hidden2 = 50 n_outputs = 10 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") logits = tf.layers.dense(hidden2, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32), name=\"accuracy\") with tf.name_scope(\"train\"): # not shown in the book initial_learning_rate = 0.1 decay_steps = 10000 decay_rate = 1/10 global_step = tf.Variable(0, trainable=False, name=\"global_step\") learning_rate = tf.train.exponential_decay(initial_learning_rate, global_step, decay_steps, decay_rate) optimizer = tf.train.MomentumOptimizer(learning_rate, momentum=0.9) training_op = optimizer.minimize(loss, global_step=global_step) init = tf.global_variables_initializer() saver = tf.train.Saver() n_epochs = 5 batch_size = 50 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) accuracy_val = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Test accuracy:\", accuracy_val) save_path = saver.save(sess, \"./my_model_final.ckpt\") \u901a\u8fc7\u6b63\u5219\u5316\u907f\u514d\u8fc7\u62df\u5408 \u6709\u56db\u4e2a\u53c2\u6570\uff0c\u6211\u53ef\u4ee5\u62df\u5408\u4e00\u4e2a\u5927\u8c61\uff0c\u4e94\u4e2a\u6211\u53ef\u4ee5\u8ba9\u4ed6\u6446\u52a8\u4ed6\u7684\u8c61\u9f3b\u3002 \u2014\u2014 John von Neumann,cited by Enrico Fermi in Nature 427 \u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u901a\u5e38\u5177\u6709\u6570\u4ee5\u4e07\u8ba1\u7684\u53c2\u6570\uff0c\u6709\u65f6\u751a\u81f3\u662f\u6570\u767e\u4e07\u3002 \u6709\u4e86\u8fd9\u4e48\u591a\u7684\u53c2\u6570\uff0c\u7f51\u7edc\u62e5\u6709\u96be\u4ee5\u7f6e\u4fe1\u7684\u81ea\u7531\u5ea6\uff0c\u53ef\u4ee5\u9002\u5e94\u5404\u79cd\u590d\u6742\u7684\u6570\u636e\u96c6\u3002 \u4f46\u662f\u8fd9\u4e2a\u5f88\u5927\u7684\u7075\u6d3b\u6027\u4e5f\u610f\u5473\u7740\u5b83\u5f88\u5bb9\u6613\u8fc7\u62df\u5408\u8bad\u7ec3\u96c6\u3002 \u6709\u4e86\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u9002\u5e94\u6574\u4e2a\u52a8\u7269\u56ed\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u795e\u7ecf\u7f51\u7edc\u6b63\u5219\u5316\u6280\u672f\uff0c\u4ee5\u53ca\u5982\u4f55\u7528 TensorFlow \u5b9e\u73b0\u5b83\u4eec\uff1a\u65e9\u671f\u505c\u6b62\uff0cl1 \u548c l2 \u6b63\u5219\u5316\uff0cdrop out\uff0c\u6700\u5927\u8303\u6570\u6b63\u5219\u5316\u548c\u6570\u636e\u589e\u5f3a\u3002 \u65e9\u671f\u505c\u6b62 \u4e3a\u907f\u514d\u8fc7\u5ea6\u62df\u5408\u8bad\u7ec3\u96c6\uff0c\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5c3d\u65e9\u505c\u6b62\u8bad\u7ec3\uff08\u5728\u7b2c 4 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff1a\u53ea\u8981\u5728\u8bad\u7ec3\u96c6\u7684\u6027\u80fd\u5f00\u59cb\u4e0b\u964d\u65f6\u4e2d\u65ad\u8bad\u7ec3\u3002 \u4e0e TensorFlow \u5b9e\u73b0\u65b9\u6cd5\u4e4b\u4e00\u662f\u8bc4\u4f30\u5176\u5bf9\u8bbe\u7f6e\u5b9a\u671f\uff08\u4f8b\u5982\uff0c\u6bcf 50 \u6b65\uff09\u9a8c\u8bc1\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u4e00\u4e2a\u201cwinner\u201d\u7684\u5feb\u7167\uff0c\u5982\u679c\u5b83\u4f18\u4e8e\u4ee5\u524d\u201cwinner\u201d\u7684\u5feb\u7167\u3002 \u8ba1\u7b97\u81ea\u4e0a\u6b21\u201cwinner\u201d\u5feb\u7167\u4fdd\u5b58\u4ee5\u6765\u7684\u6b65\u6570\uff0c\u5e76\u5728\u8fbe\u5230\u67d0\u4e2a\u9650\u5236\u65f6\uff08\u4f8b\u5982 2000 \u6b65\uff09\u4e2d\u65ad\u8bad\u7ec3\u3002 \u7136\u540e\u6062\u590d\u6700\u540e\u7684\u201cwinner\u201d\u5feb\u7167\u3002 \u867d\u7136\u65e9\u671f\u505c\u6b62\u5728\u5b9e\u8df5\u4e2d\u8fd0\u884c\u826f\u597d\uff0c\u4f46\u662f\u901a\u8fc7\u5c06\u5176\u4e0e\u5176\u4ed6\u6b63\u5219\u5316\u6280\u672f\u76f8\u7ed3\u5408\uff0c\u60a8\u901a\u5e38\u53ef\u4ee5\u5728\u7f51\u7edc\u4e2d\u83b7\u5f97\u66f4\u9ad8\u7684\u6027\u80fd\u3002 L1 \u548c L2 \u6b63\u5219\u5316 \u5c31\u50cf\u4f60\u5728\u7b2c 4 \u7ae0\u4e2d\u5bf9\u7b80\u5355\u7ebf\u6027\u6a21\u578b\u6240\u505a\u7684\u90a3\u6837\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 l1 \u548c l2 \u6b63\u5219\u5316\u7ea6\u675f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u8fde\u63a5\u6743\u91cd\uff08\u4f46\u901a\u5e38\u4e0d\u662f\u5b83\u7684\u504f\u7f6e\uff09\u3002 \u4f7f\u7528 TensorFlow \u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u7b80\u5355\u5730\u5c06\u9002\u5f53\u7684\u6b63\u5219\u5316\u9879\u6dfb\u52a0\u5230\u60a8\u7684\u635f\u5931\u51fd\u6570\u4e2d\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u53ea\u6709\u4e00\u4e2a\u6743\u91cd\u4e3a weights1 \u7684\u9690\u85cf\u5c42\u548c\u4e00\u4e2a\u6743\u91cd\u4e3a weight2 \u7684\u8f93\u51fa\u5c42\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u5e94\u7528 l1 \u6b63\u5219\u5316\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06\u6b63\u5219\u5316\u51fd\u6570\u4f20\u9012\u7ed9 tf.layers.dense() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u8ba1\u7b97\u6b63\u5219\u5316\u635f\u5931\u7684\u64cd\u4f5c\uff0c\u5e76\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u6dfb\u52a0\u5230\u6b63\u5219\u5316\u635f\u5931\u96c6\u5408\u4e2d\u3002 \u5f00\u59cb\u548c\u4e0a\u9762\u4e00\u6837\uff1a n_inputs = 28 * 28 # MNIST n_hidden1 = 300 n_hidden2 = 50 n_outputs = 10 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Python partial() \u51fd\u6570\u6765\u907f\u514d\u4e00\u904d\u53c8\u4e00\u904d\u5730\u91cd\u590d\u76f8\u540c\u7684\u53c2\u6570\u3002 \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u5185\u6838\u6b63\u5219\u5316\u53c2\u6570\uff08\u6b63\u5219\u5316\u51fd\u6570\u6709 l1_regularizer() \uff0c l2_regularizer() \uff0c l1_l2_regularizer() \uff09\uff1a scale = 0.001 my_dense_layer = partial( tf.layers.dense, activation=tf.nn.relu, kernel_regularizer=tf.contrib.layers.l1_regularizer(scale)) with tf.name_scope(\"dnn\"): hidden1 = my_dense_layer(X, n_hidden1, name=\"hidden1\") hidden2 = my_dense_layer(hidden1, n_hidden2, name=\"hidden2\") logits = my_dense_layer(hidden2, n_outputs, activation=None, name=\"outputs\") \u8be5\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u5177\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\u548c\u4e00\u4e2a\u8f93\u51fa\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4e14\u8fd8\u5728\u56fe\u4e2d\u521b\u5efa\u8282\u70b9\u4ee5\u8ba1\u7b97\u4e0e\u6bcf\u4e2a\u5c42\u7684\u6743\u91cd\u76f8\u5bf9\u5e94\u7684 l1 \u6b63\u5219\u5316\u635f\u5931\u3002TensorFlow \u4f1a\u81ea\u52a8\u5c06\u8fd9\u4e9b\u8282\u70b9\u6dfb\u52a0\u5230\u5305\u542b\u6240\u6709\u6b63\u5219\u5316\u635f\u5931\u7684\u7279\u6b8a\u96c6\u5408\u4e2d\u3002 \u60a8\u53ea\u9700\u8981\u5c06\u8fd9\u4e9b\u6b63\u5219\u5316\u635f\u5931\u6dfb\u52a0\u5230\u60a8\u7684\u6574\u4f53\u635f\u5931\u4e2d\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u6b63\u5219\u5316\u635f\u5931\u52a0\u5230\u57fa\u672c\u635f\u5931\u4e0a\uff1a with tf.name_scope(\"loss\"): # not shown in the book xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits( # not shown labels=y, logits=logits) # not shown base_loss = tf.reduce_mean(xentropy, name=\"avg_xentropy\") # not shown reg_losses = tf.get_collection(tf.GraphKeys.REGULARIZATION_LOSSES) loss = tf.add_n([base_loss] + reg_losses, name=\"loss\") \u5176\u4f59\u7684\u548c\u5f80\u5e38\u4e00\u6837\uff1a with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32), name=\"accuracy\") learning_rate = 0.01 with tf.name_scope(\"train\"): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) init = tf.global_variables_initializer() saver = tf.train.Saver() n_epochs = 20 batch_size = 200 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) accuracy_val = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Test accuracy:\", accuracy_val) save_path = saver.save(sess, \"./my_model_final.ckpt\") \u4e0d\u8981\u5fd8\u8bb0\u628a\u6b63\u5219\u5316\u7684\u635f\u5931\u52a0\u5728\u4f60\u7684\u6574\u4f53\u635f\u5931\u4e0a\uff0c\u5426\u5219\u5c31\u4f1a\u88ab\u5ffd\u7565\u3002 Dropout \u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6700\u6d41\u884c\u7684\u6b63\u5219\u5316\u6280\u672f\u53ef\u4ee5\u8bf4\u662f dropout\u3002 \u5b83\u7531 GE Hinton \u4e8e 2012 \u5e74\u63d0\u51fa\uff0c\u5e76\u5728 Nitish Srivastava \u7b49\u4eba\u7684\u8bba\u6587\u4e2d\u8fdb\u4e00\u6b65\u8be6\u7ec6\u63cf\u8ff0\uff0c\u5e76\u4e14\u5df2\u88ab\u8bc1\u660e\u662f\u975e\u5e38\u6210\u529f\u7684\uff1a\u5373\u4f7f\u662f\u6700\u5148\u8fdb\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u4ec5\u4ec5\u901a\u8fc7\u589e\u52a0\u4e22\u5931\u5c31\u53ef\u4ee5\u63d0\u9ad81-2\uff05\u7684\u51c6\u786e\u5ea6\u3002 \u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u4e0d\u662f\u5f88\u591a\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u6a21\u578b\u5df2\u7ecf\u5177\u6709 95% \u7684\u51c6\u786e\u7387\u65f6\uff0c\u83b7\u5f97 2% \u7684\u51c6\u786e\u5ea6\u63d0\u5347\u610f\u5473\u7740\u5c06\u8bef\u5dee\u7387\u964d\u4f4e\u8fd1 40%\uff08\u4ece 5% \u8bef\u5dee\u964d\u81f3\u5927\u7ea6 3%\uff09\u3002 \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u7b80\u5355\u7684\u7b97\u6cd5\uff1a\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e2d\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\uff08\u5305\u62ec\u8f93\u5165\u795e\u7ecf\u5143\uff0c\u4f46\u4e0d\u5305\u62ec\u8f93\u51fa\u795e\u7ecf\u5143\uff09\u90fd\u6709\u4e00\u4e2a\u6682\u65f6\u201c\u4e22\u5f03\u201d\u7684\u6982\u7387 p \uff0c\u8fd9\u610f\u5473\u7740\u5728\u8fd9\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e2d\u5b83\u5c06\u88ab\u5b8c\u5168\u5ffd\u7565\uff0c \u5728\u4e0b\u4e00\u6b65\u53ef\u80fd\u4f1a\u6fc0\u6d3b\uff08\u89c1\u56fe 11-9\uff09\u3002 \u8d85\u53c2\u6570 p \u79f0\u4e3a\u4e22\u5931\u7387\uff0c\u901a\u5e38\u8bbe\u4e3a 50%\u3002 \u8bad\u7ec3\u540e\uff0c\u795e\u7ecf\u5143\u4e0d\u4f1a\u518d\u4e0b\u964d\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\uff08\u9664\u4e86\u6211\u4eec\u5c06\u8981\u8ba8\u8bba\u7684\u6280\u672f\u7ec6\u8282\uff09\u3002 \u4e00\u5f00\u59cb\u8fd9\u4e2a\u6280\u672f\u662f\u76f8\u5f53\u7c97\u9c81\uff0c\u8fd9\u662f\u76f8\u5f53\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u5982\u679c\u4e00\u4e2a\u516c\u53f8\u7684\u5458\u5de5\u6bcf\u5929\u65e9\u4e0a\u88ab\u544a\u77e5\u8981\u63b7\u786c\u5e01\u6765\u51b3\u5b9a\u662f\u5426\u4e0a\u73ed\uff0c\u516c\u53f8\u7684\u8868\u73b0\u4f1a\u4e0d\u4f1a\u66f4\u597d\u5462\uff1f\u90a3\u4e48\uff0c\u8c01\u77e5\u9053\uff1b\u4e5f\u8bb8\u4f1a\uff01\u516c\u53f8\u663e\u7136\u5c06\u88ab\u8feb\u9002\u5e94\u8fd9\u6837\u7684\u7ec4\u7ec7\u6784\u67b6\uff1b\u5b83\u4e0d\u80fd\u4f9d\u9760\u4efb\u4f55\u4e00\u4e2a\u4eba\u586b\u5199\u5496\u5561\u673a\u6216\u6267\u884c\u4efb\u4f55\u5176\u4ed6\u5173\u952e\u4efb\u52a1\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e13\u4e1a\u77e5\u8bc6\u5c06\u4e0d\u5f97\u4e0d\u5206\u6563\u5728\u51e0\u4e2a\u4eba\u8eab\u4e0a\u3002\u5458\u5de5\u5fc5\u987b\u5b66\u4f1a\u4e0e\u5176\u4ed6\u7684\u8bb8\u591a\u540c\u4e8b\u5408\u4f5c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5176\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u8be5\u516c\u53f8\u5c06\u53d8\u5f97\u66f4\u6709\u5f39\u6027\u3002\u5982\u679c\u4e00\u4e2a\u4eba\u79bb\u5f00\u4e86\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u8fd9\u4e2a\u60f3\u6cd5\u662f\u5426\u771f\u7684\u53ef\u4ee5\u5728\u516c\u53f8\u5b9e\u884c\uff0c\u4f46\u5b83\u786e\u5b9e\u5bf9\u4e8e\u795e\u7ecf\u7f51\u7edc\u662f\u53ef\u4ee5\u7684\u3002\u795e\u7ecf\u5143\u88abdropout\u8bad\u7ec3\u4e0d\u80fd\u4e0e\u5176\u76f8\u90bb\u7684\u795e\u7ecf\u5143\u5171\u9002\u5e94\uff1b\u4ed6\u4eec\u5fc5\u987b\u5c3d\u53ef\u80fd\u8ba9\u81ea\u5df1\u53d8\u5f97\u6709\u7528\u3002\u4ed6\u4eec\u4e5f\u4e0d\u80fd\u8fc7\u5206\u4f9d\u8d56\u4e00\u4e9b\u8f93\u5165\u795e\u7ecf\u5143;\u4ed6\u4eec\u5fc5\u987b\u6ce8\u610f\u4ed6\u4eec\u7684\u6bcf\u4e2a\u8f93\u5165\u795e\u7ecf\u5143\u3002\u4ed6\u4eec\u6700\u7ec8\u5bf9\u8f93\u5165\u7684\u5fae\u5c0f\u53d8\u5316\u4f1a\u4e0d\u592a\u654f\u611f\u3002\u6700\u540e\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u7f51\u7edc\uff0c\u66f4\u597d\u5730\u63a8\u5e7f\u3002 \u4e86\u89e3 dropout \u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8ba4\u8bc6\u5230\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u72ec\u7279\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u7531\u4e8e\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ef\u4ee5\u5b58\u5728\u6216\u4e0d\u5b58\u5728\uff0c\u603b\u5171\u6709 2 ^ N \u4e2a\u53ef\u80fd\u7684\u7f51\u7edc\uff08\u5176\u4e2d N \u662f\u53ef\u4e22\u5f03\u795e\u7ecf\u5143\u7684\u603b\u6570\uff09\u3002 \u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6570\u5b57\uff0c\u5b9e\u9645\u4e0a\u4e0d\u53ef\u80fd\u5bf9\u540c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4e24\u6b21\u91c7\u6837\u3002 \u4e00\u65e6\u4f60\u8fd0\u884c\u4e86 10,000 \u4e2a\u8bad\u7ec3\u6b65\u9aa4\uff0c\u4f60\u57fa\u672c\u4e0a\u5df2\u7ecf\u8bad\u7ec3\u4e86 10,000 \u4e2a\u4e0d\u540c\u7684\u795e\u7ecf\u7f51\u7edc\uff08\u6bcf\u4e2a\u795e\u7ecf\u7f51\u7edc\u53ea\u6709\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff09\u3002 \u8fd9\u4e9b\u795e\u7ecf\u7f51\u7edc\u663e\u7136\u4e0d\u662f\u72ec\u7acb\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5171\u4eab\u8bb8\u591a\u6743\u91cd\uff0c\u4f46\u662f\u5b83\u4eec\u90fd\u662f\u4e0d\u540c\u7684\u3002 \u7531\u6b64\u4ea7\u751f\u7684\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u770b\u4f5c\u662f\u6240\u6709\u8fd9\u4e9b\u8f83\u5c0f\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u5e73\u5747\u96c6\u6210\u3002 \u6709\u4e00\u4e2a\u5c0f\u800c\u91cd\u8981\u7684\u6280\u672f\u7ec6\u8282\u3002 \u5047\u8bbe p = 50% \uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u6d4b\u8bd5\u671f\u95f4\uff0c\u5728\u8bad\u7ec3\u671f\u95f4\u795e\u7ecf\u5143\u5c06\u88ab\u8fde\u63a5\u5230\u4e24\u500d\u4e8e\uff08\u5e73\u5747\uff09\u7684\u8f93\u5165\u795e\u7ecf\u5143\u3002 \u4e3a\u4e86\u5f25\u8865\u8fd9\u4e2a\u4e8b\u5b9e\uff0c\u6211\u4eec\u9700\u8981\u5728\u8bad\u7ec3\u4e4b\u540e\u5c06\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u5165\u8fde\u63a5\u6743\u91cd\u4e58\u4ee5 0.5\u3002 \u5982\u679c\u6211\u4eec\u4e0d\u8fd9\u6837\u505a\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u603b\u8f93\u5165\u4fe1\u53f7\u5927\u6982\u662f\u7f51\u7edc\u8bad\u7ec3\u7684\u4e24\u500d\uff0c\u8fd9\u4e0d\u592a\u53ef\u80fd\u8868\u73b0\u826f\u597d\u3002 \u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e2a\u8f93\u5165\u8fde\u63a5\u6743\u91cd\u4e58\u4ee5\u8bad\u7ec3\u540e\u7684\u4fdd\u6301\u6982\u7387\uff08 1-p \uff09\u3002 \u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5c06\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u9664\u4ee5\u4fdd\u6301\u6982\u7387\uff08\u8fd9\u4e9b\u66ff\u4ee3\u65b9\u6848\u5e76\u4e0d\u5b8c\u5168\u7b49\u4ef7\uff0c\u4f46\u5b83\u4eec\u5de5\u4f5c\u5f97\u540c\u6837\u597d\uff09\u3002 \u8981\u4f7f\u7528 TensorFlow \u5b9e\u73b0dropout\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5c06 dropout() \u51fd\u6570\u5e94\u7528\u4e8e\u8f93\u5165\u5c42\u548c\u6bcf\u4e2a\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u3002 \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e2a\u529f\u80fd\u968f\u673a\u4e22\u5f03\u4e00\u4e9b\u8282\u70b9\uff08\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a 0\uff09\uff0c\u5e76\u7528\u4fdd\u7559\u6982\u7387\u6765\u5212\u5206\u5269\u4f59\u9879\u76ee\u3002 \u8bad\u7ec3\u7ed3\u675f\u540e\uff0c\u8fd9\u4e2a\u51fd\u6570\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c06dropout\u6b63\u5219\u5316\u5e94\u7528\u4e8e\u6211\u4eec\u7684\u4e09\u5c42\u795e\u7ecf\u7f51\u7edc\uff1a \u6ce8\u610f\uff1a\u672c\u4e66\u4f7f\u7528 tf.contrib.layers.dropout() \u800c\u4e0d\u662f tf.layers.dropout() \uff08\u672c\u7ae0\u5199\u4f5c\u65f6\u4e0d\u5b58\u5728\uff09\u3002 \u73b0\u5728\u6700\u597d\u4f7f\u7528 tf.layers.dropout() \uff0c\u56e0\u4e3a contrib \u6a21\u5757\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u53ef\u80fd\u4f1a\u6539\u53d8\u6216\u88ab\u5220\u9664\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002 tf.layers.dropout() \u51fd\u6570\u51e0\u4e4e\u4e0e tf.contrib.layers.dropout() \u51fd\u6570\u76f8\u540c\uff0c\u53ea\u662f\u6709\u4e00\u4e9b\u7ec6\u5fae\u5dee\u522b\u3002 \u6700\u91cd\u8981\u7684\u662f\uff1a \u60a8\u5fc5\u987b\u6307\u5b9a\u4e22\u5931\u7387\uff08\u7387\uff09\u800c\u4e0d\u662f\u4fdd\u6301\u6982\u7387\uff08 keep_prob \uff09\uff0c\u5176\u4e2d rate \u7b80\u5355\u5730\u7b49\u4e8e 1 - keep_prob is_training \u53c2\u6570\u88ab\u91cd\u547d\u540d\u4e3a training \u3002 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") training = tf.placeholder_with_default(False, shape=(), name='training') dropout_rate = 0.5 # == 1 - keep_prob X_drop = tf.layers.dropout(X, dropout_rate, training=training) with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X_drop, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") hidden1_drop = tf.layers.dropout(hidden1, dropout_rate, training=training) hidden2 = tf.layers.dense(hidden1_drop, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") hidden2_drop = tf.layers.dropout(hidden2, dropout_rate, training=training) logits = tf.layers.dense(hidden2_drop, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"train\"): optimizer = tf.train.MomentumOptimizer(learning_rate, momentum=0.9) training_op = optimizer.minimize(loss) with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) init = tf.global_variables_initializer() saver = tf.train.Saver() n_epochs = 20 batch_size = 50 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={training: True, X: X_batch, y: y_batch}) acc_test = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Test accuracy:\", acc_test) save_path = saver.save(sess, \"./my_model_final.ckpt\") \u4f60\u60f3\u5728 tensorflow.contrib.layers \u4e2d\u4f7f\u7528 dropout() \u51fd\u6570\uff0c\u800c\u4e0d\u662f tensorflow.nn \u4e2d\u7684\u90a3\u4e2a\u3002 \u7b2c\u4e00\u4e2a\u5728\u4e0d\u8bad\u7ec3\u7684\u65f6\u5019\u5173\u6389\uff08\u6ca1\u6709\u64cd\u4f5c\uff09\uff0c\u8fd9\u662f\u4f60\u60f3\u8981\u7684\uff0c\u800c\u7b2c\u4e8c\u4e2a\u4e0d\u662f\u3002 \u5982\u679c\u89c2\u5bdf\u5230\u6a21\u578b\u8fc7\u62df\u5408\uff0c\u5219\u53ef\u4ee5\u589e\u52a0 dropout \u7387\uff08\u5373\uff0c\u51cf\u5c11 keep_prob \u8d85\u53c2\u6570\uff09\u3002 \u76f8\u53cd\uff0c\u5982\u679c\u6a21\u578b\u6b20\u62df\u5408\u8bad\u7ec3\u96c6\uff0c\u5219\u5e94\u5c1d\u8bd5\u964d\u4f4e dropout \u7387\uff08\u5373\u589e\u52a0 keep_prob \uff09\u3002 \u5b83\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u589e\u52a0\u5927\u5c42\u7684 dropout \u7387\uff0c\u5e76\u51cf\u5c11\u5c0f\u5c42\u7684 dropout \u7387\u3002 dropout \u4f3c\u4e4e\u51cf\u7f13\u4e86\u6536\u655b\u901f\u5ea6\uff0c\u4f46\u901a\u5e38\u4f1a\u5728\u8c03\u6574\u5f97\u5f53\u65f6\u4f7f\u6a21\u578b\u66f4\u597d\u3002 \u6240\u4ee5\uff0c\u8fd9\u901a\u5e38\u503c\u5f97\u82b1\u8d39\u989d\u5916\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u3002 Dropconnect\u662fdropout\u7684\u53d8\u4f53\uff0c\u5176\u4e2d\u5355\u4e2a\u8fde\u63a5\u968f\u673a\u4e22\u5f03\u800c\u4e0d\u662f\u6574\u4e2a\u795e\u7ecf\u5143\u3002 \u4e00\u822c\u800c\u8a00\uff0cdropout\u8868\u73b0\u4f1a\u66f4\u597d\u3002 \u6700\u5927\u8303\u6570\u6b63\u5219\u5316 \u53e6\u4e00\u79cd\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u975e\u5e38\u6d41\u884c\u7684\u6b63\u5219\u5316\u6280\u672f\u88ab\u79f0\u4e3a\u6700\u5927\u8303\u6570\u6b63\u5219\u5316\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u5b83\u7ea6\u675f\u8f93\u5165\u8fde\u63a5\u7684\u6743\u91cd w \uff0c\u4f7f\u5f97 \uff0c\u5176\u4e2d r \u662f\u6700\u5927\u8303\u6570\u8d85\u53c2\u6570\uff0c \u662f l2 \u8303\u6570\u3002 \u6211\u4eec\u901a\u5e38\u901a\u8fc7\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e4b\u540e\u8ba1\u7b97 \u6765\u5b9e\u73b0\u8fd9\u4e2a\u7ea6\u675f\uff0c\u5e76\u4e14\u5982\u679c\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u526a\u5207 W \u3002 \u51cf\u5c11 r \u589e\u52a0\u4e86\u6b63\u5219\u5316\u7684\u6570\u91cf\uff0c\u5e76\u6709\u52a9\u4e8e\u51cf\u5c11\u8fc7\u62df\u5408\u3002 \u6700\u5927\u8303\u6570\u6b63\u5219\u5316\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u51cf\u8f7b\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898\uff08\u5982\u679c\u60a8\u4e0d\u4f7f\u7528\u6279\u91cf\u6807\u51c6\u5316\uff09\u3002 \u8ba9\u6211\u4eec\u56de\u5230 MNIST \u7684\u7b80\u5355\u800c\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u53ea\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\uff1a n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 50 n_outputs = 10 learning_rate = 0.01 momentum = 0.9 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") logits = tf.layers.dense(hidden2, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"train\"): optimizer = tf.train.MomentumOptimizer(learning_rate, momentum) training_op = optimizer.minimize(loss) with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6765\u5904\u7406\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u7684\u6743\u91cd\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u64cd\u4f5c\uff0c\u4f7f\u7528 clip_by_norm() \u51fd\u6570\u8ba1\u7b97\u526a\u5207\u540e\u7684\u6743\u91cd\u3002 \u7136\u540e\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8d4b\u503c\u64cd\u4f5c\u6765\u5c06\u6743\u503c\u8d4b\u7ed9\u6743\u503c\u53d8\u91cf\uff1a threshold = 1.0 weights = tf.get_default_graph().get_tensor_by_name(\"hidden1/kernel:0\") clipped_weights = tf.clip_by_norm(weights, clip_norm=threshold, axes=1) clip_weights = tf.assign(weights, clipped_weights) \u6211\u4eec\u4e5f\u53ef\u4ee5\u4e3a\u7b2c\u4e8c\u4e2a\u9690\u85cf\u5c42\u505a\u5230\u8fd9\u4e00\u70b9\uff1a weights2 = tf.get_default_graph().get_tensor_by_name(\"hidden2/kernel:0\") clipped_weights2 = tf.clip_by_norm(weights2, clip_norm=threshold, axes=1) clip_weights2 = tf.assign(weights2, clipped_weights2) \u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u521d\u59cb\u5316\u5668\u548c\u4e00\u4e2a\u4fdd\u5b58\u5668\uff1a init = tf.global_variables_initializer() saver = tf.train.Saver() \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8bad\u7ec3\u6a21\u578b\u3002 \u4e0e\u5f80\u5e38\u4e00\u6837\uff0c\u9664\u4e86\u5728\u8fd0\u884c training_op \u4e4b\u540e\uff0c\u6211\u4eec\u8fd0\u884c clip_weights \u548c clip_weights2 \u64cd\u4f5c\uff1a n_epochs = 20 batch_size = 50 with tf.Session() as sess: # not shown in the book init.run() # not shown for epoch in range(n_epochs): # not shown for iteration in range(mnist.train.num_examples // batch_size): # not shown X_batch, y_batch = mnist.train.next_batch(batch_size) # not shown sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) clip_weights.eval() clip_weights2.eval() # not shown acc_test = accuracy.eval(feed_dict={X: mnist.test.images, # not shown y: mnist.test.labels}) # not shown print(epoch, \"Test accuracy:\", acc_test) # not shown save_path = saver.save(sess, \"./my_model_final.ckpt\") # not shown \u4e0a\u9762\u7684\u5b9e\u73b0\u5f88\u7b80\u5355\uff0c\u5de5\u4f5c\u6b63\u5e38\uff0c\u4f46\u6709\u70b9\u9ebb\u70e6\u3002 \u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e00\u4e2a max_norm_regularizer() \u51fd\u6570\uff1a def max_norm_regularizer(threshold, axes=1, name=\"max_norm\", collection=\"max_norm\"): def max_norm(weights): clipped = tf.clip_by_norm(weights, clip_norm=threshold, axes=axes) clip_weights = tf.assign(weights, clipped, name=name) tf.add_to_collection(collection, clip_weights) return None # there is no regularization loss term return max_norm \u7136\u540e\u4f60\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u5f97\u5230\u4e00\u4e2a\u6700\u5927\u8303\u6570\u8c03\u8282\u5668\uff08\u4e0e\u4f60\u60f3\u8981\u7684\u9608\u503c\uff09\u3002 \u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u9690\u85cf\u5c42\u65f6\uff0c\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u6b63\u5219\u5316\u5668\u4f20\u9012\u7ed9 kernel_regularizer \u53c2\u6570\uff1a n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 50 n_outputs = 10 learning_rate = 0.01 momentum = 0.9 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") max_norm_reg = max_norm_regularizer(threshold=1.0) with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, kernel_regularizer=max_norm_reg, name=\"hidden1\") hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, kernel_regularizer=max_norm_reg, name=\"hidden2\") logits = tf.layers.dense(hidden2, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"train\"): optimizer = tf.train.MomentumOptimizer(learning_rate, momentum) training_op = optimizer.minimize(loss) with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) init = tf.global_variables_initializer() saver = tf.train.Saver() \u8bad\u7ec3\u4e0e\u5f80\u5e38\u4e00\u6837\uff0c\u9664\u4e86\u6bcf\u6b21\u8bad\u7ec3\u540e\u5fc5\u987b\u8fd0\u884c\u91cd\u91cf\u88c1\u526a\u64cd\u4f5c\uff1a \u8bf7\u6ce8\u610f\uff0c\u6700\u5927\u8303\u6570\u6b63\u5219\u5316\u4e0d\u9700\u8981\u5728\u6574\u4f53\u635f\u5931\u51fd\u6570\u4e2d\u6dfb\u52a0\u6b63\u5219\u5316\u635f\u5931\u9879\uff0c\u6240\u4ee5 max_norm() \u51fd\u6570\u8fd4\u56de None \u3002 \u4f46\u662f\uff0c\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e4b\u540e\uff0c\u4ecd\u9700\u8981\u8fd0\u884c clip_weights \u64cd\u4f5c\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u80fd\u591f\u638c\u63e1\u5b83\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 max_norm() \u51fd\u6570\u5c06 clip_weights \u8282\u70b9\u6dfb\u52a0\u5230\u6700\u5927\u8303\u6570\u526a\u88c1\u64cd\u4f5c\u7684\u96c6\u5408\u4e2d\u7684\u539f\u56e0\u3002\u60a8\u9700\u8981\u83b7\u53d6\u8fd9\u4e9b\u88c1\u526a\u64cd\u4f5c\u5e76\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u540e\u8fd0\u884c\u5b83\u4eec\uff1a n_epochs = 20 batch_size = 50 clip_all_weights = tf.get_collection(\"max_norm\") with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) sess.run(clip_all_weights) acc_test = accuracy.eval(feed_dict={X: mnist.test.images, # not shown in the book y: mnist.test.labels}) # not shown print(epoch, \"Test accuracy:\", acc_test) # not shown save_path = saver.save(sess, \"./my_model_final.ckpt\") # not shown \u6570\u636e\u589e\u5f3a \u6700\u540e\u4e00\u4e2a\u6b63\u5219\u5316\u6280\u672f\uff0c\u6570\u636e\u589e\u5f3a\uff0c\u5305\u62ec\u4ece\u73b0\u6709\u7684\u8bad\u7ec3\u5b9e\u4f8b\u4e2d\u4ea7\u751f\u65b0\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u4eba\u4e3a\u5730\u589e\u52a0\u4e86\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u3002 \u8fd9\u5c06\u51cf\u5c11\u8fc7\u62df\u5408\uff0c\u4f7f\u4e4b\u6210\u4e3a\u6b63\u5219\u5316\u6280\u672f\u3002 \u8bc0\u7a8d\u662f\u751f\u6210\u903c\u771f\u7684\u8bad\u7ec3\u5b9e\u4f8b; \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u4eba\u4e0d\u5e94\u8be5\u80fd\u591f\u5206\u8fa8\u51fa\u54ea\u4e9b\u662f\u751f\u6210\u7684\uff0c\u54ea\u4e9b\u4e0d\u662f\u751f\u6210\u7684\u3002 \u800c\u4e14\uff0c\u7b80\u5355\u5730\u52a0\u767d\u566a\u58f0\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\u3002 \u4f60\u5e94\u7528\u7684\u4fee\u6539\u5e94\u8be5\u662f\u53ef\u4ee5\u5b66\u4e60\u7684\uff08\u767d\u566a\u58f0\u4e0d\u662f\uff09\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u6a21\u578b\u662f\u4e3a\u4e86\u5206\u7c7b\u8611\u83c7\u56fe\u7247\uff0c\u60a8\u53ef\u4ee5\u7a0d\u5fae\u79fb\u52a8\uff0c\u65cb\u8f6c\u548c\u8c03\u6574\u8bad\u7ec3\u96c6\u4e2d\u7684\u6bcf\u4e2a\u56fe\u7247\u7684\u5927\u5c0f\uff0c\u5e76\u5c06\u7ed3\u679c\u56fe\u7247\u6dfb\u52a0\u5230\u8bad\u7ec3\u96c6\uff08\u89c1\u56fe 11-10\uff09\u3002 \u8fd9\u8feb\u4f7f\u6a21\u578b\u66f4\u80fd\u5bb9\u5fcd\u56fe\u7247\u4e2d\u8611\u83c7\u7684\u4f4d\u7f6e\uff0c\u65b9\u5411\u548c\u5927\u5c0f\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u6a21\u578b\u5bf9\u5149\u7167\u6761\u4ef6\u66f4\u52a0\u5bbd\u5bb9\uff0c\u5219\u53ef\u4ee5\u7c7b\u4f3c\u5730\u751f\u6210\u5177\u6709\u5404\u79cd\u5bf9\u6bd4\u5ea6\u7684\u8bb8\u591a\u56fe\u50cf\u3002 \u5047\u8bbe\u8611\u83c7\u662f\u5bf9\u79f0\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6c34\u5e73\u7ffb\u8f6c\u56fe\u7247\u3002 \u901a\u8fc7\u7ed3\u5408\u8fd9\u4e9b\u8f6c\u6362\uff0c\u53ef\u4ee5\u5927\u5927\u589e\u52a0\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u3002 \u901a\u5e38\u6700\u597d\u5728\u8bad\u7ec3\u671f\u95f4\u751f\u6210\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\u548c\u7f51\u7edc\u5e26\u5bbd\u3002TensorFlow \u63d0\u4f9b\u4e86\u591a\u79cd\u56fe\u50cf\u5904\u7406\u64cd\u4f5c\uff0c\u4f8b\u5982\u8f6c\u7f6e\uff08\u79fb\u4f4d\uff09\uff0c\u65cb\u8f6c\uff0c\u8c03\u6574\u5927\u5c0f\uff0c\u7ffb\u8f6c\u548c\u88c1\u526a\uff0c\u4ee5\u53ca\u8c03\u6574\u4eae\u5ea6\uff0c\u5bf9\u6bd4\u5ea6\uff0c\u9971\u548c\u5ea6\u548c\u8272\u8c03\uff08\u8bf7\u53c2\u9605 API \u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff09\u3002 \u8fd9\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e3a\u56fe\u50cf\u6570\u636e\u96c6\u5b9e\u73b0\u6570\u636e\u589e\u5f3a\u3002 \u8bad\u7ec3\u975e\u5e38\u6df1\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u53e6\u4e00\u4e2a\u5f3a\u5927\u7684\u6280\u672f\u662f\u6dfb\u52a0\u8df3\u8fc7\u8fde\u63a5\uff08\u8df3\u8fc7\u8fde\u63a5\u662f\u5c06\u5c42\u7684\u8f93\u5165\u6dfb\u52a0\u5230\u66f4\u9ad8\u5c42\u7684\u8f93\u51fa\u65f6\uff09\u3002 \u6211\u4eec\u5c06\u5728\u7b2c 13 \u7ae0\u4e2d\u8c08\u8bba\u6df1\u5ea6\u6b8b\u5dee\u7f51\u7edc\u65f6\u63a2\u8ba8\u8fd9\u4e2a\u60f3\u6cd5\u3002 \u5b9e\u8df5\u6307\u5357 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u6db5\u76d6\u4e86\u5f88\u591a\u6280\u672f\uff0c\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u5e94\u8be5\u4f7f\u7528\u54ea\u4e9b\u6280\u672f\u3002 \u8868 11-2 \u4e2d\u7684\u914d\u7f6e\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 \u5f53\u7136\uff0c\u5982\u679c\u4f60\u80fd\u627e\u5230\u89e3\u51b3\u7c7b\u4f3c\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u4f60\u5e94\u8be5\u5c1d\u8bd5\u91cd\u7528\u9884\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u90e8\u5206\u3002 \u8fd9\u4e2a\u9ed8\u8ba4\u914d\u7f6e\u53ef\u80fd\u9700\u8981\u8c03\u6574\uff1a \u5982\u679c\u4f60\u627e\u4e0d\u5230\u4e00\u4e2a\u597d\u7684\u5b66\u4e60\u7387\uff08\u6536\u655b\u901f\u5ea6\u592a\u6162\uff0c\u6240\u4ee5\u4f60\u589e\u52a0\u4e86\u8bad\u7ec3\u901f\u5ea6\uff0c\u73b0\u5728\u6536\u655b\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u662f\u7f51\u7edc\u7684\u51c6\u786e\u6027\u4e0d\u662f\u6700\u7406\u60f3\u7684\uff09\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u6dfb\u52a0\u4e00\u4e2a\u5b66\u4e60\u7387\u8c03\u6574\uff0c\u5982\u6307\u6570\u8870\u51cf\u3002 \u5982\u679c\u4f60\u7684\u8bad\u7ec3\u96c6\u592a\u5c0f\uff0c\u4f60\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u589e\u5f3a\u3002 \u5982\u679c\u4f60\u9700\u8981\u4e00\u4e2a\u7a00\u758f\u7684\u6a21\u578b\uff0c\u4f60\u53ef\u4ee5\u6dfb\u52a0 l1 \u6b63\u5219\u5316\u6df7\u5408\uff08\u5e76\u53ef\u4ee5\u9009\u62e9\u5728\u8bad\u7ec3\u540e\u5c06\u5fae\u5c0f\u7684\u6743\u91cd\u5f52\u96f6\uff09\u3002 \u5982\u679c\u60a8\u9700\u8981\u66f4\u7a00\u758f\u7684\u6a21\u578b\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 FTRL \u800c\u4e0d\u662f Adam \u4f18\u5316\u4ee5\u53ca l1 \u6b63\u5219\u5316\u3002 \u5982\u679c\u5728\u8fd0\u884c\u65f6\u9700\u8981\u5feb\u901f\u6a21\u578b\uff0c\u5219\u53ef\u80fd\u9700\u8981\u5220\u9664\u6279\u91cf\u6807\u51c6\u5316\uff0c\u5e76\u53ef\u80fd\u7528 leakyReLU \u66ff\u6362 ELU \u6fc0\u6d3b\u51fd\u6570\u3002 \u6709\u4e00\u4e2a\u7a00\u758f\u7684\u6a21\u578b\u4e5f\u5c06\u6709\u6240\u5e2e\u52a9\u3002 \u6709\u4e86\u8fd9\u4e9b\u6307\u5bfc\u65b9\u9488\uff0c\u4f60\u73b0\u5728\u5df2\u7ecf\u51c6\u5907\u597d\u8bad\u7ec3\u975e\u5e38\u6df1\u7684\u7f51\u7edc - \u597d\u5427\uff0c\u5982\u679c\u4f60\u975e\u5e38\u6709\u8010\u5fc3\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\uff01 \u5982\u679c\u4f7f\u7528\u5355\u53f0\u673a\u5668\uff0c\u5219\u53ef\u80fd\u9700\u8981\u7b49\u5f85\u51e0\u5929\u751a\u81f3\u51e0\u4e2a\u6708\u624d\u80fd\u5b8c\u6210\u8bad\u7ec3\u3002 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528\u5206\u5e03\u5f0f TensorFlow \u5728\u8bb8\u591a\u670d\u52a1\u5668\u548c GPU \u4e0a\u8bad\u7ec3\u548c\u8fd0\u884c\u6a21\u578b\u3002 \u7ec3\u4e60 \u4f7f\u7528 He \u521d\u59cb\u5316\u968f\u673a\u9009\u62e9\u6743\u91cd\uff0c\u662f\u5426\u53ef\u4ee5\u5c06\u6240\u6709\u6743\u91cd\u521d\u59cb\u5316\u4e3a\u76f8\u540c\u7684\u503c\uff1f \u53ef\u4ee5\u5c06\u504f\u7f6e\u521d\u59cb\u5316\u4e3a 0 \u5417\uff1f \u8bf4\u51fa ELU \u6fc0\u6d3b\u529f\u80fd\u4e0e ReLU \u76f8\u6bd4\u7684\u4e09\u4e2a\u4f18\u70b9\u3002 \u5728\u54ea\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u60f3\u8981\u4f7f\u7528\u4ee5\u4e0b\u6bcf\u4e2a\u6fc0\u6d3b\u51fd\u6570\uff1aELU\uff0cleaky ReLU\uff08\u53ca\u5176\u53d8\u4f53\uff09\uff0cReLU\uff0ctanh\uff0clogistic \u4ee5\u53ca softmax\uff1f \u4f7f\u7528 MomentumOptimizer \u65f6\uff0c\u5982\u679c\u5c06 momentum \u8d85\u53c2\u6570\u8bbe\u7f6e\u5f97\u592a\u63a5\u8fd1 1\uff08\u4f8b\u5982\uff0c0.99999\uff09\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f \u8bf7\u5217\u4e3e\u60a8\u53ef\u4ee5\u751f\u6210\u7a00\u758f\u6a21\u578b\u7684\u4e09\u79cd\u65b9\u6cd5\u3002 dropout \u662f\u5426\u4f1a\u51cf\u6162\u8bad\u7ec3\uff1f \u5b83\u662f\u5426\u4f1a\u51cf\u6162\u63a8\u65ad\uff08\u5373\u9884\u6d4b\u65b0\u7684\u5b9e\u4f8b\uff09\uff1f \u6df1\u5ea6\u5b66\u4e60\u3002 \u5efa\u7acb\u4e00\u4e2a DNN\uff0c\u6709\u4e94\u4e2a\u9690\u85cf\u5c42\uff0c\u6bcf\u5c42 100 \u4e2a\u795e\u7ecf\u5143\uff0c\u4f7f\u7528 He \u521d\u59cb\u5316\u548c ELU \u6fc0\u6d3b\u51fd\u6570\u3002 \u4f7f\u7528 Adam \u4f18\u5316\u548c\u63d0\u524d\u505c\u6b62\uff0c\u8bf7\u5c1d\u8bd5\u5728 MNIST \u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u4f46\u53ea\u80fd\u4f7f\u7528\u6570\u5b57 0 \u5230 4\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u4e2a\u7ec3\u4e60\u4e2d\u5728\u6570\u5b57 5 \u5230 9 \u4e0a\u8fdb\u884c\u8fc1\u79fb\u5b66\u4e60\u3002 \u60a8\u9700\u8981\u4e00\u4e2a\u5305\u542b\u4e94\u4e2a\u795e\u7ecf\u5143\u7684 softmax \u8f93\u51fa\u5c42\uff0c\u5e76\u4e14\u4e00\u5982\u65e2\u5f80\u5730\u786e\u4fdd\u5b9a\u671f\u4fdd\u5b58\u68c0\u67e5\u70b9\uff0c\u5e76\u4fdd\u5b58\u6700\u7ec8\u6a21\u578b\uff0c\u4ee5\u4fbf\u7a0d\u540e\u518d\u4f7f\u7528\u5b83\u3002 \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u8c03\u6574\u8d85\u53c2\u6570\uff0c\u5e76\u67e5\u770b\u4f60\u80fd\u8fbe\u5230\u4ec0\u4e48\u51c6\u786e\u5ea6\u3002 \u73b0\u5728\u5c1d\u8bd5\u6dfb\u52a0\u6279\u91cf\u6807\u51c6\u5316\u5e76\u6bd4\u8f83\u5b66\u4e60\u66f2\u7ebf\uff1a\u5b83\u662f\u5426\u6bd4\u4ee5\u524d\u6536\u655b\u5f97\u66f4\u5feb\uff1f \u5b83\u662f\u5426\u4f1a\u4ea7\u751f\u66f4\u597d\u7684\u6a21\u578b\uff1f \u6a21\u578b\u662f\u5426\u8fc7\u62df\u5408\u8bad\u7ec3\u96c6\uff1f \u5c1d\u8bd5\u5c06 dropout \u6dfb\u52a0\u5230\u6bcf\u4e00\u5c42\uff0c\u7136\u540e\u91cd\u8bd5\u3002 \u5b83\u6709\u5e2e\u52a9\u5417\uff1f \u8fc1\u79fb\u5b66\u4e60\u3002 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 DNN\uff0c\u5b83\u590d\u5236\u5148\u524d\u6a21\u578b\u7684\u6240\u6709\u9884\u8bad\u7ec3\u7684\u9690\u85cf\u5c42\uff0c\u51bb\u7ed3\u5b83\u4eec\uff0c\u5e76\u7528\u65b0\u7684\u4e00\u5c42\u66ff\u6362 softmax \u8f93\u51fa\u5c42\u3002 \u5728\u6570\u5b57 5 \u5230 9 \u8bad\u7ec3\u8fd9\u4e2a\u65b0\u7684 DNN \uff0c\u6bcf\u4e2a\u6570\u5b57\u53ea\u4f7f\u7528 100 \u4e2a\u56fe\u50cf\uff0c\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1f \u5c3d\u7ba1\u6837\u672c\u8fd9\u4e48\u5c11\uff0c\u4f60\u80fd\u8fbe\u5230\u9ad8\u51c6\u786e\u5ea6\u5417\uff1f \u5c1d\u8bd5\u7f13\u5b58\u51bb\u7ed3\u7684\u5c42\uff0c\u5e76\u518d\u6b21\u8bad\u7ec3\u6a21\u578b\uff1a\u73b0\u5728\u901f\u5ea6\u6709\u591a\u5feb\uff1f \u518d\u6b21\u5c1d\u8bd5\u590d\u7528\u56db\u4e2a\u9690\u85cf\u5c42\u800c\u4e0d\u662f\u4e94\u4e2a\u3002 \u4f60\u80fd\u8fbe\u5230\u66f4\u9ad8\u7684\u51c6\u786e\u5ea6\u5417\uff1f \u73b0\u5728\uff0c\u89e3\u51bb\u524d\u4e24\u4e2a\u9690\u85cf\u5c42\u5e76\u7ee7\u7eed\u8bad\u7ec3\uff1a\u60a8\u53ef\u4ee5\u8ba9\u6a21\u578b\u8868\u73b0\u5f97\u66f4\u597d\u5417\uff1f \u8f85\u52a9\u4efb\u52a1\u7684\u9884\u8bad\u7ec3\u3002 \u5728\u672c\u7ec3\u4e60\u4e2d\uff0c\u4f60\u5c06\u6784\u5efa\u4e00\u4e2a DNN\uff0c\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a MNIST \u6570\u5b57\u56fe\u50cf\uff0c\u5e76\u9884\u6d4b\u5b83\u4eec\u662f\u5426\u4ee3\u8868\u76f8\u540c\u7684\u6570\u5b57\u3002 \u7136\u540e\uff0c\u4f60\u5c06\u590d\u7528\u8be5\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\uff0c\u6765\u4f7f\u7528\u975e\u5e38\u5c11\u7684\u8bad\u7ec3\u6570\u636e\u6765\u8bad\u7ec3 MNIST \u5206\u7c7b\u5668\u3002 \u9996\u5148\u6784\u5efa\u4e24\u4e2a DNN\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a DNN A \u548c B\uff09\uff0c\u5b83\u4eec\u4e0e\u4e4b\u524d\u6784\u5efa\u7684 DNN \u7c7b\u4f3c\uff0c\u4f46\u6ca1\u6709\u8f93\u51fa\u5c42\uff1a\u6bcf\u4e2a DNN \u5e94\u8be5\u6709\u4e94\u4e2a\u9690\u85cf\u5c42\uff0c\u6bcf\u4e2a\u5c42\u5305\u542b 100 \u4e2a\u795e\u7ecf\u5143\uff0c\u4f7f\u7528 He \u521d\u59cb\u5316\u548c ELU \u6fc0\u6d3b\u51fd\u6570\u3002 \u63a5\u4e0b\u6765\uff0c\u5728\u4e24\u4e2a DNN \u4e0a\u6dfb\u52a0\u4e00\u4e2a\u8f93\u51fa\u5c42\u3002 \u4f60\u5e94\u8be5\u4f7f\u7528 TensorFlow \u7684 concat()\u51fd\u6570\u548c axis = 1`\uff0c\u5c06\u4e24\u4e2a DNN \u7684\u8f93\u51fa\u6cbf\u7740\u6a2a\u8f74\u8fde\u63a5\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u5230\u8f93\u51fa\u5c42\u3002 \u8f93\u51fa\u5c42\u5e94\u8be5\u5305\u542b\u5355\u4e2a\u795e\u7ecf\u5143\uff0c\u4f7f\u7528 logistic \u6fc0\u6d3b\u51fd\u6570\u3002 \u5c06 MNIST \u8bad\u7ec3\u96c6\u5206\u4e3a\u4e24\u7ec4\uff1a\u7b2c\u4e00\u90e8\u5206\u5e94\u5305\u542b 55,000\u4e2a \u56fe\u50cf\uff0c\u7b2c\u4e8c\u90e8\u5206\u5e94\u5305\u542b 5000 \u4e2a\u56fe\u50cf\u3002 \u521b\u5efa\u4e00\u4e2a\u751f\u6210\u8bad\u7ec3\u6279\u6b21\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u662f\u4ece\u7b2c\u4e00\u90e8\u5206\u4e2d\u6311\u9009\u7684\u4e00\u5bf9 MNIST \u56fe\u50cf\u3002 \u4e00\u534a\u7684\u8bad\u7ec3\u5b9e\u4f8b\u5e94\u8be5\u662f\u5c5e\u4e8e\u540c\u4e00\u7c7b\u7684\u56fe\u50cf\u5bf9\uff0c\u800c\u53e6\u4e00\u534a\u5e94\u8be5\u662f\u6765\u81ea\u4e0d\u540c\u7c7b\u522b\u7684\u56fe\u50cf\u3002 \u5bf9\u4e8e\u6bcf\u4e00\u5bf9\uff0c\u5982\u679c\u56fe\u50cf\u6765\u81ea\u540c\u4e00\u7c7b\uff0c\u8bad\u7ec3\u6807\u7b7e\u5e94\u8be5\u4e3a 0\uff1b\u5982\u679c\u6765\u81ea\u4e0d\u540c\u7c7b\uff0c\u5219\u6807\u7b7e\u5e94\u4e3a 1\u3002 \u5728\u8fd9\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3 DNN\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u56fe\u50cf\u5bf9\uff0c\u4f60\u53ef\u4ee5\u540c\u65f6\u5c06\u7b2c\u4e00\u5f20\u56fe\u50cf\u9001\u5165 DNN A\uff0c\u5c06\u7b2c\u4e8c\u5f20\u56fe\u50cf\u9001\u5165 DNN B\u3002\u6574\u4e2a\u7f51\u7edc\u5c06\u9010\u6e10\u5b66\u4f1a\u5224\u65ad\u4e24\u5f20\u56fe\u50cf\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\u3002 \u73b0\u5728\u901a\u8fc7\u590d\u7528\u548c\u51bb\u7ed3 DNN A \u7684\u9690\u85cf\u5c42\uff0c\u5e76\u6dfb\u52a0 1 0\u4e2a\u795e\u7ecf\u5143\u7684 softmax \u8f93\u51fa\u5c42\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 DNN\u3002 \u5728\u7b2c\u4e8c\u90e8\u5206\u4e0a\u8bad\u7ec3\u8fd9\u4e2a\u7f51\u7edc\uff0c\u770b\u770b\u4f60\u662f\u5426\u53ef\u4ee5\u5b9e\u73b0\u8f83\u597d\u7684\u8868\u73b0\uff0c\u5c3d\u7ba1\u6bcf\u7c7b\u53ea\u6709 500 \u4e2a\u56fe\u50cf\u3002 \u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u5728\u9644\u5f55 A \u4e2d\u3002","title":"11.\u8bad\u7ec3\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_1","text":"\u7b2c 10 \u7ae0\u4ecb\u7ecd\u4e86\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u3002 \u4f46\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u6d45\u7684 DNN\uff0c\u53ea\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\u3002 \u5982\u679c\u4f60\u9700\u8981\u89e3\u51b3\u975e\u5e38\u590d\u6742\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u68c0\u6d4b\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\u4e2d\u7684\u6570\u767e\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8be5\u600e\u4e48\u529e\uff1f \u4f60\u53ef\u80fd\u9700\u8981\u8bad\u7ec3\u66f4\u6df1\u7684 DNN\uff0c\u4e5f\u8bb8\u6709 10 \u5c42\uff0c\u6bcf\u5c42\u5305\u542b\u6570\u767e\u4e2a\u795e\u7ecf\u5143\uff0c\u901a\u8fc7\u6570\u5341\u4e07\u4e2a\u8fde\u63a5\u6765\u8fde\u63a5\u3002 \u8fd9\u4e0d\u4f1a\u662f\u95f2\u5ead\u4fe1\u6b65\uff1a \u9996\u5148\uff0c\u4f60\u5c06\u9762\u4e34\u68d8\u624b\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff08\u6216\u76f8\u5173\u7684\u68af\u5ea6\u7206\u70b8\u95ee\u9898\uff09\uff0c\u8fd9\u4f1a\u5f71\u54cd\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4f7f\u8f83\u4f4e\u5c42\u96be\u4ee5\u8bad\u7ec3\u3002 \u5176\u6b21\uff0c\u5bf9\u4e8e\u5982\u6b64\u5e9e\u5927\u7684\u7f51\u7edc\uff0c\u8bad\u7ec3\u5c06\u975e\u5e38\u7f13\u6162\u3002 \u7b2c\u4e09\uff0c\u5177\u6709\u6570\u767e\u4e07\u53c2\u6570\u7684\u6a21\u578b\u5c06\u4f1a\u6709\u4e25\u91cd\u7684\u8fc7\u62df\u5408\u8bad\u7ec3\u96c6\u7684\u98ce\u9669\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f9d\u6b21\u8ba8\u8bba\u8fd9\u4e9b\u95ee\u9898\uff0c\u5e76\u63d0\u51fa\u89e3\u51b3\u95ee\u9898\u7684\u6280\u5de7\u3002 \u6211\u4eec\u5c06\u4ece\u89e3\u91ca\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u5f00\u59cb\uff0c\u5e76\u63a2\u8ba8\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u770b\u770b\u5404\u79cd\u4f18\u5316\u5668\uff0c\u4e0e\u666e\u901a\u68af\u5ea6\u4e0b\u964d\u76f8\u6bd4\uff0c\u5b83\u4eec\u53ef\u4ee5\u52a0\u901f\u5927\u578b\u6a21\u578b\u7684\u8bad\u7ec3\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c06\u6d4f\u89c8\u4e00\u4e9b\u6d41\u884c\u7684\u5927\u578b\u795e\u7ecf\u7f51\u7edc\u6b63\u5219\u5316\u6280\u672f\u3002 \u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\uff0c\u4f60\u5c06\u80fd\u591f\u8bad\u7ec3\u975e\u5e38\u6df1\u7684\u7f51\u7edc\uff1a\u6b22\u8fce\u6765\u5230\u6df1\u5ea6\u5b66\u4e60\u7684\u4e16\u754c\uff01","title":"\u5341\u4e00\u3001\u8bad\u7ec3\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_2","text":"\u6b63\u5982\u6211\u4eec\u5728\u7b2c 10 \u7ae0\u4e2d\u6240\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7684\u5de5\u4f5c\u539f\u7406\u662f\u4ece\u8f93\u51fa\u5c42\u5230\u8f93\u5165\u5c42\uff0c\u4f20\u64ad\u8bef\u5dee\u7684\u68af\u5ea6\u3002 \u4e00\u65e6\u8be5\u7b97\u6cd5\u5df2\u7ecf\u8ba1\u7b97\u4e86\u7f51\u7edc\u4e2d\u6bcf\u4e2a\u53c2\u6570\u7684\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\uff0c\u5b83\u5c31\u4f7f\u7528\u8fd9\u4e9b\u68af\u5ea6\u6765\u7528\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4\u6765\u66f4\u65b0\u6bcf\u4e2a\u53c2\u6570\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u68af\u5ea6\u5f80\u5f80\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u968f\u7740\u7b97\u6cd5\u8fdb\u5c55\u5230\u8f83\u4f4e\u5c42\u3002 \u7ed3\u679c\uff0c\u68af\u5ea6\u4e0b\u964d\u66f4\u65b0\u4f7f\u5f97\u4f4e\u5c42\u8fde\u63a5\u6743\u91cd\u5b9e\u9645\u4e0a\u4fdd\u6301\u4e0d\u53d8\uff0c\u5e76\u4e14\u8bad\u7ec3\u6c38\u8fdc\u4e0d\u4f1a\u6536\u655b\u5230\u826f\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u8fd9\u88ab\u79f0\u4e3a\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u76f8\u53cd\u7684\u60c5\u51b5\uff1a\u68af\u5ea6\u53ef\u80fd\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\uff0c\u8bb8\u591a\u5c42\u5f97\u5230\u4e86\u975e\u5e38\u5927\u7684\u6743\u91cd\u66f4\u65b0\uff0c\u7b97\u6cd5\u53d1\u6563\u3002\u8fd9\u662f\u68af\u5ea6\u7206\u70b8\u7684\u95ee\u9898\uff0c\u5728\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u4e2d\u6700\u4e3a\u5e38\u89c1\uff08\u89c1\u7b2c 14 \u7ae0\uff09\u3002 \u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u53d7\u68af\u5ea6\u4e0d\u7a33\u5b9a\u4e4b\u82e6; \u4e0d\u540c\u7684\u5c42\u6b21\u53ef\u80fd\u4ee5\u975e\u5e38\u4e0d\u540c\u7684\u901f\u5ea6\u5b66\u4e60\u3002 \u867d\u7136\u8fd9\u79cd\u4e0d\u5e78\u7684\u884c\u4e3a\u5df2\u7ecf\u7ecf\u8fc7\u4e86\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u7684\u5b9e\u9a8c\u89c2\u5bdf\uff08\u8fd9\u662f\u9020\u6210\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u88ab\u629b\u5f03\u7684\u539f\u56e0\u4e4b\u4e00\uff09\uff0c\u4f46\u76f4\u5230 2010 \u5e74\u5de6\u53f3\uff0c\u4eba\u4eec\u624d\u6709\u4e86\u660e\u663e\u7684\u8fdb\u6b65\u3002 Xavier Glorot \u548c Yoshua Bengio \u53d1\u8868\u7684\u9898\u4e3a\u300aUnderstanding the Difficulty of Training Deep Feedforward Neural Networks\u300b\u7684\u8bba\u6587\u53d1\u73b0\u4e86\u4e00\u4e9b\u7591\u95ee\uff0c\u5305\u62ec\u6d41\u884c\u7684 sigmoid \u6fc0\u6d3b\u51fd\u6570\u548c\u5f53\u65f6\u6700\u53d7\u6b22\u8fce\u7684\u6743\u91cd\u521d\u59cb\u5316\u6280\u672f\u7684\u7ec4\u5408\uff0c\u5373\u968f\u673a\u521d\u59cb\u5316\u65f6\u4f7f\u7528\u5e73\u5747\u503c\u4e3a 0\uff0c\u6807\u51c6\u5dee\u4e3a 1 \u7684\u6b63\u6001\u5206\u5e03\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4ed6\u4eec\u8868\u660e\uff0c\u7528\u8fd9\u4e2a\u6fc0\u6d3b\u51fd\u6570\u548c\u8fd9\u4e2a\u521d\u59cb\u5316\u65b9\u6848\uff0c\u6bcf\u5c42\u8f93\u51fa\u7684\u65b9\u5dee\u8fdc\u5927\u4e8e\u5176\u8f93\u5165\u7684\u65b9\u5dee\u3002\u7f51\u7edc\u6b63\u5411\uff0c\u6bcf\u5c42\u7684\u65b9\u5dee\u6301\u7eed\u589e\u52a0\uff0c\u76f4\u5230\u6fc0\u6d3b\u51fd\u6570\u5728\u9876\u5c42\u9971\u548c\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u56e0\u4e3alogistic\u51fd\u6570\u7684\u5e73\u5747\u503c\u4e3a 0.5 \u800c\u4e0d\u662f 0\uff08\u53cc\u66f2\u6b63\u5207\u51fd\u6570\u7684\u5e73\u5747\u503c\u4e3a 0\uff0c\u8868\u73b0\u7565\u597d\u4e8e\u6df1\u5c42\u7f51\u7edc\u4e2d\u7684logistic\u51fd\u6570\uff09 \u770b\u4e00\u4e0blogistic \u6fc0\u6d3b\u51fd\u6570\uff08\u53c2\u89c1\u56fe 11-1\uff09\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u8f93\u5165\u53d8\u5927\uff08\u8d1f\u6216\u6b63\uff09\u65f6\uff0c\u51fd\u6570\u9971\u548c\u5728 0 \u6216 1\uff0c\u5bfc\u6570\u975e\u5e38\u63a5\u8fd1 0\u3002\u56e0\u6b64\uff0c\u5f53\u53cd\u5411\u4f20\u64ad\u5f00\u59cb\u65f6\uff0c \u5b83\u51e0\u4e4e\u6ca1\u6709\u68af\u5ea6\u901a\u8fc7\u7f51\u7edc\u4f20\u64ad\u56de\u6765\uff0c\u800c\u4e14\u7531\u4e8e\u53cd\u5411\u4f20\u64ad\u901a\u8fc7\u9876\u5c42\u5411\u4e0b\u4f20\u9012\uff0c\u6240\u4ee5\u5b58\u5728\u7684\u5c0f\u68af\u5ea6\u4e0d\u65ad\u5730\u88ab\u7a00\u91ca\uff0c\u56e0\u6b64\u8f83\u4f4e\u5c42\u786e\u5b9e\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u53ef\u7528\u3002 Glorot \u548c Bengio \u5728\u4ed6\u4eec\u7684\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u663e\u8457\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u3002 \u6211\u4eec\u9700\u8981\u4fe1\u53f7\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u6b63\u786e\u5730\u6d41\u52a8\uff1a\u5728\u8fdb\u884c\u9884\u6d4b\u65f6\u662f\u6b63\u5411\u7684\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u68af\u5ea6\u65f6\u662f\u53cd\u5411\u7684\u3002 \u6211\u4eec\u4e0d\u5e0c\u671b\u4fe1\u53f7\u6d88\u5931\uff0c\u4e5f\u4e0d\u5e0c\u671b\u5b83\u7206\u70b8\u5e76\u9971\u548c\u3002 \u4e3a\u4e86\u4f7f\u4fe1\u53f7\u6b63\u786e\u6d41\u52a8\uff0c\u4f5c\u8005\u8ba4\u4e3a\uff0c\u6211\u4eec\u9700\u8981\u6bcf\u5c42\u8f93\u51fa\u7684\u65b9\u5dee\u7b49\u4e8e\u5176\u8f93\u5165\u7684\u65b9\u5dee\u3002\uff08\u8fd9\u91cc\u6709\u4e00\u4e2a\u6bd4\u55bb\uff1a\u5982\u679c\u5c06\u9ea6\u514b\u98ce\u653e\u5927\u5668\u7684\u65cb\u94ae\u8bbe\u7f6e\u5f97\u592a\u63a5\u8fd1\u4e8e\u96f6\uff0c\u4eba\u4eec\u542c\u4e0d\u5230\u58f0\u97f3\uff0c\u4f46\u662f\u5982\u679c\u5c06\u9ea6\u514b\u98ce\u653e\u5927\u5668\u8bbe\u7f6e\u5f97\u592a\u5927\uff0c\u58f0\u97f3\u5c31\u4f1a\u9971\u548c\uff0c\u4eba\u4eec\u5c31\u4f1a\u542c\u4e0d\u61c2\u4f60\u5728\u8bf4\u4ec0\u4e48\u3002 \u73b0\u5728\u60f3\u8c61\u4e00\u4e0b\u8fd9\u6837\u4e00\u4e2a\u653e\u5927\u5668\u7684\u94fe\u6761\uff1a\u5b83\u4eec\u90fd\u9700\u8981\u6b63\u786e\u8bbe\u7f6e\uff0c\u4ee5\u4fbf\u5728\u94fe\u6761\u7684\u672b\u7aef\u54cd\u4eae\u800c\u6e05\u6670\u5730\u53d1\u51fa\u58f0\u97f3\u3002 \u4f60\u7684\u58f0\u97f3\u5fc5\u987b\u4ee5\u6bcf\u4e2a\u653e\u5927\u5668\u7684\u632f\u5e45\u76f8\u540c\u7684\u5e45\u5ea6\u51fa\u6765\u3002\uff09\u800c\u4e14\u6211\u4eec\u4e5f\u9700\u8981\u68af\u5ea6\u5728\u76f8\u53cd\u65b9\u5411\u4e0a\u6d41\u8fc7\u4e00\u5c42\u4e4b\u524d\u548c\u4e4b\u540e\u6709\u76f8\u540c\u7684\u65b9\u5dee\uff08\u5982\u679c\u60a8\u5bf9\u6570\u5b66\u7ec6\u8282\u611f\u5174\u8da3\uff0c\u8bf7\u67e5\u9605\u8bba\u6587\uff09\u3002\u5b9e\u9645\u4e0a\u4e0d\u53ef\u80fd\u4fdd\u8bc1\u4e24\u8005\u90fd\u662f\u4e00\u6837\u7684\uff0c\u9664\u975e\u8fd9\u4e2a\u5c42\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8fde\u63a5\uff0c\u4f46\u662f\u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u6298\u8877\u529e\u6cd5\uff0c\u5728\u5b9e\u8df5\u4e2d\u8bc1\u660e\u8fd9\u4e2a\u6298\u4e2d\u529e\u6cd5\u975e\u5e38\u597d\uff1a\u968f\u673a\u521d\u59cb\u5316\u8fde\u63a5\u6743\u91cd\u5fc5\u987b\u5982\u516c\u5f0f 11-1 \u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\u5176\u4e2d n_inputs \u548c n_outputs \u662f\u6743\u91cd\u6b63\u5728\u88ab\u521d\u59cb\u5316\u7684\u5c42\uff08\u4e5f\u79f0\u4e3a\u6247\u5165\u548c\u6247\u51fa\uff09\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8fde\u63a5\u7684\u6570\u91cf\u3002 \u8fd9\u79cd\u521d\u59cb\u5316\u7b56\u7565\u901a\u5e38\u88ab\u79f0\u4e3aXavier\u521d\u59cb\u5316\uff08\u5728\u4f5c\u8005\u7684\u540d\u5b57\u4e4b\u540e\uff09\uff0c\u6216\u8005\u6709\u65f6\u662f Glorot \u521d\u59cb\u5316\u3002 \u5f53\u8f93\u5165\u8fde\u63a5\u7684\u6570\u91cf\u5927\u81f4\u7b49\u4e8e\u8f93\u51fa\u8fde\u63a5\u7684\u6570\u91cf\u65f6\uff0c\u53ef\u4ee5\u5f97\u5230\u66f4\u7b80\u5355\u7684\u7b49\u5f0f \u6211\u4eec\u5728\u7b2c 10 \u7ae0\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e2a\u7b80\u5316\u7684\u7b56\u7565\u3002 \u4f7f\u7528 Xavier \u521d\u59cb\u5316\u7b56\u7565\u53ef\u4ee5\u5927\u5927\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\uff0c\u8fd9\u662f\u5bfc\u81f4\u6df1\u5ea6\u5b66\u4e60\u76ee\u524d\u53d6\u5f97\u6210\u529f\u7684\u6280\u5de7\u4e4b\u4e00\u3002 \u6700\u8fd1\u7684\u4e00\u4e9b\u8bba\u6587\u9488\u5bf9\u4e0d\u540c\u7684\u6fc0\u6d3b\u51fd\u6570\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u7684\u7b56\u7565\uff0c\u5982\u8868 11-1 \u6240\u793a\u3002 ReLU \u6fc0\u6d3b\u51fd\u6570\uff08\u53ca\u5176\u53d8\u4f53\uff0c\u5305\u62ec\u7b80\u79f0 ELU \u6fc0\u6d3b\uff09\u7684\u521d\u59cb\u5316\u7b56\u7565\u6709\u65f6\u79f0\u4e3a He \u521d\u59cb\u5316\uff08\u5728\u5176\u4f5c\u8005\u7684\u59d3\u6c0f\u4e4b\u540e\uff09\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c fully_connected() \u51fd\u6570\uff08\u5728\u7b2c 10 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u4f7f\u7528 Xavier \u521d\u59cb\u5316\uff08\u5177\u6709\u7edf\u4e00\u7684\u5206\u5e03\uff09\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684 variance_scaling_initializer() \u51fd\u6570\u6765\u5c06\u5176\u66f4\u6539\u4e3a He \u521d\u59cb\u5316\uff1a \u6ce8\u610f\uff1a\u672c\u4e66\u4f7f\u7528 tensorflow.contrib.layers.fully_connected() \u800c\u4e0d\u662f tf.layers.dense() \uff08\u672c\u7ae0\u7f16\u5199\u65f6\u4e0d\u5b58\u5728\uff09\u3002 \u73b0\u5728\u6700\u597d\u4f7f\u7528 tf.layers.dense() \uff0c\u56e0\u4e3a contrib \u6a21\u5757\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u53ef\u80fd\u4f1a\u66f4\u6539\u6216\u5220\u9664\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002 dense() \u51fd\u6570\u51e0\u4e4e\u4e0e fully_connected() \u51fd\u6570\u5b8c\u5168\u76f8\u540c\u3002 \u4e0e\u672c\u7ae0\u6709\u5173\u7684\u4e3b\u8981\u5dee\u5f02\u662f\uff1a \u51e0\u4e2a\u53c2\u6570\u88ab\u91cd\u65b0\u547d\u540d\uff1a\u8303\u56f4\u53d8\u6210\u540d\u5b57\uff0c activation_fn \u53d8\u6210\u6fc0\u6d3b\uff08\u7c7b\u4f3c\u5730\uff0c _fn \u540e\u7f00\u4ece\u8bf8\u5982 normalizer_fn \u4e4b\u7c7b\u7684\u5176\u4ed6\u53c2\u6570\u4e2d\u79fb\u9664\uff09\uff0c weights_initializer \u53d8\u6210 kernel_initializer \u7b49\u7b49\u3002\u9ed8\u8ba4\u6fc0\u6d3b\u73b0\u5728\u662f None \uff0c\u800c\u4e0d\u662f tf.nn.relu \u3002 \u5b83\u4e0d\u652f\u6301 tensorflow.contrib.framework.arg_scope() \uff08\u7a0d\u540e\u5728\u7b2c 11 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002 \u5b83\u4e0d\u652f\u6301\u6b63\u5219\u5316\u7684\u53c2\u6570\uff08\u7a0d\u540e\u5728\u7b2c 11 \u7ae0\u4ecb\u7ecd\uff09\u3002 he_init = tf.contrib.layers.variance_scaling_initializer() hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, kernel_initializer=he_init, name=\"hidden1\") He \u521d\u59cb\u5316\u53ea\u8003\u8651\u4e86\u6247\u5165\uff0c\u800c\u4e0d\u662f\u50cf Xavier \u521d\u59cb\u5316\u90a3\u6837\u6247\u5165\u548c\u6247\u51fa\u4e4b\u95f4\u7684\u5e73\u5747\u503c\u3002 \u8fd9\u4e5f\u662f variance_scaling_initializer() \u51fd\u6570\u7684\u9ed8\u8ba4\u503c\uff0c\u4f46\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u53c2\u6570 mode =\"FAN_AVG\" \u6765\u66f4\u6539\u5b83\u3002","title":"\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_3","text":"Glorot \u548c Bengio \u5728 2010 \u5e74\u7684\u8bba\u6587\u4e2d\u7684\u4e00\u4e2a\u89c1\u89e3\u662f\uff0c\u6d88\u5931/\u7206\u70b8\u7684\u68af\u5ea6\u95ee\u9898\u90e8\u5206\u662f\u7531\u4e8e\u6fc0\u6d3b\u51fd\u6570\u7684\u9009\u62e9\u4e0d\u597d\u9020\u6210\u7684\u3002 \u5728\u90a3\u4e4b\u524d\uff0c\u5927\u591a\u6570\u4eba\u90fd\u8ba4\u4e3a\uff0c\u5982\u679c\u5927\u81ea\u7136\u9009\u62e9\u5728\u751f\u7269\u795e\u7ecf\u5143\u4e2d\u4f7f\u7528 sigmoid \u6fc0\u6d3b\u51fd\u6570\uff0c\u5b83\u4eec\u5fc5\u5b9a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002 \u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\u5728\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e2d\u8868\u73b0\u5f97\u66f4\u597d\uff0c\u7279\u522b\u662f ReLU \u6fc0\u6d3b\u51fd\u6570\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5b83\u5bf9\u6b63\u503c\u4e0d\u4f1a\u9971\u548c\uff08\u4e5f\u56e0\u4e3a\u5b83\u7684\u8ba1\u7b97\u901f\u5ea6\u5f88\u5feb\uff09\u3002 \u4e0d\u5e78\u7684\u662f\uff0cReLU\u6fc0\u6d3b\u529f\u80fd\u5e76\u4e0d\u5b8c\u7f8e\u3002 \u5b83\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a \u201cReLU \u6b7b\u533a\u201d \u7684\u95ee\u9898\uff1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e9b\u795e\u7ecf\u5143\u6709\u6548\u5730\u6b7b\u4ea1\uff0c\u610f\u5473\u7740\u5b83\u4eec\u505c\u6b62\u8f93\u51fa 0 \u4ee5\u5916\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u4f60\u7f51\u7edc\u7684\u4e00\u534a\u795e\u7ecf\u5143\u5df2\u7ecf\u6b7b\u4ea1\uff0c\u7279\u522b\u662f\u5982\u679c\u4f60\u4f7f\u7528\u5927\u5b66\u4e60\u7387\u3002 \u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u5982\u679c\u795e\u7ecf\u5143\u7684\u6743\u91cd\u5f97\u5230\u66f4\u65b0\uff0c\u4f7f\u5f97\u795e\u7ecf\u5143\u8f93\u5165\u7684\u52a0\u6743\u548c\u4e3a\u8d1f\uff0c\u5219\u5b83\u5c06\u5f00\u59cb\u8f93\u51fa 0 \u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u7531\u4e8e\u5f53\u8f93\u5165\u4e3a\u8d1f\u65f6\uff0cReLU\u51fd\u6570\u7684\u68af\u5ea6\u4e3a0\uff0c\u795e\u7ecf\u5143\u4e0d\u53ef\u80fd\u6062\u590d\u751f\u673a\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528 ReLU \u51fd\u6570\u7684\u4e00\u4e2a\u53d8\u4f53\uff0c\u6bd4\u5982 leaky ReLU\u3002\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e3a LeakyReLU\u03b1(z)= max(\u03b1z\uff0cz) \uff08\u89c1\u56fe 11-2\uff09\u3002\u8d85\u53c2\u6570 \u03b1 \u5b9a\u4e49\u4e86\u51fd\u6570\u201cleaks\u201d\u7684\u7a0b\u5ea6\uff1a\u5b83\u662f z < 0 \u65f6\u51fd\u6570\u7684\u659c\u7387\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a 0.01\u3002\u8fd9\u4e2a\u5c0f\u659c\u5761\u786e\u4fdd leaky ReLU \u6c38\u4e0d\u6b7b\u4ea1\uff1b\u4ed6\u4eec\u53ef\u80fd\u4f1a\u957f\u671f\u660f\u8ff7\uff0c\u4f46\u4ed6\u4eec\u6709\u673a\u4f1a\u6700\u7ec8\u9192\u6765\u3002\u6700\u8fd1\u7684\u4e00\u7bc7\u8bba\u6587\u6bd4\u8f83\u4e86\u51e0\u79cd ReLU \u6fc0\u6d3b\u529f\u80fd\u7684\u53d8\u4f53\uff0c\u5176\u4e2d\u4e00\u4e2a\u7ed3\u8bba\u662f leaky Relu \u603b\u662f\u4f18\u4e8e\u4e25\u683c\u7684 ReLU \u6fc0\u6d3b\u51fd\u6570\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8bbe\u5b9a \u03b1= 0.2 \uff08\u5de8\u5927 leak\uff09\u4f3c\u4e4e\u5bfc\u81f4\u6bd4 \u03b1= 0.01 \uff08\u5c0f leak\uff09\u66f4\u597d\u7684\u6027\u80fd\u3002\u4ed6\u4eec\u8fd8\u8bc4\u4f30\u4e86\u968f\u673a\u5316 leaky ReLU\uff08RReLU\uff09\uff0c\u5176\u4e2d \u03b1 \u5728\u8bad\u7ec3\u671f\u95f4\u5728\u7ed9\u5b9a\u8303\u56f4\u5185\u968f\u673a\u6311\u9009\uff0c\u5e76\u5728\u6d4b\u8bd5\u671f\u95f4\u56fa\u5b9a\u4e3a\u5e73\u5747\u503c\u3002\u5b83\u8868\u73b0\u76f8\u5f53\u597d\uff0c\u4f3c\u4e4e\u662f\u4e00\u4e2a\u6b63\u5219\u9879\uff08\u51cf\u5c11\u8bad\u7ec3\u96c6\u7684\u8fc7\u62df\u5408\u98ce\u9669\uff09\u3002\u6700\u540e\uff0c\u4ed6\u4eec\u8fd8\u8bc4\u4f30\u4e86\u53c2\u6570 leaky ReLU\uff08PReLU\uff09\uff0c\u5176\u4e2d \u03b1 \u88ab\u6388\u6743\u5728\u8bad\u7ec3\u671f\u95f4\u88ab\u5b66\u4e60\uff08\u800c\u4e0d\u662f\u8d85\u53c2\u6570\uff0c\u5b83\u53d8\u6210\u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6\u53c2\u6570\u4e00\u6837\u88ab\u53cd\u5411\u4f20\u64ad\u4fee\u6539\u7684\u53c2\u6570\uff09\u3002\u636e\u62a5\u9053\u8fd9\u5728\u5927\u578b\u56fe\u50cf\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\u5f3a\u4e8e ReLU\uff0c\u4f46\u662f\u5bf9\u4e8e\u8f83\u5c0f\u7684\u6570\u636e\u96c6\uff0c\u5176\u5177\u6709\u8fc7\u5ea6\u62df\u5408\u8bad\u7ec3\u96c6\u7684\u98ce\u9669\u3002 \u6700\u540e\uff0cDjork-Arn\u00e9 Clevert \u7b49\u4eba\u5728 2015 \u5e74\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u79f0\u4e3a\u6307\u6570\u7ebf\u6027\u5355\u5143\uff08exponential linear unit\uff0cELU\uff09\u7684\u65b0\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u5728\u4ed6\u4eec\u7684\u5b9e\u9a8c\u4e2d\u8868\u73b0\u4f18\u4e8e\u6240\u6709\u7684 ReLU \u53d8\u4f53\uff1a\u8bad\u7ec3\u65f6\u95f4\u51cf\u5c11\uff0c\u795e\u7ecf\u7f51\u7edc\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8868\u73b0\u7684\u66f4\u597d\u3002 \u5982\u56fe 11-3 \u6240\u793a\uff0c\u516c\u5f0f 11-2 \u7ed9\u51fa\u4e86\u5b83\u7684\u5b9a\u4e49\u3002 \u5b83\u770b\u8d77\u6765\u5f88\u50cf ReLU \u51fd\u6570\uff0c\u4f46\u6709\u4e00\u4e9b\u533a\u522b\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff1a \u9996\u5148\u5b83\u5728 z < 0 \u65f6\u53d6\u8d1f\u503c\uff0c\u8fd9\u4f7f\u5f97\u8be5\u5355\u5143\u7684\u5e73\u5747\u8f93\u51fa\u63a5\u8fd1\u4e8e 0\u3002\u8fd9\u6709\u52a9\u4e8e\u51cf\u8f7b\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c\u5982\u524d\u6240\u8ff0\u3002 \u8d85\u53c2\u6570 \u03b1 \u5b9a\u4e49\u4e3a\u5f53 z \u662f\u4e00\u4e2a\u5927\u7684\u8d1f\u6570\u65f6\uff0cELU \u51fd\u6570\u63a5\u8fd1\u7684\u503c\u3002\u5b83\u901a\u5e38\u8bbe\u7f6e\u4e3a 1\uff0c\u4f46\u662f\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u53ef\u4ee5\u50cf\u8c03\u6574\u5176\u4ed6\u8d85\u53c2\u6570\u4e00\u6837\u8c03\u6574\u5b83\u3002 \u5176\u6b21\uff0c\u5b83\u5bf9 z < 0 \u6709\u4e00\u4e2a\u975e\u96f6\u7684\u68af\u5ea6\uff0c\u907f\u514d\u4e86\u795e\u7ecf\u5143\u6b7b\u4ea1\u7684\u95ee\u9898\u3002 \u7b2c\u4e09\uff0c\u51fd\u6570\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u662f\u5e73\u6ed1\u7684\uff0c\u5305\u62ec z = 0 \u5de6\u53f3\uff0c\u8fd9\u6709\u52a9\u4e8e\u52a0\u901f\u68af\u5ea6\u4e0b\u964d\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5f39\u56de z = 0 \u7684\u5de6\u4fa7\u548c\u53f3\u4fa7\u3002 ELU \u6fc0\u6d3b\u51fd\u6570\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u8ba1\u7b97\u901f\u5ea6\u6162\u4e8e ReLU \u53ca\u5176\u53d8\u4f53\uff08\u7531\u4e8e\u4f7f\u7528\u6307\u6570\u51fd\u6570\uff09\uff0c\u4f46\u662f\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u662f\u901a\u8fc7\u66f4\u5feb\u7684\u6536\u655b\u901f\u5ea6\u6765\u8865\u507f\u7684\u3002 \u7136\u800c\uff0c\u5728\u6d4b\u8bd5\u65f6\u95f4\uff0cELU \u7f51\u7edc\u5c06\u6bd4 ReLU \u7f51\u7edc\u6162\u3002 \u90a3\u4e48\u4f60\u5e94\u8be5\u4f7f\u7528\u54ea\u4e2a\u6fc0\u6d3b\u51fd\u6570\u6765\u5904\u7406\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u9690\u85cf\u5c42\uff1f \u867d\u7136\u4f60\u7684\u91cc\u7a0b\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u4e00\u822c ELU > leaky ReLU\uff08\u53ca\u5176\u53d8\u4f53\uff09> ReLU > tanh > sigmoid\u3002 \u5982\u679c\u60a8\u5173\u5fc3\u8fd0\u884c\u65f6\u6027\u80fd\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u559c\u6b22 leaky ReLU\u8d85\u8fc7ELU\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u8c03\u6574\u53e6\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684\u9ed8\u8ba4\u7684 \u03b1 \u503c\uff08leaky ReLU \u4e3a 0.01\uff0cELU \u4e3a 1\uff09\u3002 \u5982\u679c\u60a8\u6709\u5145\u8db3\u7684\u65f6\u95f4\u548c\u8ba1\u7b97\u80fd\u529b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u8bc4\u4f30\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\uff0c\u7279\u522b\u662f\u5982\u679c\u60a8\u7684\u795e\u7ecf\u7f51\u7edc\u8fc7\u62df\u5408\uff0c\u5219\u4e3aRReLU; \u5982\u679c\u60a8\u62e5\u6709\u5e9e\u5927\u7684\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5219\u4e3a PReLU\u3002 TensorFlow \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u4ee5\u7528\u6765\u5efa\u7acb\u795e\u7ecf\u7f51\u7edc\u7684 elu() \u51fd\u6570\u3002 \u8c03\u7528 fully_connected() \u51fd\u6570\u65f6\uff0c\u53ea\u9700\u8bbe\u7f6e activation_fn \u53c2\u6570\u5373\u53ef\uff1a hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.elu, name=\"hidden1\") TensorFlow \u6ca1\u6709\u9488\u5bf9 leaky ReLU \u7684\u9884\u5b9a\u4e49\u51fd\u6570\uff0c\u4f46\u662f\u5f88\u5bb9\u6613\u5b9a\u4e49\uff1a def leaky_relu(z, name=None): return tf.maximum(0.01 * z, z, name=name) hidden1 = tf.layers.dense(X, n_hidden1, activation=leaky_relu, name=\"hidden1\")","title":"\u975e\u9971\u548c\u6fc0\u6d3b\u51fd\u6570"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_4","text":"\u5c3d\u7ba1\u4f7f\u7528 He\u521d\u59cb\u5316\u548c ELU\uff08\u6216\u4efb\u4f55 ReLU \u53d8\u4f53\uff09\u53ef\u4ee5\u663e\u8457\u51cf\u5c11\u8bad\u7ec3\u5f00\u59cb\u9636\u6bb5\u7684\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u5728\u8bad\u7ec3\u671f\u95f4\u95ee\u9898\u4e0d\u4f1a\u56de\u6765\u3002 \u5728 2015 \u5e74\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0cSergey Ioffe \u548c Christian Szegedy \u63d0\u51fa\u4e86\u4e00\u79cd\u79f0\u4e3a\u6279\u91cf\u6807\u51c6\u5316\uff08Batch Normalization\uff0cBN\uff09\u7684\u6280\u672f\u6765\u89e3\u51b3\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898\uff0c\u6bcf\u5c42\u8f93\u5165\u7684\u5206\u5e03\u5728\u8bad\u7ec3\u671f\u95f4\u6539\u53d8\u7684\u95ee\u9898\uff0c\u66f4\u666e\u904d\u7684\u95ee\u9898\u662f\u5f53\u524d\u4e00\u5c42\u7684\u53c2\u6570\u6539\u53d8\uff0c\u6bcf\u5c42\u8f93\u5165\u7684\u5206\u5e03\u4f1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u53d1\u751f\u53d8\u5316\uff08\u4ed6\u4eec\u79f0\u4e4b\u4e3a\u5185\u90e8\u534f\u53d8\u91cf\u504f\u79fb\u95ee\u9898\uff09\u3002 \u8be5\u6280\u672f\u5305\u62ec\u5728\u6bcf\u5c42\u7684\u6fc0\u6d3b\u51fd\u6570\u4e4b\u524d\u5728\u6a21\u578b\u4e2d\u6dfb\u52a0\u64cd\u4f5c\uff0c\u7b80\u5355\u5730\u5bf9\u8f93\u5165\u8fdb\u884czero-centering\u548c\u89c4\u8303\u5316\uff0c\u7136\u540e\u6bcf\u5c42\u4f7f\u7528\u4e24\u4e2a\u65b0\u53c2\u6570\uff08\u4e00\u4e2a\u7528\u4e8e\u5c3a\u5ea6\u53d8\u6362\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u504f\u79fb\uff09\u5bf9\u7ed3\u679c\u8fdb\u884c\u5c3a\u5ea6\u53d8\u6362\u548c\u504f\u79fb\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u8ba9\u6a21\u578b\u5b66\u4e60\u5230\u6bcf\u5c42\u8f93\u5165\u503c\u7684\u6700\u4f73\u5c3a\u5ea6,\u5747\u503c\u3002\u4e3a\u4e86\u5bf9\u8f93\u5165\u8fdb\u884c\u5f52\u96f6\u548c\u5f52\u4e00\u5316\uff0c\u7b97\u6cd5\u9700\u8981\u4f30\u8ba1\u8f93\u5165\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u3002 \u5b83\u901a\u8fc7\u8bc4\u4f30\u5f53\u524d\u5c0f\u6279\u91cf\u8f93\u5165\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\uff08\u56e0\u6b64\u547d\u540d\u4e3a\u201c\u6279\u91cf\u6807\u51c6\u5316\u201d\uff09\u6765\u5b9e\u73b0\u3002 \u6574\u4e2a\u64cd\u4f5c\u5728\u65b9\u7a0b 11-3 \u4e2d\u3002 \u662f\u6574\u4e2a\u5c0f\u6279\u91cfB\u7684\u7ecf\u9a8c\u5747\u503c \u662f\u7ecf\u9a8c\u6027\u7684\u6807\u51c6\u5dee\uff0c\u4e5f\u662f\u6765\u8bc4\u4f30\u6574\u4e2a\u5c0f\u6279\u91cf\u7684\u3002 \u662f\u5c0f\u6279\u91cf\u4e2d\u7684\u5b9e\u4f8b\u6570\u91cf\u3002 \u662f\u4ee5\u4e3a\u96f6\u4e2d\u5fc3\u548c\u6807\u51c6\u5316\u7684\u8f93\u5165\u3002 \u662f\u5c42\u7684\u7f29\u653e\u53c2\u6570\u3002 \u662f\u5c42\u7684\u79fb\u52a8\u53c2\u6570\uff08\u504f\u79fb\u91cf\uff09 \u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\u5b57\uff0c\u4ee5\u907f\u514d\u88ab\u96f6\u9664\uff08\u901a\u5e38\u4e3a 10 ^ -3 \uff09\u3002 \u8fd9\u88ab\u79f0\u4e3a\u5e73\u6ed1\u9879\uff08\u62c9\u5e03\u62c9\u65af\u5e73\u6ed1\uff0cLaplace Smoothing\uff09\u3002 \u662fBN\u64cd\u4f5c\u7684\u8f93\u51fa\uff1a\u5b83\u662f\u8f93\u5165\u7684\u7f29\u653e\u548c\u79fb\u4f4d\u7248\u672c\u3002 \u5728\u6d4b\u8bd5\u65f6\uff0c\u6ca1\u6709\u5c0f\u6279\u91cf\u8ba1\u7b97\u7ecf\u9a8c\u5747\u503c\u548c\u6807\u51c6\u5dee\uff0c\u6240\u4ee5\u60a8\u53ea\u9700\u4f7f\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u3002 \u8fd9\u4e9b\u901a\u5e38\u5728\u8bad\u7ec3\u671f\u95f4\u4f7f\u7528\u79fb\u52a8\u5e73\u5747\u503c\u8fdb\u884c\u6709\u6548\u8ba1\u7b97\u3002 \u56e0\u6b64\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u6bcf\u4e2a\u6279\u6b21\u6807\u51c6\u5316\u7684\u5c42\u6b21\u90fd\u5b66\u4e60\u4e86\u56db\u4e2a\u53c2\u6570\uff1a \u03b3 \uff08\u6807\u5ea6\uff09\uff0c \u03b2 \uff08\u504f\u79fb\uff09\uff0c \u03bc \uff08\u5e73\u5747\u503c\uff09\u548c \u03c3 \uff08\u6807\u51c6\u5dee\uff09\u3002 \u4f5c\u8005\u8bc1\u660e\uff0c\u8fd9\u9879\u6280\u672f\u5927\u5927\u6539\u5584\u4e86\u4ed6\u4eec\u8bd5\u9a8c\u7684\u6240\u6709\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u3002\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u5927\u5927\u51cf\u5c11\u4e86\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u9971\u548c\u6fc0\u6d3b\u51fd\u6570\uff0c\u5982 tanh \u751a\u81f3 sigmoid \u6fc0\u6d3b\u51fd\u6570\u3002\u7f51\u7edc\u5bf9\u6743\u91cd\u521d\u59cb\u5316\u4e5f\u4e0d\u90a3\u4e48\u654f\u611f\u3002\u4ed6\u4eec\u80fd\u591f\u4f7f\u7528\u66f4\u5927\u7684\u5b66\u4e60\u7387\uff0c\u663e\u8457\u52a0\u5feb\u4e86\u5b66\u4e60\u8fc7\u7a0b\u3002\u5177\u4f53\u5730\uff0c\u4ed6\u4eec\u6307\u51fa\uff0c\u201c\u5e94\u7528\u4e8e\u6700\u5148\u8fdb\u7684\u56fe\u50cf\u5206\u7c7b\u6a21\u578b\uff0c\u6279\u6807\u51c6\u5316\u7528\u5c11\u4e86 14 \u500d\u7684\u8bad\u7ec3\u6b65\u9aa4\u5b9e\u73b0\u4e86\u76f8\u540c\u7684\u7cbe\u5ea6\uff0c\u4ee5\u663e\u8457\u7684\u4f18\u52bf\u51fb\u8d25\u4e86\u539f\u59cb\u6a21\u578b\u3002[...] \u4f7f\u7528\u6279\u91cf\u6807\u51c6\u5316\u7684\u7f51\u7edc\u96c6\u5408\uff0c\u6211\u4eec\u6539\u8fdb\u4e86 ImageNet \u5206\u7c7b\u4e0a\u7684\u6700\u4f73\u516c\u5e03\u7ed3\u679c\uff1a\u8fbe\u52304.9% \u7684\u524d5\u4e2a\u9a8c\u8bc1\u9519\u8bef\uff08\u548c 4.8% \u7684\u6d4b\u8bd5\u9519\u8bef\uff09\uff0c\u8d85\u51fa\u4e86\u4eba\u7c7b\u8bc4\u4f30\u8005\u7684\u51c6\u786e\u6027\u3002\u6279\u91cf\u6807\u51c6\u5316\u4e5f\u50cf\u4e00\u4e2a\u6b63\u5219\u5316\u9879\u4e00\u6837\uff0c\u51cf\u5c11\u4e86\u5bf9\u5176\u4ed6\u6b63\u5219\u5316\u6280\u672f\u7684\u9700\u6c42\uff08\u5982\u672c\u7ae0\u7a0d\u540e\u63cf\u8ff0\u7684 dropout\uff09. \u7136\u800c\uff0c\u6279\u91cf\u6807\u51c6\u5316\u7684\u786e\u4f1a\u589e\u52a0\u6a21\u578b\u7684\u590d\u6742\u6027\uff08\u5c3d\u7ba1\u5b83\u4e0d\u9700\u8981\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u4f1a\u7167\u987e\u5230\u8fd9\u4e00\u70b9\uff0c\u53ea\u8981\u5b83\u662f\u6279\u91cf\u6807\u51c6\u5316\u7684\uff09\u3002 \u6b64\u5916\uff0c\u8fd8\u5b58\u5728\u8fd0\u884c\u65f6\u95f4\u7684\u635f\u5931\uff1a\u7531\u4e8e\u6bcf\u5c42\u6240\u9700\u7684\u989d\u5916\u8ba1\u7b97\uff0c\u795e\u7ecf\u7f51\u7edc\u7684\u9884\u6d4b\u901f\u5ea6\u8f83\u6162\u3002 \u6240\u4ee5\uff0c\u5982\u679c\u4f60\u9700\u8981\u9884\u6d4b\u95ea\u7535\u822c\u5feb\u901f\uff0c\u4f60\u53ef\u80fd\u60f3\u8981\u68c0\u67e5\u666e\u901aELU + He\u521d\u59cb\u5316\u6267\u884c\u4e4b\u524d\u5982\u4f55\u6267\u884c\u6279\u91cf\u6807\u51c6\u5316\u3002 \u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u8bad\u7ec3\u8d77\u521d\u76f8\u5f53\u7f13\u6162\uff0c\u800c\u6e10\u53d8\u4e0b\u964d\u6b63\u5728\u5bfb\u627e\u6bcf\u5c42\u7684\u6700\u4f73\u5c3a\u5ea6\u548c\u504f\u79fb\u91cf\uff0c\u4f46\u4e00\u65e6\u627e\u5230\u5408\u7406\u7684\u597d\u503c\uff0c\u5b83\u5c31\u4f1a\u52a0\u901f\u3002 \u4f7f\u7528 TensorFlow \u5b9e\u73b0\u6279\u91cf\u6807\u51c6\u5316 TensorFlow \u63d0\u4f9b\u4e86\u4e00\u4e2a batch_normalization() \u51fd\u6570\uff0c\u5b83\u7b80\u5355\u5730\u5bf9\u8f93\u5165\u8fdb\u884c\u5c45\u4e2d\u548c\u6807\u51c6\u5316\uff0c\u4f46\u662f\u60a8\u5fc5\u987b\u81ea\u5df1\u8ba1\u7b97\u5e73\u5747\u503c\u548c\u6807\u51c6\u5dee\uff08\u57fa\u4e8e\u8bad\u7ec3\u671f\u95f4\u7684\u5c0f\u6279\u91cf\u6570\u636e\u6216\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u5b8c\u6574\u6570\u636e\u96c6\uff09 \u4f5c\u4e3a\u8fd9\u4e2a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u8fd8\u5fc5\u987b\u5904\u7406\u7f29\u653e\u548c\u504f\u79fb\u91cf\u53c2\u6570\u7684\u521b\u5efa\uff08\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u6b64\u51fd\u6570\uff09\u3002 \u8fd9\u662f\u53ef\u884c\u7684\uff0c\u4f46\u4e0d\u662f\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5\u3002 \u76f8\u53cd\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 batch_norm() \u51fd\u6570\uff0c\u5b83\u4e3a\u4f60\u5904\u7406\u6240\u6709\u8fd9\u4e9b\u3002 \u60a8\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u5b83\uff0c\u6216\u8005\u544a\u8bc9 fully_connected() \u51fd\u6570\u4f7f\u7528\u5b83\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\uff1a \u6ce8\u610f\uff1a\u672c\u4e66\u4f7f\u7528 tensorflow.contrib.layers.batch_norm() \u800c\u4e0d\u662f tf.layers.batch_normalization() \uff08\u672c\u7ae0\u5199\u4f5c\u65f6\u4e0d\u5b58\u5728\uff09\u3002 \u73b0\u5728\u6700\u597d\u4f7f\u7528 tf.layers.batch_normalization() \uff0c\u56e0\u4e3a contrib \u6a21\u5757\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u53ef\u80fd\u4f1a\u6539\u53d8\u6216\u88ab\u5220\u9664\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002 \u6211\u4eec\u73b0\u5728\u4e0d\u4f7f\u7528 batch_norm() \u51fd\u6570\u4f5c\u4e3a fully_connected() \u51fd\u6570\u7684\u6b63\u5219\u5316\u53c2\u6570\uff0c\u800c\u662f\u4f7f\u7528 batch_normalization() \uff0c\u5e76\u660e\u786e\u5730\u521b\u5efa\u4e00\u4e2a\u4e0d\u540c\u7684\u5c42\u3002 \u53c2\u6570\u6709\u4e9b\u4e0d\u540c\uff0c\u7279\u522b\u662f\uff1a decay \u66f4\u540d\u4e3a momentum is_training \u88ab\u91cd\u547d\u540d\u4e3a training updates_collections \u88ab\u5220\u9664\uff1a\u6279\u91cf\u6807\u51c6\u5316\u6240\u9700\u7684\u66f4\u65b0\u64cd\u4f5c\u88ab\u6dfb\u52a0\u5230 UPDATE_OPS \u96c6\u5408\u4e2d\uff0c\u5e76\u4e14\u60a8\u9700\u8981\u5728\u8bad\u7ec3\u671f\u95f4\u660e\u786e\u5730\u8fd0\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff08\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u6267\u884c\u9636\u6bb5\uff09 \u6211\u4eec\u4e0d\u9700\u8981\u6307\u5b9a scale = True \uff0c\u56e0\u4e3a\u8fd9\u662f\u9ed8\u8ba4\u503c\u3002 \u8fd8\u8981\u6ce8\u610f\uff0c\u4e3a\u4e86\u5728\u6bcf\u4e2a\u9690\u85cf\u5c42\u6fc0\u6d3b\u51fd\u6570\u4e4b\u524d\u8fd0\u884c\u6279\u91cf\u6807\u51c6\u5316\uff0c\u6211\u4eec\u624b\u52a8\u5e94\u7528 RELU \u6fc0\u6d3b\u51fd\u6570\uff0c\u5728\u6279\u91cf\u89c4\u8303\u5c42\u4e4b\u540e\u3002\u6ce8\u610f\uff1a\u7531\u4e8e tf.layers.dense() \u51fd\u6570\u4e0e\u672c\u4e66\u4e2d\u4f7f\u7528\u7684 tf.contrib.layers.arg_scope() \u4e0d\u517c\u5bb9\uff0c\u6211\u4eec\u73b0\u5728\u4f7f\u7528 python \u7684 functools.partial() \u51fd\u6570\u3002 \u5b83\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u521b\u5efa\u4e00\u4e2a my_dense_layer() \u51fd\u6570\uff0c\u53ea\u9700\u8c03\u7528 tf.layers.dense() \uff0c\u5e76\u81ea\u52a8\u8bbe\u7f6e\u6240\u9700\u7684\u53c2\u6570\uff08\u9664\u975e\u5728\u8c03\u7528 my_dense_layer() \u65f6\u8986\u76d6\u5b83\u4eec\uff09\u3002 \u5982\u60a8\u6240\u89c1\uff0c\u4ee3\u7801\u4fdd\u6301\u975e\u5e38\u76f8\u4f3c\u3002 import tensorflow as tf n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 100 n_outputs = 10 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") training = tf.placeholder_with_default(False, shape=(), name='training') hidden1 = tf.layers.dense(X, n_hidden1, name=\"hidden1\") bn1 = tf.layers.batch_normalization(hidden1, training=training, momentum=0.9) bn1_act = tf.nn.elu(bn1) hidden2 = tf.layers.dense(bn1_act, n_hidden2, name=\"hidden2\") bn2 = tf.layers.batch_normalization(hidden2, training=training, momentum=0.9) bn2_act = tf.nn.elu(bn2) logits_before_bn = tf.layers.dense(bn2_act, n_outputs, name=\"outputs\") logits = tf.layers.batch_normalization(logits_before_bn, training=training, momentum=0.9) X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") training = tf.placeholder_with_default(False, shape=(), name='training') \u4e3a\u4e86\u907f\u514d\u4e00\u904d\u53c8\u4e00\u904d\u91cd\u590d\u76f8\u540c\u7684\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Python \u7684 partial() \u51fd\u6570\uff1a from functools import partial my_batch_norm_layer = partial(tf.layers.batch_normalization, training=training, momentum=0.9) hidden1 = tf.layers.dense(X, n_hidden1, name=\"hidden1\") bn1 = my_batch_norm_layer(hidden1) bn1_act = tf.nn.elu(bn1) hidden2 = tf.layers.dense(bn1_act, n_hidden2, name=\"hidden2\") bn2 = my_batch_norm_layer(hidden2) bn2_act = tf.nn.elu(bn2) logits_before_bn = tf.layers.dense(bn2_act, n_outputs, name=\"outputs\") logits = my_batch_norm_layer(logits_before_bn) \u5b8c\u6574\u4ee3\u7801 from functools import partial from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf if __name__ == '__main__': n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 100 n_outputs = 10 mnist = input_data.read_data_sets(\"/tmp/data/\") batch_norm_momentum = 0.9 learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name = 'X') y = tf.placeholder(tf.int64, shape=None, name = 'y') training = tf.placeholder_with_default(False, shape=(), name = 'training')#\u7ed9Batch norm\u52a0\u4e00\u4e2aplaceholder with tf.name_scope(\"dnn\"): he_init = tf.contrib.layers.variance_scaling_initializer() #\u5bf9\u6743\u91cd\u7684\u521d\u59cb\u5316 my_batch_norm_layer = partial( tf.layers.batch_normalization, training = training, momentum = batch_norm_momentum ) my_dense_layer = partial( tf.layers.dense, kernel_initializer = he_init ) hidden1 = my_dense_layer(X ,n_hidden1 ,name = 'hidden1') bn1 = tf.nn.elu(my_batch_norm_layer(hidden1)) hidden2 = my_dense_layer(bn1, n_hidden2, name = 'hidden2') bn2 = tf.nn.elu(my_batch_norm_layer(hidden2)) logists_before_bn = my_dense_layer(bn2, n_outputs, name = 'outputs') logists = my_batch_norm_layer(logists_before_bn) with tf.name_scope('loss'): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels = y, logits= logists) loss = tf.reduce_mean(xentropy, name = 'loss') with tf.name_scope('train'): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logists, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) init = tf.global_variables_initializer() saver = tf.train.Saver() n_epoches = 20 batch_size = 200 # \u6ce8\u610f\uff1a\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f tf.layers.batch_normalization() \u800c\u4e0d\u662f tf.contrib.layers.batch_norm()\uff08\u5982\u672c\u4e66\u6240\u8ff0\uff09\uff0c # \u6240\u4ee5\u6211\u4eec\u9700\u8981\u660e\u786e\u8fd0\u884c\u6279\u91cf\u89c4\u8303\u5316\u6240\u9700\u7684\u989d\u5916\u66f4\u65b0\u64cd\u4f5c\uff08sess.run([ training_op\uff0cextra_update_ops], ...)\u3002 extra_update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS) with tf.Session() as sess: init.run() for epoch in range(n_epoches): for iteraton in range(mnist.train.num_examples//batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run([training_op,extra_update_ops], feed_dict={training:True, X:X_batch, y:y_batch}) accuracy_val = accuracy.eval(feed_dict= {X:mnist.test.images, y:mnist.test.labels}) print(epoch, 'Test accuracy:', accuracy_val) \u4ec0\u4e48\uff01\uff1f \u8fd9\u5bf9 MNIST \u6765\u8bf4\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u51c6\u786e\u6027\u3002 \u5f53\u7136\uff0c\u5982\u679c\u4f60\u8bad\u7ec3\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u51c6\u786e\u6027\u5c31\u8d8a\u597d\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u6837\u4e00\u4e2a\u6d45\u7684\u7f51\u7edc\uff0c\u6279\u91cf\u8303\u6570\u548c ELU \u4e0d\u592a\u53ef\u80fd\u4ea7\u751f\u975e\u5e38\u79ef\u6781\u7684\u5f71\u54cd\uff1a\u5b83\u4eec\u5927\u90e8\u5206\u90fd\u662f\u4e3a\u4e86\u66f4\u6df1\u7684\u7f51\u7edc\u800c\u53d1\u5149\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u8fd8\u53ef\u4ee5\u8bad\u7ec3\u64cd\u4f5c\u53d6\u51b3\u4e8e\u66f4\u65b0\u64cd\u4f5c\uff1a with tf.name_scope(\"train\"): optimizer = tf.train.GradientDescentOptimizer(learning_rate) extra_update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS) with tf.control_dependencies(extra_update_ops): training_op = optimizer.minimize(loss) \u8fd9\u6837\uff0c\u4f60\u53ea\u9700\u8981\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8bc4\u4f30training_op\uff0cTensorFlow\u4e5f\u4f1a\u81ea\u52a8\u8fd0\u884c\u66f4\u65b0\u64cd\u4f5c\uff1a sess.run(training_op, feed_dict={training: True, X: X_batch, y: y_batch})","title":"\u6279\u91cf\u6807\u51c6\u5316"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_5","text":"\u51cf\u5c11\u68af\u5ea6\u7206\u70b8\u95ee\u9898\u7684\u4e00\u79cd\u5e38\u7528\u6280\u672f\u662f\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u7b80\u5355\u5730\u526a\u5207\u68af\u5ea6\uff0c\u4f7f\u5b83\u4eec\u4e0d\u8d85\u8fc7\u67d0\u4e2a\u9608\u503c\uff08\u8fd9\u5bf9\u4e8e\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\u662f\u975e\u5e38\u6709\u7528\u7684\uff1b\u53c2\u89c1\u7b2c 14 \u7ae0\uff09\u3002 \u8fd9\u5c31\u662f\u6240\u8c13\u7684\u68af\u5ea6\u88c1\u526a\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4eba\u4eec\u66f4\u559c\u6b22\u6279\u91cf\u6807\u51c6\u5316\uff0c\u4f46\u4e86\u89e3\u68af\u5ea6\u88c1\u526a\u4ee5\u53ca\u5982\u4f55\u5b9e\u73b0\u5b83\u4ecd\u7136\u662f\u6709\u7528\u7684\u3002 \u5728 TensorFlow \u4e2d\uff0c\u4f18\u5316\u5668\u7684 minimize() \u51fd\u6570\u8d1f\u8d23\u8ba1\u7b97\u68af\u5ea6\u5e76\u5e94\u7528\u5b83\u4eec\uff0c\u6240\u4ee5\u60a8\u5fc5\u987b\u9996\u5148\u8c03\u7528\u4f18\u5316\u5668\u7684 compute_gradients() \u65b9\u6cd5\uff0c\u7136\u540e\u4f7f\u7528 clip_by_value() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u88c1\u526a\u68af\u5ea6\u7684\u64cd\u4f5c\uff0c\u6700\u540e \u521b\u5efa\u4e00\u4e2a\u64cd\u4f5c\u6765\u4f7f\u7528\u4f18\u5316\u5668\u7684 apply_gradients() \u65b9\u6cd5\u5e94\u7528\u88c1\u526a\u68af\u5ea6\uff1a threshold = 1.0 optimizer = tf.train.GradientDescentOptimizer(learning_rate) grads_and_vars = optimizer.compute_gradients(loss) capped_gvs = [(tf.clip_by_value(grad, -threshold, threshold), var) for grad, var in grads_and_vars] training_op = optimizer.apply_gradients(capped_gvs) \u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u60a8\u5c06\u5728\u6bcf\u4e2a\u8bad\u7ec3\u9636\u6bb5\u8fd0\u884c\u8fd9\u4e2a training_op \u3002 \u5b83\u5c06\u8ba1\u7b97\u68af\u5ea6\uff0c\u5c06\u5b83\u4eec\u88c1\u526a\u5230 -1.0 \u548c 1.0 \u4e4b\u95f4\uff0c\u5e76\u5e94\u7528\u5b83\u4eec\u3002 threhold \u662f\u60a8\u53ef\u4ee5\u8c03\u6574\u7684\u8d85\u53c2\u6570\u3002","title":"\u68af\u5ea6\u88c1\u526a"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_6","text":"\u4ece\u96f6\u5f00\u59cb\u8bad\u7ec3\u4e00\u4e2a\u975e\u5e38\u5927\u7684 DNN \u901a\u5e38\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u76f8\u53cd\uff0c\u60a8\u5e94\u8be5\u603b\u662f\u5c1d\u8bd5\u627e\u5230\u4e00\u4e2a\u73b0\u6709\u7684\u795e\u7ecf\u7f51\u7edc\u6765\u5b8c\u6210\u4e0e\u60a8\u6b63\u5728\u5c1d\u8bd5\u89e3\u51b3\u7684\u4efb\u52a1\u7c7b\u4f3c\u7684\u4efb\u52a1\uff0c\u7136\u540e\u590d\u7528\u8fd9\u4e2a\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\uff1a\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8fc1\u79fb\u5b66\u4e60\u3002\u8fd9\u4e0d\u4ec5\u4f1a\u5927\u5927\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\uff0c\u8fd8\u5c06\u9700\u8981\u66f4\u5c11\u7684\u8bad\u7ec3\u6570\u636e\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u53ef\u4ee5\u8bbf\u95ee\u7ecf\u8fc7\u8bad\u7ec3\u7684 DNN\uff0c\u5c06\u56fe\u7247\u5206\u4e3a 100 \u4e2a\u4e0d\u540c\u7684\u7c7b\u522b\uff0c\u5305\u62ec\u52a8\u7269\uff0c\u690d\u7269\uff0c\u8f66\u8f86\u548c\u65e5\u5e38\u7269\u54c1\u3002 \u60a8\u73b0\u5728\u60f3\u8981\u8bad\u7ec3\u4e00\u4e2a DNN \u6765\u5bf9\u7279\u5b9a\u7c7b\u578b\u7684\u8f66\u8f86\u8fdb\u884c\u5206\u7c7b\u3002 \u8fd9\u4e9b\u4efb\u52a1\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u6b64\u60a8\u5e94\u8be5\u5c1d\u8bd5\u91cd\u65b0\u4f7f\u7528\u7b2c\u4e00\u4e2a\u7f51\u7edc\u7684\u4e00\u90e8\u5206\uff08\u8bf7\u53c2\u89c1\u56fe 11-4\uff09\u3002 \u5982\u679c\u65b0\u4efb\u52a1\u7684\u8f93\u5165\u56fe\u50cf\u4e0e\u539f\u59cb\u4efb\u52a1\u4e2d\u4f7f\u7528\u7684\u8f93\u5165\u56fe\u50cf\u7684\u5927\u5c0f\u4e0d\u4e00\u81f4\uff0c\u5219\u5fc5\u987b\u6dfb\u52a0\u9884\u5904\u7406\u6b65\u9aa4\u4ee5\u5c06\u5176\u5927\u5c0f\u8c03\u6574\u4e3a\u539f\u59cb\u6a21\u578b\u7684\u9884\u671f\u5927\u5c0f\u3002 \u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u5982\u679c\u8f93\u5165\u5177\u6709\u7c7b\u4f3c\u7684\u4f4e\u7ea7\u5c42\u6b21\u7684\u7279\u5f81\uff0c\u5219\u8fc1\u79fb\u5b66\u4e60\u5c06\u5f88\u597d\u5730\u5de5\u4f5c\u3002","title":"\u590d\u7528\u9884\u8bad\u7ec3\u5c42"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#tensorflow","text":"\u5982\u679c\u539f\u59cb\u6a21\u578b\u4f7f\u7528 TensorFlow \u8fdb\u884c\u8bad\u7ec3\uff0c\u5219\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u5176\u6062\u590d\u5e76\u5728\u65b0\u4efb\u52a1\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff1a [...] # construct the original model with tf.Session() as sess: saver.restore(sess, \"./my_model_final.ckpt\") # continue training the model... \u5b8c\u6574\u4ee3\u7801: n_inputs = 28 * 28 # MNIST n_hidden1 = 300 n_hidden2 = 50 n_hidden3 = 50 n_hidden4 = 50 n_outputs = 10 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") hidden3 = tf.layers.dense(hidden2, n_hidden3, activation=tf.nn.relu, name=\"hidden3\") hidden4 = tf.layers.dense(hidden3, n_hidden4, activation=tf.nn.relu, name=\"hidden4\") hidden5 = tf.layers.dense(hidden4, n_hidden5, activation=tf.nn.relu, name=\"hidden5\") logits = tf.layers.dense(hidden5, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32), name=\"accuracy\") learning_rate = 0.01 threshold = 1.0 optimizer = tf.train.GradientDescentOptimizer(learning_rate) grads_and_vars = optimizer.compute_gradients(loss) capped_gvs = [(tf.clip_by_value(grad, -threshold, threshold), var) for grad, var in grads_and_vars] training_op = optimizer.apply_gradients(capped_gvs) init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: saver.restore(sess, \"./my_model_final.ckpt\") for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) accuracy_val = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Test accuracy:\", accuracy_val) save_path = saver.save(sess, \"./my_new_model_final.ckpt\") \u4f46\u662f\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ea\u9700\u8981\u91cd\u65b0\u4f7f\u7528\u539f\u59cb\u6a21\u578b\u7684\u4e00\u90e8\u5206\uff08\u5c31\u50cf\u6211\u4eec\u5c06\u8981\u8ba8\u8bba\u7684\u90a3\u6837\uff09\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5c06 Saver \u914d\u7f6e\u4e3a\u4ec5\u6062\u590d\u539f\u59cb\u6a21\u578b\u4e2d\u7684\u4e00\u90e8\u5206\u53d8\u91cf\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u53ea\u6062\u590d\u9690\u85cf\u7684\u5c421,2\u548c3\uff1a n_inputs = 28 * 28 # MNIST n_hidden1 = 300 # reused n_hidden2 = 50 # reused n_hidden3 = 50 # reused n_hidden4 = 20 # new! n_outputs = 10 # new! X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") # reused hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") # reused hidden3 = tf.layers.dense(hidden2, n_hidden3, activation=tf.nn.relu, name=\"hidden3\") # reused hidden4 = tf.layers.dense(hidden3, n_hidden4, activation=tf.nn.relu, name=\"hidden4\") # new! logits = tf.layers.dense(hidden4, n_outputs, name=\"outputs\") # new! with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32), name=\"accuracy\") with tf.name_scope(\"train\"): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) [...] # build new model with the same definition as before for hidden layers 1-3 reuse_vars = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope=\"hidden[123]\") # regular expression reuse_vars_dict = dict([(var.op.name, var) for var in reuse_vars]) restore_saver = tf.train.Saver(reuse_vars_dict) # to restore layers 1-3 init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: init.run() restore_saver.restore(sess, \"./my_model_final.ckpt\") for epoch in range(n_epochs): # not shown in the book for iteration in range(mnist.train.num_examples // batch_size): # not shown X_batch, y_batch = mnist.train.next_batch(batch_size) # not shown sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) # not shown accuracy_val = accuracy.eval(feed_dict={X: mnist.test.images, # not shown y: mnist.test.labels}) # not shown print(epoch, \"Test accuracy:\", accuracy_val) # not shown save_path = saver.save(sess, \"./my_new_model_final.ckpt\") \u9996\u5148\u6211\u4eec\u5efa\u7acb\u65b0\u7684\u6a21\u578b\uff0c\u786e\u4fdd\u590d\u5236\u539f\u59cb\u6a21\u578b\u7684\u9690\u85cf\u5c42 1 \u5230 3\u3002\u6211\u4eec\u8fd8\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\u6765\u521d\u59cb\u5316\u6240\u6709\u53d8\u91cf\u3002 \u7136\u540e\u6211\u4eec\u5f97\u5230\u521a\u521a\u7528 trainable = True \uff08\u8fd9\u662f\u9ed8\u8ba4\u503c\uff09\u521b\u5efa\u7684\u6240\u6709\u53d8\u91cf\u7684\u5217\u8868\uff0c\u6211\u4eec\u53ea\u4fdd\u7559\u90a3\u4e9b\u8303\u56f4\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f hidden [123] \u76f8\u5339\u914d\u7684\u53d8\u91cf\uff08\u5373\uff0c\u6211\u4eec\u5f97\u5230\u6240\u6709\u53ef\u8bad\u7ec3\u7684\u9690\u85cf\u5c42 1 \u5230 3 \u4e2d\u7684\u53d8\u91cf\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b57\u5178\uff0c\u5c06\u539f\u59cb\u6a21\u578b\u4e2d\u6bcf\u4e2a\u53d8\u91cf\u7684\u540d\u79f0\u6620\u5c04\u5230\u65b0\u6a21\u578b\u4e2d\u7684\u540d\u79f0\uff08\u901a\u5e38\u9700\u8981\u4fdd\u6301\u5b8c\u5168\u76f8\u540c\u7684\u540d\u79f0\uff09\u3002 \u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Saver \uff0c\u5b83\u5c06\u53ea\u6062\u590d\u8fd9\u4e9b\u53d8\u91cf\uff0c\u5e76\u4e14\u521b\u5efa\u53e6\u4e00\u4e2a Saver \u6765\u4fdd\u5b58\u6574\u4e2a\u65b0\u6a21\u578b\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7b2c 1 \u5c42\u5230\u7b2c 3 \u5c42\u3002\u7136\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u4e00\u4e2a\u4f1a\u8bdd\u5e76\u521d\u59cb\u5316\u6a21\u578b\u4e2d\u7684\u6240\u6709\u53d8\u91cf\uff0c\u7136\u540e\u4ece\u539f\u59cb\u6a21\u578b\u7684\u5c42 1 \u5230 3\u4e2d\u6062\u590d\u53d8\u91cf\u503c\u3002\u6700\u540e\uff0c\u6211\u4eec\u5728\u65b0\u4efb\u52a1\u4e0a\u8bad\u7ec3\u6a21\u578b\u5e76\u4fdd\u5b58\u3002 \u4efb\u52a1\u8d8a\u76f8\u4f3c\uff0c\u60a8\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u7684\u5c42\u8d8a\u591a\uff08\u4ece\u8f83\u4f4e\u5c42\u5f00\u59cb\uff09\u3002 \u5bf9\u4e8e\u975e\u5e38\u76f8\u4f3c\u7684\u4efb\u52a1\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4fdd\u7559\u6240\u6709\u9690\u85cf\u7684\u5c42\uff0c\u53ea\u66ff\u6362\u8f93\u51fa\u5c42\u3002","title":"\u590d\u7528 TensorFlow \u6a21\u578b"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_7","text":"\u5982\u679c\u6a21\u578b\u662f\u4f7f\u7528\u5176\u4ed6\u6846\u67b6\u8fdb\u884c\u8bad\u7ec3\u7684\uff0c\u5219\u9700\u8981\u624b\u52a8\u52a0\u8f7d\u6743\u91cd\uff08\u4f8b\u5982\uff0c\u5982\u679c\u4f7f\u7528 Theano \u8bad\u7ec3\uff0c\u5219\u4f7f\u7528 Theano \u4ee3\u7801\uff09\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u5206\u914d\u7ed9\u76f8\u5e94\u7684\u53d8\u91cf\u3002 \u8fd9\u53ef\u80fd\u662f\u76f8\u5f53\u4e4f\u5473\u7684\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u590d\u5236\u4f7f\u7528\u53e6\u4e00\u4e2a\u6846\u67b6\u8bad\u7ec3\u7684\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u7684\u6743\u91cd\u548c\u504f\u7f6e\uff1a","title":"\u590d\u7528\u6765\u81ea\u5176\u5b83\u6846\u67b6\u7684\u6a21\u578b"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_8","text":"\u7b2c\u4e00\u4e2a DNN \u7684\u8f83\u4f4e\u5c42\u53ef\u80fd\u5df2\u7ecf\u5b66\u4f1a\u4e86\u68c0\u6d4b\u56fe\u7247\u4e2d\u7684\u4f4e\u7ea7\u7279\u5f81\uff0c\u8fd9\u5c06\u5728\u4e24\u4e2a\u56fe\u50cf\u5206\u7c7b\u4efb\u52a1\u4e2d\u6709\u7528\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u6309\u7167\u539f\u6837\u91cd\u65b0\u4f7f\u7528\u8fd9\u4e9b\u5c42\u3002 \u5728\u8bad\u7ec3\u65b0\u7684 DNN \u65f6\uff0c\u201c\u51bb\u7ed3\u201d\u6743\u91cd\u901a\u5e38\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1a\u5982\u679c\u8f83\u4f4e\u5c42\u6743\u91cd\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u8f83\u9ad8\u5c42\u6743\u91cd\u5c06\u66f4\u5bb9\u6613\u8bad\u7ec3\uff08\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u9700\u8981\u5b66\u4e60\u4e00\u4e2a\u79fb\u52a8\u7684\u76ee\u6807\uff09\u3002 \u8981\u5728\u8bad\u7ec3\u671f\u95f4\u51bb\u7ed3\u8f83\u4f4e\u5c42\uff0c\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7ed9\u4f18\u5316\u5668\u5217\u51fa\u8981\u8bad\u7ec3\u7684\u53d8\u91cf\uff0c\u4e0d\u5305\u62ec\u6765\u81ea\u8f83\u4f4e\u5c42\u7684\u53d8\u91cf\uff1a \u7b2c\u4e00\u884c\u83b7\u5f97\u9690\u85cf\u5c42 3 \u548c 4 \u4ee5\u53ca\u8f93\u51fa\u5c42\u4e2d\u6240\u6709\u53ef\u8bad\u7ec3\u53d8\u91cf\u7684\u5217\u8868\u3002 \u8fd9\u7559\u4e0b\u4e86\u9690\u85cf\u5c42 1 \u548c 2 \u4e2d\u7684\u53d8\u91cf\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u53d7\u9650\u5236\u7684\u53ef\u5217\u8868\u53d8\u91cf\u5217\u8868\u63d0\u4f9b\u7ed9 optimizer \u7684 minimize() \u51fd\u6570\u3002\u5f53\u5f53\uff01 \u73b0\u5728\uff0c\u5c42 1 \u548c\u5c42 2 \u88ab\u51bb\u7ed3\uff1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff08\u901a\u5e38\u79f0\u4e3a\u51bb\u7ed3\u5c42\uff09\u3002","title":"\u51bb\u7ed3\u8f83\u4f4e\u5c42"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_9","text":"\u7531\u4e8e\u51bb\u7ed3\u5c42\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7f13\u5b58\u6700\u4e0a\u9762\u7684\u51bb\u7ed3\u5c42\u7684\u8f93\u51fa\u3002 \u7531\u4e8e\u8bad\u7ec3\u8d2f\u7a7f\u6574\u4e2a\u6570\u636e\u96c6\u5f88\u591a\u6b21\uff0c\u8fd9\u5c06\u7ed9\u4f60\u4e00\u4e2a\u5de8\u5927\u7684\u901f\u5ea6\u63d0\u5347\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u53ea\u9700\u8981\u7ecf\u8fc7\u4e00\u6b21\u51bb\u7ed3\u5c42\uff08\u800c\u4e0d\u662f\u6bcf\u4e2a\u8fed\u4ee3\u4e00\u6b21\uff09\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5148\u8fd0\u884c\u6574\u4e2a\u8bad\u7ec3\u96c6\uff08\u5047\u8bbe\u4f60\u6709\u8db3\u591f\u7684\u5185\u5b58\uff09\uff1a hidden2_outputs = sess.run(hidden2, feed_dict={X: X_train}) \u7136\u540e\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u518d\u5bf9\u8bad\u7ec3\u5b9e\u4f8b\u5efa\u7acb\u6279\u6b21\uff0c\u800c\u662f\u4ece\u9690\u85cf\u5c422\u7684\u8f93\u51fa\u5efa\u7acb\u6279\u6b21\uff0c\u5e76\u5c06\u5b83\u4eec\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u64cd\u4f5c\uff1a \u6700\u540e\u4e00\u884c\u8fd0\u884c\u5148\u524d\u5b9a\u4e49\u7684\u8bad\u7ec3\u64cd\u4f5c\uff08\u51bb\u7ed3\u5c42 1 \u548c 2\uff09\uff0c\u5e76\u4ece\u7b2c\u4e8c\u4e2a\u9690\u85cf\u5c42\uff08\u4ee5\u53ca\u8be5\u6279\u6b21\u7684\u76ee\u6807\uff09\u4e3a\u5176\u8f93\u51fa\u4e00\u6279\u8f93\u51fa\u3002 \u56e0\u4e3a\u6211\u4eec\u7ed9 TensorFlow \u9690\u85cf\u5c42 2 \u7684\u8f93\u51fa\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u53bb\u8bc4\u4f30\u5b83\uff08\u6216\u8005\u5b83\u6240\u4f9d\u8d56\u7684\u4efb\u4f55\u8282\u70b9\uff09\u3002","title":"\u7f13\u5b58\u51bb\u7ed3\u5c42"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_10","text":"\u539f\u59cb\u6a21\u578b\u7684\u8f93\u51fa\u5c42\u901a\u5e38\u5e94\u8be5\u88ab\u66ff\u6362\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u65b0\u7684\u4efb\u52a1\u6765\u8bf4\uff0c\u6700\u6709\u53ef\u80fd\u6ca1\u6709\u7528\u5904\uff0c\u751a\u81f3\u53ef\u80fd\u6ca1\u6709\u9002\u5408\u65b0\u4efb\u52a1\u7684\u8f93\u51fa\u6570\u91cf\u3002 \u7c7b\u4f3c\u5730\uff0c\u539f\u59cb\u6a21\u578b\u7684\u8f83\u9ad8\u9690\u85cf\u5c42\u4e0d\u592a\u53ef\u80fd\u50cf\u8f83\u4f4e\u5c42\u4e00\u6837\u6709\u7528\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u65b0\u4efb\u52a1\u6765\u8bf4\u6700\u6709\u7528\u7684\u9ad8\u5c42\u7279\u5f81\u53ef\u80fd\u4e0e\u5bf9\u539f\u59cb\u4efb\u52a1\u6700\u6709\u7528\u7684\u9ad8\u5c42\u7279\u5f81\u660e\u663e\u4e0d\u540c\u3002 \u4f60\u9700\u8981\u627e\u5230\u6b63\u786e\u7684\u5c42\u6570\u6765\u590d\u7528\u3002 \u5c1d\u8bd5\u5148\u51bb\u7ed3\u6240\u6709\u590d\u5236\u7684\u5c42\uff0c\u7136\u540e\u8bad\u7ec3\u6a21\u578b\u5e76\u67e5\u770b\u5b83\u662f\u5982\u4f55\u6267\u884c\u7684\u3002 \u7136\u540e\u5c1d\u8bd5\u89e3\u51bb\u4e00\u4e2a\u6216\u4e24\u4e2a\u8f83\u9ad8\u9690\u85cf\u5c42\uff0c\u8ba9\u53cd\u5411\u4f20\u64ad\u8c03\u6574\u5b83\u4eec\uff0c\u770b\u770b\u6027\u80fd\u662f\u5426\u63d0\u9ad8\u3002 \u60a8\u62e5\u6709\u7684\u8bad\u7ec3\u6570\u636e\u8d8a\u591a\uff0c\u60a8\u53ef\u4ee5\u89e3\u51bb\u7684\u5c42\u6570\u5c31\u8d8a\u591a\u3002 \u5982\u679c\u4ecd\u7136\u65e0\u6cd5\u83b7\u5f97\u826f\u597d\u7684\u6027\u80fd\uff0c\u5e76\u4e14\u60a8\u7684\u8bad\u7ec3\u6570\u636e\u5f88\u5c11\uff0c\u8bf7\u5c1d\u8bd5\u5220\u9664\u9876\u90e8\u7684\u9690\u85cf\u5c42\uff0c\u5e76\u518d\u6b21\u51bb\u7ed3\u6240\u6709\u5269\u4f59\u7684\u9690\u85cf\u5c42\u3002 \u60a8\u53ef\u4ee5\u8fed\u4ee3\uff0c\u76f4\u5230\u627e\u5230\u6b63\u786e\u7684\u5c42\u6570\u91cd\u590d\u4f7f\u7528\u3002 \u5982\u679c\u60a8\u6709\u8db3\u591f\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u66ff\u6362\u9876\u90e8\u7684\u9690\u85cf\u5c42\uff0c\u800c\u4e0d\u662f\u4e22\u6389\u5b83\u4eec\uff0c\u751a\u81f3\u53ef\u4ee5\u6dfb\u52a0\u66f4\u591a\u7684\u9690\u85cf\u5c42\u3002","title":"\u8c03\u6574\uff0c\u5220\u9664\u6216\u66ff\u6362\u8f83\u9ad8\u5c42"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#model-zoos","text":"\u4f60\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u4f60\u60f3\u8981\u89e3\u51b3\u7684\u4efb\u52a1\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\uff1f \u9996\u5148\u770b\u770b\u663e\u7136\u662f\u5728\u4f60\u81ea\u5df1\u7684\u6a21\u578b\u76ee\u5f55\u3002 \u8fd9\u662f\u4fdd\u5b58\u6240\u6709\u6a21\u578b\u5e76\u7ec4\u7ec7\u5b83\u4eec\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u7531\uff0c\u4ee5\u4fbf\u60a8\u4ee5\u540e\u53ef\u4ee5\u8f7b\u677e\u5730\u68c0\u7d22\u5b83\u4eec\u3002 \u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u5728\u6a21\u578b\u52a8\u7269\u56ed\u4e2d\u641c\u7d22\u3002 \u8bb8\u591a\u4eba\u4e3a\u4e86\u5404\u79cd\u4e0d\u540c\u7684\u4efb\u52a1\u800c\u8bad\u7ec3\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u5e76\u4e14\u5584\u610f\u5730\u5411\u516c\u4f17\u53d1\u5e03\u9884\u8bad\u7ec3\u6a21\u578b\u3002 TensorFlow \u5728 https://github.com/tensorflow/models \u4e2d\u6709\u81ea\u5df1\u7684\u6a21\u578b\u52a8\u7269\u56ed\u3002 \u7279\u522b\u662f\uff0c\u5b83\u5305\u542b\u4e86\u5927\u591a\u6570\u6700\u5148\u8fdb\u7684\u56fe\u50cf\u5206\u7c7b\u7f51\u7edc\uff0c\u5982 VGG\uff0cInception \u548c ResNet\uff08\u53c2\u89c1\u7b2c 13 \u7ae0\uff0c\u68c0\u67e5 model/slim \u76ee\u5f55\uff09\uff0c\u5305\u62ec\u4ee3\u7801\uff0c\u9884\u8bad\u7ec3\u6a21\u578b\u548c \u5de5\u5177\u6765\u4e0b\u8f7d\u6d41\u884c\u7684\u56fe\u50cf\u6570\u636e\u96c6\u3002 \u53e6\u4e00\u4e2a\u6d41\u884c\u7684\u6a21\u578b\u52a8\u7269\u56ed\u662f Caffe \u6a21\u578b\u52a8\u7269\u56ed\u3002 \u5b83\u8fd8\u5305\u542b\u8bb8\u591a\u5728\u5404\u79cd\u6570\u636e\u96c6\uff08\u4f8b\u5982\uff0cImageNet\uff0cPlaces \u6570\u636e\u5e93\uff0cCIFAR10 \u7b49\uff09\u4e0a\u8bad\u7ec3\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u6a21\u578b\uff08\u4f8b\u5982\uff0cLeNet\uff0cAlexNet\uff0cZFNet\uff0cGoogLeNet\uff0cVGGNet\uff0c\u5f00\u59cb\uff09\u3002 Saumitro Dasgupta \u5199\u4e86\u4e00\u4e2a\u8f6c\u6362\u5668\uff0c\u53ef\u4ee5\u5728 https://github.com/ethereon/caffetensorflow \u3002","title":"Model Zoos"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_11","text":"\u5047\u8bbe\u4f60\u60f3\u8981\u89e3\u51b3\u4e00\u4e2a\u590d\u6742\u7684\u4efb\u52a1\uff0c\u4f60\u6ca1\u6709\u592a\u591a\u7684\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u4f60\u4e0d\u80fd\u627e\u5230\u4e00\u4e2a\u7c7b\u4f3c\u7684\u4efb\u52a1\u8bad\u7ec3\u6a21\u578b\u3002 \u4e0d\u8981\u5931\u53bb\u6240\u6709\u5e0c\u671b\uff01 \u9996\u5148\uff0c\u4f60\u5f53\u7136\u5e94\u8be5\u5c1d\u8bd5\u6536\u96c6\u66f4\u591a\u7684\u6709\u6807\u7b7e\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u592a\u96be\u6216\u592a\u6602\u8d35\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u8fdb\u884c\u65e0\u76d1\u7763\u7684\u8bad\u7ec3\uff08\u89c1\u56fe 11-5\uff09\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u6709\u5f88\u591a\u672a\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u9010\u5c42\u8bad\u7ec3\u5c42\uff0c\u4ece\u6700\u4f4e\u5c42\u5f00\u59cb\uff0c\u7136\u540e\u4e0a\u5347\uff0c\u4f7f\u7528\u65e0\u76d1\u7763\u7684\u7279\u5f81\u68c0\u6d4b\u7b97\u6cd5\uff0c\u5982\u9650\u5236\u73bb\u5c14\u5179\u66fc\u673a\uff08RBM\uff1b\u89c1\u9644\u5f55 E\uff09\u6216\u81ea\u52a8\u7f16\u7801\u5668\uff08\u89c1\u7b2c 15 \u7ae0\uff09\u3002 \u6bcf\u4e2a\u5c42\u90fd\u88ab\u8bad\u7ec3\u6210\u5148\u524d\u8bad\u7ec3\u8fc7\u7684\u5c42\u7684\u8f93\u51fa\uff08\u9664\u4e86\u88ab\u8bad\u7ec3\u7684\u5c42\u4e4b\u5916\u7684\u6240\u6709\u5c42\u90fd\u88ab\u51bb\u7ed3\uff09\u3002 \u4e00\u65e6\u6240\u6709\u5c42\u90fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u4e86\u8bad\u7ec3\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u76d1\u7763\u5f0f\u5b66\u4e60\uff08\u5373\u53cd\u5411\u4f20\u64ad\uff09\u5bf9\u7f51\u7edc\u8fdb\u884c\u5fae\u8c03\u3002 \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u6f2b\u957f\u800c\u4e4f\u5473\u7684\u8fc7\u7a0b\uff0c\u4f46\u901a\u5e38\u8fd0\u4f5c\u826f\u597d\u3002 \u5b9e\u9645\u4e0a\uff0c\u8fd9\u662f Geoffrey Hinton \u548c\u4ed6\u7684\u56e2\u961f\u5728 2006 \u5e74\u4f7f\u7528\u7684\u6280\u672f\uff0c\u5bfc\u81f4\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u590d\u5174\u548c\u6df1\u5ea6\u5b66\u4e60\u7684\u6210\u529f\u3002 \u76f4\u5230 2010 \u5e74\uff0c\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\uff08\u901a\u5e38\u4f7f\u7528 RBM\uff09\u662f\u6df1\u5ea6\u7f51\u7edc\u7684\u6807\u51c6\uff0c\u53ea\u6709\u5728\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u5f97\u5230\u7f13\u89e3\u4e4b\u540e\uff0c\u7eaf\u8bad\u7ec3 DNN \u624d\u66f4\u4e3a\u666e\u904d\u3002 \u7136\u800c\uff0c\u5f53\u60a8\u6709\u4e00\u4e2a\u590d\u6742\u7684\u4efb\u52a1\u9700\u8981\u89e3\u51b3\u65f6\uff0c\u65e0\u76d1\u7763\u8bad\u7ec3\uff08\u73b0\u5728\u901a\u5e38\u4f7f\u7528\u81ea\u52a8\u7f16\u7801\u5668\u800c\u4e0d\u662f RBM\uff09\u4ecd\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u6ca1\u6709\u7c7b\u4f3c\u7684\u6a21\u578b\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u800c\u4e14\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\u5f88\u5c11\uff0c\u4f46\u662f\u5927\u91cf\u7684\u672a\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\u3002\uff08\u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u63d0\u51fa\u4e00\u4e2a\u76d1\u7763\u7684\u4efb\u52a1\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u6536\u96c6\u5927\u91cf\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u7136\u540e\u4f7f\u7528\u8fc1\u79fb\u5b66\u4e60\uff0c\u5982\u524d\u6240\u8ff0\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u8981\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u8bc6\u522b\u56fe\u7247\u4e2d\u7684\u670b\u53cb\uff0c\u4f60\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u4e0b\u8f7d\u6570\u767e\u4e07\u5f20\u8138\u5e76\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668\u6765\u68c0\u6d4b\u4e24\u5f20\u8138\u662f\u5426\u76f8\u540c\uff0c\u7136\u540e\u4f7f\u7528\u6b64\u5206\u7c7b\u5668\u5c06\u65b0\u56fe\u7247\u4e0e\u4f60\u670b\u53cb\u7684\u6bcf\u5f20\u7167\u7247\u505a\u6bd4\u8f83\u3002\uff09","title":"\u65e0\u76d1\u7763\u7684\u9884\u8bad\u7ec3"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_12","text":"\u6700\u540e\u4e00\u79cd\u9009\u62e9\u662f\u5728\u8f85\u52a9\u4efb\u52a1\u4e0a\u8bad\u7ec3\u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u83b7\u53d6\u6216\u751f\u6210\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u7136\u540e\u91cd\u65b0\u4f7f\u7528\u8be5\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\u6765\u5b8c\u6210\u60a8\u7684\u5b9e\u9645\u4efb\u52a1\u3002 \u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\u5c06\u5b66\u4e60\u53ef\u80fd\u88ab\u7b2c\u4e8c\u4e2a\u795e\u7ecf\u7f51\u7edc\u91cd\u590d\u4f7f\u7528\u7684\u7279\u5f81\u68c0\u6d4b\u5668\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5efa\u7acb\u4e00\u4e2a\u8bc6\u522b\u9762\u5b54\u7684\u7cfb\u7edf\uff0c\u4f60\u53ef\u80fd\u53ea\u6709\u51e0\u4e2a\u4eba\u7684\u7167\u7247 - \u663e\u7136\u4e0d\u8db3\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u597d\u7684\u5206\u7c7b\u5668\u3002 \u6536\u96c6\u6bcf\u4e2a\u4eba\u7684\u6570\u767e\u5f20\u7167\u7247\u5c06\u662f\u4e0d\u5b9e\u9645\u7684\u3002 \u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u6536\u96c6\u5927\u91cf\u968f\u673a\u4eba\u5458\u7684\u7167\u7247\uff0c\u5e76\u8bad\u7ec3\u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6765\u68c0\u6d4b\u4e24\u5f20\u4e0d\u540c\u7684\u7167\u7247\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4eba\u3002 \u8fd9\u6837\u7684\u7f51\u7edc\u5c06\u5b66\u4e60\u9762\u90e8\u4f18\u79c0\u7684\u7279\u5f81\u68c0\u6d4b\u5668\uff0c\u6240\u4ee5\u91cd\u590d\u4f7f\u7528\u5b83\u7684\u8f83\u4f4e\u5c42\u5c06\u5141\u8bb8\u4f60\u4f7f\u7528\u5f88\u5c11\u7684\u8bad\u7ec3\u6570\u636e\u6765\u8bad\u7ec3\u4e00\u4e2a\u597d\u7684\u9762\u90e8\u5206\u7c7b\u5668\u3002 \u6536\u96c6\u6ca1\u6709\u6807\u7b7e\u7684\u8bad\u7ec3\u6837\u672c\u901a\u5e38\u662f\u76f8\u5f53\u4fbf\u5b9c\u7684\uff0c\u4f46\u6807\u6ce8\u5b83\u4eec\u5374\u76f8\u5f53\u6602\u8d35\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e00\u79cd\u5e38\u89c1\u7684\u6280\u672f\u662f\u5c06\u6240\u6709\u8bad\u7ec3\u6837\u4f8b\u6807\u8bb0\u4e3a\u201c\u597d\u201d\uff0c\u7136\u540e\u901a\u8fc7\u7834\u574f\u597d\u7684\u8bad\u7ec3\u6837\u4f8b\u4ea7\u751f\u8bb8\u591a\u65b0\u7684\u8bad\u7ec3\u6837\u4f8b\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6837\u4f8b\u6807\u8bb0\u4e3a\u201c\u574f\u201d\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u8bad\u7ec3\u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc \u5c06\u5b9e\u4f8b\u5206\u7c7b\u4e3a\u597d\u6216\u4e0d\u597d\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4e0b\u8f7d\u6570\u767e\u4e07\u4e2a\u53e5\u5b50\uff0c\u5c06\u5176\u6807\u8bb0\u4e3a\u201c\u597d\u201d\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u53e5\u5b50\u4e2d\u968f\u673a\u66f4\u6539\u4e00\u4e2a\u5355\u8bcd\uff0c\u5e76\u5c06\u7ed3\u679c\u8bed\u53e5\u6807\u8bb0\u4e3a\u201c\u4e0d\u597d\u201d\u3002\u5982\u679c\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u544a\u8bc9\u201cThe dog sleeps\u201d\u662f\u597d\u7684\u53e5\u5b50\uff0c\u4f46\u201cThe dog they\u201d\u662f\u574f\u7684\uff0c\u5b83\u53ef\u80fd\u77e5\u9053\u76f8\u5f53\u591a\u7684\u8bed\u8a00\u3002 \u91cd\u7528\u5176\u8f83\u4f4e\u5c42\u53ef\u80fd\u6709\u52a9\u4e8e\u8bb8\u591a\u8bed\u8a00\u5904\u7406\u4efb\u52a1\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8bad\u7ec3\u7b2c\u4e00\u4e2a\u7f51\u7edc\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u8f93\u51fa\u4e00\u4e2a\u5206\u6570\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2a\u635f\u5931\u51fd\u6570\u786e\u4fdd\u4e00\u4e2a\u597d\u7684\u5b9e\u4f8b\u7684\u5206\u6570\u5927\u4e8e\u4e00\u4e2a\u574f\u5b9e\u4f8b\u7684\u5206\u6570\u81f3\u5c11\u4e00\u5b9a\u7684\u8fb9\u9645\u3002 \u8fd9\u88ab\u79f0\u4e3a\u6700\u5927\u8fb9\u9645\u5b66\u4e60.","title":"\u5728\u8f85\u52a9\u4efb\u52a1\u4e0a\u9884\u8bad\u7ec3"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_13","text":"\u8bad\u7ec3\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u4f1a\u975e\u5e38\u7f13\u6162\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u56db\u79cd\u52a0\u901f\u8bad\u7ec3\u7684\u65b9\u6cd5\uff08\u5e76\u4e14\u8fbe\u5230\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff09\uff1a\u5bf9\u8fde\u63a5\u6743\u91cd\u5e94\u7528\u826f\u597d\u7684\u521d\u59cb\u5316\u7b56\u7565\uff0c\u4f7f\u7528\u826f\u597d\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u4f7f\u7528\u6279\u91cf\u89c4\u8303\u5316\u4ee5\u53ca\u91cd\u7528\u9884\u8bad\u7ec3\u7f51\u7edc\u7684\u90e8\u5206\u3002 \u53e6\u4e00\u4e2a\u5de8\u5927\u7684\u901f\u5ea6\u63d0\u5347\u6765\u81ea\u4f7f\u7528\u6bd4\u666e\u901a\u6e10\u53d8\u4e0b\u964d\u4f18\u5316\u5668\u66f4\u5feb\u7684\u4f18\u5316\u5668\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u6700\u6d41\u884c\u7684\uff1a\u52a8\u91cf\u4f18\u5316\uff0cNesterov \u52a0\u901f\u68af\u5ea6\uff0cAdaGrad\uff0cRMSProp\uff0c\u6700\u540e\u662f Adam \u4f18\u5316\u3002 \u5267\u900f\uff1a\u672c\u8282\u7684\u7ed3\u8bba\u662f\uff0c\u60a8\u51e0\u4e4e\u603b\u662f\u5e94\u8be5\u4f7f\u7528 Adam_optimization \uff0c\u6240\u4ee5\u5982\u679c\u60a8\u4e0d\u5173\u5fc3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u53ea\u9700\u4f7f\u7528 AdamOptimizer \u66ff\u6362\u60a8\u7684 GradientDescentOptimizer \uff0c\u7136\u540e\u8df3\u5230\u4e0b\u4e00\u8282\uff01 \u53ea\u9700\u8981\u8fd9\u4e48\u5c0f\u7684\u6539\u52a8\uff0c\u8bad\u7ec3\u901a\u5e38\u4f1a\u5feb\u51e0\u500d\u3002 \u4f46\u662f\uff0cAdam \u4f18\u5316\u786e\u5b9e\u6709\u4e09\u4e2a\u53ef\u4ee5\u8c03\u6574\u7684\u8d85\u53c2\u6570\uff08\u52a0\u4e0a\u5b66\u4e60\u7387\uff09\u3002 \u9ed8\u8ba4\u503c\u901a\u5e38\u5de5\u4f5c\u7684\u4e0d\u9519\uff0c\u4f46\u5982\u679c\u60a8\u9700\u8981\u8c03\u6574\u5b83\u4eec\uff0c\u77e5\u9053\u4ed6\u4eec\u600e\u4e48\u5b9e\u73b0\u7684\u53ef\u80fd\u4f1a\u6709\u5e2e\u52a9\u3002 Adam \u4f18\u5316\u7ed3\u5408\u4e86\u6765\u81ea\u5176\u4ed6\u4f18\u5316\u7b97\u6cd5\u7684\u51e0\u4e2a\u60f3\u6cd5\uff0c\u6240\u4ee5\u5148\u770b\u770b\u8fd9\u4e9b\u7b97\u6cd5\u662f\u6709\u7528\u7684\u3002","title":"\u66f4\u5feb\u7684\u4f18\u5316\u5668"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_14","text":"\u60f3\u8c61\u4e00\u4e0b\uff0c\u4e00\u4e2a\u4fdd\u9f84\u7403\u5728\u4e00\u4e2a\u5149\u6ed1\u7684\u8868\u9762\u4e0a\u5e73\u7f13\u7684\u659c\u5761\u4e0a\u6eda\u52a8\uff1a\u5b83\u4f1a\u7f13\u6162\u5730\u5f00\u59cb\uff0c\u4f46\u662f\u5b83\u4f1a\u5f88\u5feb\u5730\u8fbe\u5230\u6700\u7ec8\u7684\u901f\u5ea6\uff08\u5982\u679c\u6709\u4e00\u4e9b\u6469\u64e6\u6216\u7a7a\u6c14\u963b\u529b\u7684\u8bdd\uff09\u3002 \u8fd9\u662f Boris Polyak \u5728 1964 \u5e74\u63d0\u51fa\u7684\u52a8\u91cf\u4f18\u5316\u80cc\u540e\u7684\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u60f3\u6cd5\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u666e\u901a\u7684\u68af\u5ea6\u4e0b\u964d\u53ea\u9700\u8981\u6cbf\u7740\u659c\u5761\u8fdb\u884c\u5c0f\u7684\u6709\u89c4\u5f8b\u7684\u4e0b\u964d\u6b65\u9aa4\uff0c\u6240\u4ee5\u9700\u8981\u66f4\u591a\u7684\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\u5e95\u90e8\u3002 \u56de\u60f3\u4e00\u4e0b\uff0c\u68af\u5ea6\u4e0b\u964d\u53ea\u662f\u901a\u8fc7\u76f4\u63a5\u51cf\u53bb\u635f\u5931\u51fd\u6570 J(\u03b8) \u76f8\u5bf9\u4e8e\u6743\u91cd \u03b8 \u7684\u68af\u5ea6\uff0c\u4e58\u4ee5\u5b66\u4e60\u7387 \u03b7 \u6765\u66f4\u65b0\u6743\u91cd \u03b8 \u3002 \u65b9\u7a0b\u662f\uff1a \u3002\u5b83\u4e0d\u5173\u5fc3\u65e9\u671f\u7684\u68af\u5ea6\u662f\u4ec0\u4e48\u3002 \u5982\u679c\u5c40\u90e8\u68af\u5ea6\u5f88\u5c0f\uff0c\u5219\u4f1a\u975e\u5e38\u7f13\u6162\u3002 \u52a8\u91cf\u4f18\u5316\u5f88\u5173\u5fc3\u4ee5\u524d\u7684\u68af\u5ea6\uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u5b83\u5c06\u52a8\u91cf\u77e2\u91cf m \uff08\u4e58\u4ee5\u5b66\u4e60\u7387 \u03b7 \uff09\u4e0e\u5c40\u90e8\u68af\u5ea6\u76f8\u52a0\uff0c\u5e76\u4e14\u901a\u8fc7\u7b80\u5355\u5730\u51cf\u53bb\u8be5\u52a8\u91cf\u77e2\u91cf\u6765\u66f4\u65b0\u6743\u91cd\uff08\u53c2\u89c1\u516c\u5f0f 11-4\uff09\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u68af\u5ea6\u7528\u4f5c\u52a0\u901f\u5ea6\uff0c\u4e0d\u7528\u4f5c\u901f\u5ea6\u3002 \u4e3a\u4e86\u6a21\u62df\u67d0\u79cd\u6469\u64e6\u673a\u5236\uff0c\u907f\u514d\u52a8\u91cf\u8fc7\u5927\uff0c\u8be5\u7b97\u6cd5\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u8d85\u53c2\u6570 \u03b2 \uff0c\u7b80\u79f0\u4e3a\u52a8\u91cf\uff0c\u5b83\u5fc5\u987b\u8bbe\u7f6e\u5728 0\uff08\u9ad8\u6469\u64e6\uff09\u548c 1\uff08\u65e0\u6469\u64e6\uff09\u4e4b\u95f4\u3002 \u5178\u578b\u7684\u52a8\u91cf\u503c\u662f 0.9\u3002 \u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u9a8c\u8bc1\uff0c\u5982\u679c\u68af\u5ea6\u4fdd\u6301\u4e0d\u53d8\uff0c\u5219\u6700\u7ec8\u901f\u5ea6\uff08\u5373\uff0c\u6743\u91cd\u66f4\u65b0\u7684\u6700\u5927\u5927\u5c0f\uff09\u7b49\u4e8e\u8be5\u68af\u5ea6\u4e58\u4ee5\u5b66\u4e60\u7387 \u03b7 \u4e58\u4ee5 1/(1-\u03b2) \u3002 \u4f8b\u5982\uff0c\u5982\u679c \u03b2 = 0.9 \uff0c\u5219\u6700\u7ec8\u901f\u5ea6\u7b49\u4e8e\u5b66\u4e60\u7387\u7684\u68af\u5ea6\u4e58\u4ee5 10 \u500d\uff0c\u56e0\u6b64\u52a8\u91cf\u4f18\u5316\u6bd4\u68af\u5ea6\u4e0b\u964d\u5feb 10 \u500d\uff01 \u8fd9\u4f7f\u52a8\u91cf\u4f18\u5316\u6bd4\u68af\u5ea6\u4e0b\u964d\u5feb\u5f97\u591a\u3002 \u7279\u522b\u662f\uff0c\u6211\u4eec\u5728\u7b2c\u56db\u7ae0\u4e2d\u770b\u5230\uff0c\u5f53\u8f93\u5165\u91cf\u5177\u6709\u975e\u5e38\u4e0d\u540c\u7684\u5c3a\u5ea6\u65f6\uff0c\u635f\u5931\u51fd\u6570\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u7ec6\u957f\u7684\u7897\uff08\u89c1\u56fe 4-7\uff09\u3002 \u68af\u5ea6\u4e0b\u964d\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u8981\u82b1\u5f88\u957f\u7684\u65f6\u95f4\u624d\u80fd\u5230\u8fbe\u5e95\u90e8\u3002 \u76f8\u53cd\uff0c\u52a8\u91cf\u4f18\u5316\u4f1a\u8d8a\u6765\u8d8a\u5feb\u5730\u6eda\u4e0b\u5c71\u8c37\u5e95\u90e8\uff0c\u76f4\u5230\u8fbe\u5230\u5e95\u90e8\uff08\u6700\u4f73\uff09\u3002 \u5728\u4e0d\u4f7f\u7528\u6279\u6807\u51c6\u5316\u7684\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u8f83\u9ad8\u5c42\u5f80\u5f80\u4f1a\u5f97\u5230\u5177\u6709\u4e0d\u540c\u7684\u5c3a\u5ea6\u7684\u8f93\u5165\uff0c\u6240\u4ee5\u4f7f\u7528\u52a8\u91cf\u4f18\u5316\u4f1a\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002 \u5b83\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u6eda\u8fc7\u5c40\u90e8\u6700\u4f18\u503c\u3002 \u7531\u4e8e\u52a8\u91cf\u7684\u539f\u56e0\uff0c\u4f18\u5316\u5668\u53ef\u80fd\u4f1a\u8d85\u8c03\u4e00\u4e9b\uff0c\u7136\u540e\u518d\u56de\u6765\uff0c\u518d\u6b21\u8d85\u8c03\uff0c\u5e76\u5728\u7a33\u5b9a\u5728\u6700\u5c0f\u503c\u4e4b\u524d\u591a\u6b21\u632f\u8361\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u7cfb\u7edf\u4e2d\u6709\u4e00\u70b9\u6469\u64e6\u7684\u539f\u56e0\u4e4b\u4e00\uff1a\u5b83\u6d88\u9664\u4e86\u8fd9\u4e9b\u632f\u8361\uff0c\u4ece\u800c\u52a0\u901f\u4e86\u6536\u655b\u3002 \u5728 TensorFlow \u4e2d\u5b9e\u73b0\u52a8\u91cf\u4f18\u5316\u662f\u4e00\u4ef6\u7b80\u5355\u7684\u4e8b\u60c5\uff1a\u53ea\u9700\u7528 MomentumOptimizer \u66ff\u6362 GradientDescentOptimizer \uff0c\u7136\u540e\u8eba\u4e0b\u6765\u8d5a\u94b1\uff01 \u52a8\u91cf\u4f18\u5316\u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u5b83\u589e\u52a0\u4e86\u53e6\u4e00\u4e2a\u8d85\u53c2\u6570\u6765\u8c03\u6574\u3002 \u7136\u800c\uff0c0.9 \u7684\u52a8\u91cf\u503c\u901a\u5e38\u5728\u5b9e\u8df5\u4e2d\u8fd0\u884c\u826f\u597d\uff0c\u51e0\u4e4e\u603b\u662f\u6bd4\u68af\u5ea6\u4e0b\u964d\u5feb\u3002","title":"\u52a8\u91cf\u4f18\u5316"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#nesterov","text":"Yurii Nesterov \u5728 1983 \u5e74\u63d0\u51fa\u7684\u52a8\u91cf\u4f18\u5316\u7684\u4e00\u4e2a\u5c0f\u53d8\u4f53\u51e0\u4e4e\u603b\u662f\u6bd4\u666e\u901a\u7684\u52a8\u91cf\u4f18\u5316\u66f4\u5feb\u3002 Nesterov \u52a8\u91cf\u4f18\u5316\u6216 Nesterov \u52a0\u901f\u68af\u5ea6\uff08Nesterov Accelerated Gradient\uff0cNAG\uff09\u7684\u601d\u60f3\u662f\u6d4b\u91cf\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u4e0d\u662f\u5728\u5c40\u90e8\u4f4d\u7f6e\uff0c\u800c\u662f\u5728\u52a8\u91cf\u65b9\u5411\u7a0d\u5fae\u9760\u524d\uff08\u89c1\u516c\u5f0f 11-5\uff09\u3002 \u4e0e\u666e\u901a\u7684\u52a8\u91cf\u4f18\u5316\u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\u68af\u5ea6\u662f\u5728 \u03b8+\u03b2m \u800c\u4e0d\u662f\u5728 \u03b8 \u5904\u6d4b\u91cf\u7684\u3002 \u8fd9\u4e2a\u5c0f\u5c0f\u7684\u8c03\u6574\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u4e00\u822c\u6765\u8bf4\uff0c\u52a8\u91cf\u77e2\u91cf\u5c06\u6307\u5411\u6b63\u786e\u7684\u65b9\u5411\uff08\u5373\u671d\u5411\u6700\u4f18\u65b9\u5411\uff09\uff0c\u6240\u4ee5\u4f7f\u7528\u5728\u8be5\u65b9\u5411\u4e0a\u6d4b\u5f97\u7684\u68af\u5ea6\u7a0d\u5fae\u66f4\u7cbe\u786e\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 \u539f\u59cb\u4f4d\u7f6e\u7684\u68af\u5ea6\uff0c\u5982\u56fe11-6\u6240\u793a\uff08\u5176\u4e2d \u22071 \u4ee3\u8868\u5728\u8d77\u70b9 \u03b8 \u5904\u6d4b\u91cf\u7684\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\uff0c \u22072 \u4ee3\u8868\u4f4d\u4e8e \u03b8+\u03b2m \u7684\u70b9\u5904\u7684\u68af\u5ea6\uff09\u3002 \u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0cNesterov \u66f4\u65b0\u7a0d\u5fae\u9760\u8fd1\u6700\u4f73\u503c\u3002 \u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fd9\u4e9b\u5c0f\u7684\u6539\u8fdb\u52a0\u8d77\u6765\uff0cNAG \u6700\u7ec8\u6bd4\u5e38\u89c4\u7684\u52a8\u91cf\u4f18\u5316\u5feb\u5f97\u591a\u3002 \u6b64\u5916\uff0c\u8bf7\u6ce8\u610f\uff0c\u5f53\u52a8\u91cf\u63a8\u52a8\u6743\u91cd\u6a2a\u8de8\u5c71\u8c37\u65f6\uff0c\u25bd1\u7ee7\u7eed\u63a8\u8fdb\u8d8a\u8fc7\u5c71\u8c37\uff0c\u800c\u25bd2\u63a8\u56de\u5c71\u8c37\u7684\u5e95\u90e8\u3002 \u8fd9\u6709\u52a9\u4e8e\u51cf\u5c11\u632f\u8361\uff0c\u4ece\u800c\u66f4\u5feb\u5730\u6536\u655b\u3002 \u4e0e\u5e38\u89c4\u7684\u52a8\u91cf\u4f18\u5316\u76f8\u6bd4\uff0cNAG \u51e0\u4e4e\u603b\u80fd\u52a0\u901f\u8bad\u7ec3\u3002 \u8981\u4f7f\u7528\u5b83\uff0c\u53ea\u9700\u5728\u521b\u5efa MomentumOptimizer \u65f6\u8bbe\u7f6e use_nesterov = True \uff1a","title":"Nesterov \u52a0\u901f\u68af\u5ea6"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#adagrad","text":"\u518d\u6b21\u8003\u8651\u7ec6\u957f\u7897\u7684\u95ee\u9898\uff1a\u68af\u5ea6\u4e0b\u964d\u4ece\u6700\u9661\u5ced\u7684\u659c\u5761\u5feb\u901f\u4e0b\u964d\uff0c\u7136\u540e\u7f13\u6162\u5730\u4e0b\u5230\u8c37\u5e95\u3002 \u5982\u679c\u7b97\u6cd5\u80fd\u591f\u65e9\u671f\u68c0\u6d4b\u5230\u8fd9\u4e2a\u95ee\u9898\u5e76\u4e14\u7ea0\u6b63\u5b83\u7684\u65b9\u5411\u6765\u6307\u5411\u5168\u5c40\u6700\u4f18\u70b9\uff0c\u90a3\u5c06\u662f\u975e\u5e38\u597d\u7684\u3002 AdaGrad \u7b97\u6cd5\u901a\u8fc7\u6cbf\u7740\u6700\u9661\u7684\u7ef4\u5ea6\u7f29\u5c0f\u68af\u5ea6\u5411\u91cf\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff08\u89c1\u516c\u5f0f 11-6\uff09\uff1a \u7b2c\u4e00\u6b65\u5c06\u68af\u5ea6\u7684\u5e73\u65b9\u7d2f\u52a0\u5230\u77e2\u91cf s \u4e2d\uff08 \u2297 \u7b26\u53f7\u8868\u793a\u5355\u5143\u4e58\u6cd5\uff09\u3002 \u8fd9\u4e2a\u5411\u91cf\u5316\u5f62\u5f0f\u76f8\u5f53\u4e8e\u5411\u91cf s \u7684\u6bcf\u4e2a\u5143\u7d20 si \u8ba1\u7b97 \u3002\u6362\u4e00\u79cd\u8bf4\u6cd5\uff0c\u6bcf\u4e2a \u7d2f\u52a0\u635f\u5931\u51fd\u6570\u5bf9\u53c2\u6570 \u7684\u504f\u5bfc\u6570\u7684\u5e73\u65b9\u3002 \u5982\u679c\u635f\u5931\u51fd\u6570\u6cbf\u7740\u7b2c i \u7ef4\u9661\u5ced\uff0c\u5219\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c \u5c06\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\u3002 \u7b2c\u4e8c\u6b65\u51e0\u4e4e\u4e0e\u68af\u5ea6\u4e0b\u964d\u76f8\u540c\uff0c\u4f46\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u4e0d\u540c\uff1a\u68af\u5ea6\u77e2\u91cf\u6309\u6bd4\u4f8b\u7f29\u5c0f \uff08 \u2298 \u7b26\u53f7\u8868\u793a\u5143\u7d20\u5206\u5272\uff0c \u03b5 \u662f\u907f\u514d\u88ab\u96f6\u9664\u7684\u5e73\u6ed1\u9879\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a \u3002 \u8fd9\u4e2a\u77e2\u91cf\u5316\u7684\u5f62\u5f0f\u76f8\u5f53\u4e8e\u8ba1\u7b97 \u5bf9\u4e8e\u6240\u6709\u53c2\u6570 \uff08\u540c\u65f6\uff09\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u79cd\u7b97\u6cd5\u4f1a\u964d\u4f4e\u5b66\u4e60\u901f\u5ea6\uff0c\u4f46\u5bf9\u4e8e\u9661\u5ced\u7684\u5c3a\u5bf8\uff0c\u5176\u901f\u5ea6\u8981\u5feb\u4e8e\u5177\u6709\u6e29\u548c\u7684\u659c\u7387\u7684\u5c3a\u5bf8\u3002 \u8fd9\u88ab\u79f0\u4e3a\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u3002 \u5b83\u6709\u52a9\u4e8e\u5c06\u66f4\u65b0\u7684\u7ed3\u679c\u66f4\u76f4\u63a5\u5730\u6307\u5411\u5168\u5c40\u6700\u4f18\uff08\u89c1\u56fe 11-7\uff09\u3002 \u53e6\u4e00\u4e2a\u597d\u5904\u662f\u5b83\u4e0d\u9700\u8981\u90a3\u4e48\u591a\u7684\u53bb\u8c03\u6574\u5b66\u4e60\u7387\u8d85\u53c2\u6570 \u03b7 \u3002 \u5bf9\u4e8e\u7b80\u5355\u7684\u4e8c\u6b21\u95ee\u9898\uff0cAdaGrad \u7ecf\u5e38\u8868\u73b0\u826f\u597d\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u5b83\u7ecf\u5e38\u505c\u6b62\u5f97\u592a\u65e9\u3002 \u5b66\u4e60\u7387\u88ab\u7f29\u51cf\u5f97\u592a\u591a\uff0c\u4ee5\u81f3\u4e8e\u5728\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u4e4b\u524d\uff0c\u7b97\u6cd5\u5b8c\u5168\u505c\u6b62\u3002 \u6240\u4ee5\uff0c\u5373\u4f7f TensorFlow \u6709\u4e00\u4e2a AdagradOptimizer \uff0c\u4f60\u4e5f\u4e0d\u5e94\u8be5\u7528\u5b83\u6765\u8bad\u7ec3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff08\u867d\u7136\u5bf9\u7ebf\u6027\u56de\u5f52\u8fd9\u6837\u7b80\u5355\u7684\u4efb\u52a1\u53ef\u80fd\u662f\u6709\u6548\u7684\uff09\u3002","title":"AdaGrad"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#rmsprop","text":"\u5c3d\u7ba1 AdaGrad \u7684\u901f\u5ea6\u53d8\u6162\u4e86\u4e00\u70b9\uff0c\u5e76\u4e14\u4ece\u672a\u6536\u655b\u5230\u5168\u5c40\u6700\u4f18\uff0c\u4f46\u662f RMSProp \u7b97\u6cd5\u901a\u8fc7\u4ec5\u7d2f\u79ef\u6700\u8fd1\u8fed\u4ee3\uff08\u800c\u4e0d\u662f\u4ece\u8bad\u7ec3\u5f00\u59cb\u4ee5\u6765\u7684\u6240\u6709\u68af\u5ea6\uff09\u7684\u68af\u5ea6\u6765\u4fee\u6b63\u8fd9\u4e2a\u95ee\u9898\u3002 \u5b83\u901a\u8fc7\u5728\u7b2c\u4e00\u6b65\u4e2d\u4f7f\u7528\u6307\u6570\u8870\u51cf\u6765\u5b9e\u73b0\uff08\u89c1\u516c\u5f0f 11-7\uff09\u3002 \u4ed6\u7684\u8870\u53d8\u7387 \u03b2 \u901a\u5e38\u8bbe\u5b9a\u4e3a 0.9\u3002 \u662f\u7684\uff0c\u5b83\u53c8\u662f\u4e00\u4e2a\u65b0\u7684\u8d85\u53c2\u6570\uff0c\u4f46\u662f\u8fd9\u4e2a\u9ed8\u8ba4\u503c\u901a\u5e38\u8fd0\u884c\u826f\u597d\uff0c\u6240\u4ee5\u4f60\u53ef\u80fd\u6839\u672c\u4e0d\u9700\u8981\u8c03\u6574\u5b83\u3002 \u6b63\u5982\u60a8\u6240\u6599\uff0cTensorFlow \u62e5\u6709\u4e00\u4e2a RMSPropOptimizer \u7c7b\uff1a \u9664\u4e86\u975e\u5e38\u7b80\u5355\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u4f18\u5316\u5668\u51e0\u4e4e\u603b\u662f\u6bd4 AdaGrad \u6267\u884c\u5f97\u66f4\u597d\u3002 \u5b83\u901a\u5e38\u4e5f\u6bd4\u52a8\u91cf\u4f18\u5316\u548c Nesterov \u52a0\u901f\u68af\u5ea6\u8868\u73b0\u66f4\u597d\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u9996\u9009\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u76f4\u5230 Adam \u4f18\u5316\u51fa\u73b0\u3002","title":"RMSProp"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#adam","text":"Adam\uff0c\u4ee3\u8868\u81ea\u9002\u5e94\u77e9\u4f30\u8ba1\uff0c\u7ed3\u5408\u4e86\u52a8\u91cf\u4f18\u5316\u548c RMSProp \u7684\u601d\u60f3\uff1a\u5c31\u50cf\u52a8\u91cf\u4f18\u5316\u4e00\u6837\uff0c\u5b83\u8ffd\u8e2a\u8fc7\u53bb\u68af\u5ea6\u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c\uff0c\u5c31\u50cf RMSProp \u4e00\u6837\uff0c\u5b83\u8ddf\u8e2a\u8fc7\u53bb\u5e73\u65b9\u68af\u5ea6\u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c \uff08\u89c1\u65b9\u7a0b\u5f0f 11-8\uff09\u3002 T \u4ee3\u8868\u8fed\u4ee3\u6b21\u6570\uff08\u4ece 1 \u5f00\u59cb\uff09\u3002 \u5982\u679c\u4f60\u53ea\u770b\u6b65\u9aa4 1, 2 \u548c 5\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230 Adam \u4e0e\u52a8\u91cf\u4f18\u5316\u548c RMSProp \u7684\u76f8\u4f3c\u6027\u3002 \u552f\u4e00\u7684\u533a\u522b\u662f\u7b2c 1 \u6b65\u8ba1\u7b97\u6307\u6570\u8870\u51cf\u7684\u5e73\u5747\u503c\uff0c\u800c\u4e0d\u662f\u6307\u6570\u8870\u51cf\u7684\u548c\uff0c\u4f46\u9664\u4e86\u4e00\u4e2a\u5e38\u6570\u56e0\u5b50\uff08\u8870\u51cf\u5e73\u5747\u503c\u53ea\u662f\u8870\u51cf\u548c\u7684 1 - \u03b21 \u500d\uff09\u4e4b\u5916\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u7b49\u6548\u7684\u3002 \u6b65\u9aa4 3 \u548c\u6b65\u9aa4 4 \u662f\u4e00\u4e2a\u6280\u672f\u7ec6\u8282\uff1a\u7531\u4e8e m \u548c s \u521d\u59cb\u5316\u4e3a 0\uff0c\u6240\u4ee5\u5728\u8bad\u7ec3\u5f00\u59cb\u65f6\u5b83\u4eec\u4f1a\u504f\u54110\uff0c\u6240\u4ee5\u8fd9\u4e24\u6b65\u5c06\u5728\u8bad\u7ec3\u5f00\u59cb\u65f6\u5e2e\u52a9\u63d0\u9ad8 m \u548c s \u3002 \u52a8\u91cf\u8870\u51cf\u8d85\u53c2\u6570 \u03b21 \u901a\u5e38\u521d\u59cb\u5316\u4e3a 0.9\uff0c\u800c\u7f29\u653e\u8870\u51cf\u8d85\u53c2\u6570 \u03b22 \u901a\u5e38\u521d\u59cb\u5316\u4e3a 0.999\u3002 \u5982\u524d\u6240\u8ff0\uff0c\u5e73\u6ed1\u9879 \u03b5 \u901a\u5e38\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\uff0c\u4f8b\u5982 \u3002\u8fd9\u4e9b\u662f TensorFlow \u7684 AdamOptimizer \u7c7b\u7684\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\uff1a \u5b9e\u9645\u4e0a\uff0c\u7531\u4e8e Adam \u662f\u4e00\u79cd\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u7b97\u6cd5\uff08\u5982 AdaGrad \u548c RMSProp\uff09\uff0c\u6240\u4ee5\u5bf9\u5b66\u4e60\u7387\u8d85\u53c2\u6570 \u03b7 \u7684\u8c03\u6574\u8f83\u5c11\u3002 \u60a8\u7ecf\u5e38\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c \u03b7= 0.001 \uff0c\u4f7f Adam \u66f4\u5bb9\u6613\u4f7f\u7528\u76f8\u5bf9\u4e8e\u68af\u5ea6\u4e0b\u964d\u3002 \u8fc4\u4eca\u4e3a\u6b62\u6240\u8ba8\u8bba\u7684\u6240\u6709\u4f18\u5316\u6280\u672f\u90fd\u53ea\u4f9d\u8d56\u4e8e\u4e00\u9636\u504f\u5bfc\u6570\uff08\u96c5\u53ef\u6bd4\u77e9\u9635\uff09\u3002 \u4f18\u5316\u6587\u732e\u5305\u542b\u57fa\u4e8e\u4e8c\u9636\u504f\u5bfc\u6570\uff08\u6d77\u68ee\u77e9\u9635\uff09\u7684\u60ca\u4eba\u7b97\u6cd5\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5f88\u96be\u5e94\u7528\u4e8e\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8f93\u51fa\u6709 n ^ 2 \u4e2a\u6d77\u68ee\u503c\uff08\u5176\u4e2d n \u662f\u53c2\u6570\u7684\u6570\u91cf\uff09\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u8f93\u51fa\u53ea\u6709 n \u4e2a\u96c5\u514b\u6bd4\u503c\u3002 \u7531\u4e8e DNN \u901a\u5e38\u5177\u6709\u6570\u4ee5\u4e07\u8ba1\u7684\u53c2\u6570\uff0c\u4e8c\u9636\u4f18\u5316\u7b97\u6cd5\u901a\u5e38\u751a\u81f3\u4e0d\u9002\u5408\u5185\u5b58\uff0c\u751a\u81f3\u5728\u4ed6\u4eec\u8fd9\u6837\u505a\u65f6\uff0c\u8ba1\u7b97\u6d77\u68ee\u77e9\u9635\u4e5f\u662f\u592a\u6162\u4e86\u3002","title":"Adam \u4f18\u5316"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_15","text":"\u6240\u6709\u521a\u521a\u63d0\u51fa\u7684\u4f18\u5316\u7b97\u6cd5\u90fd\u4f1a\u4ea7\u751f\u5bc6\u96c6\u7684\u6a21\u578b\uff0c\u8fd9\u610f\u5473\u7740\u5927\u591a\u6570\u53c2\u6570\u90fd\u662f\u975e\u96f6\u7684\u3002 \u5982\u679c\u4f60\u5728\u8fd0\u884c\u65f6\u9700\u8981\u4e00\u4e2a\u975e\u5e38\u5feb\u901f\u7684\u6a21\u578b\uff0c\u6216\u8005\u5982\u679c\u4f60\u9700\u8981\u5b83\u5360\u7528\u8f83\u5c11\u7684\u5185\u5b58\uff0c\u4f60\u53ef\u80fd\u66f4\u559c\u6b22\u7528\u4e00\u4e2a\u7a00\u758f\u6a21\u578b\u6765\u4ee3\u66ff\u3002 \u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u4e00\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u65b9\u6cd5\u662f\u50cf\u5e73\u5e38\u4e00\u6837\u8bad\u7ec3\u6a21\u578b\uff0c\u7136\u540e\u6446\u8131\u5fae\u5c0f\u7684\u6743\u91cd\uff08\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a 0\uff09\u3002 \u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5e94\u7528\u5f3a l1 \u6b63\u5219\u5316\uff0c\u56e0\u4e3a\u5b83\u4f1a\u63a8\u52a8\u4f18\u5316\u5668\u5c3d\u53ef\u80fd\u591a\u5730\u6d88\u9664\u6743\u91cd\uff08\u5982\u7b2c 4 \u7ae0\u5173\u4e8e Lasso \u56de\u5f52\u7684\u8ba8\u8bba\uff09\u3002 \u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u6280\u672f\u53ef\u80fd\u4ecd\u7136\u4e0d\u8db3\u3002 \u6700\u540e\u4e00\u4e2a\u9009\u62e9\u662f\u5e94\u7528\u53cc\u91cd\u5e73\u5747\uff0c\u901a\u5e38\u79f0\u4e3a\u9075\u5faa\u6b63\u5219\u5316\u9886\u5bfc\u8005\uff08FTRL\uff09\uff0c\u4e00\u79cd\u7531\u5c24\u91cc\u00b7\u6d85\u65af\u6377\u7f57\u592b\uff08Yurii Nesterov\uff09\u63d0\u51fa\u7684\u6280\u672f\u3002 \u5f53\u4e0e l1 \u6b63\u5219\u5316\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u8fd9\u79cd\u6280\u672f\u901a\u5e38\u5bfc\u81f4\u975e\u5e38\u7a00\u758f\u7684\u6a21\u578b\u3002 TensorFlow \u5728 FTRLOptimizer \u7c7b\u4e2d\u5b9e\u73b0\u79f0\u4e3a FTRL-Proximal \u7684 FTRL \u53d8\u4f53\u3002","title":"\u8bad\u7ec3\u7a00\u758f\u6a21\u578b"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_16","text":"\u627e\u5230\u4e00\u4e2a\u597d\u7684\u5b66\u4e60\u901f\u5ea6\u53ef\u80fd\u4f1a\u975e\u5e38\u68d8\u624b\u3002 \u5982\u679c\u8bbe\u7f6e\u592a\u9ad8\uff0c\u8bad\u7ec3\u5b9e\u9645\u4e0a\u53ef\u80fd\u504f\u79bb\uff08\u5982\u6211\u4eec\u5728\u7b2c 4 \u7ae0\uff09\u3002 \u5982\u679c\u8bbe\u7f6e\u5f97\u592a\u4f4e\uff0c\u8bad\u7ec3\u6700\u7ec8\u4f1a\u6536\u655b\u5230\u6700\u4f73\u72b6\u6001\uff0c\u4f46\u8fd9\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002 \u5982\u679c\u5c06\u5176\u8bbe\u7f6e\u5f97\u592a\u9ad8\uff0c\u5f00\u59cb\u7684\u8fdb\u5ea6\u4f1a\u975e\u5e38\u5feb\uff0c\u4f46\u6700\u7ec8\u4f1a\u5728\u6700\u4f18\u89e3\u5468\u56f4\u8df3\u52a8\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u5b89\u987f\u4e0b\u6765\uff08\u9664\u975e\u60a8\u4f7f\u7528\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u4f18\u5316\u7b97\u6cd5\uff0c\u5982 AdaGrad\uff0cRMSProp \u6216 Adam\uff0c\u4f46\u662f \u5373\u4f7f\u8fd9\u6837\u53ef\u80fd\u9700\u8981\u65f6\u95f4\u6765\u89e3\u51b3\uff09\u3002 \u5982\u679c\u60a8\u7684\u8ba1\u7b97\u9884\u7b97\u6709\u9650\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u5fc5\u987b\u5728\u6b63\u786e\u6536\u655b\u4e4b\u524d\u4e2d\u65ad\u8bad\u7ec3\uff0c\u4ea7\u751f\u6b21\u4f18\u89e3\u51b3\u65b9\u6848\uff08\u53c2\u89c1\u56fe 11-8\uff09\u3002 \u901a\u8fc7\u4f7f\u7528\u5404\u79cd\u5b66\u4e60\u7387\u548c\u6bd4\u8f83\u5b66\u4e60\u66f2\u7ebf\uff0c\u5728\u51e0\u4e2a\u8fed\u4ee3\u5185\u5bf9\u60a8\u7684\u7f51\u7edc\u8fdb\u884c\u591a\u6b21\u8bad\u7ec3\uff0c\u60a8\u4e5f\u8bb8\u80fd\u591f\u627e\u5230\u76f8\u5f53\u597d\u7684\u5b66\u4e60\u7387\u3002 \u7406\u60f3\u7684\u5b66\u4e60\u7387\u5c06\u4f1a\u5feb\u901f\u5b66\u4e60\u5e76\u6536\u655b\u5230\u826f\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u7136\u800c\uff0c\u4f60\u53ef\u4ee5\u505a\u5f97\u6bd4\u4e0d\u65ad\u7684\u5b66\u4e60\u7387\u66f4\u597d\uff1a\u5982\u679c\u4f60\u4ece\u4e00\u4e2a\u9ad8\u7684\u5b66\u4e60\u7387\u5f00\u59cb\uff0c\u7136\u540e\u4e00\u65e6\u5b83\u505c\u6b62\u5feb\u901f\u7684\u8fdb\u6b65\u5c31\u51cf\u5c11\u5b83\uff0c\u4f60\u53ef\u4ee5\u6bd4\u6700\u4f73\u7684\u6052\u5b9a\u5b66\u4e60\u7387\u66f4\u5feb\u5730\u8fbe\u5230\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u6709\u8bb8\u591a\u4e0d\u540c\u7684\u7b56\u7565\uff0c\u4ee5\u51cf\u5c11\u8bad\u7ec3\u671f\u95f4\u7684\u5b66\u4e60\u7387\u3002 \u8fd9\u4e9b\u7b56\u7565\u88ab\u79f0\u4e3a\u5b66\u4e60\u7387\u8c03\u6574\uff08\u6211\u4eec\u5728\u7b2c 4 \u7ae0\u4e2d\u7b80\u8981\u4ecb\u7ecd\u4e86\u8fd9\u4e2a\u6982\u5ff5\uff09\uff0c\u5176\u4e2d\u6700\u5e38\u89c1\u7684\u662f\uff1a \u9884\u5b9a\u7684\u5206\u6bb5\u6052\u5b9a\u5b66\u4e60\u7387: \u4f8b\u5982\uff0c\u9996\u5148\u5c06\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a \uff0c\u7136\u540e\u5728 50 \u4e2a\u8fed\u4ee3\u4e4b\u540e\u5c06\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a \u3002\u867d\u7136\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u4f46\u662f\u901a\u5e38\u9700\u8981\u5f04\u6e05\u695a\u6b63\u786e\u7684\u5b66\u4e60\u901f\u5ea6\u4ee5\u53ca\u4f55\u65f6\u4f7f\u7528\u5b83\u4eec\u3002 \u6027\u80fd\u8c03\u5ea6: \u6bcf N \u6b65\u6d4b\u91cf\u9a8c\u8bc1\u8bef\u5dee\uff08\u5c31\u50cf\u63d0\u524d\u505c\u6b62\u4e00\u6837\uff09\uff0c\u5f53\u8bef\u5dee\u4e0b\u964d\u65f6\uff0c\u5c06\u5b66\u4e60\u7387\u964d\u4f4e\u4e00\u4e2a\u56e0\u5b50 \u03bb \u3002 \u6307\u6570\u8c03\u5ea6: \u5c06\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a\u8fed\u4ee3\u6b21\u6570 t \u7684\u51fd\u6570\uff1a \u3002 \u8fd9\u5f88\u597d\uff0c\u4f46\u5b83\u9700\u8981\u8c03\u6574 \u03b70 \u548c r \u3002 \u5b66\u4e60\u7387\u5c06\u7531\u6bcf r \u6b65\u4e0b\u964d 10 \u500d\u3002 \u5e42\u8c03\u5ea6: \u8bbe\u5b66\u4e60\u7387\u4e3a \u3002 \u8d85\u53c2\u6570 c \u901a\u5e38\u88ab\u8bbe\u7f6e\u4e3a 1\u3002\u8fd9\u4e0e\u6307\u6570\u8c03\u5ea6\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b66\u4e60\u7387\u4e0b\u964d\u8981\u6162\u5f97\u591a\u3002 Andrew Senior \u7b492013\u5e74\u7684\u8bba\u6587\u3002 \u6bd4\u8f83\u4e86\u4f7f\u7528\u52a8\u91cf\u4f18\u5316\u8bad\u7ec3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8bed\u97f3\u8bc6\u522b\u65f6\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u5b66\u4e60\u7387\u8c03\u6574\u7684\u6027\u80fd\u3002 \u4f5c\u8005\u5f97\u51fa\u7ed3\u8bba\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6027\u80fd\u8c03\u5ea6\u548c\u6307\u6570\u8c03\u5ea6\u90fd\u8868\u73b0\u826f\u597d\uff0c\u4f46\u4ed6\u4eec\u66f4\u559c\u6b22\u6307\u6570\u8c03\u5ea6\uff0c\u56e0\u4e3a\u5b83\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u5bb9\u6613\u8c03\u6574\uff0c\u6536\u655b\u901f\u5ea6\u7565\u5feb\u4e8e\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u3002 \u4f7f\u7528 TensorFlow \u5b9e\u73b0\u5b66\u4e60\u7387\u8c03\u6574\u975e\u5e38\u7b80\u5355\uff1a initial_learning_rate = 0.1 decay_steps = 10000 decay_rate = 1/10 global_step = tf.Variable(0, trainable=False, name=\"global_step\") learning_rate = tf.train.exponential_decay(initial_learning_rate, global_step, decay_steps, decay_rate) optimizer = tf.train.MomentumOptimizer(learning_rate, momentum=0.9) training_op = optimizer.minimize(loss, global_step=global_step) \u8bbe\u7f6e\u8d85\u53c2\u6570\u503c\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4e0d\u53ef\u8bad\u7ec3\u7684\u53d8\u91cf global_step \uff08\u521d\u59cb\u5316\u4e3a 0\uff09\u4ee5\u8ddf\u8e2a\u5f53\u524d\u7684\u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570\u3002 \u7136\u540e\u6211\u4eec\u4f7f\u7528 TensorFlow \u7684 exponential_decay() \u51fd\u6570\u6765\u5b9a\u4e49\u6307\u6570\u8870\u51cf\u7684\u5b66\u4e60\u7387\uff08 \u03b70= 0.1 \u548c r = 10,000 \uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u8870\u51cf\u7684\u5b66\u4e60\u7387\u521b\u5efa\u4e00\u4e2a\u4f18\u5316\u5668\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662f\u4e00\u4e2a MomentumOptimizer \uff09\u3002 \u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528\u4f18\u5316\u5668\u7684 minimize() \u65b9\u6cd5\u6765\u521b\u5efa\u8bad\u7ec3\u64cd\u4f5c\uff1b\u56e0\u4e3a\u6211\u4eec\u5c06 global_step \u53d8\u91cf\u4f20\u9012\u7ed9\u5b83\uff0c\u6240\u4ee5\u8bf7\u6ce8\u610f\u589e\u52a0\u5b83\u3002 \u5c31\u662f\u8fd9\u6837\uff01 \u7531\u4e8e AdaGrad\uff0cRMSProp \u548c Adam \u4f18\u5316\u81ea\u52a8\u964d\u4f4e\u4e86\u8bad\u7ec3\u671f\u95f4\u7684\u5b66\u4e60\u7387\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u6dfb\u52a0\u989d\u5916\u7684\u5b66\u4e60\u7387\u8c03\u6574\u3002 \u5bf9\u4e8e\u5176\u4ed6\u4f18\u5316\u7b97\u6cd5\uff0c\u4f7f\u7528\u6307\u6570\u8870\u51cf\u6216\u6027\u80fd\u8c03\u5ea6\u53ef\u663e\u8457\u52a0\u901f\u6536\u655b\u3002 \u5b8c\u6574\u4ee3\u7801: n_inputs = 28 * 28 # MNIST n_hidden1 = 300 n_hidden2 = 50 n_outputs = 10 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") logits = tf.layers.dense(hidden2, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32), name=\"accuracy\") with tf.name_scope(\"train\"): # not shown in the book initial_learning_rate = 0.1 decay_steps = 10000 decay_rate = 1/10 global_step = tf.Variable(0, trainable=False, name=\"global_step\") learning_rate = tf.train.exponential_decay(initial_learning_rate, global_step, decay_steps, decay_rate) optimizer = tf.train.MomentumOptimizer(learning_rate, momentum=0.9) training_op = optimizer.minimize(loss, global_step=global_step) init = tf.global_variables_initializer() saver = tf.train.Saver() n_epochs = 5 batch_size = 50 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) accuracy_val = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Test accuracy:\", accuracy_val) save_path = saver.save(sess, \"./my_model_final.ckpt\")","title":"\u5b66\u4e60\u7387\u8c03\u6574"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_17","text":"\u6709\u56db\u4e2a\u53c2\u6570\uff0c\u6211\u53ef\u4ee5\u62df\u5408\u4e00\u4e2a\u5927\u8c61\uff0c\u4e94\u4e2a\u6211\u53ef\u4ee5\u8ba9\u4ed6\u6446\u52a8\u4ed6\u7684\u8c61\u9f3b\u3002 \u2014\u2014 John von Neumann,cited by Enrico Fermi in Nature 427 \u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u901a\u5e38\u5177\u6709\u6570\u4ee5\u4e07\u8ba1\u7684\u53c2\u6570\uff0c\u6709\u65f6\u751a\u81f3\u662f\u6570\u767e\u4e07\u3002 \u6709\u4e86\u8fd9\u4e48\u591a\u7684\u53c2\u6570\uff0c\u7f51\u7edc\u62e5\u6709\u96be\u4ee5\u7f6e\u4fe1\u7684\u81ea\u7531\u5ea6\uff0c\u53ef\u4ee5\u9002\u5e94\u5404\u79cd\u590d\u6742\u7684\u6570\u636e\u96c6\u3002 \u4f46\u662f\u8fd9\u4e2a\u5f88\u5927\u7684\u7075\u6d3b\u6027\u4e5f\u610f\u5473\u7740\u5b83\u5f88\u5bb9\u6613\u8fc7\u62df\u5408\u8bad\u7ec3\u96c6\u3002 \u6709\u4e86\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5\u9002\u5e94\u6574\u4e2a\u52a8\u7269\u56ed\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u795e\u7ecf\u7f51\u7edc\u6b63\u5219\u5316\u6280\u672f\uff0c\u4ee5\u53ca\u5982\u4f55\u7528 TensorFlow \u5b9e\u73b0\u5b83\u4eec\uff1a\u65e9\u671f\u505c\u6b62\uff0cl1 \u548c l2 \u6b63\u5219\u5316\uff0cdrop out\uff0c\u6700\u5927\u8303\u6570\u6b63\u5219\u5316\u548c\u6570\u636e\u589e\u5f3a\u3002","title":"\u901a\u8fc7\u6b63\u5219\u5316\u907f\u514d\u8fc7\u62df\u5408"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_18","text":"\u4e3a\u907f\u514d\u8fc7\u5ea6\u62df\u5408\u8bad\u7ec3\u96c6\uff0c\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5c3d\u65e9\u505c\u6b62\u8bad\u7ec3\uff08\u5728\u7b2c 4 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff1a\u53ea\u8981\u5728\u8bad\u7ec3\u96c6\u7684\u6027\u80fd\u5f00\u59cb\u4e0b\u964d\u65f6\u4e2d\u65ad\u8bad\u7ec3\u3002 \u4e0e TensorFlow \u5b9e\u73b0\u65b9\u6cd5\u4e4b\u4e00\u662f\u8bc4\u4f30\u5176\u5bf9\u8bbe\u7f6e\u5b9a\u671f\uff08\u4f8b\u5982\uff0c\u6bcf 50 \u6b65\uff09\u9a8c\u8bc1\u6a21\u578b\uff0c\u5e76\u4fdd\u5b58\u4e00\u4e2a\u201cwinner\u201d\u7684\u5feb\u7167\uff0c\u5982\u679c\u5b83\u4f18\u4e8e\u4ee5\u524d\u201cwinner\u201d\u7684\u5feb\u7167\u3002 \u8ba1\u7b97\u81ea\u4e0a\u6b21\u201cwinner\u201d\u5feb\u7167\u4fdd\u5b58\u4ee5\u6765\u7684\u6b65\u6570\uff0c\u5e76\u5728\u8fbe\u5230\u67d0\u4e2a\u9650\u5236\u65f6\uff08\u4f8b\u5982 2000 \u6b65\uff09\u4e2d\u65ad\u8bad\u7ec3\u3002 \u7136\u540e\u6062\u590d\u6700\u540e\u7684\u201cwinner\u201d\u5feb\u7167\u3002 \u867d\u7136\u65e9\u671f\u505c\u6b62\u5728\u5b9e\u8df5\u4e2d\u8fd0\u884c\u826f\u597d\uff0c\u4f46\u662f\u901a\u8fc7\u5c06\u5176\u4e0e\u5176\u4ed6\u6b63\u5219\u5316\u6280\u672f\u76f8\u7ed3\u5408\uff0c\u60a8\u901a\u5e38\u53ef\u4ee5\u5728\u7f51\u7edc\u4e2d\u83b7\u5f97\u66f4\u9ad8\u7684\u6027\u80fd\u3002","title":"\u65e9\u671f\u505c\u6b62"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#l1-l2","text":"\u5c31\u50cf\u4f60\u5728\u7b2c 4 \u7ae0\u4e2d\u5bf9\u7b80\u5355\u7ebf\u6027\u6a21\u578b\u6240\u505a\u7684\u90a3\u6837\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 l1 \u548c l2 \u6b63\u5219\u5316\u7ea6\u675f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u8fde\u63a5\u6743\u91cd\uff08\u4f46\u901a\u5e38\u4e0d\u662f\u5b83\u7684\u504f\u7f6e\uff09\u3002 \u4f7f\u7528 TensorFlow \u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u7b80\u5355\u5730\u5c06\u9002\u5f53\u7684\u6b63\u5219\u5316\u9879\u6dfb\u52a0\u5230\u60a8\u7684\u635f\u5931\u51fd\u6570\u4e2d\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u53ea\u6709\u4e00\u4e2a\u6743\u91cd\u4e3a weights1 \u7684\u9690\u85cf\u5c42\u548c\u4e00\u4e2a\u6743\u91cd\u4e3a weight2 \u7684\u8f93\u51fa\u5c42\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u5e94\u7528 l1 \u6b63\u5219\u5316\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06\u6b63\u5219\u5316\u51fd\u6570\u4f20\u9012\u7ed9 tf.layers.dense() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u8ba1\u7b97\u6b63\u5219\u5316\u635f\u5931\u7684\u64cd\u4f5c\uff0c\u5e76\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u6dfb\u52a0\u5230\u6b63\u5219\u5316\u635f\u5931\u96c6\u5408\u4e2d\u3002 \u5f00\u59cb\u548c\u4e0a\u9762\u4e00\u6837\uff1a n_inputs = 28 * 28 # MNIST n_hidden1 = 300 n_hidden2 = 50 n_outputs = 10 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Python partial() \u51fd\u6570\u6765\u907f\u514d\u4e00\u904d\u53c8\u4e00\u904d\u5730\u91cd\u590d\u76f8\u540c\u7684\u53c2\u6570\u3002 \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u5185\u6838\u6b63\u5219\u5316\u53c2\u6570\uff08\u6b63\u5219\u5316\u51fd\u6570\u6709 l1_regularizer() \uff0c l2_regularizer() \uff0c l1_l2_regularizer() \uff09\uff1a scale = 0.001 my_dense_layer = partial( tf.layers.dense, activation=tf.nn.relu, kernel_regularizer=tf.contrib.layers.l1_regularizer(scale)) with tf.name_scope(\"dnn\"): hidden1 = my_dense_layer(X, n_hidden1, name=\"hidden1\") hidden2 = my_dense_layer(hidden1, n_hidden2, name=\"hidden2\") logits = my_dense_layer(hidden2, n_outputs, activation=None, name=\"outputs\") \u8be5\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u5177\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\u548c\u4e00\u4e2a\u8f93\u51fa\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4e14\u8fd8\u5728\u56fe\u4e2d\u521b\u5efa\u8282\u70b9\u4ee5\u8ba1\u7b97\u4e0e\u6bcf\u4e2a\u5c42\u7684\u6743\u91cd\u76f8\u5bf9\u5e94\u7684 l1 \u6b63\u5219\u5316\u635f\u5931\u3002TensorFlow \u4f1a\u81ea\u52a8\u5c06\u8fd9\u4e9b\u8282\u70b9\u6dfb\u52a0\u5230\u5305\u542b\u6240\u6709\u6b63\u5219\u5316\u635f\u5931\u7684\u7279\u6b8a\u96c6\u5408\u4e2d\u3002 \u60a8\u53ea\u9700\u8981\u5c06\u8fd9\u4e9b\u6b63\u5219\u5316\u635f\u5931\u6dfb\u52a0\u5230\u60a8\u7684\u6574\u4f53\u635f\u5931\u4e2d\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u6b63\u5219\u5316\u635f\u5931\u52a0\u5230\u57fa\u672c\u635f\u5931\u4e0a\uff1a with tf.name_scope(\"loss\"): # not shown in the book xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits( # not shown labels=y, logits=logits) # not shown base_loss = tf.reduce_mean(xentropy, name=\"avg_xentropy\") # not shown reg_losses = tf.get_collection(tf.GraphKeys.REGULARIZATION_LOSSES) loss = tf.add_n([base_loss] + reg_losses, name=\"loss\") \u5176\u4f59\u7684\u548c\u5f80\u5e38\u4e00\u6837\uff1a with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32), name=\"accuracy\") learning_rate = 0.01 with tf.name_scope(\"train\"): optimizer = tf.train.GradientDescentOptimizer(learning_rate) training_op = optimizer.minimize(loss) init = tf.global_variables_initializer() saver = tf.train.Saver() n_epochs = 20 batch_size = 200 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) accuracy_val = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Test accuracy:\", accuracy_val) save_path = saver.save(sess, \"./my_model_final.ckpt\") \u4e0d\u8981\u5fd8\u8bb0\u628a\u6b63\u5219\u5316\u7684\u635f\u5931\u52a0\u5728\u4f60\u7684\u6574\u4f53\u635f\u5931\u4e0a\uff0c\u5426\u5219\u5c31\u4f1a\u88ab\u5ffd\u7565\u3002","title":"L1 \u548c L2 \u6b63\u5219\u5316"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#dropout","text":"\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6700\u6d41\u884c\u7684\u6b63\u5219\u5316\u6280\u672f\u53ef\u4ee5\u8bf4\u662f dropout\u3002 \u5b83\u7531 GE Hinton \u4e8e 2012 \u5e74\u63d0\u51fa\uff0c\u5e76\u5728 Nitish Srivastava \u7b49\u4eba\u7684\u8bba\u6587\u4e2d\u8fdb\u4e00\u6b65\u8be6\u7ec6\u63cf\u8ff0\uff0c\u5e76\u4e14\u5df2\u88ab\u8bc1\u660e\u662f\u975e\u5e38\u6210\u529f\u7684\uff1a\u5373\u4f7f\u662f\u6700\u5148\u8fdb\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u4ec5\u4ec5\u901a\u8fc7\u589e\u52a0\u4e22\u5931\u5c31\u53ef\u4ee5\u63d0\u9ad81-2\uff05\u7684\u51c6\u786e\u5ea6\u3002 \u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u4e0d\u662f\u5f88\u591a\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u6a21\u578b\u5df2\u7ecf\u5177\u6709 95% \u7684\u51c6\u786e\u7387\u65f6\uff0c\u83b7\u5f97 2% \u7684\u51c6\u786e\u5ea6\u63d0\u5347\u610f\u5473\u7740\u5c06\u8bef\u5dee\u7387\u964d\u4f4e\u8fd1 40%\uff08\u4ece 5% \u8bef\u5dee\u964d\u81f3\u5927\u7ea6 3%\uff09\u3002 \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u7b80\u5355\u7684\u7b97\u6cd5\uff1a\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e2d\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\uff08\u5305\u62ec\u8f93\u5165\u795e\u7ecf\u5143\uff0c\u4f46\u4e0d\u5305\u62ec\u8f93\u51fa\u795e\u7ecf\u5143\uff09\u90fd\u6709\u4e00\u4e2a\u6682\u65f6\u201c\u4e22\u5f03\u201d\u7684\u6982\u7387 p \uff0c\u8fd9\u610f\u5473\u7740\u5728\u8fd9\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e2d\u5b83\u5c06\u88ab\u5b8c\u5168\u5ffd\u7565\uff0c \u5728\u4e0b\u4e00\u6b65\u53ef\u80fd\u4f1a\u6fc0\u6d3b\uff08\u89c1\u56fe 11-9\uff09\u3002 \u8d85\u53c2\u6570 p \u79f0\u4e3a\u4e22\u5931\u7387\uff0c\u901a\u5e38\u8bbe\u4e3a 50%\u3002 \u8bad\u7ec3\u540e\uff0c\u795e\u7ecf\u5143\u4e0d\u4f1a\u518d\u4e0b\u964d\u3002 \u8fd9\u5c31\u662f\u5168\u90e8\uff08\u9664\u4e86\u6211\u4eec\u5c06\u8981\u8ba8\u8bba\u7684\u6280\u672f\u7ec6\u8282\uff09\u3002 \u4e00\u5f00\u59cb\u8fd9\u4e2a\u6280\u672f\u662f\u76f8\u5f53\u7c97\u9c81\uff0c\u8fd9\u662f\u76f8\u5f53\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u5982\u679c\u4e00\u4e2a\u516c\u53f8\u7684\u5458\u5de5\u6bcf\u5929\u65e9\u4e0a\u88ab\u544a\u77e5\u8981\u63b7\u786c\u5e01\u6765\u51b3\u5b9a\u662f\u5426\u4e0a\u73ed\uff0c\u516c\u53f8\u7684\u8868\u73b0\u4f1a\u4e0d\u4f1a\u66f4\u597d\u5462\uff1f\u90a3\u4e48\uff0c\u8c01\u77e5\u9053\uff1b\u4e5f\u8bb8\u4f1a\uff01\u516c\u53f8\u663e\u7136\u5c06\u88ab\u8feb\u9002\u5e94\u8fd9\u6837\u7684\u7ec4\u7ec7\u6784\u67b6\uff1b\u5b83\u4e0d\u80fd\u4f9d\u9760\u4efb\u4f55\u4e00\u4e2a\u4eba\u586b\u5199\u5496\u5561\u673a\u6216\u6267\u884c\u4efb\u4f55\u5176\u4ed6\u5173\u952e\u4efb\u52a1\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e13\u4e1a\u77e5\u8bc6\u5c06\u4e0d\u5f97\u4e0d\u5206\u6563\u5728\u51e0\u4e2a\u4eba\u8eab\u4e0a\u3002\u5458\u5de5\u5fc5\u987b\u5b66\u4f1a\u4e0e\u5176\u4ed6\u7684\u8bb8\u591a\u540c\u4e8b\u5408\u4f5c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5176\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u8be5\u516c\u53f8\u5c06\u53d8\u5f97\u66f4\u6709\u5f39\u6027\u3002\u5982\u679c\u4e00\u4e2a\u4eba\u79bb\u5f00\u4e86\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u8fd9\u4e2a\u60f3\u6cd5\u662f\u5426\u771f\u7684\u53ef\u4ee5\u5728\u516c\u53f8\u5b9e\u884c\uff0c\u4f46\u5b83\u786e\u5b9e\u5bf9\u4e8e\u795e\u7ecf\u7f51\u7edc\u662f\u53ef\u4ee5\u7684\u3002\u795e\u7ecf\u5143\u88abdropout\u8bad\u7ec3\u4e0d\u80fd\u4e0e\u5176\u76f8\u90bb\u7684\u795e\u7ecf\u5143\u5171\u9002\u5e94\uff1b\u4ed6\u4eec\u5fc5\u987b\u5c3d\u53ef\u80fd\u8ba9\u81ea\u5df1\u53d8\u5f97\u6709\u7528\u3002\u4ed6\u4eec\u4e5f\u4e0d\u80fd\u8fc7\u5206\u4f9d\u8d56\u4e00\u4e9b\u8f93\u5165\u795e\u7ecf\u5143;\u4ed6\u4eec\u5fc5\u987b\u6ce8\u610f\u4ed6\u4eec\u7684\u6bcf\u4e2a\u8f93\u5165\u795e\u7ecf\u5143\u3002\u4ed6\u4eec\u6700\u7ec8\u5bf9\u8f93\u5165\u7684\u5fae\u5c0f\u53d8\u5316\u4f1a\u4e0d\u592a\u654f\u611f\u3002\u6700\u540e\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u7f51\u7edc\uff0c\u66f4\u597d\u5730\u63a8\u5e7f\u3002 \u4e86\u89e3 dropout \u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8ba4\u8bc6\u5230\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u72ec\u7279\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u7531\u4e8e\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ef\u4ee5\u5b58\u5728\u6216\u4e0d\u5b58\u5728\uff0c\u603b\u5171\u6709 2 ^ N \u4e2a\u53ef\u80fd\u7684\u7f51\u7edc\uff08\u5176\u4e2d N \u662f\u53ef\u4e22\u5f03\u795e\u7ecf\u5143\u7684\u603b\u6570\uff09\u3002 \u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6570\u5b57\uff0c\u5b9e\u9645\u4e0a\u4e0d\u53ef\u80fd\u5bf9\u540c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4e24\u6b21\u91c7\u6837\u3002 \u4e00\u65e6\u4f60\u8fd0\u884c\u4e86 10,000 \u4e2a\u8bad\u7ec3\u6b65\u9aa4\uff0c\u4f60\u57fa\u672c\u4e0a\u5df2\u7ecf\u8bad\u7ec3\u4e86 10,000 \u4e2a\u4e0d\u540c\u7684\u795e\u7ecf\u7f51\u7edc\uff08\u6bcf\u4e2a\u795e\u7ecf\u7f51\u7edc\u53ea\u6709\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff09\u3002 \u8fd9\u4e9b\u795e\u7ecf\u7f51\u7edc\u663e\u7136\u4e0d\u662f\u72ec\u7acb\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5171\u4eab\u8bb8\u591a\u6743\u91cd\uff0c\u4f46\u662f\u5b83\u4eec\u90fd\u662f\u4e0d\u540c\u7684\u3002 \u7531\u6b64\u4ea7\u751f\u7684\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u770b\u4f5c\u662f\u6240\u6709\u8fd9\u4e9b\u8f83\u5c0f\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u5e73\u5747\u96c6\u6210\u3002 \u6709\u4e00\u4e2a\u5c0f\u800c\u91cd\u8981\u7684\u6280\u672f\u7ec6\u8282\u3002 \u5047\u8bbe p = 50% \uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u6d4b\u8bd5\u671f\u95f4\uff0c\u5728\u8bad\u7ec3\u671f\u95f4\u795e\u7ecf\u5143\u5c06\u88ab\u8fde\u63a5\u5230\u4e24\u500d\u4e8e\uff08\u5e73\u5747\uff09\u7684\u8f93\u5165\u795e\u7ecf\u5143\u3002 \u4e3a\u4e86\u5f25\u8865\u8fd9\u4e2a\u4e8b\u5b9e\uff0c\u6211\u4eec\u9700\u8981\u5728\u8bad\u7ec3\u4e4b\u540e\u5c06\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u5165\u8fde\u63a5\u6743\u91cd\u4e58\u4ee5 0.5\u3002 \u5982\u679c\u6211\u4eec\u4e0d\u8fd9\u6837\u505a\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u603b\u8f93\u5165\u4fe1\u53f7\u5927\u6982\u662f\u7f51\u7edc\u8bad\u7ec3\u7684\u4e24\u500d\uff0c\u8fd9\u4e0d\u592a\u53ef\u80fd\u8868\u73b0\u826f\u597d\u3002 \u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e2a\u8f93\u5165\u8fde\u63a5\u6743\u91cd\u4e58\u4ee5\u8bad\u7ec3\u540e\u7684\u4fdd\u6301\u6982\u7387\uff08 1-p \uff09\u3002 \u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5c06\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u9664\u4ee5\u4fdd\u6301\u6982\u7387\uff08\u8fd9\u4e9b\u66ff\u4ee3\u65b9\u6848\u5e76\u4e0d\u5b8c\u5168\u7b49\u4ef7\uff0c\u4f46\u5b83\u4eec\u5de5\u4f5c\u5f97\u540c\u6837\u597d\uff09\u3002 \u8981\u4f7f\u7528 TensorFlow \u5b9e\u73b0dropout\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5c06 dropout() \u51fd\u6570\u5e94\u7528\u4e8e\u8f93\u5165\u5c42\u548c\u6bcf\u4e2a\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u3002 \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e2a\u529f\u80fd\u968f\u673a\u4e22\u5f03\u4e00\u4e9b\u8282\u70b9\uff08\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a 0\uff09\uff0c\u5e76\u7528\u4fdd\u7559\u6982\u7387\u6765\u5212\u5206\u5269\u4f59\u9879\u76ee\u3002 \u8bad\u7ec3\u7ed3\u675f\u540e\uff0c\u8fd9\u4e2a\u51fd\u6570\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c06dropout\u6b63\u5219\u5316\u5e94\u7528\u4e8e\u6211\u4eec\u7684\u4e09\u5c42\u795e\u7ecf\u7f51\u7edc\uff1a \u6ce8\u610f\uff1a\u672c\u4e66\u4f7f\u7528 tf.contrib.layers.dropout() \u800c\u4e0d\u662f tf.layers.dropout() \uff08\u672c\u7ae0\u5199\u4f5c\u65f6\u4e0d\u5b58\u5728\uff09\u3002 \u73b0\u5728\u6700\u597d\u4f7f\u7528 tf.layers.dropout() \uff0c\u56e0\u4e3a contrib \u6a21\u5757\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u53ef\u80fd\u4f1a\u6539\u53d8\u6216\u88ab\u5220\u9664\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002 tf.layers.dropout() \u51fd\u6570\u51e0\u4e4e\u4e0e tf.contrib.layers.dropout() \u51fd\u6570\u76f8\u540c\uff0c\u53ea\u662f\u6709\u4e00\u4e9b\u7ec6\u5fae\u5dee\u522b\u3002 \u6700\u91cd\u8981\u7684\u662f\uff1a \u60a8\u5fc5\u987b\u6307\u5b9a\u4e22\u5931\u7387\uff08\u7387\uff09\u800c\u4e0d\u662f\u4fdd\u6301\u6982\u7387\uff08 keep_prob \uff09\uff0c\u5176\u4e2d rate \u7b80\u5355\u5730\u7b49\u4e8e 1 - keep_prob is_training \u53c2\u6570\u88ab\u91cd\u547d\u540d\u4e3a training \u3002 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") training = tf.placeholder_with_default(False, shape=(), name='training') dropout_rate = 0.5 # == 1 - keep_prob X_drop = tf.layers.dropout(X, dropout_rate, training=training) with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X_drop, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") hidden1_drop = tf.layers.dropout(hidden1, dropout_rate, training=training) hidden2 = tf.layers.dense(hidden1_drop, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") hidden2_drop = tf.layers.dropout(hidden2, dropout_rate, training=training) logits = tf.layers.dense(hidden2_drop, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"train\"): optimizer = tf.train.MomentumOptimizer(learning_rate, momentum=0.9) training_op = optimizer.minimize(loss) with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) init = tf.global_variables_initializer() saver = tf.train.Saver() n_epochs = 20 batch_size = 50 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={training: True, X: X_batch, y: y_batch}) acc_test = accuracy.eval(feed_dict={X: mnist.test.images, y: mnist.test.labels}) print(epoch, \"Test accuracy:\", acc_test) save_path = saver.save(sess, \"./my_model_final.ckpt\") \u4f60\u60f3\u5728 tensorflow.contrib.layers \u4e2d\u4f7f\u7528 dropout() \u51fd\u6570\uff0c\u800c\u4e0d\u662f tensorflow.nn \u4e2d\u7684\u90a3\u4e2a\u3002 \u7b2c\u4e00\u4e2a\u5728\u4e0d\u8bad\u7ec3\u7684\u65f6\u5019\u5173\u6389\uff08\u6ca1\u6709\u64cd\u4f5c\uff09\uff0c\u8fd9\u662f\u4f60\u60f3\u8981\u7684\uff0c\u800c\u7b2c\u4e8c\u4e2a\u4e0d\u662f\u3002 \u5982\u679c\u89c2\u5bdf\u5230\u6a21\u578b\u8fc7\u62df\u5408\uff0c\u5219\u53ef\u4ee5\u589e\u52a0 dropout \u7387\uff08\u5373\uff0c\u51cf\u5c11 keep_prob \u8d85\u53c2\u6570\uff09\u3002 \u76f8\u53cd\uff0c\u5982\u679c\u6a21\u578b\u6b20\u62df\u5408\u8bad\u7ec3\u96c6\uff0c\u5219\u5e94\u5c1d\u8bd5\u964d\u4f4e dropout \u7387\uff08\u5373\u589e\u52a0 keep_prob \uff09\u3002 \u5b83\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u589e\u52a0\u5927\u5c42\u7684 dropout \u7387\uff0c\u5e76\u51cf\u5c11\u5c0f\u5c42\u7684 dropout \u7387\u3002 dropout \u4f3c\u4e4e\u51cf\u7f13\u4e86\u6536\u655b\u901f\u5ea6\uff0c\u4f46\u901a\u5e38\u4f1a\u5728\u8c03\u6574\u5f97\u5f53\u65f6\u4f7f\u6a21\u578b\u66f4\u597d\u3002 \u6240\u4ee5\uff0c\u8fd9\u901a\u5e38\u503c\u5f97\u82b1\u8d39\u989d\u5916\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u3002 Dropconnect\u662fdropout\u7684\u53d8\u4f53\uff0c\u5176\u4e2d\u5355\u4e2a\u8fde\u63a5\u968f\u673a\u4e22\u5f03\u800c\u4e0d\u662f\u6574\u4e2a\u795e\u7ecf\u5143\u3002 \u4e00\u822c\u800c\u8a00\uff0cdropout\u8868\u73b0\u4f1a\u66f4\u597d\u3002","title":"Dropout"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_19","text":"\u53e6\u4e00\u79cd\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u975e\u5e38\u6d41\u884c\u7684\u6b63\u5219\u5316\u6280\u672f\u88ab\u79f0\u4e3a\u6700\u5927\u8303\u6570\u6b63\u5219\u5316\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u5b83\u7ea6\u675f\u8f93\u5165\u8fde\u63a5\u7684\u6743\u91cd w \uff0c\u4f7f\u5f97 \uff0c\u5176\u4e2d r \u662f\u6700\u5927\u8303\u6570\u8d85\u53c2\u6570\uff0c \u662f l2 \u8303\u6570\u3002 \u6211\u4eec\u901a\u5e38\u901a\u8fc7\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e4b\u540e\u8ba1\u7b97 \u6765\u5b9e\u73b0\u8fd9\u4e2a\u7ea6\u675f\uff0c\u5e76\u4e14\u5982\u679c\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u526a\u5207 W \u3002 \u51cf\u5c11 r \u589e\u52a0\u4e86\u6b63\u5219\u5316\u7684\u6570\u91cf\uff0c\u5e76\u6709\u52a9\u4e8e\u51cf\u5c11\u8fc7\u62df\u5408\u3002 \u6700\u5927\u8303\u6570\u6b63\u5219\u5316\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u51cf\u8f7b\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u95ee\u9898\uff08\u5982\u679c\u60a8\u4e0d\u4f7f\u7528\u6279\u91cf\u6807\u51c6\u5316\uff09\u3002 \u8ba9\u6211\u4eec\u56de\u5230 MNIST \u7684\u7b80\u5355\u800c\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u53ea\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\uff1a n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 50 n_outputs = 10 learning_rate = 0.01 momentum = 0.9 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, name=\"hidden1\") hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, name=\"hidden2\") logits = tf.layers.dense(hidden2, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"train\"): optimizer = tf.train.MomentumOptimizer(learning_rate, momentum) training_op = optimizer.minimize(loss) with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6765\u5904\u7406\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u7684\u6743\u91cd\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u64cd\u4f5c\uff0c\u4f7f\u7528 clip_by_norm() \u51fd\u6570\u8ba1\u7b97\u526a\u5207\u540e\u7684\u6743\u91cd\u3002 \u7136\u540e\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8d4b\u503c\u64cd\u4f5c\u6765\u5c06\u6743\u503c\u8d4b\u7ed9\u6743\u503c\u53d8\u91cf\uff1a threshold = 1.0 weights = tf.get_default_graph().get_tensor_by_name(\"hidden1/kernel:0\") clipped_weights = tf.clip_by_norm(weights, clip_norm=threshold, axes=1) clip_weights = tf.assign(weights, clipped_weights) \u6211\u4eec\u4e5f\u53ef\u4ee5\u4e3a\u7b2c\u4e8c\u4e2a\u9690\u85cf\u5c42\u505a\u5230\u8fd9\u4e00\u70b9\uff1a weights2 = tf.get_default_graph().get_tensor_by_name(\"hidden2/kernel:0\") clipped_weights2 = tf.clip_by_norm(weights2, clip_norm=threshold, axes=1) clip_weights2 = tf.assign(weights2, clipped_weights2) \u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u521d\u59cb\u5316\u5668\u548c\u4e00\u4e2a\u4fdd\u5b58\u5668\uff1a init = tf.global_variables_initializer() saver = tf.train.Saver() \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8bad\u7ec3\u6a21\u578b\u3002 \u4e0e\u5f80\u5e38\u4e00\u6837\uff0c\u9664\u4e86\u5728\u8fd0\u884c training_op \u4e4b\u540e\uff0c\u6211\u4eec\u8fd0\u884c clip_weights \u548c clip_weights2 \u64cd\u4f5c\uff1a n_epochs = 20 batch_size = 50 with tf.Session() as sess: # not shown in the book init.run() # not shown for epoch in range(n_epochs): # not shown for iteration in range(mnist.train.num_examples // batch_size): # not shown X_batch, y_batch = mnist.train.next_batch(batch_size) # not shown sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) clip_weights.eval() clip_weights2.eval() # not shown acc_test = accuracy.eval(feed_dict={X: mnist.test.images, # not shown y: mnist.test.labels}) # not shown print(epoch, \"Test accuracy:\", acc_test) # not shown save_path = saver.save(sess, \"./my_model_final.ckpt\") # not shown \u4e0a\u9762\u7684\u5b9e\u73b0\u5f88\u7b80\u5355\uff0c\u5de5\u4f5c\u6b63\u5e38\uff0c\u4f46\u6709\u70b9\u9ebb\u70e6\u3002 \u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e00\u4e2a max_norm_regularizer() \u51fd\u6570\uff1a def max_norm_regularizer(threshold, axes=1, name=\"max_norm\", collection=\"max_norm\"): def max_norm(weights): clipped = tf.clip_by_norm(weights, clip_norm=threshold, axes=axes) clip_weights = tf.assign(weights, clipped, name=name) tf.add_to_collection(collection, clip_weights) return None # there is no regularization loss term return max_norm \u7136\u540e\u4f60\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u5f97\u5230\u4e00\u4e2a\u6700\u5927\u8303\u6570\u8c03\u8282\u5668\uff08\u4e0e\u4f60\u60f3\u8981\u7684\u9608\u503c\uff09\u3002 \u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u9690\u85cf\u5c42\u65f6\uff0c\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u6b63\u5219\u5316\u5668\u4f20\u9012\u7ed9 kernel_regularizer \u53c2\u6570\uff1a n_inputs = 28 * 28 n_hidden1 = 300 n_hidden2 = 50 n_outputs = 10 learning_rate = 0.01 momentum = 0.9 X = tf.placeholder(tf.float32, shape=(None, n_inputs), name=\"X\") y = tf.placeholder(tf.int64, shape=(None), name=\"y\") max_norm_reg = max_norm_regularizer(threshold=1.0) with tf.name_scope(\"dnn\"): hidden1 = tf.layers.dense(X, n_hidden1, activation=tf.nn.relu, kernel_regularizer=max_norm_reg, name=\"hidden1\") hidden2 = tf.layers.dense(hidden1, n_hidden2, activation=tf.nn.relu, kernel_regularizer=max_norm_reg, name=\"hidden2\") logits = tf.layers.dense(hidden2, n_outputs, name=\"outputs\") with tf.name_scope(\"loss\"): xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy, name=\"loss\") with tf.name_scope(\"train\"): optimizer = tf.train.MomentumOptimizer(learning_rate, momentum) training_op = optimizer.minimize(loss) with tf.name_scope(\"eval\"): correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) init = tf.global_variables_initializer() saver = tf.train.Saver() \u8bad\u7ec3\u4e0e\u5f80\u5e38\u4e00\u6837\uff0c\u9664\u4e86\u6bcf\u6b21\u8bad\u7ec3\u540e\u5fc5\u987b\u8fd0\u884c\u91cd\u91cf\u88c1\u526a\u64cd\u4f5c\uff1a \u8bf7\u6ce8\u610f\uff0c\u6700\u5927\u8303\u6570\u6b63\u5219\u5316\u4e0d\u9700\u8981\u5728\u6574\u4f53\u635f\u5931\u51fd\u6570\u4e2d\u6dfb\u52a0\u6b63\u5219\u5316\u635f\u5931\u9879\uff0c\u6240\u4ee5 max_norm() \u51fd\u6570\u8fd4\u56de None \u3002 \u4f46\u662f\uff0c\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e4b\u540e\uff0c\u4ecd\u9700\u8981\u8fd0\u884c clip_weights \u64cd\u4f5c\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u80fd\u591f\u638c\u63e1\u5b83\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 max_norm() \u51fd\u6570\u5c06 clip_weights \u8282\u70b9\u6dfb\u52a0\u5230\u6700\u5927\u8303\u6570\u526a\u88c1\u64cd\u4f5c\u7684\u96c6\u5408\u4e2d\u7684\u539f\u56e0\u3002\u60a8\u9700\u8981\u83b7\u53d6\u8fd9\u4e9b\u88c1\u526a\u64cd\u4f5c\u5e76\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u540e\u8fd0\u884c\u5b83\u4eec\uff1a n_epochs = 20 batch_size = 50 clip_all_weights = tf.get_collection(\"max_norm\") with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) sess.run(clip_all_weights) acc_test = accuracy.eval(feed_dict={X: mnist.test.images, # not shown in the book y: mnist.test.labels}) # not shown print(epoch, \"Test accuracy:\", acc_test) # not shown save_path = saver.save(sess, \"./my_model_final.ckpt\") # not shown","title":"\u6700\u5927\u8303\u6570\u6b63\u5219\u5316"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_20","text":"\u6700\u540e\u4e00\u4e2a\u6b63\u5219\u5316\u6280\u672f\uff0c\u6570\u636e\u589e\u5f3a\uff0c\u5305\u62ec\u4ece\u73b0\u6709\u7684\u8bad\u7ec3\u5b9e\u4f8b\u4e2d\u4ea7\u751f\u65b0\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u4eba\u4e3a\u5730\u589e\u52a0\u4e86\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u3002 \u8fd9\u5c06\u51cf\u5c11\u8fc7\u62df\u5408\uff0c\u4f7f\u4e4b\u6210\u4e3a\u6b63\u5219\u5316\u6280\u672f\u3002 \u8bc0\u7a8d\u662f\u751f\u6210\u903c\u771f\u7684\u8bad\u7ec3\u5b9e\u4f8b; \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u4eba\u4e0d\u5e94\u8be5\u80fd\u591f\u5206\u8fa8\u51fa\u54ea\u4e9b\u662f\u751f\u6210\u7684\uff0c\u54ea\u4e9b\u4e0d\u662f\u751f\u6210\u7684\u3002 \u800c\u4e14\uff0c\u7b80\u5355\u5730\u52a0\u767d\u566a\u58f0\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\u3002 \u4f60\u5e94\u7528\u7684\u4fee\u6539\u5e94\u8be5\u662f\u53ef\u4ee5\u5b66\u4e60\u7684\uff08\u767d\u566a\u58f0\u4e0d\u662f\uff09\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u6a21\u578b\u662f\u4e3a\u4e86\u5206\u7c7b\u8611\u83c7\u56fe\u7247\uff0c\u60a8\u53ef\u4ee5\u7a0d\u5fae\u79fb\u52a8\uff0c\u65cb\u8f6c\u548c\u8c03\u6574\u8bad\u7ec3\u96c6\u4e2d\u7684\u6bcf\u4e2a\u56fe\u7247\u7684\u5927\u5c0f\uff0c\u5e76\u5c06\u7ed3\u679c\u56fe\u7247\u6dfb\u52a0\u5230\u8bad\u7ec3\u96c6\uff08\u89c1\u56fe 11-10\uff09\u3002 \u8fd9\u8feb\u4f7f\u6a21\u578b\u66f4\u80fd\u5bb9\u5fcd\u56fe\u7247\u4e2d\u8611\u83c7\u7684\u4f4d\u7f6e\uff0c\u65b9\u5411\u548c\u5927\u5c0f\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u6a21\u578b\u5bf9\u5149\u7167\u6761\u4ef6\u66f4\u52a0\u5bbd\u5bb9\uff0c\u5219\u53ef\u4ee5\u7c7b\u4f3c\u5730\u751f\u6210\u5177\u6709\u5404\u79cd\u5bf9\u6bd4\u5ea6\u7684\u8bb8\u591a\u56fe\u50cf\u3002 \u5047\u8bbe\u8611\u83c7\u662f\u5bf9\u79f0\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6c34\u5e73\u7ffb\u8f6c\u56fe\u7247\u3002 \u901a\u8fc7\u7ed3\u5408\u8fd9\u4e9b\u8f6c\u6362\uff0c\u53ef\u4ee5\u5927\u5927\u589e\u52a0\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u3002 \u901a\u5e38\u6700\u597d\u5728\u8bad\u7ec3\u671f\u95f4\u751f\u6210\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4\u548c\u7f51\u7edc\u5e26\u5bbd\u3002TensorFlow \u63d0\u4f9b\u4e86\u591a\u79cd\u56fe\u50cf\u5904\u7406\u64cd\u4f5c\uff0c\u4f8b\u5982\u8f6c\u7f6e\uff08\u79fb\u4f4d\uff09\uff0c\u65cb\u8f6c\uff0c\u8c03\u6574\u5927\u5c0f\uff0c\u7ffb\u8f6c\u548c\u88c1\u526a\uff0c\u4ee5\u53ca\u8c03\u6574\u4eae\u5ea6\uff0c\u5bf9\u6bd4\u5ea6\uff0c\u9971\u548c\u5ea6\u548c\u8272\u8c03\uff08\u8bf7\u53c2\u9605 API \u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff09\u3002 \u8fd9\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e3a\u56fe\u50cf\u6570\u636e\u96c6\u5b9e\u73b0\u6570\u636e\u589e\u5f3a\u3002 \u8bad\u7ec3\u975e\u5e38\u6df1\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u53e6\u4e00\u4e2a\u5f3a\u5927\u7684\u6280\u672f\u662f\u6dfb\u52a0\u8df3\u8fc7\u8fde\u63a5\uff08\u8df3\u8fc7\u8fde\u63a5\u662f\u5c06\u5c42\u7684\u8f93\u5165\u6dfb\u52a0\u5230\u66f4\u9ad8\u5c42\u7684\u8f93\u51fa\u65f6\uff09\u3002 \u6211\u4eec\u5c06\u5728\u7b2c 13 \u7ae0\u4e2d\u8c08\u8bba\u6df1\u5ea6\u6b8b\u5dee\u7f51\u7edc\u65f6\u63a2\u8ba8\u8fd9\u4e2a\u60f3\u6cd5\u3002","title":"\u6570\u636e\u589e\u5f3a"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_21","text":"\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u6db5\u76d6\u4e86\u5f88\u591a\u6280\u672f\uff0c\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u5e94\u8be5\u4f7f\u7528\u54ea\u4e9b\u6280\u672f\u3002 \u8868 11-2 \u4e2d\u7684\u914d\u7f6e\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 \u5f53\u7136\uff0c\u5982\u679c\u4f60\u80fd\u627e\u5230\u89e3\u51b3\u7c7b\u4f3c\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u4f60\u5e94\u8be5\u5c1d\u8bd5\u91cd\u7528\u9884\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u90e8\u5206\u3002 \u8fd9\u4e2a\u9ed8\u8ba4\u914d\u7f6e\u53ef\u80fd\u9700\u8981\u8c03\u6574\uff1a \u5982\u679c\u4f60\u627e\u4e0d\u5230\u4e00\u4e2a\u597d\u7684\u5b66\u4e60\u7387\uff08\u6536\u655b\u901f\u5ea6\u592a\u6162\uff0c\u6240\u4ee5\u4f60\u589e\u52a0\u4e86\u8bad\u7ec3\u901f\u5ea6\uff0c\u73b0\u5728\u6536\u655b\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u662f\u7f51\u7edc\u7684\u51c6\u786e\u6027\u4e0d\u662f\u6700\u7406\u60f3\u7684\uff09\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u6dfb\u52a0\u4e00\u4e2a\u5b66\u4e60\u7387\u8c03\u6574\uff0c\u5982\u6307\u6570\u8870\u51cf\u3002 \u5982\u679c\u4f60\u7684\u8bad\u7ec3\u96c6\u592a\u5c0f\uff0c\u4f60\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u589e\u5f3a\u3002 \u5982\u679c\u4f60\u9700\u8981\u4e00\u4e2a\u7a00\u758f\u7684\u6a21\u578b\uff0c\u4f60\u53ef\u4ee5\u6dfb\u52a0 l1 \u6b63\u5219\u5316\u6df7\u5408\uff08\u5e76\u53ef\u4ee5\u9009\u62e9\u5728\u8bad\u7ec3\u540e\u5c06\u5fae\u5c0f\u7684\u6743\u91cd\u5f52\u96f6\uff09\u3002 \u5982\u679c\u60a8\u9700\u8981\u66f4\u7a00\u758f\u7684\u6a21\u578b\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 FTRL \u800c\u4e0d\u662f Adam \u4f18\u5316\u4ee5\u53ca l1 \u6b63\u5219\u5316\u3002 \u5982\u679c\u5728\u8fd0\u884c\u65f6\u9700\u8981\u5feb\u901f\u6a21\u578b\uff0c\u5219\u53ef\u80fd\u9700\u8981\u5220\u9664\u6279\u91cf\u6807\u51c6\u5316\uff0c\u5e76\u53ef\u80fd\u7528 leakyReLU \u66ff\u6362 ELU \u6fc0\u6d3b\u51fd\u6570\u3002 \u6709\u4e00\u4e2a\u7a00\u758f\u7684\u6a21\u578b\u4e5f\u5c06\u6709\u6240\u5e2e\u52a9\u3002 \u6709\u4e86\u8fd9\u4e9b\u6307\u5bfc\u65b9\u9488\uff0c\u4f60\u73b0\u5728\u5df2\u7ecf\u51c6\u5907\u597d\u8bad\u7ec3\u975e\u5e38\u6df1\u7684\u7f51\u7edc - \u597d\u5427\uff0c\u5982\u679c\u4f60\u975e\u5e38\u6709\u8010\u5fc3\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\uff01 \u5982\u679c\u4f7f\u7528\u5355\u53f0\u673a\u5668\uff0c\u5219\u53ef\u80fd\u9700\u8981\u7b49\u5f85\u51e0\u5929\u751a\u81f3\u51e0\u4e2a\u6708\u624d\u80fd\u5b8c\u6210\u8bad\u7ec3\u3002 \u5728\u4e0b\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528\u5206\u5e03\u5f0f TensorFlow \u5728\u8bb8\u591a\u670d\u52a1\u5668\u548c GPU \u4e0a\u8bad\u7ec3\u548c\u8fd0\u884c\u6a21\u578b\u3002","title":"\u5b9e\u8df5\u6307\u5357"},{"location":"11.%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_22","text":"\u4f7f\u7528 He \u521d\u59cb\u5316\u968f\u673a\u9009\u62e9\u6743\u91cd\uff0c\u662f\u5426\u53ef\u4ee5\u5c06\u6240\u6709\u6743\u91cd\u521d\u59cb\u5316\u4e3a\u76f8\u540c\u7684\u503c\uff1f \u53ef\u4ee5\u5c06\u504f\u7f6e\u521d\u59cb\u5316\u4e3a 0 \u5417\uff1f \u8bf4\u51fa ELU \u6fc0\u6d3b\u529f\u80fd\u4e0e ReLU \u76f8\u6bd4\u7684\u4e09\u4e2a\u4f18\u70b9\u3002 \u5728\u54ea\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u60f3\u8981\u4f7f\u7528\u4ee5\u4e0b\u6bcf\u4e2a\u6fc0\u6d3b\u51fd\u6570\uff1aELU\uff0cleaky ReLU\uff08\u53ca\u5176\u53d8\u4f53\uff09\uff0cReLU\uff0ctanh\uff0clogistic \u4ee5\u53ca softmax\uff1f \u4f7f\u7528 MomentumOptimizer \u65f6\uff0c\u5982\u679c\u5c06 momentum \u8d85\u53c2\u6570\u8bbe\u7f6e\u5f97\u592a\u63a5\u8fd1 1\uff08\u4f8b\u5982\uff0c0.99999\uff09\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f \u8bf7\u5217\u4e3e\u60a8\u53ef\u4ee5\u751f\u6210\u7a00\u758f\u6a21\u578b\u7684\u4e09\u79cd\u65b9\u6cd5\u3002 dropout \u662f\u5426\u4f1a\u51cf\u6162\u8bad\u7ec3\uff1f \u5b83\u662f\u5426\u4f1a\u51cf\u6162\u63a8\u65ad\uff08\u5373\u9884\u6d4b\u65b0\u7684\u5b9e\u4f8b\uff09\uff1f \u6df1\u5ea6\u5b66\u4e60\u3002 \u5efa\u7acb\u4e00\u4e2a DNN\uff0c\u6709\u4e94\u4e2a\u9690\u85cf\u5c42\uff0c\u6bcf\u5c42 100 \u4e2a\u795e\u7ecf\u5143\uff0c\u4f7f\u7528 He \u521d\u59cb\u5316\u548c ELU \u6fc0\u6d3b\u51fd\u6570\u3002 \u4f7f\u7528 Adam \u4f18\u5316\u548c\u63d0\u524d\u505c\u6b62\uff0c\u8bf7\u5c1d\u8bd5\u5728 MNIST \u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u4f46\u53ea\u80fd\u4f7f\u7528\u6570\u5b57 0 \u5230 4\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u4e2a\u7ec3\u4e60\u4e2d\u5728\u6570\u5b57 5 \u5230 9 \u4e0a\u8fdb\u884c\u8fc1\u79fb\u5b66\u4e60\u3002 \u60a8\u9700\u8981\u4e00\u4e2a\u5305\u542b\u4e94\u4e2a\u795e\u7ecf\u5143\u7684 softmax \u8f93\u51fa\u5c42\uff0c\u5e76\u4e14\u4e00\u5982\u65e2\u5f80\u5730\u786e\u4fdd\u5b9a\u671f\u4fdd\u5b58\u68c0\u67e5\u70b9\uff0c\u5e76\u4fdd\u5b58\u6700\u7ec8\u6a21\u578b\uff0c\u4ee5\u4fbf\u7a0d\u540e\u518d\u4f7f\u7528\u5b83\u3002 \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u8c03\u6574\u8d85\u53c2\u6570\uff0c\u5e76\u67e5\u770b\u4f60\u80fd\u8fbe\u5230\u4ec0\u4e48\u51c6\u786e\u5ea6\u3002 \u73b0\u5728\u5c1d\u8bd5\u6dfb\u52a0\u6279\u91cf\u6807\u51c6\u5316\u5e76\u6bd4\u8f83\u5b66\u4e60\u66f2\u7ebf\uff1a\u5b83\u662f\u5426\u6bd4\u4ee5\u524d\u6536\u655b\u5f97\u66f4\u5feb\uff1f \u5b83\u662f\u5426\u4f1a\u4ea7\u751f\u66f4\u597d\u7684\u6a21\u578b\uff1f \u6a21\u578b\u662f\u5426\u8fc7\u62df\u5408\u8bad\u7ec3\u96c6\uff1f \u5c1d\u8bd5\u5c06 dropout \u6dfb\u52a0\u5230\u6bcf\u4e00\u5c42\uff0c\u7136\u540e\u91cd\u8bd5\u3002 \u5b83\u6709\u5e2e\u52a9\u5417\uff1f \u8fc1\u79fb\u5b66\u4e60\u3002 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 DNN\uff0c\u5b83\u590d\u5236\u5148\u524d\u6a21\u578b\u7684\u6240\u6709\u9884\u8bad\u7ec3\u7684\u9690\u85cf\u5c42\uff0c\u51bb\u7ed3\u5b83\u4eec\uff0c\u5e76\u7528\u65b0\u7684\u4e00\u5c42\u66ff\u6362 softmax \u8f93\u51fa\u5c42\u3002 \u5728\u6570\u5b57 5 \u5230 9 \u8bad\u7ec3\u8fd9\u4e2a\u65b0\u7684 DNN \uff0c\u6bcf\u4e2a\u6570\u5b57\u53ea\u4f7f\u7528 100 \u4e2a\u56fe\u50cf\uff0c\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1f \u5c3d\u7ba1\u6837\u672c\u8fd9\u4e48\u5c11\uff0c\u4f60\u80fd\u8fbe\u5230\u9ad8\u51c6\u786e\u5ea6\u5417\uff1f \u5c1d\u8bd5\u7f13\u5b58\u51bb\u7ed3\u7684\u5c42\uff0c\u5e76\u518d\u6b21\u8bad\u7ec3\u6a21\u578b\uff1a\u73b0\u5728\u901f\u5ea6\u6709\u591a\u5feb\uff1f \u518d\u6b21\u5c1d\u8bd5\u590d\u7528\u56db\u4e2a\u9690\u85cf\u5c42\u800c\u4e0d\u662f\u4e94\u4e2a\u3002 \u4f60\u80fd\u8fbe\u5230\u66f4\u9ad8\u7684\u51c6\u786e\u5ea6\u5417\uff1f \u73b0\u5728\uff0c\u89e3\u51bb\u524d\u4e24\u4e2a\u9690\u85cf\u5c42\u5e76\u7ee7\u7eed\u8bad\u7ec3\uff1a\u60a8\u53ef\u4ee5\u8ba9\u6a21\u578b\u8868\u73b0\u5f97\u66f4\u597d\u5417\uff1f \u8f85\u52a9\u4efb\u52a1\u7684\u9884\u8bad\u7ec3\u3002 \u5728\u672c\u7ec3\u4e60\u4e2d\uff0c\u4f60\u5c06\u6784\u5efa\u4e00\u4e2a DNN\uff0c\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a MNIST \u6570\u5b57\u56fe\u50cf\uff0c\u5e76\u9884\u6d4b\u5b83\u4eec\u662f\u5426\u4ee3\u8868\u76f8\u540c\u7684\u6570\u5b57\u3002 \u7136\u540e\uff0c\u4f60\u5c06\u590d\u7528\u8be5\u7f51\u7edc\u7684\u8f83\u4f4e\u5c42\uff0c\u6765\u4f7f\u7528\u975e\u5e38\u5c11\u7684\u8bad\u7ec3\u6570\u636e\u6765\u8bad\u7ec3 MNIST \u5206\u7c7b\u5668\u3002 \u9996\u5148\u6784\u5efa\u4e24\u4e2a DNN\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a DNN A \u548c B\uff09\uff0c\u5b83\u4eec\u4e0e\u4e4b\u524d\u6784\u5efa\u7684 DNN \u7c7b\u4f3c\uff0c\u4f46\u6ca1\u6709\u8f93\u51fa\u5c42\uff1a\u6bcf\u4e2a DNN \u5e94\u8be5\u6709\u4e94\u4e2a\u9690\u85cf\u5c42\uff0c\u6bcf\u4e2a\u5c42\u5305\u542b 100 \u4e2a\u795e\u7ecf\u5143\uff0c\u4f7f\u7528 He \u521d\u59cb\u5316\u548c ELU \u6fc0\u6d3b\u51fd\u6570\u3002 \u63a5\u4e0b\u6765\uff0c\u5728\u4e24\u4e2a DNN \u4e0a\u6dfb\u52a0\u4e00\u4e2a\u8f93\u51fa\u5c42\u3002 \u4f60\u5e94\u8be5\u4f7f\u7528 TensorFlow \u7684 concat()\u51fd\u6570\u548c axis = 1`\uff0c\u5c06\u4e24\u4e2a DNN \u7684\u8f93\u51fa\u6cbf\u7740\u6a2a\u8f74\u8fde\u63a5\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u8f93\u5165\u5230\u8f93\u51fa\u5c42\u3002 \u8f93\u51fa\u5c42\u5e94\u8be5\u5305\u542b\u5355\u4e2a\u795e\u7ecf\u5143\uff0c\u4f7f\u7528 logistic \u6fc0\u6d3b\u51fd\u6570\u3002 \u5c06 MNIST \u8bad\u7ec3\u96c6\u5206\u4e3a\u4e24\u7ec4\uff1a\u7b2c\u4e00\u90e8\u5206\u5e94\u5305\u542b 55,000\u4e2a \u56fe\u50cf\uff0c\u7b2c\u4e8c\u90e8\u5206\u5e94\u5305\u542b 5000 \u4e2a\u56fe\u50cf\u3002 \u521b\u5efa\u4e00\u4e2a\u751f\u6210\u8bad\u7ec3\u6279\u6b21\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u662f\u4ece\u7b2c\u4e00\u90e8\u5206\u4e2d\u6311\u9009\u7684\u4e00\u5bf9 MNIST \u56fe\u50cf\u3002 \u4e00\u534a\u7684\u8bad\u7ec3\u5b9e\u4f8b\u5e94\u8be5\u662f\u5c5e\u4e8e\u540c\u4e00\u7c7b\u7684\u56fe\u50cf\u5bf9\uff0c\u800c\u53e6\u4e00\u534a\u5e94\u8be5\u662f\u6765\u81ea\u4e0d\u540c\u7c7b\u522b\u7684\u56fe\u50cf\u3002 \u5bf9\u4e8e\u6bcf\u4e00\u5bf9\uff0c\u5982\u679c\u56fe\u50cf\u6765\u81ea\u540c\u4e00\u7c7b\uff0c\u8bad\u7ec3\u6807\u7b7e\u5e94\u8be5\u4e3a 0\uff1b\u5982\u679c\u6765\u81ea\u4e0d\u540c\u7c7b\uff0c\u5219\u6807\u7b7e\u5e94\u4e3a 1\u3002 \u5728\u8fd9\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3 DNN\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u56fe\u50cf\u5bf9\uff0c\u4f60\u53ef\u4ee5\u540c\u65f6\u5c06\u7b2c\u4e00\u5f20\u56fe\u50cf\u9001\u5165 DNN A\uff0c\u5c06\u7b2c\u4e8c\u5f20\u56fe\u50cf\u9001\u5165 DNN B\u3002\u6574\u4e2a\u7f51\u7edc\u5c06\u9010\u6e10\u5b66\u4f1a\u5224\u65ad\u4e24\u5f20\u56fe\u50cf\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\u3002 \u73b0\u5728\u901a\u8fc7\u590d\u7528\u548c\u51bb\u7ed3 DNN A \u7684\u9690\u85cf\u5c42\uff0c\u5e76\u6dfb\u52a0 1 0\u4e2a\u795e\u7ecf\u5143\u7684 softmax \u8f93\u51fa\u5c42\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 DNN\u3002 \u5728\u7b2c\u4e8c\u90e8\u5206\u4e0a\u8bad\u7ec3\u8fd9\u4e2a\u7f51\u7edc\uff0c\u770b\u770b\u4f60\u662f\u5426\u53ef\u4ee5\u5b9e\u73b0\u8f83\u597d\u7684\u8868\u73b0\uff0c\u5c3d\u7ba1\u6bcf\u7c7b\u53ea\u6709 500 \u4e2a\u56fe\u50cf\u3002 \u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u5728\u9644\u5f55 A \u4e2d\u3002","title":"\u7ec3\u4e60"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/","text":"\u5341\u4e8c\u3001\u8bbe\u5907\u548c\u670d\u52a1\u5668\u4e0a\u7684\u5206\u5e03\u5f0f TensorFlow \u5728\u7b2c 11 \u7ae0\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u51e0\u79cd\u53ef\u4ee5\u660e\u663e\u52a0\u901f\u8bad\u7ec3\u7684\u6280\u672f\uff1a\u66f4\u597d\u7684\u6743\u91cd\u521d\u59cb\u5316\uff0c\u6279\u91cf\u6807\u51c6\u5316\uff0c\u590d\u6742\u7684\u4f18\u5316\u5668\u7b49\u7b49\u3002 \u4f46\u662f\uff0c\u5373\u4f7f\u91c7\u7528\u4e86\u6240\u6709\u8fd9\u4e9b\u6280\u672f\uff0c\u5728\u5177\u6709\u5355\u4e2a CPU \u7684\u5355\u53f0\u673a\u5668\u4e0a\u8bad\u7ec3\u5927\u578b\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u9700\u8981\u51e0\u5929\u751a\u81f3\u51e0\u5468\u7684\u65f6\u95f4\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5982\u4f55\u4f7f\u7528 TensorFlow \u5728\u591a\u4e2a\u8bbe\u5907\uff08CPU \u548c GPU\uff09\u4e0a\u5206\u914d\u8ba1\u7b97\u5e76\u5c06\u5b83\u4eec\u5e76\u884c\u8fd0\u884c\uff08\u53c2\u89c1\u56fe 12-1\uff09\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4f1a\u5148\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u591a\u4e2a\u8bbe\u5907\u4e0a\u5206\u914d\u8ba1\u7b97\uff0c\u7136\u540e\u5728\u591a\u53f0\u673a\u5668\u4e0a\u7684\u591a\u4e2a\u8bbe\u5907\u4e0a\u5206\u914d\u8ba1\u7b97\u3002 \u4e0e\u5176\u4ed6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u76f8\u6bd4\uff0cTensorFlow \u5bf9\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u652f\u6301\u662f\u5176\u4e3b\u8981\u4eae\u70b9\u4e4b\u4e00\u3002 \u5b83\u4f7f\u60a8\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u5982\u4f55\u8de8\u8bbe\u5907\u548c\u670d\u52a1\u5668\u5206\u5e03\uff08\u6216\u590d\u5236\uff09\u60a8\u7684\u8ba1\u7b97\u56fe\uff0c\u5e76\u4e14\u53ef\u4ee5\u8ba9\u60a8\u4ee5\u7075\u6d3b\u7684\u65b9\u5f0f\u5e76\u884c\u548c\u540c\u6b65\u64cd\u4f5c\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u5404\u79cd\u5e76\u884c\u65b9\u6cd5\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002 \u6211\u4eec\u6765\u770b\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u65b9\u6cd5\u6765\u5e76\u884c\u6267\u884c\u548c\u8bad\u7ec3\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u8fd9\u8ba9\u6211\u4eec\u4e0d\u518d\u9700\u8981\u7b49\u5f85\u6570\u5468\u624d\u80fd\u5b8c\u6210\u8bad\u7ec3\u7b97\u6cd5\uff0c\u800c\u6700\u7ec8\u53ef\u80fd\u53ea\u4f1a\u7b49\u5f85\u51e0\u4e2a\u5c0f\u65f6\u3002 \u8fd9\u4e0d\u4ec5\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u65f6\u95f4\uff0c\u8fd8\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u5c1d\u8bd5\u5404\u79cd\u6a21\u578b\uff0c\u5e76\u7ecf\u5e38\u91cd\u65b0\u8bad\u7ec3\u6a21\u578b\u4e0a\u7684\u65b0\u6570\u636e\u3002 \u8fd8\u6709\u5176\u4ed6\u5f88\u597d\u7684\u5e76\u884c\u5316\u4f8b\u5b50\uff0c\u5305\u62ec\u5f53\u6211\u4eec\u5728\u5fae\u8c03\u6a21\u578b\u65f6\u53ef\u4ee5\u63a2\u7d22\u66f4\u5927\u7684\u8d85\u53c2\u6570\u7a7a\u95f4\uff0c\u5e76\u6709\u6548\u5730\u8fd0\u884c\u5927\u89c4\u6a21\u795e\u7ecf\u7f51\u7edc\u3002 \u4f46\u6211\u4eec\u5fc5\u987b\u5148\u5b66\u4f1a\u8d70\u8def\u624d\u80fd\u8dd1\u6b65\u3002 \u6211\u4eec\u5148\u4ece\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u51e0\u4e2a GPU \u4e0a\u5e76\u884c\u5316\u7b80\u5355\u56fe\u5f62\u5f00\u59cb\u3002 \u4e00\u53f0\u673a\u5668\u4e0a\u591a\u8bbe\u5907 \u53ea\u9700\u6dfb\u52a0 GPU \u5361\u5230\u5355\u4e2a\u673a\u5668\uff0c\u60a8\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e3b\u8981\u7684\u6027\u80fd\u63d0\u5347\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c31\u8db3\u591f\u4e86\u3002 \u4f60\u6839\u672c\u4e0d\u9700\u8981\u4f7f\u7528\u591a\u53f0\u673a\u5668\u3002 \u4f8b\u5982\uff0c\u901a\u5e38\u5728\u5355\u53f0\u673a\u5668\u4e0a\u4f7f\u7528 8 \u4e2a GPU\uff0c\u800c\u4e0d\u662f\u5728\u591a\u53f0\u673a\u5668\u4e0a\u4f7f\u7528 16 \u4e2a GPU\uff08\u7531\u4e8e\u591a\u673a\u5668\u8bbe\u7f6e\u4e2d\u7684\u7f51\u7edc\u901a\u4fe1\u5e26\u6765\u7684\u989d\u5916\u5ef6\u8fdf\uff09\uff0c\u53ef\u4ee5\u540c\u6837\u5feb\u5730\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u8bbe\u7f6e\u60a8\u7684\u73af\u5883\uff0c\u4ee5\u4fbf TensorFlow \u53ef\u4ee5\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u4f7f\u7528\u591a\u4e2a GPU \u5361\u3002 \u7136\u540e\uff0c\u6211\u4eec\u5c06\u770b\u770b\u5982\u4f55\u5728\u53ef\u7528\u8bbe\u5907\u4e0a\u8fdb\u884c\u5206\u5e03\u64cd\u4f5c\uff0c\u5e76\u4e14\u5e76\u884c\u6267\u884c\u5b83\u4eec\u3002 \u5b89\u88c5 \u4e3a\u4e86\u5728\u591a\u4e2a GPU \u5361\u4e0a\u8fd0\u884c TensorFlow\uff0c\u9996\u5148\u9700\u8981\u786e\u4fdd GPU \u5361\u5177\u6709 NVidia \u8ba1\u7b97\u80fd\u529b\uff08\u5927\u4e8e\u6216\u7b49\u4e8e3.0\uff09\u3002 \u8fd9\u5305\u62ec Nvidia \u7684 Titan\uff0cTitan X\uff0cK20 \u548c K40\uff08\u5982\u679c\u4f60\u62e5\u6709\u53e6\u4e00\u5f20\u5361\uff0c\u4f60\u53ef\u4ee5\u5728 https://developer.nvidia.com/cuda-gpus \u67e5\u770b\u5b83\u7684\u517c\u5bb9\u6027\uff09\u3002 \u5982\u679c\u60a8\u4e0d\u62e5\u6709\u4efb\u4f55 GPU \u5361\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u5177\u6709 GPU \u529f\u80fd\u7684\u4e3b\u673a\u670d\u52a1\u5668\uff0c\u5982 Amazon AWS\u3002 \u5728 \u017digaAvsec \u7684 \u535a\u5ba2\u6587\u7ae0 \u4e2d\uff0c\u63d0\u4f9b\u4e86\u5728 Amazon AWS GPU \u5b9e\u4f8b\u4e0a\u4f7f\u7528 Python 3.5 \u8bbe\u7f6e TensorFlow 0.9 \u7684\u8be6\u7ec6\u8bf4\u660e\u3002\u5c06\u5b83\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u7684 TensorFlow \u5e94\u8be5\u4e0d\u4f1a\u592a\u96be\u3002 Google \u8fd8\u53d1\u5e03\u4e86\u4e00\u9879\u540d\u4e3a Cloud Machine Learning \u7684\u4e91\u670d\u52a1\u6765\u8fd0\u884c TensorFlow \u56fe\u8868\u3002 2016 \u5e74 5 \u6708\uff0c\u4ed6\u4eec\u5ba3\u5e03\u4ed6\u4eec\u7684\u5e73\u53f0\u73b0\u5728\u5305\u62ec\u914d\u5907\u5f20\u91cf\u5904\u7406\u5668\uff08TPU\uff09\u7684\u670d\u52a1\u5668\uff0c\u4e13\u95e8\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u5904\u7406\u5668\uff0c\u6bd4\u8bb8\u591a GPU \u5904\u7406 ML \u4efb\u52a1\u8981\u5feb\u5f97\u591a\u3002 \u5f53\u7136\uff0c\u53e6\u4e00\u79cd\u9009\u62e9\u53ea\u662f\u8d2d\u4e70\u4f60\u81ea\u5df1\u7684 GPU \u5361\u3002 Tim Dettmers \u5199\u4e86\u4e00\u7bc7\u5f88\u68d2\u7684\u535a\u5ba2\u6587\u7ae0\u6765\u5e2e\u52a9\u4f60\u9009\u62e9\uff0c\u4ed6\u4f1a\u5b9a\u671f\u66f4\u65b0\u5b83\u3002 \u60a8\u5fc5\u987b\u4e0b\u8f7d\u5e76\u5b89\u88c5\u76f8\u5e94\u7248\u672c\u7684 CUDA \u548c cuDNN \u5e93\uff08\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f TensorFlow 1.0.0\uff0c\u5219\u4e3a CUDA 8.0 \u548c cuDNN 5.1\uff09\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e9b\u73af\u5883\u53d8\u91cf\uff0c\u4ee5\u4fbf TensorFlow \u77e5\u9053\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230 CUDA \u548c cuDNN\u3002 \u8be6\u7ec6\u7684\u5b89\u88c5\u8bf4\u660e\u53ef\u80fd\u4f1a\u76f8\u5f53\u8fc5\u901f\u5730\u66f4\u6539\uff0c\u56e0\u6b64\u6700\u597d\u6309\u7167 TensorFlow \u7f51\u7ad9\u4e0a\u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002 Nvidia \u7684 CUDA \u5141\u8bb8\u5f00\u53d1\u8005\u4f7f\u7528\u652f\u6301 CUDA \u7684 GPU \u8fdb\u884c\u5404\u79cd\u8ba1\u7b97\uff08\u4e0d\u4ec5\u4ec5\u662f\u56fe\u5f62\u52a0\u901f\uff09\u3002 Nvidia \u7684 CUDA \u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5e93\uff08cuDNN\uff09\u662f\u9488\u5bf9 DNN \u7684 GPU \u52a0\u901f\u539f\u8bed\u5e93\u3002 \u5b83\u63d0\u4f9b\u4e86\u5e38\u7528 DNN \u8ba1\u7b97\u7684\u4f18\u5316\u5b9e\u73b0\uff0c\u4f8b\u5982\u6fc0\u6d3b\u5c42\uff0c\u5f52\u4e00\u5316\uff0c\u524d\u5411\u548c\u540e\u5411\u5377\u79ef\u4ee5\u53ca\u6c60\u5316\uff08\u53c2\u89c1\u7b2c 13 \u7ae0\uff09\u3002 \u5b83\u662f Nvidia Deep Learning SDK \u7684\u4e00\u90e8\u5206\uff08\u8bf7\u6ce8\u610f\uff0c\u5b83\u9700\u8981\u521b\u5efa\u4e00\u4e2a Nvidia \u5f00\u53d1\u8005\u5e10\u6237\u624d\u80fd\u4e0b\u8f7d\u5b83\uff09\u3002 TensorFlow \u4f7f\u7528 CUDA \u548c cuDNN \u6765\u63a7\u5236 GPU \u5361\u5e76\u52a0\u901f\u8ba1\u7b97\uff08\u89c1\u56fe 12-2\uff09\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 nvidia-smi \u547d\u4ee4\u6765\u68c0\u67e5 CUDA \u662f\u5426\u5df2\u6b63\u786e\u5b89\u88c5\u3002 \u5b83\u5217\u51fa\u4e86\u53ef\u7528\u7684 GPU \u5361\u4ee5\u53ca\u6bcf\u5f20\u5361\u4e0a\u8fd0\u884c\u7684\u8fdb\u7a0b\uff1a \u6700\u540e\uff0c\u60a8\u5fc5\u987b\u5b89\u88c5\u652f\u6301 GPU \u7684 TensorFlow\u3002 \u5982\u679c\u4f60\u4f7f\u7528 virtualenv \u521b\u5efa\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u73af\u5883\uff0c\u4f60\u9996\u5148\u9700\u8981\u6fc0\u6d3b\u5b83\uff1a $ cd $ML_PATH # Your ML working directory (e.g., HOME/ml) $ source env/bin/activate \u7136\u540e\u5b89\u88c5\u5408\u9002\u7684\u652f\u6301 GPU \u7684 TensorFlow \u7248\u672c\uff1a $ pip3 install --upgrade tensorflow-gpu \u73b0\u5728\u60a8\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a Python shell \u5e76\u901a\u8fc7\u5bfc\u5165 TensorFlow \u5e76\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd\u6765\u68c0\u67e5 TensorFlow \u662f\u5426\u6b63\u786e\u68c0\u6d4b\u5e76\u4f7f\u7528 CUDA \u548c cuDNN\uff1a >>> import tensorflow as tf I [...]/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally I [...]/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally I [...]/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally I [...]/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally I [...]/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally >>> sess = tf.Session() [...] I [...]/gpu_init.cc:102] Found device 0 with properties: name: GRID K520 major: 3 minor: 0 memoryClockRate (GHz) 0.797 pciBusID 0000:00:03.0 Total memory: 4.00GiB Free memory: 3.95GiB I [...]/gpu_init.cc:126] DMA: 0 I [...]/gpu_init.cc:136] 0: Y I [...]/gpu_device.cc:839] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0) \u770b\u8d77\u6765\u4e0d\u9519\uff01TensorFlow \u68c0\u6d4b\u5230 CUDA \u548c cuDNN \u5e93\uff0c\u5e76\u4f7f\u7528 CUDA \u5e93\u6765\u68c0\u6d4b GPU \u5361\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f Nvidia Grid K520 \u5361\uff09\u3002 \u7ba1\u7406 GPU \u5185\u5b58 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cTensorFlow \u4f1a\u5728\u60a8\u7b2c\u4e00\u6b21\u8fd0\u884c\u56fe\u5f62\u65f6\u81ea\u52a8\u83b7\u53d6\u6240\u6709\u53ef\u7528 GPU \u4e2d\u7684\u6240\u6709 RAM\uff0c\u56e0\u6b64\u5f53\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u4ecd\u5728\u8fd0\u884c\u65f6\uff0c\u60a8\u5c06\u65e0\u6cd5\u542f\u52a8\u7b2c\u4e8c\u4e2a TensorFlow \u7a0b\u5e8f\u3002 \u5982\u679c\u4f60\u5c1d\u8bd5\uff0c\u4f60\u4f1a\u5f97\u5230\u4ee5\u4e0b\u9519\u8bef\uff1a E [...]/cuda_driver.cc:965] failed to allocate 3.66G (3928915968 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY \u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u5728\u4e0d\u540c\u7684 GPU \u5361\u4e0a\u8fd0\u884c\u6bcf\u4e2a\u8fdb\u7a0b\u3002 \u4e3a\u6b64\uff0c\u6700\u7b80\u5355\u7684\u9009\u62e9\u662f\u8bbe\u7f6e CUDA_VISIBLE_DEVICES \u73af\u5883\u53d8\u91cf\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u8fdb\u7a0b\u53ea\u80fd\u770b\u5230\u5bf9\u5e94\u7684 GPU \u5361\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u542f\u52a8\u4e24\u4e2a\u7a0b\u5e8f\uff1a $ CUDA_VISIBLE_DEVICES=0,1 python3 program_1.py # and in another terminal: $ CUDA_VISIBLE_DEVICES=3,2 python3 program_2.py \u7a0b\u5e8f #1 \u53ea\u4f1a\u770b\u5230 GPU \u5361 0 \u548c 1\uff08\u5206\u522b\u7f16\u53f7\u4e3a 0 \u548c 1\uff09\uff0c\u7a0b\u5e8f #2 \u53ea\u4f1a\u770b\u5230 GPU \u5361 2 \u548c 3\uff08\u5206\u522b\u7f16\u53f7\u4e3a 1 \u548c 0\uff09\u3002 \u4e00\u5207\u90fd\u4f1a\u6b63\u5e38\u5de5\u4f5c\uff08\u89c1\u56fe 12-3\uff09\u3002 \u53e6\u4e00\u79cd\u9009\u62e9\u662f\u544a\u8bc9 TensorFlow \u53ea\u6293\u53d6\u4e00\u5c0f\u90e8\u5206\u5185\u5b58\u3002 \u4f8b\u5982\uff0c\u8981\u4f7f TensorFlow \u53ea\u5360\u7528\u6bcf\u4e2a GPU \u5185\u5b58\u7684 40%\uff0c\u60a8\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a ConfigProto \u5bf9\u8c61\uff0c\u5c06\u5176 gpu_options.per_process_gpu_memory_fraction \u9009\u9879\u8bbe\u7f6e\u4e3a 0.4\uff0c\u5e76\u4f7f\u7528\u4ee5\u4e0b\u914d\u7f6e\u521b\u5efa session \uff1a config = tf.ConfigProto() config.gpu_options.per_process_gpu_memory_fraction = 0.4 session = tf.Session(config=config) \u73b0\u5728\u50cf\u8fd9\u6837\u7684\u4e24\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684 GPU \u5361\u5e76\u884c\u8fd0\u884c\uff08\u4f46\u4e0d\u662f\u4e09\u4e2a\uff0c\u56e0\u4e3a 3\u00d70.4> 1 \uff09\u3002 \u89c1\u56fe 12-4\u3002 \u5982\u679c\u5728\u4e24\u4e2a\u7a0b\u5e8f\u90fd\u8fd0\u884c\u65f6\u8fd0\u884c nvidia-smi \u547d\u4ee4\uff0c\u5219\u5e94\u8be5\u770b\u5230\u6bcf\u4e2a\u8fdb\u7a0b\u5360\u7528\u6bcf\u4e2a\u5361\u7684\u603b RAM \u5927\u7ea6 40%\uff1a \u53e6\u4e00\u79cd\u9009\u62e9\u662f\u544a\u8bc9 TensorFlow \u53ea\u5728\u9700\u8981\u65f6\u624d\u6293\u53d6\u5185\u5b58\u3002 \u4e3a\u6b64\uff0c\u60a8\u5fc5\u987b\u5c06 config.gpu_options.allow_growth \u8bbe\u7f6e\u4e3a True \u3002\u4f46\u662f\uff0cTensorFlow \u4e00\u65e6\u6293\u53d6\u5185\u5b58\u5c31\u4e0d\u4f1a\u91ca\u653e\u5185\u5b58\uff08\u4ee5\u907f\u514d\u5185\u5b58\u788e\u7247\uff09\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u5185\u5b58\u4e0d\u8db3\u3002 \u662f\u5426\u4f7f\u7528\u6b64\u9009\u9879\u53ef\u80fd\u96be\u4ee5\u786e\u5b9a\uff0c\u56e0\u6b64\u4e00\u822c\u800c\u8a00\uff0c\u60a8\u53ef\u80fd\u60f3\u8981\u575a\u6301\u4e4b\u524d\u7684\u67d0\u4e2a\u9009\u9879\u3002 \u597d\u7684\uff0c\u73b0\u5728\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u652f\u6301 GPU \u7684 TensorFlow \u5b89\u88c5\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u4f7f\u7528\u5b83\uff01 \u8bbe\u5907\u5e03\u7f6e\u64cd\u4f5c TensorFlow \u767d\u76ae\u4e66\u4ecb\u7ecd\u4e86\u4e00\u79cd\u53cb\u597d\u7684\u52a8\u6001\u5e03\u7f6e\u5668\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u80fd\u591f\u81ea\u52a8\u5c06\u64cd\u4f5c\u5206\u5e03\u5230\u6240\u6709\u53ef\u7528\u8bbe\u5907\u4e0a\uff0c\u5e76\u8003\u8651\u5230\u4ee5\u524d\u8fd0\u884c\u56fe\u4e2d\u6240\u6d4b\u91cf\u7684\u8ba1\u7b97\u65f6\u95f4\uff0c\u4f30\u7b97\u6bcf\u6b21\u64cd\u4f5c\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5f20\u91cf\u7684\u5927\u5c0f\uff0c \u6bcf\u4e2a\u8bbe\u5907\u53ef\u7528\u7684 RAM\uff0c\u4f20\u8f93\u6570\u636e\u8fdb\u51fa\u8bbe\u5907\u65f6\u7684\u901a\u4fe1\u5ef6\u8fdf\uff0c\u6765\u81ea\u7528\u6237\u7684\u63d0\u793a\u548c\u7ea6\u675f\u7b49\u7b49\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u590d\u6742\u7684\u7b97\u6cd5\u662f\u8c37\u6b4c\u5185\u90e8\u7684\uff0c\u5b83\u5e76\u6ca1\u6709\u5728 TensorFlow \u7684\u5f00\u6e90\u7248\u672c\u4e2d\u53d1\u5e03\u3002\u5b83\u88ab\u6392\u9664\u5728\u5916\u7684\u539f\u56e0\u4f3c\u4e4e\u662f\uff0c\u7531\u7528\u6237\u6307\u5b9a\u7684\u4e00\u5c0f\u90e8\u5206\u653e\u7f6e\u89c4\u5219\u5b9e\u9645\u4e0a\u6bd4\u52a8\u6001\u653e\u7f6e\u5668\u653e\u7f6e\u7684\u66f4\u6709\u6548\u3002 \u7136\u800c\uff0cTensorFlow \u56e2\u961f\u6b63\u5728\u52aa\u529b\u6539\u8fdb\u5b83\uff0c\u5e76\u4e14\u6700\u7ec8\u53ef\u80fd\u4f1a\u88ab\u5f00\u653e\u3002 \u5728\u6b64\u4e4b\u524d\uff0cTensorFlow\u90fd\u662f\u7b80\u5355\u7684\u653e\u7f6e\uff0c\u5b83\uff08\u5982\u5176\u540d\u79f0\u6240\u793a\uff09\u975e\u5e38\u57fa\u672c\u3002 \u7b80\u5355\u653e\u7f6e \u65e0\u8bba\u4f55\u65f6\u8fd0\u884c\u56fe\u5f62\uff0c\u5982\u679c TensorFlow \u9700\u8981\u6c42\u503c\u5c1a\u672a\u653e\u7f6e\u5728\u8bbe\u5907\u4e0a\u7684\u8282\u70b9\uff0c\u5219\u5b83\u4f1a\u4f7f\u7528\u7b80\u5355\u653e\u7f6e\u5668\u5c06\u5176\u653e\u7f6e\u5728\u672a\u653e\u7f6e\u7684\u6240\u6709\u5176\u4ed6\u8282\u70b9\u4e0a\u3002 \u7b80\u5355\u653e\u7f6e\u5c0a\u91cd\u4ee5\u4e0b\u89c4\u5219\uff1a \u5982\u679c\u67d0\u4e2a\u8282\u70b9\u5df2\u7ecf\u653e\u7f6e\u5728\u56fe\u5f62\u7684\u4e0a\u4e00\u6b21\u8fd0\u884c\u4e2d\u7684\u67d0\u4e2a\u8bbe\u5907\u4e0a\uff0c\u5219\u8be5\u8282\u70b9\u5c06\u4fdd\u7559\u5728\u8be5\u8bbe\u5907\u4e0a\u3002 \u5426\u5219\uff0c\u5982\u679c\u7528\u6237\u5c06\u4e00\u4e2a\u8282\u70b9\u56fa\u5b9a\u5230\u8bbe\u5907\u4e0a\uff08\u4e0b\u9762\u4ecb\u7ecd\uff09\uff0c\u5219\u653e\u7f6e\u5668\u5c06\u5176\u653e\u7f6e\u5728\u8be5\u8bbe\u5907\u4e0a\u3002 \u5426\u5219\uff0c\u5b83\u9ed8\u8ba4\u4e3a GPU#0\uff0c\u5982\u679c\u6ca1\u6709 GPU\uff0c\u5219\u9ed8\u8ba4\u4e3a CPU\u3002 \u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u5c06\u64cd\u4f5c\u653e\u5728\u9002\u5f53\u7684\u8bbe\u5907\u4e0a\u4e3b\u8981\u53d6\u51b3\u4e8e\u60a8\u3002 \u5982\u679c\u60a8\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u6574\u4e2a\u56fe\u8868\u5c06\u88ab\u653e\u7f6e\u5728\u9ed8\u8ba4\u8bbe\u5907\u4e0a\u3002 \u8981\u5c06\u8282\u70b9\u56fa\u5b9a\u5230\u8bbe\u5907\u4e0a\uff0c\u60a8\u5fc5\u987b\u4f7f\u7528 device() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u8bbe\u5907\u5757\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u53d8\u91cf a \u548c\u5e38\u91cf b \u56fa\u5b9a\u5728 CPU \u4e0a\uff0c\u4f46\u4e58\u6cd5\u8282\u70b9 c \u4e0d\u56fa\u5b9a\u5728\u4efb\u4f55\u8bbe\u5907\u4e0a\uff0c\u56e0\u6b64\u5c06\u653e\u7f6e\u5728\u9ed8\u8ba4\u8bbe\u5907\u4e0a\uff1a with tf.device(\"/cpu:0\"): a = tf.Variable(3.0) b = tf.constant(4.0) c = a * b \u5176\u4e2d\uff0c \"/cpu:0\" \u8bbe\u5907\u5408\u8ba1\u591a CPU \u7cfb\u7edf\u4e0a\u7684\u6240\u6709 CPU\u3002 \u76ee\u524d\u6ca1\u6709\u529e\u6cd5\u5728\u7279\u5b9a CPU \u4e0a\u56fa\u5b9a\u8282\u70b9\u6216\u4ec5\u4f7f\u7528\u6240\u6709 CPU \u7684\u5b50\u96c6\u3002 \u8bb0\u5f55\u653e\u7f6e\u4f4d\u7f6e \u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u7b80\u5355\u7684\u653e\u7f6e\u5668\u662f\u5426\u9075\u5b88\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684\u5e03\u5c40\u7ea6\u675f\u6761\u4ef6\u3002 \u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u5c06 log_device_placement \u9009\u9879\u8bbe\u7f6e\u4e3a True \uff1b\u8fd9\u544a\u8bc9\u653e\u7f6e\u5668\u5728\u653e\u7f6e\u8282\u70b9\u65f6\u8bb0\u5f55\u6d88\u606f\u3002\u4f8b\u5982\uff1a >>> config = tf.ConfigProto() >>> config.log_device_placement = True >>> sess = tf.Session(config=config) I [...] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0) [...] >>> x.initializer.run(session=sess) I [...] a: /job:localhost/replica:0/task:0/cpu:0 I [...] a/read: /job:localhost/replica:0/task:0/cpu:0 I [...] mul: /job:localhost/replica:0/task:0/gpu:0 I [...] a/Assign: /job:localhost/replica:0/task:0/cpu:0 I [...] b: /job:localhost/replica:0/task:0/cpu:0 I [...] a/initial_value: /job:localhost/replica:0/task:0/cpu:0 >>> sess.run(c) 12 Info \u4e2d\u4ee5\u5927\u5199\u5b57\u6bcd I \u5f00\u5934\u7684\u884c\u662f\u65e5\u5fd7\u6d88\u606f\u3002 \u5f53\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd\u65f6\uff0cTensorFlow \u4f1a\u8bb0\u5f55\u4e00\u6761\u6d88\u606f\uff0c\u544a\u8bc9\u6211\u4eec\u5b83\u5df2\u7ecf\u627e\u5230\u4e86\u4e00\u4e2a GPU \u5361\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662f Grid K520 \u5361\uff09\u3002 \u7136\u540e\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u8fd0\u884c\u56fe\u5f62\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u521d\u59cb\u5316\u53d8\u91cf a \u65f6\uff09\uff0c\u7b80\u5355\u5e03\u5c40\u5668\u8fd0\u884c\uff0c\u5e76\u5c06\u6bcf\u4e2a\u8282\u70b9\u653e\u7f6e\u5728\u5206\u914d\u7ed9\u5b83\u7684\u8bbe\u5907\u4e0a\u3002\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u65e5\u5fd7\u6d88\u606f\u663e\u793a\u6240\u6709\u8282\u70b9\u90fd\u653e\u5728 \"/cpu:0\" \u4e0a\uff0c\u9664\u4e86\u4e58\u6cd5\u8282\u70b9\uff0c\u5b83\u4ee5\u9ed8\u8ba4\u8bbe\u5907 \"/gpu:0\" \u7ed3\u675f\uff08\u60a8\u53ef\u4ee5\u5148\u5ffd\u7565\u524d\u7f00\uff1a /job:localhost/replica:0/task:0; \u6211\u4eec\u5c06\u5728\u4e00\u4f1a\u513f\u8ba8\u8bba\u5b83\uff09\u3002 \u6ce8\u610f\uff0c\u6211\u4eec\u7b2c\u4e8c\u6b21\u8fd0\u884c\u56fe\uff08\u8ba1\u7b97 c \uff09\u65f6\uff0c\u7531\u4e8e TensorFlow \u9700\u8981\u8ba1\u7b97\u7684\u6240\u6709\u8282\u70b9 c \u90fd\u5df2\u7ecf\u653e\u7f6e\uff0c\u6240\u4ee5\u4e0d\u4f7f\u7528\u5e03\u5c40\u5668\u3002 \u52a8\u6001\u653e\u7f6e\u529f\u80fd \u521b\u5efa\u8bbe\u5907\u5757\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u8bbe\u5907\u540d\u79f0\u3002TensorFlow \u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u8fdb\u884c\u6bcf\u4e2a\u9700\u8981\u653e\u7f6e\u5728\u8bbe\u5907\u5757\u4e2d\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5fc5\u987b\u8fd4\u56de\u8bbe\u5907\u7684\u540d\u79f0\u6765\u56fa\u5b9a\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u56fa\u5b9a\u6240\u6709\u53d8\u91cf\u8282\u70b9\u5230 \"/cpu:0\" \uff08\u5728\u672c\u4f8b\u4e2d\u53ea\u662f\u53d8\u91cf a \uff09\u548c\u6240\u6709\u5176\u4ed6\u8282\u70b9\u5230 \"/gpu:0\" \uff1a def variables_on_cpu(op): if op.type == \"Variable\": return \"/cpu:0\" else: return \"/gpu:0\" with tf.device(variables_on_cpu): a = tf.Variable(3.0) b = tf.constant(4.0) c = a * b \u60a8\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u7b97\u6cd5\uff0c\u4f8b\u5982\u4ee5\u5faa\u73af\u65b9\u5f0f\u7528GPU\u9501\u5b9a\u53d8\u91cf\u3002 \u64cd\u4f5c\u548c\u5185\u6838 \u5bf9\u4e8e\u5728\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684 TensorFlow \u64cd\u4f5c\uff0c\u5b83\u9700\u8981\u5177\u6709\u8be5\u8bbe\u5907\u7684\u5b9e\u73b0\uff1b\u8fd9\u88ab\u79f0\u4e3a\u5185\u6838\u3002 \u8bb8\u591a\u64cd\u4f5c\u5bf9\u4e8e CPU \u548c GPU \u90fd\u6709\u5185\u6838\uff0c\u4f46\u5e76\u975e\u5168\u90e8\u90fd\u662f\u3002 \u4f8b\u5982\uff0cTensorFlow \u6ca1\u6709\u7528\u4e8e\u6574\u6570\u53d8\u91cf\u7684 GPU \u5185\u6838\uff0c\u56e0\u6b64\u5f53 TensorFlow \u5c1d\u8bd5\u5c06\u53d8\u91cfi\u653e\u7f6e\u5230 GPU#0 \u65f6\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u5931\u8d25\uff1a >>> with tf.device(\"/gpu:0\"): ... i = tf.Variable(3) [...] >>> sess.run(i.initializer) Traceback (most recent call last): [...] tensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'Variable': Could not satisfy explicit device specification \u8bf7\u6ce8\u610f\uff0cTensorFlow \u63a8\u65ad\u53d8\u91cf\u5fc5\u987b\u662f int32 \u7c7b\u578b\uff0c\u56e0\u4e3a\u521d\u59cb\u5316\u503c\u662f\u4e00\u4e2a\u6574\u6570\u3002 \u5982\u679c\u5c06\u521d\u59cb\u5316\u503c\u66f4\u6539\u4e3a 3.0 \u800c\u4e0d\u662f 3\uff0c\u6216\u8005\u5982\u679c\u5728\u521b\u5efa\u53d8\u91cf\u65f6\u663e\u5f0f\u8bbe\u7f6e dtype = tf.float32 \uff0c\u5219\u4e00\u5207\u6b63\u5e38\u3002 \u8f6f\u653e\u7f6e \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u5728\u64cd\u4f5c\u6ca1\u6709\u5185\u6838\u7684\u8bbe\u5907\u4e0a\u56fa\u5b9a\u64cd\u4f5c\uff0c\u5219\u5f53 TensorFlow \u5c1d\u8bd5\u5c06\u64cd\u4f5c\u653e\u7f6e\u5728\u8bbe\u5907\u4e0a\u65f6\uff0c\u60a8\u4f1a\u770b\u5230\u524d\u9762\u663e\u793a\u7684\u5f02\u5e38\u3002 \u5982\u679c\u60a8\u66f4\u559c\u6b22 TensorFlow \u56de\u9000\u5230 CPU\uff0c\u5219\u53ef\u4ee5\u5c06 allow_soft_placement \u914d\u7f6e\u9009\u9879\u8bbe\u7f6e\u4e3a True \uff1a with tf.device(\"/gpu:0\"): i = tf.Variable(3) config = tf.ConfigProto() config.allow_soft_placement = True sess = tf.Session(config=config) sess.run(i.initializer) # the placer runs and falls back to /cpu:0 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5982\u4f55\u5728\u4e0d\u540c\u8bbe\u5907\u4e0a\u653e\u7f6e\u8282\u70b9\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b TensorFlow \u5982\u4f55\u5e76\u884c\u8fd0\u884c\u8fd9\u4e9b\u8282\u70b9\u3002 \u5e76\u884c\u8fd0\u884c \u5f53 TensorFlow \u8fd0\u884c\u56fe\u65f6\uff0c\u5b83\u9996\u5148\u627e\u51fa\u9700\u8981\u6c42\u503c\u7684\u8282\u70b9\u5217\u8868\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u6709\u591a\u5c11\u4f9d\u8d56\u5173\u7cfb\u3002 \u7136\u540e TensorFlow \u5f00\u59cb\u6c42\u503c\u5177\u6709\u96f6\u4f9d\u8d56\u5173\u7cfb\u7684\u8282\u70b9\uff08\u5373\u6e90\u8282\u70b9\uff09\u3002 \u5982\u679c\u8fd9\u4e9b\u8282\u70b9\u88ab\u653e\u7f6e\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e0a\uff0c\u5b83\u4eec\u663e\u7136\u4f1a\u88ab\u5e76\u884c\u6c42\u503c\u3002 \u5982\u679c\u5b83\u4eec\u653e\u5728\u540c\u4e00\u4e2a\u8bbe\u5907\u4e0a\uff0c\u5b83\u4eec\u5c06\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u6c42\u503c\uff0c\u56e0\u6b64\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\uff08\u5728\u5355\u72ec\u7684 GPU \u7ebf\u7a0b\u6216 CPU \u5185\u6838\u4e2d\uff09\u3002 TensorFlow \u7ba1\u7406\u6bcf\u4e2a\u8bbe\u5907\u4e0a\u7684\u7ebf\u7a0b\u6c60\u4ee5\u5e76\u884c\u5316\u64cd\u4f5c\uff08\u53c2\u89c1\u56fe 12-5\uff09\u3002 \u8fd9\u4e9b\u88ab\u79f0\u4e3a inter-op \u7ebf\u7a0b\u6c60\u3002 \u6709\u4e9b\u64cd\u4f5c\u5177\u6709\u591a\u7ebf\u7a0b\u5185\u6838\uff1a\u5b83\u4eec\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7ebf\u7a0b\u6c60\uff08\u6bcf\u4e2a\u8bbe\u5907\u4e00\u4e2a\uff09\u79f0\u4e3a intra-op \u7ebf\u7a0b\u6c60\uff08\u4e0b\u9762\u5199\u6210\u5185\u90e8\u7ebf\u7a0b\u6c60\uff09\u3002 \u4f8b\u5982\uff0c\u5728\u56fe 12-5 \u4e2d\uff0c\u64cd\u4f5c A \uff0c B \u548c C \u662f\u6e90\u64cd\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u7acb\u5373\u8fdb\u884c\u6c42\u503c\u3002 \u64cd\u4f5c A \u548c B \u653e\u7f6e\u5728 GPU#0 \u4e0a\uff0c\u56e0\u6b64\u5b83\u4eec\u88ab\u53d1\u9001\u5230\u8be5\u8bbe\u5907\u7684\u5185\u90e8\u7ebf\u7a0b\u6c60\uff0c\u5e76\u7acb\u5373\u8fdb\u884c\u5e76\u884c\u6c42\u503c\u3002 \u64cd\u4f5cA\u6b63\u597d\u6709\u4e00\u4e2a\u591a\u7ebf\u7a0b\u5185\u6838; \u5b83\u7684\u8ba1\u7b97\u88ab\u5206\u6210\u4e09\u90e8\u5206\uff0c\u8fd9\u4e9b\u90e8\u5206\u7531\u5185\u90e8\u7ebf\u7a0b\u6c60\u5e76\u884c\u6267\u884c\u3002 \u64cd\u4f5c C \u8f6c\u5230 GPU#1 \u7684\u5185\u90e8\u7ebf\u7a0b\u6c60\u3002 \u4e00\u65e6\u64cd\u4f5c C \u5b8c\u6210\uff0c\u64cd\u4f5c D \u548c E \u7684\u4f9d\u8d56\u6027\u8ba1\u6570\u5668\u5c06\u9012\u51cf\u5e76\u4e14\u90fd\u5c06\u8fbe\u5230 0\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u5c06\u88ab\u53d1\u9001\u5230\u64cd\u4f5c\u5185\u7ebf\u7a0b\u6c60\u4ee5\u6267\u884c\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e inter_op_parallelism_threads \u9009\u9879\u6765\u63a7\u5236\u5185\u90e8\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u6570\u3002 \u8bf7\u6ce8\u610f\uff0c\u60a8\u5f00\u59cb\u7684\u7b2c\u4e00\u4e2a\u4f1a\u8bdd\u5c06\u521b\u5efa\u5185\u90e8\u7ebf\u7a0b\u6c60\u3002 \u9664\u975e\u60a8\u5c06 use_per_session_threads \u9009\u9879\u8bbe\u7f6e\u4e3a True \uff0c\u5426\u5219\u6240\u6709\u5176\u4ed6\u4f1a\u8bdd\u90fd\u5c06\u91cd\u7528\u5b83\u4eec\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e intra_op_parallelism_threads \u9009\u9879\u6765\u63a7\u5236\u6bcf\u4e2a\u5185\u90e8\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u6570\u3002 \u63a7\u5236\u4f9d\u8d56\u5173\u7cfb \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u6240\u6709\u4f9d\u8d56\u7684\u64cd\u4f5c\u90fd\u5df2\u6267\u884c\uff0c\u63a8\u8fdf\u5bf9\u64cd\u4f5c\u7684\u6c42\u503c\u53ef\u80fd\u4e5f\u662f\u660e\u667a\u4e4b\u4e3e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5b83\u4f7f\u7528\u5927\u91cf\u5185\u5b58\uff0c\u4f46\u5728\u56fe\u5f62\u4e2d\u53ea\u9700\u8981\u66f4\u591a\u5185\u5b58\uff0c\u5219\u6700\u597d\u5728\u6700\u540e\u4e00\u523b\u5bf9\u5176\u8fdb\u884c\u6c42\u503c\uff0c\u4ee5\u907f\u514d\u4e0d\u5fc5\u8981\u5730\u5360\u7528\u5176\u4ed6\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u7684 RAM\u3002 \u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u4f9d\u8d56\u4f4d\u4e8e\u8bbe\u5907\u5916\u90e8\u7684\u6570\u636e\u7684\u4e00\u7ec4\u64cd\u4f5c\u3002 \u5982\u679c\u5b83\u4eec\u5168\u90e8\u540c\u65f6\u8fd0\u884c\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u4f7f\u8bbe\u5907\u7684\u901a\u4fe1\u5e26\u5bbd\u8fbe\u5230\u9971\u548c\uff0c\u5e76\u6700\u7ec8\u5bfc\u81f4\u6240\u6709\u7b49\u5f85 I/O\u3002 \u5176\u4ed6\u9700\u8981\u4f20\u9012\u6570\u636e\u7684\u64cd\u4f5c\u4e5f\u5c06\u88ab\u963b\u6b62\u3002 \u987a\u5e8f\u6267\u884c\u8fd9\u4e9b\u901a\u4fe1\u7e41\u91cd\u7684\u64cd\u4f5c\u5c06\u662f\u6bd4\u8f83\u597d\u7684\uff0c\u8fd9\u6837\u5141\u8bb8\u8bbe\u5907\u5e76\u884c\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002 \u63a8\u8fdf\u5bf9\u67d0\u4e9b\u8282\u70b9\u7684\u6c42\u503c\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u6dfb\u52a0\u63a7\u5236\u4f9d\u8d56\u5173\u7cfb\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u544a\u8bc9 TensorFlow \u4ec5\u5728\u6c42\u503c\u5b8c a \u548c b \u4e4b\u540e\u624d\u6c42\u503c x \u548c y \uff1a a = tf.constant(1.0) b = a + 2.0 with tf.control_dependencies([a, b]): x = tf.constant(3.0) y = tf.constant(4.0) z = x + y \u663e\u7136\uff0c\u7531\u4e8e z \u4f9d\u8d56\u4e8e x \u548c y \uff0c\u6240\u4ee5\u6c42\u503c z \u4e5f\u610f\u5473\u7740\u7b49\u5f85 a \u548c b \u8fdb\u884c\u6c42\u503c\uff0c\u5373\u4f7f\u5b83\u5e76\u672a\u663e\u5f0f\u5b58\u5728\u4e8e control_dependencies() \u5757\u4e2d\u3002 \u6b64\u5916\uff0c\u7531\u4e8e b \u4f9d\u8d56\u4e8e a \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 [b] \u800c\u4e0d\u662f [a,b] \u4e0a\u521b\u5efa\u63a7\u5236\u4f9d\u8d56\u5173\u7cfb\u6765\u7b80\u5316\u524d\u9762\u7684\u4ee3\u7801\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u201c\u663e\u5f0f\u6bd4\u9690\u5f0f\u66f4\u597d\u201d\u3002 \u5f88\u597d\uff01\u73b0\u5728\u4f60\u77e5\u9053\u4e86\uff1a \u5982\u4f55\u4ee5\u4efb\u4f55\u60a8\u559c\u6b22\u7684\u65b9\u5f0f\u5728\u591a\u4e2a\u8bbe\u5907\u4e0a\u8fdb\u884c\u64cd\u4f5c \u8fd9\u4e9b\u64cd\u4f5c\u5982\u4f55\u5e76\u884c\u6267\u884c \u5982\u4f55\u521b\u5efa\u63a7\u5236\u4f9d\u8d56\u6027\u6765\u4f18\u5316\u5e76\u884c\u6267\u884c \u662f\u65f6\u5019\u5c06\u8ba1\u7b97\u5206\u5e03\u5728\u591a\u4e2a\u670d\u52a1\u5668\u4e0a\u4e86\uff01 \u591a\u4e2a\u670d\u52a1\u5668\u7684\u591a\u4e2a\u8bbe\u5907 \u8981\u8de8\u591a\u53f0\u670d\u52a1\u5668\u8fd0\u884c\u56fe\u5f62\uff0c\u9996\u5148\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u96c6\u7fa4\u3002 \u4e00\u4e2a\u96c6\u7fa4\u7531\u4e00\u4e2a\u6216\u591a\u4e2a TensorFlow \u670d\u52a1\u5668\u7ec4\u6210\uff0c\u79f0\u4e3a\u4efb\u52a1\uff0c\u901a\u5e38\u5206\u5e03\u5728\u591a\u53f0\u673a\u5668\u4e0a\uff08\u89c1\u56fe 12-6\uff09\u3002 \u6bcf\u9879\u4efb\u52a1\u90fd\u5c5e\u4e8e\u4e00\u9879\u4f5c\u4e1a\u3002 \u4f5c\u4e1a\u53ea\u662f\u4e00\u7ec4\u901a\u5e38\u5177\u6709\u5171\u540c\u4f5c\u7528\u7684\u4efb\u52a1\uff0c\u4f8b\u5982\u8ddf\u8e2a\u6a21\u578b\u53c2\u6570\uff08\u4f8b\u5982\uff0c\u53c2\u6570\u670d\u52a1\u5668\u901a\u5e38\u547d\u540d\u4e3a \"ps\" \uff0cparameter server\uff09\u6216\u6267\u884c\u8ba1\u7b97\uff08\u8fd9\u6837\u7684\u4f5c\u4e1a\u901a\u5e38\u88ab\u547d\u540d\u4e3a \"worker\" \uff09\u3002 \u4ee5\u4e0b\u96c6\u7fa4\u89c4\u8303\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4f5c\u4e1a \"ps\" \u548c \"worker\" \uff0c\u5206\u522b\u5305\u542b\u4e00\u4e2a\u4efb\u52a1\u548c\u4e24\u4e2a\u4efb\u52a1\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u673a\u5668A\u6258\u7ba1\u7740\u4e24\u4e2a TensorFlow \u670d\u52a1\u5668\uff08\u5373\u4efb\u52a1\uff09\uff0c\u76d1\u542c\u4e0d\u540c\u7684\u7aef\u53e3\uff1a\u4e00\u4e2a\u662f \"ps\" \u4f5c\u4e1a\u7684\u4e00\u90e8\u5206\uff0c\u53e6\u4e00\u4e2a\u662f \"worker\" \u4f5c\u4e1a\u7684\u4e00\u90e8\u5206\u3002 \u673a\u5668B\u4ec5\u6258\u7ba1\u4e00\u53f0 TensorFlow \u670d\u52a1\u5668\uff0c\u8fd9\u662f \"worker\" \u4f5c\u4e1a\u7684\u4e00\u90e8\u5206\u3002 cluster_spec = tf.train.ClusterSpec({ \"ps\": [ \"machine-a.example.com:2221\", # /job:ps/task:0 ], \"worker\": [ \"machine-a.example.com:2222\", # /job:worker/task:0 \"machine-b.example.com:2222\", # /job:worker/task:1 ]}) \u8981\u542f\u52a8 TensorFlow \u670d\u52a1\u5668\uff0c\u60a8\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u5e76\u5411\u5176\u4f20\u9012\u96c6\u7fa4\u89c4\u8303\uff08\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u4e0e\u5176\u4ed6\u670d\u52a1\u5668\u901a\u4fe1\uff09\u4ee5\u53ca\u5b83\u81ea\u5df1\u7684\u4f5c\u4e1a\u540d\u79f0\u548c\u4efb\u52a1\u7f16\u53f7\u3002 \u4f8b\u5982\uff0c\u8981\u542f\u52a8\u7b2c\u4e00\u4e2a\u8f85\u52a9\u4efb\u52a1\uff0c\u60a8\u9700\u8981\u5728\u673a\u5668 A \u4e0a\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff1a server = tf.train.Server(cluster_spec, job_name=\"worker\", task_index=0) \u6bcf\u53f0\u673a\u5668\u53ea\u8fd0\u884c\u4e00\u4e2a\u4efb\u52a1\u901a\u5e38\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u524d\u9762\u7684\u4f8b\u5b50\u8868\u660e TensorFlow \u5141\u8bb8\u60a8\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u5982\u679c\u9700\u8981\u7684\u8bdd\uff09\u3002 \u5982\u679c\u60a8\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u5b89\u88c5\u4e86\u591a\u53f0\u670d\u52a1\u5668\uff0c\u5219\u9700\u8981\u786e\u4fdd\u5b83\u4eec\u4e0d\u4f1a\u5168\u90e8\u5c1d\u8bd5\u6293\u53d6\u6bcf\u4e2a GPU \u7684\u6240\u6709 RAM\uff0c\u5982\u524d\u6240\u8ff0\u3002 \u4f8b\u5982\uff0c\u5728\u56fe12-6\u4e2d\uff0c \"ps\" \u4efb\u52a1\u6ca1\u6709\u770b\u5230 GPU \u8bbe\u5907\uff0c\u60f3\u5fc5\u5176\u8fdb\u7a0b\u662f\u4f7f\u7528 CUDA_VISIBLE_DEVICES =\"\" \u542f\u52a8\u7684\u3002 \u8bf7\u6ce8\u610f\uff0cCPU\u7531\u4f4d\u4e8e\u540c\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u7684\u6240\u6709\u4efb\u52a1\u5171\u4eab\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u8fdb\u7a0b\u9664\u4e86\u8fd0\u884c TensorFlow \u670d\u52a1\u5668\u4e4b\u5916\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u544a\u8bc9\u5b83\u7b49\u5f85\u670d\u52a1\u5668\u4f7f\u7528 join() \u65b9\u6cd5\u6765\u5b8c\u6210\uff0c\u4ece\u800c\u963b\u585e\u4e3b\u7ebf\u7a0b\uff08\u5426\u5219\u670d\u52a1\u5668\u5c06\u5728\u60a8\u7684\u4e3b\u7ebf\u7a0b\u9000\u51fa\uff09\u3002 \u7531\u4e8e\u76ee\u524d\u6ca1\u6709\u529e\u6cd5\u963b\u6b62\u670d\u52a1\u5668\uff0c\u8fd9\u5b9e\u9645\u4e0a\u4f1a\u6c38\u8fdc\u963b\u6b62\uff1a server.join() # blocks until the server stops (i.e., never) \u5f00\u59cb\u4e00\u4e2a\u4f1a\u8bdd \u4e00\u65e6\u6240\u6709\u4efb\u52a1\u542f\u52a8\u5e76\u8fd0\u884c\uff08\u4f46\u8fd8\u4ec0\u4e48\u90fd\u6ca1\u505a\uff09\uff0c\u60a8\u53ef\u4ee5\u4ece\u4f4d\u4e8e\u4efb\u4f55\u673a\u5668\u4e0a\u7684\u4efb\u4f55\u8fdb\u7a0b\uff08\u751a\u81f3\u662f\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\uff09\u4e2d\u7684\u5ba2\u6237\u673a\u4e0a\u7684\u4efb\u4f55\u670d\u52a1\u5668\u4e0a\u6253\u5f00\u4f1a\u8bdd\uff0c\u5e76\u4f7f\u7528\u8be5\u4f1a\u8bdd\u50cf\u666e\u901a\u7684\u672c\u5730\u4f1a\u8bae\u4e00\u6837\u3002\u6bd4\u5982\uff1a a = tf.constant(1.0) b = a + 2 c = a * 3 with tf.Session(\"grpc://machine-b.example.com:2222\") as sess: print(c.eval()) # 9.0 \u8fd9\u4e2a\u5ba2\u6237\u7aef\u4ee3\u7801\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u56fe\u5f62\uff0c\u7136\u540e\u5728\u4f4d\u4e8e\u673a\u5668 B\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a\u4e3b\u673a\uff09\u4e0a\u7684 TensorFlow \u670d\u52a1\u5668\u4e0a\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd\uff0c\u5e76\u6307\u793a\u5b83\u6c42\u503c c \u3002 \u4e3b\u8bbe\u5907\u9996\u5148\u5c06\u64cd\u4f5c\u653e\u5728\u9002\u5f53\u7684\u8bbe\u5907\u4e0a\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5728\u4efb\u4f55\u8bbe\u5907\u4e0a\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e3b\u8bbe\u5907\u53ea\u5c06\u5b83\u4eec\u5168\u90e8\u653e\u5728\u5b83\u81ea\u5df1\u7684\u9ed8\u8ba4\u8bbe\u5907\u4e0a - \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u673a\u5668 B \u7684 GPU \u8bbe\u5907\u3002 \u7136\u540e\u5b83\u53ea\u662f\u6309\u7167\u5ba2\u6237\u7684\u6307\u793a\u6c42\u503c c \uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 \u4e3b\u673a\u548c\u8f85\u52a9\u670d\u52a1 \u5ba2\u6237\u7aef\u4f7f\u7528 gRPC \u534f\u8bae\uff08Google Remote Procedure Call\uff09\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u3002 \u8fd9\u662f\u4e00\u4e2a\u9ad8\u6548\u7684\u5f00\u6e90\u6846\u67b6\uff0c\u53ef\u4ee5\u8c03\u7528\u8fdc\u7a0b\u51fd\u6570\uff0c\u5e76\u901a\u8fc7\u5404\u79cd\u5e73\u53f0\u548c\u8bed\u8a00\u83b7\u53d6\u5b83\u4eec\u7684\u8f93\u51fa\u3002\u5b83\u57fa\u4e8e HTTP2\uff0c\u6253\u5f00\u4e00\u4e2a\u8fde\u63a5\u5e76\u5728\u6574\u4e2a\u4f1a\u8bdd\u671f\u95f4\u4fdd\u6301\u6253\u5f00\u72b6\u6001\uff0c\u4e00\u65e6\u5efa\u7acb\u8fde\u63a5\u5c31\u53ef\u4ee5\u8fdb\u884c\u9ad8\u6548\u7684\u53cc\u5411\u901a\u4fe1\u3002 \u6570\u636e\u4ee5\u534f\u8bae\u7f13\u51b2\u533a\u7684\u5f62\u5f0f\u4f20\u8f93\uff0c\u8fd9\u662f\u53e6\u4e00\u79cd\u5f00\u6e90 Google \u6280\u672f\u3002 \u8fd9\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002 TensorFlow \u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u670d\u52a1\u5668\u90fd\u53ef\u80fd\u4e0e\u96c6\u7fa4\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u5728\u9632\u706b\u5899\u4e0a\u6253\u5f00\u9002\u5f53\u7684\u7aef\u53e3\u3002 \u6bcf\u53f0 TensorFlow \u670d\u52a1\u5668\u90fd\u63d0\u4f9b\u4e24\u79cd\u670d\u52a1\uff1a\u4e3b\u670d\u52a1\u548c\u8f85\u52a9\u670d\u52a1\u3002 \u4e3b\u670d\u52a1\u5141\u8bb8\u5ba2\u6237\u6253\u5f00\u4f1a\u8bdd\u5e76\u4f7f\u7528\u5b83\u4eec\u6765\u8fd0\u884c\u56fe\u5f62\u3002 \u5b83\u534f\u8c03\u8de8\u4efb\u52a1\u7684\u8ba1\u7b97\uff0c\u4f9d\u9760\u8f85\u52a9\u670d\u52a1\u5b9e\u9645\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u7684\u8ba1\u7b97\u5e76\u83b7\u5f97\u7ed3\u679c\u3002 \u56fa\u5b9a\u4efb\u52a1\u7684\u64cd\u4f5c \u901a\u8fc7\u6307\u5b9a\u4f5c\u4e1a\u540d\u79f0\uff0c\u4efb\u52a1\u7d22\u5f15\uff0c\u8bbe\u5907\u7c7b\u578b\u548c\u8bbe\u5907\u7d22\u5f15\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bbe\u5907\u5757\u6765\u9501\u5b9a\u7531\u4efb\u4f55\u4efb\u52a1\u7ba1\u7406\u7684\u4efb\u4f55\u8bbe\u5907\u4e0a\u7684\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06 a \u56fa\u5b9a\u5728 \"ps\" \u4f5c\u4e1a\uff08\u5373\u673a\u5668 A \u4e0a\u7684 CPU\uff09\u4e2d\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7684 CPU\uff0c\u5e76\u5c06 b \u56fa\u5b9a\u5728 \"worker\" \u4f5c\u4e1a\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7ba1\u7406\u7684\u7b2c\u4e8c\u4e2a GPU \uff08\u8fd9\u662f A \u673a\u4e0a\u7684 GPU#1\uff09\u3002 \u6700\u540e\uff0c c \u6ca1\u6709\u56fa\u5b9a\u5728\u4efb\u4f55\u8bbe\u5907\u4e0a\uff0c\u6240\u4ee5\u4e3b\u8bbe\u5907\u5c06\u5b83\u653e\u5728\u5b83\u81ea\u5df1\u7684\u9ed8\u8ba4\u8bbe\u5907\u4e0a\uff08\u673a\u5668 B \u7684 GPU#0 \u8bbe\u5907\uff09\u3002 with tf.device(\"/job:ps/task:0/cpu:0\") a = tf.constant(1.0) with tf.device(\"/job:worker/task:0/gpu:1\") b = a + 2 c = a + b \u5982\u524d\u6240\u8ff0\uff0c\u5982\u679c\u60a8\u7701\u7565\u8bbe\u5907\u7c7b\u578b\u548c\u7d22\u5f15\uff0c\u5219 TensorFlow \u5c06\u9ed8\u8ba4\u4e3a\u8be5\u4efb\u52a1\u7684\u9ed8\u8ba4\u8bbe\u5907; \u4f8b\u5982\uff0c\u5c06\u64cd\u4f5c\u56fa\u5b9a\u5230 \"/job:ps/task:0\" \u4f1a\u5c06\u5176\u653e\u7f6e\u5728 \"ps\" \u4f5c\u4e1a\uff08\u673a\u5668 A \u7684 CPU\uff09\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7684\u9ed8\u8ba4\u8bbe\u5907\u4e0a\u3002 \u5982\u679c\u60a8\u8fd8\u7701\u7565\u4e86\u4efb\u52a1\u7d22\u5f15\uff08\u4f8b\u5982\uff0c \"/job:ps\" \uff09\uff0c\u5219 TensorFlow \u9ed8\u8ba4\u4e3a \"/task:0\" \u3002\u5982\u679c\u7701\u7565\u4f5c\u4e1a\u540d\u79f0\u548c\u4efb\u52a1\u7d22\u5f15\uff0c\u5219 TensorFlow \u9ed8\u8ba4\u4e3a\u4f1a\u8bdd\u7684\u4e3b\u4efb\u52a1\u3002 \u8de8\u591a\u4e2a\u53c2\u6570\u670d\u52a1\u5668\u7684\u5206\u7247\u53d8\u91cf \u6b63\u5982\u6211\u4eec\u5f88\u5feb\u4f1a\u770b\u5230\u7684\u90a3\u6837\uff0c\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e0a\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u5e38\u89c1\u6a21\u5f0f\u662f\u5c06\u6a21\u578b\u53c2\u6570\u5b58\u50a8\u5728\u4e00\u7ec4\u53c2\u6570\u670d\u52a1\u5668\u4e0a\uff08\u5373 \"ps\" \u4f5c\u4e1a\u4e2d\u7684\u4efb\u52a1\uff09\uff0c\u800c\u5176\u4ed6\u4efb\u52a1\u5219\u96c6\u4e2d\u5728\u8ba1\u7b97\u4e0a\uff08\u5373 \uff0c \"worker\" \u5de5\u4f5c\u4e2d\u7684\u4efb\u52a1\uff09\u3002 \u5bf9\u4e8e\u5177\u6709\u6570\u767e\u4e07\u53c2\u6570\u7684\u5927\u578b\u6a21\u578b\uff0c\u5728\u591a\u4e2a\u53c2\u6570\u670d\u52a1\u5668\u4e0a\u5206\u5272\u8fd9\u4e9b\u53c2\u6570\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u964d\u4f4e\u9971\u548c\u5355\u4e2a\u53c2\u6570\u670d\u52a1\u5668\u7f51\u5361\u7684\u98ce\u9669\u3002 \u5982\u679c\u60a8\u8981\u5c06\u6bcf\u4e2a\u53d8\u91cf\u624b\u52a8\u56fa\u5b9a\u5230\u4e0d\u540c\u7684\u53c2\u6570\u670d\u52a1\u5668\uff0c\u90a3\u5c06\u975e\u5e38\u7e41\u7410\u3002 \u5e78\u8fd0\u7684\u662f\uff0cTensorFlow \u63d0\u4f9b\u4e86 replica_device_setter() \u51fd\u6570\uff0c\u5b83\u4ee5\u5faa\u73af\u65b9\u5f0f\u5728\u6240\u6709 \"ps\" \u4efb\u52a1\u4e2d\u5206\u914d\u53d8\u91cf\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e94\u4e2a\u53d8\u91cf\u5f15\u5165\u4e24\u4e2a\u53c2\u6570\u670d\u52a1\u5668\uff1a with tf.device(tf.train.replica_device_setter(ps_tasks=2): v1 = tf.Variable(1.0) # pinned to /job:ps/task:0 v2 = tf.Variable(2.0) # pinned to /job:ps/task:1 v3 = tf.Variable(3.0) # pinned to /job:ps/task:0 v4 = tf.Variable(4.0) # pinned to /job:ps/task:1 v5 = tf.Variable(5.0) # pinned to /job:ps/task:0 \u60a8\u4e0d\u5fc5\u4f20\u9012 ps_tasks \u7684\u6570\u91cf\uff0c\u60a8\u53ef\u4ee5\u4f20\u9012\u96c6\u7fa4 spec = cluster_spec \uff0cTensorFlow \u5c06\u7b80\u5355\u8ba1\u7b97 \"ps\" \u4f5c\u4e1a\u4e2d\u7684\u4efb\u52a1\u6570\u3002 \u5982\u679c\u60a8\u5728\u5757\u4e2d\u521b\u5efa\u5176\u4ed6\u64cd\u4f5c\uff0c\u5219\u4e0d\u4ec5\u4ec5\u662f\u53d8\u91cf\uff0cTensorFlow \u4f1a\u81ea\u52a8\u5c06\u5b83\u4eec\u8fde\u63a5\u5230 \"/job:worker\" \uff0c\u9ed8\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\u7531 \"worker\" \u4f5c\u4e1a\u4e2d\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7ba1\u7406\u7684\u8bbe\u5907\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e worker_device \u53c2\u6570\u5c06\u5b83\u4eec\u56fa\u5b9a\u5230\u5176\u4ed6\u8bbe\u5907\uff0c\u4f46\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5d4c\u5165\u5f0f\u8bbe\u5907\u5757\u3002 \u5185\u90e8\u8bbe\u5907\u5757\u53ef\u4ee5\u8986\u76d6\u5728\u5916\u90e8\u5757\u4e2d\u5b9a\u4e49\u7684\u4f5c\u4e1a\uff0c\u4efb\u52a1\u6216\u8bbe\u5907\u3002 \u4f8b\u5982\uff1a with tf.device(tf.train.replica_device_setter(ps_tasks=2)): v1 = tf.Variable(1.0) # pinned to /job:ps/task:0 (+ defaults to /cpu:0) v2 = tf.Variable(2.0) # pinned to /job:ps/task:1 (+ defaults to /cpu:0) v3 = tf.Variable(3.0) # pinned to /job:ps/task:0 (+ defaults to /cpu:0) [...] s = v1 + v2 # pinned to /job:worker (+ defaults to task:0/gpu:0) with tf.device(\"/gpu:1\"): p1 = 2 * s # pinned to /job:worker/gpu:1 (+ defaults to /task:0) with tf.device(\"/task:1\"): p2 = 3 * s # pinned to /job:worker/task:1/gpu:1 \u8fd9\u4e2a\u4f8b\u5b50\u5047\u8bbe\u53c2\u6570\u670d\u52a1\u5668\u662f\u7eaf CPU \u7684\uff0c\u8fd9\u901a\u5e38\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u9700\u8981\u5b58\u50a8\u548c\u4f20\u9001\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u6267\u884c\u5bc6\u96c6\u8ba1\u7b97\u3002 \uff08\u672a\u5b8c\u6210\uff09","title":"12.\u8bbe\u5907\u548c\u670d\u52a1\u5668\u4e0a\u7684\u5206\u5e03\u5f0f_TensorFlow"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#tensorflow","text":"\u5728\u7b2c 11 \u7ae0\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u51e0\u79cd\u53ef\u4ee5\u660e\u663e\u52a0\u901f\u8bad\u7ec3\u7684\u6280\u672f\uff1a\u66f4\u597d\u7684\u6743\u91cd\u521d\u59cb\u5316\uff0c\u6279\u91cf\u6807\u51c6\u5316\uff0c\u590d\u6742\u7684\u4f18\u5316\u5668\u7b49\u7b49\u3002 \u4f46\u662f\uff0c\u5373\u4f7f\u91c7\u7528\u4e86\u6240\u6709\u8fd9\u4e9b\u6280\u672f\uff0c\u5728\u5177\u6709\u5355\u4e2a CPU \u7684\u5355\u53f0\u673a\u5668\u4e0a\u8bad\u7ec3\u5927\u578b\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u9700\u8981\u51e0\u5929\u751a\u81f3\u51e0\u5468\u7684\u65f6\u95f4\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5982\u4f55\u4f7f\u7528 TensorFlow \u5728\u591a\u4e2a\u8bbe\u5907\uff08CPU \u548c GPU\uff09\u4e0a\u5206\u914d\u8ba1\u7b97\u5e76\u5c06\u5b83\u4eec\u5e76\u884c\u8fd0\u884c\uff08\u53c2\u89c1\u56fe 12-1\uff09\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4f1a\u5148\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u591a\u4e2a\u8bbe\u5907\u4e0a\u5206\u914d\u8ba1\u7b97\uff0c\u7136\u540e\u5728\u591a\u53f0\u673a\u5668\u4e0a\u7684\u591a\u4e2a\u8bbe\u5907\u4e0a\u5206\u914d\u8ba1\u7b97\u3002 \u4e0e\u5176\u4ed6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u76f8\u6bd4\uff0cTensorFlow \u5bf9\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u652f\u6301\u662f\u5176\u4e3b\u8981\u4eae\u70b9\u4e4b\u4e00\u3002 \u5b83\u4f7f\u60a8\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u5982\u4f55\u8de8\u8bbe\u5907\u548c\u670d\u52a1\u5668\u5206\u5e03\uff08\u6216\u590d\u5236\uff09\u60a8\u7684\u8ba1\u7b97\u56fe\uff0c\u5e76\u4e14\u53ef\u4ee5\u8ba9\u60a8\u4ee5\u7075\u6d3b\u7684\u65b9\u5f0f\u5e76\u884c\u548c\u540c\u6b65\u64cd\u4f5c\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u5404\u79cd\u5e76\u884c\u65b9\u6cd5\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002 \u6211\u4eec\u6765\u770b\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u65b9\u6cd5\u6765\u5e76\u884c\u6267\u884c\u548c\u8bad\u7ec3\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u8fd9\u8ba9\u6211\u4eec\u4e0d\u518d\u9700\u8981\u7b49\u5f85\u6570\u5468\u624d\u80fd\u5b8c\u6210\u8bad\u7ec3\u7b97\u6cd5\uff0c\u800c\u6700\u7ec8\u53ef\u80fd\u53ea\u4f1a\u7b49\u5f85\u51e0\u4e2a\u5c0f\u65f6\u3002 \u8fd9\u4e0d\u4ec5\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u65f6\u95f4\uff0c\u8fd8\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u5c1d\u8bd5\u5404\u79cd\u6a21\u578b\uff0c\u5e76\u7ecf\u5e38\u91cd\u65b0\u8bad\u7ec3\u6a21\u578b\u4e0a\u7684\u65b0\u6570\u636e\u3002 \u8fd8\u6709\u5176\u4ed6\u5f88\u597d\u7684\u5e76\u884c\u5316\u4f8b\u5b50\uff0c\u5305\u62ec\u5f53\u6211\u4eec\u5728\u5fae\u8c03\u6a21\u578b\u65f6\u53ef\u4ee5\u63a2\u7d22\u66f4\u5927\u7684\u8d85\u53c2\u6570\u7a7a\u95f4\uff0c\u5e76\u6709\u6548\u5730\u8fd0\u884c\u5927\u89c4\u6a21\u795e\u7ecf\u7f51\u7edc\u3002 \u4f46\u6211\u4eec\u5fc5\u987b\u5148\u5b66\u4f1a\u8d70\u8def\u624d\u80fd\u8dd1\u6b65\u3002 \u6211\u4eec\u5148\u4ece\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u51e0\u4e2a GPU \u4e0a\u5e76\u884c\u5316\u7b80\u5355\u56fe\u5f62\u5f00\u59cb\u3002","title":"\u5341\u4e8c\u3001\u8bbe\u5907\u548c\u670d\u52a1\u5668\u4e0a\u7684\u5206\u5e03\u5f0f TensorFlow"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_1","text":"\u53ea\u9700\u6dfb\u52a0 GPU \u5361\u5230\u5355\u4e2a\u673a\u5668\uff0c\u60a8\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e3b\u8981\u7684\u6027\u80fd\u63d0\u5347\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c31\u8db3\u591f\u4e86\u3002 \u4f60\u6839\u672c\u4e0d\u9700\u8981\u4f7f\u7528\u591a\u53f0\u673a\u5668\u3002 \u4f8b\u5982\uff0c\u901a\u5e38\u5728\u5355\u53f0\u673a\u5668\u4e0a\u4f7f\u7528 8 \u4e2a GPU\uff0c\u800c\u4e0d\u662f\u5728\u591a\u53f0\u673a\u5668\u4e0a\u4f7f\u7528 16 \u4e2a GPU\uff08\u7531\u4e8e\u591a\u673a\u5668\u8bbe\u7f6e\u4e2d\u7684\u7f51\u7edc\u901a\u4fe1\u5e26\u6765\u7684\u989d\u5916\u5ef6\u8fdf\uff09\uff0c\u53ef\u4ee5\u540c\u6837\u5feb\u5730\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u8bbe\u7f6e\u60a8\u7684\u73af\u5883\uff0c\u4ee5\u4fbf TensorFlow \u53ef\u4ee5\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u4f7f\u7528\u591a\u4e2a GPU \u5361\u3002 \u7136\u540e\uff0c\u6211\u4eec\u5c06\u770b\u770b\u5982\u4f55\u5728\u53ef\u7528\u8bbe\u5907\u4e0a\u8fdb\u884c\u5206\u5e03\u64cd\u4f5c\uff0c\u5e76\u4e14\u5e76\u884c\u6267\u884c\u5b83\u4eec\u3002","title":"\u4e00\u53f0\u673a\u5668\u4e0a\u591a\u8bbe\u5907"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_2","text":"\u4e3a\u4e86\u5728\u591a\u4e2a GPU \u5361\u4e0a\u8fd0\u884c TensorFlow\uff0c\u9996\u5148\u9700\u8981\u786e\u4fdd GPU \u5361\u5177\u6709 NVidia \u8ba1\u7b97\u80fd\u529b\uff08\u5927\u4e8e\u6216\u7b49\u4e8e3.0\uff09\u3002 \u8fd9\u5305\u62ec Nvidia \u7684 Titan\uff0cTitan X\uff0cK20 \u548c K40\uff08\u5982\u679c\u4f60\u62e5\u6709\u53e6\u4e00\u5f20\u5361\uff0c\u4f60\u53ef\u4ee5\u5728 https://developer.nvidia.com/cuda-gpus \u67e5\u770b\u5b83\u7684\u517c\u5bb9\u6027\uff09\u3002 \u5982\u679c\u60a8\u4e0d\u62e5\u6709\u4efb\u4f55 GPU \u5361\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u5177\u6709 GPU \u529f\u80fd\u7684\u4e3b\u673a\u670d\u52a1\u5668\uff0c\u5982 Amazon AWS\u3002 \u5728 \u017digaAvsec \u7684 \u535a\u5ba2\u6587\u7ae0 \u4e2d\uff0c\u63d0\u4f9b\u4e86\u5728 Amazon AWS GPU \u5b9e\u4f8b\u4e0a\u4f7f\u7528 Python 3.5 \u8bbe\u7f6e TensorFlow 0.9 \u7684\u8be6\u7ec6\u8bf4\u660e\u3002\u5c06\u5b83\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u7684 TensorFlow \u5e94\u8be5\u4e0d\u4f1a\u592a\u96be\u3002 Google \u8fd8\u53d1\u5e03\u4e86\u4e00\u9879\u540d\u4e3a Cloud Machine Learning \u7684\u4e91\u670d\u52a1\u6765\u8fd0\u884c TensorFlow \u56fe\u8868\u3002 2016 \u5e74 5 \u6708\uff0c\u4ed6\u4eec\u5ba3\u5e03\u4ed6\u4eec\u7684\u5e73\u53f0\u73b0\u5728\u5305\u62ec\u914d\u5907\u5f20\u91cf\u5904\u7406\u5668\uff08TPU\uff09\u7684\u670d\u52a1\u5668\uff0c\u4e13\u95e8\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u5904\u7406\u5668\uff0c\u6bd4\u8bb8\u591a GPU \u5904\u7406 ML \u4efb\u52a1\u8981\u5feb\u5f97\u591a\u3002 \u5f53\u7136\uff0c\u53e6\u4e00\u79cd\u9009\u62e9\u53ea\u662f\u8d2d\u4e70\u4f60\u81ea\u5df1\u7684 GPU \u5361\u3002 Tim Dettmers \u5199\u4e86\u4e00\u7bc7\u5f88\u68d2\u7684\u535a\u5ba2\u6587\u7ae0\u6765\u5e2e\u52a9\u4f60\u9009\u62e9\uff0c\u4ed6\u4f1a\u5b9a\u671f\u66f4\u65b0\u5b83\u3002 \u60a8\u5fc5\u987b\u4e0b\u8f7d\u5e76\u5b89\u88c5\u76f8\u5e94\u7248\u672c\u7684 CUDA \u548c cuDNN \u5e93\uff08\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f TensorFlow 1.0.0\uff0c\u5219\u4e3a CUDA 8.0 \u548c cuDNN 5.1\uff09\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e9b\u73af\u5883\u53d8\u91cf\uff0c\u4ee5\u4fbf TensorFlow \u77e5\u9053\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230 CUDA \u548c cuDNN\u3002 \u8be6\u7ec6\u7684\u5b89\u88c5\u8bf4\u660e\u53ef\u80fd\u4f1a\u76f8\u5f53\u8fc5\u901f\u5730\u66f4\u6539\uff0c\u56e0\u6b64\u6700\u597d\u6309\u7167 TensorFlow \u7f51\u7ad9\u4e0a\u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002 Nvidia \u7684 CUDA \u5141\u8bb8\u5f00\u53d1\u8005\u4f7f\u7528\u652f\u6301 CUDA \u7684 GPU \u8fdb\u884c\u5404\u79cd\u8ba1\u7b97\uff08\u4e0d\u4ec5\u4ec5\u662f\u56fe\u5f62\u52a0\u901f\uff09\u3002 Nvidia \u7684 CUDA \u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5e93\uff08cuDNN\uff09\u662f\u9488\u5bf9 DNN \u7684 GPU \u52a0\u901f\u539f\u8bed\u5e93\u3002 \u5b83\u63d0\u4f9b\u4e86\u5e38\u7528 DNN \u8ba1\u7b97\u7684\u4f18\u5316\u5b9e\u73b0\uff0c\u4f8b\u5982\u6fc0\u6d3b\u5c42\uff0c\u5f52\u4e00\u5316\uff0c\u524d\u5411\u548c\u540e\u5411\u5377\u79ef\u4ee5\u53ca\u6c60\u5316\uff08\u53c2\u89c1\u7b2c 13 \u7ae0\uff09\u3002 \u5b83\u662f Nvidia Deep Learning SDK \u7684\u4e00\u90e8\u5206\uff08\u8bf7\u6ce8\u610f\uff0c\u5b83\u9700\u8981\u521b\u5efa\u4e00\u4e2a Nvidia \u5f00\u53d1\u8005\u5e10\u6237\u624d\u80fd\u4e0b\u8f7d\u5b83\uff09\u3002 TensorFlow \u4f7f\u7528 CUDA \u548c cuDNN \u6765\u63a7\u5236 GPU \u5361\u5e76\u52a0\u901f\u8ba1\u7b97\uff08\u89c1\u56fe 12-2\uff09\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 nvidia-smi \u547d\u4ee4\u6765\u68c0\u67e5 CUDA \u662f\u5426\u5df2\u6b63\u786e\u5b89\u88c5\u3002 \u5b83\u5217\u51fa\u4e86\u53ef\u7528\u7684 GPU \u5361\u4ee5\u53ca\u6bcf\u5f20\u5361\u4e0a\u8fd0\u884c\u7684\u8fdb\u7a0b\uff1a \u6700\u540e\uff0c\u60a8\u5fc5\u987b\u5b89\u88c5\u652f\u6301 GPU \u7684 TensorFlow\u3002 \u5982\u679c\u4f60\u4f7f\u7528 virtualenv \u521b\u5efa\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u73af\u5883\uff0c\u4f60\u9996\u5148\u9700\u8981\u6fc0\u6d3b\u5b83\uff1a $ cd $ML_PATH # Your ML working directory (e.g., HOME/ml) $ source env/bin/activate \u7136\u540e\u5b89\u88c5\u5408\u9002\u7684\u652f\u6301 GPU \u7684 TensorFlow \u7248\u672c\uff1a $ pip3 install --upgrade tensorflow-gpu \u73b0\u5728\u60a8\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a Python shell \u5e76\u901a\u8fc7\u5bfc\u5165 TensorFlow \u5e76\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd\u6765\u68c0\u67e5 TensorFlow \u662f\u5426\u6b63\u786e\u68c0\u6d4b\u5e76\u4f7f\u7528 CUDA \u548c cuDNN\uff1a >>> import tensorflow as tf I [...]/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally I [...]/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally I [...]/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally I [...]/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally I [...]/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally >>> sess = tf.Session() [...] I [...]/gpu_init.cc:102] Found device 0 with properties: name: GRID K520 major: 3 minor: 0 memoryClockRate (GHz) 0.797 pciBusID 0000:00:03.0 Total memory: 4.00GiB Free memory: 3.95GiB I [...]/gpu_init.cc:126] DMA: 0 I [...]/gpu_init.cc:136] 0: Y I [...]/gpu_device.cc:839] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0) \u770b\u8d77\u6765\u4e0d\u9519\uff01TensorFlow \u68c0\u6d4b\u5230 CUDA \u548c cuDNN \u5e93\uff0c\u5e76\u4f7f\u7528 CUDA \u5e93\u6765\u68c0\u6d4b GPU \u5361\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f Nvidia Grid K520 \u5361\uff09\u3002","title":"\u5b89\u88c5"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#gpu","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cTensorFlow \u4f1a\u5728\u60a8\u7b2c\u4e00\u6b21\u8fd0\u884c\u56fe\u5f62\u65f6\u81ea\u52a8\u83b7\u53d6\u6240\u6709\u53ef\u7528 GPU \u4e2d\u7684\u6240\u6709 RAM\uff0c\u56e0\u6b64\u5f53\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u4ecd\u5728\u8fd0\u884c\u65f6\uff0c\u60a8\u5c06\u65e0\u6cd5\u542f\u52a8\u7b2c\u4e8c\u4e2a TensorFlow \u7a0b\u5e8f\u3002 \u5982\u679c\u4f60\u5c1d\u8bd5\uff0c\u4f60\u4f1a\u5f97\u5230\u4ee5\u4e0b\u9519\u8bef\uff1a E [...]/cuda_driver.cc:965] failed to allocate 3.66G (3928915968 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY \u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u5728\u4e0d\u540c\u7684 GPU \u5361\u4e0a\u8fd0\u884c\u6bcf\u4e2a\u8fdb\u7a0b\u3002 \u4e3a\u6b64\uff0c\u6700\u7b80\u5355\u7684\u9009\u62e9\u662f\u8bbe\u7f6e CUDA_VISIBLE_DEVICES \u73af\u5883\u53d8\u91cf\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u8fdb\u7a0b\u53ea\u80fd\u770b\u5230\u5bf9\u5e94\u7684 GPU \u5361\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u542f\u52a8\u4e24\u4e2a\u7a0b\u5e8f\uff1a $ CUDA_VISIBLE_DEVICES=0,1 python3 program_1.py # and in another terminal: $ CUDA_VISIBLE_DEVICES=3,2 python3 program_2.py \u7a0b\u5e8f #1 \u53ea\u4f1a\u770b\u5230 GPU \u5361 0 \u548c 1\uff08\u5206\u522b\u7f16\u53f7\u4e3a 0 \u548c 1\uff09\uff0c\u7a0b\u5e8f #2 \u53ea\u4f1a\u770b\u5230 GPU \u5361 2 \u548c 3\uff08\u5206\u522b\u7f16\u53f7\u4e3a 1 \u548c 0\uff09\u3002 \u4e00\u5207\u90fd\u4f1a\u6b63\u5e38\u5de5\u4f5c\uff08\u89c1\u56fe 12-3\uff09\u3002 \u53e6\u4e00\u79cd\u9009\u62e9\u662f\u544a\u8bc9 TensorFlow \u53ea\u6293\u53d6\u4e00\u5c0f\u90e8\u5206\u5185\u5b58\u3002 \u4f8b\u5982\uff0c\u8981\u4f7f TensorFlow \u53ea\u5360\u7528\u6bcf\u4e2a GPU \u5185\u5b58\u7684 40%\uff0c\u60a8\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a ConfigProto \u5bf9\u8c61\uff0c\u5c06\u5176 gpu_options.per_process_gpu_memory_fraction \u9009\u9879\u8bbe\u7f6e\u4e3a 0.4\uff0c\u5e76\u4f7f\u7528\u4ee5\u4e0b\u914d\u7f6e\u521b\u5efa session \uff1a config = tf.ConfigProto() config.gpu_options.per_process_gpu_memory_fraction = 0.4 session = tf.Session(config=config) \u73b0\u5728\u50cf\u8fd9\u6837\u7684\u4e24\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684 GPU \u5361\u5e76\u884c\u8fd0\u884c\uff08\u4f46\u4e0d\u662f\u4e09\u4e2a\uff0c\u56e0\u4e3a 3\u00d70.4> 1 \uff09\u3002 \u89c1\u56fe 12-4\u3002 \u5982\u679c\u5728\u4e24\u4e2a\u7a0b\u5e8f\u90fd\u8fd0\u884c\u65f6\u8fd0\u884c nvidia-smi \u547d\u4ee4\uff0c\u5219\u5e94\u8be5\u770b\u5230\u6bcf\u4e2a\u8fdb\u7a0b\u5360\u7528\u6bcf\u4e2a\u5361\u7684\u603b RAM \u5927\u7ea6 40%\uff1a \u53e6\u4e00\u79cd\u9009\u62e9\u662f\u544a\u8bc9 TensorFlow \u53ea\u5728\u9700\u8981\u65f6\u624d\u6293\u53d6\u5185\u5b58\u3002 \u4e3a\u6b64\uff0c\u60a8\u5fc5\u987b\u5c06 config.gpu_options.allow_growth \u8bbe\u7f6e\u4e3a True \u3002\u4f46\u662f\uff0cTensorFlow \u4e00\u65e6\u6293\u53d6\u5185\u5b58\u5c31\u4e0d\u4f1a\u91ca\u653e\u5185\u5b58\uff08\u4ee5\u907f\u514d\u5185\u5b58\u788e\u7247\uff09\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u5185\u5b58\u4e0d\u8db3\u3002 \u662f\u5426\u4f7f\u7528\u6b64\u9009\u9879\u53ef\u80fd\u96be\u4ee5\u786e\u5b9a\uff0c\u56e0\u6b64\u4e00\u822c\u800c\u8a00\uff0c\u60a8\u53ef\u80fd\u60f3\u8981\u575a\u6301\u4e4b\u524d\u7684\u67d0\u4e2a\u9009\u9879\u3002 \u597d\u7684\uff0c\u73b0\u5728\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u652f\u6301 GPU \u7684 TensorFlow \u5b89\u88c5\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u4f7f\u7528\u5b83\uff01","title":"\u7ba1\u7406 GPU \u5185\u5b58"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_3","text":"TensorFlow \u767d\u76ae\u4e66\u4ecb\u7ecd\u4e86\u4e00\u79cd\u53cb\u597d\u7684\u52a8\u6001\u5e03\u7f6e\u5668\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u80fd\u591f\u81ea\u52a8\u5c06\u64cd\u4f5c\u5206\u5e03\u5230\u6240\u6709\u53ef\u7528\u8bbe\u5907\u4e0a\uff0c\u5e76\u8003\u8651\u5230\u4ee5\u524d\u8fd0\u884c\u56fe\u4e2d\u6240\u6d4b\u91cf\u7684\u8ba1\u7b97\u65f6\u95f4\uff0c\u4f30\u7b97\u6bcf\u6b21\u64cd\u4f5c\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5f20\u91cf\u7684\u5927\u5c0f\uff0c \u6bcf\u4e2a\u8bbe\u5907\u53ef\u7528\u7684 RAM\uff0c\u4f20\u8f93\u6570\u636e\u8fdb\u51fa\u8bbe\u5907\u65f6\u7684\u901a\u4fe1\u5ef6\u8fdf\uff0c\u6765\u81ea\u7528\u6237\u7684\u63d0\u793a\u548c\u7ea6\u675f\u7b49\u7b49\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u590d\u6742\u7684\u7b97\u6cd5\u662f\u8c37\u6b4c\u5185\u90e8\u7684\uff0c\u5b83\u5e76\u6ca1\u6709\u5728 TensorFlow \u7684\u5f00\u6e90\u7248\u672c\u4e2d\u53d1\u5e03\u3002\u5b83\u88ab\u6392\u9664\u5728\u5916\u7684\u539f\u56e0\u4f3c\u4e4e\u662f\uff0c\u7531\u7528\u6237\u6307\u5b9a\u7684\u4e00\u5c0f\u90e8\u5206\u653e\u7f6e\u89c4\u5219\u5b9e\u9645\u4e0a\u6bd4\u52a8\u6001\u653e\u7f6e\u5668\u653e\u7f6e\u7684\u66f4\u6709\u6548\u3002 \u7136\u800c\uff0cTensorFlow \u56e2\u961f\u6b63\u5728\u52aa\u529b\u6539\u8fdb\u5b83\uff0c\u5e76\u4e14\u6700\u7ec8\u53ef\u80fd\u4f1a\u88ab\u5f00\u653e\u3002 \u5728\u6b64\u4e4b\u524d\uff0cTensorFlow\u90fd\u662f\u7b80\u5355\u7684\u653e\u7f6e\uff0c\u5b83\uff08\u5982\u5176\u540d\u79f0\u6240\u793a\uff09\u975e\u5e38\u57fa\u672c\u3002","title":"\u8bbe\u5907\u5e03\u7f6e\u64cd\u4f5c"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_4","text":"\u65e0\u8bba\u4f55\u65f6\u8fd0\u884c\u56fe\u5f62\uff0c\u5982\u679c TensorFlow \u9700\u8981\u6c42\u503c\u5c1a\u672a\u653e\u7f6e\u5728\u8bbe\u5907\u4e0a\u7684\u8282\u70b9\uff0c\u5219\u5b83\u4f1a\u4f7f\u7528\u7b80\u5355\u653e\u7f6e\u5668\u5c06\u5176\u653e\u7f6e\u5728\u672a\u653e\u7f6e\u7684\u6240\u6709\u5176\u4ed6\u8282\u70b9\u4e0a\u3002 \u7b80\u5355\u653e\u7f6e\u5c0a\u91cd\u4ee5\u4e0b\u89c4\u5219\uff1a \u5982\u679c\u67d0\u4e2a\u8282\u70b9\u5df2\u7ecf\u653e\u7f6e\u5728\u56fe\u5f62\u7684\u4e0a\u4e00\u6b21\u8fd0\u884c\u4e2d\u7684\u67d0\u4e2a\u8bbe\u5907\u4e0a\uff0c\u5219\u8be5\u8282\u70b9\u5c06\u4fdd\u7559\u5728\u8be5\u8bbe\u5907\u4e0a\u3002 \u5426\u5219\uff0c\u5982\u679c\u7528\u6237\u5c06\u4e00\u4e2a\u8282\u70b9\u56fa\u5b9a\u5230\u8bbe\u5907\u4e0a\uff08\u4e0b\u9762\u4ecb\u7ecd\uff09\uff0c\u5219\u653e\u7f6e\u5668\u5c06\u5176\u653e\u7f6e\u5728\u8be5\u8bbe\u5907\u4e0a\u3002 \u5426\u5219\uff0c\u5b83\u9ed8\u8ba4\u4e3a GPU#0\uff0c\u5982\u679c\u6ca1\u6709 GPU\uff0c\u5219\u9ed8\u8ba4\u4e3a CPU\u3002 \u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u5c06\u64cd\u4f5c\u653e\u5728\u9002\u5f53\u7684\u8bbe\u5907\u4e0a\u4e3b\u8981\u53d6\u51b3\u4e8e\u60a8\u3002 \u5982\u679c\u60a8\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u6574\u4e2a\u56fe\u8868\u5c06\u88ab\u653e\u7f6e\u5728\u9ed8\u8ba4\u8bbe\u5907\u4e0a\u3002 \u8981\u5c06\u8282\u70b9\u56fa\u5b9a\u5230\u8bbe\u5907\u4e0a\uff0c\u60a8\u5fc5\u987b\u4f7f\u7528 device() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u8bbe\u5907\u5757\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u53d8\u91cf a \u548c\u5e38\u91cf b \u56fa\u5b9a\u5728 CPU \u4e0a\uff0c\u4f46\u4e58\u6cd5\u8282\u70b9 c \u4e0d\u56fa\u5b9a\u5728\u4efb\u4f55\u8bbe\u5907\u4e0a\uff0c\u56e0\u6b64\u5c06\u653e\u7f6e\u5728\u9ed8\u8ba4\u8bbe\u5907\u4e0a\uff1a with tf.device(\"/cpu:0\"): a = tf.Variable(3.0) b = tf.constant(4.0) c = a * b \u5176\u4e2d\uff0c \"/cpu:0\" \u8bbe\u5907\u5408\u8ba1\u591a CPU \u7cfb\u7edf\u4e0a\u7684\u6240\u6709 CPU\u3002 \u76ee\u524d\u6ca1\u6709\u529e\u6cd5\u5728\u7279\u5b9a CPU \u4e0a\u56fa\u5b9a\u8282\u70b9\u6216\u4ec5\u4f7f\u7528\u6240\u6709 CPU \u7684\u5b50\u96c6\u3002","title":"\u7b80\u5355\u653e\u7f6e"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_5","text":"\u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u7b80\u5355\u7684\u653e\u7f6e\u5668\u662f\u5426\u9075\u5b88\u6211\u4eec\u521a\u521a\u5b9a\u4e49\u7684\u5e03\u5c40\u7ea6\u675f\u6761\u4ef6\u3002 \u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u5c06 log_device_placement \u9009\u9879\u8bbe\u7f6e\u4e3a True \uff1b\u8fd9\u544a\u8bc9\u653e\u7f6e\u5668\u5728\u653e\u7f6e\u8282\u70b9\u65f6\u8bb0\u5f55\u6d88\u606f\u3002\u4f8b\u5982\uff1a >>> config = tf.ConfigProto() >>> config.log_device_placement = True >>> sess = tf.Session(config=config) I [...] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0) [...] >>> x.initializer.run(session=sess) I [...] a: /job:localhost/replica:0/task:0/cpu:0 I [...] a/read: /job:localhost/replica:0/task:0/cpu:0 I [...] mul: /job:localhost/replica:0/task:0/gpu:0 I [...] a/Assign: /job:localhost/replica:0/task:0/cpu:0 I [...] b: /job:localhost/replica:0/task:0/cpu:0 I [...] a/initial_value: /job:localhost/replica:0/task:0/cpu:0 >>> sess.run(c) 12 Info \u4e2d\u4ee5\u5927\u5199\u5b57\u6bcd I \u5f00\u5934\u7684\u884c\u662f\u65e5\u5fd7\u6d88\u606f\u3002 \u5f53\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd\u65f6\uff0cTensorFlow \u4f1a\u8bb0\u5f55\u4e00\u6761\u6d88\u606f\uff0c\u544a\u8bc9\u6211\u4eec\u5b83\u5df2\u7ecf\u627e\u5230\u4e86\u4e00\u4e2a GPU \u5361\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662f Grid K520 \u5361\uff09\u3002 \u7136\u540e\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u8fd0\u884c\u56fe\u5f62\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u521d\u59cb\u5316\u53d8\u91cf a \u65f6\uff09\uff0c\u7b80\u5355\u5e03\u5c40\u5668\u8fd0\u884c\uff0c\u5e76\u5c06\u6bcf\u4e2a\u8282\u70b9\u653e\u7f6e\u5728\u5206\u914d\u7ed9\u5b83\u7684\u8bbe\u5907\u4e0a\u3002\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u65e5\u5fd7\u6d88\u606f\u663e\u793a\u6240\u6709\u8282\u70b9\u90fd\u653e\u5728 \"/cpu:0\" \u4e0a\uff0c\u9664\u4e86\u4e58\u6cd5\u8282\u70b9\uff0c\u5b83\u4ee5\u9ed8\u8ba4\u8bbe\u5907 \"/gpu:0\" \u7ed3\u675f\uff08\u60a8\u53ef\u4ee5\u5148\u5ffd\u7565\u524d\u7f00\uff1a /job:localhost/replica:0/task:0; \u6211\u4eec\u5c06\u5728\u4e00\u4f1a\u513f\u8ba8\u8bba\u5b83\uff09\u3002 \u6ce8\u610f\uff0c\u6211\u4eec\u7b2c\u4e8c\u6b21\u8fd0\u884c\u56fe\uff08\u8ba1\u7b97 c \uff09\u65f6\uff0c\u7531\u4e8e TensorFlow \u9700\u8981\u8ba1\u7b97\u7684\u6240\u6709\u8282\u70b9 c \u90fd\u5df2\u7ecf\u653e\u7f6e\uff0c\u6240\u4ee5\u4e0d\u4f7f\u7528\u5e03\u5c40\u5668\u3002","title":"\u8bb0\u5f55\u653e\u7f6e\u4f4d\u7f6e"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_6","text":"\u521b\u5efa\u8bbe\u5907\u5757\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u8bbe\u5907\u540d\u79f0\u3002TensorFlow \u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u8fdb\u884c\u6bcf\u4e2a\u9700\u8981\u653e\u7f6e\u5728\u8bbe\u5907\u5757\u4e2d\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5fc5\u987b\u8fd4\u56de\u8bbe\u5907\u7684\u540d\u79f0\u6765\u56fa\u5b9a\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u56fa\u5b9a\u6240\u6709\u53d8\u91cf\u8282\u70b9\u5230 \"/cpu:0\" \uff08\u5728\u672c\u4f8b\u4e2d\u53ea\u662f\u53d8\u91cf a \uff09\u548c\u6240\u6709\u5176\u4ed6\u8282\u70b9\u5230 \"/gpu:0\" \uff1a def variables_on_cpu(op): if op.type == \"Variable\": return \"/cpu:0\" else: return \"/gpu:0\" with tf.device(variables_on_cpu): a = tf.Variable(3.0) b = tf.constant(4.0) c = a * b \u60a8\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u7b97\u6cd5\uff0c\u4f8b\u5982\u4ee5\u5faa\u73af\u65b9\u5f0f\u7528GPU\u9501\u5b9a\u53d8\u91cf\u3002","title":"\u52a8\u6001\u653e\u7f6e\u529f\u80fd"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_7","text":"\u5bf9\u4e8e\u5728\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684 TensorFlow \u64cd\u4f5c\uff0c\u5b83\u9700\u8981\u5177\u6709\u8be5\u8bbe\u5907\u7684\u5b9e\u73b0\uff1b\u8fd9\u88ab\u79f0\u4e3a\u5185\u6838\u3002 \u8bb8\u591a\u64cd\u4f5c\u5bf9\u4e8e CPU \u548c GPU \u90fd\u6709\u5185\u6838\uff0c\u4f46\u5e76\u975e\u5168\u90e8\u90fd\u662f\u3002 \u4f8b\u5982\uff0cTensorFlow \u6ca1\u6709\u7528\u4e8e\u6574\u6570\u53d8\u91cf\u7684 GPU \u5185\u6838\uff0c\u56e0\u6b64\u5f53 TensorFlow \u5c1d\u8bd5\u5c06\u53d8\u91cfi\u653e\u7f6e\u5230 GPU#0 \u65f6\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u5931\u8d25\uff1a >>> with tf.device(\"/gpu:0\"): ... i = tf.Variable(3) [...] >>> sess.run(i.initializer) Traceback (most recent call last): [...] tensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'Variable': Could not satisfy explicit device specification \u8bf7\u6ce8\u610f\uff0cTensorFlow \u63a8\u65ad\u53d8\u91cf\u5fc5\u987b\u662f int32 \u7c7b\u578b\uff0c\u56e0\u4e3a\u521d\u59cb\u5316\u503c\u662f\u4e00\u4e2a\u6574\u6570\u3002 \u5982\u679c\u5c06\u521d\u59cb\u5316\u503c\u66f4\u6539\u4e3a 3.0 \u800c\u4e0d\u662f 3\uff0c\u6216\u8005\u5982\u679c\u5728\u521b\u5efa\u53d8\u91cf\u65f6\u663e\u5f0f\u8bbe\u7f6e dtype = tf.float32 \uff0c\u5219\u4e00\u5207\u6b63\u5e38\u3002","title":"\u64cd\u4f5c\u548c\u5185\u6838"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_8","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u5728\u64cd\u4f5c\u6ca1\u6709\u5185\u6838\u7684\u8bbe\u5907\u4e0a\u56fa\u5b9a\u64cd\u4f5c\uff0c\u5219\u5f53 TensorFlow \u5c1d\u8bd5\u5c06\u64cd\u4f5c\u653e\u7f6e\u5728\u8bbe\u5907\u4e0a\u65f6\uff0c\u60a8\u4f1a\u770b\u5230\u524d\u9762\u663e\u793a\u7684\u5f02\u5e38\u3002 \u5982\u679c\u60a8\u66f4\u559c\u6b22 TensorFlow \u56de\u9000\u5230 CPU\uff0c\u5219\u53ef\u4ee5\u5c06 allow_soft_placement \u914d\u7f6e\u9009\u9879\u8bbe\u7f6e\u4e3a True \uff1a with tf.device(\"/gpu:0\"): i = tf.Variable(3) config = tf.ConfigProto() config.allow_soft_placement = True sess = tf.Session(config=config) sess.run(i.initializer) # the placer runs and falls back to /cpu:0 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5982\u4f55\u5728\u4e0d\u540c\u8bbe\u5907\u4e0a\u653e\u7f6e\u8282\u70b9\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b TensorFlow \u5982\u4f55\u5e76\u884c\u8fd0\u884c\u8fd9\u4e9b\u8282\u70b9\u3002","title":"\u8f6f\u653e\u7f6e"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_9","text":"\u5f53 TensorFlow \u8fd0\u884c\u56fe\u65f6\uff0c\u5b83\u9996\u5148\u627e\u51fa\u9700\u8981\u6c42\u503c\u7684\u8282\u70b9\u5217\u8868\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u6709\u591a\u5c11\u4f9d\u8d56\u5173\u7cfb\u3002 \u7136\u540e TensorFlow \u5f00\u59cb\u6c42\u503c\u5177\u6709\u96f6\u4f9d\u8d56\u5173\u7cfb\u7684\u8282\u70b9\uff08\u5373\u6e90\u8282\u70b9\uff09\u3002 \u5982\u679c\u8fd9\u4e9b\u8282\u70b9\u88ab\u653e\u7f6e\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e0a\uff0c\u5b83\u4eec\u663e\u7136\u4f1a\u88ab\u5e76\u884c\u6c42\u503c\u3002 \u5982\u679c\u5b83\u4eec\u653e\u5728\u540c\u4e00\u4e2a\u8bbe\u5907\u4e0a\uff0c\u5b83\u4eec\u5c06\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u6c42\u503c\uff0c\u56e0\u6b64\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\uff08\u5728\u5355\u72ec\u7684 GPU \u7ebf\u7a0b\u6216 CPU \u5185\u6838\u4e2d\uff09\u3002 TensorFlow \u7ba1\u7406\u6bcf\u4e2a\u8bbe\u5907\u4e0a\u7684\u7ebf\u7a0b\u6c60\u4ee5\u5e76\u884c\u5316\u64cd\u4f5c\uff08\u53c2\u89c1\u56fe 12-5\uff09\u3002 \u8fd9\u4e9b\u88ab\u79f0\u4e3a inter-op \u7ebf\u7a0b\u6c60\u3002 \u6709\u4e9b\u64cd\u4f5c\u5177\u6709\u591a\u7ebf\u7a0b\u5185\u6838\uff1a\u5b83\u4eec\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7ebf\u7a0b\u6c60\uff08\u6bcf\u4e2a\u8bbe\u5907\u4e00\u4e2a\uff09\u79f0\u4e3a intra-op \u7ebf\u7a0b\u6c60\uff08\u4e0b\u9762\u5199\u6210\u5185\u90e8\u7ebf\u7a0b\u6c60\uff09\u3002 \u4f8b\u5982\uff0c\u5728\u56fe 12-5 \u4e2d\uff0c\u64cd\u4f5c A \uff0c B \u548c C \u662f\u6e90\u64cd\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u7acb\u5373\u8fdb\u884c\u6c42\u503c\u3002 \u64cd\u4f5c A \u548c B \u653e\u7f6e\u5728 GPU#0 \u4e0a\uff0c\u56e0\u6b64\u5b83\u4eec\u88ab\u53d1\u9001\u5230\u8be5\u8bbe\u5907\u7684\u5185\u90e8\u7ebf\u7a0b\u6c60\uff0c\u5e76\u7acb\u5373\u8fdb\u884c\u5e76\u884c\u6c42\u503c\u3002 \u64cd\u4f5cA\u6b63\u597d\u6709\u4e00\u4e2a\u591a\u7ebf\u7a0b\u5185\u6838; \u5b83\u7684\u8ba1\u7b97\u88ab\u5206\u6210\u4e09\u90e8\u5206\uff0c\u8fd9\u4e9b\u90e8\u5206\u7531\u5185\u90e8\u7ebf\u7a0b\u6c60\u5e76\u884c\u6267\u884c\u3002 \u64cd\u4f5c C \u8f6c\u5230 GPU#1 \u7684\u5185\u90e8\u7ebf\u7a0b\u6c60\u3002 \u4e00\u65e6\u64cd\u4f5c C \u5b8c\u6210\uff0c\u64cd\u4f5c D \u548c E \u7684\u4f9d\u8d56\u6027\u8ba1\u6570\u5668\u5c06\u9012\u51cf\u5e76\u4e14\u90fd\u5c06\u8fbe\u5230 0\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u5c06\u88ab\u53d1\u9001\u5230\u64cd\u4f5c\u5185\u7ebf\u7a0b\u6c60\u4ee5\u6267\u884c\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e inter_op_parallelism_threads \u9009\u9879\u6765\u63a7\u5236\u5185\u90e8\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u6570\u3002 \u8bf7\u6ce8\u610f\uff0c\u60a8\u5f00\u59cb\u7684\u7b2c\u4e00\u4e2a\u4f1a\u8bdd\u5c06\u521b\u5efa\u5185\u90e8\u7ebf\u7a0b\u6c60\u3002 \u9664\u975e\u60a8\u5c06 use_per_session_threads \u9009\u9879\u8bbe\u7f6e\u4e3a True \uff0c\u5426\u5219\u6240\u6709\u5176\u4ed6\u4f1a\u8bdd\u90fd\u5c06\u91cd\u7528\u5b83\u4eec\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e intra_op_parallelism_threads \u9009\u9879\u6765\u63a7\u5236\u6bcf\u4e2a\u5185\u90e8\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u6570\u3002","title":"\u5e76\u884c\u8fd0\u884c"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_10","text":"\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u6240\u6709\u4f9d\u8d56\u7684\u64cd\u4f5c\u90fd\u5df2\u6267\u884c\uff0c\u63a8\u8fdf\u5bf9\u64cd\u4f5c\u7684\u6c42\u503c\u53ef\u80fd\u4e5f\u662f\u660e\u667a\u4e4b\u4e3e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5b83\u4f7f\u7528\u5927\u91cf\u5185\u5b58\uff0c\u4f46\u5728\u56fe\u5f62\u4e2d\u53ea\u9700\u8981\u66f4\u591a\u5185\u5b58\uff0c\u5219\u6700\u597d\u5728\u6700\u540e\u4e00\u523b\u5bf9\u5176\u8fdb\u884c\u6c42\u503c\uff0c\u4ee5\u907f\u514d\u4e0d\u5fc5\u8981\u5730\u5360\u7528\u5176\u4ed6\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u7684 RAM\u3002 \u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u4f9d\u8d56\u4f4d\u4e8e\u8bbe\u5907\u5916\u90e8\u7684\u6570\u636e\u7684\u4e00\u7ec4\u64cd\u4f5c\u3002 \u5982\u679c\u5b83\u4eec\u5168\u90e8\u540c\u65f6\u8fd0\u884c\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u4f7f\u8bbe\u5907\u7684\u901a\u4fe1\u5e26\u5bbd\u8fbe\u5230\u9971\u548c\uff0c\u5e76\u6700\u7ec8\u5bfc\u81f4\u6240\u6709\u7b49\u5f85 I/O\u3002 \u5176\u4ed6\u9700\u8981\u4f20\u9012\u6570\u636e\u7684\u64cd\u4f5c\u4e5f\u5c06\u88ab\u963b\u6b62\u3002 \u987a\u5e8f\u6267\u884c\u8fd9\u4e9b\u901a\u4fe1\u7e41\u91cd\u7684\u64cd\u4f5c\u5c06\u662f\u6bd4\u8f83\u597d\u7684\uff0c\u8fd9\u6837\u5141\u8bb8\u8bbe\u5907\u5e76\u884c\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002 \u63a8\u8fdf\u5bf9\u67d0\u4e9b\u8282\u70b9\u7684\u6c42\u503c\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u6dfb\u52a0\u63a7\u5236\u4f9d\u8d56\u5173\u7cfb\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u544a\u8bc9 TensorFlow \u4ec5\u5728\u6c42\u503c\u5b8c a \u548c b \u4e4b\u540e\u624d\u6c42\u503c x \u548c y \uff1a a = tf.constant(1.0) b = a + 2.0 with tf.control_dependencies([a, b]): x = tf.constant(3.0) y = tf.constant(4.0) z = x + y \u663e\u7136\uff0c\u7531\u4e8e z \u4f9d\u8d56\u4e8e x \u548c y \uff0c\u6240\u4ee5\u6c42\u503c z \u4e5f\u610f\u5473\u7740\u7b49\u5f85 a \u548c b \u8fdb\u884c\u6c42\u503c\uff0c\u5373\u4f7f\u5b83\u5e76\u672a\u663e\u5f0f\u5b58\u5728\u4e8e control_dependencies() \u5757\u4e2d\u3002 \u6b64\u5916\uff0c\u7531\u4e8e b \u4f9d\u8d56\u4e8e a \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 [b] \u800c\u4e0d\u662f [a,b] \u4e0a\u521b\u5efa\u63a7\u5236\u4f9d\u8d56\u5173\u7cfb\u6765\u7b80\u5316\u524d\u9762\u7684\u4ee3\u7801\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u201c\u663e\u5f0f\u6bd4\u9690\u5f0f\u66f4\u597d\u201d\u3002 \u5f88\u597d\uff01\u73b0\u5728\u4f60\u77e5\u9053\u4e86\uff1a \u5982\u4f55\u4ee5\u4efb\u4f55\u60a8\u559c\u6b22\u7684\u65b9\u5f0f\u5728\u591a\u4e2a\u8bbe\u5907\u4e0a\u8fdb\u884c\u64cd\u4f5c \u8fd9\u4e9b\u64cd\u4f5c\u5982\u4f55\u5e76\u884c\u6267\u884c \u5982\u4f55\u521b\u5efa\u63a7\u5236\u4f9d\u8d56\u6027\u6765\u4f18\u5316\u5e76\u884c\u6267\u884c \u662f\u65f6\u5019\u5c06\u8ba1\u7b97\u5206\u5e03\u5728\u591a\u4e2a\u670d\u52a1\u5668\u4e0a\u4e86\uff01","title":"\u63a7\u5236\u4f9d\u8d56\u5173\u7cfb"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_11","text":"\u8981\u8de8\u591a\u53f0\u670d\u52a1\u5668\u8fd0\u884c\u56fe\u5f62\uff0c\u9996\u5148\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u96c6\u7fa4\u3002 \u4e00\u4e2a\u96c6\u7fa4\u7531\u4e00\u4e2a\u6216\u591a\u4e2a TensorFlow \u670d\u52a1\u5668\u7ec4\u6210\uff0c\u79f0\u4e3a\u4efb\u52a1\uff0c\u901a\u5e38\u5206\u5e03\u5728\u591a\u53f0\u673a\u5668\u4e0a\uff08\u89c1\u56fe 12-6\uff09\u3002 \u6bcf\u9879\u4efb\u52a1\u90fd\u5c5e\u4e8e\u4e00\u9879\u4f5c\u4e1a\u3002 \u4f5c\u4e1a\u53ea\u662f\u4e00\u7ec4\u901a\u5e38\u5177\u6709\u5171\u540c\u4f5c\u7528\u7684\u4efb\u52a1\uff0c\u4f8b\u5982\u8ddf\u8e2a\u6a21\u578b\u53c2\u6570\uff08\u4f8b\u5982\uff0c\u53c2\u6570\u670d\u52a1\u5668\u901a\u5e38\u547d\u540d\u4e3a \"ps\" \uff0cparameter server\uff09\u6216\u6267\u884c\u8ba1\u7b97\uff08\u8fd9\u6837\u7684\u4f5c\u4e1a\u901a\u5e38\u88ab\u547d\u540d\u4e3a \"worker\" \uff09\u3002 \u4ee5\u4e0b\u96c6\u7fa4\u89c4\u8303\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4f5c\u4e1a \"ps\" \u548c \"worker\" \uff0c\u5206\u522b\u5305\u542b\u4e00\u4e2a\u4efb\u52a1\u548c\u4e24\u4e2a\u4efb\u52a1\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u673a\u5668A\u6258\u7ba1\u7740\u4e24\u4e2a TensorFlow \u670d\u52a1\u5668\uff08\u5373\u4efb\u52a1\uff09\uff0c\u76d1\u542c\u4e0d\u540c\u7684\u7aef\u53e3\uff1a\u4e00\u4e2a\u662f \"ps\" \u4f5c\u4e1a\u7684\u4e00\u90e8\u5206\uff0c\u53e6\u4e00\u4e2a\u662f \"worker\" \u4f5c\u4e1a\u7684\u4e00\u90e8\u5206\u3002 \u673a\u5668B\u4ec5\u6258\u7ba1\u4e00\u53f0 TensorFlow \u670d\u52a1\u5668\uff0c\u8fd9\u662f \"worker\" \u4f5c\u4e1a\u7684\u4e00\u90e8\u5206\u3002 cluster_spec = tf.train.ClusterSpec({ \"ps\": [ \"machine-a.example.com:2221\", # /job:ps/task:0 ], \"worker\": [ \"machine-a.example.com:2222\", # /job:worker/task:0 \"machine-b.example.com:2222\", # /job:worker/task:1 ]}) \u8981\u542f\u52a8 TensorFlow \u670d\u52a1\u5668\uff0c\u60a8\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u5e76\u5411\u5176\u4f20\u9012\u96c6\u7fa4\u89c4\u8303\uff08\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u4e0e\u5176\u4ed6\u670d\u52a1\u5668\u901a\u4fe1\uff09\u4ee5\u53ca\u5b83\u81ea\u5df1\u7684\u4f5c\u4e1a\u540d\u79f0\u548c\u4efb\u52a1\u7f16\u53f7\u3002 \u4f8b\u5982\uff0c\u8981\u542f\u52a8\u7b2c\u4e00\u4e2a\u8f85\u52a9\u4efb\u52a1\uff0c\u60a8\u9700\u8981\u5728\u673a\u5668 A \u4e0a\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff1a server = tf.train.Server(cluster_spec, job_name=\"worker\", task_index=0) \u6bcf\u53f0\u673a\u5668\u53ea\u8fd0\u884c\u4e00\u4e2a\u4efb\u52a1\u901a\u5e38\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u524d\u9762\u7684\u4f8b\u5b50\u8868\u660e TensorFlow \u5141\u8bb8\u60a8\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u5982\u679c\u9700\u8981\u7684\u8bdd\uff09\u3002 \u5982\u679c\u60a8\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u5b89\u88c5\u4e86\u591a\u53f0\u670d\u52a1\u5668\uff0c\u5219\u9700\u8981\u786e\u4fdd\u5b83\u4eec\u4e0d\u4f1a\u5168\u90e8\u5c1d\u8bd5\u6293\u53d6\u6bcf\u4e2a GPU \u7684\u6240\u6709 RAM\uff0c\u5982\u524d\u6240\u8ff0\u3002 \u4f8b\u5982\uff0c\u5728\u56fe12-6\u4e2d\uff0c \"ps\" \u4efb\u52a1\u6ca1\u6709\u770b\u5230 GPU \u8bbe\u5907\uff0c\u60f3\u5fc5\u5176\u8fdb\u7a0b\u662f\u4f7f\u7528 CUDA_VISIBLE_DEVICES =\"\" \u542f\u52a8\u7684\u3002 \u8bf7\u6ce8\u610f\uff0cCPU\u7531\u4f4d\u4e8e\u540c\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u7684\u6240\u6709\u4efb\u52a1\u5171\u4eab\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u8fdb\u7a0b\u9664\u4e86\u8fd0\u884c TensorFlow \u670d\u52a1\u5668\u4e4b\u5916\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u544a\u8bc9\u5b83\u7b49\u5f85\u670d\u52a1\u5668\u4f7f\u7528 join() \u65b9\u6cd5\u6765\u5b8c\u6210\uff0c\u4ece\u800c\u963b\u585e\u4e3b\u7ebf\u7a0b\uff08\u5426\u5219\u670d\u52a1\u5668\u5c06\u5728\u60a8\u7684\u4e3b\u7ebf\u7a0b\u9000\u51fa\uff09\u3002 \u7531\u4e8e\u76ee\u524d\u6ca1\u6709\u529e\u6cd5\u963b\u6b62\u670d\u52a1\u5668\uff0c\u8fd9\u5b9e\u9645\u4e0a\u4f1a\u6c38\u8fdc\u963b\u6b62\uff1a server.join() # blocks until the server stops (i.e., never)","title":"\u591a\u4e2a\u670d\u52a1\u5668\u7684\u591a\u4e2a\u8bbe\u5907"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_12","text":"\u4e00\u65e6\u6240\u6709\u4efb\u52a1\u542f\u52a8\u5e76\u8fd0\u884c\uff08\u4f46\u8fd8\u4ec0\u4e48\u90fd\u6ca1\u505a\uff09\uff0c\u60a8\u53ef\u4ee5\u4ece\u4f4d\u4e8e\u4efb\u4f55\u673a\u5668\u4e0a\u7684\u4efb\u4f55\u8fdb\u7a0b\uff08\u751a\u81f3\u662f\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\uff09\u4e2d\u7684\u5ba2\u6237\u673a\u4e0a\u7684\u4efb\u4f55\u670d\u52a1\u5668\u4e0a\u6253\u5f00\u4f1a\u8bdd\uff0c\u5e76\u4f7f\u7528\u8be5\u4f1a\u8bdd\u50cf\u666e\u901a\u7684\u672c\u5730\u4f1a\u8bae\u4e00\u6837\u3002\u6bd4\u5982\uff1a a = tf.constant(1.0) b = a + 2 c = a * 3 with tf.Session(\"grpc://machine-b.example.com:2222\") as sess: print(c.eval()) # 9.0 \u8fd9\u4e2a\u5ba2\u6237\u7aef\u4ee3\u7801\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u56fe\u5f62\uff0c\u7136\u540e\u5728\u4f4d\u4e8e\u673a\u5668 B\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a\u4e3b\u673a\uff09\u4e0a\u7684 TensorFlow \u670d\u52a1\u5668\u4e0a\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd\uff0c\u5e76\u6307\u793a\u5b83\u6c42\u503c c \u3002 \u4e3b\u8bbe\u5907\u9996\u5148\u5c06\u64cd\u4f5c\u653e\u5728\u9002\u5f53\u7684\u8bbe\u5907\u4e0a\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5728\u4efb\u4f55\u8bbe\u5907\u4e0a\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e3b\u8bbe\u5907\u53ea\u5c06\u5b83\u4eec\u5168\u90e8\u653e\u5728\u5b83\u81ea\u5df1\u7684\u9ed8\u8ba4\u8bbe\u5907\u4e0a - \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u673a\u5668 B \u7684 GPU \u8bbe\u5907\u3002 \u7136\u540e\u5b83\u53ea\u662f\u6309\u7167\u5ba2\u6237\u7684\u6307\u793a\u6c42\u503c c \uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002","title":"\u5f00\u59cb\u4e00\u4e2a\u4f1a\u8bdd"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_13","text":"\u5ba2\u6237\u7aef\u4f7f\u7528 gRPC \u534f\u8bae\uff08Google Remote Procedure Call\uff09\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u3002 \u8fd9\u662f\u4e00\u4e2a\u9ad8\u6548\u7684\u5f00\u6e90\u6846\u67b6\uff0c\u53ef\u4ee5\u8c03\u7528\u8fdc\u7a0b\u51fd\u6570\uff0c\u5e76\u901a\u8fc7\u5404\u79cd\u5e73\u53f0\u548c\u8bed\u8a00\u83b7\u53d6\u5b83\u4eec\u7684\u8f93\u51fa\u3002\u5b83\u57fa\u4e8e HTTP2\uff0c\u6253\u5f00\u4e00\u4e2a\u8fde\u63a5\u5e76\u5728\u6574\u4e2a\u4f1a\u8bdd\u671f\u95f4\u4fdd\u6301\u6253\u5f00\u72b6\u6001\uff0c\u4e00\u65e6\u5efa\u7acb\u8fde\u63a5\u5c31\u53ef\u4ee5\u8fdb\u884c\u9ad8\u6548\u7684\u53cc\u5411\u901a\u4fe1\u3002 \u6570\u636e\u4ee5\u534f\u8bae\u7f13\u51b2\u533a\u7684\u5f62\u5f0f\u4f20\u8f93\uff0c\u8fd9\u662f\u53e6\u4e00\u79cd\u5f00\u6e90 Google \u6280\u672f\u3002 \u8fd9\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002 TensorFlow \u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u670d\u52a1\u5668\u90fd\u53ef\u80fd\u4e0e\u96c6\u7fa4\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u5728\u9632\u706b\u5899\u4e0a\u6253\u5f00\u9002\u5f53\u7684\u7aef\u53e3\u3002 \u6bcf\u53f0 TensorFlow \u670d\u52a1\u5668\u90fd\u63d0\u4f9b\u4e24\u79cd\u670d\u52a1\uff1a\u4e3b\u670d\u52a1\u548c\u8f85\u52a9\u670d\u52a1\u3002 \u4e3b\u670d\u52a1\u5141\u8bb8\u5ba2\u6237\u6253\u5f00\u4f1a\u8bdd\u5e76\u4f7f\u7528\u5b83\u4eec\u6765\u8fd0\u884c\u56fe\u5f62\u3002 \u5b83\u534f\u8c03\u8de8\u4efb\u52a1\u7684\u8ba1\u7b97\uff0c\u4f9d\u9760\u8f85\u52a9\u670d\u52a1\u5b9e\u9645\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u7684\u8ba1\u7b97\u5e76\u83b7\u5f97\u7ed3\u679c\u3002","title":"\u4e3b\u673a\u548c\u8f85\u52a9\u670d\u52a1"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_14","text":"\u901a\u8fc7\u6307\u5b9a\u4f5c\u4e1a\u540d\u79f0\uff0c\u4efb\u52a1\u7d22\u5f15\uff0c\u8bbe\u5907\u7c7b\u578b\u548c\u8bbe\u5907\u7d22\u5f15\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bbe\u5907\u5757\u6765\u9501\u5b9a\u7531\u4efb\u4f55\u4efb\u52a1\u7ba1\u7406\u7684\u4efb\u4f55\u8bbe\u5907\u4e0a\u7684\u64cd\u4f5c\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06 a \u56fa\u5b9a\u5728 \"ps\" \u4f5c\u4e1a\uff08\u5373\u673a\u5668 A \u4e0a\u7684 CPU\uff09\u4e2d\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7684 CPU\uff0c\u5e76\u5c06 b \u56fa\u5b9a\u5728 \"worker\" \u4f5c\u4e1a\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7ba1\u7406\u7684\u7b2c\u4e8c\u4e2a GPU \uff08\u8fd9\u662f A \u673a\u4e0a\u7684 GPU#1\uff09\u3002 \u6700\u540e\uff0c c \u6ca1\u6709\u56fa\u5b9a\u5728\u4efb\u4f55\u8bbe\u5907\u4e0a\uff0c\u6240\u4ee5\u4e3b\u8bbe\u5907\u5c06\u5b83\u653e\u5728\u5b83\u81ea\u5df1\u7684\u9ed8\u8ba4\u8bbe\u5907\u4e0a\uff08\u673a\u5668 B \u7684 GPU#0 \u8bbe\u5907\uff09\u3002 with tf.device(\"/job:ps/task:0/cpu:0\") a = tf.constant(1.0) with tf.device(\"/job:worker/task:0/gpu:1\") b = a + 2 c = a + b \u5982\u524d\u6240\u8ff0\uff0c\u5982\u679c\u60a8\u7701\u7565\u8bbe\u5907\u7c7b\u578b\u548c\u7d22\u5f15\uff0c\u5219 TensorFlow \u5c06\u9ed8\u8ba4\u4e3a\u8be5\u4efb\u52a1\u7684\u9ed8\u8ba4\u8bbe\u5907; \u4f8b\u5982\uff0c\u5c06\u64cd\u4f5c\u56fa\u5b9a\u5230 \"/job:ps/task:0\" \u4f1a\u5c06\u5176\u653e\u7f6e\u5728 \"ps\" \u4f5c\u4e1a\uff08\u673a\u5668 A \u7684 CPU\uff09\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7684\u9ed8\u8ba4\u8bbe\u5907\u4e0a\u3002 \u5982\u679c\u60a8\u8fd8\u7701\u7565\u4e86\u4efb\u52a1\u7d22\u5f15\uff08\u4f8b\u5982\uff0c \"/job:ps\" \uff09\uff0c\u5219 TensorFlow \u9ed8\u8ba4\u4e3a \"/task:0\" \u3002\u5982\u679c\u7701\u7565\u4f5c\u4e1a\u540d\u79f0\u548c\u4efb\u52a1\u7d22\u5f15\uff0c\u5219 TensorFlow \u9ed8\u8ba4\u4e3a\u4f1a\u8bdd\u7684\u4e3b\u4efb\u52a1\u3002","title":"\u56fa\u5b9a\u4efb\u52a1\u7684\u64cd\u4f5c"},{"location":"12.%E8%AE%BE%E5%A4%87%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F_TensorFlow/#_15","text":"\u6b63\u5982\u6211\u4eec\u5f88\u5feb\u4f1a\u770b\u5230\u7684\u90a3\u6837\uff0c\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e0a\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u5e38\u89c1\u6a21\u5f0f\u662f\u5c06\u6a21\u578b\u53c2\u6570\u5b58\u50a8\u5728\u4e00\u7ec4\u53c2\u6570\u670d\u52a1\u5668\u4e0a\uff08\u5373 \"ps\" \u4f5c\u4e1a\u4e2d\u7684\u4efb\u52a1\uff09\uff0c\u800c\u5176\u4ed6\u4efb\u52a1\u5219\u96c6\u4e2d\u5728\u8ba1\u7b97\u4e0a\uff08\u5373 \uff0c \"worker\" \u5de5\u4f5c\u4e2d\u7684\u4efb\u52a1\uff09\u3002 \u5bf9\u4e8e\u5177\u6709\u6570\u767e\u4e07\u53c2\u6570\u7684\u5927\u578b\u6a21\u578b\uff0c\u5728\u591a\u4e2a\u53c2\u6570\u670d\u52a1\u5668\u4e0a\u5206\u5272\u8fd9\u4e9b\u53c2\u6570\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u964d\u4f4e\u9971\u548c\u5355\u4e2a\u53c2\u6570\u670d\u52a1\u5668\u7f51\u5361\u7684\u98ce\u9669\u3002 \u5982\u679c\u60a8\u8981\u5c06\u6bcf\u4e2a\u53d8\u91cf\u624b\u52a8\u56fa\u5b9a\u5230\u4e0d\u540c\u7684\u53c2\u6570\u670d\u52a1\u5668\uff0c\u90a3\u5c06\u975e\u5e38\u7e41\u7410\u3002 \u5e78\u8fd0\u7684\u662f\uff0cTensorFlow \u63d0\u4f9b\u4e86 replica_device_setter() \u51fd\u6570\uff0c\u5b83\u4ee5\u5faa\u73af\u65b9\u5f0f\u5728\u6240\u6709 \"ps\" \u4efb\u52a1\u4e2d\u5206\u914d\u53d8\u91cf\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e94\u4e2a\u53d8\u91cf\u5f15\u5165\u4e24\u4e2a\u53c2\u6570\u670d\u52a1\u5668\uff1a with tf.device(tf.train.replica_device_setter(ps_tasks=2): v1 = tf.Variable(1.0) # pinned to /job:ps/task:0 v2 = tf.Variable(2.0) # pinned to /job:ps/task:1 v3 = tf.Variable(3.0) # pinned to /job:ps/task:0 v4 = tf.Variable(4.0) # pinned to /job:ps/task:1 v5 = tf.Variable(5.0) # pinned to /job:ps/task:0 \u60a8\u4e0d\u5fc5\u4f20\u9012 ps_tasks \u7684\u6570\u91cf\uff0c\u60a8\u53ef\u4ee5\u4f20\u9012\u96c6\u7fa4 spec = cluster_spec \uff0cTensorFlow \u5c06\u7b80\u5355\u8ba1\u7b97 \"ps\" \u4f5c\u4e1a\u4e2d\u7684\u4efb\u52a1\u6570\u3002 \u5982\u679c\u60a8\u5728\u5757\u4e2d\u521b\u5efa\u5176\u4ed6\u64cd\u4f5c\uff0c\u5219\u4e0d\u4ec5\u4ec5\u662f\u53d8\u91cf\uff0cTensorFlow \u4f1a\u81ea\u52a8\u5c06\u5b83\u4eec\u8fde\u63a5\u5230 \"/job:worker\" \uff0c\u9ed8\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\u7531 \"worker\" \u4f5c\u4e1a\u4e2d\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7ba1\u7406\u7684\u8bbe\u5907\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e worker_device \u53c2\u6570\u5c06\u5b83\u4eec\u56fa\u5b9a\u5230\u5176\u4ed6\u8bbe\u5907\uff0c\u4f46\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5d4c\u5165\u5f0f\u8bbe\u5907\u5757\u3002 \u5185\u90e8\u8bbe\u5907\u5757\u53ef\u4ee5\u8986\u76d6\u5728\u5916\u90e8\u5757\u4e2d\u5b9a\u4e49\u7684\u4f5c\u4e1a\uff0c\u4efb\u52a1\u6216\u8bbe\u5907\u3002 \u4f8b\u5982\uff1a with tf.device(tf.train.replica_device_setter(ps_tasks=2)): v1 = tf.Variable(1.0) # pinned to /job:ps/task:0 (+ defaults to /cpu:0) v2 = tf.Variable(2.0) # pinned to /job:ps/task:1 (+ defaults to /cpu:0) v3 = tf.Variable(3.0) # pinned to /job:ps/task:0 (+ defaults to /cpu:0) [...] s = v1 + v2 # pinned to /job:worker (+ defaults to task:0/gpu:0) with tf.device(\"/gpu:1\"): p1 = 2 * s # pinned to /job:worker/gpu:1 (+ defaults to /task:0) with tf.device(\"/task:1\"): p2 = 3 * s # pinned to /job:worker/task:1/gpu:1 \u8fd9\u4e2a\u4f8b\u5b50\u5047\u8bbe\u53c2\u6570\u670d\u52a1\u5668\u662f\u7eaf CPU \u7684\uff0c\u8fd9\u901a\u5e38\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u9700\u8981\u5b58\u50a8\u548c\u4f20\u9001\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u6267\u884c\u5bc6\u96c6\u8ba1\u7b97\u3002 \uff08\u672a\u5b8c\u6210\uff09","title":"\u8de8\u591a\u4e2a\u53c2\u6570\u670d\u52a1\u5668\u7684\u5206\u7247\u53d8\u91cf"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/","text":"\u5341\u4e09\u3001\u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u200b\u5c3d\u7ba1 IBM \u7684\u6df1\u84dd\u8d85\u7ea7\u8ba1\u7b97\u673a\u57281996\u5e74\u51fb\u8d25\u4e86\u56fd\u9645\u8c61\u68cb\u4e16\u754c\u51a0\u519b Garry Kasparvo\uff0c\u76f4\u5230\u8fd1\u51e0\u5e74\u8ba1\u7b97\u673a\u90fd\u4e0d\u80fd\u53ef\u9760\u5730\u5b8c\u6210\u4e00\u4e9b\u770b\u8d77\u6765\u8f83\u4e3a\u590d\u6742\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u5224\u522b\u7167\u7247\u4e2d\u662f\u5426\u6709\u72d7\u4ee5\u53ca\u8bc6\u522b\u8bed\u97f3\u3002\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u4efb\u52a1\u5bf9\u4e8e\u4eba\u7c7b\u800c\u8a00\u5982\u6b64\u7b80\u5355\uff1f\u7b54\u6848\u5728\u4e8e\u611f\u77e5\u4e3b\u8981\u53d1\u751f\u5728\u6211\u4eec\u610f\u8bc6\u9886\u57df\u4e4b\u5916\uff0c\u5728\u6211\u4eec\u5927\u8111\u4e2d\u7684\u4e13\u95e8\u89c6\u89c9\uff0c\u542c\u89c9\u548c\u5176\u4ed6\u611f\u5b98\u6a21\u5757\u5185\u3002\u5f53\u611f\u5b98\u4fe1\u606f\u8fbe\u5230\u6211\u4eec\u7684\u610f\u8bc6\u65f6\uff0c\u5b83\u5df2\u7ecf\u88ab\u88c5\u9970\u4e86\u9ad8\u7ea7\u7279\u5f81;\u4f8b\u5982\uff0c\u5f53\u4f60\u770b\u7740\u4e00\u53ea\u53ef\u7231\u7684\u5c0f\u72d7\u7684\u7167\u7247\u65f6\uff0c\u4f60\u4e0d\u80fd\u9009\u62e9\u4e0d\u770b\u8fd9\u53ea\u5c0f\u72d7\uff0c\u6216\u4e0d\u6ce8\u610f\u5b83\u7684\u53ef\u7231\u3002\u4f60\u4e5f\u4e0d\u80fd\u89e3\u91ca\u4f60\u5982\u4f55\u8ba4\u51fa\u8fd9\u662f\u4e00\u53ea\u53ef\u7231\u7684\u5c0f\u72d7\uff0c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u5f88\u660e\u663e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u76f8\u4fe1\u6211\u4eec\u7684\u4e3b\u89c2\u7ecf\u9a8c\uff1a\u611f\u77e5\u5e76\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u7406\u89e3\u5b83\u6211\u4eec\u5fc5\u987b\u770b\u770b\u611f\u5b98\u6a21\u5757\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u200b\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u662f\u4ece\u5927\u8111\u89c6\u89c9\u76ae\u5c42\u7684\u7814\u7a76\u4e2d\u51fa\u73b0\u7684\uff0c\u81ea 20 \u4e16\u7eaa 80 \u5e74\u4ee3\u4ee5\u6765\u5b83\u4eec\u4e00\u76f4\u7528\u4e8e\u56fe\u50cf\u8bc6\u522b\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u7531\u4e8e\u8ba1\u7b97\u80fd\u529b\u7684\u589e\u52a0\uff0c\u53ef\u7528\u8bad\u7ec3\u6570\u636e\u7684\u6570\u91cf\u4ee5\u53ca\u7b2c 11 \u7ae0\u4ecb\u7ecd\u7684\u8bad\u7ec3\u6df1\u5ea6\u7f51\u7edc\u7684\u6280\u5de7\uff0cCNN \u81f4\u529b\u4e8e\u5728\u67d0\u4e9b\u590d\u6742\u7684\u89c6\u89c9\u4efb\u52a1\u4e2d\u505a\u51fa\u8d85\u51fa\u4eba\u7c7b\u7684\u8868\u73b0\u3002\u4ed6\u4eec\u4f7f\u56fe\u50cf\u641c\u7d22\u670d\u52a1\uff0c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\uff0c\u89c6\u9891\u81ea\u52a8\u5206\u7c7b\u7cfb\u7edf\u7b49\u53d8\u5f97\u5f3a\u5927\u3002\u6b64\u5916\uff0cCNN \u5e76\u4e0d\u5c40\u9650\u4e8e\u89c6\u89c9\u611f\u77e5\uff1a\u5b83\u4eec\u5728\u5176\u4ed6\u4efb\u52a1\u4e2d\u4e5f\u5f88\u6210\u529f\uff0c\u5982\u8bed\u97f3\u8bc6\u522b\u6216\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09; \u7136\u800c\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u4e13\u6ce8\u4e8e\u89c6\u89c9\u5e94\u7528\u3002 \u200b\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd CNN \u7684\u6765\u6e90\uff0c\u6784\u5efa\u5b83\u4eec\u6a21\u5757\u7684\u5916\u89c2\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 TensorFlow \u5b9e\u73b0\u5b83\u4eec\u3002\u7136\u540e\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u6700\u597d\u7684 CNN \u67b6\u6784\u3002 \u200b \u89c6\u89c9\u76ae\u5c42\u7684\u7ed3\u6784 \u200bDavid H.Hubel \u548c Torsten Wiesel \u5728 1958 \u5e74\u548c 1959 \u5e74\u5bf9\u732b\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u5b9e\u9a8c\uff08\u4ee5\u53ca\u51e0\u5e74\u540e\u5728\u7334\u5b50\u4e0a\u7684\u5b9e\u9a8c\uff09\uff0c\u5bf9\u89c6\u89c9\u76ae\u5c42\u7684\u7ed3\u6784\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u89c1\u89e3\uff081981 \u5e74\u4f5c\u8005\u56e0\u6b64\u83b7\u5f97\u4e86\u8bfa\u8d1d\u5c14\u751f\u7406\u548c\u533b\u5b66\u5956\uff09\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4ed6\u4eec\u53d1\u73b0\u89c6\u76ae\u5c42\u4e2d\u7684\u8bb8\u591a\u795e\u7ecf\u5143\u6709\u4e00\u4e2a\u5c0f\u7684\u5c40\u90e8\u611f\u53d7\u91ce\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ea\u5bf9\u4f4d\u4e8e\u89c6\u91ce\u4e2d\u6709\u9650\u7684\u4e00\u90e8\u5206\u533a\u57df\u7684\u89c6\u89c9\u523a\u6fc0\u8d77\u4f5c\u7528\uff08\u89c1\u56fe 13-1\uff0c\u4e94\u4e2a\u795e\u7ecf\u5143\u7684\u5c40\u90e8\u611f\u53d7\u91ce\u7531\u865a\u7ebf\u5706\u5708\u8868\u793a\uff09\u3002\u4e0d\u540c\u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\u53ef\u80fd\u91cd\u53e0\uff0c\u5e76\u4e14\u5b83\u4eec\u4e00\u8d77\u5e73\u94fa\u4e86\u6574\u4e2a\u89c6\u91ce\u3002\u6b64\u5916\uff0c\u4f5c\u8005\u8868\u660e\uff0c\u4e00\u4e9b\u795e\u7ecf\u5143\u53ea\u5bf9\u6c34\u5e73\u7ebf\u65b9\u5411\u7684\u56fe\u50cf\u4f5c\u51fa\u53cd\u5e94\uff0c\u800c\u53e6\u4e00\u4e9b\u795e\u7ecf\u5143\u53ea\u5bf9\u4e0d\u540c\u65b9\u5411\u7684\u7ebf\u4f5c\u51fa\u53cd\u5e94\uff08\u4e24\u4e2a\u795e\u7ecf\u5143\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684\u611f\u53d7\u91ce\uff0c\u4f46\u5bf9\u4e0d\u540c\u65b9\u5411\u7684\u7ebf\u4f5c\u51fa\u53cd\u5e94\uff09\u3002\u4ed6\u4eec\u8fd8\u6ce8\u610f\u5230\u4e00\u4e9b\u795e\u7ecf\u5143\u5177\u6709\u8f83\u5927\u7684\u611f\u53d7\u91ce\uff0c\u5e76\u4e14\u5b83\u4eec\u5bf9\u8f83\u590d\u6742\u7684\u6a21\u5f0f\u4f5c\u51fa\u53cd\u5e94\uff0c\u8fd9\u4e9b\u6a21\u5f0f\u662f\u8f83\u4f4e\u5c42\u6a21\u5f0f\u7684\u7ec4\u5408\u3002\u8fd9\u4e9b\u89c2\u5bdf\u7ed3\u679c\u8ba9\u6211\u4eec\u60f3\u5230\uff1a\u66f4\u9ad8\u7ea7\u522b\u7684\u795e\u7ecf\u5143\u662f\u57fa\u4e8e\u76f8\u90bb\u4f4e\u7ea7\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff08\u5728\u56fe 13-1 \u4e2d\uff0c\u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ea\u4e0e\u6765\u81ea\u524d\u4e00\u5c42\u7684\u5c11\u6570\u795e\u7ecf\u5143\u76f8\u8fde\uff09\u3002\u8fd9\u4e2a\u5f3a\u5927\u7684\u7ed3\u6784\u80fd\u591f\u68c0\u6d4b\u89c6\u91ce\u4e2d\u4efb\u4f55\u533a\u57df\u7684\u5404\u79cd\u590d\u6742\u56fe\u6848\u3002 \u200b\u8fd9\u4e9b\u5bf9\u89c6\u89c9\u76ae\u5c42\u7684\u7814\u7a76\u542f\u53d1\u4e86 1980 \u5e74\u63a8\u51fa\u7684\u65b0\u8ba4\u77e5\u673a\uff08neocognitron\uff09\uff0c\u540e\u8005\u9010\u6e10\u6f14\u53d8\u4e3a\u6211\u4eec\u73b0\u5728\u79f0\u4e4b\u4e3a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u4e00\u4e2a\u91cd\u8981\u7684\u91cc\u7a0b\u7891\u662f Yann LeCun\uff0cL\u00e9onBottou\uff0cYoshua Bengio \u548c Patrick Haffner \u4e8e 1998 \u5e74\u53d1\u8868\u7684\u4e00\u7bc7\u8bba\u6587\uff0c\u8be5\u8bba\u6587\u5f15\u5165\u4e86\u7740\u540d\u7684 LeNet-5 \u67b6\u6784\uff0c\u5e7f\u6cdb\u7528\u4e8e\u8bc6\u522b\u624b\u5199\u652f\u7968\u53f7\u7801\u3002\u8fd9\u4e2a\u67b6\u6784\u6709\u4e00\u4e9b\u4f60\u5df2\u7ecf\u77e5\u9053\u7684\u6784\u5efa\u5757\uff0c\u6bd4\u5982\u5b8c\u5168\u8fde\u63a5\u5c42\u548c Sigmoid \u6fc0\u6d3b\u51fd\u6570\uff0c\u4f46\u662f\u5b83\u8fd8\u5f15\u5165\u4e86\u4e24\u4e2a\u65b0\u7684\u6784\u5efa\u5757\uff1a\u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\u3002\u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u4ed6\u4eec\u3002 \u5377\u79ef\u5c42 \u200bCNN \u6700\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\u662f\u5377\u79ef\u5c42\uff1a\u7b2c\u4e00\u5377\u79ef\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u4e0d\u662f\u8fde\u63a5\u5230\u8f93\u5165\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\uff08\u5c31\u50cf\u5b83\u4eec\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\u90a3\u6837\uff09\uff0c\u800c\u662f\u4ec5\u4ec5\u8fde\u63a5\u5230\u5b83\u4eec\u7684\u5c40\u90e8\u611f\u53d7\u91ce\u4e2d\u7684\u50cf\u7d20\uff08\u53c2\u89c1\u56fe 13-2\uff09\u3002 \u8fdb\u800c\uff0c\u7b2c\u4e8c\u5377\u79ef\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ea\u4e0e\u4f4d\u4e8e\u7b2c\u4e00\u5c42\u4e2d\u7684\u5c0f\u77e9\u5f62\u5185\u7684\u795e\u7ecf\u5143\u8fde\u63a5\u3002 \u8fd9\u79cd\u67b6\u6784\u5141\u8bb8\u7f51\u7edc\u4e13\u6ce8\u4e8e\u7b2c\u4e00\u9690\u85cf\u5c42\u4e2d\u7684\u4f4e\u7ea7\u7279\u5f81\uff0c\u7136\u540e\u5c06\u5176\u7ec4\u88c5\u6210\u4e0b\u4e00\u9690\u85cf\u5c42\u4e2d\u7684\u9ad8\u7ea7\u7279\u5f81\uff0c\u7b49\u7b49\u3002 \u8fd9\u79cd\u5c42\u6b21\u7ed3\u6784\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u56fe\u50cf\u4e2d\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u8fd9\u4e5f\u662f CNN \u5728\u56fe\u50cf\u8bc6\u522b\u65b9\u9762\u6548\u679c\u5f88\u597d\u7684\u539f\u56e0\u4e4b\u4e00\u3002 \u200b \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6240\u770b\u5230\u7684\u6240\u6709\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\u90fd\u6709\u7531\u4e00\u957f\u4e32\u795e\u7ecf\u5143\u7ec4\u6210\u7684\u5c42\uff0c\u5728\u8f93\u5165\u5230\u795e\u7ecf\u7f51\u7edc\u4e4b\u524d\u6211\u4eec\u5fc5\u987b\u5c06\u8f93\u5165\u56fe\u50cf\u538b\u7f29\u6210 1D\u3002 \u73b0\u5728\uff0c\u6bcf\u4e2a\u56fe\u5c42\u90fd\u4ee5 2D \u8868\u793a\uff0c\u8fd9\u4f7f\u5f97\u795e\u7ecf\u5143\u4e0e\u5176\u76f8\u5e94\u7684\u8f93\u5165\u8fdb\u884c\u5339\u914d\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002 \u200b\u4f4d\u4e8e\u7ed9\u5b9a\u5c42\u7684\u7b2c i \u884c\u7b2c j \u5217\u7684\u795e\u7ecf\u5143\u8fde\u63a5\u5230\u4f4d\u4e8e\u524d\u4e00\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u7684\u7b2ci\u884c\u5230\u7b2c \u884c\uff0c\u7b2c j \u5217\u5230\u7b2c \u5217\u3002 fh \u548c fw \u662f\u5c40\u90e8\u611f\u53d7\u91ce\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff08\u89c1\u56fe 13-3\uff09\u3002 \u4e3a\u4e86\u4f7f\u56fe\u5c42\u5177\u6709\u4e0e\u524d\u4e00\u56fe\u5c42\u76f8\u540c\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u901a\u5e38\u5728\u8f93\u5165\u5468\u56f4\u6dfb\u52a0\u96f6\uff0c\u5982\u56fe\u6240\u793a\u3002 \u8fd9\u88ab\u79f0\u4e3a\u96f6\u586b\u5145. \u200b\u5982\u56fe 13-4 \u6240\u793a\uff0c\u901a\u8fc7\u5c06\u5c40\u90e8\u611f\u53d7\u91ce\u9694\u5f00\uff0c\u8fd8\u53ef\u4ee5\u5c06\u8f83\u5927\u7684\u8f93\u5165\u5c42\u8fde\u63a5\u5230\u66f4\u5c0f\u7684\u5c42\u3002 \u4e24\u4e2a\u8fde\u7eed\u7684\u611f\u53d7\u91ce\u4e4b\u95f4\u7684\u8ddd\u79bb\u88ab\u79f0\u4e3a\u6b65\u5e45\u3002 \u5728\u56fe\u4e2d\uff0c\u4e00\u4e2a 5\u00d77 \u7684\u8f93\u5165\u5c42\uff08\u52a0\u96f6\u586b\u5145\uff09\u8fde\u63a5\u5230\u4e00\u4e2a 3\u00d74 \u5c42\uff0c\u4f7f\u7528 3\u00d73 \u7684\u5377\u79ef\u6838\u548c\u4e00\u4e2a\u6b65\u5e45\u4e3a 2\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6b65\u5e45\u5728\u4e24\u4e2a\u65b9\u5411\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u4e00\u5b9a\u603b\u662f\u5982\u6b64\uff09\u3002 \u4f4d\u4e8e\u4e0a\u5c42\u7b2c i \u884c\u7b2c j \u5217\u7684\u795e\u7ecf\u5143\u4e0e\u4f4d\u4e8e\u524d\u4e00\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u8fde\u63a5\u7684\u7b2c \u81f3 \u884c\uff0c\u7b2c \u5217\uff0c Sh \u548c Sw \u662f\u5782\u76f4\u548c\u6c34\u5e73\u7684\u6b65\u5e45\u3002 \u5377\u79ef\u6838/\u8fc7\u6ee4\u5668 \u200b\u795e\u7ecf\u5143\u7684\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u4e3a\u5c40\u90e8\u611f\u53d7\u91ce\u5927\u5c0f\u7684\u5c0f\u56fe\u50cf\u3002 \u4f8b\u5982\uff0c\u56fe 13-5 \u663e\u793a\u4e86\u4e24\u4e2a\u53ef\u80fd\u7684\u6743\u91cd\u96c6\uff0c\u79f0\u4e3a\u8fc7\u6ee4\u5668\uff08\u6216\u5377\u79ef\u6838\uff09\u3002\u7b2c\u4e00\u4e2a\u8868\u793a\u4e3a\u4e2d\u95f4\u6709\u4e00\u6761\u5782\u76f4\u7684\u767d\u7ebf\u7684\u9ed1\u8272\u6b63\u65b9\u5f62\uff08\u9664\u4e86\u4e2d\u95f4\u4e00\u5217\u5916\uff0c\u8fd9\u662f\u4e00\u4e2a\u5145\u6ee1 0 \u7684 7\u00d77 \u77e9\u9635\uff0c\u9664\u4e86\u4e2d\u592e\u5782\u76f4\u7ebf\u662f 1\uff09\u3002 \u4f7f\u7528\u8fd9\u4e9b\u6743\u91cd\u7684\u795e\u7ecf\u5143\u4f1a\u5ffd\u7565\u9664\u4e86\u4e2d\u592e\u5782\u76f4\u7ebf\u4ee5\u5916\u611f\u53d7\u91ce\u7684\u4e00\u5207\uff08\u56e0\u4e3a\u9664\u4f4d\u4e8e\u4e2d\u592e\u5782\u76f4\u7ebf\u4ee5\u5916\uff0c\u6240\u6709\u7684\u8f93\u5165\u90fd\u5c06\u4e58 0\uff09\u3002\u7b2c\u4e8c\u4e2a\u5377\u79ef\u6838\u662f\u4e00\u4e2a\u9ed1\u8272\u7684\u6b63\u65b9\u5f62\uff0c\u4e2d\u95f4\u6709\u4e00\u6761\u6c34\u5e73\u7684\u767d\u7ebf\u3002 \u518d\u4e00\u6b21\uff0c\u4f7f\u7528\u8fd9\u4e9b\u6743\u91cd\u7684\u795e\u7ecf\u5143\u5c06\u5ffd\u7565\u9664\u4e86\u4e2d\u5fc3\u6c34\u5e73\u7ebf\u4e4b\u5916\u7684\u5c40\u90e8\u611f\u53d7\u91ce\u4e2d\u7684\u4e00\u5207\u3002 \u200b\u73b0\u5728\uff0c\u5982\u679c\u4e00\u4e2a\u56fe\u5c42\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u5782\u76f4\u7ebf\u5377\u79ef\u6838\uff08\u4ee5\u53ca\u76f8\u540c\u7684\u504f\u7f6e\u9879\uff09\uff0c\u5e76\u4e14\u5c06\u7f51\u7edc\u8f93\u5165\u5230\u56fe 13-5\uff08\u5e95\u90e8\u56fe\u50cf\uff09\u4e2d\u6240\u793a\u7684\u8f93\u5165\u56fe\u50cf\uff0c\u5219\u8be5\u56fe\u5c42\u5c06\u8f93\u51fa\u5de6\u4e0a\u56fe\u50cf\u3002 \u8bf7\u6ce8\u610f\uff0c\u5782\u76f4\u7684\u767d\u7ebf\u5f97\u5230\u589e\u5f3a\uff0c\u5176\u4f59\u7684\u53d8\u5f97\u6a21\u7cca\u3002 \u7c7b\u4f3c\u5730\uff0c\u5982\u679c\u6240\u6709\u7684\u795e\u7ecf\u5143\u90fd\u4f7f\u7528\u6c34\u5e73\u7ebf\u5377\u79ef\u6838\uff0c\u53f3\u4e0a\u89d2\u7684\u56fe\u50cf\u5c31\u662f\u4f60\u6240\u5f97\u5230\u7684\u3002 \u6ce8\u610f\u5230\u6c34\u5e73\u7684\u767d\u7ebf\u5f97\u5230\u589e\u5f3a\uff0c\u5176\u4f59\u7684\u5219\u88ab\u6a21\u7cca\u4e86\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u76f8\u540c\u5377\u79ef\u548c\u7684\u4e00\u4e2a\u5145\u6ee1\u795e\u7ecf\u5143\u7684\u56fe\u5c42\u5c06\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u7279\u5f81\u6620\u5c04\uff0c\u8be5\u7279\u5f81\u6620\u5c04\u7a81\u51fa\u663e\u793a\u56fe\u50cf\u4e2d\u4e0e\u5377\u79ef\u548c\u6700\u76f8\u4f3c\u7684\u533a\u57df\u3002 \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0cCNN \u4e3a\u5176\u4efb\u52a1\u627e\u5230\u6700\u6709\u7528\u7684\u5377\u79ef\u548c\uff0c\u5e76\u5b66\u4e60\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u66f4\u590d\u6742\u7684\u6a21\u5f0f\uff08\u4f8b\u5982\uff0c\u4ea4\u53c9\u662f\u56fe\u50cf\u4e2d\u5782\u76f4\u5377\u79ef\u548c\u548c\u6c34\u5e73\u5377\u79ef\u548c\u90fd\u6fc0\u6d3b\u7684\u533a\u57df\uff09\u3002 \u53e0\u52a0\u7684\u591a\u4e2a\u7279\u5f81\u6620\u5c04 \u200b\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u6bcf\u4e2a\u5377\u79ef\u5c42\u8868\u793a\u4e3a\u4e00\u4e2a\u8584\u7684\u4e8c\u7ef4\u5c42\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5b83\u662f\u7531\u51e0\u4e2a\u76f8\u540c\u5927\u5c0f\u7684\u7279\u5f81\u6620\u5c04\u7ec4\u6210\u7684\uff0c\u6240\u4ee5\u4f7f\u75283D\u56fe\u8868\u793a\u5176\u4f1a\u66f4\u52a0\u51c6\u786e\uff08\u89c1\u56fe 13-6\uff09\u3002 \u5728\u4e00\u4e2a\u7279\u5f81\u6620\u5c04\u4e2d\uff0c\u6240\u6709\u795e\u7ecf\u5143\u5171\u4eab\u76f8\u540c\u7684\u53c2\u6570\uff08\u6743\u91cd\u548c\u504f\u7f6e\uff0c\u6743\u503c\u5171\u4eab\uff09\uff0c\u4f46\u662f\u4e0d\u540c\u7684\u7279\u5f81\u6620\u5c04\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u53c2\u6570\u3002 \u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\u4e0e\u524d\u9762\u63cf\u8ff0\u7684\u76f8\u540c\uff0c\u4f46\u662f\u5b83\u5ef6\u4f38\u5230\u6240\u6709\u5148\u524d\u7684\u5c42\u7684\u7279\u5f81\u6620\u5c04\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5377\u79ef\u5c42\u540c\u65f6\u5bf9\u5176\u8f93\u5165\u5e94\u7528\u591a\u4e2a\u5377\u79ef\u6838\uff0c\u4f7f\u5176\u80fd\u591f\u68c0\u6d4b\u8f93\u5165\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u7684\u591a\u4e2a\u7279\u5f81\u3002 \u200b \u4e8b\u5b9e\u4e0a\uff0c\u7279\u5f81\u5730\u56fe\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u5171\u4eab\u76f8\u540c\u7684\u53c2\u6570\u4f1a\u663e\u7740\u51cf\u5c11\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u6570\u91cf\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u4e00\u65e6 CNN \u5b66\u4f1a\u8bc6\u522b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6a21\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u5176\u4ed6\u4f4d\u7f6e\u8bc6\u522b\u5b83\u3002 \u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e00\u65e6\u4e00\u4e2a\u5e38\u89c4 DNN \u5b66\u4f1a\u8bc6\u522b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6a21\u5f0f\uff0c\u5b83\u53ea\u80fd\u5728\u8be5\u7279\u5b9a\u4f4d\u7f6e\u8bc6\u522b\u5b83\u3002 \u200b\u800c\u4e14\uff0c\u8f93\u5165\u56fe\u50cf\u4e5f\u7531\u591a\u4e2a\u5b50\u56fe\u5c42\u7ec4\u6210\uff1a\u6bcf\u4e2a\u989c\u8272\u901a\u9053\u4e00\u4e2a\u3002 \u901a\u5e38\u6709\u4e09\u79cd\uff1a\u7ea2\u8272\uff0c\u7eff\u8272\u548c\u84dd\u8272\uff08RGB\uff09\u3002 \u7070\u5ea6\u56fe\u50cf\u53ea\u6709\u4e00\u4e2a\u901a\u9053\uff0c\u4f46\u662f\u4e00\u4e9b\u56fe\u50cf\u53ef\u80fd\u66f4\u591a - \u4f8b\u5982\u6355\u6349\u989d\u5916\u5149\u9891\uff08\u5982\u7ea2\u5916\u7ebf\uff09\u7684\u536b\u661f\u56fe\u50cf\u3002 \u200b\u5177\u4f53\u5730\uff0c\u4f4d\u4e8e\u7ed9\u5b9a\u5377\u79ef\u5c42L\u4e2d\u7684\u7279\u5f81\u6620\u5c04k\u7684i\u884c\uff0cj\u5217\u4e2d\u7684\u795e\u7ecf\u5143\u8fde\u63a5\u5230\u524d\u4e00\u5c42\uff08L-1\uff09\u4f4d\u4e8e \u884c\uff0c \u5217\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002\u8bf7\u6ce8\u610f\uff0c\u4f4d\u4e8e\u540c\u4e00\u884c\u7b2c i \u5217\u548c\u7b2c j \u5217\u4f46\u4f4d\u4e8e\u4e0d\u540c\u7279\u5f81\u6620\u5c04\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u90fd\u8fde\u63a5\u5230\u4e0a\u4e00\u5c42\u4e2d\u5b8c\u5168\u76f8\u540c\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002 \u200b\u516c\u5f0f 13-1 \u5728\u4e00\u4e2a\u603b\u7ed3\u524d\u9762\u89e3\u91ca\u7684\u5927\u7684\u6570\u5b66\u516c\u5f0f\uff1a\u5b83\u5c55\u793a\u4e86\u5982\u4f55\u8ba1\u7b97\u5377\u79ef\u5c42\u4e2d\u7ed9\u5b9a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002\u5b83\u662f\u8ba1\u7b97\u6240\u6709\u6295\u5165\u7684\u52a0\u6743\u603b\u5e76\u4e14\u52a0\u4e0a\u504f\u7f6e\u3002 \u662f\u5377\u79ef\u5c42\uff08L\u5c42\uff09\u7279\u5f81\u6620\u5c04k\u4e2d\u4f4d\u4e8e\u7b2c i \u884c\u7b2c j \u5217\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa. \u5982\u524d\u6240\u8ff0\uff0c \u548c \u662f\u5782\u76f4\u548c\u6c34\u5e73\u7684\u6b65\u5e45\uff0c \u548c \u662f\u611f\u53d7\u91ce\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c \u662f\u524d\u4e00\u5c42\uff08\u7b2c l - 1 \u5c42\uff09\u7684\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\u3002 \u662f\u4f4d\u4e8e\u5c42 L-1 \uff0c i' \u884c\uff0c j' \u5217\uff0c\u7279\u5f81\u6620\u5c04 k' \uff08\u6216\u8005\u5982\u679c\u524d\u4e00\u5c42\u662f\u8f93\u5165\u5c42\u7684\u901a\u9053 k' \uff09\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002 \u662f\u7279\u5f81\u6620\u5c04 k \u7684\u504f\u7f6e\u9879\uff08\u5728 L \u5c42\u4e2d\uff09\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u8c03\u6574\u7279\u5f81\u6620\u5c04 k \u7684\u6574\u4f53\u4eae\u5ea6\u7684\u65cb\u94ae\u3002 \u662f\u5c42 L \u7684\u7279\u5f81\u6620\u5c04 k \u4e2d\u7684\u4efb\u4f55\u795e\u7ecf\u5143\u4e0e\u4f4d\u4e8e\u884c u \uff0c\u5217 v \uff08\u76f8\u5bf9\u4e8e\u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\uff09\u7684\u8f93\u5165\u4e4b\u95f4\u7684\u8fde\u63a5\u6743\u91cd\uff0c\u4ee5\u53ca\u7279\u5f81\u6620\u5c04k'\u3002 TensorFlow \u5b9e\u73b0 \u200b\u5728 Tensorflow \u4e2d\uff0c\u6bcf\u4e2a\u8f93\u5165\u56fe\u50cf\u7684\u901a\u5e38\u88ab\u8868\u793a\u4e3a\u4e09\u7ef4\u5f20\u91cf \u3002 \u4e00\u4e2a\u5c0f\u6279\u6b21\u88ab\u8868\u793a\u4e3a\u56db\u7ef4\u5f20\u91cf \u3002 \u5377\u79ef\u5c42\u7684\u6743\u91cd\u88ab\u8868\u793a\u4e3a\u56db\u7ef4\u5f20\u91cf \u3002 \u5377\u79ef\u5c42\u7684\u504f\u5dee\u9879\u7b80\u5355\u5730\u8868\u793a\u4e3a\u4e00\u7ef4\u5f62\u72b6\u7684\u5f20\u91cf \u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528 Scikit-Learn \u7684 load_sample_images() \uff08\u52a0\u8f7d\u4e24\u4e2a\u5f69\u8272\u56fe\u50cf\uff0c\u4e00\u4e2a\u4e2d\u56fd\u5e99\u5b87\uff0c\u53e6\u4e00\u4e2a\u662f\u4e00\u6735\u82b1\uff09\u52a0\u8f7d\u4e24\u4e2a\u6837\u672c\u56fe\u50cf\u3002 \u7136\u540e\u521b\u5efa\u4e24\u4e2a 7\u00d77 \u7684\u5377\u79ef\u6838\uff08\u4e00\u4e2a\u4e2d\u95f4\u662f\u5782\u76f4\u7684\u767d\u7ebf\uff0c\u53e6\u4e00\u4e2a\u662f\u6c34\u5e73\u7684\u767d\u7ebf\uff09\uff0c\u5e76\u5c06\u4ed6\u4eec\u5e94\u7528\u5230\u4e24\u5f20\u56fe\u5f62\u4e2d,\u4f7f\u7528 TensorFlow \u7684 conv2d() \u51fd\u6570\u6784\u5efa\u7684\u5377\u79ef\u56fe\u5c42\uff08\u4f7f\u7528\u96f6\u586b\u5145\u4e14\u6b65\u5e45\u4e3a 2\uff09\u3002 \u6700\u540e\uff0c\u7ed8\u5236\u5176\u4e2d\u4e00\u4e2a\u7ed3\u679c\u7279\u5f81\u6620\u5c04\uff08\u7c7b\u4f3c\u4e8e\u56fe 13-5 \u4e2d\u7684\u53f3\u4e0a\u56fe\uff09\u3002 from sklearn.datasets import load_sample_image import matplotlib.pyplot as plt import numpy as np import tensorflow as tf if __name__ == '__main__': # Load sample images china = load_sample_image(\"china.jpg\") flower = load_sample_image(\"flower.jpg\") dataset = np.array([china, flower], dtype=np.float32) batch_size, height, width, channels = dataset.shape # Create 2 filters filters = np.zeros(shape=(7, 7, channels, 2), dtype=np.float32) filters[:, 3, :, 0] = 1 # vertical line filters[3, :, :, 1] = 1 # horizontal line # Create a graph with input X plus a convolutional layer applying the 2 filters X = tf.placeholder(tf.float32, shape=(None, height, width, channels)) convolution = tf.nn.conv2d(X, filters, strides=[1,2,2,1], padding=\"SAME\") with tf.Session() as sess: output = sess.run(convolution, feed_dict={X: dataset}) plt.imshow(output[0, :, :, 1], cmap=\"gray\") # plot 1st image's 2nd feature map plt.show() \u5927\u90e8\u5206\u4ee3\u7801\u662f\u4e0d\u8a00\u800c\u55bb\u7684\uff0c\u4f46 conv2d() \u8fd9\u4e00\u884c\u503c\u5f97\u89e3\u91ca\u4e00\u4e0b\uff1a X \u662f\u8f93\u5165\u5c0f\u6279\u6b21\uff084D \u5f20\u91cf\uff0c\u5982\u524d\u6240\u8ff0\uff09 \u5377\u79ef\u6838\u662f\u5e94\u7528\u7684\u4e00\u7ec4\u5377\u79ef\u6838\uff08\u4e5f\u662f\u4e00\u4e2a 4D \u5f20\u91cf\uff0c\u5982\u524d\u6240\u8ff0\uff09\u3002 \u6b65\u5e45\u662f\u4e00\u4e2a\u56db\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5176\u4e2d\u4e24\u4e2a\u4e2d\u95f4\u7684\u503c\u662f\u5782\u76f4\u548c\u6c34\u5e73\u7684\u6b65\u5e45\uff08 sh \u548c sw \uff09\u3002 \u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u73b0\u5728\u5fc5\u987b\u7b49\u4e8e 1\u3002\u4ed6\u4eec\u53ef\u80fd\u6709\u4e00\u5929\u4f1a\u88ab\u7528\u6765\u6307\u5b9a\u6279\u91cf\u6b65\u957f\uff08\u8df3\u8fc7\u4e00\u4e9b\u5b9e\u4f8b\uff09\u548c\u9891\u9053\u6b65\u5e45\uff08\u8df3\u8fc7\u4e0a\u4e00\u5c42\u7684\u7279\u5f81\u6620\u5c04\u6216\u901a\u9053\uff09\u3002 padding \u5fc5\u987b\u662f \"VALID\" \u6216 \"SAME\" \uff1a \u5982\u679c\u8bbe\u7f6e\u4e3a \"VALID\" \uff0c\u5377\u79ef\u5c42\u4e0d\u4f7f\u7528\u96f6\u586b\u5145\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5ffd\u7565\u8f93\u5165\u56fe\u50cf\u5e95\u90e8\u548c\u53f3\u4fa7\u7684\u67d0\u4e9b\u884c\u548c\u5217\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6b65\u5e45\uff0c\u5982\u56fe 13-7 \u6240\u793a\uff08\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c \u8fd9\u91cc\u53ea\u663e\u793a\u6c34\u5e73\u5c3a\u5bf8\uff0c\u5f53\u7136\uff0c\u5782\u76f4\u5c3a\u5bf8\u4e5f\u9002\u7528\u76f8\u540c\u7684\u903b\u8f91\uff09 \u5982\u679c\u8bbe\u7f6e\u4e3a \"SAME\" \uff0c\u5219\u5377\u79ef\u5c42\u5728\u5fc5\u8981\u65f6\u4f7f\u7528\u96f6\u586b\u5145\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u6570\u91cf\u7b49\u4e8e\u8f93\u5165\u795e\u7ecf\u5143\u7684\u6570\u91cf\u9664\u4ee5\u8be5\u6b65\u5e45\uff0c\u5411\u4e0a\u820d\u5165\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c ceil(13/5)= 3 \uff09\u3002 \u7136\u540e\u5728\u8f93\u5165\u5468\u56f4\u5c3d\u53ef\u80fd\u5747\u5300\u5730\u6dfb\u52a0\u96f6\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u5377\u79ef\u56fe\u5c42\u6709\u5f88\u591a\u8d85\u53c2\u6570\uff1a\u4f60\u5fc5\u987b\u9009\u62e9\u5377\u79ef\u6838\u7684\u6570\u91cf\uff0c\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u6b65\u5e45\u548c\u586b\u5145\u7c7b\u578b\u3002 \u4e0e\u5f80\u5e38\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u67e5\u627e\u6b63\u786e\u7684\u8d85\u53c2\u6570\u503c\uff0c\u4f46\u8fd9\u975e\u5e38\u8017\u65f6\u3002 \u7a0d\u540e\u6211\u4eec\u5c06\u8ba8\u8bba\u5e38\u89c1\u7684 CNN \u4f53\u7cfb\u7ed3\u6784\uff0c\u4ee5\u4fbf\u8ba9\u60a8\u4e86\u89e3\u8d85\u53c2\u6570\u503c\u5728\u5b9e\u8df5\u4e2d\u7684\u6700\u4f73\u5de5\u4f5c\u65b9\u5f0f\u3002 \u5185\u5b58\u9700\u6c42 \u200bCNN \u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u5377\u79ef\u5c42\u9700\u8981\u5927\u91cf\u7684 RAM\uff0c\u7279\u522b\u662f\u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u56e0\u4e3a\u53cd\u5411\u4f20\u64ad\u9700\u8981\u5728\u6b63\u5411\u4f20\u9012\u671f\u95f4\u8ba1\u7b97\u7684\u6240\u6709\u4e2d\u95f4\u503c\u3002 \u200b\u4f8b\u5982\uff0c\u8003\u8651\u5177\u6709 5\u00d75 \u5377\u79ef\u6838\u7684\u5377\u79ef\u5c42\uff0c\u8f93\u51fa 200 \u4e2a\u5c3a\u5bf8\u4e3a 150\u00d7100 \u7684\u7279\u5f81\u6620\u5c04\uff0c\u6b65\u957f\u4e3a 1\uff0c\u4f7f\u7528 SAME \u586b\u5145\u3002 \u5982\u679c\u8f93\u5165\u662f 150\u00d7100 RGB \u56fe\u50cf\uff08\u4e09\u4e2a\u901a\u9053\uff09\uff0c\u5219\u53c2\u6570\u7684\u6570\u91cf\u662f (5\u00d75\u00d73 + 1)\u00d7200 = 15,200 \uff08 +1 \u5bf9\u5e94\u4e8e\u504f\u7f6e\u9879\uff09\uff0c\u8fd9\u8ddf\u5168\u8fde\u63a5\u5c42\u6bd4\u8f83\u662f\u76f8\u5f53\u5c0f\u7684\u3002\uff08\u5177\u6709 150\u00d7100 \u795e\u7ecf\u5143\u7684\u5168\u8fde\u63a5\u5c42\uff0c\u6bcf\u4e2a\u8fde\u63a5\u5230\u6240\u6709 150\u00d7100\u00d73 \u8f93\u5165\uff0c\u5c06\u5177\u6709 150 ^ 2\u00d7100 ^ 2\u00d73 = 675,000,000 \u4e2a\u53c2\u6570\uff01\uff09\u7136\u800c\uff0c200 \u4e2a\u7279\u5f81\u6620\u5c04\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5305\u542b 150\u00d7100 \u4e2a\u795e\u7ecf\u5143\uff0c\u5e76\u4e14\u8fd9\u4e9b\u795e\u7ecf\u5143\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u9700\u8981\u8ba1\u7b97\u5176 5\u00d75\u00d73 = 75 \u4e2a\u8f93\u5165\u7684\u6743\u91cd\u548c\uff1a\u603b\u5171 2.25 \u4ebf\u6b21\u6d6e\u70b9\u4e58\u6cd5\u3002\u4e0d\u50cf\u5168\u8fde\u63a5\u5c42\u90a3\u4e48\u7cdf\u7cd5\uff0c\u4f46\u4ecd\u7136\u662f\u8ba1\u7b97\u5bc6\u96c6\u578b\u7684\u3002 \u800c\u4e14\uff0c\u5982\u679c\u4f7f\u7528 32 \u4f4d\u6d6e\u70b9\u6570\u6765\u8868\u793a\u7279\u5f81\u6620\u5c04\uff0c\u5219\u5377\u79ef\u5c42\u7684\u8f93\u51fa\u5c06\u5360\u7528 RAM \u7684 200\u00d7150\u00d7100\u00d732 = 9600\u4e07 \u4f4d\uff08\u5927\u7ea6 11.4MB\uff09\u3002 \u8fd9\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\uff01 \u5982\u679c\u8bad\u7ec3\u6279\u6b21\u5305\u542b 100 \u4e2a\u5b9e\u4f8b\uff0c\u5219\u8be5\u5c42\u5c06\u5360\u7528\u8d85\u8fc7 1 GB \u7684 RAM\uff01 \u200b\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\uff08\u5373\u5bf9\u65b0\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\u65f6\uff09\uff0c\u4e00\u65e6\u4e0b\u4e00\u5c42\u8ba1\u7b97\u5b8c\u6bd5\uff0c\u4e00\u5c42\u6240\u5360\u7528\u7684 RAM \u5c31\u53ef\u4ee5\u88ab\u91ca\u653e\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4e24\u4e2a\u8fde\u7eed\u5c42\u6240\u9700\u7684 RAM \u6570\u91cf\u3002 \u4f46\u662f\u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u5728\u6b63\u5411\u4f20\u9012\u671f\u95f4\u8ba1\u7b97\u7684\u6240\u6709\u5185\u5bb9\u90fd\u9700\u8981\u88ab\u4fdd\u7559\u7528\u4e8e\u53cd\u5411\u4f20\u9012\uff0c\u6240\u4ee5\u6240\u9700\u7684 RAM \u91cf\uff08\u81f3\u5c11\uff09\u662f\u6240\u6709\u5c42\u6240\u9700\u7684 RAM \u603b\u91cf\u3002 \u200b \u5982\u679c\u7531\u4e8e\u5185\u5b58\u4e0d\u8db3\u9519\u8bef\u5bfc\u81f4\u8bad\u7ec3\u5d29\u6e83\uff0c\u5219\u53ef\u4ee5\u5c1d\u8bd5\u51cf\u5c11\u5c0f\u6279\u91cf\u5927\u5c0f\u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u6b65\u5e45\u964d\u4f4e\u7ef4\u5ea6\uff0c\u6216\u8005\u5220\u9664\u51e0\u4e2a\u56fe\u5c42\u3002 \u6216\u8005\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 16 \u4f4d\u6d6e\u70b9\u6570\u800c\u4e0d\u662f 32 \u4f4d\u6d6e\u70b9\u6570\u3002 \u6216\u8005\u4f60\u53ef\u4ee5\u5728\u591a\u4e2a\u8bbe\u5907\u4e0a\u5206\u53d1 CNN\u3002 \u6c60\u5316\u5c42 \u200b\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u5377\u79ef\u5c42\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6c60\u5316\u5c42\u5f88\u5bb9\u6613\u638c\u63e1\u3002 \u4ed6\u4eec\u7684\u76ee\u6807\u662f\u5bf9\u8f93\u5165\u56fe\u50cf\u8fdb\u884c\u4e8c\u6b21\u62bd\u6837\uff08\u5373\u6536\u7f29\uff09\u4ee5\u51cf\u5c11\u8ba1\u7b97\u8d1f\u62c5\uff0c\u5185\u5b58\u4f7f\u7528\u91cf\u548c\u53c2\u6570\u6570\u91cf\uff08\u4ece\u800c\u9650\u5236\u8fc7\u5ea6\u62df\u5408\u7684\u98ce\u9669\uff09\u3002 \u51cf\u5c11\u8f93\u5165\u56fe\u50cf\u7684\u5927\u5c0f\u4e5f\u4f7f\u5f97\u795e\u7ecf\u7f51\u7edc\u5bb9\u5fcd\u4e00\u70b9\u70b9\u7684\u56fe\u50cf\u53d8\u6362\uff08\u4f4d\u7f6e\u4e0d\u53d8\uff09\u3002 \u200b\u5c31\u50cf\u5728\u5377\u79ef\u56fe\u5c42\u4e2d\u4e00\u6837\uff0c\u6c60\u5316\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u8fde\u63a5\u5230\u524d\u4e00\u5c42\u4e2d\u6709\u9650\u6570\u91cf\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff0c\u4f4d\u4e8e\u4e00\u4e2a\u5c0f\u7684\u77e9\u5f62\u611f\u53d7\u91ce\u5185\u3002 \u60a8\u5fc5\u987b\u50cf\u4ee5\u524d\u4e00\u6837\u5b9a\u4e49\u5176\u5927\u5c0f\uff0c\u8de8\u5ea6\u548c\u586b\u5145\u7c7b\u578b\u3002 \u4f46\u662f\uff0c\u6c47\u96c6\u7684\u795e\u7ecf\u5143\u6ca1\u6709\u6743\u91cd; \u5b83\u6240\u505a\u7684\u53ea\u662f\u4f7f\u7528\u805a\u5408\u51fd\u6570\uff08\u5982\u6700\u5927\u503c\u6216\u5e73\u5747\u503c\uff09\u6765\u805a\u5408\u8f93\u5165\u3002 \u56fe 13-8 \u663e\u793a\u4e86\u6700\u5927\u6c60\u5c42\uff0c\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u6c60\u5316\u7c7b\u578b\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a2\u00d72\u7684\u6838\uff0c\u6b65\u5e45\u4e3a 2\uff0c\u6ca1\u6709\u586b\u5145\u3002 \u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u6bcf\u4e2a\u6838\u4e2d\u7684\u6700\u5927\u8f93\u5165\u503c\u624d\u4f1a\u8fdb\u5165\u4e0b\u4e00\u5c42\u3002 \u5176\u4ed6\u8f93\u5165\u88ab\u4e22\u5f03\u3002 \u200b\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u975e\u5e38\u5177\u6709\u7834\u574f\u6027\u7684\u5c42\uff1a\u5373\u4f7f\u53ea\u6709\u4e00\u4e2a 2\u00d72 \u7684\u6838\u548c 2 \u7684\u6b65\u5e45\uff0c\u8f93\u51fa\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u90fd\u4f1a\u51cf\u5c0f\u4e24\u500d\uff08\u6240\u4ee5\u5b83\u7684\u9762\u79ef\u5c06\u51cf\u5c11\u56db\u500d\uff09\uff0c\u4e00\u4e0b\u51cf\u5c11\u4e86 75% \u7684\u8f93\u5165\u503c \u200b\u6c60\u5316\u5c42\u901a\u5e38\u72ec\u7acb\u4e8e\u6bcf\u4e2a\u8f93\u5165\u901a\u9053\u5de5\u4f5c\uff0c\u56e0\u6b64\u8f93\u51fa\u6df1\u5ea6\u4e0e\u8f93\u5165\u6df1\u5ea6\u76f8\u540c\u3002 \u63a5\u4e0b\u6765\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u56fe\u50cf\u7684\u7a7a\u95f4\u7ef4\u5ea6\uff08\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff09\u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u662f\u901a\u9053\u6570\u76ee\u53ef\u4ee5\u51cf\u5c11\u3002 \u200b\u5728 TensorFlow \u4e2d\u5b9e\u73b0\u4e00\u4e2a\u6700\u5927\u6c60\u5c42\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002 \u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 2\u00d72 \u6838\u521b\u5efa\u6700\u5927\u6c60\u5316\u5c42\uff0c\u6b65\u5e45\u4e3a2\uff0c\u6ca1\u6709\u586b\u5145\uff0c\u7136\u540e\u5c06\u5176\u5e94\u7528\u4e8e\u6570\u636e\u96c6\u4e2d\u7684\u6240\u6709\u56fe\u50cf\uff1a import numpy as np from sklearn.datasets import load_sample_image import tensorflow as tf import matplotlib.pyplot as plt china = load_sample_image(\"china.jpg\") flower = load_sample_image(\"flower.jpg\") dataset = np.array([china, flower], dtype=np.float32) batch_size, height, width, channels = dataset.shape # Create 2 filters filters = np.zeros(shape=(7, 7, channels, 2), dtype=np.float32) filters[:, 3, :, 0] = 1 # vertical line filters[3, :, :, 1] = 1 # horizontal line X = tf.placeholder(tf.float32, shape=(None, height, width, channels)) max_pool = tf.nn.max_pool(X, ksize=[1,2,2,1], strides=[1,2,2,1],padding=\"VALID\") with tf.Session() as sess: output = sess.run(max_pool, feed_dict={X: dataset}) plt.imshow(output[0].astype(np.uint8)) # plot the output for the 1st image plt.show() \u200b ksize \u53c2\u6570\u5305\u542b\u6cbf\u8f93\u5165\u5f20\u91cf\u7684\u6240\u6709\u56db\u7ef4\u7684\u6838\u5f62\u72b6\uff1a [min-batch, height, width, channels] \u3002 TensorFlow \u76ee\u524d\u4e0d\u652f\u6301\u5728\u591a\u4e2a\u5b9e\u4f8b\u4e0a\u5408\u5e76\uff0c\u56e0\u6b64 ksize \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5fc5\u987b\u7b49\u4e8e 1\u3002\u6b64\u5916\uff0c\u5b83\u4e0d\u652f\u6301\u5728\u7a7a\u95f4\u7ef4\u5ea6\uff08\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff09\u548c\u6df1\u5ea6\u7ef4\u5ea6\u4e0a\u5408\u5e76\uff0c\u56e0\u6b64 ksize[1] \u548c ksize[2] \u90fd\u5fc5\u987b\u7b49\u4e8e 1\uff0c\u5426\u5219 ksize[3] \u5fc5\u987b\u7b49\u4e8e 1\u3002 \u200b\u8981\u521b\u5efa\u4e00\u4e2a\u5e73\u5747\u6c60\u5316\u5c42\uff0c\u53ea\u9700\u4f7f\u7528 avg_pool() \u51fd\u6570\u800c\u4e0d\u662f max_pool() \u3002 \u200b\u73b0\u5728\u4f60\u77e5\u9053\u6240\u6709\u7684\u6784\u5efa\u6a21\u5757\u6765\u521b\u5efa\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002 \u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u7ec4\u88c5\u5b83\u4eec\u3002 CNN \u67b6\u6784 \u200b\u5178\u578b\u7684 CNN \u4f53\u7cfb\u7ed3\u6784\u6709\u4e00\u4e9b\u5377\u79ef\u5c42\uff08\u6bcf\u4e00\u4e2a\u901a\u5e38\u8ddf\u7740\u4e00\u4e2a ReLU \u5c42\uff09\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6c60\u5316\u5c42\uff0c\u7136\u540e\u662f\u53e6\u5916\u51e0\u4e2a\u5377\u79ef\u5c42\uff08+ ReLU\uff09\uff0c\u7136\u540e\u662f\u53e6\u4e00\u4e2a\u6c60\u5316\u5c42\uff0c\u7b49\u7b49\u3002 \u968f\u7740\u7f51\u7edc\u7684\u8fdb\u5c55\uff0c\u56fe\u50cf\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4f46\u662f\u7531\u4e8e\u5377\u79ef\u5c42\u7684\u7f18\u6545\uff0c\u56fe\u50cf\u901a\u5e38\u4e5f\u4f1a\u8d8a\u6765\u8d8a\u6df1\uff08\u5373\u66f4\u591a\u7684\u7279\u5f81\u6620\u5c04\uff09\uff08\u89c1\u56fe 13-9\uff09\u3002 \u5728\u5806\u6808\u7684\u9876\u90e8\uff0c\u6dfb\u52a0\u7531\u51e0\u4e2a\u5168\u8fde\u63a5\u5c42\uff08+ ReLU\uff09\u7ec4\u6210\u7684\u5e38\u89c4\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4e14\u6700\u7ec8\u5c42\u8f93\u51fa\u9884\u6d4b\uff08\u4f8b\u5982\uff0c\u8f93\u51fa\u4f30\u8ba1\u7c7b\u522b\u6982\u7387\u7684 softmax \u5c42\uff09\u3002 \u200b \u4e00\u4e2a\u5e38\u89c1\u7684\u9519\u8bef\u662f\u4f7f\u7528\u592a\u5927\u7684\u5377\u79ef\u6838\u3002 \u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e24\u4e2a 3\u00d73 \u5185\u6838\u5806\u53e0\u5728\u4e00\u8d77\u6765\u83b7\u5f97\u4e0e 9\u00d79 \u5185\u6838\u76f8\u540c\u7684\u6548\u679c\uff0c\u8ba1\u7b97\u91cf\u66f4\u5c11\u3002 \u200b\u591a\u5e74\u6765\uff0c\u8fd9\u79cd\u57fa\u7840\u67b6\u6784\u7684\u53d8\u4f53\u5df2\u7ecf\u88ab\u5f00\u53d1\u51fa\u6765\uff0c\u5bfc\u81f4\u4e86\u8be5\u9886\u57df\u7684\u60ca\u4eba\u8fdb\u6b65\u3002 \u8fd9\u79cd\u8fdb\u6b65\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u8861\u91cf\u6807\u51c6\u662f\u6bd4\u8d5b\u4e2d\u7684\u9519\u8bef\u7387\uff0c\u6bd4\u5982 ILSVRC ImageNet \u7684\u6311\u6218\u3002 \u5728\u8fd9\u4e2a\u6bd4\u8d5b\u4e2d\uff0c\u56fe\u50cf\u5206\u7c7b\u7684\u4e94\u5927\u8bef\u5dee\u7387\u5728\u4e94\u5e74\u5185\u4ece 26% \u4e0b\u964d\u5230\u4ec5\u4ec5 3% \u5de6\u53f3\u3002 \u524d\u4e94\u4f4d\u9519\u8bef\u7387\u662f\u7cfb\u7edf\u524d5\u4f4d\u9884\u6d4b\u672a\u5305\u542b\u6b63\u786e\u7b54\u6848\u7684\u6d4b\u8bd5\u56fe\u50cf\u7684\u6570\u91cf\u3002 \u56fe\u50cf\u5f88\u5927\uff08256 \u50cf\u7d20\uff09\uff0c\u6709 1000 \u4e2a\u7c7b\uff0c\u5176\u4e2d\u4e00\u4e9b\u975e\u5e38\u5fae\u5999\uff08\u5c1d\u8bd5\u533a\u5206 120 \u4e2a\u72d7\u7684\u54c1\u79cd\uff09\u3002 \u67e5\u770b\u83b7\u5956\u4f5c\u54c1\u7684\u6f14\u53d8\u662f\u4e86\u89e3 CNN \u5982\u4f55\u5de5\u4f5c\u7684\u597d\u65b9\u6cd5\u3002 \u200b\u6211\u4eec\u5148\u6765\u770b\u770b\u7ecf\u5178\u7684 LeNet-5 \u67b6\u6784\uff081998 \u5e74\uff09\uff0c\u7136\u540e\u662f ILSVRC \u6311\u6218\u8d5b\u7684\u4e09\u540d\u83b7\u80dc\u8005 AlexNet\uff082012\uff09\uff0cGoogLeNet\uff082014\uff09\u548c ResNet\uff082015\uff09\u3002 \u200b\u5176\u4ed6\u89c6\u89c9\u4efb\u52a1\u5728\u5176\u4ed6\u89c6\u89c9\u4efb\u52a1\u4e2d\uff0c\u5982\u7269\u4f53\u68c0\u6d4b\u548c\u5b9a\u4f4d\u4ee5\u53ca\u56fe\u50cf\u5206\u5272\uff0c\u4e5f\u53d6\u5f97\u4e86\u60ca\u4eba\u7684\u8fdb\u5c55\u3002 \u5728\u7269\u4f53\u68c0\u6d4b\u548c\u5b9a\u4f4d\u4e2d\uff0c\u795e\u7ecf\u7f51\u7edc\u901a\u5e38\u8f93\u51fa\u56fe\u50cf\u4e2d\u5404\u79cd\u7269\u4f53\u5468\u56f4\u7684\u4e00\u7cfb\u5217\u8fb9\u754c\u6846\u3002 \u4f8b\u5982\uff0c\u53c2 \u89c1Maxine Oquab \u7b49\u4eba\u7684 2015 \u5e74\u8bba\u6587\uff0c\u8be5\u8bba\u6587\u4e3a\u6bcf\u4e2a\u5ba2\u4f53\u7c7b\u522b\u8f93\u51fa\u70ed\u56fe\uff0c\u6216\u8005 Russell Stewart \u7b49\u4eba\u7684 2015 \u5e74\u8bba\u6587\uff0c\u8be5\u8bba\u6587\u7ed3\u5408\u4f7f\u7528 CNN \u6765\u68c0\u6d4b\u4eba\u8138\uff0c\u5e76\u4f7f\u7528\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\u6765\u8f93\u51fa \u56f4\u7ed5\u5b83\u4eec\u7684\u4e00\u7cfb\u5217\u8fb9\u754c\u6846\u3002 \u5728\u56fe\u50cf\u5206\u5272\u4e2d\uff0c\u7f51\u7edc\u8f93\u51fa\u56fe\u50cf\uff08\u901a\u5e38\u4e0e\u8f93\u5165\u5927\u5c0f\u76f8\u540c\uff09\uff0c\u5176\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u6307\u793a\u76f8\u5e94\u8f93\u5165\u50cf\u7d20\u6240\u5c5e\u7684\u5bf9\u8c61\u7684\u7c7b\u522b\u3002 \u4f8b\u5982\uff0c\u67e5\u770b Evan Shelhamer \u7b49\u4eba\u7684 2016 \u5e74\u8bba\u6587\u3002 LeNet-5 \u200bLeNet-5 \u67b6\u6784\u4e5f\u8bb8\u662f\u6700\u5e7f\u4e3a\u4eba\u77e5\u7684 CNN \u67b6\u6784\u3002 \u5982\u524d\u6240\u8ff0\uff0c\u5b83\u662f\u7531 Yann LeCun \u4e8e 1998 \u5e74\u521b\u5efa\u7684\uff0c\u5e7f\u6cdb\u7528\u4e8e\u624b\u5199\u6570\u5b57\u8bc6\u522b\uff08MNIST\uff09\u3002 \u5b83\u7531\u8868 13-1 \u6240\u793a\u7684\u5c42\u7ec4\u6210\u3002 \u6709\u4e00\u4e9b\u989d\u5916\u7684\u7ec6\u8282\u8981\u6ce8\u610f\uff1a MNIST \u56fe\u50cf\u662f 28\u00d728 \u50cf\u7d20\uff0c\u4f46\u662f\u5b83\u4eec\u88ab\u96f6\u586b\u5145\u5230 32\u00d732 \u50cf\u7d20\uff0c\u5e76\u4e14\u5728\u88ab\u8f93\u5165\u5230\u7f51\u7edc\u4e4b\u524d\u88ab\u5f52\u4e00\u5316\u3002 \u7f51\u7edc\u7684\u5176\u4f59\u90e8\u5206\u4e0d\u4f7f\u7528\u4efb\u4f55\u586b\u5145\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u968f\u7740\u56fe\u50cf\u5728\u7f51\u7edc\u4e2d\u7684\u8fdb\u5c55\uff0c\u5927\u5c0f\u4e0d\u65ad\u7f29\u5c0f\u3002 \u5e73\u5747\u6c60\u5316\u5c42\u6bd4\u5e73\u5e38\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\uff1a\u6bcf\u4e2a\u795e\u7ecf\u5143\u8ba1\u7b97\u8f93\u5165\u7684\u5e73\u5747\u503c\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u4e58\u4ee5\u4e00\u4e2a\u53ef\u5b66\u4e60\u7684\u7cfb\u6570\uff08\u6bcf\u4e2a\u7279\u5f81\u6620\u5c04\u4e00\u4e2a\uff09\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u53ef\u5b66\u4e60\u7684\u504f\u5dee\u9879\uff08\u6bcf\u4e2a\u7279\u5f81\u6620\u5c04\u4e00\u4e2a\uff09\uff0c\u7136\u540e\u6700\u540e\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u3002 C3 \u56fe\u4e2d\u7684\u5927\u591a\u6570\u795e\u7ecf\u5143\u4ec5\u5728\u4e09\u4e2a\u6216\u56db\u4e2a S2 \u56fe\uff08\u800c\u4e0d\u662f\u5168\u90e8\u516d\u4e2a S2 \u56fe\uff09\u4e2d\u8fde\u63a5\u5230\u795e\u7ecf\u5143\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u539f\u59cb\u8bba\u6587\u4e2d\u7684\u8868 1\u3002 \u8f93\u51fa\u5c42\u6709\u70b9\u7279\u6b8a\uff1a\u6bcf\u4e2a\u795e\u7ecf\u5143\u4e0d\u662f\u8ba1\u7b97\u8f93\u5165\u548c\u6743\u5411\u91cf\u7684\u70b9\u79ef\uff0c\u800c\u662f\u8f93\u51fa\u5176\u8f93\u5165\u5411\u91cf\u548c\u5176\u6743\u5411\u91cf\u4e4b\u95f4\u7684\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\u7684\u5e73\u65b9\u3002 \u6bcf\u4e2a\u8f93\u51fa\u6d4b\u91cf\u56fe\u50cf\u5c5e\u4e8e\u7279\u5b9a\u6570\u5b57\u7c7b\u522b\u7684\u591a\u5c11\u3002 \u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u73b0\u5728\u662f\u9996\u9009\uff0c\u56e0\u4e3a\u5b83\u66f4\u591a\u5730\u60e9\u7f5a\u4e0d\u597d\u7684\u9884\u6d4b\uff0c\u4ea7\u751f\u66f4\u5927\u7684\u68af\u5ea6\uff0c\u4ece\u800c\u66f4\u5feb\u5730\u6536\u655b\u3002 Yann LeCun \u7684\u7f51\u7ad9\uff08\u201cLENET\u201d\u90e8\u5206\uff09\u5c55\u793a\u4e86 LeNet-5 \u5206\u7c7b\u6570\u5b57\u7684\u5f88\u597d\u7684\u6f14\u793a\u3002 AlexNet \u200bAlexNet CNN \u67b6\u6784\u8d62\u5f97\u4e86 2012 \u5e74\u7684 ImageNet ILSVRC \u6311\u6218\u8d5b\uff1a\u5b83\u8fbe\u5230\u4e86 17% \u7684 top-5 \u7684\u9519\u8bef\u7387\uff0c\u800c\u7b2c\u4e8c\u540d\u9519\u8bef\u7387\u53ea\u6709 26%\uff01 \u5b83\u7531 Alex Krizhevsky\uff08\u56e0\u6b64\u800c\u5f97\u540d\uff09\uff0cIlya Sutskever \u548c Geoffrey Hinton \u5f00\u53d1\u3002 \u5b83\u4e0e LeNet-5 \u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u66f4\u5927\u66f4\u6df1\uff0c\u5b83\u662f\u7b2c\u4e00\u4e2a\u5c06\u5377\u79ef\u5c42\u76f4\u63a5\u5806\u53e0\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u4e2a\u5377\u79ef\u5c42\u9876\u90e8\u5806\u53e0\u4e00\u4e2a\u6c60\u5316\u5c42\u3002 \u8868 13-2 \u4ecb\u7ecd\u4e86\u8fd9\u79cd\u67b6\u6784\u3002 \u200b\u4e3a\u4e86\u51cf\u5c11\u8fc7\u62df\u5408\uff0c\u4f5c\u8005\u4f7f\u7528\u4e86\u524d\u9762\u7ae0\u8282\u4e2d\u8ba8\u8bba\u7684\u4e24\u79cd\u6b63\u5219\u5316\u6280\u672f\uff1a\u9996\u5148\u4ed6\u4eec\u5728\u8bad\u7ec3\u671f\u95f4\u5c06\u4e22\u5931\u7387\uff08dropout \u7387\u4e3a 50%\uff09\u5e94\u7528\u4e8e\u5c42 F8 \u548c F9 \u7684\u8f93\u51fa\u3002\u5176\u6b21\uff0c\u4ed6\u4eec\u901a\u8fc7\u968f\u673a\u5bf9\u8bad\u7ec3\u56fe\u50cf\u8fdb\u884c\u5404\u79cd\u504f\u79fb\uff0c\u6c34\u5e73\u7ffb\u8f6c\u548c\u6539\u53d8\u7167\u660e\u6761\u4ef6\u6765\u8fdb\u884c\u6570\u636e\u589e\u5f3a\u3002 \u200bAlexNet \u8fd8\u5728\u5c42 C1 \u548c C3 \u7684 ReLU \u6b65\u9aa4\u4e4b\u540e\u7acb\u5373\u4f7f\u7528\u7ade\u4e89\u6807\u51c6\u5316\u6b65\u9aa4\uff0c\u79f0\u4e3a\u5c40\u90e8\u54cd\u5e94\u6807\u51c6\u5316\uff08local response normalization\uff09\u3002 \u8fd9\u79cd\u6807\u51c6\u5316\u5f62\u5f0f\u4f7f\u5f97\u5728\u76f8\u540c\u7684\u4f4d\u7f6e\u7684\u795e\u7ecf\u5143\u88ab\u6700\u5f3a\u70c8\u7684\u6fc0\u6d3b\u4f46\u662f\u5728\u76f8\u90bb\u7684\u7279\u5f81\u6620\u5c04\u4e2d\u6291\u5236\u795e\u7ecf\u5143\uff08\u5728\u751f\u7269\u795e\u7ecf\u5143\u4e2d\u89c2\u5bdf\u5230\u4e86\u8fd9\u79cd\u7ade\u4e89\u6fc0\u6d3b\uff09\u3002 \u8fd9\u9f13\u52b1\u4e0d\u540c\u7684\u7279\u5f81\u6620\u5c04\u7279\u6b8a\u5316\uff0c\u8feb\u4f7f\u5b83\u4eec\u5206\u5f00\uff0c\u5e76\u8ba9\u4ed6\u4eec\u63a2\u7d22\u66f4\u5e7f\u6cdb\u7684\u7279\u5f81\uff0c\u6700\u7ec8\u63d0\u5347\u6cdb\u5316\u80fd\u529b\u3002 \u516c\u5f0f 13-2 \u663e\u793a\u4e86\u5982\u4f55\u5e94\u7528 LRN\u3002 \u662f\u4f4d\u4e8e\u7279\u5f81\u6620\u5c04 i \u7684\u795e\u7ecf\u5143\u7684\u6807\u51c6\u5316\u8f93\u51fa\uff0c\u5728\u67d0\u884c u \u548c\u5217 v \uff08\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u7b49\u5f0f\u4e2d\u6211\u4eec\u53ea\u8003\u8651\u4f4d\u4e8e\u8fd9\u4e2a\u884c\u548c\u5217\u7684\u795e\u7ecf\u5143\uff0c\u6240\u4ee5 u \u548c v \u6ca1\u6709\u663e\u793a\uff09\u3002 \u662f\u5728 ReLU \u6b65\u9aa4\u4e4b\u540e\uff0c\u4f46\u5728\u5f52\u4e00\u5316\u4e4b\u524d\u7684\u90a3\u4e2a\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u3002 k \uff0c \u03b1 \uff0c \u03b2 \u548c r \u662f\u8d85\u53c2\u6570\u3002 k \u79f0\u4e3a\u504f\u7f6e\uff0c r \u79f0\u4e3a\u6df1\u5ea6\u534a\u5f84\u3002 \u662f\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\u3002 \u200b\u4f8b\u5982\uff0c\u5982\u679c r = 2 \u4e14\u795e\u7ecf\u5143\u5177\u6709\u5f3a\u6fc0\u6d3b\uff0c\u5219\u5c06\u6291\u5236\u4f4d\u4e8e\u5176\u4e0a\u4e0b\u7684\u7279\u5f81\u6620\u5c04\u4e2d\u7684\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u3002 \u200b\u5728 AlexNet \u4e2d\uff0c\u8d85\u53c2\u6570\u8bbe\u7f6e\u5982\u4e0b\uff1a r = 2 \uff0c \u03b1= 0.00002 \uff0c \u03b2= 0.75 \uff0c k = 1 \u3002\u8fd9\u4e2a\u6b65\u9aa4\u53ef\u4ee5\u4f7f\u7528 TensorFlow \u7684 local_response_normalization() \u64cd\u4f5c\u6765\u5b9e\u73b0\u3002 \u200bAlexNet \u7684\u4e00\u4e2a\u540d\u4e3a ZF Net \u7684\u53d8\u4f53\u7531 Matthew Zeiler \u548c Rob Fergus \u5f00\u53d1\uff0c\u8d62\u5f97\u4e86 2013 \u5e74 ILSVRC \u7684\u6311\u6218\u3002 \u5b83\u57fa\u672c\u4e0a\u662f AlexNet \u7684\u4e00\u4e9b\u8c03\u6574\u7684\u8d85\u53c2\u6570\uff08\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\uff0c\u5185\u6838\u5927\u5c0f\uff0c\u6b65\u5e45\u7b49\uff09\u3002 GoogLeNet \u200bGoogLeNet \u67b6\u6784\u662f\u7531 Christian Szegedy \u7b49\u4eba\u5f00\u53d1\u7684\u3002 \u6765\u81ea Google Research\uff0c\u901a\u8fc7\u4f4e\u4e8e 7% \u7684 top-5 \u9519\u8bef\u7387\uff0c\u8d62\u5f97\u4e86 ILSVRC 2014 \u7684\u6311\u6218\u8d5b\u3002 \u8fd9\u4e2a\u4f1f\u5927\u7684\u8868\u73b0\u5f88\u5927\u7a0b\u5ea6\u4e0a\u56e0\u4e3a\u5b83\u6bd4\u4ee5\u524d\u7684 CNN \u7f51\u7edc\u66f4\u6df1\uff08\u89c1\u56fe 13-11\uff09\u3002 \u8fd9\u662f\u901a\u8fc7\u79f0\u4e3a\u521d\u59cb\u6a21\u5757\uff08inception modules\uff09\u7684\u5b50\u7f51\u7edc\u5b9e\u73b0\u7684\uff0c\u8fd9\u4f7f\u5f97 GoogLeNet \u6bd4\u4ee5\u524d\u7684\u67b6\u6784\u66f4\u6709\u6548\u5730\u4f7f\u7528\u53c2\u6570\uff1a\u5b9e\u9645\u4e0a\uff0cGoogLeNet \u7684\u53c2\u6570\u6bd4 AlexNet \u5c11\u4e86 10 \u500d\uff08\u7ea6 600 \u4e07\u800c\u4e0d\u662f 6000 \u4e07\uff09\u3002 \u200b\u521d\u59cb\u6a21\u5757\u7684\u67b6\u6784\u5982\u56fe 13-10 \u6240\u793a\u3002 \u7b26\u53f7 3\u00d73 + 2(S) \u8868\u793a\u8be5\u5c42\u4f7f\u7528 3\u00d73 \u5185\u6838\uff0c\u6b65\u5e45 2 \u548c SAME \u586b\u5145\u3002 \u8f93\u5165\u4fe1\u53f7\u9996\u5148\u88ab\u590d\u5236\u5e76\u9988\u9001\u5230\u56db\u4e2a\u4e0d\u540c\u7684\u5c42\u3002 \u6240\u6709\u5377\u79ef\u5c42\u90fd\u4f7f\u7528 ReLU \u6fc0\u6d3b\u529f\u80fd\u3002 \u8bf7\u6ce8\u610f\uff0c\u7b2c\u4e8c\u7ec4\u5377\u79ef\u5c42\u4f7f\u7528\u4e0d\u540c\u7684\u5185\u6838\u5927\u5c0f\uff08 1\u00d71 \uff0c 3\u00d73 \u548c 5\u00d75 \uff09\uff0c\u5141\u8bb8\u5b83\u4eec\u4ee5\u4e0d\u540c\u7684\u6bd4\u4f8b\u6355\u83b7\u56fe\u6848\u3002 \u8fd8\u8981\u6ce8\u610f\uff0c\u6bcf\u4e00\u5c42\u90fd\u4f7f\u7528\u4e86\u8de8\u5ea6\u4e3a1\u548cSAME\u586b\u5145\u7684\uff08\u5373\u4f7f\u662f\u6700\u5927\u7684\u6c60\u5316\u5c42\uff09\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u8f93\u51fa\u5168\u90fd\u5177\u6709\u4e0e\u5176\u8f93\u5165\u76f8\u540c\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u3002\u8fd9\u4f7f\u5f97\u5c06\u6240\u6709\u8f93\u51fa\u5728\u6700\u540e\u7684\u6df1\u5ea6\u8fde\u63a5\u5c42\uff08depth concat layer\uff09\u4e0a\u6cbf\u7740\u6df1\u5ea6\u65b9\u5411\u5806\u53e0\u6210\u4e3a\u53ef\u80fd\uff08\u5373\uff0c\u5806\u53e0\u6765\u81ea\u6240\u6709\u56db\u4e2a\u9876\u90e8\u5377\u79ef\u5c42\u7684\u7279\u5f81\u6620\u5c04\uff09\u3002 \u8fd9\u4e2a\u8fde\u63a5\u5c42\u53ef\u4ee5\u5728 TensorFlow \u4e2d\u4f7f\u7528 concat() \u64cd\u4f5c\u5b9e\u73b0\uff0c\u5176\u4e2d axis = 3 \uff08\u8f74 3 \u662f\u6df1\u5ea6\uff09\u3002 \u200b\u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u521d\u59cb\u6a21\u5757\u5177\u6709 1\u00d71 \u5185\u6838\u7684\u5377\u79ef\u5c42\u3002 \u5f53\u7136\u8fd9\u4e9b\u56fe\u5c42\u4e0d\u80fd\u6355\u83b7\u4efb\u4f55\u529f\u80fd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e00\u6b21\u53ea\u80fd\u770b\u4e00\u4e2a\u50cf\u7d20\uff1f \u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u5c42\u6b21\u6709\u4e24\u4e2a\u76ee\u7684\uff1a \u200b\u9996\u5148\uff0c\u5b83\u4eec\u88ab\u914d\u7f6e\u4e3a\u8f93\u51fa\u6bd4\u8f93\u5165\u5c11\u5f97\u591a\u7684\u7279\u5f81\u6620\u5c04\uff0c\u6240\u4ee5\u5b83\u4eec\u4f5c\u4e3a\u74f6\u9888\u5c42\uff0c\u610f\u5473\u7740\u5b83\u4eec\u964d\u4f4e\u4e86\u7ef4\u5ea6\u3002 \u5728 3\u00d73 \u548c 5\u00d75 \u5377\u79ef\u4e4b\u524d\uff0c\u8fd9\u662f\u7279\u522b\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5728\u8ba1\u7b97\u4e0a\u662f\u975e\u5e38\u8017\u8d39\u5185\u5b58\u7684\u5c42\u3002 \u200b\u5176\u6b21\uff0c\u6bcf\u4e00\u4e2a\u5377\u79ef\u5c42\u5bf9\uff08 [1 \u00d7 1, 3 \u00d7 3] \u548c [1 \u00d7 1, 5 \u00d7 5] \u8868\u73b0\u5730\u50cf\u4e00\u4e2a\u5f3a\u5927\u7684\u5377\u79ef\u5c42\uff0c\u53ef\u4ee5\u6355\u6349\u5230\u66f4\u591a\u7684\u590d\u6742\u7684\u6a21\u5f0f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e00\u5bf9\u5377\u79ef\u5c42\u4e0d\u662f\u5728\u56fe\u50cf\u4e0a\u626b\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u5206\u7c7b\u5668\uff08\u5c31\u50cf\u5355\u4e2a\u5377\u79ef\u5c42\u4e00\u6837\uff09\uff0c\u800c\u662f\u5728\u56fe\u50cf\u4e0a\u626b\u63cf\u4e00\u4e2a\u53cc\u5c42\u795e\u7ecf\u7f51\u7edc\u3002 \u200b\u7b80\u800c\u8a00\u4e4b\uff0c\u60a8\u53ef\u4ee5\u5c06\u6574\u4e2a\u521d\u59cb\u6a21\u5757\u89c6\u4e3a\u7c7b\u56fa\u9187\u5377\u79ef\u5c42\uff0c\u80fd\u591f\u8f93\u51fa\u6355\u6349\u5404\u79cd\u5c3a\u5ea6\u590d\u6742\u6a21\u5f0f\u7684\u7279\u5f81\u6620\u5c04\u3002 \u200b \u6bcf\u4e2a\u5377\u79ef\u5c42\u7684\u5377\u79ef\u6838\u7684\u6570\u91cf\u662f\u4e00\u4e2a\u8d85\u53c2\u6570\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u6709\u516d\u4e2a\u8d85\u53c2\u6570\u6765\u8c03\u6574\u4f60\u6dfb\u52a0\u7684\u6bcf\u4e2a\u521d\u59cb\u5c42\u3002 \u200b\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b GoogLeNet CNN \u7684\u67b6\u6784\uff08\u89c1\u56fe 13-11\uff09\u3002 \u5b83\u975e\u5e38\u6df1\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u5c06\u5b83\u5206\u6210\u4e09\u5217\uff0c\u4f46\u662f GoogLeNet \u5b9e\u9645\u4e0a\u662f\u4e00\u5217\uff0c\u5305\u62ec\u4e5d\u4e2a\u521d\u59cb\u6a21\u5757\uff08\u5e26\u6709\u65cb\u8f6c\u9876\u7aef\u7684\u6846\uff09\uff0c\u6bcf\u4e2a\u6a21\u5757\u5b9e\u9645\u4e0a\u5305\u542b\u4e09\u5c42\u3002\u6bcf\u4e2a\u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\u8f93\u51fa\u7684\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\u663e\u793a\u5728\u5185\u6838\u5927\u5c0f\u524d\u3002 \u521d\u59cb\u6a21\u5757\u4e2d\u7684\u516d\u4e2a\u6570\u5b57\u8868\u793a\u6a21\u5757\u4e2d\u6bcf\u4e2a\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\uff08\u4e0e\u56fe 13-10 \u4e2d\u7684\u987a\u5e8f\u76f8\u540c\uff09\u3002 \u8bf7\u6ce8\u610f\uff0c\u6240\u6709\u7684\u5377\u79ef\u5c42\u90fd\u4f7f\u7528 ReLU \u6fc0\u6d3b\u51fd\u6570\u3002 \u8ba9\u6211\u4eec\u6765\u8fc7\u4e00\u904d\u8fd9\u4e2a\u7f51\u7edc\uff1a \u524d\u4e24\u5c42\u5c06\u56fe\u50cf\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u9664\u4ee5 4\uff08\u4f7f\u5176\u9762\u79ef\u9664\u4ee5 16\uff09\uff0c\u4ee5\u51cf\u5c11\u8ba1\u7b97\u8d1f\u62c5\u3002 \u7136\u540e\uff0c\u5c40\u90e8\u54cd\u5e94\u6807\u51c6\u5316\u5c42\u786e\u4fdd\u524d\u9762\u7684\u5c42\u5b66\u4e60\u5404\u79cd\u5404\u6837\u7684\u529f\u80fd\uff08\u5982\u524d\u6240\u8ff0\uff09 \u63a5\u4e0b\u6765\u662f\u4e24\u4e2a\u5377\u79ef\u5c42\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u50cf\u74f6\u9888\u5c42\u4e00\u6837\u3002 \u6b63\u5982\u524d\u9762\u6240\u89e3\u91ca\u7684\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e00\u5bf9\u770b\u4f5c\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u66f4\u667a\u80fd\u7684\u5377\u79ef\u5c42\u3002 \u518d\u6b21\uff0c\u5c40\u90e8\u54cd\u5e94\u6807\u51c6\u5316\u5c42\u786e\u4fdd\u4e86\u5148\u524d\u7684\u5c42\u6355\u6349\u5404\u79cd\u5404\u6837\u7684\u6a21\u5f0f\u3002 \u63a5\u4e0b\u6765\uff0c\u6700\u5927\u6c60\u5316\u5c42\u5c06\u56fe\u50cf\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u51cf\u5c11 2\uff0c\u518d\u6b21\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u3002 \u7136\u540e\u662f\u4e5d\u4e2a\u521d\u59cb\u6a21\u5757\u7684\u5806\u53e0\uff0c\u4e0e\u51e0\u4e2a\u6700\u5927\u6c60\u5c42\u4ea4\u7ec7\uff0c\u4ee5\u964d\u4f4e\u7ef4\u5ea6\u5e76\u52a0\u901f\u7f51\u7edc\u3002 \u63a5\u4e0b\u6765\uff0c\u5e73\u5747\u6c60\u5316\u5c42\u4f7f\u7528\u5177\u6709 VALID \u586b\u5145\u7684\u7279\u5f81\u6620\u5c04\u7684\u5927\u5c0f\u7684\u5185\u6838\uff0c\u8f93\u51fa 1\u00d71 \u7279\u5f81\u6620\u5c04\uff1a\u8fd9\u79cd\u4ee4\u4eba\u60ca\u8bb6\u7684\u7b56\u7565\u88ab\u79f0\u4e3a\u5168\u5c40\u5e73\u5747\u6c60\u5316\u3002 \u5b83\u6709\u6548\u5730\u5f3a\u5236\u4ee5\u524d\u7684\u56fe\u5c42\u4ea7\u751f\u7279\u5f81\u6620\u5c04\uff0c\u8fd9\u4e9b\u7279\u5f81\u6620\u5c04\u5b9e\u9645\u4e0a\u662f\u6bcf\u4e2a\u76ee\u6807\u7c7b\u7684\u7f6e\u4fe1\u56fe\uff08\u56e0\u4e3a\u5176\u4ed6\u7c7b\u578b\u7684\u529f\u80fd\u5c06\u88ab\u5e73\u5747\u6b65\u9aa4\u7834\u574f\uff09\u3002 \u8fd9\u6837\u5728 CNN \u7684\u9876\u90e8\u5c31\u4e0d\u5fc5\u6709\u6709\u51e0\u4e2a\u5168\u8fde\u63a5\u5c42\uff08\u5982 AlexNet\uff09\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u7f51\u7edc\u4e2d\u7684\u53c2\u6570\u6570\u91cf\uff0c\u5e76\u51cf\u5c11\u4e86\u4e86\u8fc7\u5ea6\u62df\u5408\u7684\u98ce\u9669\u3002 \u6700\u540e\u4e00\u5c42\u662f\u4e0d\u8a00\u81ea\u660e\u7684\uff1a\u6b63\u5219\u5316 drop out\uff0c\u7136\u540e\u662f\u5177\u6709 softmax \u6fc0\u6d3b\u51fd\u6570\u7684\u5b8c\u5168\u8fde\u63a5\u5c42\u6765\u8f93\u51fa\u4f30\u8ba1\u7c7b\u7684\u6982\u7387\u3002 \u200b\u8fd9\u4e2a\u56fe\u7565\u6709\u7b80\u5316\uff1a\u539f\u6765\u7684 GoogLeNet \u67b6\u6784\u8fd8\u5305\u62ec\u4e24\u4e2a\u63d2\u5728\u7b2c\u4e09\u548c\u7b2c\u516d\u4e2a\u521d\u59cb\u6a21\u5757\u4e4b\u4e0a\u7684\u8f85\u52a9\u5206\u7c7b\u5668\u3002 \u5b83\u4eec\u90fd\u7531\u4e00\u4e2a\u5e73\u5747\u6c60\u5c42\uff0c\u4e00\u4e2a\u5377\u79ef\u5c42\uff0c\u4e24\u4e2a\u5168\u8fde\u63a5\u5c42\u548c\u4e00\u4e2a softmax \u6fc0\u6d3b\u5c42\u7ec4\u6210\u3002 \u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u4ed6\u4eec\u7684\u635f\u5931\uff08\u7f29\u5c0f\u4e86 70%\uff09\u52a0\u5728\u4e86\u6574\u4f53\u635f\u5931\u4e0a\u3002 \u76ee\u6807\u662f\u89e3\u51b3\u6d88\u5931\u68af\u5ea6\u95ee\u9898\uff0c\u6b63\u5219\u5316\u7f51\u7edc\u3002 \u4f46\u662f\uff0c\u7ed3\u679c\u663e\u793a\u5176\u6548\u679c\u76f8\u5bf9\u5c0f\u3002 ResNet \u200b\u6700\u540e\u662f\uff0c2015 \u5e74 ILSVRC \u6311\u6218\u8d5b\u7684\u8d62\u5bb6 Kaiming He \u7b49\u4eba\u5f00\u53d1\u7684 Residual Network\uff08\u6216 ResNet\uff09\uff0c\u8be5\u7f51\u7edc\u7684 top-5 \u8bef\u7387\u4f4e\u5230\u60ca\u4eba\u7684 3.6%\uff0c\u5b83\u4f7f\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u6df1\u7684 CNN\uff0c\u7531 152 \u5c42\u7ec4\u6210\u3002 \u80fd\u591f\u8bad\u7ec3\u5982\u6b64\u6df1\u7684\u7f51\u7edc\u7684\u5173\u952e\u662f\u4f7f\u7528\u8df3\u8fc7\u8fde\u63a5\uff08skip connection\uff0c\u4e5f\u79f0\u4e3a\u5feb\u6377\u8fde\u63a5\uff09\uff1a\u4e00\u4e2a\u5c42\u7684\u8f93\u5165\u4fe1\u53f7\u4e5f\u88ab\u6dfb\u52a0\u5230\u4f4d\u4e8e\u4e0b\u4e00\u5c42\u7684\u8f93\u51fa\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u4e3a\u4ec0\u4e48\u8fd9\u662f\u6709\u7528\u7684\u3002 \u200b\u5f53\u8bad\u7ec3\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u76ee\u6807\u662f\u4f7f\u5176\u6a21\u62df\u4e00\u4e2a\u76ee\u6807\u51fd\u6570 h(x) \u3002 \u5982\u679c\u5c06\u8f93\u5165x\u6dfb\u52a0\u5230\u7f51\u7edc\u7684\u8f93\u51fa\u4e2d\uff08\u5373\u6dfb\u52a0\u8df3\u8fc7\u8fde\u63a5\uff09\uff0c\u90a3\u4e48\u7f51\u7edc\u5c06\u88ab\u8feb\u6a21\u62df f(x)= h(x) - x \u800c\u4e0d\u662f h(x) \u3002 \u8fd9\u88ab\u79f0\u4e3a\u6b8b\u7559\u5b66\u4e60\uff08\u89c1\u56fe 13-12\uff09\u3002 \u200b\u5f53\u4f60\u521d\u59cb\u5316\u4e00\u4e2a\u666e\u901a\u7684\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u5b83\u7684\u6743\u91cd\u63a5\u8fd1\u4e8e\u96f6\uff0c\u6240\u4ee5\u7f51\u7edc\u53ea\u8f93\u51fa\u63a5\u8fd1\u96f6\u7684\u503c\u3002 \u5982\u679c\u6dfb\u52a0\u8df3\u8fc7\u8fde\u63a5\uff0c\u5219\u751f\u6210\u7684\u7f51\u7edc\u53ea\u8f93\u51fa\u5176\u8f93\u5165\u7684\u526f\u672c; \u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u6700\u521d\u5bf9\u8eab\u4efd\u51fd\u6570\u8fdb\u884c\u5efa\u6a21\u3002 \u5982\u679c\u76ee\u6807\u51fd\u6570\u4e0e\u8eab\u4efd\u51fd\u6570\u975e\u5e38\u63a5\u8fd1\uff08\u5e38\u5e38\u662f\u8fd9\u79cd\u60c5\u51b5\uff09\uff0c\u8fd9\u5c06\u5927\u5927\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\u3002 \u200b\u800c\u4e14\uff0c\u5982\u679c\u6dfb\u52a0\u4e86\u8bb8\u591a\u8df3\u8f6c\u8fde\u63a5\uff0c\u5373\u4f7f\u51e0\u4e2a\u5c42\u8fd8\u6ca1\u6709\u5f00\u59cb\u5b66\u4e60\uff0c\u7f51\u7edc\u4e5f\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\uff08\u89c1\u56fe 13-13\uff09\u3002 \u7531\u4e8e\u8df3\u8fc7\u8fde\u63a5\uff0c\u4fe1\u53f7\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u901a\u8fc7\u6574\u4e2a\u7f51\u7edc\u3002 \u6df1\u5ea6\u5269\u4f59\u7f51\u7edc\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u5806\u5269\u4f59\u5355\u4f4d\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5269\u4f59\u5355\u4f4d\u662f\u4e00\u4e2a\u6709\u8df3\u8fc7\u8fde\u63a5\u7684\u5c0f\u578b\u795e\u7ecf\u7f51\u7edc\u3002 \u200b\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b ResNet \u7684\u67b6\u6784\uff08\u89c1\u56fe 13-14\uff09\u3002 \u8fd9\u5b9e\u9645\u4e0a\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u7b80\u5355\u3002 \u5b83\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u4e0eGoogLeNet\u5b8c\u5168\u4e00\u6837\uff08\u9664\u4e86\u6ca1\u6709 dropout \u5c42\uff09\uff0c\u800c\u5728\u4e24\u8005\u4e4b\u95f4\u53ea\u662f\u4e00\u5806\u5f88\u7b80\u5355\u7684\u6b8b\u4f59\u5355\u4f4d\u3002 \u6bcf\u4e2a\u6b8b\u5dee\u5355\u5143\u7531\u4e24\u4e2a\u5377\u79ef\u5c42\u7ec4\u6210\uff0c\u4f7f\u7528 3\u00d73 \u7684\u5185\u6838\u548c\u4fdd\u5b58\u7a7a\u95f4\u7ef4\u5ea6\uff08\u6b65\u5e45 1\uff0c SAME \u586b\u5145\uff09\uff0c\u6279\u91cf\u5f52\u4e00\u5316\uff08BN\uff09\u548c ReLU \u6fc0\u6d3b\u3002 \u200b\u9700\u8981\u6ce8\u610f\u7684\u662f\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\u6bcf\u9694\u51e0\u4e2a\u6b8b\u5dee\u5355\u4f4d\u4f1a\u52a0\u500d\uff0c\u540c\u65f6\u5b83\u4eec\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u51cf\u534a\uff08\u4f7f\u7528\u6b65\u5e45 2 \u5377\u79ef\u5c42\uff09\u3002 \u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u8f93\u5165\u4e0d\u80fd\u76f4\u63a5\u6dfb\u52a0\u5230\u5269\u4f59\u5355\u5143\u7684\u8f93\u51fa\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u5177\u6709\u76f8\u540c\u7684\u5f62\u72b6\uff08\u4f8b\u5982\uff0c\u6b64\u95ee\u9898\u5f71\u54cd\u56fe 13-14 \u4e2d\u7684\u865a\u7ebf\u7bad\u5934\u8868\u793a\u7684\u8df3\u8fc7\u8fde\u63a5\uff09\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8f93\u5165\u901a\u8fc7\u4e00\u4e2a 1\u00d71 \u5377\u79ef\u5c42\uff0c\u6b65\u957f2\u548c\u6b63\u786e\u6570\u91cf\u7684\u8f93\u51fa\u7279\u5f81\u6620\u5c04\uff08\u89c1\u56fe 13-15\uff09\u3002 \u200bResNet-34 \u662f\u5177\u6709 34 \u4e2a\u5c42\uff08\u4ec5\u8ba1\u7b97\u5377\u79ef\u5c42\u548c\u5b8c\u5168\u8fde\u63a5\u5c42\uff09\u7684 ResNet\uff0c\u5305\u542b 3 \u4e2a\u5269\u4f59\u5355\u5143\u8f93\u51fa 64 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c4 \u4e2a\u5269\u4f59\u5355\u5143\u8f93\u51fa 128 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c6 \u4e2a\u5269\u4f59\u5355\u5143\u8f93\u51fa 256 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c3 \u4e2a\u5269\u4f59\u5355\u5143\u8f93\u51fa 512 \u4e2a\u7279\u5f81\u6620\u5c04\u3002 \u200bResNet-152 \u66f4\u6df1\uff0c\u4f7f\u7528\u7a0d\u5fae\u4e0d\u540c\u7684\u5269\u4f59\u5355\u4f4d\u3002 \u4ed6\u4eec\u4f7f\u7528\u4e09\u4e2a\u5377\u79ef\u5c42\uff0c\u800c\u4e0d\u662f\u4e24\u4e2a 256 \u4e2a\u7279\u5f81\u6620\u5c04\u7684 3\u00d73 \u7684\u5377\u79ef\u5c42\uff0c\u5b83\u4eec\u4f7f\u7528\u4e09\u4e2a\u5377\u79ef\u5c42\uff1a\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u53ea\u6709 64 \u4e2a\u7279\u5f81\u6620\u5c04\uff08\u5c11 4 \u500d\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u74f6\u9888\u5c42\uff08\u5df2\u7ecf\u8ba8\u8bba\u8fc7\uff09 \uff0c\u7136\u540e\u662f\u5177\u6709 64 \u4e2a\u7279\u5f81\u6620\u5c04\u7684 3\u00d73 \u5c42\uff0c\u6700\u540e\u662f\u5177\u6709 256 \u4e2a\u7279\u5f81\u6620\u5c04\uff08 4\u00d764 \uff09\u7684\u53e6\u4e00\u4e2a 1\u00d71 \u5377\u79ef\u5c42\uff0c\u4ee5\u6062\u590d\u539f\u59cb\u6df1\u5ea6\u3002ResNet-152 \u5305\u542b\u4e09\u4e2a\u8fd9\u6837\u7684\u5269\u4f59\u5355\u4f4d\uff0c\u8f93\u51fa 256 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c\u7136\u540e\u662f 8 \u4e2a\u5269\u4f59\u5355\u4f4d\uff0c\u8f93\u51fa 512 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c\u9ad8\u8fbe 36 \u4e2a\u5269\u4f59\u5355\u4f4d\uff0c\u8f93\u51fa 1024 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c\u6700\u540e\u662f 3 \u4e2a\u5269\u4f59\u5355\u4f4d\uff0c\u8f93\u51fa 2048 \u4e2a\u7279\u5f81\u6620\u5c04\u3002 \u200b\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u8fd9\u4e2a\u9886\u57df\u6b63\u5728\u8fc5\u901f\u53d1\u5c55\uff0c\u6bcf\u5e74\u90fd\u4f1a\u6709\u5404\u79cd\u5404\u6837\u7684\u67b6\u6784\u51fa\u73b0\u3002 \u4e00\u4e2a\u660e\u663e\u7684\u8d8b\u52bf\u662f CNN \u8d8a\u6765\u8d8a\u6df1\u5165\u3002 \u4ed6\u4eec\u4e5f\u8d8a\u6765\u8d8a\u8f7b\u91cf\uff0c\u9700\u8981\u8d8a\u6765\u8d8a\u5c11\u7684\u53c2\u6570\u3002 \u76ee\u524d\uff0cResNet \u67b6\u6784\u65e2\u662f\u6700\u5f3a\u5927\u7684\uff0c\u4e5f\u662f\u6700\u7b80\u5355\u7684\uff0c\u6240\u4ee5\u5b83\u73b0\u5728\u5e94\u8be5\u662f\u4f60\u5e94\u8be5\u4f7f\u7528\u7684\uff0c\u4f46\u662f\u6bcf\u5e74\u90fd\u8981\u7ee7\u7eed\u5173\u6ce8 ILSVRC \u7684\u6311\u6218\u3002 2016 \u5e74\u83b7\u5956\u8005\u662f\u6765\u81ea\u4e2d\u56fd\u7684 Trimps-Soushen \u56e2\u961f\uff0c\u4ed6\u4eec\u7684\u51fa\u9519\u7387\u60ca\u4eba\u7684\u7f29\u51cf\u5230 2.99%\u3002 \u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\uff0c\u4ed6\u4eec\u8bad\u7ec3\u4e86\u4ee5\u524d\u6a21\u578b\u7684\u7ec4\u5408\uff0c\u5e76\u5c06\u5b83\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002 \u6839\u636e\u4efb\u52a1\u7684\u4e0d\u540c\uff0c\u964d\u4f4e\u7684\u9519\u8bef\u7387\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u503c\u5f97\u989d\u5916\u7684\u590d\u6742\u6027\u3002 \u200b\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9b\u67b6\u6784\u53ef\u4f9b\u60a8\u53c2\u8003\uff0c\u7279\u522b\u662f VGGNet\uff082014 \u5e74 ILSVRC \u6311\u6218\u8d5b\u7684\u4e9a\u519b\uff09\u548c Inception-v4\uff08\u5c06 GooLeNet \u548c ResNet \u7684\u601d\u60f3\u878d\u5408\u5728\u4e00\u8d77\uff0c\u5b9e\u73b0\u4e86\u63a5\u8fd1 3% \u7684 top-5 \u8bef\u5dee ImageNet \u5206\u7c7b\u7387\uff09\u3002 \u200b\u5b9e\u65bd\u6211\u4eec\u521a\u521a\u8ba8\u8bba\u7684\u5404\u79cdCNN\u67b6\u6784\u771f\u7684\u6ca1\u4ec0\u4e48\u7279\u522b\u7684\u3002 \u6211\u4eec\u4e4b\u524d\u770b\u5230\u5982\u4f55\u6784\u5efa\u6240\u6709\u7684\u72ec\u7acb\u6784\u5efa\u6a21\u5757\uff0c\u6240\u4ee5\u73b0\u5728\u60a8\u53ea\u9700\u8981\u7ec4\u88c5\u5b83\u4eec\u6765\u521b\u5efa\u6240\u9700\u7684\u6784\u67b6\u3002 \u6211\u4eec\u5c06\u5728\u5373\u5c06\u5f00\u59cb\u7684\u7ec3\u4e60\u4e2d\u6784\u5efa ResNet-34\uff0c\u60a8\u5c06\u5728 Jupyter \u7b14\u8bb0\u672c\u4e2d\u627e\u5230\u5b8c\u6574\u7684\u5de5\u4f5c\u4ee3\u7801\u3002 TensorFlow \u5377\u79ef\u64cd\u4f5c TensorFlow \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5176\u4ed6\u7c7b\u578b\u7684\u5377\u79ef\u5c42\uff1a conv1d() \u4e3a 1D \u8f93\u5165\u521b\u5efa\u4e00\u4e2a\u5377\u79ef\u5c42\u3002 \u4f8b\u5982\uff0c\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u8fd9\u662f\u6709\u7528\u7684\uff0c\u5176\u4e2d\u53e5\u5b50\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u7ef4\u5355\u8bcd\u9635\u5217\uff0c\u5e76\u4e14\u63a5\u53d7\u573a\u8986\u76d6\u4e00\u4e9b\u90bb\u8fd1\u5355\u8bcd\u3002 conv3d() \u521b\u5efa\u4e00\u4e2a 3D \u8f93\u5165\u7684\u5377\u79ef\u5c42\uff0c\u5982 3D PET \u626b\u63cf\u3002 atrous_conv2d() \u521b\u5efa\u4e86\u4e00\u4e2a atrous \u5377\u79ef\u5c42\uff08\u201c\u00e0trous\u201d\u662f\u6cd5\u8bed\u201cwith holes\u201d\uff09\u3002 \u8fd9\u76f8\u5f53\u4e8e\u4f7f\u7528\u5177\u6709\u901a\u8fc7\u63d2\u5165\u884c\u548c\u5217\uff08\u5373\uff0c\u5b54\uff09\u800c\u6269\u5927\u7684\u5377\u79ef\u6838\u7684\u666e\u901a\u5377\u79ef\u5c42\u3002 \u4f8b\u5982\uff0c\u7b49\u4e8e [[1,2,3]] \u7684 1\u00d73 \u5377\u79ef\u6838\u53ef\u4ee5\u4ee54\u7684\u6269\u5f20\u7387\u6269\u5f20\uff0c\u5bfc\u81f4\u6269\u5f20\u7684\u5377\u79ef\u6838 [[1,0,0,0,2,0,0,0,3]] \u3002 \u8fd9\u4f7f\u5f97\u5377\u79ef\u5c42\u5728\u6ca1\u6709\u8ba1\u7b97\u4ef7\u683c\u7684\u60c5\u51b5\u4e0b\u5177\u6709\u66f4\u5927\u7684\u5c40\u90e8\u611f\u53d7\u91ce\uff0c\u5e76\u4e14\u4e0d\u4f7f\u7528\u989d\u5916\u7684\u53c2\u6570\u3002 conv2d_transpose() \u521b\u5efa\u4e86\u4e00\u4e2a\u8f6c\u7f6e\u5377\u79ef\u5c42\uff0c\u6709\u65f6\u79f0\u4e3a\u53bb\u5377\u79ef\u5c42\uff0c\u5b83\u5bf9\u56fe\u50cf\u8fdb\u884c\u4e0a\u91c7\u6837\uff08\u8fd9\u4e2a\u540d\u79f0\u662f\u975e\u5e38\u5177\u6709\u8bef\u5bfc\u6027\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5c42\u5e76\u4e0d\u6267\u884c\u53bb\u5377\u79ef\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u7684\u6570\u5b66\u8fd0\u7b97\uff08\u5377\u79ef\u7684\u9006\uff09\uff09 \u3002\u8fd9\u662f\u901a\u8fc7\u5728\u8f93\u5165\u4e4b\u95f4\u63d2\u5165\u96f6\u6765\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u4e00\u4e2a\u4f7f\u7528\u5206\u6570\u6b65\u957f\u7684\u666e\u901a\u5377\u79ef\u5c42\u3002\u4f8b\u5982\uff0c\u5728\u56fe\u50cf\u5206\u5272\u4e2d\uff0c\u4e0a\u91c7\u6837\u662f\u6709\u7528\u7684\uff1a\u5728\u5178\u578b\u7684CNN\u4e2d\uff0c\u7279\u5f81\u6620\u5c04\u8d8a\u6765\u8d8a\u5c0f\u5f53\u901a\u8fc7\u7f51\u7edc\u65f6\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u60f3\u8f93\u51fa\u4e00\u4e2a\u4e0e\u8f93\u5165\u5927\u5c0f\u76f8\u540c\u7684\u56fe\u50cf\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u4e0a\u91c7\u6837\u5c42\u3002 depthwise_conv2d() \u521b\u5efa\u4e00\u4e2a\u6df1\u5ea6\u5377\u79ef\u5c42\uff0c\u5c06\u6bcf\u4e2a\u5377\u79ef\u6838\u72ec\u7acb\u5e94\u7528\u4e8e\u6bcf\u4e2a\u5355\u72ec\u7684\u8f93\u5165\u901a\u9053\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u6709 fn \u5377\u79ef\u6838\u548c fn' \u8f93\u5165\u901a\u9053\uff0c\u90a3\u4e48\u8fd9\u5c06\u8f93\u51fa fn\u00d7fn' \u7279\u5f81\u6620\u5c04\u3002 separable_conv2d() \u521b\u5efa\u4e00\u4e2a\u53ef\u5206\u79bb\u7684\u5377\u79ef\u5c42\uff0c\u9996\u5148\u50cf\u6df1\u5ea6\u5377\u79ef\u5c42\u4e00\u6837\u5de5\u4f5c\uff0c\u7136\u540e\u5c06 1\u00d71 \u5377\u79ef\u5c42\u5e94\u7528\u4e8e\u7ed3\u679c\u7279\u5f81\u6620\u5c04\u3002 \u8fd9\u4f7f\u5f97\u53ef\u4ee5\u5c06\u5377\u79ef\u6838\u5e94\u7528\u4e8e\u4efb\u610f\u7684\u8f93\u5165\u901a\u9053\u7ec4\u3002","title":"13.\u5377\u79ef\u795e\u7ecf\u7f51\u7edc"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_1","text":"\u200b\u5c3d\u7ba1 IBM \u7684\u6df1\u84dd\u8d85\u7ea7\u8ba1\u7b97\u673a\u57281996\u5e74\u51fb\u8d25\u4e86\u56fd\u9645\u8c61\u68cb\u4e16\u754c\u51a0\u519b Garry Kasparvo\uff0c\u76f4\u5230\u8fd1\u51e0\u5e74\u8ba1\u7b97\u673a\u90fd\u4e0d\u80fd\u53ef\u9760\u5730\u5b8c\u6210\u4e00\u4e9b\u770b\u8d77\u6765\u8f83\u4e3a\u590d\u6742\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u5224\u522b\u7167\u7247\u4e2d\u662f\u5426\u6709\u72d7\u4ee5\u53ca\u8bc6\u522b\u8bed\u97f3\u3002\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u4efb\u52a1\u5bf9\u4e8e\u4eba\u7c7b\u800c\u8a00\u5982\u6b64\u7b80\u5355\uff1f\u7b54\u6848\u5728\u4e8e\u611f\u77e5\u4e3b\u8981\u53d1\u751f\u5728\u6211\u4eec\u610f\u8bc6\u9886\u57df\u4e4b\u5916\uff0c\u5728\u6211\u4eec\u5927\u8111\u4e2d\u7684\u4e13\u95e8\u89c6\u89c9\uff0c\u542c\u89c9\u548c\u5176\u4ed6\u611f\u5b98\u6a21\u5757\u5185\u3002\u5f53\u611f\u5b98\u4fe1\u606f\u8fbe\u5230\u6211\u4eec\u7684\u610f\u8bc6\u65f6\uff0c\u5b83\u5df2\u7ecf\u88ab\u88c5\u9970\u4e86\u9ad8\u7ea7\u7279\u5f81;\u4f8b\u5982\uff0c\u5f53\u4f60\u770b\u7740\u4e00\u53ea\u53ef\u7231\u7684\u5c0f\u72d7\u7684\u7167\u7247\u65f6\uff0c\u4f60\u4e0d\u80fd\u9009\u62e9\u4e0d\u770b\u8fd9\u53ea\u5c0f\u72d7\uff0c\u6216\u4e0d\u6ce8\u610f\u5b83\u7684\u53ef\u7231\u3002\u4f60\u4e5f\u4e0d\u80fd\u89e3\u91ca\u4f60\u5982\u4f55\u8ba4\u51fa\u8fd9\u662f\u4e00\u53ea\u53ef\u7231\u7684\u5c0f\u72d7\uff0c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u5f88\u660e\u663e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u76f8\u4fe1\u6211\u4eec\u7684\u4e3b\u89c2\u7ecf\u9a8c\uff1a\u611f\u77e5\u5e76\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u7406\u89e3\u5b83\u6211\u4eec\u5fc5\u987b\u770b\u770b\u611f\u5b98\u6a21\u5757\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u200b\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u662f\u4ece\u5927\u8111\u89c6\u89c9\u76ae\u5c42\u7684\u7814\u7a76\u4e2d\u51fa\u73b0\u7684\uff0c\u81ea 20 \u4e16\u7eaa 80 \u5e74\u4ee3\u4ee5\u6765\u5b83\u4eec\u4e00\u76f4\u7528\u4e8e\u56fe\u50cf\u8bc6\u522b\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u7531\u4e8e\u8ba1\u7b97\u80fd\u529b\u7684\u589e\u52a0\uff0c\u53ef\u7528\u8bad\u7ec3\u6570\u636e\u7684\u6570\u91cf\u4ee5\u53ca\u7b2c 11 \u7ae0\u4ecb\u7ecd\u7684\u8bad\u7ec3\u6df1\u5ea6\u7f51\u7edc\u7684\u6280\u5de7\uff0cCNN \u81f4\u529b\u4e8e\u5728\u67d0\u4e9b\u590d\u6742\u7684\u89c6\u89c9\u4efb\u52a1\u4e2d\u505a\u51fa\u8d85\u51fa\u4eba\u7c7b\u7684\u8868\u73b0\u3002\u4ed6\u4eec\u4f7f\u56fe\u50cf\u641c\u7d22\u670d\u52a1\uff0c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\uff0c\u89c6\u9891\u81ea\u52a8\u5206\u7c7b\u7cfb\u7edf\u7b49\u53d8\u5f97\u5f3a\u5927\u3002\u6b64\u5916\uff0cCNN \u5e76\u4e0d\u5c40\u9650\u4e8e\u89c6\u89c9\u611f\u77e5\uff1a\u5b83\u4eec\u5728\u5176\u4ed6\u4efb\u52a1\u4e2d\u4e5f\u5f88\u6210\u529f\uff0c\u5982\u8bed\u97f3\u8bc6\u522b\u6216\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09; \u7136\u800c\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u4e13\u6ce8\u4e8e\u89c6\u89c9\u5e94\u7528\u3002 \u200b\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd CNN \u7684\u6765\u6e90\uff0c\u6784\u5efa\u5b83\u4eec\u6a21\u5757\u7684\u5916\u89c2\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 TensorFlow \u5b9e\u73b0\u5b83\u4eec\u3002\u7136\u540e\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u6700\u597d\u7684 CNN \u67b6\u6784\u3002 \u200b","title":"\u5341\u4e09\u3001\u5377\u79ef\u795e\u7ecf\u7f51\u7edc"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_2","text":"\u200bDavid H.Hubel \u548c Torsten Wiesel \u5728 1958 \u5e74\u548c 1959 \u5e74\u5bf9\u732b\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u5b9e\u9a8c\uff08\u4ee5\u53ca\u51e0\u5e74\u540e\u5728\u7334\u5b50\u4e0a\u7684\u5b9e\u9a8c\uff09\uff0c\u5bf9\u89c6\u89c9\u76ae\u5c42\u7684\u7ed3\u6784\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u89c1\u89e3\uff081981 \u5e74\u4f5c\u8005\u56e0\u6b64\u83b7\u5f97\u4e86\u8bfa\u8d1d\u5c14\u751f\u7406\u548c\u533b\u5b66\u5956\uff09\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4ed6\u4eec\u53d1\u73b0\u89c6\u76ae\u5c42\u4e2d\u7684\u8bb8\u591a\u795e\u7ecf\u5143\u6709\u4e00\u4e2a\u5c0f\u7684\u5c40\u90e8\u611f\u53d7\u91ce\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ea\u5bf9\u4f4d\u4e8e\u89c6\u91ce\u4e2d\u6709\u9650\u7684\u4e00\u90e8\u5206\u533a\u57df\u7684\u89c6\u89c9\u523a\u6fc0\u8d77\u4f5c\u7528\uff08\u89c1\u56fe 13-1\uff0c\u4e94\u4e2a\u795e\u7ecf\u5143\u7684\u5c40\u90e8\u611f\u53d7\u91ce\u7531\u865a\u7ebf\u5706\u5708\u8868\u793a\uff09\u3002\u4e0d\u540c\u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\u53ef\u80fd\u91cd\u53e0\uff0c\u5e76\u4e14\u5b83\u4eec\u4e00\u8d77\u5e73\u94fa\u4e86\u6574\u4e2a\u89c6\u91ce\u3002\u6b64\u5916\uff0c\u4f5c\u8005\u8868\u660e\uff0c\u4e00\u4e9b\u795e\u7ecf\u5143\u53ea\u5bf9\u6c34\u5e73\u7ebf\u65b9\u5411\u7684\u56fe\u50cf\u4f5c\u51fa\u53cd\u5e94\uff0c\u800c\u53e6\u4e00\u4e9b\u795e\u7ecf\u5143\u53ea\u5bf9\u4e0d\u540c\u65b9\u5411\u7684\u7ebf\u4f5c\u51fa\u53cd\u5e94\uff08\u4e24\u4e2a\u795e\u7ecf\u5143\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684\u611f\u53d7\u91ce\uff0c\u4f46\u5bf9\u4e0d\u540c\u65b9\u5411\u7684\u7ebf\u4f5c\u51fa\u53cd\u5e94\uff09\u3002\u4ed6\u4eec\u8fd8\u6ce8\u610f\u5230\u4e00\u4e9b\u795e\u7ecf\u5143\u5177\u6709\u8f83\u5927\u7684\u611f\u53d7\u91ce\uff0c\u5e76\u4e14\u5b83\u4eec\u5bf9\u8f83\u590d\u6742\u7684\u6a21\u5f0f\u4f5c\u51fa\u53cd\u5e94\uff0c\u8fd9\u4e9b\u6a21\u5f0f\u662f\u8f83\u4f4e\u5c42\u6a21\u5f0f\u7684\u7ec4\u5408\u3002\u8fd9\u4e9b\u89c2\u5bdf\u7ed3\u679c\u8ba9\u6211\u4eec\u60f3\u5230\uff1a\u66f4\u9ad8\u7ea7\u522b\u7684\u795e\u7ecf\u5143\u662f\u57fa\u4e8e\u76f8\u90bb\u4f4e\u7ea7\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff08\u5728\u56fe 13-1 \u4e2d\uff0c\u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ea\u4e0e\u6765\u81ea\u524d\u4e00\u5c42\u7684\u5c11\u6570\u795e\u7ecf\u5143\u76f8\u8fde\uff09\u3002\u8fd9\u4e2a\u5f3a\u5927\u7684\u7ed3\u6784\u80fd\u591f\u68c0\u6d4b\u89c6\u91ce\u4e2d\u4efb\u4f55\u533a\u57df\u7684\u5404\u79cd\u590d\u6742\u56fe\u6848\u3002 \u200b\u8fd9\u4e9b\u5bf9\u89c6\u89c9\u76ae\u5c42\u7684\u7814\u7a76\u542f\u53d1\u4e86 1980 \u5e74\u63a8\u51fa\u7684\u65b0\u8ba4\u77e5\u673a\uff08neocognitron\uff09\uff0c\u540e\u8005\u9010\u6e10\u6f14\u53d8\u4e3a\u6211\u4eec\u73b0\u5728\u79f0\u4e4b\u4e3a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u4e00\u4e2a\u91cd\u8981\u7684\u91cc\u7a0b\u7891\u662f Yann LeCun\uff0cL\u00e9onBottou\uff0cYoshua Bengio \u548c Patrick Haffner \u4e8e 1998 \u5e74\u53d1\u8868\u7684\u4e00\u7bc7\u8bba\u6587\uff0c\u8be5\u8bba\u6587\u5f15\u5165\u4e86\u7740\u540d\u7684 LeNet-5 \u67b6\u6784\uff0c\u5e7f\u6cdb\u7528\u4e8e\u8bc6\u522b\u624b\u5199\u652f\u7968\u53f7\u7801\u3002\u8fd9\u4e2a\u67b6\u6784\u6709\u4e00\u4e9b\u4f60\u5df2\u7ecf\u77e5\u9053\u7684\u6784\u5efa\u5757\uff0c\u6bd4\u5982\u5b8c\u5168\u8fde\u63a5\u5c42\u548c Sigmoid \u6fc0\u6d3b\u51fd\u6570\uff0c\u4f46\u662f\u5b83\u8fd8\u5f15\u5165\u4e86\u4e24\u4e2a\u65b0\u7684\u6784\u5efa\u5757\uff1a\u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\u3002\u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u4ed6\u4eec\u3002","title":"\u89c6\u89c9\u76ae\u5c42\u7684\u7ed3\u6784"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_3","text":"\u200bCNN \u6700\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\u662f\u5377\u79ef\u5c42\uff1a\u7b2c\u4e00\u5377\u79ef\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u4e0d\u662f\u8fde\u63a5\u5230\u8f93\u5165\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\uff08\u5c31\u50cf\u5b83\u4eec\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\u90a3\u6837\uff09\uff0c\u800c\u662f\u4ec5\u4ec5\u8fde\u63a5\u5230\u5b83\u4eec\u7684\u5c40\u90e8\u611f\u53d7\u91ce\u4e2d\u7684\u50cf\u7d20\uff08\u53c2\u89c1\u56fe 13-2\uff09\u3002 \u8fdb\u800c\uff0c\u7b2c\u4e8c\u5377\u79ef\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ea\u4e0e\u4f4d\u4e8e\u7b2c\u4e00\u5c42\u4e2d\u7684\u5c0f\u77e9\u5f62\u5185\u7684\u795e\u7ecf\u5143\u8fde\u63a5\u3002 \u8fd9\u79cd\u67b6\u6784\u5141\u8bb8\u7f51\u7edc\u4e13\u6ce8\u4e8e\u7b2c\u4e00\u9690\u85cf\u5c42\u4e2d\u7684\u4f4e\u7ea7\u7279\u5f81\uff0c\u7136\u540e\u5c06\u5176\u7ec4\u88c5\u6210\u4e0b\u4e00\u9690\u85cf\u5c42\u4e2d\u7684\u9ad8\u7ea7\u7279\u5f81\uff0c\u7b49\u7b49\u3002 \u8fd9\u79cd\u5c42\u6b21\u7ed3\u6784\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u56fe\u50cf\u4e2d\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u8fd9\u4e5f\u662f CNN \u5728\u56fe\u50cf\u8bc6\u522b\u65b9\u9762\u6548\u679c\u5f88\u597d\u7684\u539f\u56e0\u4e4b\u4e00\u3002 \u200b \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6240\u770b\u5230\u7684\u6240\u6709\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\u90fd\u6709\u7531\u4e00\u957f\u4e32\u795e\u7ecf\u5143\u7ec4\u6210\u7684\u5c42\uff0c\u5728\u8f93\u5165\u5230\u795e\u7ecf\u7f51\u7edc\u4e4b\u524d\u6211\u4eec\u5fc5\u987b\u5c06\u8f93\u5165\u56fe\u50cf\u538b\u7f29\u6210 1D\u3002 \u73b0\u5728\uff0c\u6bcf\u4e2a\u56fe\u5c42\u90fd\u4ee5 2D \u8868\u793a\uff0c\u8fd9\u4f7f\u5f97\u795e\u7ecf\u5143\u4e0e\u5176\u76f8\u5e94\u7684\u8f93\u5165\u8fdb\u884c\u5339\u914d\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002 \u200b\u4f4d\u4e8e\u7ed9\u5b9a\u5c42\u7684\u7b2c i \u884c\u7b2c j \u5217\u7684\u795e\u7ecf\u5143\u8fde\u63a5\u5230\u4f4d\u4e8e\u524d\u4e00\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u7684\u7b2ci\u884c\u5230\u7b2c \u884c\uff0c\u7b2c j \u5217\u5230\u7b2c \u5217\u3002 fh \u548c fw \u662f\u5c40\u90e8\u611f\u53d7\u91ce\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff08\u89c1\u56fe 13-3\uff09\u3002 \u4e3a\u4e86\u4f7f\u56fe\u5c42\u5177\u6709\u4e0e\u524d\u4e00\u56fe\u5c42\u76f8\u540c\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u901a\u5e38\u5728\u8f93\u5165\u5468\u56f4\u6dfb\u52a0\u96f6\uff0c\u5982\u56fe\u6240\u793a\u3002 \u8fd9\u88ab\u79f0\u4e3a\u96f6\u586b\u5145. \u200b\u5982\u56fe 13-4 \u6240\u793a\uff0c\u901a\u8fc7\u5c06\u5c40\u90e8\u611f\u53d7\u91ce\u9694\u5f00\uff0c\u8fd8\u53ef\u4ee5\u5c06\u8f83\u5927\u7684\u8f93\u5165\u5c42\u8fde\u63a5\u5230\u66f4\u5c0f\u7684\u5c42\u3002 \u4e24\u4e2a\u8fde\u7eed\u7684\u611f\u53d7\u91ce\u4e4b\u95f4\u7684\u8ddd\u79bb\u88ab\u79f0\u4e3a\u6b65\u5e45\u3002 \u5728\u56fe\u4e2d\uff0c\u4e00\u4e2a 5\u00d77 \u7684\u8f93\u5165\u5c42\uff08\u52a0\u96f6\u586b\u5145\uff09\u8fde\u63a5\u5230\u4e00\u4e2a 3\u00d74 \u5c42\uff0c\u4f7f\u7528 3\u00d73 \u7684\u5377\u79ef\u6838\u548c\u4e00\u4e2a\u6b65\u5e45\u4e3a 2\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6b65\u5e45\u5728\u4e24\u4e2a\u65b9\u5411\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u4e00\u5b9a\u603b\u662f\u5982\u6b64\uff09\u3002 \u4f4d\u4e8e\u4e0a\u5c42\u7b2c i \u884c\u7b2c j \u5217\u7684\u795e\u7ecf\u5143\u4e0e\u4f4d\u4e8e\u524d\u4e00\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u8fde\u63a5\u7684\u7b2c \u81f3 \u884c\uff0c\u7b2c \u5217\uff0c Sh \u548c Sw \u662f\u5782\u76f4\u548c\u6c34\u5e73\u7684\u6b65\u5e45\u3002","title":"\u5377\u79ef\u5c42"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_4","text":"\u200b\u795e\u7ecf\u5143\u7684\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u4e3a\u5c40\u90e8\u611f\u53d7\u91ce\u5927\u5c0f\u7684\u5c0f\u56fe\u50cf\u3002 \u4f8b\u5982\uff0c\u56fe 13-5 \u663e\u793a\u4e86\u4e24\u4e2a\u53ef\u80fd\u7684\u6743\u91cd\u96c6\uff0c\u79f0\u4e3a\u8fc7\u6ee4\u5668\uff08\u6216\u5377\u79ef\u6838\uff09\u3002\u7b2c\u4e00\u4e2a\u8868\u793a\u4e3a\u4e2d\u95f4\u6709\u4e00\u6761\u5782\u76f4\u7684\u767d\u7ebf\u7684\u9ed1\u8272\u6b63\u65b9\u5f62\uff08\u9664\u4e86\u4e2d\u95f4\u4e00\u5217\u5916\uff0c\u8fd9\u662f\u4e00\u4e2a\u5145\u6ee1 0 \u7684 7\u00d77 \u77e9\u9635\uff0c\u9664\u4e86\u4e2d\u592e\u5782\u76f4\u7ebf\u662f 1\uff09\u3002 \u4f7f\u7528\u8fd9\u4e9b\u6743\u91cd\u7684\u795e\u7ecf\u5143\u4f1a\u5ffd\u7565\u9664\u4e86\u4e2d\u592e\u5782\u76f4\u7ebf\u4ee5\u5916\u611f\u53d7\u91ce\u7684\u4e00\u5207\uff08\u56e0\u4e3a\u9664\u4f4d\u4e8e\u4e2d\u592e\u5782\u76f4\u7ebf\u4ee5\u5916\uff0c\u6240\u6709\u7684\u8f93\u5165\u90fd\u5c06\u4e58 0\uff09\u3002\u7b2c\u4e8c\u4e2a\u5377\u79ef\u6838\u662f\u4e00\u4e2a\u9ed1\u8272\u7684\u6b63\u65b9\u5f62\uff0c\u4e2d\u95f4\u6709\u4e00\u6761\u6c34\u5e73\u7684\u767d\u7ebf\u3002 \u518d\u4e00\u6b21\uff0c\u4f7f\u7528\u8fd9\u4e9b\u6743\u91cd\u7684\u795e\u7ecf\u5143\u5c06\u5ffd\u7565\u9664\u4e86\u4e2d\u5fc3\u6c34\u5e73\u7ebf\u4e4b\u5916\u7684\u5c40\u90e8\u611f\u53d7\u91ce\u4e2d\u7684\u4e00\u5207\u3002 \u200b\u73b0\u5728\uff0c\u5982\u679c\u4e00\u4e2a\u56fe\u5c42\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u5782\u76f4\u7ebf\u5377\u79ef\u6838\uff08\u4ee5\u53ca\u76f8\u540c\u7684\u504f\u7f6e\u9879\uff09\uff0c\u5e76\u4e14\u5c06\u7f51\u7edc\u8f93\u5165\u5230\u56fe 13-5\uff08\u5e95\u90e8\u56fe\u50cf\uff09\u4e2d\u6240\u793a\u7684\u8f93\u5165\u56fe\u50cf\uff0c\u5219\u8be5\u56fe\u5c42\u5c06\u8f93\u51fa\u5de6\u4e0a\u56fe\u50cf\u3002 \u8bf7\u6ce8\u610f\uff0c\u5782\u76f4\u7684\u767d\u7ebf\u5f97\u5230\u589e\u5f3a\uff0c\u5176\u4f59\u7684\u53d8\u5f97\u6a21\u7cca\u3002 \u7c7b\u4f3c\u5730\uff0c\u5982\u679c\u6240\u6709\u7684\u795e\u7ecf\u5143\u90fd\u4f7f\u7528\u6c34\u5e73\u7ebf\u5377\u79ef\u6838\uff0c\u53f3\u4e0a\u89d2\u7684\u56fe\u50cf\u5c31\u662f\u4f60\u6240\u5f97\u5230\u7684\u3002 \u6ce8\u610f\u5230\u6c34\u5e73\u7684\u767d\u7ebf\u5f97\u5230\u589e\u5f3a\uff0c\u5176\u4f59\u7684\u5219\u88ab\u6a21\u7cca\u4e86\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u76f8\u540c\u5377\u79ef\u548c\u7684\u4e00\u4e2a\u5145\u6ee1\u795e\u7ecf\u5143\u7684\u56fe\u5c42\u5c06\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u7279\u5f81\u6620\u5c04\uff0c\u8be5\u7279\u5f81\u6620\u5c04\u7a81\u51fa\u663e\u793a\u56fe\u50cf\u4e2d\u4e0e\u5377\u79ef\u548c\u6700\u76f8\u4f3c\u7684\u533a\u57df\u3002 \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0cCNN \u4e3a\u5176\u4efb\u52a1\u627e\u5230\u6700\u6709\u7528\u7684\u5377\u79ef\u548c\uff0c\u5e76\u5b66\u4e60\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u66f4\u590d\u6742\u7684\u6a21\u5f0f\uff08\u4f8b\u5982\uff0c\u4ea4\u53c9\u662f\u56fe\u50cf\u4e2d\u5782\u76f4\u5377\u79ef\u548c\u548c\u6c34\u5e73\u5377\u79ef\u548c\u90fd\u6fc0\u6d3b\u7684\u533a\u57df\uff09\u3002","title":"\u5377\u79ef\u6838/\u8fc7\u6ee4\u5668"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_5","text":"\u200b\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u6bcf\u4e2a\u5377\u79ef\u5c42\u8868\u793a\u4e3a\u4e00\u4e2a\u8584\u7684\u4e8c\u7ef4\u5c42\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5b83\u662f\u7531\u51e0\u4e2a\u76f8\u540c\u5927\u5c0f\u7684\u7279\u5f81\u6620\u5c04\u7ec4\u6210\u7684\uff0c\u6240\u4ee5\u4f7f\u75283D\u56fe\u8868\u793a\u5176\u4f1a\u66f4\u52a0\u51c6\u786e\uff08\u89c1\u56fe 13-6\uff09\u3002 \u5728\u4e00\u4e2a\u7279\u5f81\u6620\u5c04\u4e2d\uff0c\u6240\u6709\u795e\u7ecf\u5143\u5171\u4eab\u76f8\u540c\u7684\u53c2\u6570\uff08\u6743\u91cd\u548c\u504f\u7f6e\uff0c\u6743\u503c\u5171\u4eab\uff09\uff0c\u4f46\u662f\u4e0d\u540c\u7684\u7279\u5f81\u6620\u5c04\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u53c2\u6570\u3002 \u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\u4e0e\u524d\u9762\u63cf\u8ff0\u7684\u76f8\u540c\uff0c\u4f46\u662f\u5b83\u5ef6\u4f38\u5230\u6240\u6709\u5148\u524d\u7684\u5c42\u7684\u7279\u5f81\u6620\u5c04\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5377\u79ef\u5c42\u540c\u65f6\u5bf9\u5176\u8f93\u5165\u5e94\u7528\u591a\u4e2a\u5377\u79ef\u6838\uff0c\u4f7f\u5176\u80fd\u591f\u68c0\u6d4b\u8f93\u5165\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u7684\u591a\u4e2a\u7279\u5f81\u3002 \u200b \u4e8b\u5b9e\u4e0a\uff0c\u7279\u5f81\u5730\u56fe\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u5171\u4eab\u76f8\u540c\u7684\u53c2\u6570\u4f1a\u663e\u7740\u51cf\u5c11\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u6570\u91cf\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u4e00\u65e6 CNN \u5b66\u4f1a\u8bc6\u522b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6a21\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u5176\u4ed6\u4f4d\u7f6e\u8bc6\u522b\u5b83\u3002 \u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e00\u65e6\u4e00\u4e2a\u5e38\u89c4 DNN \u5b66\u4f1a\u8bc6\u522b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6a21\u5f0f\uff0c\u5b83\u53ea\u80fd\u5728\u8be5\u7279\u5b9a\u4f4d\u7f6e\u8bc6\u522b\u5b83\u3002 \u200b\u800c\u4e14\uff0c\u8f93\u5165\u56fe\u50cf\u4e5f\u7531\u591a\u4e2a\u5b50\u56fe\u5c42\u7ec4\u6210\uff1a\u6bcf\u4e2a\u989c\u8272\u901a\u9053\u4e00\u4e2a\u3002 \u901a\u5e38\u6709\u4e09\u79cd\uff1a\u7ea2\u8272\uff0c\u7eff\u8272\u548c\u84dd\u8272\uff08RGB\uff09\u3002 \u7070\u5ea6\u56fe\u50cf\u53ea\u6709\u4e00\u4e2a\u901a\u9053\uff0c\u4f46\u662f\u4e00\u4e9b\u56fe\u50cf\u53ef\u80fd\u66f4\u591a - \u4f8b\u5982\u6355\u6349\u989d\u5916\u5149\u9891\uff08\u5982\u7ea2\u5916\u7ebf\uff09\u7684\u536b\u661f\u56fe\u50cf\u3002 \u200b\u5177\u4f53\u5730\uff0c\u4f4d\u4e8e\u7ed9\u5b9a\u5377\u79ef\u5c42L\u4e2d\u7684\u7279\u5f81\u6620\u5c04k\u7684i\u884c\uff0cj\u5217\u4e2d\u7684\u795e\u7ecf\u5143\u8fde\u63a5\u5230\u524d\u4e00\u5c42\uff08L-1\uff09\u4f4d\u4e8e \u884c\uff0c \u5217\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002\u8bf7\u6ce8\u610f\uff0c\u4f4d\u4e8e\u540c\u4e00\u884c\u7b2c i \u5217\u548c\u7b2c j \u5217\u4f46\u4f4d\u4e8e\u4e0d\u540c\u7279\u5f81\u6620\u5c04\u4e2d\u7684\u6240\u6709\u795e\u7ecf\u5143\u90fd\u8fde\u63a5\u5230\u4e0a\u4e00\u5c42\u4e2d\u5b8c\u5168\u76f8\u540c\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002 \u200b\u516c\u5f0f 13-1 \u5728\u4e00\u4e2a\u603b\u7ed3\u524d\u9762\u89e3\u91ca\u7684\u5927\u7684\u6570\u5b66\u516c\u5f0f\uff1a\u5b83\u5c55\u793a\u4e86\u5982\u4f55\u8ba1\u7b97\u5377\u79ef\u5c42\u4e2d\u7ed9\u5b9a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002\u5b83\u662f\u8ba1\u7b97\u6240\u6709\u6295\u5165\u7684\u52a0\u6743\u603b\u5e76\u4e14\u52a0\u4e0a\u504f\u7f6e\u3002 \u662f\u5377\u79ef\u5c42\uff08L\u5c42\uff09\u7279\u5f81\u6620\u5c04k\u4e2d\u4f4d\u4e8e\u7b2c i \u884c\u7b2c j \u5217\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa. \u5982\u524d\u6240\u8ff0\uff0c \u548c \u662f\u5782\u76f4\u548c\u6c34\u5e73\u7684\u6b65\u5e45\uff0c \u548c \u662f\u611f\u53d7\u91ce\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c \u662f\u524d\u4e00\u5c42\uff08\u7b2c l - 1 \u5c42\uff09\u7684\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\u3002 \u662f\u4f4d\u4e8e\u5c42 L-1 \uff0c i' \u884c\uff0c j' \u5217\uff0c\u7279\u5f81\u6620\u5c04 k' \uff08\u6216\u8005\u5982\u679c\u524d\u4e00\u5c42\u662f\u8f93\u5165\u5c42\u7684\u901a\u9053 k' \uff09\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002 \u662f\u7279\u5f81\u6620\u5c04 k \u7684\u504f\u7f6e\u9879\uff08\u5728 L \u5c42\u4e2d\uff09\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u8c03\u6574\u7279\u5f81\u6620\u5c04 k \u7684\u6574\u4f53\u4eae\u5ea6\u7684\u65cb\u94ae\u3002 \u662f\u5c42 L \u7684\u7279\u5f81\u6620\u5c04 k \u4e2d\u7684\u4efb\u4f55\u795e\u7ecf\u5143\u4e0e\u4f4d\u4e8e\u884c u \uff0c\u5217 v \uff08\u76f8\u5bf9\u4e8e\u795e\u7ecf\u5143\u7684\u611f\u53d7\u91ce\uff09\u7684\u8f93\u5165\u4e4b\u95f4\u7684\u8fde\u63a5\u6743\u91cd\uff0c\u4ee5\u53ca\u7279\u5f81\u6620\u5c04k'\u3002","title":"\u53e0\u52a0\u7684\u591a\u4e2a\u7279\u5f81\u6620\u5c04"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#tensorflow","text":"\u200b\u5728 Tensorflow \u4e2d\uff0c\u6bcf\u4e2a\u8f93\u5165\u56fe\u50cf\u7684\u901a\u5e38\u88ab\u8868\u793a\u4e3a\u4e09\u7ef4\u5f20\u91cf \u3002 \u4e00\u4e2a\u5c0f\u6279\u6b21\u88ab\u8868\u793a\u4e3a\u56db\u7ef4\u5f20\u91cf \u3002 \u5377\u79ef\u5c42\u7684\u6743\u91cd\u88ab\u8868\u793a\u4e3a\u56db\u7ef4\u5f20\u91cf \u3002 \u5377\u79ef\u5c42\u7684\u504f\u5dee\u9879\u7b80\u5355\u5730\u8868\u793a\u4e3a\u4e00\u7ef4\u5f62\u72b6\u7684\u5f20\u91cf \u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528 Scikit-Learn \u7684 load_sample_images() \uff08\u52a0\u8f7d\u4e24\u4e2a\u5f69\u8272\u56fe\u50cf\uff0c\u4e00\u4e2a\u4e2d\u56fd\u5e99\u5b87\uff0c\u53e6\u4e00\u4e2a\u662f\u4e00\u6735\u82b1\uff09\u52a0\u8f7d\u4e24\u4e2a\u6837\u672c\u56fe\u50cf\u3002 \u7136\u540e\u521b\u5efa\u4e24\u4e2a 7\u00d77 \u7684\u5377\u79ef\u6838\uff08\u4e00\u4e2a\u4e2d\u95f4\u662f\u5782\u76f4\u7684\u767d\u7ebf\uff0c\u53e6\u4e00\u4e2a\u662f\u6c34\u5e73\u7684\u767d\u7ebf\uff09\uff0c\u5e76\u5c06\u4ed6\u4eec\u5e94\u7528\u5230\u4e24\u5f20\u56fe\u5f62\u4e2d,\u4f7f\u7528 TensorFlow \u7684 conv2d() \u51fd\u6570\u6784\u5efa\u7684\u5377\u79ef\u56fe\u5c42\uff08\u4f7f\u7528\u96f6\u586b\u5145\u4e14\u6b65\u5e45\u4e3a 2\uff09\u3002 \u6700\u540e\uff0c\u7ed8\u5236\u5176\u4e2d\u4e00\u4e2a\u7ed3\u679c\u7279\u5f81\u6620\u5c04\uff08\u7c7b\u4f3c\u4e8e\u56fe 13-5 \u4e2d\u7684\u53f3\u4e0a\u56fe\uff09\u3002 from sklearn.datasets import load_sample_image import matplotlib.pyplot as plt import numpy as np import tensorflow as tf if __name__ == '__main__': # Load sample images china = load_sample_image(\"china.jpg\") flower = load_sample_image(\"flower.jpg\") dataset = np.array([china, flower], dtype=np.float32) batch_size, height, width, channels = dataset.shape # Create 2 filters filters = np.zeros(shape=(7, 7, channels, 2), dtype=np.float32) filters[:, 3, :, 0] = 1 # vertical line filters[3, :, :, 1] = 1 # horizontal line # Create a graph with input X plus a convolutional layer applying the 2 filters X = tf.placeholder(tf.float32, shape=(None, height, width, channels)) convolution = tf.nn.conv2d(X, filters, strides=[1,2,2,1], padding=\"SAME\") with tf.Session() as sess: output = sess.run(convolution, feed_dict={X: dataset}) plt.imshow(output[0, :, :, 1], cmap=\"gray\") # plot 1st image's 2nd feature map plt.show() \u5927\u90e8\u5206\u4ee3\u7801\u662f\u4e0d\u8a00\u800c\u55bb\u7684\uff0c\u4f46 conv2d() \u8fd9\u4e00\u884c\u503c\u5f97\u89e3\u91ca\u4e00\u4e0b\uff1a X \u662f\u8f93\u5165\u5c0f\u6279\u6b21\uff084D \u5f20\u91cf\uff0c\u5982\u524d\u6240\u8ff0\uff09 \u5377\u79ef\u6838\u662f\u5e94\u7528\u7684\u4e00\u7ec4\u5377\u79ef\u6838\uff08\u4e5f\u662f\u4e00\u4e2a 4D \u5f20\u91cf\uff0c\u5982\u524d\u6240\u8ff0\uff09\u3002 \u6b65\u5e45\u662f\u4e00\u4e2a\u56db\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5176\u4e2d\u4e24\u4e2a\u4e2d\u95f4\u7684\u503c\u662f\u5782\u76f4\u548c\u6c34\u5e73\u7684\u6b65\u5e45\uff08 sh \u548c sw \uff09\u3002 \u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u73b0\u5728\u5fc5\u987b\u7b49\u4e8e 1\u3002\u4ed6\u4eec\u53ef\u80fd\u6709\u4e00\u5929\u4f1a\u88ab\u7528\u6765\u6307\u5b9a\u6279\u91cf\u6b65\u957f\uff08\u8df3\u8fc7\u4e00\u4e9b\u5b9e\u4f8b\uff09\u548c\u9891\u9053\u6b65\u5e45\uff08\u8df3\u8fc7\u4e0a\u4e00\u5c42\u7684\u7279\u5f81\u6620\u5c04\u6216\u901a\u9053\uff09\u3002 padding \u5fc5\u987b\u662f \"VALID\" \u6216 \"SAME\" \uff1a \u5982\u679c\u8bbe\u7f6e\u4e3a \"VALID\" \uff0c\u5377\u79ef\u5c42\u4e0d\u4f7f\u7528\u96f6\u586b\u5145\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5ffd\u7565\u8f93\u5165\u56fe\u50cf\u5e95\u90e8\u548c\u53f3\u4fa7\u7684\u67d0\u4e9b\u884c\u548c\u5217\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6b65\u5e45\uff0c\u5982\u56fe 13-7 \u6240\u793a\uff08\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c \u8fd9\u91cc\u53ea\u663e\u793a\u6c34\u5e73\u5c3a\u5bf8\uff0c\u5f53\u7136\uff0c\u5782\u76f4\u5c3a\u5bf8\u4e5f\u9002\u7528\u76f8\u540c\u7684\u903b\u8f91\uff09 \u5982\u679c\u8bbe\u7f6e\u4e3a \"SAME\" \uff0c\u5219\u5377\u79ef\u5c42\u5728\u5fc5\u8981\u65f6\u4f7f\u7528\u96f6\u586b\u5145\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u6570\u91cf\u7b49\u4e8e\u8f93\u5165\u795e\u7ecf\u5143\u7684\u6570\u91cf\u9664\u4ee5\u8be5\u6b65\u5e45\uff0c\u5411\u4e0a\u820d\u5165\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c ceil(13/5)= 3 \uff09\u3002 \u7136\u540e\u5728\u8f93\u5165\u5468\u56f4\u5c3d\u53ef\u80fd\u5747\u5300\u5730\u6dfb\u52a0\u96f6\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u5377\u79ef\u56fe\u5c42\u6709\u5f88\u591a\u8d85\u53c2\u6570\uff1a\u4f60\u5fc5\u987b\u9009\u62e9\u5377\u79ef\u6838\u7684\u6570\u91cf\uff0c\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u6b65\u5e45\u548c\u586b\u5145\u7c7b\u578b\u3002 \u4e0e\u5f80\u5e38\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u67e5\u627e\u6b63\u786e\u7684\u8d85\u53c2\u6570\u503c\uff0c\u4f46\u8fd9\u975e\u5e38\u8017\u65f6\u3002 \u7a0d\u540e\u6211\u4eec\u5c06\u8ba8\u8bba\u5e38\u89c1\u7684 CNN \u4f53\u7cfb\u7ed3\u6784\uff0c\u4ee5\u4fbf\u8ba9\u60a8\u4e86\u89e3\u8d85\u53c2\u6570\u503c\u5728\u5b9e\u8df5\u4e2d\u7684\u6700\u4f73\u5de5\u4f5c\u65b9\u5f0f\u3002","title":"TensorFlow \u5b9e\u73b0"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_6","text":"\u200bCNN \u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u5377\u79ef\u5c42\u9700\u8981\u5927\u91cf\u7684 RAM\uff0c\u7279\u522b\u662f\u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u56e0\u4e3a\u53cd\u5411\u4f20\u64ad\u9700\u8981\u5728\u6b63\u5411\u4f20\u9012\u671f\u95f4\u8ba1\u7b97\u7684\u6240\u6709\u4e2d\u95f4\u503c\u3002 \u200b\u4f8b\u5982\uff0c\u8003\u8651\u5177\u6709 5\u00d75 \u5377\u79ef\u6838\u7684\u5377\u79ef\u5c42\uff0c\u8f93\u51fa 200 \u4e2a\u5c3a\u5bf8\u4e3a 150\u00d7100 \u7684\u7279\u5f81\u6620\u5c04\uff0c\u6b65\u957f\u4e3a 1\uff0c\u4f7f\u7528 SAME \u586b\u5145\u3002 \u5982\u679c\u8f93\u5165\u662f 150\u00d7100 RGB \u56fe\u50cf\uff08\u4e09\u4e2a\u901a\u9053\uff09\uff0c\u5219\u53c2\u6570\u7684\u6570\u91cf\u662f (5\u00d75\u00d73 + 1)\u00d7200 = 15,200 \uff08 +1 \u5bf9\u5e94\u4e8e\u504f\u7f6e\u9879\uff09\uff0c\u8fd9\u8ddf\u5168\u8fde\u63a5\u5c42\u6bd4\u8f83\u662f\u76f8\u5f53\u5c0f\u7684\u3002\uff08\u5177\u6709 150\u00d7100 \u795e\u7ecf\u5143\u7684\u5168\u8fde\u63a5\u5c42\uff0c\u6bcf\u4e2a\u8fde\u63a5\u5230\u6240\u6709 150\u00d7100\u00d73 \u8f93\u5165\uff0c\u5c06\u5177\u6709 150 ^ 2\u00d7100 ^ 2\u00d73 = 675,000,000 \u4e2a\u53c2\u6570\uff01\uff09\u7136\u800c\uff0c200 \u4e2a\u7279\u5f81\u6620\u5c04\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5305\u542b 150\u00d7100 \u4e2a\u795e\u7ecf\u5143\uff0c\u5e76\u4e14\u8fd9\u4e9b\u795e\u7ecf\u5143\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u9700\u8981\u8ba1\u7b97\u5176 5\u00d75\u00d73 = 75 \u4e2a\u8f93\u5165\u7684\u6743\u91cd\u548c\uff1a\u603b\u5171 2.25 \u4ebf\u6b21\u6d6e\u70b9\u4e58\u6cd5\u3002\u4e0d\u50cf\u5168\u8fde\u63a5\u5c42\u90a3\u4e48\u7cdf\u7cd5\uff0c\u4f46\u4ecd\u7136\u662f\u8ba1\u7b97\u5bc6\u96c6\u578b\u7684\u3002 \u800c\u4e14\uff0c\u5982\u679c\u4f7f\u7528 32 \u4f4d\u6d6e\u70b9\u6570\u6765\u8868\u793a\u7279\u5f81\u6620\u5c04\uff0c\u5219\u5377\u79ef\u5c42\u7684\u8f93\u51fa\u5c06\u5360\u7528 RAM \u7684 200\u00d7150\u00d7100\u00d732 = 9600\u4e07 \u4f4d\uff08\u5927\u7ea6 11.4MB\uff09\u3002 \u8fd9\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\uff01 \u5982\u679c\u8bad\u7ec3\u6279\u6b21\u5305\u542b 100 \u4e2a\u5b9e\u4f8b\uff0c\u5219\u8be5\u5c42\u5c06\u5360\u7528\u8d85\u8fc7 1 GB \u7684 RAM\uff01 \u200b\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\uff08\u5373\u5bf9\u65b0\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\u65f6\uff09\uff0c\u4e00\u65e6\u4e0b\u4e00\u5c42\u8ba1\u7b97\u5b8c\u6bd5\uff0c\u4e00\u5c42\u6240\u5360\u7528\u7684 RAM \u5c31\u53ef\u4ee5\u88ab\u91ca\u653e\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4e24\u4e2a\u8fde\u7eed\u5c42\u6240\u9700\u7684 RAM \u6570\u91cf\u3002 \u4f46\u662f\u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u5728\u6b63\u5411\u4f20\u9012\u671f\u95f4\u8ba1\u7b97\u7684\u6240\u6709\u5185\u5bb9\u90fd\u9700\u8981\u88ab\u4fdd\u7559\u7528\u4e8e\u53cd\u5411\u4f20\u9012\uff0c\u6240\u4ee5\u6240\u9700\u7684 RAM \u91cf\uff08\u81f3\u5c11\uff09\u662f\u6240\u6709\u5c42\u6240\u9700\u7684 RAM \u603b\u91cf\u3002 \u200b \u5982\u679c\u7531\u4e8e\u5185\u5b58\u4e0d\u8db3\u9519\u8bef\u5bfc\u81f4\u8bad\u7ec3\u5d29\u6e83\uff0c\u5219\u53ef\u4ee5\u5c1d\u8bd5\u51cf\u5c11\u5c0f\u6279\u91cf\u5927\u5c0f\u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u6b65\u5e45\u964d\u4f4e\u7ef4\u5ea6\uff0c\u6216\u8005\u5220\u9664\u51e0\u4e2a\u56fe\u5c42\u3002 \u6216\u8005\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 16 \u4f4d\u6d6e\u70b9\u6570\u800c\u4e0d\u662f 32 \u4f4d\u6d6e\u70b9\u6570\u3002 \u6216\u8005\u4f60\u53ef\u4ee5\u5728\u591a\u4e2a\u8bbe\u5907\u4e0a\u5206\u53d1 CNN\u3002","title":"\u5185\u5b58\u9700\u6c42"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_7","text":"\u200b\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u5377\u79ef\u5c42\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6c60\u5316\u5c42\u5f88\u5bb9\u6613\u638c\u63e1\u3002 \u4ed6\u4eec\u7684\u76ee\u6807\u662f\u5bf9\u8f93\u5165\u56fe\u50cf\u8fdb\u884c\u4e8c\u6b21\u62bd\u6837\uff08\u5373\u6536\u7f29\uff09\u4ee5\u51cf\u5c11\u8ba1\u7b97\u8d1f\u62c5\uff0c\u5185\u5b58\u4f7f\u7528\u91cf\u548c\u53c2\u6570\u6570\u91cf\uff08\u4ece\u800c\u9650\u5236\u8fc7\u5ea6\u62df\u5408\u7684\u98ce\u9669\uff09\u3002 \u51cf\u5c11\u8f93\u5165\u56fe\u50cf\u7684\u5927\u5c0f\u4e5f\u4f7f\u5f97\u795e\u7ecf\u7f51\u7edc\u5bb9\u5fcd\u4e00\u70b9\u70b9\u7684\u56fe\u50cf\u53d8\u6362\uff08\u4f4d\u7f6e\u4e0d\u53d8\uff09\u3002 \u200b\u5c31\u50cf\u5728\u5377\u79ef\u56fe\u5c42\u4e2d\u4e00\u6837\uff0c\u6c60\u5316\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u8fde\u63a5\u5230\u524d\u4e00\u5c42\u4e2d\u6709\u9650\u6570\u91cf\u7684\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff0c\u4f4d\u4e8e\u4e00\u4e2a\u5c0f\u7684\u77e9\u5f62\u611f\u53d7\u91ce\u5185\u3002 \u60a8\u5fc5\u987b\u50cf\u4ee5\u524d\u4e00\u6837\u5b9a\u4e49\u5176\u5927\u5c0f\uff0c\u8de8\u5ea6\u548c\u586b\u5145\u7c7b\u578b\u3002 \u4f46\u662f\uff0c\u6c47\u96c6\u7684\u795e\u7ecf\u5143\u6ca1\u6709\u6743\u91cd; \u5b83\u6240\u505a\u7684\u53ea\u662f\u4f7f\u7528\u805a\u5408\u51fd\u6570\uff08\u5982\u6700\u5927\u503c\u6216\u5e73\u5747\u503c\uff09\u6765\u805a\u5408\u8f93\u5165\u3002 \u56fe 13-8 \u663e\u793a\u4e86\u6700\u5927\u6c60\u5c42\uff0c\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u6c60\u5316\u7c7b\u578b\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a2\u00d72\u7684\u6838\uff0c\u6b65\u5e45\u4e3a 2\uff0c\u6ca1\u6709\u586b\u5145\u3002 \u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u6bcf\u4e2a\u6838\u4e2d\u7684\u6700\u5927\u8f93\u5165\u503c\u624d\u4f1a\u8fdb\u5165\u4e0b\u4e00\u5c42\u3002 \u5176\u4ed6\u8f93\u5165\u88ab\u4e22\u5f03\u3002 \u200b\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u975e\u5e38\u5177\u6709\u7834\u574f\u6027\u7684\u5c42\uff1a\u5373\u4f7f\u53ea\u6709\u4e00\u4e2a 2\u00d72 \u7684\u6838\u548c 2 \u7684\u6b65\u5e45\uff0c\u8f93\u51fa\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u90fd\u4f1a\u51cf\u5c0f\u4e24\u500d\uff08\u6240\u4ee5\u5b83\u7684\u9762\u79ef\u5c06\u51cf\u5c11\u56db\u500d\uff09\uff0c\u4e00\u4e0b\u51cf\u5c11\u4e86 75% \u7684\u8f93\u5165\u503c \u200b\u6c60\u5316\u5c42\u901a\u5e38\u72ec\u7acb\u4e8e\u6bcf\u4e2a\u8f93\u5165\u901a\u9053\u5de5\u4f5c\uff0c\u56e0\u6b64\u8f93\u51fa\u6df1\u5ea6\u4e0e\u8f93\u5165\u6df1\u5ea6\u76f8\u540c\u3002 \u63a5\u4e0b\u6765\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u56fe\u50cf\u7684\u7a7a\u95f4\u7ef4\u5ea6\uff08\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff09\u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u662f\u901a\u9053\u6570\u76ee\u53ef\u4ee5\u51cf\u5c11\u3002 \u200b\u5728 TensorFlow \u4e2d\u5b9e\u73b0\u4e00\u4e2a\u6700\u5927\u6c60\u5c42\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002 \u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 2\u00d72 \u6838\u521b\u5efa\u6700\u5927\u6c60\u5316\u5c42\uff0c\u6b65\u5e45\u4e3a2\uff0c\u6ca1\u6709\u586b\u5145\uff0c\u7136\u540e\u5c06\u5176\u5e94\u7528\u4e8e\u6570\u636e\u96c6\u4e2d\u7684\u6240\u6709\u56fe\u50cf\uff1a import numpy as np from sklearn.datasets import load_sample_image import tensorflow as tf import matplotlib.pyplot as plt china = load_sample_image(\"china.jpg\") flower = load_sample_image(\"flower.jpg\") dataset = np.array([china, flower], dtype=np.float32) batch_size, height, width, channels = dataset.shape # Create 2 filters filters = np.zeros(shape=(7, 7, channels, 2), dtype=np.float32) filters[:, 3, :, 0] = 1 # vertical line filters[3, :, :, 1] = 1 # horizontal line X = tf.placeholder(tf.float32, shape=(None, height, width, channels)) max_pool = tf.nn.max_pool(X, ksize=[1,2,2,1], strides=[1,2,2,1],padding=\"VALID\") with tf.Session() as sess: output = sess.run(max_pool, feed_dict={X: dataset}) plt.imshow(output[0].astype(np.uint8)) # plot the output for the 1st image plt.show() \u200b ksize \u53c2\u6570\u5305\u542b\u6cbf\u8f93\u5165\u5f20\u91cf\u7684\u6240\u6709\u56db\u7ef4\u7684\u6838\u5f62\u72b6\uff1a [min-batch, height, width, channels] \u3002 TensorFlow \u76ee\u524d\u4e0d\u652f\u6301\u5728\u591a\u4e2a\u5b9e\u4f8b\u4e0a\u5408\u5e76\uff0c\u56e0\u6b64 ksize \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5fc5\u987b\u7b49\u4e8e 1\u3002\u6b64\u5916\uff0c\u5b83\u4e0d\u652f\u6301\u5728\u7a7a\u95f4\u7ef4\u5ea6\uff08\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff09\u548c\u6df1\u5ea6\u7ef4\u5ea6\u4e0a\u5408\u5e76\uff0c\u56e0\u6b64 ksize[1] \u548c ksize[2] \u90fd\u5fc5\u987b\u7b49\u4e8e 1\uff0c\u5426\u5219 ksize[3] \u5fc5\u987b\u7b49\u4e8e 1\u3002 \u200b\u8981\u521b\u5efa\u4e00\u4e2a\u5e73\u5747\u6c60\u5316\u5c42\uff0c\u53ea\u9700\u4f7f\u7528 avg_pool() \u51fd\u6570\u800c\u4e0d\u662f max_pool() \u3002 \u200b\u73b0\u5728\u4f60\u77e5\u9053\u6240\u6709\u7684\u6784\u5efa\u6a21\u5757\u6765\u521b\u5efa\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002 \u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u7ec4\u88c5\u5b83\u4eec\u3002","title":"\u6c60\u5316\u5c42"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#cnn","text":"\u200b\u5178\u578b\u7684 CNN \u4f53\u7cfb\u7ed3\u6784\u6709\u4e00\u4e9b\u5377\u79ef\u5c42\uff08\u6bcf\u4e00\u4e2a\u901a\u5e38\u8ddf\u7740\u4e00\u4e2a ReLU \u5c42\uff09\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6c60\u5316\u5c42\uff0c\u7136\u540e\u662f\u53e6\u5916\u51e0\u4e2a\u5377\u79ef\u5c42\uff08+ ReLU\uff09\uff0c\u7136\u540e\u662f\u53e6\u4e00\u4e2a\u6c60\u5316\u5c42\uff0c\u7b49\u7b49\u3002 \u968f\u7740\u7f51\u7edc\u7684\u8fdb\u5c55\uff0c\u56fe\u50cf\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4f46\u662f\u7531\u4e8e\u5377\u79ef\u5c42\u7684\u7f18\u6545\uff0c\u56fe\u50cf\u901a\u5e38\u4e5f\u4f1a\u8d8a\u6765\u8d8a\u6df1\uff08\u5373\u66f4\u591a\u7684\u7279\u5f81\u6620\u5c04\uff09\uff08\u89c1\u56fe 13-9\uff09\u3002 \u5728\u5806\u6808\u7684\u9876\u90e8\uff0c\u6dfb\u52a0\u7531\u51e0\u4e2a\u5168\u8fde\u63a5\u5c42\uff08+ ReLU\uff09\u7ec4\u6210\u7684\u5e38\u89c4\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4e14\u6700\u7ec8\u5c42\u8f93\u51fa\u9884\u6d4b\uff08\u4f8b\u5982\uff0c\u8f93\u51fa\u4f30\u8ba1\u7c7b\u522b\u6982\u7387\u7684 softmax \u5c42\uff09\u3002 \u200b \u4e00\u4e2a\u5e38\u89c1\u7684\u9519\u8bef\u662f\u4f7f\u7528\u592a\u5927\u7684\u5377\u79ef\u6838\u3002 \u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e24\u4e2a 3\u00d73 \u5185\u6838\u5806\u53e0\u5728\u4e00\u8d77\u6765\u83b7\u5f97\u4e0e 9\u00d79 \u5185\u6838\u76f8\u540c\u7684\u6548\u679c\uff0c\u8ba1\u7b97\u91cf\u66f4\u5c11\u3002 \u200b\u591a\u5e74\u6765\uff0c\u8fd9\u79cd\u57fa\u7840\u67b6\u6784\u7684\u53d8\u4f53\u5df2\u7ecf\u88ab\u5f00\u53d1\u51fa\u6765\uff0c\u5bfc\u81f4\u4e86\u8be5\u9886\u57df\u7684\u60ca\u4eba\u8fdb\u6b65\u3002 \u8fd9\u79cd\u8fdb\u6b65\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u8861\u91cf\u6807\u51c6\u662f\u6bd4\u8d5b\u4e2d\u7684\u9519\u8bef\u7387\uff0c\u6bd4\u5982 ILSVRC ImageNet \u7684\u6311\u6218\u3002 \u5728\u8fd9\u4e2a\u6bd4\u8d5b\u4e2d\uff0c\u56fe\u50cf\u5206\u7c7b\u7684\u4e94\u5927\u8bef\u5dee\u7387\u5728\u4e94\u5e74\u5185\u4ece 26% \u4e0b\u964d\u5230\u4ec5\u4ec5 3% \u5de6\u53f3\u3002 \u524d\u4e94\u4f4d\u9519\u8bef\u7387\u662f\u7cfb\u7edf\u524d5\u4f4d\u9884\u6d4b\u672a\u5305\u542b\u6b63\u786e\u7b54\u6848\u7684\u6d4b\u8bd5\u56fe\u50cf\u7684\u6570\u91cf\u3002 \u56fe\u50cf\u5f88\u5927\uff08256 \u50cf\u7d20\uff09\uff0c\u6709 1000 \u4e2a\u7c7b\uff0c\u5176\u4e2d\u4e00\u4e9b\u975e\u5e38\u5fae\u5999\uff08\u5c1d\u8bd5\u533a\u5206 120 \u4e2a\u72d7\u7684\u54c1\u79cd\uff09\u3002 \u67e5\u770b\u83b7\u5956\u4f5c\u54c1\u7684\u6f14\u53d8\u662f\u4e86\u89e3 CNN \u5982\u4f55\u5de5\u4f5c\u7684\u597d\u65b9\u6cd5\u3002 \u200b\u6211\u4eec\u5148\u6765\u770b\u770b\u7ecf\u5178\u7684 LeNet-5 \u67b6\u6784\uff081998 \u5e74\uff09\uff0c\u7136\u540e\u662f ILSVRC \u6311\u6218\u8d5b\u7684\u4e09\u540d\u83b7\u80dc\u8005 AlexNet\uff082012\uff09\uff0cGoogLeNet\uff082014\uff09\u548c ResNet\uff082015\uff09\u3002 \u200b\u5176\u4ed6\u89c6\u89c9\u4efb\u52a1\u5728\u5176\u4ed6\u89c6\u89c9\u4efb\u52a1\u4e2d\uff0c\u5982\u7269\u4f53\u68c0\u6d4b\u548c\u5b9a\u4f4d\u4ee5\u53ca\u56fe\u50cf\u5206\u5272\uff0c\u4e5f\u53d6\u5f97\u4e86\u60ca\u4eba\u7684\u8fdb\u5c55\u3002 \u5728\u7269\u4f53\u68c0\u6d4b\u548c\u5b9a\u4f4d\u4e2d\uff0c\u795e\u7ecf\u7f51\u7edc\u901a\u5e38\u8f93\u51fa\u56fe\u50cf\u4e2d\u5404\u79cd\u7269\u4f53\u5468\u56f4\u7684\u4e00\u7cfb\u5217\u8fb9\u754c\u6846\u3002 \u4f8b\u5982\uff0c\u53c2 \u89c1Maxine Oquab \u7b49\u4eba\u7684 2015 \u5e74\u8bba\u6587\uff0c\u8be5\u8bba\u6587\u4e3a\u6bcf\u4e2a\u5ba2\u4f53\u7c7b\u522b\u8f93\u51fa\u70ed\u56fe\uff0c\u6216\u8005 Russell Stewart \u7b49\u4eba\u7684 2015 \u5e74\u8bba\u6587\uff0c\u8be5\u8bba\u6587\u7ed3\u5408\u4f7f\u7528 CNN \u6765\u68c0\u6d4b\u4eba\u8138\uff0c\u5e76\u4f7f\u7528\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\u6765\u8f93\u51fa \u56f4\u7ed5\u5b83\u4eec\u7684\u4e00\u7cfb\u5217\u8fb9\u754c\u6846\u3002 \u5728\u56fe\u50cf\u5206\u5272\u4e2d\uff0c\u7f51\u7edc\u8f93\u51fa\u56fe\u50cf\uff08\u901a\u5e38\u4e0e\u8f93\u5165\u5927\u5c0f\u76f8\u540c\uff09\uff0c\u5176\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u6307\u793a\u76f8\u5e94\u8f93\u5165\u50cf\u7d20\u6240\u5c5e\u7684\u5bf9\u8c61\u7684\u7c7b\u522b\u3002 \u4f8b\u5982\uff0c\u67e5\u770b Evan Shelhamer \u7b49\u4eba\u7684 2016 \u5e74\u8bba\u6587\u3002","title":"CNN \u67b6\u6784"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#lenet-5","text":"\u200bLeNet-5 \u67b6\u6784\u4e5f\u8bb8\u662f\u6700\u5e7f\u4e3a\u4eba\u77e5\u7684 CNN \u67b6\u6784\u3002 \u5982\u524d\u6240\u8ff0\uff0c\u5b83\u662f\u7531 Yann LeCun \u4e8e 1998 \u5e74\u521b\u5efa\u7684\uff0c\u5e7f\u6cdb\u7528\u4e8e\u624b\u5199\u6570\u5b57\u8bc6\u522b\uff08MNIST\uff09\u3002 \u5b83\u7531\u8868 13-1 \u6240\u793a\u7684\u5c42\u7ec4\u6210\u3002 \u6709\u4e00\u4e9b\u989d\u5916\u7684\u7ec6\u8282\u8981\u6ce8\u610f\uff1a MNIST \u56fe\u50cf\u662f 28\u00d728 \u50cf\u7d20\uff0c\u4f46\u662f\u5b83\u4eec\u88ab\u96f6\u586b\u5145\u5230 32\u00d732 \u50cf\u7d20\uff0c\u5e76\u4e14\u5728\u88ab\u8f93\u5165\u5230\u7f51\u7edc\u4e4b\u524d\u88ab\u5f52\u4e00\u5316\u3002 \u7f51\u7edc\u7684\u5176\u4f59\u90e8\u5206\u4e0d\u4f7f\u7528\u4efb\u4f55\u586b\u5145\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u968f\u7740\u56fe\u50cf\u5728\u7f51\u7edc\u4e2d\u7684\u8fdb\u5c55\uff0c\u5927\u5c0f\u4e0d\u65ad\u7f29\u5c0f\u3002 \u5e73\u5747\u6c60\u5316\u5c42\u6bd4\u5e73\u5e38\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\uff1a\u6bcf\u4e2a\u795e\u7ecf\u5143\u8ba1\u7b97\u8f93\u5165\u7684\u5e73\u5747\u503c\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u4e58\u4ee5\u4e00\u4e2a\u53ef\u5b66\u4e60\u7684\u7cfb\u6570\uff08\u6bcf\u4e2a\u7279\u5f81\u6620\u5c04\u4e00\u4e2a\uff09\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u53ef\u5b66\u4e60\u7684\u504f\u5dee\u9879\uff08\u6bcf\u4e2a\u7279\u5f81\u6620\u5c04\u4e00\u4e2a\uff09\uff0c\u7136\u540e\u6700\u540e\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u3002 C3 \u56fe\u4e2d\u7684\u5927\u591a\u6570\u795e\u7ecf\u5143\u4ec5\u5728\u4e09\u4e2a\u6216\u56db\u4e2a S2 \u56fe\uff08\u800c\u4e0d\u662f\u5168\u90e8\u516d\u4e2a S2 \u56fe\uff09\u4e2d\u8fde\u63a5\u5230\u795e\u7ecf\u5143\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u539f\u59cb\u8bba\u6587\u4e2d\u7684\u8868 1\u3002 \u8f93\u51fa\u5c42\u6709\u70b9\u7279\u6b8a\uff1a\u6bcf\u4e2a\u795e\u7ecf\u5143\u4e0d\u662f\u8ba1\u7b97\u8f93\u5165\u548c\u6743\u5411\u91cf\u7684\u70b9\u79ef\uff0c\u800c\u662f\u8f93\u51fa\u5176\u8f93\u5165\u5411\u91cf\u548c\u5176\u6743\u5411\u91cf\u4e4b\u95f4\u7684\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\u7684\u5e73\u65b9\u3002 \u6bcf\u4e2a\u8f93\u51fa\u6d4b\u91cf\u56fe\u50cf\u5c5e\u4e8e\u7279\u5b9a\u6570\u5b57\u7c7b\u522b\u7684\u591a\u5c11\u3002 \u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u73b0\u5728\u662f\u9996\u9009\uff0c\u56e0\u4e3a\u5b83\u66f4\u591a\u5730\u60e9\u7f5a\u4e0d\u597d\u7684\u9884\u6d4b\uff0c\u4ea7\u751f\u66f4\u5927\u7684\u68af\u5ea6\uff0c\u4ece\u800c\u66f4\u5feb\u5730\u6536\u655b\u3002 Yann LeCun \u7684\u7f51\u7ad9\uff08\u201cLENET\u201d\u90e8\u5206\uff09\u5c55\u793a\u4e86 LeNet-5 \u5206\u7c7b\u6570\u5b57\u7684\u5f88\u597d\u7684\u6f14\u793a\u3002","title":"LeNet-5"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#alexnet","text":"\u200bAlexNet CNN \u67b6\u6784\u8d62\u5f97\u4e86 2012 \u5e74\u7684 ImageNet ILSVRC \u6311\u6218\u8d5b\uff1a\u5b83\u8fbe\u5230\u4e86 17% \u7684 top-5 \u7684\u9519\u8bef\u7387\uff0c\u800c\u7b2c\u4e8c\u540d\u9519\u8bef\u7387\u53ea\u6709 26%\uff01 \u5b83\u7531 Alex Krizhevsky\uff08\u56e0\u6b64\u800c\u5f97\u540d\uff09\uff0cIlya Sutskever \u548c Geoffrey Hinton \u5f00\u53d1\u3002 \u5b83\u4e0e LeNet-5 \u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u66f4\u5927\u66f4\u6df1\uff0c\u5b83\u662f\u7b2c\u4e00\u4e2a\u5c06\u5377\u79ef\u5c42\u76f4\u63a5\u5806\u53e0\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u4e2a\u5377\u79ef\u5c42\u9876\u90e8\u5806\u53e0\u4e00\u4e2a\u6c60\u5316\u5c42\u3002 \u8868 13-2 \u4ecb\u7ecd\u4e86\u8fd9\u79cd\u67b6\u6784\u3002 \u200b\u4e3a\u4e86\u51cf\u5c11\u8fc7\u62df\u5408\uff0c\u4f5c\u8005\u4f7f\u7528\u4e86\u524d\u9762\u7ae0\u8282\u4e2d\u8ba8\u8bba\u7684\u4e24\u79cd\u6b63\u5219\u5316\u6280\u672f\uff1a\u9996\u5148\u4ed6\u4eec\u5728\u8bad\u7ec3\u671f\u95f4\u5c06\u4e22\u5931\u7387\uff08dropout \u7387\u4e3a 50%\uff09\u5e94\u7528\u4e8e\u5c42 F8 \u548c F9 \u7684\u8f93\u51fa\u3002\u5176\u6b21\uff0c\u4ed6\u4eec\u901a\u8fc7\u968f\u673a\u5bf9\u8bad\u7ec3\u56fe\u50cf\u8fdb\u884c\u5404\u79cd\u504f\u79fb\uff0c\u6c34\u5e73\u7ffb\u8f6c\u548c\u6539\u53d8\u7167\u660e\u6761\u4ef6\u6765\u8fdb\u884c\u6570\u636e\u589e\u5f3a\u3002 \u200bAlexNet \u8fd8\u5728\u5c42 C1 \u548c C3 \u7684 ReLU \u6b65\u9aa4\u4e4b\u540e\u7acb\u5373\u4f7f\u7528\u7ade\u4e89\u6807\u51c6\u5316\u6b65\u9aa4\uff0c\u79f0\u4e3a\u5c40\u90e8\u54cd\u5e94\u6807\u51c6\u5316\uff08local response normalization\uff09\u3002 \u8fd9\u79cd\u6807\u51c6\u5316\u5f62\u5f0f\u4f7f\u5f97\u5728\u76f8\u540c\u7684\u4f4d\u7f6e\u7684\u795e\u7ecf\u5143\u88ab\u6700\u5f3a\u70c8\u7684\u6fc0\u6d3b\u4f46\u662f\u5728\u76f8\u90bb\u7684\u7279\u5f81\u6620\u5c04\u4e2d\u6291\u5236\u795e\u7ecf\u5143\uff08\u5728\u751f\u7269\u795e\u7ecf\u5143\u4e2d\u89c2\u5bdf\u5230\u4e86\u8fd9\u79cd\u7ade\u4e89\u6fc0\u6d3b\uff09\u3002 \u8fd9\u9f13\u52b1\u4e0d\u540c\u7684\u7279\u5f81\u6620\u5c04\u7279\u6b8a\u5316\uff0c\u8feb\u4f7f\u5b83\u4eec\u5206\u5f00\uff0c\u5e76\u8ba9\u4ed6\u4eec\u63a2\u7d22\u66f4\u5e7f\u6cdb\u7684\u7279\u5f81\uff0c\u6700\u7ec8\u63d0\u5347\u6cdb\u5316\u80fd\u529b\u3002 \u516c\u5f0f 13-2 \u663e\u793a\u4e86\u5982\u4f55\u5e94\u7528 LRN\u3002 \u662f\u4f4d\u4e8e\u7279\u5f81\u6620\u5c04 i \u7684\u795e\u7ecf\u5143\u7684\u6807\u51c6\u5316\u8f93\u51fa\uff0c\u5728\u67d0\u884c u \u548c\u5217 v \uff08\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u7b49\u5f0f\u4e2d\u6211\u4eec\u53ea\u8003\u8651\u4f4d\u4e8e\u8fd9\u4e2a\u884c\u548c\u5217\u7684\u795e\u7ecf\u5143\uff0c\u6240\u4ee5 u \u548c v \u6ca1\u6709\u663e\u793a\uff09\u3002 \u662f\u5728 ReLU \u6b65\u9aa4\u4e4b\u540e\uff0c\u4f46\u5728\u5f52\u4e00\u5316\u4e4b\u524d\u7684\u90a3\u4e2a\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u3002 k \uff0c \u03b1 \uff0c \u03b2 \u548c r \u662f\u8d85\u53c2\u6570\u3002 k \u79f0\u4e3a\u504f\u7f6e\uff0c r \u79f0\u4e3a\u6df1\u5ea6\u534a\u5f84\u3002 \u662f\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\u3002 \u200b\u4f8b\u5982\uff0c\u5982\u679c r = 2 \u4e14\u795e\u7ecf\u5143\u5177\u6709\u5f3a\u6fc0\u6d3b\uff0c\u5219\u5c06\u6291\u5236\u4f4d\u4e8e\u5176\u4e0a\u4e0b\u7684\u7279\u5f81\u6620\u5c04\u4e2d\u7684\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u3002 \u200b\u5728 AlexNet \u4e2d\uff0c\u8d85\u53c2\u6570\u8bbe\u7f6e\u5982\u4e0b\uff1a r = 2 \uff0c \u03b1= 0.00002 \uff0c \u03b2= 0.75 \uff0c k = 1 \u3002\u8fd9\u4e2a\u6b65\u9aa4\u53ef\u4ee5\u4f7f\u7528 TensorFlow \u7684 local_response_normalization() \u64cd\u4f5c\u6765\u5b9e\u73b0\u3002 \u200bAlexNet \u7684\u4e00\u4e2a\u540d\u4e3a ZF Net \u7684\u53d8\u4f53\u7531 Matthew Zeiler \u548c Rob Fergus \u5f00\u53d1\uff0c\u8d62\u5f97\u4e86 2013 \u5e74 ILSVRC \u7684\u6311\u6218\u3002 \u5b83\u57fa\u672c\u4e0a\u662f AlexNet \u7684\u4e00\u4e9b\u8c03\u6574\u7684\u8d85\u53c2\u6570\uff08\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\uff0c\u5185\u6838\u5927\u5c0f\uff0c\u6b65\u5e45\u7b49\uff09\u3002","title":"AlexNet"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#googlenet","text":"\u200bGoogLeNet \u67b6\u6784\u662f\u7531 Christian Szegedy \u7b49\u4eba\u5f00\u53d1\u7684\u3002 \u6765\u81ea Google Research\uff0c\u901a\u8fc7\u4f4e\u4e8e 7% \u7684 top-5 \u9519\u8bef\u7387\uff0c\u8d62\u5f97\u4e86 ILSVRC 2014 \u7684\u6311\u6218\u8d5b\u3002 \u8fd9\u4e2a\u4f1f\u5927\u7684\u8868\u73b0\u5f88\u5927\u7a0b\u5ea6\u4e0a\u56e0\u4e3a\u5b83\u6bd4\u4ee5\u524d\u7684 CNN \u7f51\u7edc\u66f4\u6df1\uff08\u89c1\u56fe 13-11\uff09\u3002 \u8fd9\u662f\u901a\u8fc7\u79f0\u4e3a\u521d\u59cb\u6a21\u5757\uff08inception modules\uff09\u7684\u5b50\u7f51\u7edc\u5b9e\u73b0\u7684\uff0c\u8fd9\u4f7f\u5f97 GoogLeNet \u6bd4\u4ee5\u524d\u7684\u67b6\u6784\u66f4\u6709\u6548\u5730\u4f7f\u7528\u53c2\u6570\uff1a\u5b9e\u9645\u4e0a\uff0cGoogLeNet \u7684\u53c2\u6570\u6bd4 AlexNet \u5c11\u4e86 10 \u500d\uff08\u7ea6 600 \u4e07\u800c\u4e0d\u662f 6000 \u4e07\uff09\u3002 \u200b\u521d\u59cb\u6a21\u5757\u7684\u67b6\u6784\u5982\u56fe 13-10 \u6240\u793a\u3002 \u7b26\u53f7 3\u00d73 + 2(S) \u8868\u793a\u8be5\u5c42\u4f7f\u7528 3\u00d73 \u5185\u6838\uff0c\u6b65\u5e45 2 \u548c SAME \u586b\u5145\u3002 \u8f93\u5165\u4fe1\u53f7\u9996\u5148\u88ab\u590d\u5236\u5e76\u9988\u9001\u5230\u56db\u4e2a\u4e0d\u540c\u7684\u5c42\u3002 \u6240\u6709\u5377\u79ef\u5c42\u90fd\u4f7f\u7528 ReLU \u6fc0\u6d3b\u529f\u80fd\u3002 \u8bf7\u6ce8\u610f\uff0c\u7b2c\u4e8c\u7ec4\u5377\u79ef\u5c42\u4f7f\u7528\u4e0d\u540c\u7684\u5185\u6838\u5927\u5c0f\uff08 1\u00d71 \uff0c 3\u00d73 \u548c 5\u00d75 \uff09\uff0c\u5141\u8bb8\u5b83\u4eec\u4ee5\u4e0d\u540c\u7684\u6bd4\u4f8b\u6355\u83b7\u56fe\u6848\u3002 \u8fd8\u8981\u6ce8\u610f\uff0c\u6bcf\u4e00\u5c42\u90fd\u4f7f\u7528\u4e86\u8de8\u5ea6\u4e3a1\u548cSAME\u586b\u5145\u7684\uff08\u5373\u4f7f\u662f\u6700\u5927\u7684\u6c60\u5316\u5c42\uff09\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u8f93\u51fa\u5168\u90fd\u5177\u6709\u4e0e\u5176\u8f93\u5165\u76f8\u540c\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u3002\u8fd9\u4f7f\u5f97\u5c06\u6240\u6709\u8f93\u51fa\u5728\u6700\u540e\u7684\u6df1\u5ea6\u8fde\u63a5\u5c42\uff08depth concat layer\uff09\u4e0a\u6cbf\u7740\u6df1\u5ea6\u65b9\u5411\u5806\u53e0\u6210\u4e3a\u53ef\u80fd\uff08\u5373\uff0c\u5806\u53e0\u6765\u81ea\u6240\u6709\u56db\u4e2a\u9876\u90e8\u5377\u79ef\u5c42\u7684\u7279\u5f81\u6620\u5c04\uff09\u3002 \u8fd9\u4e2a\u8fde\u63a5\u5c42\u53ef\u4ee5\u5728 TensorFlow \u4e2d\u4f7f\u7528 concat() \u64cd\u4f5c\u5b9e\u73b0\uff0c\u5176\u4e2d axis = 3 \uff08\u8f74 3 \u662f\u6df1\u5ea6\uff09\u3002 \u200b\u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u521d\u59cb\u6a21\u5757\u5177\u6709 1\u00d71 \u5185\u6838\u7684\u5377\u79ef\u5c42\u3002 \u5f53\u7136\u8fd9\u4e9b\u56fe\u5c42\u4e0d\u80fd\u6355\u83b7\u4efb\u4f55\u529f\u80fd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e00\u6b21\u53ea\u80fd\u770b\u4e00\u4e2a\u50cf\u7d20\uff1f \u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u5c42\u6b21\u6709\u4e24\u4e2a\u76ee\u7684\uff1a \u200b\u9996\u5148\uff0c\u5b83\u4eec\u88ab\u914d\u7f6e\u4e3a\u8f93\u51fa\u6bd4\u8f93\u5165\u5c11\u5f97\u591a\u7684\u7279\u5f81\u6620\u5c04\uff0c\u6240\u4ee5\u5b83\u4eec\u4f5c\u4e3a\u74f6\u9888\u5c42\uff0c\u610f\u5473\u7740\u5b83\u4eec\u964d\u4f4e\u4e86\u7ef4\u5ea6\u3002 \u5728 3\u00d73 \u548c 5\u00d75 \u5377\u79ef\u4e4b\u524d\uff0c\u8fd9\u662f\u7279\u522b\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5728\u8ba1\u7b97\u4e0a\u662f\u975e\u5e38\u8017\u8d39\u5185\u5b58\u7684\u5c42\u3002 \u200b\u5176\u6b21\uff0c\u6bcf\u4e00\u4e2a\u5377\u79ef\u5c42\u5bf9\uff08 [1 \u00d7 1, 3 \u00d7 3] \u548c [1 \u00d7 1, 5 \u00d7 5] \u8868\u73b0\u5730\u50cf\u4e00\u4e2a\u5f3a\u5927\u7684\u5377\u79ef\u5c42\uff0c\u53ef\u4ee5\u6355\u6349\u5230\u66f4\u591a\u7684\u590d\u6742\u7684\u6a21\u5f0f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e00\u5bf9\u5377\u79ef\u5c42\u4e0d\u662f\u5728\u56fe\u50cf\u4e0a\u626b\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u5206\u7c7b\u5668\uff08\u5c31\u50cf\u5355\u4e2a\u5377\u79ef\u5c42\u4e00\u6837\uff09\uff0c\u800c\u662f\u5728\u56fe\u50cf\u4e0a\u626b\u63cf\u4e00\u4e2a\u53cc\u5c42\u795e\u7ecf\u7f51\u7edc\u3002 \u200b\u7b80\u800c\u8a00\u4e4b\uff0c\u60a8\u53ef\u4ee5\u5c06\u6574\u4e2a\u521d\u59cb\u6a21\u5757\u89c6\u4e3a\u7c7b\u56fa\u9187\u5377\u79ef\u5c42\uff0c\u80fd\u591f\u8f93\u51fa\u6355\u6349\u5404\u79cd\u5c3a\u5ea6\u590d\u6742\u6a21\u5f0f\u7684\u7279\u5f81\u6620\u5c04\u3002 \u200b \u6bcf\u4e2a\u5377\u79ef\u5c42\u7684\u5377\u79ef\u6838\u7684\u6570\u91cf\u662f\u4e00\u4e2a\u8d85\u53c2\u6570\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u6709\u516d\u4e2a\u8d85\u53c2\u6570\u6765\u8c03\u6574\u4f60\u6dfb\u52a0\u7684\u6bcf\u4e2a\u521d\u59cb\u5c42\u3002 \u200b\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b GoogLeNet CNN \u7684\u67b6\u6784\uff08\u89c1\u56fe 13-11\uff09\u3002 \u5b83\u975e\u5e38\u6df1\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u5c06\u5b83\u5206\u6210\u4e09\u5217\uff0c\u4f46\u662f GoogLeNet \u5b9e\u9645\u4e0a\u662f\u4e00\u5217\uff0c\u5305\u62ec\u4e5d\u4e2a\u521d\u59cb\u6a21\u5757\uff08\u5e26\u6709\u65cb\u8f6c\u9876\u7aef\u7684\u6846\uff09\uff0c\u6bcf\u4e2a\u6a21\u5757\u5b9e\u9645\u4e0a\u5305\u542b\u4e09\u5c42\u3002\u6bcf\u4e2a\u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\u8f93\u51fa\u7684\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\u663e\u793a\u5728\u5185\u6838\u5927\u5c0f\u524d\u3002 \u521d\u59cb\u6a21\u5757\u4e2d\u7684\u516d\u4e2a\u6570\u5b57\u8868\u793a\u6a21\u5757\u4e2d\u6bcf\u4e2a\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\uff08\u4e0e\u56fe 13-10 \u4e2d\u7684\u987a\u5e8f\u76f8\u540c\uff09\u3002 \u8bf7\u6ce8\u610f\uff0c\u6240\u6709\u7684\u5377\u79ef\u5c42\u90fd\u4f7f\u7528 ReLU \u6fc0\u6d3b\u51fd\u6570\u3002 \u8ba9\u6211\u4eec\u6765\u8fc7\u4e00\u904d\u8fd9\u4e2a\u7f51\u7edc\uff1a \u524d\u4e24\u5c42\u5c06\u56fe\u50cf\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u9664\u4ee5 4\uff08\u4f7f\u5176\u9762\u79ef\u9664\u4ee5 16\uff09\uff0c\u4ee5\u51cf\u5c11\u8ba1\u7b97\u8d1f\u62c5\u3002 \u7136\u540e\uff0c\u5c40\u90e8\u54cd\u5e94\u6807\u51c6\u5316\u5c42\u786e\u4fdd\u524d\u9762\u7684\u5c42\u5b66\u4e60\u5404\u79cd\u5404\u6837\u7684\u529f\u80fd\uff08\u5982\u524d\u6240\u8ff0\uff09 \u63a5\u4e0b\u6765\u662f\u4e24\u4e2a\u5377\u79ef\u5c42\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u50cf\u74f6\u9888\u5c42\u4e00\u6837\u3002 \u6b63\u5982\u524d\u9762\u6240\u89e3\u91ca\u7684\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e00\u5bf9\u770b\u4f5c\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u66f4\u667a\u80fd\u7684\u5377\u79ef\u5c42\u3002 \u518d\u6b21\uff0c\u5c40\u90e8\u54cd\u5e94\u6807\u51c6\u5316\u5c42\u786e\u4fdd\u4e86\u5148\u524d\u7684\u5c42\u6355\u6349\u5404\u79cd\u5404\u6837\u7684\u6a21\u5f0f\u3002 \u63a5\u4e0b\u6765\uff0c\u6700\u5927\u6c60\u5316\u5c42\u5c06\u56fe\u50cf\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u51cf\u5c11 2\uff0c\u518d\u6b21\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u3002 \u7136\u540e\u662f\u4e5d\u4e2a\u521d\u59cb\u6a21\u5757\u7684\u5806\u53e0\uff0c\u4e0e\u51e0\u4e2a\u6700\u5927\u6c60\u5c42\u4ea4\u7ec7\uff0c\u4ee5\u964d\u4f4e\u7ef4\u5ea6\u5e76\u52a0\u901f\u7f51\u7edc\u3002 \u63a5\u4e0b\u6765\uff0c\u5e73\u5747\u6c60\u5316\u5c42\u4f7f\u7528\u5177\u6709 VALID \u586b\u5145\u7684\u7279\u5f81\u6620\u5c04\u7684\u5927\u5c0f\u7684\u5185\u6838\uff0c\u8f93\u51fa 1\u00d71 \u7279\u5f81\u6620\u5c04\uff1a\u8fd9\u79cd\u4ee4\u4eba\u60ca\u8bb6\u7684\u7b56\u7565\u88ab\u79f0\u4e3a\u5168\u5c40\u5e73\u5747\u6c60\u5316\u3002 \u5b83\u6709\u6548\u5730\u5f3a\u5236\u4ee5\u524d\u7684\u56fe\u5c42\u4ea7\u751f\u7279\u5f81\u6620\u5c04\uff0c\u8fd9\u4e9b\u7279\u5f81\u6620\u5c04\u5b9e\u9645\u4e0a\u662f\u6bcf\u4e2a\u76ee\u6807\u7c7b\u7684\u7f6e\u4fe1\u56fe\uff08\u56e0\u4e3a\u5176\u4ed6\u7c7b\u578b\u7684\u529f\u80fd\u5c06\u88ab\u5e73\u5747\u6b65\u9aa4\u7834\u574f\uff09\u3002 \u8fd9\u6837\u5728 CNN \u7684\u9876\u90e8\u5c31\u4e0d\u5fc5\u6709\u6709\u51e0\u4e2a\u5168\u8fde\u63a5\u5c42\uff08\u5982 AlexNet\uff09\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u7f51\u7edc\u4e2d\u7684\u53c2\u6570\u6570\u91cf\uff0c\u5e76\u51cf\u5c11\u4e86\u4e86\u8fc7\u5ea6\u62df\u5408\u7684\u98ce\u9669\u3002 \u6700\u540e\u4e00\u5c42\u662f\u4e0d\u8a00\u81ea\u660e\u7684\uff1a\u6b63\u5219\u5316 drop out\uff0c\u7136\u540e\u662f\u5177\u6709 softmax \u6fc0\u6d3b\u51fd\u6570\u7684\u5b8c\u5168\u8fde\u63a5\u5c42\u6765\u8f93\u51fa\u4f30\u8ba1\u7c7b\u7684\u6982\u7387\u3002 \u200b\u8fd9\u4e2a\u56fe\u7565\u6709\u7b80\u5316\uff1a\u539f\u6765\u7684 GoogLeNet \u67b6\u6784\u8fd8\u5305\u62ec\u4e24\u4e2a\u63d2\u5728\u7b2c\u4e09\u548c\u7b2c\u516d\u4e2a\u521d\u59cb\u6a21\u5757\u4e4b\u4e0a\u7684\u8f85\u52a9\u5206\u7c7b\u5668\u3002 \u5b83\u4eec\u90fd\u7531\u4e00\u4e2a\u5e73\u5747\u6c60\u5c42\uff0c\u4e00\u4e2a\u5377\u79ef\u5c42\uff0c\u4e24\u4e2a\u5168\u8fde\u63a5\u5c42\u548c\u4e00\u4e2a softmax \u6fc0\u6d3b\u5c42\u7ec4\u6210\u3002 \u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u4ed6\u4eec\u7684\u635f\u5931\uff08\u7f29\u5c0f\u4e86 70%\uff09\u52a0\u5728\u4e86\u6574\u4f53\u635f\u5931\u4e0a\u3002 \u76ee\u6807\u662f\u89e3\u51b3\u6d88\u5931\u68af\u5ea6\u95ee\u9898\uff0c\u6b63\u5219\u5316\u7f51\u7edc\u3002 \u4f46\u662f\uff0c\u7ed3\u679c\u663e\u793a\u5176\u6548\u679c\u76f8\u5bf9\u5c0f\u3002","title":"GoogLeNet"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#resnet","text":"\u200b\u6700\u540e\u662f\uff0c2015 \u5e74 ILSVRC \u6311\u6218\u8d5b\u7684\u8d62\u5bb6 Kaiming He \u7b49\u4eba\u5f00\u53d1\u7684 Residual Network\uff08\u6216 ResNet\uff09\uff0c\u8be5\u7f51\u7edc\u7684 top-5 \u8bef\u7387\u4f4e\u5230\u60ca\u4eba\u7684 3.6%\uff0c\u5b83\u4f7f\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u6df1\u7684 CNN\uff0c\u7531 152 \u5c42\u7ec4\u6210\u3002 \u80fd\u591f\u8bad\u7ec3\u5982\u6b64\u6df1\u7684\u7f51\u7edc\u7684\u5173\u952e\u662f\u4f7f\u7528\u8df3\u8fc7\u8fde\u63a5\uff08skip connection\uff0c\u4e5f\u79f0\u4e3a\u5feb\u6377\u8fde\u63a5\uff09\uff1a\u4e00\u4e2a\u5c42\u7684\u8f93\u5165\u4fe1\u53f7\u4e5f\u88ab\u6dfb\u52a0\u5230\u4f4d\u4e8e\u4e0b\u4e00\u5c42\u7684\u8f93\u51fa\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u4e3a\u4ec0\u4e48\u8fd9\u662f\u6709\u7528\u7684\u3002 \u200b\u5f53\u8bad\u7ec3\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u76ee\u6807\u662f\u4f7f\u5176\u6a21\u62df\u4e00\u4e2a\u76ee\u6807\u51fd\u6570 h(x) \u3002 \u5982\u679c\u5c06\u8f93\u5165x\u6dfb\u52a0\u5230\u7f51\u7edc\u7684\u8f93\u51fa\u4e2d\uff08\u5373\u6dfb\u52a0\u8df3\u8fc7\u8fde\u63a5\uff09\uff0c\u90a3\u4e48\u7f51\u7edc\u5c06\u88ab\u8feb\u6a21\u62df f(x)= h(x) - x \u800c\u4e0d\u662f h(x) \u3002 \u8fd9\u88ab\u79f0\u4e3a\u6b8b\u7559\u5b66\u4e60\uff08\u89c1\u56fe 13-12\uff09\u3002 \u200b\u5f53\u4f60\u521d\u59cb\u5316\u4e00\u4e2a\u666e\u901a\u7684\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u5b83\u7684\u6743\u91cd\u63a5\u8fd1\u4e8e\u96f6\uff0c\u6240\u4ee5\u7f51\u7edc\u53ea\u8f93\u51fa\u63a5\u8fd1\u96f6\u7684\u503c\u3002 \u5982\u679c\u6dfb\u52a0\u8df3\u8fc7\u8fde\u63a5\uff0c\u5219\u751f\u6210\u7684\u7f51\u7edc\u53ea\u8f93\u51fa\u5176\u8f93\u5165\u7684\u526f\u672c; \u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u6700\u521d\u5bf9\u8eab\u4efd\u51fd\u6570\u8fdb\u884c\u5efa\u6a21\u3002 \u5982\u679c\u76ee\u6807\u51fd\u6570\u4e0e\u8eab\u4efd\u51fd\u6570\u975e\u5e38\u63a5\u8fd1\uff08\u5e38\u5e38\u662f\u8fd9\u79cd\u60c5\u51b5\uff09\uff0c\u8fd9\u5c06\u5927\u5927\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\u3002 \u200b\u800c\u4e14\uff0c\u5982\u679c\u6dfb\u52a0\u4e86\u8bb8\u591a\u8df3\u8f6c\u8fde\u63a5\uff0c\u5373\u4f7f\u51e0\u4e2a\u5c42\u8fd8\u6ca1\u6709\u5f00\u59cb\u5b66\u4e60\uff0c\u7f51\u7edc\u4e5f\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\uff08\u89c1\u56fe 13-13\uff09\u3002 \u7531\u4e8e\u8df3\u8fc7\u8fde\u63a5\uff0c\u4fe1\u53f7\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u901a\u8fc7\u6574\u4e2a\u7f51\u7edc\u3002 \u6df1\u5ea6\u5269\u4f59\u7f51\u7edc\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u5806\u5269\u4f59\u5355\u4f4d\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5269\u4f59\u5355\u4f4d\u662f\u4e00\u4e2a\u6709\u8df3\u8fc7\u8fde\u63a5\u7684\u5c0f\u578b\u795e\u7ecf\u7f51\u7edc\u3002 \u200b\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b ResNet \u7684\u67b6\u6784\uff08\u89c1\u56fe 13-14\uff09\u3002 \u8fd9\u5b9e\u9645\u4e0a\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u7b80\u5355\u3002 \u5b83\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u4e0eGoogLeNet\u5b8c\u5168\u4e00\u6837\uff08\u9664\u4e86\u6ca1\u6709 dropout \u5c42\uff09\uff0c\u800c\u5728\u4e24\u8005\u4e4b\u95f4\u53ea\u662f\u4e00\u5806\u5f88\u7b80\u5355\u7684\u6b8b\u4f59\u5355\u4f4d\u3002 \u6bcf\u4e2a\u6b8b\u5dee\u5355\u5143\u7531\u4e24\u4e2a\u5377\u79ef\u5c42\u7ec4\u6210\uff0c\u4f7f\u7528 3\u00d73 \u7684\u5185\u6838\u548c\u4fdd\u5b58\u7a7a\u95f4\u7ef4\u5ea6\uff08\u6b65\u5e45 1\uff0c SAME \u586b\u5145\uff09\uff0c\u6279\u91cf\u5f52\u4e00\u5316\uff08BN\uff09\u548c ReLU \u6fc0\u6d3b\u3002 \u200b\u9700\u8981\u6ce8\u610f\u7684\u662f\u7279\u5f81\u6620\u5c04\u7684\u6570\u91cf\u6bcf\u9694\u51e0\u4e2a\u6b8b\u5dee\u5355\u4f4d\u4f1a\u52a0\u500d\uff0c\u540c\u65f6\u5b83\u4eec\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u51cf\u534a\uff08\u4f7f\u7528\u6b65\u5e45 2 \u5377\u79ef\u5c42\uff09\u3002 \u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u8f93\u5165\u4e0d\u80fd\u76f4\u63a5\u6dfb\u52a0\u5230\u5269\u4f59\u5355\u5143\u7684\u8f93\u51fa\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u5177\u6709\u76f8\u540c\u7684\u5f62\u72b6\uff08\u4f8b\u5982\uff0c\u6b64\u95ee\u9898\u5f71\u54cd\u56fe 13-14 \u4e2d\u7684\u865a\u7ebf\u7bad\u5934\u8868\u793a\u7684\u8df3\u8fc7\u8fde\u63a5\uff09\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8f93\u5165\u901a\u8fc7\u4e00\u4e2a 1\u00d71 \u5377\u79ef\u5c42\uff0c\u6b65\u957f2\u548c\u6b63\u786e\u6570\u91cf\u7684\u8f93\u51fa\u7279\u5f81\u6620\u5c04\uff08\u89c1\u56fe 13-15\uff09\u3002 \u200bResNet-34 \u662f\u5177\u6709 34 \u4e2a\u5c42\uff08\u4ec5\u8ba1\u7b97\u5377\u79ef\u5c42\u548c\u5b8c\u5168\u8fde\u63a5\u5c42\uff09\u7684 ResNet\uff0c\u5305\u542b 3 \u4e2a\u5269\u4f59\u5355\u5143\u8f93\u51fa 64 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c4 \u4e2a\u5269\u4f59\u5355\u5143\u8f93\u51fa 128 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c6 \u4e2a\u5269\u4f59\u5355\u5143\u8f93\u51fa 256 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c3 \u4e2a\u5269\u4f59\u5355\u5143\u8f93\u51fa 512 \u4e2a\u7279\u5f81\u6620\u5c04\u3002 \u200bResNet-152 \u66f4\u6df1\uff0c\u4f7f\u7528\u7a0d\u5fae\u4e0d\u540c\u7684\u5269\u4f59\u5355\u4f4d\u3002 \u4ed6\u4eec\u4f7f\u7528\u4e09\u4e2a\u5377\u79ef\u5c42\uff0c\u800c\u4e0d\u662f\u4e24\u4e2a 256 \u4e2a\u7279\u5f81\u6620\u5c04\u7684 3\u00d73 \u7684\u5377\u79ef\u5c42\uff0c\u5b83\u4eec\u4f7f\u7528\u4e09\u4e2a\u5377\u79ef\u5c42\uff1a\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u53ea\u6709 64 \u4e2a\u7279\u5f81\u6620\u5c04\uff08\u5c11 4 \u500d\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u74f6\u9888\u5c42\uff08\u5df2\u7ecf\u8ba8\u8bba\u8fc7\uff09 \uff0c\u7136\u540e\u662f\u5177\u6709 64 \u4e2a\u7279\u5f81\u6620\u5c04\u7684 3\u00d73 \u5c42\uff0c\u6700\u540e\u662f\u5177\u6709 256 \u4e2a\u7279\u5f81\u6620\u5c04\uff08 4\u00d764 \uff09\u7684\u53e6\u4e00\u4e2a 1\u00d71 \u5377\u79ef\u5c42\uff0c\u4ee5\u6062\u590d\u539f\u59cb\u6df1\u5ea6\u3002ResNet-152 \u5305\u542b\u4e09\u4e2a\u8fd9\u6837\u7684\u5269\u4f59\u5355\u4f4d\uff0c\u8f93\u51fa 256 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c\u7136\u540e\u662f 8 \u4e2a\u5269\u4f59\u5355\u4f4d\uff0c\u8f93\u51fa 512 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c\u9ad8\u8fbe 36 \u4e2a\u5269\u4f59\u5355\u4f4d\uff0c\u8f93\u51fa 1024 \u4e2a\u7279\u5f81\u6620\u5c04\uff0c\u6700\u540e\u662f 3 \u4e2a\u5269\u4f59\u5355\u4f4d\uff0c\u8f93\u51fa 2048 \u4e2a\u7279\u5f81\u6620\u5c04\u3002 \u200b\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u8fd9\u4e2a\u9886\u57df\u6b63\u5728\u8fc5\u901f\u53d1\u5c55\uff0c\u6bcf\u5e74\u90fd\u4f1a\u6709\u5404\u79cd\u5404\u6837\u7684\u67b6\u6784\u51fa\u73b0\u3002 \u4e00\u4e2a\u660e\u663e\u7684\u8d8b\u52bf\u662f CNN \u8d8a\u6765\u8d8a\u6df1\u5165\u3002 \u4ed6\u4eec\u4e5f\u8d8a\u6765\u8d8a\u8f7b\u91cf\uff0c\u9700\u8981\u8d8a\u6765\u8d8a\u5c11\u7684\u53c2\u6570\u3002 \u76ee\u524d\uff0cResNet \u67b6\u6784\u65e2\u662f\u6700\u5f3a\u5927\u7684\uff0c\u4e5f\u662f\u6700\u7b80\u5355\u7684\uff0c\u6240\u4ee5\u5b83\u73b0\u5728\u5e94\u8be5\u662f\u4f60\u5e94\u8be5\u4f7f\u7528\u7684\uff0c\u4f46\u662f\u6bcf\u5e74\u90fd\u8981\u7ee7\u7eed\u5173\u6ce8 ILSVRC \u7684\u6311\u6218\u3002 2016 \u5e74\u83b7\u5956\u8005\u662f\u6765\u81ea\u4e2d\u56fd\u7684 Trimps-Soushen \u56e2\u961f\uff0c\u4ed6\u4eec\u7684\u51fa\u9519\u7387\u60ca\u4eba\u7684\u7f29\u51cf\u5230 2.99%\u3002 \u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\uff0c\u4ed6\u4eec\u8bad\u7ec3\u4e86\u4ee5\u524d\u6a21\u578b\u7684\u7ec4\u5408\uff0c\u5e76\u5c06\u5b83\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002 \u6839\u636e\u4efb\u52a1\u7684\u4e0d\u540c\uff0c\u964d\u4f4e\u7684\u9519\u8bef\u7387\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u503c\u5f97\u989d\u5916\u7684\u590d\u6742\u6027\u3002 \u200b\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9b\u67b6\u6784\u53ef\u4f9b\u60a8\u53c2\u8003\uff0c\u7279\u522b\u662f VGGNet\uff082014 \u5e74 ILSVRC \u6311\u6218\u8d5b\u7684\u4e9a\u519b\uff09\u548c Inception-v4\uff08\u5c06 GooLeNet \u548c ResNet \u7684\u601d\u60f3\u878d\u5408\u5728\u4e00\u8d77\uff0c\u5b9e\u73b0\u4e86\u63a5\u8fd1 3% \u7684 top-5 \u8bef\u5dee ImageNet \u5206\u7c7b\u7387\uff09\u3002 \u200b\u5b9e\u65bd\u6211\u4eec\u521a\u521a\u8ba8\u8bba\u7684\u5404\u79cdCNN\u67b6\u6784\u771f\u7684\u6ca1\u4ec0\u4e48\u7279\u522b\u7684\u3002 \u6211\u4eec\u4e4b\u524d\u770b\u5230\u5982\u4f55\u6784\u5efa\u6240\u6709\u7684\u72ec\u7acb\u6784\u5efa\u6a21\u5757\uff0c\u6240\u4ee5\u73b0\u5728\u60a8\u53ea\u9700\u8981\u7ec4\u88c5\u5b83\u4eec\u6765\u521b\u5efa\u6240\u9700\u7684\u6784\u67b6\u3002 \u6211\u4eec\u5c06\u5728\u5373\u5c06\u5f00\u59cb\u7684\u7ec3\u4e60\u4e2d\u6784\u5efa ResNet-34\uff0c\u60a8\u5c06\u5728 Jupyter \u7b14\u8bb0\u672c\u4e2d\u627e\u5230\u5b8c\u6574\u7684\u5de5\u4f5c\u4ee3\u7801\u3002","title":"ResNet"},{"location":"13.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#tensorflow_1","text":"TensorFlow \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5176\u4ed6\u7c7b\u578b\u7684\u5377\u79ef\u5c42\uff1a conv1d() \u4e3a 1D \u8f93\u5165\u521b\u5efa\u4e00\u4e2a\u5377\u79ef\u5c42\u3002 \u4f8b\u5982\uff0c\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u8fd9\u662f\u6709\u7528\u7684\uff0c\u5176\u4e2d\u53e5\u5b50\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u7ef4\u5355\u8bcd\u9635\u5217\uff0c\u5e76\u4e14\u63a5\u53d7\u573a\u8986\u76d6\u4e00\u4e9b\u90bb\u8fd1\u5355\u8bcd\u3002 conv3d() \u521b\u5efa\u4e00\u4e2a 3D \u8f93\u5165\u7684\u5377\u79ef\u5c42\uff0c\u5982 3D PET \u626b\u63cf\u3002 atrous_conv2d() \u521b\u5efa\u4e86\u4e00\u4e2a atrous \u5377\u79ef\u5c42\uff08\u201c\u00e0trous\u201d\u662f\u6cd5\u8bed\u201cwith holes\u201d\uff09\u3002 \u8fd9\u76f8\u5f53\u4e8e\u4f7f\u7528\u5177\u6709\u901a\u8fc7\u63d2\u5165\u884c\u548c\u5217\uff08\u5373\uff0c\u5b54\uff09\u800c\u6269\u5927\u7684\u5377\u79ef\u6838\u7684\u666e\u901a\u5377\u79ef\u5c42\u3002 \u4f8b\u5982\uff0c\u7b49\u4e8e [[1,2,3]] \u7684 1\u00d73 \u5377\u79ef\u6838\u53ef\u4ee5\u4ee54\u7684\u6269\u5f20\u7387\u6269\u5f20\uff0c\u5bfc\u81f4\u6269\u5f20\u7684\u5377\u79ef\u6838 [[1,0,0,0,2,0,0,0,3]] \u3002 \u8fd9\u4f7f\u5f97\u5377\u79ef\u5c42\u5728\u6ca1\u6709\u8ba1\u7b97\u4ef7\u683c\u7684\u60c5\u51b5\u4e0b\u5177\u6709\u66f4\u5927\u7684\u5c40\u90e8\u611f\u53d7\u91ce\uff0c\u5e76\u4e14\u4e0d\u4f7f\u7528\u989d\u5916\u7684\u53c2\u6570\u3002 conv2d_transpose() \u521b\u5efa\u4e86\u4e00\u4e2a\u8f6c\u7f6e\u5377\u79ef\u5c42\uff0c\u6709\u65f6\u79f0\u4e3a\u53bb\u5377\u79ef\u5c42\uff0c\u5b83\u5bf9\u56fe\u50cf\u8fdb\u884c\u4e0a\u91c7\u6837\uff08\u8fd9\u4e2a\u540d\u79f0\u662f\u975e\u5e38\u5177\u6709\u8bef\u5bfc\u6027\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5c42\u5e76\u4e0d\u6267\u884c\u53bb\u5377\u79ef\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9a\u4e49\u826f\u597d\u7684\u6570\u5b66\u8fd0\u7b97\uff08\u5377\u79ef\u7684\u9006\uff09\uff09 \u3002\u8fd9\u662f\u901a\u8fc7\u5728\u8f93\u5165\u4e4b\u95f4\u63d2\u5165\u96f6\u6765\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u4e00\u4e2a\u4f7f\u7528\u5206\u6570\u6b65\u957f\u7684\u666e\u901a\u5377\u79ef\u5c42\u3002\u4f8b\u5982\uff0c\u5728\u56fe\u50cf\u5206\u5272\u4e2d\uff0c\u4e0a\u91c7\u6837\u662f\u6709\u7528\u7684\uff1a\u5728\u5178\u578b\u7684CNN\u4e2d\uff0c\u7279\u5f81\u6620\u5c04\u8d8a\u6765\u8d8a\u5c0f\u5f53\u901a\u8fc7\u7f51\u7edc\u65f6\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u60f3\u8f93\u51fa\u4e00\u4e2a\u4e0e\u8f93\u5165\u5927\u5c0f\u76f8\u540c\u7684\u56fe\u50cf\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u4e0a\u91c7\u6837\u5c42\u3002 depthwise_conv2d() \u521b\u5efa\u4e00\u4e2a\u6df1\u5ea6\u5377\u79ef\u5c42\uff0c\u5c06\u6bcf\u4e2a\u5377\u79ef\u6838\u72ec\u7acb\u5e94\u7528\u4e8e\u6bcf\u4e2a\u5355\u72ec\u7684\u8f93\u5165\u901a\u9053\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u6709 fn \u5377\u79ef\u6838\u548c fn' \u8f93\u5165\u901a\u9053\uff0c\u90a3\u4e48\u8fd9\u5c06\u8f93\u51fa fn\u00d7fn' \u7279\u5f81\u6620\u5c04\u3002 separable_conv2d() \u521b\u5efa\u4e00\u4e2a\u53ef\u5206\u79bb\u7684\u5377\u79ef\u5c42\uff0c\u9996\u5148\u50cf\u6df1\u5ea6\u5377\u79ef\u5c42\u4e00\u6837\u5de5\u4f5c\uff0c\u7136\u540e\u5c06 1\u00d71 \u5377\u79ef\u5c42\u5e94\u7528\u4e8e\u7ed3\u679c\u7279\u5f81\u6620\u5c04\u3002 \u8fd9\u4f7f\u5f97\u53ef\u4ee5\u5c06\u5377\u79ef\u6838\u5e94\u7528\u4e8e\u4efb\u610f\u7684\u8f93\u5165\u901a\u9053\u7ec4\u3002","title":"TensorFlow \u5377\u79ef\u64cd\u4f5c"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/","text":"\u5341\u56db\u3001\u5faa\u73af\u795e\u7ecf\u7f51\u7edc \u51fb\u7403\u624b\u51fb\u51fa\u5792\u7403\uff0c\u4f60\u4f1a\u5f00\u59cb\u9884\u6d4b\u7403\u7684\u8f68\u8ff9\u5e76\u7acb\u5373\u5f00\u59cb\u5954\u8dd1\u3002\u4f60\u8ffd\u8e2a\u7740\u5b83\uff0c\u4e0d\u65ad\u8c03\u6574\u4f60\u7684\u79fb\u52a8\u6b65\u4f10\uff0c\u6700\u7ec8\u5728\u89c2\u4f17\u7684\u4e00\u7247\u96f7\u9e23\u58f0\u4e2d\u6293\u5230\u5b83\u3002\u65e0\u8bba\u662f\u5728\u542c\u5b8c\u670b\u53cb\u7684\u8bdd\u8bed\u8fd8\u662f\u65e9\u9910\u65f6\u9884\u6d4b\u5496\u5561\u7684\u5473\u9053\uff0c\u4f60\u65f6\u523b\u5728\u505a\u7684\u4e8b\u5c31\u662f\u5728\u9884\u6d4b\u672a\u6765\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5faa\u73af\u795e\u7ecf\u7f51\u7edc -- \u4e00\u7c7b\u9884\u6d4b\u672a\u6765\u7684\u7f51\u7edc\uff08\u5f53\u7136\uff0c\u662f\u5230\u76ee\u524d\u4e3a\u6b62\uff09\u3002\u5b83\u4eec\u53ef\u4ee5\u5206\u6790\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u8bf8\u5982\u80a1\u7968\u4ef7\u683c\uff0c\u5e76\u544a\u8bc9\u4f60\u4ec0\u4e48\u65f6\u5019\u4e70\u5165\u548c\u5356\u51fa\u3002\u5728\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u4e2d\uff0c\u4ed6\u4eec\u53ef\u4ee5\u9884\u6d4b\u884c\u8f66\u8f68\u8ff9\uff0c\u907f\u514d\u53d1\u751f\u4ea4\u901a\u610f\u5916\u3002\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u5b83\u4eec\u53ef\u5728\u4efb\u610f\u957f\u5ea6\u7684\u5e8f\u5217\u4e0a\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u622a\u6b62\u76ee\u524d\u6211\u4eec\u8ba8\u8bba\u7684\u53ea\u80fd\u5728\u56fa\u5b9a\u957f\u5ea6\u7684\u8f93\u5165\u4e0a\u5de5\u4f5c\u7684\u7f51\u7edc\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5b83\u4eec\u53ef\u4ee5\u628a\u8bed\u53e5\uff0c\u6587\u4ef6\uff0c\u4ee5\u53ca\u8bed\u97f3\u8303\u672c\u4f5c\u4e3a\u8f93\u5165\uff0c\u4f7f\u5f97\u5b83\u4eec\u5728\u8bf8\u5982\u81ea\u52a8\u7ffb\u8bd1\uff0c\u8bed\u97f3\u5230\u6587\u672c\u6216\u8005\u60c5\u611f\u5206\u6790\uff08\u4f8b\u5982\uff0c\u8bfb\u53d6\u7535\u5f71\u8bc4\u8bba\u5e76\u63d0\u53d6\u8bc4\u8bba\u8005\u5173\u4e8e\u8be5\u7535\u5f71\u7684\u611f\u89c9\uff09\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7cfb\u7edf\u4e2d\u6781\u4e3a\u6709\u7528\u3002 \u66f4\u8fd1\u4e00\u6b65\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u7684\u9884\u6d4b\u80fd\u529b\u4f7f\u5f97\u5b83\u4eec\u5177\u5907\u4ee4\u4eba\u60ca\u8bb6\u7684\u521b\u9020\u529b\u3002\u4f60\u540c\u6837\u53ef\u4ee5\u8981\u6c42\u5b83\u4eec\u53bb\u9884\u6d4b\u4e00\u6bb5\u65cb\u5f8b\u7684\u4e0b\u51e0\u4e2a\u97f3\u7b26\uff0c\u7136\u540e\u968f\u673a\u9009\u53d6\u8fd9\u4e9b\u97f3\u7b26\u7684\u5176\u4e2d\u4e4b\u4e00\u5e76\u6f14\u594f\u5b83\u3002\u7136\u540e\u8981\u6c42\u7f51\u7edc\u7ed9\u51fa\u63a5\u4e0b\u6765\u6700\u53ef\u80fd\u7684\u97f3\u7b26\uff0c\u6f14\u594f\u5b83\uff0c\u5982\u6b64\u5468\u800c\u590d\u59cb\u3002\u5728\u4f60\u77e5\u9053\u5b83\u4e4b\u524d\uff0c\u4f60\u7684\u795e\u7ecf\u7f51\u7edc\u5c06\u521b\u4f5c\u4e00\u9996\u8bf8\u5982\u7531\u8c37\u6b4c Magenta \u5de5\u7a0b\u6240\u521b\u9020\u7684\u300aThe one\u300b\u7684\u6b4c\u66f2\u3002\u7c7b\u4f3c\u7684\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u751f\u6210\u8bed\u53e5\uff0c\u56fe\u50cf\u6807\u6ce8\u4ee5\u53ca\u66f4\u591a\u3002\u76ee\u524d\u7ed3\u679c\u8fd8\u4e0d\u80fd\u51c6\u786e\u5f97\u5230\u838e\u58eb\u6bd4\u4e9a\u6216\u8005\u83ab\u624e\u7279\u7684\u4f5c\u54c1\uff0c\u4f46\u8c01\u77e5\u9053\u51e0\u5e74\u540e\u4ed6\u4eec\u80fd\u751f\u6210\u4ec0\u4e48\u5462\uff1f \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u80cc\u540e\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u4ed6\u4eec\u6240\u9762\u4e34\u7684\u4e3b\u8981\u95ee\u9898\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u7b2c11\u7ae0\u4e2d\u8ba8\u8bba\u7684\u6d88\u5931\uff0f\u7206\u70b8\u7684\u68af\u5ea6\uff09\uff0c\u4ee5\u53ca\u5e7f\u6cdb\u7528\u4e8e\u53cd\u6297\u8fd9\u4e9b\u95ee\u9898\u7684\u65b9\u6cd5\uff1aLSTM \u548c GRU cell\uff08\u5355\u5143\uff09\u3002\u5982\u540c\u4ee5\u5f80\uff0c\u6cbf\u7740\u8fd9\u4e2a\u65b9\u5f0f\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u7528 TensorFlow \u5b9e\u73b0\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u3002\u6700\u7ec8\u6211\u4eec\u5c06\u770b\u770b\u53ca\u5176\u7ffb\u8bd1\u7cfb\u7edf\u7684\u67b6\u6784\u3002 \u5faa\u73af\u795e\u7ecf\u5143 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u7684\u662f\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5176\u4e2d\u6fc0\u6d3b\u4ec5\u4ece\u8f93\u5165\u5c42\u5230\u8f93\u51fa\u5c42\u7684\u4e00\u4e2a\u65b9\u5411\u6d41\u52a8\uff08\u9644\u5f55 E \u4e2d\u7684\u51e0\u4e2a\u7f51\u7edc\u9664\u5916\uff09\u3002 \u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u770b\u8d77\u6765\u975e\u5e38\u50cf\u4e00\u4e2a\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u9664\u4e86\u5b83\u4e5f\u6709\u8fde\u63a5\u6307\u5411\u540e\u65b9\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6700\u7b80\u5355\u7684 RNN\uff0c\u5b83\u7531\u4e00\u4e2a\u795e\u7ecf\u5143\u63a5\u6536\u8f93\u5165\uff0c\u4ea7\u751f\u4e00\u4e2a\u8f93\u51fa\uff0c\u5e76\u5c06\u8f93\u51fa\u53d1\u9001\u56de\u81ea\u5df1\uff0c\u5982\u56fe 14-1\uff08\u5de6\uff09\u6240\u793a\u3002 \u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65 t \uff08\u4e5f\u79f0\u4e3a\u4e00\u4e2a\u5e27\uff09\uff0c\u8fd9\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u63a5\u6536\u8f93\u5165 \u4ee5\u53ca\u5b83\u81ea\u5df1\u7684\u524d\u4e00\u65f6\u95f4\u6b65\u957f \u7684\u8f93\u51fa\u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u65f6\u95f4\u8f74\u6765\u8868\u793a\u8fd9\u4e2a\u5fae\u5c0f\u7684\u7f51\u7edc\uff0c\u5982\u56fe 14-1\uff08\u53f3\uff09\u6240\u793a\u3002 \u8fd9\u88ab\u79f0\u4e3a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5c55\u5f00\u7f51\u7edc\u3002 \u4f60\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u5c42\u3002 \u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65t\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u63a5\u6536\u8f93\u5165\u5411\u91cf \u548c\u524d\u4e00\u4e2a\u65f6\u95f4\u6b65 \u7684\u8f93\u51fa\u5411\u91cf\uff0c\u5982\u56fe 14-2 \u6240\u793a\u3002 \u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u662f\u5411\u91cf\uff08\u5f53\u53ea\u6709\u4e00\u4e2a\u795e\u7ecf\u5143\u65f6\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u6807\u91cf\uff09\u3002 \u6bcf\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u6709\u4e24\u7ec4\u6743\u91cd\uff1a\u4e00\u7ec4\u7528\u4e8e\u8f93\u5165 \uff0c\u53e6\u4e00\u7ec4\u7528\u4e8e\u524d\u4e00\u65f6\u95f4\u6b65\u957f \u7684\u8f93\u51fa\u3002 \u6211\u4eec\u79f0\u8fd9\u4e9b\u6743\u91cd\u5411\u91cf\u4e3a \u548c \u3002\u5982\u516c\u5f0f 14-1 \u6240\u793a\uff08 b \u662f\u504f\u5dee\u9879\uff0c \u03c6(\u00b7) \u662f\u6fc0\u6d3b\u51fd\u6570\uff0c\u4f8b\u5982 ReLU\uff09\uff0c\u53ef\u4ee5\u8ba1\u7b97\u5355\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002 \u5c31\u50cf\u524d\u9988\u795e\u7ecf\u7f51\u7edc\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e00\u4e2a\u516c\u5f0f\u7684\u5411\u91cf\u5316\u5f62\u5f0f\uff0c\u5bf9\u6574\u4e2a\u5c0f\u6279\u91cf\u8ba1\u7b97\u6574\u4e2a\u5c42\u7684\u8f93\u51fa\uff08\u89c1\u516c\u5f0f 14-2\uff09\u3002 \u662f \u77e9\u9635\uff0c\u5305\u542b\u5728\u6700\u5c0f\u6279\u6b21\u4e2d\u6bcf\u4e2a\u5b9e\u4f8b\u5728\u65f6\u95f4\u6b65 t \u5904\u7684\u5c42\u8f93\u51fa\uff08 m \u662f\u5c0f\u6279\u6b21\u4e2d\u7684\u5b9e\u4f8b\u6570\uff0c \u662f\u795e\u7ecf\u5143\u6570\uff09\u3002 \u662f \u77e9\u9635\uff0c\u5305\u542b\u6240\u6709\u5b9e\u4f8b\u7684\u8f93\u5165\u7684 \uff08 \u662f\u8f93\u5165\u7279\u5f81\u7684\u6570\u91cf\uff09\u3002 \u662f \u77e9\u9635\uff0c\u5305\u542b\u5f53\u524d\u65f6\u95f4\u6b65\u7684\u8f93\u5165\u7684\u8fde\u63a5\u6743\u91cd\u7684\u3002 \u662f \u77e9\u9635\uff0c\u5305\u542b\u4e0a\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u51fa\u7684\u8fde\u63a5\u6743\u91cd\u3002 \u6743\u91cd\u77e9\u9635 \u548c \u901a\u5e38\u8fde\u63a5\u6210\u5355\u4e2a\u6743\u91cd\u77e9\u9635 W \uff0c\u5f62\u72b6\u4e3a \uff08\u89c1\u516c\u5f0f 14-2 \u7684\u7b2c\u4e8c\u884c\uff09 b \u662f\u5927\u5c0f\u4e3a \u7684\u5411\u91cf\uff0c\u5305\u542b\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u504f\u7f6e\u9879\u3002 \u6ce8\u610f\uff0c \u662f \u548c \u7684\u51fd\u6570\uff0c\u5b83\u662f \u548c \u7684\u51fd\u6570\uff0c\u5b83\u662f \u548c \u7684\u51fd\u6570\uff0c\u7b49\u7b49\u3002 \u8fd9\u4f7f\u5f97 \u662f\u4ece\u65f6\u95f4 t = 0 \u5f00\u59cb\u7684\u6240\u6709\u8f93\u5165\uff08\u5373 \uff0c \uff0c...\uff0c \uff09\u7684\u51fd\u6570\u3002 \u5728\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6b65\uff0c t = 0 \uff0c\u6ca1\u6709\u4ee5\u524d\u7684\u8f93\u51fa\uff0c\u6240\u4ee5\u5b83\u4eec\u901a\u5e38\u88ab\u5047\u5b9a\u4e3a\u5168\u96f6\u3002 \u8bb0\u5fc6\u5355\u5143 \u7531\u4e8e\u65f6\u95f4 t \u7684\u5faa\u73af\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff0c\u662f\u7531\u6240\u6709\u5148\u524d\u65f6\u95f4\u6b65\u9aa4\u8ba1\u7b97\u51fa\u6765\u7684\u7684\u51fd\u6570\uff0c\u4f60\u53ef\u4ee5\u8bf4\u5b83\u6709\u4e00\u79cd\u8bb0\u5fc6\u5f62\u5f0f\u3002\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u90e8\u5206\uff0c\u8de8\u8d8a\u65f6\u95f4\u6b65\u957f\u4fdd\u7559\u4e00\u4e9b\u72b6\u6001\uff0c\u79f0\u4e3a\u5b58\u50a8\u5355\u5143\uff08\u6216\u7b80\u79f0\u4e3a\u5355\u5143\uff09\u3002\u5355\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u6216\u5faa\u73af\u795e\u7ecf\u5143\u5c42\u662f\u975e\u5e38\u57fa\u672c\u7684\u5355\u5143\uff0c\u4f46\u672c\u7ae0\u540e\u9762\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u66f4\u4e3a\u590d\u6742\u548c\u5f3a\u5927\u7684\u5355\u5143\u7c7b\u578b\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u6b65 t \u5904\u7684\u5355\u5143\u72b6\u6001\uff0c\u8bb0\u4e3a \uff08 h \u4ee3\u8868\u201c\u9690\u85cf\u201d\uff09\uff0c\u662f\u8be5\u65f6\u95f4\u6b65\u7684\u67d0\u4e9b\u8f93\u5165\u548c\u524d\u4e00\u65f6\u95f4\u6b65\u7684\u72b6\u6001\u7684\u51fd\u6570\uff1a \u3002 \u5176\u5728\u65f6\u95f4\u6b65 t \u5904\u7684\u8f93\u51fa\uff0c\u8868\u793a\u4e3a \uff0c\u4e5f\u548c\u524d\u4e00\u72b6\u6001\u548c\u5f53\u524d\u8f93\u5165\u7684\u51fd\u6570\u6709\u5173\u3002 \u5728\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u57fa\u672c\u5355\u5143\u7684\u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa\u7b49\u4e8e\u5355\u5143\u72b6\u6001\uff0c\u4f46\u662f\u5728\u66f4\u590d\u6742\u7684\u5355\u5143\u4e2d\u5e76\u4e0d\u603b\u662f\u5982\u6b64\uff0c\u5982\u56fe 14-3 \u6240\u793a\u3002 \u8f93\u5165\u548c\u8f93\u51fa\u5e8f\u5217 RNN \u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u4e00\u7cfb\u5217\u8f93\u5165\u5e76\u4ea7\u751f\u4e00\u7cfb\u5217\u8f93\u51fa\uff08\u89c1\u56fe 14-4\uff0c\u5de6\u4e0a\u89d2\u7684\u7f51\u7edc\uff09\u3002 \u4f8b\u5982\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u7f51\u7edc\u5bf9\u4e8e\u9884\u6d4b\u65f6\u95f4\u5e8f\u5217\uff08\u5982\u80a1\u7968\u4ef7\u683c\uff09\u975e\u5e38\u6709\u7528\uff1a\u4f60\u5728\u8fc7\u53bb\u7684 N \u5929\u5185\u7ed9\u51fa\u4ef7\u683c\uff0c\u5e76\u4e14\u5b83\u5fc5\u987b\u8f93\u51fa\u5411\u672a\u6765\u4e00\u5929\u79fb\u52a8\u7684\u4ef7\u683c\uff08\u5373\u4ece N - 1 \u5929\u524d\u5230\u660e\u5929\uff09\u3002 \u6216\u8005\uff0c\u4f60\u53ef\u4ee5\u5411\u7f51\u7edc\u8f93\u5165\u4e00\u7cfb\u5217\u8f93\u5165\uff0c\u5e76\u5ffd\u7565\u9664\u6700\u540e\u4e00\u4e2a\u4e4b\u5916\u7684\u6240\u6709\u8f93\u51fa\uff08\u8bf7\u53c2\u9605\u53f3\u4e0a\u89d2\u7684\u7f51\u7edc\uff09\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5411\u91cf\u7f51\u7edc\u7684\u5e8f\u5217\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5411\u7f51\u7edc\u63d0\u4f9b\u4e0e\u7535\u5f71\u8bc4\u8bba\u76f8\u5bf9\u5e94\u7684\u5355\u8bcd\u5e8f\u5217\uff0c\u5e76\u4e14\u7f51\u7edc\u5c06\u8f93\u51fa\u60c5\u611f\u8bc4\u5206\uff08\u4f8b\u5982\uff0c\u4ece -1 [\u6068] \u5230 +1 [\u7231] \uff09\u3002 \u76f8\u53cd\uff0c\u4f60\u53ef\u4ee5\u5728\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6b65\u4e2d\u4e3a\u7f51\u7edc\u63d0\u4f9b\u4e00\u4e2a\u8f93\u5165\uff08\u800c\u5728\u5176\u4ed6\u6240\u6709\u65f6\u95f4\u6b65\u4e2d\u4e3a\u96f6\uff09\uff0c\u7136\u540e\u8ba9\u5b83\u8f93\u51fa\u4e00\u4e2a\u5e8f\u5217\uff08\u8bf7\u53c2\u9605\u5de6\u4e0b\u89d2\u7684\u7f51\u7edc\uff09\u3002 \u8fd9\u662f\u4e00\u4e2a\u5411\u91cf\u5230\u5e8f\u5217\u7684\u7f51\u7edc\u3002 \u4f8b\u5982\uff0c\u8f93\u5165\u53ef\u4ee5\u662f\u56fe\u50cf\uff0c\u8f93\u51fa\u53ef\u4ee5\u662f\u8be5\u56fe\u50cf\u7684\u6807\u9898\u3002 \u6700\u540e\uff0c\u4f60\u53ef\u4ee5\u6709\u4e00\u4e2a\u5e8f\u5217\u5230\u5411\u91cf\u7f51\u7edc\uff0c\u79f0\u4e3a\u7f16\u7801\u5668\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u79f0\u4e3a\u89e3\u7801\u5668\u7684\u5411\u91cf\u5230\u5e8f\u5217\u7f51\u7edc\uff08\u53c2\u89c1\u53f3\u4e0b\u89d2\u7684\u7f51\u7edc\uff09\u3002 \u4f8b\u5982\uff0c\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5c06\u53e5\u5b50\u4ece\u4e00\u79cd\u8bed\u8a00\u7ffb\u8bd1\u6210\u53e6\u4e00\u79cd\u8bed\u8a00\u3002 \u4f60\u4f1a\u7528\u4e00\u79cd\u8bed\u8a00\u7ed9\u7f51\u7edc\u5582\u4e00\u4e2a\u53e5\u5b50\uff0c\u7f16\u7801\u5668\u4f1a\u628a\u8fd9\u4e2a\u53e5\u5b50\u8f6c\u6362\u6210\u5355\u4e00\u7684\u5411\u91cf\u8868\u793a\uff0c\u7136\u540e\u89e3\u7801\u5668\u5c06\u8fd9\u4e2a\u5411\u91cf\u89e3\u7801\u6210\u53e6\u4e00\u79cd\u8bed\u8a00\u7684\u53e5\u5b50\u3002 \u8fd9\u79cd\u79f0\u4e3a\u7f16\u7801\u5668 - \u89e3\u7801\u5668\u7684\u4e24\u6b65\u6a21\u578b\uff0c\u6bd4\u7528\u5355\u4e2a\u5e8f\u5217\u5230\u5e8f\u5217\u7684 RNN\uff08\u5982\u5de6\u4e0a\u65b9\u6240\u793a\u7684\u90a3\u4e2a\uff09\u5feb\u901f\u5730\u8fdb\u884c\u7ffb\u8bd1\u8981\u597d\u5f97\u591a\uff0c\u56e0\u4e3a\u53e5\u5b50\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u53ef\u4ee5 \u5f71\u54cd\u7ffb\u8bd1\u7684\u7b2c\u4e00\u53e5\u8bdd\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u7b49\u5230\u542c\u5b8c\u6574\u4e2a\u53e5\u5b50\u624d\u80fd\u7ffb\u8bd1\u3002 TensorFlow \u4e2d\u7684\u57fa\u672c RNN \u9996\u5148\uff0c\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 RNN \u6a21\u578b\uff0c\u800c\u4e0d\u4f7f\u7528\u4efb\u4f55 TensorFlow \u7684 RNN \u64cd\u4f5c\uff0c\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u53d1\u751f\u4e86\u4ec0\u4e48\u3002 \u6211\u4eec\u5c06\u4f7f\u7528 tanh \u6fc0\u6d3b\u51fd\u6570\u521b\u5efa\u7531 5 \u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u7684\u5faa\u73af\u5c42\u7ec4\u6210\u7684 RNN\uff08\u5982\u56fe 14-2 \u6240\u793a\u7684 RNN\uff09\u3002 \u6211\u4eec\u5c06\u5047\u8bbe RNN \u53ea\u8fd0\u884c\u4e24\u4e2a\u65f6\u95f4\u6b65\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6b65\u8f93\u5165\u5927\u5c0f\u4e3a 3 \u7684\u5411\u91cf\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u6784\u5efa\u4e86\u8fd9\u4e2a RNN\uff0c\u5c55\u5f00\u4e86\u4e24\u4e2a\u65f6\u95f4\u6b65\u9aa4\uff1a n_inputs = 3 n_neurons = 5 X0 = tf.placeholder(tf.float32, [None, n_inputs]) X1 = tf.placeholder(tf.float32, [None, n_inputs]) Wx = tf.Variable(tf.random_normal(shape=[n_inputs, n_neurons], dtype=tf.float32)) Wy = tf.Variable(tf.random_normal(shape=[n_neurons, n_neurons], dtype=tf.float32)) b = tf.Variable(tf.zeros([1, n_neurons], dtype=tf.float32)) Y0 = tf.tanh(tf.matmul(X0, Wx) + b) Y1 = tf.tanh(tf.matmul(Y0, Wy) + tf.matmul(X1, Wx) + b) init = tf.global_variables_initializer() \u8fd9\u4e2a\u7f51\u7edc\u770b\u8d77\u6765\u5f88\u50cf\u4e00\u4e2a\u53cc\u5c42\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u6709\u4e00\u4e9b\u6539\u52a8\uff1a\u9996\u5148\uff0c\u4e24\u4e2a\u5c42\u5171\u4eab\u76f8\u540c\u7684\u6743\u91cd\u548c\u504f\u5dee\u9879\uff0c\u5176\u6b21\uff0c\u6211\u4eec\u5728\u6bcf\u4e00\u5c42\u90fd\u6709\u8f93\u5165\uff0c\u5e76\u4ece\u6bcf\u4e2a\u5c42\u83b7\u5f97\u8f93\u51fa\u3002 \u4e3a\u4e86\u8fd0\u884c\u6a21\u578b\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e24\u4e2a\u65f6\u95f4\u6b65\u4e2d\u90fd\u6709\u8f93\u5165\uff0c\u5982\u4e0b\u6240\u793a\uff1a # Mini-batch: instance 0,instance 1,instance 2,instance 3 X0_batch = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 0, 1]]) # t = 0 X1_batch = np.array([[9, 8, 7], [0, 0, 0], [6, 5, 4], [3, 2, 1]]) # t = 1 with tf.Session() as sess: init.run() Y0_val, Y1_val = sess.run([Y0, Y1], feed_dict={X0: X0_batch, X1: X1_batch}) \u8fd9\u4e2a\u5c0f\u6279\u91cf\u5305\u542b\u56db\u4e2a\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u4e00\u4e2a\u7531\u4e24\u4e2a\u8f93\u5165\u7ec4\u6210\u7684\u8f93\u5165\u5e8f\u5217\u3002 \u6700\u540e\uff0c Y0_val \u548c Y1_val \u5728\u6240\u6709\u795e\u7ecf\u5143\u548c\u5c0f\u6279\u91cf\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u7684\u4e24\u4e2a\u65f6\u95f4\u6b65\u4e2d\u5305\u542b\u7f51\u7edc\u7684\u8f93\u51fa\uff1a >>> print(Y0_val) # output at t = 0 [[-0.2964572 0.82874775 -0.34216955 -0.75720584 0.19011548] # instance 0 [-0.12842922 0.99981797 0.84704727 -0.99570125 0.38665548] # instance 1 [ 0.04731077 0.99999976 0.99330056 -0.999933 0.55339795] # instance 2 [ 0.70323634 0.99309105 0.99909431 -0.85363263 0.7472108 ]] # instance 3 >>> print(Y1_val) # output at t = 1 [[ 0.51955646 1\\. 0.99999022 -0.99984968 -0.24616946] # instance 0 [-0.70553327 -0.11918639 0.48885304 0.08917919 -0.26579669] # instance 1 [-0.32477224 0.99996376 0.99933046 -0.99711186 0.10981458] # instance 2 [-0.43738723 0.91517633 0.97817528 -0.91763324 0.11047263]] # instance 3 \u8fd9\u5e76\u4e0d\u96be\uff0c\u4f46\u662f\u5f53\u7136\u5982\u679c\u4f60\u60f3\u80fd\u591f\u8fd0\u884c 100 \u591a\u4e2a\u65f6\u95f4\u6b65\u9aa4\u7684 RNN\uff0c\u8fd9\u4e2a\u56fe\u5f62\u5c06\u4f1a\u975e\u5e38\u5927\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u4f7f\u7528 TensorFlow \u7684 RNN \u64cd\u4f5c\u521b\u5efa\u76f8\u540c\u7684\u6a21\u578b\u3002 \u5b8c\u6574\u4ee3\u7801 import numpy as np import tensorflow as tf if __name__ == '__main__': n_inputs = 3 n_neurons = 5 X0 = tf.placeholder(tf.float32, [None, n_inputs]) X1 = tf.placeholder(tf.float32, [None, n_inputs]) Wx = tf.Variable(tf.random_normal(shape=[n_inputs, n_neurons], dtype=tf.float32)) Wy = tf.Variable(tf.random_normal(shape=[n_neurons, n_neurons], dtype=tf.float32)) b = tf.Variable(tf.zeros([1, n_neurons], dtype=tf.float32)) Y0 = tf.tanh(tf.matmul(X0, Wx) + b) Y1 = tf.tanh(tf.matmul(Y0, Wy) + tf.matmul(X1, Wx) + b) init = tf.global_variables_initializer() # Mini-batch: instance 0,instance 1,instance 2,instance 3 X0_batch = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 0, 1]]) # t = 0 X1_batch = np.array([[9, 8, 7], [0, 0, 0], [6, 5, 4], [3, 2, 1]]) # t = 1 with tf.Session() as sess: init.run() Y0_val, Y1_val = sess.run([Y0, Y1], feed_dict={X0: X0_batch, X1: X1_batch}) print(Y0_val,'\\n') print(Y1_val) \u65f6\u95f4\u4e0a\u7684\u9759\u6001\u5c55\u5f00 static_rnn() \u51fd\u6570\u901a\u8fc7\u94fe\u63a5\u5355\u5143\u6765\u521b\u5efa\u4e00\u4e2a\u5c55\u5f00\u7684 RNN \u7f51\u7edc\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e0e\u4e0a\u4e00\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u6a21\u578b\uff1a X0 = tf.placeholder(tf.float32, [None, n_inputs]) X1 = tf.placeholder(tf.float32, [None, n_inputs]) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) output_seqs, states = tf.contrib.rnn.static_rnn(basic_cell, [X0, X1], dtype=tf.float32) Y0, Y1 = output_seqs \u9996\u5148\uff0c\u6211\u4eec\u50cf\u4ee5\u524d\u4e00\u6837\u521b\u5efa\u8f93\u5165\u5360\u4f4d\u7b26\u3002 \u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a BasicRNNCell \uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u5de5\u5382\uff0c\u521b\u5efa\u5355\u5143\u7684\u526f\u672c\u4ee5\u6784\u5efa\u5c55\u5f00\u7684 RNN\uff08\u6bcf\u4e2a\u65f6\u95f4\u6b65\u4e00\u4e2a\uff09\u3002 \u7136\u540e\u6211\u4eec\u8c03\u7528 static_rnn() \uff0c\u5411\u5b83\u63d0\u4f9b\u5355\u5143\u5de5\u5382\u548c\u8f93\u5165\u5f20\u91cf\uff0c\u5e76\u544a\u8bc9\u5b83\u8f93\u5165\u7684\u6570\u636e\u7c7b\u578b\uff08\u7528\u6765\u521b\u5efa\u521d\u59cb\u72b6\u6001\u77e9\u9635\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u5168\u96f6\uff09\u3002 static_rnn() \u51fd\u6570\u4e3a\u6bcf\u4e2a\u8f93\u5165\u8c03\u7528\u5355\u5143\u5de5\u5382\u7684 __call __() \u51fd\u6570\uff0c\u521b\u5efa\u5355\u5143\u7684\u4e24\u4e2a\u526f\u672c\uff08\u6bcf\u4e2a\u5355\u5143\u5305\u542b 5 \u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u7684\u5faa\u73af\u5c42\uff09\uff0c\u5e76\u5177\u6709\u5171\u4eab\u7684\u6743\u91cd\u548c\u504f\u7f6e\u9879\uff0c\u50cf\u524d\u9762\u4e00\u6837\u3002 static_rnn() \u51fd\u6570\u8fd4\u56de\u4e24\u4e2a\u5bf9\u8c61\u3002 \u7b2c\u4e00\u4e2a\u662f\u5305\u542b\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u51fa\u5f20\u91cf\u7684 Python \u5217\u8868\u3002 \u7b2c\u4e8c\u4e2a\u662f\u5305\u542b\u7f51\u7edc\u6700\u7ec8\u72b6\u6001\u7684\u5f20\u91cf\u3002 \u5f53\u4f60\u4f7f\u7528\u57fa\u672c\u7684\u5355\u5143\u65f6\uff0c\u6700\u540e\u7684\u72b6\u6001\u5c31\u7b49\u4e8e\u6700\u540e\u7684\u8f93\u51fa\u3002 \u5982\u679c\u6709 50 \u4e2a\u65f6\u95f4\u6b65\u957f\uff0c\u5219\u4e0d\u5f97\u4e0d\u5b9a\u4e49 50 \u4e2a\u8f93\u5165\u5360\u4f4d\u7b26\u548c 50 \u4e2a\u8f93\u51fa\u5f20\u91cf\u3002\u800c\u4e14\uff0c\u5728\u6267\u884c\u65f6\uff0c\u4f60\u5c06\u4e0d\u5f97\u4e0d\u4e3a 50 \u4e2a\u5360\u4f4d\u7b26\u4e2d\u7684\u6bcf\u4e2a\u5360\u4f4d\u7b26\u8f93\u5165\u6570\u636e\u5e76\u4e14\u8fd8\u8981\u64cd\u7eb5 50 \u4e2a\u8f93\u51fa\u3002\u6211\u4eec\u6765\u7b80\u5316\u4e00\u4e0b\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u518d\u6b21\u6784\u5efa\u76f8\u540c\u7684 RNN\uff0c\u4f46\u662f\u8fd9\u6b21\u5b83\u9700\u8981\u4e00\u4e2a\u5f62\u72b6\u4e3a [None\uff0cn_steps\uff0cn_inputs] \u7684\u5355\u4e2a\u8f93\u5165\u5360\u4f4d\u7b26\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u662f\u6700\u5c0f\u6279\u91cf\u5927\u5c0f\u3002\u7136\u540e\u63d0\u53d6\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u5165\u5e8f\u5217\u5217\u8868\u3002 X_seqs \u662f\u5f62\u72b6\u4e3a n_steps \u7684 Python \u5217\u8868\uff0c\u5305\u542b\u5f62\u72b6\u4e3a [None\uff0cn_inputs] \u7684\u5f20\u91cf\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u540c\u6837\u662f\u6700\u5c0f\u6279\u91cf\u5927\u5c0f\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528 transpose() \u51fd\u6570\u4ea4\u6362\u524d\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u4ee5\u4fbf\u65f6\u95f4\u6b65\u9aa4\u73b0\u5728\u662f\u7b2c\u4e00\u7ef4\u5ea6\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f unstack() \u51fd\u6570\u6cbf\u7b2c\u4e00\u7ef4\uff08\u5373\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u4e00\u4e2a\u5f20\u91cf\uff09\u63d0\u53d6\u5f20\u91cf\u7684 Python \u5217\u8868\u3002\u63a5\u4e0b\u6765\u7684\u4e24\u884c\u548c\u4ee5\u524d\u4e00\u6837\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528 stack() \u51fd\u6570\u5c06\u6240\u6709\u8f93\u51fa\u5f20\u91cf\u5408\u5e76\u6210\u4e00\u4e2a\u5f20\u91cf\uff0c\u7136\u540e\u6211\u4eec\u4ea4\u6362\u524d\u4e24\u4e2a\u7ef4\u5ea6\u5f97\u5230\u6700\u7ec8\u8f93\u51fa\u5f20\u91cf\uff0c\u5f62\u72b6\u4e3a [None, n_steps\uff0cn_neurons] \uff08\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u662f\u5c0f\u6279\u91cf\u5927\u5c0f\uff09\u3002 X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) X_seqs = tf.unstack(tf.transpose(X, perm=[1, 0, 2])) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) output_seqs, states = tf.contrib.rnn.static_rnn(basic_cell, X_seqs, dtype=tf.float32) outputs = tf.transpose(tf.stack(output_seqs), perm=[1, 0, 2]) \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9\u5b83\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c0f\u6279\u91cf\u5e8f\u5217\u7684\u5f20\u91cf\u6765\u8fd0\u884c\u7f51\u7edc\uff1a X_batch = np.array([ # t = 0 t = 1 [[0, 1, 2], [9, 8, 7]], # instance 1 [[3, 4, 5], [0, 0, 0]], # instance 2 [[6, 7, 8], [6, 5, 4]], # instance 3 [[9, 0, 1], [3, 2, 1]], # instance 4 ]) with tf.Session() as sess: init.run() outputs_val = outputs.eval(feed_dict={X: X_batch}) \u6211\u4eec\u5f97\u5230\u6240\u6709\u5b9e\u4f8b\uff0c\u6240\u6709\u65f6\u95f4\u6b65\u957f\u548c\u6240\u6709\u795e\u7ecf\u5143\u7684\u5355\u4e00 outputs_val \u5f20\u91cf\uff1a \u4f46\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4ecd\u7136\u4f1a\u5efa\u7acb\u4e00\u4e2a\u6bcf\u4e2a\u65f6\u95f4\u6b65\u5305\u542b\u4e00\u4e2a\u5355\u5143\u7684\u56fe\u3002 \u5982\u679c\u6709 50 \u4e2a\u65f6\u95f4\u6b65\uff0c\u8fd9\u4e2a\u56fe\u770b\u8d77\u6765\u4f1a\u975e\u5e38\u96be\u770b\u3002 \u8fd9\u6709\u70b9\u50cf\u5199\u4e00\u4e2a\u7a0b\u5e8f\u800c\u6ca1\u6709\u4f7f\u7528\u5faa\u73af\uff08\u4f8b\u5982\uff0c Y0 = f(0,X0) \uff1b Y1 = f(Y0,X1) \uff1b Y2 = f(Y1,X2) \uff1b...\uff1b Y50 = f(Y49,X50) \uff09\u3002 \u5982\u679c\u4f7f\u7528\u5927\u56fe\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u671f\u95f4\uff08\u7279\u522b\u662f\u5728 GPU \u5185\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff09\uff0c\u4f60\u751a\u81f3\u53ef\u80fd\u4f1a\u53d1\u751f\u5185\u5b58\u4e0d\u8db3\uff08OOM\uff09\u9519\u8bef\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5728\u6b63\u5411\u4f20\u9012\u671f\u95f4\u5b58\u50a8\u6240\u6709\u5f20\u91cf\u503c\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u5728\u53cd\u5411\u4f20\u64ad\u671f\u95f4\u8ba1\u7b97\u68af\u5ea6\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff1a dynamic_rnn() \u51fd\u6570\u3002 \u65f6\u95f4\u4e0a\u7684\u52a8\u6001\u5c55\u5f00 dynamic_rnn() \u51fd\u6570\u4f7f\u7528 while_loop() \u64cd\u4f5c\uff0c\u5728\u5355\u5143\u4e0a\u8fd0\u884c\u9002\u5f53\u7684\u6b21\u6570\uff0c\u5982\u679c\u8981\u5728\u53cd\u5411\u4f20\u64ad\u671f\u95f4\u5c06 GPU\u5185 \u5b58\u4ea4\u6362\u5230 CPU \u5185\u5b58\uff0c\u53ef\u4ee5\u8bbe\u7f6e swap_memory = True \uff0c\u4ee5\u907f\u514d\u5185\u5b58\u4e0d\u8db3\u9519\u8bef\u3002 \u65b9\u4fbf\u7684\u662f\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff08\u5f62\u72b6\u4e3a [None, n_steps, n_inputs] \uff09\u63a5\u53d7\u6240\u6709\u8f93\u5165\u7684\u5355\u4e2a\u5f20\u91cf\uff0c\u5e76\u4e14\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff08\u5f62\u72b6 [None, n_steps, n_neurons] \uff09\u4e0a\u8f93\u51fa\u6240\u6709\u8f93\u51fa\u7684\u5355\u4e2a\u5f20\u91cf\u3002 \u6ca1\u6709\u5fc5\u8981\u5806\u53e0\uff0c\u62c6\u6563\u6216\u8f6c\u7f6e\u3002 \u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 dynamic_rnn() \u51fd\u6570\u521b\u5efa\u4e0e\u4e4b\u524d\u76f8\u540c\u7684 RNN\u3002 \u8fd9\u592a\u597d\u4e86\uff01 \u5b8c\u6574\u4ee3\u7801 import numpy as np import tensorflow as tf import pandas as pd if __name__ == '__main__': n_steps = 2 n_inputs = 3 n_neurons = 5 X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) outputs, states = tf.nn.dynamic_rnn(basic_cell, X, dtype=tf.float32) init = tf.global_variables_initializer() X_batch = np.array([ [[0, 1, 2], [9, 8, 7]], # instance 1 [[3, 4, 5], [0, 0, 0]], # instance 2 [[6, 7, 8], [6, 5, 4]], # instance 3 [[9, 0, 1], [3, 2, 1]], # instance 4 ]) with tf.Session() as sess: init.run() outputs_val = outputs.eval(feed_dict={X: X_batch}) print(outputs_val) \u5728\u53cd\u5411\u4f20\u64ad\u671f\u95f4\uff0c while_loop() \u64cd\u4f5c\u4f1a\u6267\u884c\u76f8\u5e94\u7684\u6b65\u9aa4\uff1a\u5728\u6b63\u5411\u4f20\u9012\u671f\u95f4\u5b58\u50a8\u6bcf\u6b21\u8fed\u4ee3\u7684\u5f20\u91cf\u503c\uff0c\u4ee5\u4fbf\u5728\u53cd\u5411\u4f20\u9012\u671f\u95f4\u4f7f\u7528\u5b83\u4eec\u6765\u8ba1\u7b97\u68af\u5ea6\u3002 \u5904\u7406\u53d8\u957f\u8f93\u5165\u5e8f\u5217 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u8f93\u5165\u5e8f\u5217\uff08\u5168\u90e8\u6b63\u597d\u4e24\u4e2a\u6b65\u957f\uff09\u3002 \u5982\u679c\u8f93\u5165\u5e8f\u5217\u5177\u6709\u53ef\u53d8\u957f\u5ea6\uff08\u4f8b\u5982\uff0c\u50cf\u53e5\u5b50\uff09\u5462\uff1f \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u5728\u8c03\u7528 dynamic_rnn() \uff08\u6216 static_rnn() \uff09\u51fd\u6570\u65f6\u8bbe\u7f6e sequence_length \u53c2\u6570\uff1b\u5b83\u5fc5\u987b\u662f\u4e00\u7ef4\u5f20\u91cf\uff0c\u8868\u793a\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u8f93\u5165\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u4f8b\u5982\uff1a n_steps = 2 n_inputs = 3 n_neurons = 5 reset_graph() X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) seq_length = tf.placeholder(tf.int32, [None]) outputs, states = tf.nn.dynamic_rnn(basic_cell, X, dtype=tf.float32, sequence_length=seq_length) \u4f8b\u5982\uff0c\u5047\u8bbe\u7b2c\u4e8c\u4e2a\u8f93\u5165\u5e8f\u5217\u53ea\u5305\u542b\u4e00\u4e2a\u8f93\u5165\u800c\u4e0d\u662f\u4e24\u4e2a\u8f93\u5165\u3002 \u4e3a\u4e86\u9002\u5e94\u8f93\u5165\u5f20\u91cf X \uff0c\u5fc5\u987b\u586b\u5145\u96f6\u5411\u91cf\uff08\u56e0\u4e3a\u8f93\u5165\u5f20\u91cf\u7684\u7b2c\u4e8c\u7ef4\u662f\u6700\u957f\u5e8f\u5217\u7684\u5927\u5c0f\uff0c\u5373 2\uff09 X_batch = np.array([ # step 0 step 1 [[0, 1, 2], [9, 8, 7]], # instance 1 [[3, 4, 5], [0, 0, 0]], # instance 2 (padded with zero vectors) [[6, 7, 8], [6, 5, 4]], # instance 3 [[9, 0, 1], [3, 2, 1]], # instance 4 ]) seq_length_batch = np.array([2, 1, 2, 2]) \u5f53\u7136\uff0c\u4f60\u73b0\u5728\u9700\u8981\u4e3a\u4e24\u4e2a\u5360\u4f4d\u7b26 X \u548c seq_length \u63d0\u4f9b\u503c\uff1a with tf.Session() as sess: init.run() outputs_val, states_val = sess.run( [outputs, states], feed_dict={X: X_batch, seq_length: seq_length_batch}) \u73b0\u5728\uff0cRNN \u8f93\u51fa\u5e8f\u5217\u957f\u5ea6\u7684\u6bcf\u4e2a\u65f6\u95f4\u6b65\u90fd\u4f1a\u8f93\u51fa\u96f6\u5411\u91cf\uff08\u67e5\u770b\u7b2c\u4e8c\u4e2a\u65f6\u95f4\u6b65\u7684\u7b2c\u4e8c\u4e2a\u8f93\u51fa\uff09\uff1a \u6b64\u5916\uff0c\u72b6\u6001\u5f20\u91cf\u5305\u542b\u6bcf\u4e2a\u5355\u5143\u7684\u6700\u7ec8\u72b6\u6001\uff08\u4e0d\u5305\u62ec\u96f6\u5411\u91cf\uff09\uff1a \u5904\u7406\u53d8\u957f\u8f93\u51fa\u5e8f\u5217 \u5982\u679c\u8f93\u51fa\u5e8f\u5217\u957f\u5ea6\u4e0d\u4e00\u6837\u5462\uff1f \u5982\u679c\u4e8b\u5148\u77e5\u9053\u6bcf\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\uff08\u4f8b\u5982\uff0c\u5982\u679c\u77e5\u9053\u957f\u5ea6\u4e0e\u8f93\u5165\u5e8f\u5217\u7684\u957f\u5ea6\u76f8\u540c\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u6240\u8ff0\u8bbe\u7f6e sequence_length \u53c2\u6570\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u901a\u5e38\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff1a\u4f8b\u5982\uff0c\u7ffb\u8bd1\u540e\u7684\u53e5\u5b50\u7684\u957f\u5ea6\u901a\u5e38\u4e0e\u8f93\u5165\u53e5\u5b50\u7684\u957f\u5ea6\u4e0d\u540c\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6700\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5b9a\u4e49\u4e00\u4e2a\u79f0\u4e3a\u5e8f\u5217\u7ed3\u675f\u6807\u8bb0\uff08EOS \u6807\u8bb0\uff09\u7684\u7279\u6b8a\u8f93\u51fa\u3002 \u4efb\u4f55\u5728 EOS \u540e\u9762\u7684\u8f93\u51fa\u5e94\u8be5\u88ab\u5ffd\u7565\uff08\u6211\u4eec\u5c06\u5728\u672c\u7ae0\u7a0d\u540e\u8ba8\u8bba\uff09\u3002 \u597d\uff0c\u73b0\u5728\u4f60\u77e5\u9053\u5982\u4f55\u5efa\u7acb\u4e00\u4e2a RNN \u7f51\u7edc\uff08\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\u662f\u4e00\u4e2a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u5c55\u5f00\u7684 RNN \u7f51\u7edc\uff09\u3002 \u4f46\u662f\u4f60\u600e\u4e48\u8bad\u7ec3\u5462\uff1f \u8bad\u7ec3 RNN \u4e3a\u4e86\u8bad\u7ec3\u4e00\u4e2a RNN\uff0c\u8bc0\u7a8d\u662f\u5728\u65f6\u95f4\u4e0a\u5c55\u5f00\uff08\u5c31\u50cf\u6211\u4eec\u521a\u521a\u505a\u7684\u90a3\u6837\uff09\uff0c\u7136\u540e\u7b80\u5355\u5730\u4f7f\u7528\u5e38\u89c4\u53cd\u5411\u4f20\u64ad\uff08\u89c1\u56fe 14-5\uff09\u3002 \u8fd9\u4e2a\u7b56\u7565\u88ab\u79f0\u4e3a\u65f6\u95f4\u4e0a\u7684\u53cd\u5411\u4f20\u64ad\uff08BPTT\uff09\u3002 \u5c31\u50cf\u5728\u6b63\u5e38\u7684\u53cd\u5411\u4f20\u64ad\u4e2d\u4e00\u6837\uff0c\u5c55\u5f00\u7684\u7f51\u7edc\uff08\u7528\u865a\u7ebf\u7bad\u5934\u8868\u793a\uff09\u6709\u7b2c\u4e00\u4e2a\u6b63\u5411\u4f20\u9012\u3002\u7136\u540e\u4f7f\u7528\u635f\u5931\u51fd\u6570\u8bc4\u4f30\u8f93\u51fa\u5e8f\u5217 \uff08\u5176\u4e2d \u548c \u662f\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u8f93\u51fa\u65f6\u95f4\u6b65\u957f\uff0c\u4e0d\u8ba1\u7b97\u5ffd\u7565\u7684\u8f93\u51fa\uff09\uff0c\u5e76\u4e14\u8be5\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u901a\u8fc7\u5c55\u5f00\u7684\u7f51\u7edc\u5411\u540e\u4f20\u64ad\uff08\u5b9e\u7ebf\u7bad\u5934\uff09\uff1b\u6700\u540e\u4f7f\u7528\u5728 BPTT \u671f\u95f4\u8ba1\u7b97\u7684\u68af\u5ea6\u6765\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u3002 \u8bf7\u6ce8\u610f\uff0c\u68af\u5ea6\u5728\u635f\u5931\u51fd\u6570\u6240\u4f7f\u7528\u7684\u6240\u6709\u8f93\u51fa\u4e2d\u53cd\u5411\u6d41\u52a8\uff0c\u800c\u4e0d\u4ec5\u4ec5\u901a\u8fc7\u6700\u7ec8\u8f93\u51fa\uff08\u4f8b\u5982\uff0c\u5728\u56fe 14-5 \u4e2d\uff0c\u635f\u5931\u51fd\u6570\u4f7f\u7528\u7f51\u7edc\u7684\u6700\u540e\u4e09\u4e2a\u8f93\u51fa \uff0c \u548c \uff0c\u6240\u4ee5\u68af\u5ea6\u6d41\u7ecf\u8fd9\u4e09\u4e2a\u8f93\u51fa\uff0c\u4f46\u4e0d\u901a\u8fc7 \u548c \uff09\u3002 \u800c\u4e14\uff0c\u7531\u4e8e\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u9aa4\u4f7f\u7528\u76f8\u540c\u7684\u53c2\u6570 W \u548c b \uff0c\u6240\u4ee5\u53cd\u5411\u4f20\u64ad\u5c06\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u5e76\u4e14\u603b\u7ed3\u6240\u6709\u65f6\u95f4\u6b65\u9aa4\u3002 \u8bad\u7ec3\u5e8f\u5217\u5206\u7c7b\u5668 \u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a RNN \u6765\u5206\u7c7b MNIST \u56fe\u50cf\u3002 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5c06\u66f4\u9002\u5408\u4e8e\u56fe\u50cf\u5206\u7c7b\uff08\u89c1\u7b2c 13 \u7ae0\uff09\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u4f60\u5df2\u7ecf\u719f\u6089\u7684\u7b80\u5355\u4f8b\u5b50\u3002 \u6211\u4eec\u5c06\u628a\u6bcf\u4e2a\u56fe\u50cf\u89c6\u4e3a 28 \u884c 28 \u50cf\u7d20\u7684\u5e8f\u5217\uff08\u56e0\u4e3a\u6bcf\u4e2aMNIST\u56fe\u50cf\u662f 28\u00d728 \u50cf\u7d20\uff09\u3002 \u6211\u4eec\u5c06\u4f7f\u7528 150 \u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u7684\u5355\u5143\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\uff0c\u5176\u4e2d\u5305\u542b\u8fde\u63a5\u5230\u4e0a\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u51fa\u7684 10 \u4e2a\u795e\u7ecf\u5143\uff08\u6bcf\u4e2a\u7c7b\u4e00\u4e2a\uff09\uff0c\u7136\u540e\u662f\u4e00\u4e2a softmax \u5c42\uff08\u89c1\u56fe 14-6\uff09\u3002 \u5efa\u6a21\u9636\u6bb5\u975e\u5e38\u7b80\u5355\uff0c \u5b83\u548c\u6211\u4eec\u5728\u7b2c 10 \u7ae0\u4e2d\u5efa\u7acb\u7684 MNIST \u5206\u7c7b\u5668\u51e0\u4e4e\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f\u5c55\u5f00\u7684 RNN \u66ff\u6362\u4e86\u9690\u5c42\u3002 \u6ce8\u610f\uff0c\u5168\u8fde\u63a5\u5c42\u8fde\u63a5\u5230\u72b6\u6001\u5f20\u91cf\uff0c\u5176\u4ec5\u5305\u542b RNN \u7684\u6700\u7ec8\u72b6\u6001\uff08\u5373\uff0c\u7b2c 28 \u4e2a\u8f93\u51fa\uff09\u3002 \u53e6\u8bf7\u6ce8\u610f\uff0c y \u662f\u76ee\u6807\u7c7b\u7684\u5360\u4f4d\u7b26\u3002 n_steps = 28 n_inputs = 28 n_neurons = 150 n_outputs = 10 learning_rate = 0.001 X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) y = tf.placeholder(tf.int32, [None]) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) outputs, states = tf.nn.dynamic_rnn(basic_cell, X, dtype=tf.float32) logits = tf.layers.dense(states, n_outputs) xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy) optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(loss) correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) init = tf.global_variables_initializer() \u73b0\u5728\u8ba9\u6211\u4eec\u52a0\u8f7d MNIST \u6570\u636e\uff0c\u5e76\u6309\u7167\u7f51\u7edc\u7684\u9884\u671f\u65b9\u5f0f\u5c06\u6d4b\u8bd5\u6570\u636e\u91cd\u5851\u4e3a [batch_size, n_steps, n_inputs] \u3002 \u6211\u4eec\u4e4b\u540e\u4f1a\u5173\u6ce8\u8bad\u7ec3\u6570\u636e\u7684\u91cd\u5851\u3002 from tensorflow.examples.tutorials.mnist import input_data mnist = input_data.read_data_sets(\"/tmp/data/\") X_test = mnist.test.images.reshape((-1, n_steps, n_inputs)) y_test = mnist.test.labels \u73b0\u5728\u6211\u4eec\u51c6\u5907\u8bad\u7ec3 RNN \u4e86\u3002 \u6267\u884c\u9636\u6bb5\u4e0e\u7b2c 10 \u7ae0\u4e2d MNIST \u5206\u7c7b\u5668\u7684\u6267\u884c\u9636\u6bb5\u5b8c\u5168\u76f8\u540c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6211\u4eec\u5728\u5c06\u6bcf\u4e2a\u8bad\u7ec3\u7684\u6279\u91cf\u63d0\u4f9b\u7ed9\u7f51\u7edc\u4e4b\u524d\u8981\u91cd\u65b0\u8c03\u6574\u3002 batch_size = 150 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) X_batch = X_batch.reshape((-1, n_steps, n_inputs)) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) acc_train = accuracy.eval(feed_dict={X: X_batch, y: y_batch}) acc_test = accuracy.eval(feed_dict={X: X_test, y: y_test}) print(epoch, \"Train accuracy:\", acc_train, \"Test accuracy:\", acc_test) \u8f93\u51fa\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a \u6211\u4eec\u83b7\u5f97\u4e86\u8d85\u8fc7 98% \u7684\u51c6\u786e\u6027 - \u4e0d\u9519\uff01 \u53e6\u5916\uff0c\u901a\u8fc7\u8c03\u6574\u8d85\u53c2\u6570\uff0c\u4f7f\u7528 He \u521d\u59cb\u5316\u521d\u59cb\u5316 RNN \u6743\u91cd\uff0c\u66f4\u957f\u65f6\u95f4\u8bad\u7ec3\u6216\u6dfb\u52a0\u4e00\u4e9b\u6b63\u5219\u5316\uff08\u4f8b\u5982\uff0cdroupout\uff09\uff0c\u4f60\u80af\u5b9a\u4f1a\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176\u6784\u9020\u4ee3\u7801\u5305\u88c5\u5728\u4e00\u4e2a\u53d8\u91cf\u4f5c\u7528\u57df\u5185\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 variable_scope(\"rnn\", initializer = variance_scaling_initializer()) \u6765\u4f7f\u7528 He \u521d\u59cb\u5316\uff09\u6765\u4e3a RNN \u6307\u5b9a\u521d\u59cb\u5316\u5668\u3002 \u4e3a\u9884\u6d4b\u65f6\u95f4\u5e8f\u5217\u800c\u8bad\u7ec3 \u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u5904\u7406\u65f6\u95f4\u5e8f\u5217\uff0c\u5982\u80a1\u4ef7\uff0c\u6c14\u6e29\uff0c\u8111\u7535\u6ce2\u6a21\u5f0f\u7b49\u7b49\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8bad\u7ec3\u4e00\u4e2a RNN \u6765\u9884\u6d4b\u751f\u6210\u7684\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u4e0b\u4e00\u4e2a\u503c\u3002 \u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u662f\u4ece\u65f6\u95f4\u5e8f\u5217\u4e2d\u968f\u673a\u9009\u53d6\u7684 20 \u4e2a\u8fde\u7eed\u503c\u7684\u5e8f\u5217\uff0c\u76ee\u6807\u5e8f\u5217\u4e0e\u8f93\u5165\u5e8f\u5217\u76f8\u540c\uff0c\u9664\u4e86\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u65f6\u95f4\u6b65\uff08\u53c2\u89c1\u56fe14-7\uff09\u3002 \u9996\u5148\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a RNN\u3002 \u5b83\u5c06\u5305\u542b 100 \u4e2a\u5faa\u73af\u795e\u7ecf\u5143\uff0c\u5e76\u4e14\u6211\u4eec\u5c06\u5728 20 \u4e2a\u65f6\u95f4\u6b65\u9aa4\u4e0a\u5c55\u5f00\u5b83\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u5c06\u662f 20 \u4e2a\u8f93\u5165\u90a3\u4e48\u957f\u3002 \u6bcf\u4e2a\u8f93\u5165\u5c06\u4ec5\u5305\u542b\u4e00\u4e2a\u7279\u5f81\uff08\u5728\u8be5\u65f6\u95f4\u7684\u503c\uff09\u3002 \u76ee\u6807\u4e5f\u662f 20 \u4e2a\u8f93\u5165\u7684\u5e8f\u5217\uff0c\u6bcf\u4e2a\u8f93\u5165\u5305\u542b\u4e00\u4e2a\u503c\u3002 \u4ee3\u7801\u4e0e\u4e4b\u524d\u51e0\u4e4e\u76f8\u540c\uff1a \u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u5c06\u4e0d\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u529f\u80fd\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u8bd5\u56fe\u9884\u6d4b\u80a1\u7968\u4ef7\u683c\uff0c\u5219\u4f60\u53ef\u80fd\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u9aa4\u90fd\u4f1a\u6709\u8bb8\u591a\u5176\u4ed6\u8f93\u5165\u529f\u80fd\uff0c\u4f8b\u5982\u7ade\u4e89\u80a1\u7968\u7684\u4ef7\u683c\uff0c\u5206\u6790\u5e08\u7684\u8bc4\u7ea7\u6216\u53ef\u80fd\u5e2e\u52a9\u7cfb\u7edf\u8fdb\u884c\u9884\u6d4b\u7684\u4efb\u4f55\u5176\u4ed6\u529f\u80fd\u3002 \u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a 100 \u7684\u8f93\u51fa\u5411\u91cf\u3002\u4f46\u662f\u6211\u4eec\u5b9e\u9645\u9700\u8981\u7684\u662f\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u5355\u4e2a\u8f93\u51fa\u503c\u3002 \u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06\u5355\u5143\u5305\u88c5\u5728 OutputProjectionWrapper \u4e2d\u3002 \u5355\u5143\u5305\u88c5\u5668\u5c31\u50cf\u4e00\u4e2a\u666e\u901a\u7684\u5355\u5143\uff0c\u4ee3\u7406\u6bcf\u4e2a\u65b9\u6cd5\u8c03\u7528\u4e00\u4e2a\u5e95\u5c42\u5355\u5143\uff0c\u4f46\u662f\u5b83\u4e5f\u589e\u52a0\u4e86\u4e00\u4e9b\u529f\u80fd\u3002 Out putProjectionWrapper \u5728\u6bcf\u4e2a\u8f93\u51fa\u4e4b\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u5b8c\u5168\u8fde\u63a5\u7684\u7ebf\u6027\u795e\u7ecf\u5143\u5c42\uff08\u5373\u6ca1\u6709\u4efb\u4f55\u6fc0\u6d3b\u51fd\u6570\uff09\uff08\u4f46\u4e0d\u5f71\u54cd\u5355\u5143\u72b6\u6001\uff09\u3002 \u6240\u6709\u8fd9\u4e9b\u5b8c\u5168\u8fde\u63a5\u7684\u5c42\u5171\u4eab\u76f8\u540c\uff08\u53ef\u8bad\u7ec3\uff09\u7684\u6743\u91cd\u548c\u504f\u5dee\u9879\u3002 \u7ed3\u679c RNN \u5982\u56fe 14-8 \u6240\u793a\u3002 \u5305\u88c5\u5355\u5143\u662f\u76f8\u5f53\u5bb9\u6613\u7684\u3002 \u8ba9\u6211\u4eec\u901a\u8fc7\u5c06 BasicRNNCell \u5305\u88c5\u5230 OutputProjectionWrapper \u4e2d\u6765\u8c03\u6574\u524d\u9762\u7684\u4ee3\u7801\uff1a cell =tf.contrib.rnn.OutputProjectionWrapper( tf.contrib.rnn.BasicRNNCell(num_units=n_neurons,activation=tf.nn.relu), output_size=n_outputs) \u5230\u73b0\u5728\u4e3a\u6b62\u8fd8\u633a\u597d\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u635f\u5931\u51fd\u6570\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u4e4b\u524d\u7684\u56de\u5f52\u4efb\u52a1\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u50cf\u5f80\u5e38\u4e00\u6837\u521b\u5efa\u4e00\u4e2a Adam \u4f18\u5316\u5668\uff0c\u8bad\u7ec3\u64cd\u4f5c\u548c\u53d8\u91cf\u521d\u59cb\u5316\u64cd\u4f5c\uff1a \u751f\u6210 RNN \u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u8bad\u7ec3\u4e86\u4e00\u4e2a\u80fd\u591f\u9884\u6d4b\u672a\u6765\u65f6\u523b\u6837\u672c\u503c\u7684\u6a21\u578b\uff0c\u6b63\u5982\u524d\u6587\u6240\u8ff0\uff0c\u53ef\u4ee5\u7528\u6a21\u578b\u6765\u751f\u6210\u65b0\u7684\u5e8f\u5217\u3002 \u4e3a\u6a21\u578b\u63d0\u4f9b \u957f\u5ea6\u4e3a n_steps \u7684\u79cd\u5b50\u5e8f\u5217, \u6bd4\u5982\u5168\u96f6\u5e8f\u5217\uff0c\u7136\u540e\u901a\u8fc7\u6a21\u578b\u9884\u6d4b\u4e0b\u4e00\u65f6\u523b\u7684\u503c\uff1b\u628a\u8be5\u9884\u6d4b\u503c\u6dfb\u52a0\u5230\u79cd\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\uff0c\u7528\u6700\u540e\u9762 \u957f\u5ea6\u4e3a n_steps \u7684\u5e8f\u5217\u505a\u4e3a\u65b0\u7684\u79cd\u5b50\u5e8f\u5217\uff0c\u505a\u4e0b\u4e00\u6b21\u9884\u6d4b\uff0c\u4ee5\u6b64\u7c7b\u63a8\u751f\u6210\u9884\u6d4b\u5e8f\u5217\u3002 \u5982\u56fe 14-11 \u6240\u793a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4ea7\u751f\u7684\u5e8f\u5217\u4f1a\u8ddf\u539f\u59cb\u65f6\u95f4\u5e8f\u5217\u76f8\u4f3c\u3002 sequence = [0.] * n_steps for iteration in range(300): X_batch = np.array(sequence[-n_steps:].reshape(1, n_steps, 1) y_pred = sess.run(outputs, feed_dict={X: X_batch} sequence.append(y_pred[0, -1, 0] \u5982\u679c\u4f60\u8bd5\u56fe\u628a\u7ea6\u7ff0\u00b7\u5217\u4fac\u7684\u5531\u7247\u585e\u7ed9\u4e00\u4e2a RNN \u6a21\u578b\uff0c\u770b\u5b83\u80fd\u4e0d\u80fd\u751f\u6210\u4e0b\u4e00\u5f20\u300a\u60f3\u8c61\u300b\u4e13\u8f91\u3002 \u6ce8 \u7ea6\u7ff0\u00b7\u5217\u4fac \u6709\u4e00\u5f20\u4e13\u8f91\u300aImagine\u300b\uff081971\uff09\uff0c\u8fd9\u91cc\u53d6\u5176\u53cc\u5173\u7684\u610f\u601d \u4e5f\u8bb8\u4f60\u9700\u8981\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684 RNN \u7f51\u7edc\uff0c\u5b83\u6709\u66f4\u591a\u7684\u795e\u7ecf\u5143\uff0c\u5c42\u6570\u4e5f\u66f4\u591a\u3002\u4e0b\u9762\u6765\u63a2\u7a76\u4e00\u4e0b\u6df1\u5ea6 RNN\u3002 \u6df1\u5ea6 RNN \u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u5c31\u662f\u628a\u4e00\u5c42\u5c42\u795e\u7ecf\u5143\u5806\u53e0\u8d77\u6765\uff0c\u6b63\u5982\u56fe 14-12 \u6240\u793a\u7684\u90a3\u6837\uff0c\u5b83\u5448\u73b0\u4e86\u4e00\u79cd\u6df1\u5ea6 RNN\u3002 \u4e3a\u4e86\u7528 TensorFlow \u5b9e\u73b0\u6df1\u5ea6 RNN\uff0c\u53ef\u5148\u521b\u5efa\u4e00\u4e9b\u795e\u7ecf\u5355\u5143\uff0c\u7136\u540e\u5806\u53e0\u8fdb MultiRNNCell \u3002 \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u521b\u5efa\u4e86 3 \u4e2a\u76f8\u540c\u7684\u795e\u7ecf\u5355\u5143\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4e0d\u540c\u7c7b\u522b\u7684\u3001\u5305\u542b\u4e0d\u540c\u4e0d\u540c\u6570\u91cf\u795e\u7ecf\u5143\u7684\u5355\u5143\uff09 n_neurons = 100 n_layers = 3 basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) multi_layer_cell = tf.contrib.rnn.MultiRNNCell([basic_cell] * n_layers) outputs, states = tf.nn.dynamic_rnn(multi_layer_cell, X, dtype=tf.float32) \u8fd9\u4e9b\u4ee3\u7801\u5c31\u5b8c\u6210\u4e86\u8fd9\u90e8\u5206\u5806\u53e0\u5de5\u4f5c\u3002 status \u53d8\u91cf\u5305\u542b\u4e86\u6bcf\u5c42\u7684\u4e00\u4e2a\u5f20\u91cf\uff0c\u8fd9\u4e2a\u5f20\u91cf\u5c31\u4ee3\u8868\u4e86\u8be5\u5c42\u795e\u7ecf\u5355\u5143\u7684\u6700\u7ec8\u72b6\u6001\uff08\u7ef4\u5ea6\u4e3a [batch_size, n_neurons] \uff09\u3002 \u5982\u679c\u5728\u521b\u5efa MultiRNNCell \u65f6\u8bbe\u7f6e\u4e86 state_is_tuple=False \uff0c\u90a3\u4e48 status \u53d8\u91cf\u5c31\u53d8\u6210\u4e86\u5355\u4e2a\u5f20\u91cf\uff0c\u5b83\u5305\u542b\u4e86\u6bcf\u4e00\u5c42\u7684\u72b6\u6001\uff0c\u5176\u5728\u5217\u7684\u65b9\u5411\u4e0a\u8fdb\u884c\u4e86\u805a\u5408\uff0c\u7ef4\u5ea6\u4e3a [batch_size, n_layers*n_neurons] \u3002 \u6ce8\u610f\u5728 TensorFlow \u7248\u672c 0.11.0 \u4e4b\u524d\uff0c status \u662f\u5355\u4e2a\u5f20\u91cf\u662f\u9ed8\u8ba4\u8bbe\u7f6e\u3002 \u5728\u591a\u4e2a GPU \u4e0a\u5206\u5e03\u5f0f\u90e8\u7f72\u6df1\u5ea6 RNN \u7f51\u7edc Dropout \u7684\u5e94\u7528 \u5bf9\u4e8e\u6df1\u5c42\u6df1\u5ea6 RNN\uff0c\u5728\u8bad\u7ec3\u96c6\u4e0a\u5f88\u5bb9\u6613\u8fc7\u62df\u5408\u3002Dropout \u662f\u9632\u6b62\u8fc7\u62df\u5408\u7684\u5e38\u7528\u6280\u672f\u3002 \u53ef\u4ee5\u7b80\u5355\u7684\u5728 RNN \u5c42\u4e4b\u524d\u6216\u4e4b\u540e\u6dfb\u52a0\u4e00\u5c42 Dropout \u5c42\uff0c\u4f46\u5982\u679c\u9700\u8981\u5728 RNN \u5c42\u4e4b\u95f4\u5e94\u7528 Dropout \u6280\u672f\u5c31\u9700\u8981 DropoutWrapper \u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6bcf\u4e00\u5c42\u7684 RNN \u7684\u8f93\u5165\u524d\u90fd\u5e94\u7528\u4e86 Dropout\uff0cDropout \u7684\u6982\u7387\u4e3a 50%\u3002 keep_prob = 0.5 cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) cell_drop = tf.contrib.rnn.DropoutWrapper(cell, input_keep_prob=keep_prob) multi_layer_cell = tf.contrib.rnn.MultiRNNCell([cell_drop]*n_layers) rnn_outputs, states = tf.nn.dynamic_rnn(multi_layer_cell, X, dtype=tf.float32) \u540c\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e output_keep_prob \u6765\u5728\u8f93\u51fa\u5e94\u7528 Dropout \u6280\u672f\u3002 \u7136\u800c\u5728\u4ee5\u4e0a\u4ee3\u7801\u4e2d\u5b58\u5728\u7684\u4e3b\u8981\u95ee\u9898\u662f\uff0cDropout \u4e0d\u7ba1\u662f\u5728\u8bad\u7ec3\u8fd8\u662f\u6d4b\u8bd5\u65f6\u90fd\u8d77\u4f5c\u7528\u4e86\uff0c\u800c\u6211\u4eec\u60f3\u8981\u7684\u4ec5\u4ec5\u662f\u5728\u8bad\u7ec3\u65f6\u5e94\u7528 Dropout\u3002 \u5f88\u4e0d\u5e78\u7684\u662f DropoutWrapper \u4e0d\u652f\u6301 is_training \u8fd9\u6837\u4e00\u4e2a\u8bbe\u7f6e\u9009\u9879\u3002\u56e0\u6b64\u5fc5\u987b\u81ea\u5df1\u5199 Dropout \u5305\u88c5\u7c7b\uff0c\u6216\u8005\u521b\u5efa\u4e24\u4e2a\u8ba1\u7b97\u56fe\uff0c\u4e00\u4e2a\u7528\u6765\u8bad\u7ec3\uff0c\u4e00\u4e2a\u7528\u6765\u6d4b\u8bd5\u3002\u540e\u5219\u53ef\u901a\u8fc7\u5982\u4e0b\u9762\u4ee3\u7801\u8fd9\u6837\u5b9e\u73b0\u3002 import sys is_training = (sys.argv[-1] == \"train\") X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) y = tf.placeholder(tf.float32, [None, n_steps, n_outputs]) cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) if is_training: cell = tf.contrib.rnn.DropoutWrapper(cell, input_keep_prob=keep_prob) multi_layer_cell = tf.contrib.rnn.MultiRNNCell([cell]*n_layers) rnn_outpus, status = tf.nn.dynamic_rnn(multi_layer_cell, X, dtype=tf.float32) [...] # bulid the rest of the graph init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: if is_training: init.run() for iteration in range(n_iterations): [...] # train the model save_path = saver.save(sess, \"/tmp/my_model.ckpt\") else: saver.restore(sess, \"/tmp/my_model.ckpt\") [...] # use the model \u901a\u8fc7\u4ee5\u4e0a\u7684\u65b9\u6cd5\u5c31\u80fd\u591f\u8bad\u7ec3\u5404\u79cd RNN \u7f51\u7edc\u4e86\u3002\u7136\u800c\u5bf9\u4e8e\u957f\u5e8f\u5217\u7684 RNN \u8bad\u7ec3\u8fd8\u8a00\u4e4b\u8fc7\u65e9\uff0c\u4e8b\u60c5\u4f1a\u53d8\u5f97\u6709\u4e00\u4e9b\u56f0\u96be\u3002 \u90a3\u4e48\u6211\u4eec\u6765\u63a2\u8ba8\u4e00\u4e0b\u7a76\u7adf\u8fd9\u662f\u4e3a\u4ec0\u4e48\u548c\u600e\u4e48\u5e94\u5bf9\u5462\uff1f \u957f\u65f6\u8bad\u7ec3\u7684\u56f0\u96be \u5728\u8bad\u7ec3\u957f\u5e8f\u5217\u7684 RNN \u6a21\u578b\u65f6\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u628a RNN \u5728\u65f6\u95f4\u7ef4\u5ea6\u4e0a\u5c55\u5f00\u6210\u5f88\u6df1\u7684\u795e\u7ecf\u7f51\u7edc\u3002\u6b63\u5982\u4efb\u4f55\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e00\u6837\uff0c\u5176\u9762\u4e34\u7740\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u7684\u95ee\u9898\uff0c\u4f7f\u8bad\u7ec3\u65e0\u6cd5\u7ec8\u6b62\u6216\u6536\u655b\u3002 \u5f88\u591a\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u7f13\u89e3\u8fd9\u79cd\u95ee\u9898\u7684\u6280\u5de7\u90fd\u53ef\u4ee5\u5e94\u7528\u5728\u6df1\u5ea6\u5c55\u5f00\u7684 RNN \u7f51\u7edc\uff1a\u597d\u7684\u53c2\u6570\u521d\u59cb\u5316\u65b9\u5f0f\uff0c\u975e\u9971\u548c\u7684\u6fc0\u6d3b\u51fd\u6570\uff08\u5982 ReLU\uff09\uff0c\u6279\u91cf\u89c4\u8303\u5316\uff08Batch Normalization\uff09\uff0c \u68af\u5ea6\u622a\u65ad\uff08Gradient Clipping\uff09\uff0c\u66f4\u5feb\u7684\u4f18\u5316\u5668\u3002 \u5373\u4fbf\u5982\u6b64\uff0c RNN \u5728\u5904\u7406\u9002\u4e2d\u7684\u957f\u5e8f\u5217\uff08\u5982 100 \u8f93\u5165\u5e8f\u5217\uff09\u4e5f\u5728\u8bad\u7ec3\u65f6\u8868\u73b0\u7684\u5f88\u6162\u3002 \u6700\u7b80\u5355\u548c\u5e38\u89c1\u7684\u65b9\u6cd5\u89e3\u51b3\u8bad\u7ec3\u65f6\u957f\u95ee\u9898\u5c31\u662f\u5728\u8bad\u7ec3\u9636\u6bb5\u4ec5\u4ec5\u5c55\u5f00\u9650\u5b9a\u65f6\u95f4\u6b65\u957f\u7684 RNN \u7f51\u7edc\uff0c\u4e00\u79cd\u79f0\u4e3a\u622a\u65ad\u65f6\u95f4\u53cd\u5411\u4f20\u64ad\u7684\u7b97\u6cd5\u3002 \u5728 TensorFlow \u4e2d\u901a\u8fc7\u622a\u65ad\u8f93\u5165\u5e8f\u5217\u6765\u7b80\u5355\u5b9e\u73b0\u8fd9\u79cd\u529f\u80fd\u3002\u4f8b\u5982\u5728\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u95ee\u9898\u4e0a\u53ef\u4ee5\u5728\u8bad\u7ec3\u65f6\u51cf\u5c0f n_steps \u6765\u5b9e\u73b0\u622a\u65ad\u3002\u7406\u6240\u5f53\u7136\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u9650\u5236\u6a21\u578b\u5728\u957f\u671f\u6a21\u5f0f\u7684\u5b66\u4e60\u80fd\u529b\u3002\u4e00\u79cd\u53d8\u901a\u65b9\u6848\u65f6\u786e\u4fdd\u7f29\u77ed\u7684\u5e8f\u5217\u4e2d\u5305\u542b\u65e7\u6570\u636e\u548c\u65b0\u6570\u636e\uff0c\u4ece\u800c\u4f7f\u6a21\u578b\u83b7\u5f97\u4e24\u8005\u4fe1\u606f\uff08\u5982\u5e8f\u5217\u540c\u65f6\u5305\u542b\u6700\u8fd1\u4e94\u4e2a\u6708\u7684\u6570\u636e\uff0c\u6700\u8fd1\u4e94\u5468\u7684\u548c\u6700\u8fd1\u4e94\u5929\u7684\u6570\u636e\uff09\u3002 \u95ee\u9898\u65f6\u5982\u4f55\u786e\u4fdd\u4ece\u53bb\u5e74\u7684\u7ec6\u5206\u7c7b\u4e2d\u83b7\u53d6\u7684\u6570\u636e\u6709\u6548\u6027\u5462\uff1f\u8fd9\u671f\u95f4\u77ed\u6682\u4f46\u91cd\u8981\u7684\u4e8b\u4ef6\u5bf9\u540e\u4e16\u7684\u5f71\u54cd\uff0c\u751a\u81f3\u65f6\u6570\u5e74\u540e\u8fd9\u79cd\u5f71\u54cd\u662f\u5426\u4e00\u5b9a\u8981\u8003\u8651\u5728\u5185\u5462\uff08\u5982\u9009\u4e3e\u7ed3\u679c\uff09\uff1f\u8fd9\u79cd\u65b9\u6848\u6709\u5176\u5148\u5929\u7684\u4e0d\u8db3\u4e4b\u5904\u3002 \u5728\u957f\u7684\u65f6\u95f4\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u8981\u9762\u4e34\u7684\u95ee\u9898\u65f6\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684\u8bb0\u5fc6\u4f1a\u5728\u957f\u65f6\u95f4\u8fd0\u884c\u7684 RNN \u7f51\u7edc\u4e2d\u9010\u6e10\u6de1\u53bb\u3002\u786e\u5b9e\uff0c\u901a\u8fc7\u53d8\u6362\u7684\u65b9\u5f0f\uff0c\u6570\u636e\u7a7f\u6d41\u5728 RNN \u7f51\u7edc\u4e4b\u4e2d\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6b65\u957f\u540e\u90fd\u6709\u4e00\u4e9b\u4fe1\u606f\u88ab\u629b\u5f03\u6389\u4e86\u3002\u90a3\u4e48\u5728\u4e00\u5b9a\u65f6\u95f4\u540e\uff0c\u7b2c\u4e00\u4e2a\u8f93\u5165\u5b9e\u9645\u4e0a\u4f1a\u5728 RNN \u7684\u72b6\u6001\u4e2d\u6d88\u5931\u4e8e\u65e0\u5f62\u3002 \u6bd4\u5982\u8bf4\uff0c\u4f60\u60f3\u8981\u5206\u6790\u957f\u7bc7\u5e45\u7684\u5f71\u8bc4\u7684\u60c5\u611f\u7c7b\u522b\uff0c\u5f71\u8bc4\u4ee5 \"I love this movie\" \u5f00\u7bc7\uff0c\u5e76\u8f85\u4ee5\u5404\u79cd\u6539\u5584\u5f71\u7247\u7684\u4e00\u4e9b\u5efa\u8bae\u3002\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5982\u679c RNN \u7f51\u7edc\u9010\u6e10\u5fd8\u8bb0\u4e86\u5f00\u5934\u7684\u51e0\u4e2a\u8bcd\uff0cRNN \u7f51\u7edc\u7684\u5224\u65ad\u5b8c\u5168\u6709\u53ef\u80fd\u4f1a\u5bf9\u5f71\u8bc4\u65ad\u7ae0\u53d6\u4e49\u3002 \u4e3a\u4e86\u89e3\u51b3\u5176\u4e2d\u7684\u95ee\u9898\uff0c\u5404\u79cd\u80fd\u591f\u643a\u5e26\u957f\u65f6\u8bb0\u5fc6\u7684\u795e\u7ecf\u5355\u5143\u7684\u53d8\u4f53\u88ab\u63d0\u51fa\u3002\u8fd9\u4e9b\u53d8\u4f53\u662f\u6709\u6548\u7684\uff0c\u5f80\u5f80\u57fa\u672c\u5f62\u5f0f\u7684\u795e\u7ecf\u5355\u5143\u5c31\u4e0d\u600e\u4e48\u88ab\u4f7f\u7528\u4e86\u3002 \u9996\u5148\u4e86\u89e3\u4e00\u4e0b\u6700\u6d41\u884c\u7684\u4e00\u79cd\u957f\u65f6\u8bb0\u5fc6\u795e\u7ecf\u5355\u5143\uff1a\u957f\u77ed\u65f6\u8bb0\u5fc6\u795e\u7ecf\u5355\u5143 LSTM\u3002 LSTM \u5355\u5143 \u957f\u77ed\u65f6\u8bb0\u5fc6\u5355\u5143\u5728 1997 \u5e74 \u7531 S.H. \u548c J.S. \u9996\u6b21\u63d0\u51fa [3]\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5e74\u5185\u7ecf\u8fc7 A.G\uff0cH.S [4]\uff0c W.Z [5] \u7b49\u6570\u4f4d\u7814\u7a76\u4eba\u5458\u7684\u6539\u8fdb\u9010\u6e10\u5f62\u6210\u3002\u5982\u679c\u628a LSTM \u5355\u5143\u770b\u4f5c\u4e00\u4e2a\u9ed1\u76d2\uff0c\u4ece\u5916\u56f4\u770b\u5b83\u548c\u57fa\u672c\u5f62\u5f0f\u7684\u8bb0\u5fc6\u5355\u5143\u5f88\u76f8\u4f3c\uff0c\u4f46 LSTM \u5355\u5143\u4f1a\u6bd4\u57fa\u672c\u5355\u5143\u6027\u80fd\u66f4\u597d\uff0c\u6536\u655b\u66f4\u5feb\uff0c\u80fd\u591f\u611f\u77e5\u6570\u636e\u7684\u957f\u65f6\u4f9d\u8d56\u3002TensorFlow \u4e2d\u901a\u8fc7 BasicLSTMCell \u5b9e\u73b0 LSTM \u5355\u5143\u3002 [3]: \"Long Short-Term Memory,\" S.Hochreiter and J.Schmidhuber(1997) [4]: \"Long Short-Term Memory Recurrent Neural Network Architectures for Large Scale Acoustic Modeling,\" H.Sak et al.(2014) [5]: \"Recurrent Neural Network Regularization,\" W.Zaremba et al.(2015) lstm_cell = tf.contrib.rnn.BasicLSTMCell(num_units=n_neurons) LSTM \u5355\u5143\u7684\u5de5\u4f5c\u673a\u5236\u662f\u4ec0\u4e48\u5462\uff1f\u5728\u56fe 14-13 \u4e2d\u5c55\u793a\u4e86\u57fa\u672c LSTM \u5355\u5143\u7684\u7ed3\u6784\u3002 \u4e0d\u89c2\u5bdf LSTM \u5355\u5143\u5185\u90e8\uff0c\u9664\u4e86\u4e00\u4e9b\u4e0d\u540c\u5916\u8ddf\u5e38\u89c4 RNN \u5355\u5143\u6781\u5176\u76f8\u4f3c\u3002\u8fd9\u4e9b\u4e0d\u540c\u5305\u62ec LSTM \u5355\u5143\u72b6\u6001\u5206\u4e3a\u4e24\u4e2a\u5411\u91cf\uff1a \u548c \uff08 c \u4ee3\u8868 cell\uff09\u3002\u53ef\u4ee5\u7b80\u5355\u8ba4\u4e3a \u662f\u77ed\u671f\u8bb0\u5fc6\u72b6\u6001\uff0c \u662f\u957f\u671f\u8bb0\u5fc6\u72b6\u6001\u3002 \u597d\uff0c\u6211\u4eec\u6765\u6253\u5f00\u76d2\u5b50\u3002LSTM \u5355\u5143\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5176\u80fd\u591f\u5b66\u4e60\u4ece\u957f\u671f\u72b6\u6001\u4e2d\u5b58\u50a8\u4ec0\u4e48\uff0c\u5fd8\u8bb0\u4ec0\u4e48\uff0c\u8bfb\u53d6\u4ec0\u4e48\u3002\u957f\u671f\u72b6\u6001 \u4ece\u5de6\u5411\u53f3\u5728\u7f51\u7edc\u4e2d\u4f20\u64ad\uff0c\u4f9d\u6b21\u7ecf\u8fc7\u9057\u5fd8\u95e8\uff08forget gate\uff09\u65f6\u4e22\u5f03\u4e00\u4e9b\u8bb0\u5fc6\uff0c\u4e4b\u540e\u52a0\u6cd5\u64cd\u4f5c\u589e\u52a0\u4e00\u4e9b\u8bb0\u5fc6\uff08\u4ece\u8f93\u5165\u95e8\u4e2d\u9009\u62e9\u4e00\u4e9b\u8bb0\u5fc6\uff09\u3002\u8f93\u51fa \u4e0d\u7ecf\u4efb\u4f55\u8f6c\u6362\u76f4\u63a5\u8f93\u51fa\u3002\u6bcf\u4e2a\u5355\u4f4d\u65f6\u95f4\u6b65\u957f\u540e\uff0c\u90fd\u6709\u4e00\u4e9b\u8bb0\u5fc6\u88ab\u629b\u5f03\uff0c\u65b0\u7684\u8bb0\u5fc6\u88ab\u6dfb\u52a0\u8fdb\u6765\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u957f\u65f6\u72b6\u6001\u7ecf\u8fc7 tanh \u6fc0\u6d3b\u51fd\u6570\u901a\u8fc7\u8f93\u51fa\u95e8\u5f97\u5230\u77ed\u65f6\u8bb0\u5fc6 \uff0c\u540c\u65f6\u5b83\u4e5f\u662f\u8fd9\u4e00\u65f6\u523b\u7684\u5355\u5143\u8f93\u51fa\u7ed3\u679c \u3002\u63a5\u4e0b\u6765\u8ba8\u8bba\u4e00\u4e0b\u65b0\u7684\u8bb0\u5fc6\u65f6\u5982\u4f55\u4ea7\u751f\u7684\uff0c\u95e8\u7684\u529f\u80fd\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 \u9996\u5148\uff0c\u5f53\u524d\u7684\u8f93\u5165\u5411\u91cf \u548c\u524d\u4e00\u65f6\u523b\u7684\u77ed\u65f6\u72b6\u6001 \u4f5c\u4e3a\u8f93\u5165\u4f20\u7ed9\u56db\u4e2a\u5168\u8fde\u63a5\u5c42\uff0c\u8fd9\u56db\u4e2a\u5168\u8fde\u63a5\u5c42\u6709\u4e0d\u540c\u7684\u76ee\u7684\uff1a \u5176\u4e2d\u4e3b\u8981\u7684\u5168\u8fde\u63a5\u5c42\u8f93\u51fa \uff0c\u5b83\u7684\u5e38\u89c4\u4efb\u52a1\u5c31\u662f\u89e3\u6790\u5f53\u524d\u7684\u8f93\u5165 \u548c\u524d\u4e00\u65f6\u523b\u7684\u77ed\u65f6\u72b6\u6001 \u3002\u5728\u57fa\u672c\u5f62\u5f0f\u7684 RNN \u5355\u5143\u4e2d\uff0c\u5c31\u4e0e\u8fd9\u79cd\u5f62\u5f0f\u4e00\u6837\uff0c\u76f4\u63a5\u8f93\u51fa\u4e86 \u548c \u3002\u4e0e\u4e4b\u4e0d\u540c\u7684\u662f LSTM \u5355\u5143\u4f1a\u5c06\u4e00\u90e8\u5206 \u5b58\u50a8\u5728\u957f\u65f6\u72b6\u6001\u4e2d\u3002 \u5176\u5b83\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\u88ab\u79f0\u4e3a\u95e8\u63a7\u5236\u5668\uff08gate controller\uff09\u3002\u5176\u91c7\u7528 Logistic \u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u8f93\u51fa\u8303\u56f4\u5728 0 \u5230 1 \u4e4b\u95f4\u3002\u6b63\u5982\u5728\u7ed3\u6784\u56fe\u4e2d\u6240\u793a\uff0c\u8fd9\u4e09\u4e2a\u5c42\u7684\u8f93\u51fa\u63d0\u4f9b\u7ed9\u4e86\u9010\u5143\u7d20\u4e58\u6cd5\u64cd\u4f5c\uff0c\u5f53\u8f93\u5165\u4e3a 0 \u65f6\u95e8\u5173\u95ed\uff0c\u8f93\u51fa\u4e3a 1 \u65f6\u95e8\u6253\u5f00\u3002\u5206\u522b\u4e3a\uff1a \u9057\u5fd8\u95e8\uff08forget gat\uff09\u7531 \u63a7\u5236\uff0c\u6765\u51b3\u5b9a\u54ea\u4e9b\u957f\u671f\u8bb0\u5fc6\u9700\u8981\u88ab\u64e6\u9664\uff1b \u8f93\u5165\u95e8\uff08input gate\uff09 \u7531 \u63a7\u5236\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5904\u7406\u54ea\u90e8\u5206 \u5e94\u8be5\u88ab\u6dfb\u52a0\u5230\u957f\u65f6\u72b6\u6001\u4e2d\uff0c\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u88ab\u79f0\u4e3a \u90e8\u5206\u5b58\u50a8 \u3002 \u8f93\u51fa\u95e8\uff08output gate\uff09\u7531 \u63a7\u5236\uff0c\u5728\u8fd9\u4e00\u65f6\u523b\u7684\u8f93\u51fa \u548c \u5c31\u662f\u7531\u8f93\u51fa\u95e8\u63a7\u5236\u7684\uff0c\u4ece\u957f\u65f6\u72b6\u6001\u4e2d\u8bfb\u53d6\u7684\u8bb0\u5fc6\u3002 \u7b80\u8981\u6765\u8bf4\uff0cLSTM \u5355\u5143\u80fd\u591f\u5b66\u4e60\u5230\u8bc6\u522b\u91cd\u8981\u8f93\u5165\uff08\u8f93\u5165\u95e8\u4f5c\u7528\uff09\uff0c\u5b58\u50a8\u8fdb\u957f\u65f6\u72b6\u6001\uff0c\u5e76\u4fdd\u5b58\u5fc5\u8981\u7684\u65f6\u95f4\uff08\u9057\u5fd8\u95e8\u529f\u80fd\uff09\uff0c\u5e76\u5b66\u4f1a\u63d0\u53d6\u5f53\u524d\u8f93\u51fa\u6240\u9700\u8981\u7684\u8bb0\u5fc6\u3002 \u8fd9\u4e5f\u89e3\u91ca\u4e86 LSTM \u5355\u5143\u80fd\u591f\u5728\u63d0\u53d6\u957f\u65f6\u5e8f\u5217\uff0c\u957f\u6587\u672c\uff0c\u5f55\u97f3\u7b49\u6570\u636e\u4e2d\u7684\u957f\u671f\u6a21\u5f0f\u7684\u60ca\u4eba\u6210\u529f\u7684\u539f\u56e0\u3002 \u516c\u5f0f 14-3 \u603b\u7ed3\u4e86\u5982\u4f55\u8ba1\u7b97\u5355\u5143\u7684\u957f\u65f6\u72b6\u6001\uff0c\u77ed\u65f6\u72b6\u6001\uff0c\u548c\u5355\u4e2a\u8f93\u5165\u60c5\u5f62\u65f6\u6bcf\u5355\u4f4d\u6b65\u957f\u7684\u8f93\u51fa\uff08\u5c0f\u6279\u91cf\u7684\u65b9\u7a0b\u5f62\u5f0f\u4e0e\u5355\u8f93\u5165\u7684\u5f62\u5f0f\u76f8\u4f3c\uff09\u3002 \uff0c \uff0c \uff0c \u662f\u56db\u4e2a\u5168\u8fde\u63a5\u5c42\u5173\u4e8e\u8f93\u5165\u5411\u91cf \u7684\u6743\u91cd\u3002 \uff0c \uff0c \uff0c \u662f\u56db\u4e2a\u5168\u8fde\u63a5\u5c42\u5173\u4e8e\u4e0a\u4e00\u65f6\u523b\u7684\u77ed\u65f6\u72b6\u6001 \u7684\u6743\u91cd\u3002 \uff0c \uff0c \uff0c \u662f\u5168\u8fde\u63a5\u5c42\u7684\u56db\u4e2a\u504f\u7f6e\u9879\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f TensorFlow \u5c06\u5176\u521d\u59cb\u5316\u4e3a\u5168 1 \u5411\u91cf\uff0c\u800c\u975e\u5168 0\uff0c\u4e3a\u4e86\u963b\u6b62\u7f51\u7edc\u521d\u59cb\u8bad\u7ec3\u72b6\u6001\u4e0b\uff0c\u5404\u4e2a\u95e8\u5173\u95ed\u4ece\u800c\u5fd8\u8bb0\u6240\u6709\u8bb0\u5fc6\u3002 \u7aa5\u5b54\u8fde\u63a5 \u57fa\u672c\u5f62\u5f0f\u7684 LSTM \u5355\u5143\u4e2d\uff0c\u95e8\u7684\u63a7\u5236\u4ec5\u6709\u5f53\u524d\u7684\u8f93\u5165 \u548c\u524d\u4e00\u65f6\u523b\u7684\u77ed\u65f6\u72b6\u6001 \u3002\u4e0d\u59a8\u8ba9\u5404\u4e2a\u63a7\u5236\u95e8\u7aa5\u89c6\u4e00\u4e0b\u957f\u65f6\u72b6\u6001\uff0c\u83b7\u53d6\u4e00\u4e9b\u4e0a\u4e0b\u6587\u4fe1\u606f\u4e0d\u5931\u4e3a\u4e00\u79cd\u5c1d\u8bd5\u3002 \u8be5\u60f3\u6cd5 \u7531 F.G.he J.S. \u5728 2000 \u5e74\u63d0\u51fa\u3002\u4ed6\u4eec\u63d0\u51fa\u7684 LSTM \u7684\u53d8\u4f53\u62e5\u6709\u53eb\u505a\u7aa5\u5b54\u8fde\u63a5\u7684\u989d\u5916\u8fde\u63a5\uff1a\u628a\u524d\u4e00\u65f6\u523b\u7684\u957f\u65f6\u72b6\u6001 \u52a0\u5165\u9057\u5fd8\u95e8\u548c\u8f93\u5165\u95e8\u63a7\u5236\u7684\u8f93\u5165\uff0c\u5f53\u524d\u65f6\u523b\u7684\u957f\u65f6\u72b6\u6001\u52a0\u5165\u8f93\u51fa\u95e8\u7684\u63a7\u5236\u8f93\u5165\u3002 TensorFLow \u4e2d\u7531 LSTMCell \u5b9e\u73b0\u4ee5\u4e0a\u53d8\u4f53 LSTM\uff0c\u5e76\u8bbe\u7f6e use_peepholes=True \u3002 lstm_cell = tf.contrib.rnn.LSTMCell(num_units=n_neurons, use_peepholes=True) \u5728\u4f17\u591a LSTM \u53d8\u4f53\u4e2d\uff0c\u4e00\u4e2a\u7279\u522b\u6d41\u884c\u7684\u53d8\u4f53\u5c31\u662f GRU \u5355\u5143\u3002 GRU \u5355\u5143 \u95e8\u63a7\u5faa\u73af\u5355\u5143\uff08\u56fe 14-14\uff09\u5728 2014 \u5e74\u7684 K.Cho et al. \u7684\u8bba\u6587 \u4e2d\u63d0\u51fa\uff0c\u5e76\u4e14\u6b64\u6587\u4e5f\u5f15\u5165\u4e86\u524d\u6587\u6240\u8ff0\u7684\u7f16\u89e3\u7801\u7f51\u7edc\u3002 \u95e8\u63a7\u5faa\u73af\u5355\u5143\u662f LSTM \u5355\u5143\u7684\u7b80\u5316\u7248\u672c\uff0c\u80fd\u5b9e\u73b0\u540c\u6837\u7684\u6027\u80fd\uff0c\u8fd9\u4e5f\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u5b83\u80fd\u8d8a\u6765\u8d8a\u6d41\u884c\u3002\u7b80\u5316\u4e3b\u8981\u5728\u4e00\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u957f\u65f6\u72b6\u6001\u548c\u77ed\u65f6\u72b6\u6001\u5408\u5e76\u4e3a\u4e00\u4e2a\u5411\u91cf \u3002 \u7528\u540c\u4e00\u4e2a\u95e8\u63a7\u5236\u9057\u5fd8\u95e8\u548c\u8f93\u5165\u95e8\u3002\u5982\u679c\u95e8\u63a7\u5236\u8f93\u5165 1\uff0c\u8f93\u5165\u95e8\u6253\u5f00\uff0c\u9057\u5fd8\u95e8\u5173\u95ed\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5f53\u6709\u65b0\u7684\u8bb0\u5fc6\u9700\u8981\u5b58\u50a8\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u5b9e\u73b0\u5728\u5176\u5bf9\u5e94\u4f4d\u7f6e\u4e8b\u5148\u64e6\u9664\u8be5\u5904\u8bb0\u5fc6\u3002\u8fd9\u4e5f\u6784\u6210\u4e86 LSTM \u672c\u8eab\u7684\u5e38\u89c1\u53d8\u4f53\u3002 GRU \u5355\u5143\u53d6\u6d88\u4e86\u8f93\u51fa\u95e8\uff0c\u5355\u5143\u7684\u5168\u90e8\u72b6\u6001\u5c31\u662f\u8be5\u65f6\u523b\u7684\u5355\u5143\u8f93\u51fa\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u589e\u52a0\u4e86\u4e00\u4e2a\u63a7\u5236\u95e8 \u6765\u63a7\u5236\u54ea\u90e8\u5206\u524d\u4e00\u65f6\u95f4\u6b65\u7684\u72b6\u6001\u5728\u8be5\u65f6\u523b\u7684\u5355\u5143\u5185\u5448\u73b0\u3002 \u516c\u5f0f 14-4 \u603b\u7ed3\u4e86\u5982\u4f55\u8ba1\u7b97\u5355\u4e2a\u8f93\u5165\u60c5\u5f62\u65f6\u6bcf\u5355\u4f4d\u6b65\u7684\u5355\u5143\u7684\u72b6\u6001\u3002 \u5728 TensoFlow \u4e2d\u521b\u5efa GRU \u5355\u5143\u5f88\u7b80\u5355\uff1a gru_cell = tf.contrib.rnn.GRUCell(n_units=n_neurons) LSTM \u6216 GRU \u5355\u5143\u662f\u8fd1\u5e74\u6765 RNN \u6210\u529f\u80cc\u540e\u7684\u4e3b\u8981\u539f\u56e0\u4e4b\u4e00\uff0c\u7279\u522b\u662f\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09\u4e2d\u7684\u5e94\u7528\u3002 \u81ea\u7136\u8bed\u8a00\u5904\u7406 \u73b0\u5728\uff0c\u5927\u591a\u6570\u6700\u5148\u8fdb\u7684 NLP \u5e94\u7528\uff08\u5982\u673a\u5668\u7ffb\u8bd1\uff0c\u81ea\u52a8\u6458\u8981\uff0c\u89e3\u6790\uff0c\u60c5\u611f\u5206\u6790\u7b49\uff09\uff0c\u73b0\u5728\uff08\u81f3\u5c11\u4e00\u90e8\u5206\uff09\u90fd\u57fa\u4e8e RNN\u3002 \u5728\u6700\u540e\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5feb\u901f\u4e86\u89e3\u673a\u5668\u7ffb\u8bd1\u6a21\u578b\u7684\u6982\u51b5\u3002 TensorFlow \u7684\u5f88\u5389\u5bb3\u7684 Word2Vec \u548c Seq2Seq \u6559\u7a0b\u975e\u5e38\u597d\u5730\u4ecb\u7ecd\u4e86\u8fd9\u4e2a\u4e3b\u9898\uff0c\u6240\u4ee5\u4f60\u4e00\u5b9a\u8981\u9605\u8bfb\u4e00\u4e0b\u3002 \u5355\u8bcd\u5d4c\u5165 \u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u8bcd\u7684\u8868\u793a\u5f62\u5f0f\u3002 \u4e00\u79cd\u9009\u62e9\u53ef\u4ee5\u662f\uff0c\u4f7f\u7528\u5355\u70ed\u5411\u91cf\u8868\u793a\u6bcf\u4e2a\u8bcd\u3002 \u5047\u8bbe\u4f60\u7684\u8bcd\u6c47\u8868\u5305\u542b 5 \u4e07\u4e2a\u5355\u8bcd\uff0c\u90a3\u4e48\u7b2c n \u4e2a\u5355\u8bcd\u5c06\u88ab\u8868\u793a\u4e3a 50,000 \u7ef4\u7684\u5411\u91cf\uff0c\u9664\u4e86\u7b2c n \u4e2a\u4f4d\u7f6e\u4e3a 1 \u4e4b\u5916\uff0c\u5176\u5b83\u5168\u90e8\u4e3a 0\u3002 \u7136\u800c\uff0c\u5bf9\u4e8e\u5982\u6b64\u5e9e\u5927\u7684\u8bcd\u6c47\u8868\uff0c\u8fd9\u79cd\u7a00\u758f\u8868\u793a\u6839\u672c\u5c31\u4e0d\u4f1a\u6709\u6548\u3002 \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e0c\u671b\u76f8\u4f3c\u7684\u5355\u8bcd\u5177\u6709\u76f8\u4f3c\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u8fd9\u4f7f\u5f97\u6a21\u578b\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u6240\u5b66\u7684\u5173\u4e8e\u5355\u8bcd\u7684\u53ea\u662f\uff0c\u63a8\u5e7f\u5230\u6240\u6709\u76f8\u4f3c\u5355\u8bcd\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6a21\u578b\u88ab\u544a\u77e5 \"I drink milk\" \u662f\u4e00\u4e2a\u6709\u6548\u7684\u53e5\u5b50\uff0c\u5e76\u4e14\u5982\u679c\u5b83\u77e5\u9053 \"milk\" \u63a5\u8fd1\u4e8e \"water\" \uff0c\u800c\u4e0d\u540c\u4e8e \"shoes\" \uff0c\u90a3\u4e48\u5b83\u4f1a\u77e5\u9053 \"I drink water\" \u4e5f\u8bb8\u662f\u4e00\u4e2a\u6709\u6548\u7684\u53e5\u5b50\uff0c\u800c \"I drink shoes\" \u53ef\u80fd\u4e0d\u662f\u3002 \u4f46\u4f60\u5982\u4f55\u63d0\u51fa\u8fd9\u6837\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u8868\u793a\u5462\uff1f \u6700\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u7528\u4e00\u4e2a\u76f8\u5f53\u5c0f\u4e14\u5bc6\u96c6\u7684\u5411\u91cf\uff08\u4f8b\u5982 150 \u7ef4\uff09\u8868\u793a\u8bcd\u6c47\u8868\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\uff0c\u79f0\u4e3a\u5d4c\u5165\uff0c\u5e76\u8ba9\u795e\u7ecf\u7f51\u7edc\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u6bcf\u4e2a\u5355\u8bcd\u5b66\u4e60\u4e00\u4e2a\u826f\u597d\u7684\u5d4c\u5165\u3002 \u5728\u8bad\u7ec3\u5f00\u59cb\u65f6\uff0c\u5d4c\u5165\u53ea\u662f\u968f\u673a\u9009\u62e9\u7684\uff0c\u4f46\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u53cd\u5411\u4f20\u64ad\u4f1a\u81ea\u52a8\u66f4\u65b0\u5d4c\u5165\uff0c\u6765\u5e2e\u52a9\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4efb\u52a1\u3002 \u901a\u5e38\u8fd9\u610f\u5473\u7740\uff0c\u76f8\u4f3c\u7684\u8bcd\u4f1a\u9010\u6e10\u5f7c\u6b64\u9760\u8fd1\uff0c\u751a\u81f3\u6700\u7ec8\u4ee5\u4e00\u79cd\u76f8\u5f53\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u7ec4\u7ec7\u8d77\u6765\u3002 \u4f8b\u5982\uff0c\u5d4c\u5165\u53ef\u80fd\u6700\u7ec8\u6cbf\u7740\u5404\u79cd\u8f74\u5206\u5e03\uff0c\u5b83\u4eec\u4ee3\u8868\u6027\u522b\uff0c\u5355\u6570/\u590d\u6570\uff0c\u5f62\u5bb9\u8bcd/\u540d\u8bcd\u3002 \u7ed3\u679c\u53ef\u80fd\u771f\u7684\u5f88\u795e\u5947\u3002 \u5728TensorFlow\u4e2d\uff0c\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf\u6765\u8868\u793a\u8bcd\u6c47\u8868\u4e2d\u6bcf\u4e2a\u8bcd\u7684\u5d4c\u5165\uff08\u968f\u673a\u521d\u59cb\u5316\uff09\uff1a vocabulary_size = 50000 embedding_size = 150 embeddings = tf.Variable( tf.random_uniform([vocabulary_size, embedding_size], -1.0, 1.0)) \u73b0\u5728\u5047\u8bbe\u4f60\u6253\u7b97\u5c06\u53e5\u5b50 \"I drink milk\" \u63d0\u4f9b\u7ed9\u4f60\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u4f60\u5e94\u8be5\u9996\u5148\u5bf9\u53e5\u5b50\u8fdb\u884c\u9884\u5904\u7406\u5e76\u5c06\u5176\u5206\u89e3\u6210\u5df2\u77e5\u5355\u8bcd\u7684\u5217\u8868\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5220\u9664\u4e0d\u5fc5\u8981\u7684\u5b57\u7b26\uff0c\u7528\u9884\u5b9a\u4e49\u7684\u6807\u8bb0\u8bcd\uff08\u5982 \"[UNK]\" \uff09\u66ff\u6362\u672a\u77e5\u5355\u8bcd\uff0c\u7528 \"[NUM]\" \u66ff\u6362\u6570\u5b57\u503c\uff0c\u7528 \"[URL]\" \u66ff\u6362 URL \u7b49\u3002 \u4e00\u65e6\u4f60\u6709\u4e86\u4e00\u4e2a\u5df2\u77e5\u5355\u8bcd\u5217\u8868\uff0c\u4f60\u53ef\u4ee5\u5728\u5b57\u5178\u4e2d\u67e5\u627e\u6bcf\u4e2a\u5355\u8bcd\u7684\u6574\u6570\u6807\u8bc6\u7b26\uff08\u4ece 0 \u5230 49999\uff09\uff0c\u4f8b\u5982 [72\uff0c3335\uff0c288] \u3002 \u6b64\u65f6\uff0c\u4f60\u5df2\u51c6\u5907\u597d\u4f7f\u7528\u5360\u4f4d\u7b26\u5c06\u8fd9\u4e9b\u5355\u8bcd\u6807\u8bc6\u7b26\u63d0\u4f9b\u7ed9 TensorFlow\uff0c\u5e76\u5e94\u7528 embedding_lookup() \u51fd\u6570\u6765\u83b7\u53d6\u76f8\u5e94\u7684\u5d4c\u5165\uff1a train_inputs = tf.placeholder(tf.int32, shape=[None]) # from ids... embed = tf.nn.embedding_lookup(embeddings, train_inputs) # ...to embeddings \u4e00\u65e6\u4f60\u7684\u6a21\u578b\u4e60\u5f97\u4e86\u826f\u597d\u7684\u8bcd\u5d4c\u5165\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5728\u4efb\u4f55 NLP \u5e94\u7528\u4e2d\u9ad8\u6548\u590d\u7528\uff1a\u6bd5\u7adf\uff0c \"milk\" \u4f9d\u7136\u63a5\u8fd1\u4e8e \"water\" \uff0c\u800c\u4e14\u4e0d\u7ba1\u4f60\u7684\u5e94\u7528\u662f\u4ec0\u4e48\uff0c\u5b83\u90fd\u4e0d\u540c\u4e8e \"shoes\" \u3002 \u5b9e\u9645\u4e0a\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4e0b\u8f7d\u9884\u8bad\u7ec3\u7684\u5355\u8bcd\u5d4c\u5165\uff0c\u800c\u4e0d\u662f\u8bad\u7ec3\u81ea\u5df1\u7684\u5355\u8bcd\u5d4c\u5165\u3002 \u5c31\u50cf\u590d\u7528\u9884\u8bad\u7ec3\u5c42\uff08\u53c2\u89c1\u7b2c 11 \u7ae0\uff09\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u51bb\u7ed3\u9884\u8bad\u7ec3\u5d4c\u5165\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 trainable=False \u521b\u5efa\u5d4c\u5165\u53d8\u91cf\uff09\uff0c\u6216\u8005\u8ba9\u53cd\u5411\u4f20\u64ad\u4e3a\u4f60\u7684\u5e94\u7528\u8c03\u6574\u5b83\u4eec\u3002 \u7b2c\u4e00\u79cd\u9009\u62e9\u5c06\u52a0\u901f\u8bad\u7ec3\uff0c\u4f46\u7b2c\u4e8c\u79cd\u9009\u62e9\u53ef\u80fd\u4f1a\u4ea7\u751f\u7a0d\u9ad8\u7684\u6027\u80fd\u3002 \u63d0\u793a \u5bf9\u4e8e\u8868\u793a\u53ef\u80fd\u62e5\u6709\u5927\u91cf\u4e0d\u540c\u503c\u7684\u7c7b\u522b\u5c5e\u6027\uff0c\u5d4c\u5165\u4e5f\u5f88\u6709\u7528\uff0c\u7279\u522b\u662f\u5f53\u503c\u4e4b\u95f4\u5b58\u5728\u590d\u6742\u7684\u76f8\u4f3c\u6027\u7684\u65f6\u5019\u3002 \u4f8b\u5982\uff0c\u8003\u8651\u804c\u4e1a\uff0c\u7231\u597d\uff0c\u83dc\u54c1\uff0c\u7269\u79cd\uff0c\u54c1\u724c\u7b49\u3002 \u4f60\u73b0\u5728\u62e5\u6709\u4e86\u5b9e\u73b0\u673a\u5668\u7ffb\u8bd1\u7cfb\u7edf\u6240\u9700\u7684\u51e0\u4e4e\u6240\u6709\u7684\u5de5\u5177\u3002 \u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u5b83\u5427\u3002 \u7528\u4e8e\u673a\u5668\u7ffb\u8bd1\u7684\u7f16\u89e3\u7801\u5668\u7f51\u7edc \u8ba9\u6211\u4eec\u6765\u770b\u770b\u7b80\u5355\u7684\u673a\u5668\u7ffb\u8bd1\u6a21\u578b\uff0c\u5b83\u5c06\u82f1\u8bed\u53e5\u5b50\u7ffb\u8bd1\u6210\u6cd5\u8bed\uff08\u53c2\u89c1\u56fe 14-15\uff09\u3002 \u56fe 14-15\uff1a\u7b80\u5355\u7684\u673a\u5668\u7ffb\u8bd1\u6a21\u578b \u82f1\u8bed\u53e5\u5b50\u88ab\u9001\u8fdb\u7f16\u7801\u5668\uff0c\u89e3\u7801\u5668\u8f93\u51fa\u6cd5\u8bed\u7ffb\u8bd1\u3002 \u8bf7\u6ce8\u610f\uff0c\u6cd5\u8bed\u7ffb\u8bd1\u4e5f\u88ab\u7528\u4f5c\u89e3\u7801\u5668\u7684\u8f93\u5165\uff0c\u4f46\u540e\u9000\u4e86\u4e00\u6b65\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u89e3\u7801\u5668\u7684\u8f93\u5165\u662f\u5b83\u5e94\u8be5\u5728\u524d\u4e00\u6b65\u8f93\u51fa\u7684\u5b57\uff08\u4e0d\u7ba1\u5b83\u5b9e\u9645\u8f93\u51fa\u7684\u662f\u4ec0\u4e48\uff09\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5355\u8bcd\uff0c\u63d0\u4f9b\u4e86\u8868\u793a\u53e5\u5b50\u5f00\u59cb\u7684\u6807\u8bb0\uff08 \"<go>\" \uff09\u3002 \u89e3\u7801\u5668\u9884\u671f\u4ee5\u5e8f\u5217\u672b\u5c3e\u6807\u8bb0\uff08EOS\uff09\u7ed3\u675f\u53e5\u5b50\uff08 \"<eos>\" \uff09\u3002 \u8bf7\u6ce8\u610f\uff0c\u82f1\u8bed\u53e5\u5b50\u5728\u9001\u5165\u7f16\u7801\u5668\u4e4b\u524d\u4f1a\u53cd\u8f6c\u3002 \u4f8b\u5982\uff0c \"I drink milk\" \u4e0e \"milk drink I\" \u76f8\u53cd\u3002\u8fd9\u786e\u4fdd\u4e86\u82f1\u8bed\u53e5\u5b50\u7684\u5f00\u5934\u5c06\u4f1a\u6700\u540e\u9001\u5230\u7f16\u7801\u5668\uff0c\u8fd9\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u8fd9\u901a\u5e38\u662f\u89e3\u7801\u5668\u9700\u8981\u7ffb\u8bd1\u7684\u7b2c\u4e00\u4e2a\u4e1c\u897f\u3002 \u6bcf\u4e2a\u5355\u8bcd\u6700\u521d\u7531\u7b80\u5355\u6574\u6570\u6807\u8bc6\u7b26\u8868\u793a\uff08\u4f8b\u5982\uff0c\u5355\u8bcd \"milk\" \u4e3a 288\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u5d4c\u5165\u67e5\u627e\u8fd4\u56de\u8bcd\u7684\u5d4c\u5165\uff08\u5982\u524d\u6240\u8ff0\uff0c\u8fd9\u662f\u4e00\u4e2a\u5bc6\u96c6\u7684\uff0c\u76f8\u5f53\u4f4e\u7ef4\u7684\u5411\u91cf\uff09\u3002 \u8fd9\u4e9b\u8bcd\u7684\u5d4c\u5165\u662f\u5b9e\u9645\u9001\u5230\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u7684\u5185\u5bb9\u3002 \u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u89e3\u7801\u5668\u8f93\u51fa\u8f93\u51fa\u8bcd\u6c47\u8868\uff08\u5373\u6cd5\u8bed\uff09\u4e2d\u6bcf\u4e2a\u8bcd\u7684\u5f97\u5206\uff0c\u7136\u540e Softmax \u5c42\u5c06\u8fd9\u4e9b\u5f97\u5206\u8f6c\u6362\u4e3a\u6982\u7387\u3002 \u4f8b\u5982\uff0c\u5728\u7b2c\u4e00\u6b65\u4e2d\uff0c\u5355\u8bcd \"Je\" \u6709 20% \u7684\u6982\u7387\uff0c \"Tu\" \u6709 1% \u7684\u6982\u7387\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u6982\u7387\u6700\u9ad8\u7684\u8bcd\u4f1a\u8f93\u51fa\u3002 \u8fd9\u975e\u5e38\u7c7b\u4f3c\u4e8e\u5e38\u89c4\u5206\u7c7b\u4efb\u52a1\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u4f7f\u7528 softmax_cross_entropy_with_logits() \u51fd\u6570\u6765\u8bad\u7ec3\u6a21\u578b\u3002 \u8bf7\u6ce8\u610f\uff0c\u5728\u63a8\u65ad\u671f\u95f4\uff08\u8bad\u7ec3\u4e4b\u540e\uff09\uff0c\u4f60\u4e0d\u518d\u5c06\u76ee\u6807\u53e5\u5b50\u9001\u5165\u89e3\u7801\u5668\u3002 \u76f8\u53cd\uff0c\u53ea\u9700\u5411\u89e3\u7801\u5668\u63d0\u4f9b\u5b83\u5728\u4e0a\u4e00\u6b65\u8f93\u51fa\u7684\u5355\u8bcd\uff0c\u5982\u56fe 14-16 \u6240\u793a\uff08\u8fd9\u5c06\u9700\u8981\u5d4c\u5165\u67e5\u627e\uff0c\u5b83\u672a\u5728\u56fe\u4e2d\u663e\u793a\uff09\u3002 \u56fe 14-16\uff1a\u5728\u63a8\u65ad\u671f\u95f4\uff0c\u5c06\u4e4b\u524d\u7684\u8f93\u51fa\u5355\u8bcd\u63d0\u4f9b\u4e3a\u8f93\u5165 \u597d\u7684\uff0c\u73b0\u5728\u4f60\u6709\u4e86\u5927\u65b9\u5411\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4f60\u9605\u8bfb TensorFlow \u7684\u5e8f\u5217\u6559\u7a0b\uff0c\u5e76\u67e5\u770b rnn/translate/seq2seq_model.py \u4e2d\u7684\u4ee3\u7801\uff08\u5728 TensorFlow \u6a21\u578b\u4e2d\uff09\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u4e00\u4e9b\u91cd\u8981\u7684\u533a\u522b\uff1a \u9996\u5148\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5047\u5b9a\u6240\u6709\u8f93\u5165\u5e8f\u5217\uff08\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u7684\uff09\u5177\u6709\u6052\u5b9a\u7684\u957f\u5ea6\u3002\u4f46\u663e\u7136\u53e5\u5b50\u957f\u5ea6\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5904\u7406\u5b83 - \u4f8b\u5982\uff0c\u4f7f\u7528 static_rnn() \u6216 dynamic_rnn() \u51fd\u6570\u7684 sequence_length \u53c2\u6570\uff0c\u6765\u6307\u5b9a\u6bcf\u4e2a\u53e5\u5b50\u7684\u957f\u5ea6\uff08\u5982\u524d\u6240\u8ff0\uff09\u3002\u7136\u800c\uff0c\u6559\u7a0b\u4e2d\u4f7f\u7528\u4e86\u53e6\u4e00\u79cd\u65b9\u6cd5\uff08\u5927\u6982\u662f\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff09\uff1a\u53e5\u5b50\u5206\u5230\u957f\u5ea6\u76f8\u4f3c\u7684\u6876\u4e2d\uff08\u4f8b\u5982\uff0c\u53e5\u5b50\u7684\u5355\u8bcd 1 \u5230 6 \u5206\u5230\u4e00\u4e2a\u6876\uff0c\u5355\u8bcd 7 \u5230 12 \u5206\u5230\u53e6\u4e00\u4e2a\u6876\uff0c\u7b49\u7b49\uff09\uff0c\u5e76\u4e14\u4f7f\u7528\u7279\u6b8a\u7684\u586b\u5145\u6807\u8bb0\uff08\u4f8b\u5982 \"<pad>\" \uff09\u6765\u586b\u5145\u8f83\u77ed\u7684\u53e5\u5b50\u3002\u4f8b\u5982\uff0c \"I drink milk\" \u53d8\u6210 \"<pad> <pad> <pad> milk drink I\" \uff0c\u7ffb\u8bd1\u6210 \"Je bois du lait <eos> <pad>\" \u3002\u5f53\u7136\uff0c\u6211\u4eec\u5e0c\u671b\u5ffd\u7565\u4efb\u4f55 EOS \u6807\u8bb0\u4e4b\u540e\u7684\u8f93\u51fa\u3002\u4e3a\u6b64\uff0c\u672c\u6559\u7a0b\u7684\u5b9e\u73b0\u4f7f\u7528 target_weights \u5411\u91cf\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u76ee\u6807\u53e5\u5b50 \"Je bois du lait <eos> <pad>\" \uff0c\u6743\u91cd\u5c06\u8bbe\u7f6e\u4e3a [1.0,1.0,1.0,1.0,1.0,0.0] \uff08\u6ce8\u610f\u6743\u91cd 0.0 \u5bf9\u5e94\u76ee\u6807\u53e5\u5b50\u4e2d\u7684\u586b\u5145\u6807\u8bb0\uff09\u3002\u7b80\u5355\u5730\u5c06\u635f\u5931\u4e58\u4ee5\u76ee\u6807\u6743\u91cd\uff0c\u5c06\u6d88\u9664\u5bf9\u5e94 EOS \u6807\u8bb0\u4e4b\u540e\u7684\u5355\u8bcd\u7684\u635f\u5931\u3002 \u5176\u6b21\uff0c\u5f53\u8f93\u51fa\u8bcd\u6c47\u8868\u5f88\u5927\u65f6\uff08\u5c31\u662f\u8fd9\u91cc\u7684\u60c5\u51b5\uff09\uff0c\u8f93\u51fa\u6bcf\u4e2a\u53ef\u80fd\u7684\u5355\u8bcd\u7684\u6982\u7387\u5c06\u4f1a\u975e\u5e38\u6162\u3002 \u5982\u679c\u76ee\u6807\u8bcd\u6c47\u8868\u5305\u542b 50,000 \u4e2a\u6cd5\u8bed\u5355\u8bcd\uff0c\u5219\u89e3\u7801\u5668\u5c06\u8f93\u51fa 50,000 \u7ef4\u5411\u91cf\uff0c\u7136\u540e\u5728\u8fd9\u6837\u7684\u5927\u5411\u91cf\u4e0a\u8ba1\u7b97 softmax \u51fd\u6570\uff0c\u8ba1\u7b97\u91cf\u5c06\u975e\u5e38\u5927\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u8ba9\u89e3\u7801\u5668\u8f93\u51fa\u66f4\u5c0f\u7684\u5411\u91cf\uff0c\u4f8b\u5982 1,000 \u7ef4\u5411\u91cf\uff0c\u7136\u540e\u4f7f\u7528\u91c7\u6837\u6280\u672f\u6765\u4f30\u8ba1\u635f\u5931\uff0c\u800c\u4e0d\u5fc5\u5bf9\u76ee\u6807\u8bcd\u6c47\u8868\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u8ba1\u7b97\u5b83\u3002 \u8fd9\u79cd\u91c7\u6837 Softmax \u6280\u672f\u662f\u7531 S\u00e9bastienJean \u7b49\u4eba\u5728 2015 \u5e74\u63d0\u51fa\u7684\u3002\u5728 TensorFlow \u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 sampled_softmax_loss() \u51fd\u6570\u3002 \u7b2c\u4e09\uff0c\u6559\u7a0b\u7684\u5b9e\u73b0\u4f7f\u7528\u4e86\u4e00\u79cd\u6ce8\u610f\u529b\u673a\u5236\uff0c\u8ba9\u89e3\u7801\u5668\u80fd\u591f\u7aa5\u89c6\u8f93\u5165\u5e8f\u5217\u3002 \u6ce8\u610f\u529b\u589e\u5f3a\u7684 RNN \u4e0d\u5728\u672c\u4e66\u7684\u8ba8\u8bba\u8303\u56f4\u4e4b\u5185\uff0c\u4f46\u5982\u679c\u4f60\u6709\u5174\u8da3\uff0c\u53ef\u4ee5\u5173\u6ce8\u673a\u5668\u7ffb\u8bd1\uff0c\u673a\u5668\u9605\u8bfb\u548c\u56fe\u50cf\u8bf4\u660e\u7684\u76f8\u5173\u8bba\u6587\u3002 \u6700\u540e\uff0c\u672c\u6559\u7a0b\u7684\u5b9e\u73b0\u4f7f\u7528\u4e86 tf.nn.legacy_seq2seq \u6a21\u5757\uff0c\u8be5\u6a21\u5757\u63d0\u4f9b\u4e86\u8f7b\u677e\u6784\u5efa\u5404\u79cd\u7f16\u89e3\u7801\u5668\u6a21\u578b\u7684\u5de5\u5177\u3002 \u4f8b\u5982\uff0c embedding_rnn_seq2seq() \u51fd\u6570\u4f1a\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7f16\u89e3\u7801\u5668\u6a21\u578b\uff0c\u5b83\u4f1a\u81ea\u52a8\u4e3a\u4f60\u5904\u7406\u5355\u8bcd\u5d4c\u5165\uff0c\u5c31\u50cf\u56fe 14-15 \u4e2d\u6240\u793a\u7684\u4e00\u6837\u3002 \u6b64\u4ee3\u7801\u53ef\u80fd\u4f1a\u5f88\u5feb\u66f4\u65b0\uff0c\u6765\u4f7f\u7528\u65b0\u7684 tf.nn.seq2seq \u6a21\u5757\u3002 \u4f60\u73b0\u5728\u62e5\u6709\u4e86\uff0c\u4e86\u89e3\u6240\u6709 seq2seq \u6559\u7a0b\u7684\u5b9e\u73b0\u6240\u9700\u7684\u5168\u90e8\u5de5\u5177\u3002 \u5c06\u5b83\u4eec\u53d6\u51fa\uff0c\u5e76\u8bad\u7ec3\u4f60\u81ea\u5df1\u7684\u82f1\u6cd5\u7ffb\u8bd1\u5668\u5427\uff01 \u7ec3\u4e60 \u4f60\u80fd\u60f3\u8c61 seq2seq RNN \u7684\u51e0\u4e2a\u5e94\u7528\u5417\uff1f seq2vec \u7684 RNN \u5462\uff1fvex2seq \u7684 RNN \u5462\uff1f \u4e3a\u4ec0\u4e48\u4eba\u4eec\u4f7f\u7528\u7f16\u89e3\u7801\u5668 RNN \u800c\u4e0d\u662f\u7b80\u5355\u7684 seq2seq RNN \u6765\u81ea\u52a8\u7ffb\u8bd1\uff1f \u5982\u4f55\u5c06\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e0e RNN \u7ed3\u5408\uff0c\u6765\u5bf9\u89c6\u9891\u8fdb\u884c\u5206\u7c7b\uff1f \u4f7f\u7528 dynamic_rnn() \u800c\u4e0d\u662f static_rnn() \u6784\u5efa RNN \u6709\u4ec0\u4e48\u597d\u5904\uff1f \u4f60\u5982\u4f55\u5904\u7406\u957f\u5ea6\u53ef\u53d8\u7684\u8f93\u5165\u5e8f\u5217\uff1f \u90a3\u4e48\u957f\u5ea6\u53ef\u53d8\u8f93\u51fa\u5e8f\u5217\u5462\uff1f \u5728\u591a\u4e2a GPU \u4e0a\u5206\u914d\u6df1\u5c42 RNN \u7684\u8bad\u7ec3\u548c\u6267\u884c\u7684\u5e38\u89c1\u65b9\u5f0f\u662f\u4ec0\u4e48\uff1f Hochreiter \u548c Schmidhuber \u5728\u5176\u5173\u4e8e LSTM \u7684\u6587\u7ae0\u4e2d\u4f7f\u7528\u4e86\u5d4c\u5165\u5f0f Reber \u8bed\u6cd5\u3002 \u5b83\u4eec\u662f\u4ea7\u751f\u5b57\u7b26\u4e32\uff0c\u5982 \"BPBTSXXVPSEPE\" \u7684\u4eba\u9020\u8bed\u6cd5\u3002\u67e5\u770b Jenny Orr \u5bf9\u6b64\u4e3b\u9898\u7684 \u4e0d\u9519\u7684\u4ecb\u7ecd \u3002 \u9009\u62e9\u4e00\u4e2a\u7279\u5b9a\u7684\u5d4c\u5165\u5f0f Reber \u8bed\u6cd5\uff08\u4f8b\u5982 Jenny Orr \u9875\u9762\u4e0a\u663e\u793a\u7684\u8bed\u6cd5\uff09\uff0c\u7136\u540e\u8bad\u7ec3\u4e00\u4e2a RNN \u6765\u786e\u5b9a\u5b57\u7b26\u4e32\u662f\u5426\u9075\u5faa\u8be5\u8bed\u6cd5\u3002 \u4f60\u9996\u5148\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u80fd\u591f\u751f\u6210\u8bad\u7ec3\u6279\u91cf\uff0c\u5305\u542b\u5927\u7ea6 50% \u9075\u5faa\u8bed\u6cd5\u7684\u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca 50% \u4e0d\u9075\u5faa\u7684\u5b57\u7b26\u4e32\u3002 \u89e3\u51b3\u201cHow much did it rain? II\u201d\uff08\u4e0b\u96e8\u4e0b\u4e86\u591a\u4e45 II\uff09 Kaggle \u6bd4\u8d5b \u3002 \u8fd9\u662f\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u4efb\u52a1\uff1a\u5b83\u4e3a\u4f60\u63d0\u4f9b\u6781\u5316\u96f7\u8fbe\u503c\u7684\u5feb\u7167\uff0c\u5e76\u8981\u6c42\u9884\u6d4b\u6bcf\u5c0f\u65f6\u964d\u6c34\u91cf\u3002 Luis Andre Dutra e Silva \u7684 \u91c7\u8bbf \u5bf9\u4ed6\u5728\u6bd4\u8d5b\u4e2d\u83b7\u5f97\u7b2c\u4e8c\u540d\u7684\u6280\u672f\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u89c1\u89e3\u3002 \u7279\u522b\u662f\uff0c\u4ed6\u4f7f\u7528\u4e86\u7531\u4e24\u4e2a LSTM \u5c42\u7ec4\u6210\u7684 RNN\u3002 \u901a\u8fc7 TensorFlow \u7684 Word2Vec \u6559\u7a0b\u6765\u521b\u5efa\u5355\u8bcd\u5d4c\u5165\uff0c\u7136\u540e\u901a\u8fc7 Seq2Seq \u6559\u7a0b\u6765\u8bad\u7ec3\u82f1\u6cd5\u7ffb\u8bd1\u7cfb\u7edf\u3002 \u9644\u5f55 A \u63d0\u4f9b\u4e86\u8fd9\u4e9b\u7ec3\u4e60\u7684\u7b54\u6848\u3002","title":"14.\u5faa\u73af\u795e\u7ecf\u7f51\u7edc"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_1","text":"\u51fb\u7403\u624b\u51fb\u51fa\u5792\u7403\uff0c\u4f60\u4f1a\u5f00\u59cb\u9884\u6d4b\u7403\u7684\u8f68\u8ff9\u5e76\u7acb\u5373\u5f00\u59cb\u5954\u8dd1\u3002\u4f60\u8ffd\u8e2a\u7740\u5b83\uff0c\u4e0d\u65ad\u8c03\u6574\u4f60\u7684\u79fb\u52a8\u6b65\u4f10\uff0c\u6700\u7ec8\u5728\u89c2\u4f17\u7684\u4e00\u7247\u96f7\u9e23\u58f0\u4e2d\u6293\u5230\u5b83\u3002\u65e0\u8bba\u662f\u5728\u542c\u5b8c\u670b\u53cb\u7684\u8bdd\u8bed\u8fd8\u662f\u65e9\u9910\u65f6\u9884\u6d4b\u5496\u5561\u7684\u5473\u9053\uff0c\u4f60\u65f6\u523b\u5728\u505a\u7684\u4e8b\u5c31\u662f\u5728\u9884\u6d4b\u672a\u6765\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5faa\u73af\u795e\u7ecf\u7f51\u7edc -- \u4e00\u7c7b\u9884\u6d4b\u672a\u6765\u7684\u7f51\u7edc\uff08\u5f53\u7136\uff0c\u662f\u5230\u76ee\u524d\u4e3a\u6b62\uff09\u3002\u5b83\u4eec\u53ef\u4ee5\u5206\u6790\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u8bf8\u5982\u80a1\u7968\u4ef7\u683c\uff0c\u5e76\u544a\u8bc9\u4f60\u4ec0\u4e48\u65f6\u5019\u4e70\u5165\u548c\u5356\u51fa\u3002\u5728\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u4e2d\uff0c\u4ed6\u4eec\u53ef\u4ee5\u9884\u6d4b\u884c\u8f66\u8f68\u8ff9\uff0c\u907f\u514d\u53d1\u751f\u4ea4\u901a\u610f\u5916\u3002\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u5b83\u4eec\u53ef\u5728\u4efb\u610f\u957f\u5ea6\u7684\u5e8f\u5217\u4e0a\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u622a\u6b62\u76ee\u524d\u6211\u4eec\u8ba8\u8bba\u7684\u53ea\u80fd\u5728\u56fa\u5b9a\u957f\u5ea6\u7684\u8f93\u5165\u4e0a\u5de5\u4f5c\u7684\u7f51\u7edc\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5b83\u4eec\u53ef\u4ee5\u628a\u8bed\u53e5\uff0c\u6587\u4ef6\uff0c\u4ee5\u53ca\u8bed\u97f3\u8303\u672c\u4f5c\u4e3a\u8f93\u5165\uff0c\u4f7f\u5f97\u5b83\u4eec\u5728\u8bf8\u5982\u81ea\u52a8\u7ffb\u8bd1\uff0c\u8bed\u97f3\u5230\u6587\u672c\u6216\u8005\u60c5\u611f\u5206\u6790\uff08\u4f8b\u5982\uff0c\u8bfb\u53d6\u7535\u5f71\u8bc4\u8bba\u5e76\u63d0\u53d6\u8bc4\u8bba\u8005\u5173\u4e8e\u8be5\u7535\u5f71\u7684\u611f\u89c9\uff09\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7cfb\u7edf\u4e2d\u6781\u4e3a\u6709\u7528\u3002 \u66f4\u8fd1\u4e00\u6b65\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u7684\u9884\u6d4b\u80fd\u529b\u4f7f\u5f97\u5b83\u4eec\u5177\u5907\u4ee4\u4eba\u60ca\u8bb6\u7684\u521b\u9020\u529b\u3002\u4f60\u540c\u6837\u53ef\u4ee5\u8981\u6c42\u5b83\u4eec\u53bb\u9884\u6d4b\u4e00\u6bb5\u65cb\u5f8b\u7684\u4e0b\u51e0\u4e2a\u97f3\u7b26\uff0c\u7136\u540e\u968f\u673a\u9009\u53d6\u8fd9\u4e9b\u97f3\u7b26\u7684\u5176\u4e2d\u4e4b\u4e00\u5e76\u6f14\u594f\u5b83\u3002\u7136\u540e\u8981\u6c42\u7f51\u7edc\u7ed9\u51fa\u63a5\u4e0b\u6765\u6700\u53ef\u80fd\u7684\u97f3\u7b26\uff0c\u6f14\u594f\u5b83\uff0c\u5982\u6b64\u5468\u800c\u590d\u59cb\u3002\u5728\u4f60\u77e5\u9053\u5b83\u4e4b\u524d\uff0c\u4f60\u7684\u795e\u7ecf\u7f51\u7edc\u5c06\u521b\u4f5c\u4e00\u9996\u8bf8\u5982\u7531\u8c37\u6b4c Magenta \u5de5\u7a0b\u6240\u521b\u9020\u7684\u300aThe one\u300b\u7684\u6b4c\u66f2\u3002\u7c7b\u4f3c\u7684\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u751f\u6210\u8bed\u53e5\uff0c\u56fe\u50cf\u6807\u6ce8\u4ee5\u53ca\u66f4\u591a\u3002\u76ee\u524d\u7ed3\u679c\u8fd8\u4e0d\u80fd\u51c6\u786e\u5f97\u5230\u838e\u58eb\u6bd4\u4e9a\u6216\u8005\u83ab\u624e\u7279\u7684\u4f5c\u54c1\uff0c\u4f46\u8c01\u77e5\u9053\u51e0\u5e74\u540e\u4ed6\u4eec\u80fd\u751f\u6210\u4ec0\u4e48\u5462\uff1f \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u80cc\u540e\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u4ed6\u4eec\u6240\u9762\u4e34\u7684\u4e3b\u8981\u95ee\u9898\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u7b2c11\u7ae0\u4e2d\u8ba8\u8bba\u7684\u6d88\u5931\uff0f\u7206\u70b8\u7684\u68af\u5ea6\uff09\uff0c\u4ee5\u53ca\u5e7f\u6cdb\u7528\u4e8e\u53cd\u6297\u8fd9\u4e9b\u95ee\u9898\u7684\u65b9\u6cd5\uff1aLSTM \u548c GRU cell\uff08\u5355\u5143\uff09\u3002\u5982\u540c\u4ee5\u5f80\uff0c\u6cbf\u7740\u8fd9\u4e2a\u65b9\u5f0f\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5982\u4f55\u7528 TensorFlow \u5b9e\u73b0\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u3002\u6700\u7ec8\u6211\u4eec\u5c06\u770b\u770b\u53ca\u5176\u7ffb\u8bd1\u7cfb\u7edf\u7684\u67b6\u6784\u3002","title":"\u5341\u56db\u3001\u5faa\u73af\u795e\u7ecf\u7f51\u7edc"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_2","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u7684\u662f\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5176\u4e2d\u6fc0\u6d3b\u4ec5\u4ece\u8f93\u5165\u5c42\u5230\u8f93\u51fa\u5c42\u7684\u4e00\u4e2a\u65b9\u5411\u6d41\u52a8\uff08\u9644\u5f55 E \u4e2d\u7684\u51e0\u4e2a\u7f51\u7edc\u9664\u5916\uff09\u3002 \u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u770b\u8d77\u6765\u975e\u5e38\u50cf\u4e00\u4e2a\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u9664\u4e86\u5b83\u4e5f\u6709\u8fde\u63a5\u6307\u5411\u540e\u65b9\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6700\u7b80\u5355\u7684 RNN\uff0c\u5b83\u7531\u4e00\u4e2a\u795e\u7ecf\u5143\u63a5\u6536\u8f93\u5165\uff0c\u4ea7\u751f\u4e00\u4e2a\u8f93\u51fa\uff0c\u5e76\u5c06\u8f93\u51fa\u53d1\u9001\u56de\u81ea\u5df1\uff0c\u5982\u56fe 14-1\uff08\u5de6\uff09\u6240\u793a\u3002 \u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65 t \uff08\u4e5f\u79f0\u4e3a\u4e00\u4e2a\u5e27\uff09\uff0c\u8fd9\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u63a5\u6536\u8f93\u5165 \u4ee5\u53ca\u5b83\u81ea\u5df1\u7684\u524d\u4e00\u65f6\u95f4\u6b65\u957f \u7684\u8f93\u51fa\u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u65f6\u95f4\u8f74\u6765\u8868\u793a\u8fd9\u4e2a\u5fae\u5c0f\u7684\u7f51\u7edc\uff0c\u5982\u56fe 14-1\uff08\u53f3\uff09\u6240\u793a\u3002 \u8fd9\u88ab\u79f0\u4e3a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5c55\u5f00\u7f51\u7edc\u3002 \u4f60\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u5c42\u3002 \u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65t\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u63a5\u6536\u8f93\u5165\u5411\u91cf \u548c\u524d\u4e00\u4e2a\u65f6\u95f4\u6b65 \u7684\u8f93\u51fa\u5411\u91cf\uff0c\u5982\u56fe 14-2 \u6240\u793a\u3002 \u8bf7\u6ce8\u610f\uff0c\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u662f\u5411\u91cf\uff08\u5f53\u53ea\u6709\u4e00\u4e2a\u795e\u7ecf\u5143\u65f6\uff0c\u8f93\u51fa\u662f\u4e00\u4e2a\u6807\u91cf\uff09\u3002 \u6bcf\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u6709\u4e24\u7ec4\u6743\u91cd\uff1a\u4e00\u7ec4\u7528\u4e8e\u8f93\u5165 \uff0c\u53e6\u4e00\u7ec4\u7528\u4e8e\u524d\u4e00\u65f6\u95f4\u6b65\u957f \u7684\u8f93\u51fa\u3002 \u6211\u4eec\u79f0\u8fd9\u4e9b\u6743\u91cd\u5411\u91cf\u4e3a \u548c \u3002\u5982\u516c\u5f0f 14-1 \u6240\u793a\uff08 b \u662f\u504f\u5dee\u9879\uff0c \u03c6(\u00b7) \u662f\u6fc0\u6d3b\u51fd\u6570\uff0c\u4f8b\u5982 ReLU\uff09\uff0c\u53ef\u4ee5\u8ba1\u7b97\u5355\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u3002 \u5c31\u50cf\u524d\u9988\u795e\u7ecf\u7f51\u7edc\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e00\u4e2a\u516c\u5f0f\u7684\u5411\u91cf\u5316\u5f62\u5f0f\uff0c\u5bf9\u6574\u4e2a\u5c0f\u6279\u91cf\u8ba1\u7b97\u6574\u4e2a\u5c42\u7684\u8f93\u51fa\uff08\u89c1\u516c\u5f0f 14-2\uff09\u3002 \u662f \u77e9\u9635\uff0c\u5305\u542b\u5728\u6700\u5c0f\u6279\u6b21\u4e2d\u6bcf\u4e2a\u5b9e\u4f8b\u5728\u65f6\u95f4\u6b65 t \u5904\u7684\u5c42\u8f93\u51fa\uff08 m \u662f\u5c0f\u6279\u6b21\u4e2d\u7684\u5b9e\u4f8b\u6570\uff0c \u662f\u795e\u7ecf\u5143\u6570\uff09\u3002 \u662f \u77e9\u9635\uff0c\u5305\u542b\u6240\u6709\u5b9e\u4f8b\u7684\u8f93\u5165\u7684 \uff08 \u662f\u8f93\u5165\u7279\u5f81\u7684\u6570\u91cf\uff09\u3002 \u662f \u77e9\u9635\uff0c\u5305\u542b\u5f53\u524d\u65f6\u95f4\u6b65\u7684\u8f93\u5165\u7684\u8fde\u63a5\u6743\u91cd\u7684\u3002 \u662f \u77e9\u9635\uff0c\u5305\u542b\u4e0a\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u51fa\u7684\u8fde\u63a5\u6743\u91cd\u3002 \u6743\u91cd\u77e9\u9635 \u548c \u901a\u5e38\u8fde\u63a5\u6210\u5355\u4e2a\u6743\u91cd\u77e9\u9635 W \uff0c\u5f62\u72b6\u4e3a \uff08\u89c1\u516c\u5f0f 14-2 \u7684\u7b2c\u4e8c\u884c\uff09 b \u662f\u5927\u5c0f\u4e3a \u7684\u5411\u91cf\uff0c\u5305\u542b\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u504f\u7f6e\u9879\u3002 \u6ce8\u610f\uff0c \u662f \u548c \u7684\u51fd\u6570\uff0c\u5b83\u662f \u548c \u7684\u51fd\u6570\uff0c\u5b83\u662f \u548c \u7684\u51fd\u6570\uff0c\u7b49\u7b49\u3002 \u8fd9\u4f7f\u5f97 \u662f\u4ece\u65f6\u95f4 t = 0 \u5f00\u59cb\u7684\u6240\u6709\u8f93\u5165\uff08\u5373 \uff0c \uff0c...\uff0c \uff09\u7684\u51fd\u6570\u3002 \u5728\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6b65\uff0c t = 0 \uff0c\u6ca1\u6709\u4ee5\u524d\u7684\u8f93\u51fa\uff0c\u6240\u4ee5\u5b83\u4eec\u901a\u5e38\u88ab\u5047\u5b9a\u4e3a\u5168\u96f6\u3002","title":"\u5faa\u73af\u795e\u7ecf\u5143"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_3","text":"\u7531\u4e8e\u65f6\u95f4 t \u7684\u5faa\u73af\u795e\u7ecf\u5143\u7684\u8f93\u51fa\uff0c\u662f\u7531\u6240\u6709\u5148\u524d\u65f6\u95f4\u6b65\u9aa4\u8ba1\u7b97\u51fa\u6765\u7684\u7684\u51fd\u6570\uff0c\u4f60\u53ef\u4ee5\u8bf4\u5b83\u6709\u4e00\u79cd\u8bb0\u5fc6\u5f62\u5f0f\u3002\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u90e8\u5206\uff0c\u8de8\u8d8a\u65f6\u95f4\u6b65\u957f\u4fdd\u7559\u4e00\u4e9b\u72b6\u6001\uff0c\u79f0\u4e3a\u5b58\u50a8\u5355\u5143\uff08\u6216\u7b80\u79f0\u4e3a\u5355\u5143\uff09\u3002\u5355\u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u6216\u5faa\u73af\u795e\u7ecf\u5143\u5c42\u662f\u975e\u5e38\u57fa\u672c\u7684\u5355\u5143\uff0c\u4f46\u672c\u7ae0\u540e\u9762\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u66f4\u4e3a\u590d\u6742\u548c\u5f3a\u5927\u7684\u5355\u5143\u7c7b\u578b\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u6b65 t \u5904\u7684\u5355\u5143\u72b6\u6001\uff0c\u8bb0\u4e3a \uff08 h \u4ee3\u8868\u201c\u9690\u85cf\u201d\uff09\uff0c\u662f\u8be5\u65f6\u95f4\u6b65\u7684\u67d0\u4e9b\u8f93\u5165\u548c\u524d\u4e00\u65f6\u95f4\u6b65\u7684\u72b6\u6001\u7684\u51fd\u6570\uff1a \u3002 \u5176\u5728\u65f6\u95f4\u6b65 t \u5904\u7684\u8f93\u51fa\uff0c\u8868\u793a\u4e3a \uff0c\u4e5f\u548c\u524d\u4e00\u72b6\u6001\u548c\u5f53\u524d\u8f93\u5165\u7684\u51fd\u6570\u6709\u5173\u3002 \u5728\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u57fa\u672c\u5355\u5143\u7684\u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa\u7b49\u4e8e\u5355\u5143\u72b6\u6001\uff0c\u4f46\u662f\u5728\u66f4\u590d\u6742\u7684\u5355\u5143\u4e2d\u5e76\u4e0d\u603b\u662f\u5982\u6b64\uff0c\u5982\u56fe 14-3 \u6240\u793a\u3002","title":"\u8bb0\u5fc6\u5355\u5143"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_4","text":"RNN \u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u4e00\u7cfb\u5217\u8f93\u5165\u5e76\u4ea7\u751f\u4e00\u7cfb\u5217\u8f93\u51fa\uff08\u89c1\u56fe 14-4\uff0c\u5de6\u4e0a\u89d2\u7684\u7f51\u7edc\uff09\u3002 \u4f8b\u5982\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u7f51\u7edc\u5bf9\u4e8e\u9884\u6d4b\u65f6\u95f4\u5e8f\u5217\uff08\u5982\u80a1\u7968\u4ef7\u683c\uff09\u975e\u5e38\u6709\u7528\uff1a\u4f60\u5728\u8fc7\u53bb\u7684 N \u5929\u5185\u7ed9\u51fa\u4ef7\u683c\uff0c\u5e76\u4e14\u5b83\u5fc5\u987b\u8f93\u51fa\u5411\u672a\u6765\u4e00\u5929\u79fb\u52a8\u7684\u4ef7\u683c\uff08\u5373\u4ece N - 1 \u5929\u524d\u5230\u660e\u5929\uff09\u3002 \u6216\u8005\uff0c\u4f60\u53ef\u4ee5\u5411\u7f51\u7edc\u8f93\u5165\u4e00\u7cfb\u5217\u8f93\u5165\uff0c\u5e76\u5ffd\u7565\u9664\u6700\u540e\u4e00\u4e2a\u4e4b\u5916\u7684\u6240\u6709\u8f93\u51fa\uff08\u8bf7\u53c2\u9605\u53f3\u4e0a\u89d2\u7684\u7f51\u7edc\uff09\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5411\u91cf\u7f51\u7edc\u7684\u5e8f\u5217\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5411\u7f51\u7edc\u63d0\u4f9b\u4e0e\u7535\u5f71\u8bc4\u8bba\u76f8\u5bf9\u5e94\u7684\u5355\u8bcd\u5e8f\u5217\uff0c\u5e76\u4e14\u7f51\u7edc\u5c06\u8f93\u51fa\u60c5\u611f\u8bc4\u5206\uff08\u4f8b\u5982\uff0c\u4ece -1 [\u6068] \u5230 +1 [\u7231] \uff09\u3002 \u76f8\u53cd\uff0c\u4f60\u53ef\u4ee5\u5728\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6b65\u4e2d\u4e3a\u7f51\u7edc\u63d0\u4f9b\u4e00\u4e2a\u8f93\u5165\uff08\u800c\u5728\u5176\u4ed6\u6240\u6709\u65f6\u95f4\u6b65\u4e2d\u4e3a\u96f6\uff09\uff0c\u7136\u540e\u8ba9\u5b83\u8f93\u51fa\u4e00\u4e2a\u5e8f\u5217\uff08\u8bf7\u53c2\u9605\u5de6\u4e0b\u89d2\u7684\u7f51\u7edc\uff09\u3002 \u8fd9\u662f\u4e00\u4e2a\u5411\u91cf\u5230\u5e8f\u5217\u7684\u7f51\u7edc\u3002 \u4f8b\u5982\uff0c\u8f93\u5165\u53ef\u4ee5\u662f\u56fe\u50cf\uff0c\u8f93\u51fa\u53ef\u4ee5\u662f\u8be5\u56fe\u50cf\u7684\u6807\u9898\u3002 \u6700\u540e\uff0c\u4f60\u53ef\u4ee5\u6709\u4e00\u4e2a\u5e8f\u5217\u5230\u5411\u91cf\u7f51\u7edc\uff0c\u79f0\u4e3a\u7f16\u7801\u5668\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u79f0\u4e3a\u89e3\u7801\u5668\u7684\u5411\u91cf\u5230\u5e8f\u5217\u7f51\u7edc\uff08\u53c2\u89c1\u53f3\u4e0b\u89d2\u7684\u7f51\u7edc\uff09\u3002 \u4f8b\u5982\uff0c\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5c06\u53e5\u5b50\u4ece\u4e00\u79cd\u8bed\u8a00\u7ffb\u8bd1\u6210\u53e6\u4e00\u79cd\u8bed\u8a00\u3002 \u4f60\u4f1a\u7528\u4e00\u79cd\u8bed\u8a00\u7ed9\u7f51\u7edc\u5582\u4e00\u4e2a\u53e5\u5b50\uff0c\u7f16\u7801\u5668\u4f1a\u628a\u8fd9\u4e2a\u53e5\u5b50\u8f6c\u6362\u6210\u5355\u4e00\u7684\u5411\u91cf\u8868\u793a\uff0c\u7136\u540e\u89e3\u7801\u5668\u5c06\u8fd9\u4e2a\u5411\u91cf\u89e3\u7801\u6210\u53e6\u4e00\u79cd\u8bed\u8a00\u7684\u53e5\u5b50\u3002 \u8fd9\u79cd\u79f0\u4e3a\u7f16\u7801\u5668 - \u89e3\u7801\u5668\u7684\u4e24\u6b65\u6a21\u578b\uff0c\u6bd4\u7528\u5355\u4e2a\u5e8f\u5217\u5230\u5e8f\u5217\u7684 RNN\uff08\u5982\u5de6\u4e0a\u65b9\u6240\u793a\u7684\u90a3\u4e2a\uff09\u5feb\u901f\u5730\u8fdb\u884c\u7ffb\u8bd1\u8981\u597d\u5f97\u591a\uff0c\u56e0\u4e3a\u53e5\u5b50\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u53ef\u4ee5 \u5f71\u54cd\u7ffb\u8bd1\u7684\u7b2c\u4e00\u53e5\u8bdd\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u7b49\u5230\u542c\u5b8c\u6574\u4e2a\u53e5\u5b50\u624d\u80fd\u7ffb\u8bd1\u3002","title":"\u8f93\u5165\u548c\u8f93\u51fa\u5e8f\u5217"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#tensorflow-rnn","text":"\u9996\u5148\uff0c\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 RNN \u6a21\u578b\uff0c\u800c\u4e0d\u4f7f\u7528\u4efb\u4f55 TensorFlow \u7684 RNN \u64cd\u4f5c\uff0c\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u53d1\u751f\u4e86\u4ec0\u4e48\u3002 \u6211\u4eec\u5c06\u4f7f\u7528 tanh \u6fc0\u6d3b\u51fd\u6570\u521b\u5efa\u7531 5 \u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u7684\u5faa\u73af\u5c42\u7ec4\u6210\u7684 RNN\uff08\u5982\u56fe 14-2 \u6240\u793a\u7684 RNN\uff09\u3002 \u6211\u4eec\u5c06\u5047\u8bbe RNN \u53ea\u8fd0\u884c\u4e24\u4e2a\u65f6\u95f4\u6b65\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6b65\u8f93\u5165\u5927\u5c0f\u4e3a 3 \u7684\u5411\u91cf\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u6784\u5efa\u4e86\u8fd9\u4e2a RNN\uff0c\u5c55\u5f00\u4e86\u4e24\u4e2a\u65f6\u95f4\u6b65\u9aa4\uff1a n_inputs = 3 n_neurons = 5 X0 = tf.placeholder(tf.float32, [None, n_inputs]) X1 = tf.placeholder(tf.float32, [None, n_inputs]) Wx = tf.Variable(tf.random_normal(shape=[n_inputs, n_neurons], dtype=tf.float32)) Wy = tf.Variable(tf.random_normal(shape=[n_neurons, n_neurons], dtype=tf.float32)) b = tf.Variable(tf.zeros([1, n_neurons], dtype=tf.float32)) Y0 = tf.tanh(tf.matmul(X0, Wx) + b) Y1 = tf.tanh(tf.matmul(Y0, Wy) + tf.matmul(X1, Wx) + b) init = tf.global_variables_initializer() \u8fd9\u4e2a\u7f51\u7edc\u770b\u8d77\u6765\u5f88\u50cf\u4e00\u4e2a\u53cc\u5c42\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u6709\u4e00\u4e9b\u6539\u52a8\uff1a\u9996\u5148\uff0c\u4e24\u4e2a\u5c42\u5171\u4eab\u76f8\u540c\u7684\u6743\u91cd\u548c\u504f\u5dee\u9879\uff0c\u5176\u6b21\uff0c\u6211\u4eec\u5728\u6bcf\u4e00\u5c42\u90fd\u6709\u8f93\u5165\uff0c\u5e76\u4ece\u6bcf\u4e2a\u5c42\u83b7\u5f97\u8f93\u51fa\u3002 \u4e3a\u4e86\u8fd0\u884c\u6a21\u578b\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e24\u4e2a\u65f6\u95f4\u6b65\u4e2d\u90fd\u6709\u8f93\u5165\uff0c\u5982\u4e0b\u6240\u793a\uff1a # Mini-batch: instance 0,instance 1,instance 2,instance 3 X0_batch = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 0, 1]]) # t = 0 X1_batch = np.array([[9, 8, 7], [0, 0, 0], [6, 5, 4], [3, 2, 1]]) # t = 1 with tf.Session() as sess: init.run() Y0_val, Y1_val = sess.run([Y0, Y1], feed_dict={X0: X0_batch, X1: X1_batch}) \u8fd9\u4e2a\u5c0f\u6279\u91cf\u5305\u542b\u56db\u4e2a\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u4e00\u4e2a\u7531\u4e24\u4e2a\u8f93\u5165\u7ec4\u6210\u7684\u8f93\u5165\u5e8f\u5217\u3002 \u6700\u540e\uff0c Y0_val \u548c Y1_val \u5728\u6240\u6709\u795e\u7ecf\u5143\u548c\u5c0f\u6279\u91cf\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u7684\u4e24\u4e2a\u65f6\u95f4\u6b65\u4e2d\u5305\u542b\u7f51\u7edc\u7684\u8f93\u51fa\uff1a >>> print(Y0_val) # output at t = 0 [[-0.2964572 0.82874775 -0.34216955 -0.75720584 0.19011548] # instance 0 [-0.12842922 0.99981797 0.84704727 -0.99570125 0.38665548] # instance 1 [ 0.04731077 0.99999976 0.99330056 -0.999933 0.55339795] # instance 2 [ 0.70323634 0.99309105 0.99909431 -0.85363263 0.7472108 ]] # instance 3 >>> print(Y1_val) # output at t = 1 [[ 0.51955646 1\\. 0.99999022 -0.99984968 -0.24616946] # instance 0 [-0.70553327 -0.11918639 0.48885304 0.08917919 -0.26579669] # instance 1 [-0.32477224 0.99996376 0.99933046 -0.99711186 0.10981458] # instance 2 [-0.43738723 0.91517633 0.97817528 -0.91763324 0.11047263]] # instance 3 \u8fd9\u5e76\u4e0d\u96be\uff0c\u4f46\u662f\u5f53\u7136\u5982\u679c\u4f60\u60f3\u80fd\u591f\u8fd0\u884c 100 \u591a\u4e2a\u65f6\u95f4\u6b65\u9aa4\u7684 RNN\uff0c\u8fd9\u4e2a\u56fe\u5f62\u5c06\u4f1a\u975e\u5e38\u5927\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u4f7f\u7528 TensorFlow \u7684 RNN \u64cd\u4f5c\u521b\u5efa\u76f8\u540c\u7684\u6a21\u578b\u3002 \u5b8c\u6574\u4ee3\u7801 import numpy as np import tensorflow as tf if __name__ == '__main__': n_inputs = 3 n_neurons = 5 X0 = tf.placeholder(tf.float32, [None, n_inputs]) X1 = tf.placeholder(tf.float32, [None, n_inputs]) Wx = tf.Variable(tf.random_normal(shape=[n_inputs, n_neurons], dtype=tf.float32)) Wy = tf.Variable(tf.random_normal(shape=[n_neurons, n_neurons], dtype=tf.float32)) b = tf.Variable(tf.zeros([1, n_neurons], dtype=tf.float32)) Y0 = tf.tanh(tf.matmul(X0, Wx) + b) Y1 = tf.tanh(tf.matmul(Y0, Wy) + tf.matmul(X1, Wx) + b) init = tf.global_variables_initializer() # Mini-batch: instance 0,instance 1,instance 2,instance 3 X0_batch = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 0, 1]]) # t = 0 X1_batch = np.array([[9, 8, 7], [0, 0, 0], [6, 5, 4], [3, 2, 1]]) # t = 1 with tf.Session() as sess: init.run() Y0_val, Y1_val = sess.run([Y0, Y1], feed_dict={X0: X0_batch, X1: X1_batch}) print(Y0_val,'\\n') print(Y1_val)","title":"TensorFlow \u4e2d\u7684\u57fa\u672c RNN"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_5","text":"static_rnn() \u51fd\u6570\u901a\u8fc7\u94fe\u63a5\u5355\u5143\u6765\u521b\u5efa\u4e00\u4e2a\u5c55\u5f00\u7684 RNN \u7f51\u7edc\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e0e\u4e0a\u4e00\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u6a21\u578b\uff1a X0 = tf.placeholder(tf.float32, [None, n_inputs]) X1 = tf.placeholder(tf.float32, [None, n_inputs]) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) output_seqs, states = tf.contrib.rnn.static_rnn(basic_cell, [X0, X1], dtype=tf.float32) Y0, Y1 = output_seqs \u9996\u5148\uff0c\u6211\u4eec\u50cf\u4ee5\u524d\u4e00\u6837\u521b\u5efa\u8f93\u5165\u5360\u4f4d\u7b26\u3002 \u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a BasicRNNCell \uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u5de5\u5382\uff0c\u521b\u5efa\u5355\u5143\u7684\u526f\u672c\u4ee5\u6784\u5efa\u5c55\u5f00\u7684 RNN\uff08\u6bcf\u4e2a\u65f6\u95f4\u6b65\u4e00\u4e2a\uff09\u3002 \u7136\u540e\u6211\u4eec\u8c03\u7528 static_rnn() \uff0c\u5411\u5b83\u63d0\u4f9b\u5355\u5143\u5de5\u5382\u548c\u8f93\u5165\u5f20\u91cf\uff0c\u5e76\u544a\u8bc9\u5b83\u8f93\u5165\u7684\u6570\u636e\u7c7b\u578b\uff08\u7528\u6765\u521b\u5efa\u521d\u59cb\u72b6\u6001\u77e9\u9635\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u5168\u96f6\uff09\u3002 static_rnn() \u51fd\u6570\u4e3a\u6bcf\u4e2a\u8f93\u5165\u8c03\u7528\u5355\u5143\u5de5\u5382\u7684 __call __() \u51fd\u6570\uff0c\u521b\u5efa\u5355\u5143\u7684\u4e24\u4e2a\u526f\u672c\uff08\u6bcf\u4e2a\u5355\u5143\u5305\u542b 5 \u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u7684\u5faa\u73af\u5c42\uff09\uff0c\u5e76\u5177\u6709\u5171\u4eab\u7684\u6743\u91cd\u548c\u504f\u7f6e\u9879\uff0c\u50cf\u524d\u9762\u4e00\u6837\u3002 static_rnn() \u51fd\u6570\u8fd4\u56de\u4e24\u4e2a\u5bf9\u8c61\u3002 \u7b2c\u4e00\u4e2a\u662f\u5305\u542b\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u51fa\u5f20\u91cf\u7684 Python \u5217\u8868\u3002 \u7b2c\u4e8c\u4e2a\u662f\u5305\u542b\u7f51\u7edc\u6700\u7ec8\u72b6\u6001\u7684\u5f20\u91cf\u3002 \u5f53\u4f60\u4f7f\u7528\u57fa\u672c\u7684\u5355\u5143\u65f6\uff0c\u6700\u540e\u7684\u72b6\u6001\u5c31\u7b49\u4e8e\u6700\u540e\u7684\u8f93\u51fa\u3002 \u5982\u679c\u6709 50 \u4e2a\u65f6\u95f4\u6b65\u957f\uff0c\u5219\u4e0d\u5f97\u4e0d\u5b9a\u4e49 50 \u4e2a\u8f93\u5165\u5360\u4f4d\u7b26\u548c 50 \u4e2a\u8f93\u51fa\u5f20\u91cf\u3002\u800c\u4e14\uff0c\u5728\u6267\u884c\u65f6\uff0c\u4f60\u5c06\u4e0d\u5f97\u4e0d\u4e3a 50 \u4e2a\u5360\u4f4d\u7b26\u4e2d\u7684\u6bcf\u4e2a\u5360\u4f4d\u7b26\u8f93\u5165\u6570\u636e\u5e76\u4e14\u8fd8\u8981\u64cd\u7eb5 50 \u4e2a\u8f93\u51fa\u3002\u6211\u4eec\u6765\u7b80\u5316\u4e00\u4e0b\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u518d\u6b21\u6784\u5efa\u76f8\u540c\u7684 RNN\uff0c\u4f46\u662f\u8fd9\u6b21\u5b83\u9700\u8981\u4e00\u4e2a\u5f62\u72b6\u4e3a [None\uff0cn_steps\uff0cn_inputs] \u7684\u5355\u4e2a\u8f93\u5165\u5360\u4f4d\u7b26\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u662f\u6700\u5c0f\u6279\u91cf\u5927\u5c0f\u3002\u7136\u540e\u63d0\u53d6\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u5165\u5e8f\u5217\u5217\u8868\u3002 X_seqs \u662f\u5f62\u72b6\u4e3a n_steps \u7684 Python \u5217\u8868\uff0c\u5305\u542b\u5f62\u72b6\u4e3a [None\uff0cn_inputs] \u7684\u5f20\u91cf\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u540c\u6837\u662f\u6700\u5c0f\u6279\u91cf\u5927\u5c0f\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528 transpose() \u51fd\u6570\u4ea4\u6362\u524d\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u4ee5\u4fbf\u65f6\u95f4\u6b65\u9aa4\u73b0\u5728\u662f\u7b2c\u4e00\u7ef4\u5ea6\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f unstack() \u51fd\u6570\u6cbf\u7b2c\u4e00\u7ef4\uff08\u5373\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u4e00\u4e2a\u5f20\u91cf\uff09\u63d0\u53d6\u5f20\u91cf\u7684 Python \u5217\u8868\u3002\u63a5\u4e0b\u6765\u7684\u4e24\u884c\u548c\u4ee5\u524d\u4e00\u6837\u3002\u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528 stack() \u51fd\u6570\u5c06\u6240\u6709\u8f93\u51fa\u5f20\u91cf\u5408\u5e76\u6210\u4e00\u4e2a\u5f20\u91cf\uff0c\u7136\u540e\u6211\u4eec\u4ea4\u6362\u524d\u4e24\u4e2a\u7ef4\u5ea6\u5f97\u5230\u6700\u7ec8\u8f93\u51fa\u5f20\u91cf\uff0c\u5f62\u72b6\u4e3a [None, n_steps\uff0cn_neurons] \uff08\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u662f\u5c0f\u6279\u91cf\u5927\u5c0f\uff09\u3002 X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) X_seqs = tf.unstack(tf.transpose(X, perm=[1, 0, 2])) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) output_seqs, states = tf.contrib.rnn.static_rnn(basic_cell, X_seqs, dtype=tf.float32) outputs = tf.transpose(tf.stack(output_seqs), perm=[1, 0, 2]) \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9\u5b83\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c0f\u6279\u91cf\u5e8f\u5217\u7684\u5f20\u91cf\u6765\u8fd0\u884c\u7f51\u7edc\uff1a X_batch = np.array([ # t = 0 t = 1 [[0, 1, 2], [9, 8, 7]], # instance 1 [[3, 4, 5], [0, 0, 0]], # instance 2 [[6, 7, 8], [6, 5, 4]], # instance 3 [[9, 0, 1], [3, 2, 1]], # instance 4 ]) with tf.Session() as sess: init.run() outputs_val = outputs.eval(feed_dict={X: X_batch}) \u6211\u4eec\u5f97\u5230\u6240\u6709\u5b9e\u4f8b\uff0c\u6240\u6709\u65f6\u95f4\u6b65\u957f\u548c\u6240\u6709\u795e\u7ecf\u5143\u7684\u5355\u4e00 outputs_val \u5f20\u91cf\uff1a \u4f46\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4ecd\u7136\u4f1a\u5efa\u7acb\u4e00\u4e2a\u6bcf\u4e2a\u65f6\u95f4\u6b65\u5305\u542b\u4e00\u4e2a\u5355\u5143\u7684\u56fe\u3002 \u5982\u679c\u6709 50 \u4e2a\u65f6\u95f4\u6b65\uff0c\u8fd9\u4e2a\u56fe\u770b\u8d77\u6765\u4f1a\u975e\u5e38\u96be\u770b\u3002 \u8fd9\u6709\u70b9\u50cf\u5199\u4e00\u4e2a\u7a0b\u5e8f\u800c\u6ca1\u6709\u4f7f\u7528\u5faa\u73af\uff08\u4f8b\u5982\uff0c Y0 = f(0,X0) \uff1b Y1 = f(Y0,X1) \uff1b Y2 = f(Y1,X2) \uff1b...\uff1b Y50 = f(Y49,X50) \uff09\u3002 \u5982\u679c\u4f7f\u7528\u5927\u56fe\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u671f\u95f4\uff08\u7279\u522b\u662f\u5728 GPU \u5185\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff09\uff0c\u4f60\u751a\u81f3\u53ef\u80fd\u4f1a\u53d1\u751f\u5185\u5b58\u4e0d\u8db3\uff08OOM\uff09\u9519\u8bef\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5728\u6b63\u5411\u4f20\u9012\u671f\u95f4\u5b58\u50a8\u6240\u6709\u5f20\u91cf\u503c\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u5728\u53cd\u5411\u4f20\u64ad\u671f\u95f4\u8ba1\u7b97\u68af\u5ea6\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff1a dynamic_rnn() \u51fd\u6570\u3002","title":"\u65f6\u95f4\u4e0a\u7684\u9759\u6001\u5c55\u5f00"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_6","text":"dynamic_rnn() \u51fd\u6570\u4f7f\u7528 while_loop() \u64cd\u4f5c\uff0c\u5728\u5355\u5143\u4e0a\u8fd0\u884c\u9002\u5f53\u7684\u6b21\u6570\uff0c\u5982\u679c\u8981\u5728\u53cd\u5411\u4f20\u64ad\u671f\u95f4\u5c06 GPU\u5185 \u5b58\u4ea4\u6362\u5230 CPU \u5185\u5b58\uff0c\u53ef\u4ee5\u8bbe\u7f6e swap_memory = True \uff0c\u4ee5\u907f\u514d\u5185\u5b58\u4e0d\u8db3\u9519\u8bef\u3002 \u65b9\u4fbf\u7684\u662f\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff08\u5f62\u72b6\u4e3a [None, n_steps, n_inputs] \uff09\u63a5\u53d7\u6240\u6709\u8f93\u5165\u7684\u5355\u4e2a\u5f20\u91cf\uff0c\u5e76\u4e14\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff08\u5f62\u72b6 [None, n_steps, n_neurons] \uff09\u4e0a\u8f93\u51fa\u6240\u6709\u8f93\u51fa\u7684\u5355\u4e2a\u5f20\u91cf\u3002 \u6ca1\u6709\u5fc5\u8981\u5806\u53e0\uff0c\u62c6\u6563\u6216\u8f6c\u7f6e\u3002 \u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 dynamic_rnn() \u51fd\u6570\u521b\u5efa\u4e0e\u4e4b\u524d\u76f8\u540c\u7684 RNN\u3002 \u8fd9\u592a\u597d\u4e86\uff01 \u5b8c\u6574\u4ee3\u7801 import numpy as np import tensorflow as tf import pandas as pd if __name__ == '__main__': n_steps = 2 n_inputs = 3 n_neurons = 5 X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) outputs, states = tf.nn.dynamic_rnn(basic_cell, X, dtype=tf.float32) init = tf.global_variables_initializer() X_batch = np.array([ [[0, 1, 2], [9, 8, 7]], # instance 1 [[3, 4, 5], [0, 0, 0]], # instance 2 [[6, 7, 8], [6, 5, 4]], # instance 3 [[9, 0, 1], [3, 2, 1]], # instance 4 ]) with tf.Session() as sess: init.run() outputs_val = outputs.eval(feed_dict={X: X_batch}) print(outputs_val) \u5728\u53cd\u5411\u4f20\u64ad\u671f\u95f4\uff0c while_loop() \u64cd\u4f5c\u4f1a\u6267\u884c\u76f8\u5e94\u7684\u6b65\u9aa4\uff1a\u5728\u6b63\u5411\u4f20\u9012\u671f\u95f4\u5b58\u50a8\u6bcf\u6b21\u8fed\u4ee3\u7684\u5f20\u91cf\u503c\uff0c\u4ee5\u4fbf\u5728\u53cd\u5411\u4f20\u9012\u671f\u95f4\u4f7f\u7528\u5b83\u4eec\u6765\u8ba1\u7b97\u68af\u5ea6\u3002","title":"\u65f6\u95f4\u4e0a\u7684\u52a8\u6001\u5c55\u5f00"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_7","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u8f93\u5165\u5e8f\u5217\uff08\u5168\u90e8\u6b63\u597d\u4e24\u4e2a\u6b65\u957f\uff09\u3002 \u5982\u679c\u8f93\u5165\u5e8f\u5217\u5177\u6709\u53ef\u53d8\u957f\u5ea6\uff08\u4f8b\u5982\uff0c\u50cf\u53e5\u5b50\uff09\u5462\uff1f \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u5728\u8c03\u7528 dynamic_rnn() \uff08\u6216 static_rnn() \uff09\u51fd\u6570\u65f6\u8bbe\u7f6e sequence_length \u53c2\u6570\uff1b\u5b83\u5fc5\u987b\u662f\u4e00\u7ef4\u5f20\u91cf\uff0c\u8868\u793a\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u8f93\u5165\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u4f8b\u5982\uff1a n_steps = 2 n_inputs = 3 n_neurons = 5 reset_graph() X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) seq_length = tf.placeholder(tf.int32, [None]) outputs, states = tf.nn.dynamic_rnn(basic_cell, X, dtype=tf.float32, sequence_length=seq_length) \u4f8b\u5982\uff0c\u5047\u8bbe\u7b2c\u4e8c\u4e2a\u8f93\u5165\u5e8f\u5217\u53ea\u5305\u542b\u4e00\u4e2a\u8f93\u5165\u800c\u4e0d\u662f\u4e24\u4e2a\u8f93\u5165\u3002 \u4e3a\u4e86\u9002\u5e94\u8f93\u5165\u5f20\u91cf X \uff0c\u5fc5\u987b\u586b\u5145\u96f6\u5411\u91cf\uff08\u56e0\u4e3a\u8f93\u5165\u5f20\u91cf\u7684\u7b2c\u4e8c\u7ef4\u662f\u6700\u957f\u5e8f\u5217\u7684\u5927\u5c0f\uff0c\u5373 2\uff09 X_batch = np.array([ # step 0 step 1 [[0, 1, 2], [9, 8, 7]], # instance 1 [[3, 4, 5], [0, 0, 0]], # instance 2 (padded with zero vectors) [[6, 7, 8], [6, 5, 4]], # instance 3 [[9, 0, 1], [3, 2, 1]], # instance 4 ]) seq_length_batch = np.array([2, 1, 2, 2]) \u5f53\u7136\uff0c\u4f60\u73b0\u5728\u9700\u8981\u4e3a\u4e24\u4e2a\u5360\u4f4d\u7b26 X \u548c seq_length \u63d0\u4f9b\u503c\uff1a with tf.Session() as sess: init.run() outputs_val, states_val = sess.run( [outputs, states], feed_dict={X: X_batch, seq_length: seq_length_batch}) \u73b0\u5728\uff0cRNN \u8f93\u51fa\u5e8f\u5217\u957f\u5ea6\u7684\u6bcf\u4e2a\u65f6\u95f4\u6b65\u90fd\u4f1a\u8f93\u51fa\u96f6\u5411\u91cf\uff08\u67e5\u770b\u7b2c\u4e8c\u4e2a\u65f6\u95f4\u6b65\u7684\u7b2c\u4e8c\u4e2a\u8f93\u51fa\uff09\uff1a \u6b64\u5916\uff0c\u72b6\u6001\u5f20\u91cf\u5305\u542b\u6bcf\u4e2a\u5355\u5143\u7684\u6700\u7ec8\u72b6\u6001\uff08\u4e0d\u5305\u62ec\u96f6\u5411\u91cf\uff09\uff1a","title":"\u5904\u7406\u53d8\u957f\u8f93\u5165\u5e8f\u5217"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_8","text":"\u5982\u679c\u8f93\u51fa\u5e8f\u5217\u957f\u5ea6\u4e0d\u4e00\u6837\u5462\uff1f \u5982\u679c\u4e8b\u5148\u77e5\u9053\u6bcf\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\uff08\u4f8b\u5982\uff0c\u5982\u679c\u77e5\u9053\u957f\u5ea6\u4e0e\u8f93\u5165\u5e8f\u5217\u7684\u957f\u5ea6\u76f8\u540c\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u6240\u8ff0\u8bbe\u7f6e sequence_length \u53c2\u6570\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u901a\u5e38\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff1a\u4f8b\u5982\uff0c\u7ffb\u8bd1\u540e\u7684\u53e5\u5b50\u7684\u957f\u5ea6\u901a\u5e38\u4e0e\u8f93\u5165\u53e5\u5b50\u7684\u957f\u5ea6\u4e0d\u540c\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6700\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5b9a\u4e49\u4e00\u4e2a\u79f0\u4e3a\u5e8f\u5217\u7ed3\u675f\u6807\u8bb0\uff08EOS \u6807\u8bb0\uff09\u7684\u7279\u6b8a\u8f93\u51fa\u3002 \u4efb\u4f55\u5728 EOS \u540e\u9762\u7684\u8f93\u51fa\u5e94\u8be5\u88ab\u5ffd\u7565\uff08\u6211\u4eec\u5c06\u5728\u672c\u7ae0\u7a0d\u540e\u8ba8\u8bba\uff09\u3002 \u597d\uff0c\u73b0\u5728\u4f60\u77e5\u9053\u5982\u4f55\u5efa\u7acb\u4e00\u4e2a RNN \u7f51\u7edc\uff08\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\u662f\u4e00\u4e2a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u5c55\u5f00\u7684 RNN \u7f51\u7edc\uff09\u3002 \u4f46\u662f\u4f60\u600e\u4e48\u8bad\u7ec3\u5462\uff1f","title":"\u5904\u7406\u53d8\u957f\u8f93\u51fa\u5e8f\u5217"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#rnn","text":"\u4e3a\u4e86\u8bad\u7ec3\u4e00\u4e2a RNN\uff0c\u8bc0\u7a8d\u662f\u5728\u65f6\u95f4\u4e0a\u5c55\u5f00\uff08\u5c31\u50cf\u6211\u4eec\u521a\u521a\u505a\u7684\u90a3\u6837\uff09\uff0c\u7136\u540e\u7b80\u5355\u5730\u4f7f\u7528\u5e38\u89c4\u53cd\u5411\u4f20\u64ad\uff08\u89c1\u56fe 14-5\uff09\u3002 \u8fd9\u4e2a\u7b56\u7565\u88ab\u79f0\u4e3a\u65f6\u95f4\u4e0a\u7684\u53cd\u5411\u4f20\u64ad\uff08BPTT\uff09\u3002 \u5c31\u50cf\u5728\u6b63\u5e38\u7684\u53cd\u5411\u4f20\u64ad\u4e2d\u4e00\u6837\uff0c\u5c55\u5f00\u7684\u7f51\u7edc\uff08\u7528\u865a\u7ebf\u7bad\u5934\u8868\u793a\uff09\u6709\u7b2c\u4e00\u4e2a\u6b63\u5411\u4f20\u9012\u3002\u7136\u540e\u4f7f\u7528\u635f\u5931\u51fd\u6570\u8bc4\u4f30\u8f93\u51fa\u5e8f\u5217 \uff08\u5176\u4e2d \u548c \u662f\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u8f93\u51fa\u65f6\u95f4\u6b65\u957f\uff0c\u4e0d\u8ba1\u7b97\u5ffd\u7565\u7684\u8f93\u51fa\uff09\uff0c\u5e76\u4e14\u8be5\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u901a\u8fc7\u5c55\u5f00\u7684\u7f51\u7edc\u5411\u540e\u4f20\u64ad\uff08\u5b9e\u7ebf\u7bad\u5934\uff09\uff1b\u6700\u540e\u4f7f\u7528\u5728 BPTT \u671f\u95f4\u8ba1\u7b97\u7684\u68af\u5ea6\u6765\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u3002 \u8bf7\u6ce8\u610f\uff0c\u68af\u5ea6\u5728\u635f\u5931\u51fd\u6570\u6240\u4f7f\u7528\u7684\u6240\u6709\u8f93\u51fa\u4e2d\u53cd\u5411\u6d41\u52a8\uff0c\u800c\u4e0d\u4ec5\u4ec5\u901a\u8fc7\u6700\u7ec8\u8f93\u51fa\uff08\u4f8b\u5982\uff0c\u5728\u56fe 14-5 \u4e2d\uff0c\u635f\u5931\u51fd\u6570\u4f7f\u7528\u7f51\u7edc\u7684\u6700\u540e\u4e09\u4e2a\u8f93\u51fa \uff0c \u548c \uff0c\u6240\u4ee5\u68af\u5ea6\u6d41\u7ecf\u8fd9\u4e09\u4e2a\u8f93\u51fa\uff0c\u4f46\u4e0d\u901a\u8fc7 \u548c \uff09\u3002 \u800c\u4e14\uff0c\u7531\u4e8e\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u9aa4\u4f7f\u7528\u76f8\u540c\u7684\u53c2\u6570 W \u548c b \uff0c\u6240\u4ee5\u53cd\u5411\u4f20\u64ad\u5c06\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u5e76\u4e14\u603b\u7ed3\u6240\u6709\u65f6\u95f4\u6b65\u9aa4\u3002","title":"\u8bad\u7ec3 RNN"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_9","text":"\u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a RNN \u6765\u5206\u7c7b MNIST \u56fe\u50cf\u3002 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5c06\u66f4\u9002\u5408\u4e8e\u56fe\u50cf\u5206\u7c7b\uff08\u89c1\u7b2c 13 \u7ae0\uff09\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u4f60\u5df2\u7ecf\u719f\u6089\u7684\u7b80\u5355\u4f8b\u5b50\u3002 \u6211\u4eec\u5c06\u628a\u6bcf\u4e2a\u56fe\u50cf\u89c6\u4e3a 28 \u884c 28 \u50cf\u7d20\u7684\u5e8f\u5217\uff08\u56e0\u4e3a\u6bcf\u4e2aMNIST\u56fe\u50cf\u662f 28\u00d728 \u50cf\u7d20\uff09\u3002 \u6211\u4eec\u5c06\u4f7f\u7528 150 \u4e2a\u5faa\u73af\u795e\u7ecf\u5143\u7684\u5355\u5143\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\uff0c\u5176\u4e2d\u5305\u542b\u8fde\u63a5\u5230\u4e0a\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u8f93\u51fa\u7684 10 \u4e2a\u795e\u7ecf\u5143\uff08\u6bcf\u4e2a\u7c7b\u4e00\u4e2a\uff09\uff0c\u7136\u540e\u662f\u4e00\u4e2a softmax \u5c42\uff08\u89c1\u56fe 14-6\uff09\u3002 \u5efa\u6a21\u9636\u6bb5\u975e\u5e38\u7b80\u5355\uff0c \u5b83\u548c\u6211\u4eec\u5728\u7b2c 10 \u7ae0\u4e2d\u5efa\u7acb\u7684 MNIST \u5206\u7c7b\u5668\u51e0\u4e4e\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f\u5c55\u5f00\u7684 RNN \u66ff\u6362\u4e86\u9690\u5c42\u3002 \u6ce8\u610f\uff0c\u5168\u8fde\u63a5\u5c42\u8fde\u63a5\u5230\u72b6\u6001\u5f20\u91cf\uff0c\u5176\u4ec5\u5305\u542b RNN \u7684\u6700\u7ec8\u72b6\u6001\uff08\u5373\uff0c\u7b2c 28 \u4e2a\u8f93\u51fa\uff09\u3002 \u53e6\u8bf7\u6ce8\u610f\uff0c y \u662f\u76ee\u6807\u7c7b\u7684\u5360\u4f4d\u7b26\u3002 n_steps = 28 n_inputs = 28 n_neurons = 150 n_outputs = 10 learning_rate = 0.001 X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) y = tf.placeholder(tf.int32, [None]) basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) outputs, states = tf.nn.dynamic_rnn(basic_cell, X, dtype=tf.float32) logits = tf.layers.dense(states, n_outputs) xentropy = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y, logits=logits) loss = tf.reduce_mean(xentropy) optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(loss) correct = tf.nn.in_top_k(logits, y, 1) accuracy = tf.reduce_mean(tf.cast(correct, tf.float32)) init = tf.global_variables_initializer() \u73b0\u5728\u8ba9\u6211\u4eec\u52a0\u8f7d MNIST \u6570\u636e\uff0c\u5e76\u6309\u7167\u7f51\u7edc\u7684\u9884\u671f\u65b9\u5f0f\u5c06\u6d4b\u8bd5\u6570\u636e\u91cd\u5851\u4e3a [batch_size, n_steps, n_inputs] \u3002 \u6211\u4eec\u4e4b\u540e\u4f1a\u5173\u6ce8\u8bad\u7ec3\u6570\u636e\u7684\u91cd\u5851\u3002 from tensorflow.examples.tutorials.mnist import input_data mnist = input_data.read_data_sets(\"/tmp/data/\") X_test = mnist.test.images.reshape((-1, n_steps, n_inputs)) y_test = mnist.test.labels \u73b0\u5728\u6211\u4eec\u51c6\u5907\u8bad\u7ec3 RNN \u4e86\u3002 \u6267\u884c\u9636\u6bb5\u4e0e\u7b2c 10 \u7ae0\u4e2d MNIST \u5206\u7c7b\u5668\u7684\u6267\u884c\u9636\u6bb5\u5b8c\u5168\u76f8\u540c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6211\u4eec\u5728\u5c06\u6bcf\u4e2a\u8bad\u7ec3\u7684\u6279\u91cf\u63d0\u4f9b\u7ed9\u7f51\u7edc\u4e4b\u524d\u8981\u91cd\u65b0\u8c03\u6574\u3002 batch_size = 150 with tf.Session() as sess: init.run() for epoch in range(n_epochs): for iteration in range(mnist.train.num_examples // batch_size): X_batch, y_batch = mnist.train.next_batch(batch_size) X_batch = X_batch.reshape((-1, n_steps, n_inputs)) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) acc_train = accuracy.eval(feed_dict={X: X_batch, y: y_batch}) acc_test = accuracy.eval(feed_dict={X: X_test, y: y_test}) print(epoch, \"Train accuracy:\", acc_train, \"Test accuracy:\", acc_test) \u8f93\u51fa\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a \u6211\u4eec\u83b7\u5f97\u4e86\u8d85\u8fc7 98% \u7684\u51c6\u786e\u6027 - \u4e0d\u9519\uff01 \u53e6\u5916\uff0c\u901a\u8fc7\u8c03\u6574\u8d85\u53c2\u6570\uff0c\u4f7f\u7528 He \u521d\u59cb\u5316\u521d\u59cb\u5316 RNN \u6743\u91cd\uff0c\u66f4\u957f\u65f6\u95f4\u8bad\u7ec3\u6216\u6dfb\u52a0\u4e00\u4e9b\u6b63\u5219\u5316\uff08\u4f8b\u5982\uff0cdroupout\uff09\uff0c\u4f60\u80af\u5b9a\u4f1a\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176\u6784\u9020\u4ee3\u7801\u5305\u88c5\u5728\u4e00\u4e2a\u53d8\u91cf\u4f5c\u7528\u57df\u5185\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 variable_scope(\"rnn\", initializer = variance_scaling_initializer()) \u6765\u4f7f\u7528 He \u521d\u59cb\u5316\uff09\u6765\u4e3a RNN \u6307\u5b9a\u521d\u59cb\u5316\u5668\u3002","title":"\u8bad\u7ec3\u5e8f\u5217\u5206\u7c7b\u5668"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_10","text":"\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u5904\u7406\u65f6\u95f4\u5e8f\u5217\uff0c\u5982\u80a1\u4ef7\uff0c\u6c14\u6e29\uff0c\u8111\u7535\u6ce2\u6a21\u5f0f\u7b49\u7b49\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8bad\u7ec3\u4e00\u4e2a RNN \u6765\u9884\u6d4b\u751f\u6210\u7684\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u4e0b\u4e00\u4e2a\u503c\u3002 \u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u662f\u4ece\u65f6\u95f4\u5e8f\u5217\u4e2d\u968f\u673a\u9009\u53d6\u7684 20 \u4e2a\u8fde\u7eed\u503c\u7684\u5e8f\u5217\uff0c\u76ee\u6807\u5e8f\u5217\u4e0e\u8f93\u5165\u5e8f\u5217\u76f8\u540c\uff0c\u9664\u4e86\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u65f6\u95f4\u6b65\uff08\u53c2\u89c1\u56fe14-7\uff09\u3002 \u9996\u5148\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a RNN\u3002 \u5b83\u5c06\u5305\u542b 100 \u4e2a\u5faa\u73af\u795e\u7ecf\u5143\uff0c\u5e76\u4e14\u6211\u4eec\u5c06\u5728 20 \u4e2a\u65f6\u95f4\u6b65\u9aa4\u4e0a\u5c55\u5f00\u5b83\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u5c06\u662f 20 \u4e2a\u8f93\u5165\u90a3\u4e48\u957f\u3002 \u6bcf\u4e2a\u8f93\u5165\u5c06\u4ec5\u5305\u542b\u4e00\u4e2a\u7279\u5f81\uff08\u5728\u8be5\u65f6\u95f4\u7684\u503c\uff09\u3002 \u76ee\u6807\u4e5f\u662f 20 \u4e2a\u8f93\u5165\u7684\u5e8f\u5217\uff0c\u6bcf\u4e2a\u8f93\u5165\u5305\u542b\u4e00\u4e2a\u503c\u3002 \u4ee3\u7801\u4e0e\u4e4b\u524d\u51e0\u4e4e\u76f8\u540c\uff1a \u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u5c06\u4e0d\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u529f\u80fd\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u4f60\u8bd5\u56fe\u9884\u6d4b\u80a1\u7968\u4ef7\u683c\uff0c\u5219\u4f60\u53ef\u80fd\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u9aa4\u90fd\u4f1a\u6709\u8bb8\u591a\u5176\u4ed6\u8f93\u5165\u529f\u80fd\uff0c\u4f8b\u5982\u7ade\u4e89\u80a1\u7968\u7684\u4ef7\u683c\uff0c\u5206\u6790\u5e08\u7684\u8bc4\u7ea7\u6216\u53ef\u80fd\u5e2e\u52a9\u7cfb\u7edf\u8fdb\u884c\u9884\u6d4b\u7684\u4efb\u4f55\u5176\u4ed6\u529f\u80fd\u3002 \u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a 100 \u7684\u8f93\u51fa\u5411\u91cf\u3002\u4f46\u662f\u6211\u4eec\u5b9e\u9645\u9700\u8981\u7684\u662f\u6bcf\u4e2a\u65f6\u95f4\u6b65\u7684\u5355\u4e2a\u8f93\u51fa\u503c\u3002 \u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06\u5355\u5143\u5305\u88c5\u5728 OutputProjectionWrapper \u4e2d\u3002 \u5355\u5143\u5305\u88c5\u5668\u5c31\u50cf\u4e00\u4e2a\u666e\u901a\u7684\u5355\u5143\uff0c\u4ee3\u7406\u6bcf\u4e2a\u65b9\u6cd5\u8c03\u7528\u4e00\u4e2a\u5e95\u5c42\u5355\u5143\uff0c\u4f46\u662f\u5b83\u4e5f\u589e\u52a0\u4e86\u4e00\u4e9b\u529f\u80fd\u3002 Out putProjectionWrapper \u5728\u6bcf\u4e2a\u8f93\u51fa\u4e4b\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u5b8c\u5168\u8fde\u63a5\u7684\u7ebf\u6027\u795e\u7ecf\u5143\u5c42\uff08\u5373\u6ca1\u6709\u4efb\u4f55\u6fc0\u6d3b\u51fd\u6570\uff09\uff08\u4f46\u4e0d\u5f71\u54cd\u5355\u5143\u72b6\u6001\uff09\u3002 \u6240\u6709\u8fd9\u4e9b\u5b8c\u5168\u8fde\u63a5\u7684\u5c42\u5171\u4eab\u76f8\u540c\uff08\u53ef\u8bad\u7ec3\uff09\u7684\u6743\u91cd\u548c\u504f\u5dee\u9879\u3002 \u7ed3\u679c RNN \u5982\u56fe 14-8 \u6240\u793a\u3002 \u5305\u88c5\u5355\u5143\u662f\u76f8\u5f53\u5bb9\u6613\u7684\u3002 \u8ba9\u6211\u4eec\u901a\u8fc7\u5c06 BasicRNNCell \u5305\u88c5\u5230 OutputProjectionWrapper \u4e2d\u6765\u8c03\u6574\u524d\u9762\u7684\u4ee3\u7801\uff1a cell =tf.contrib.rnn.OutputProjectionWrapper( tf.contrib.rnn.BasicRNNCell(num_units=n_neurons,activation=tf.nn.relu), output_size=n_outputs) \u5230\u73b0\u5728\u4e3a\u6b62\u8fd8\u633a\u597d\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u635f\u5931\u51fd\u6570\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u4e4b\u524d\u7684\u56de\u5f52\u4efb\u52a1\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u50cf\u5f80\u5e38\u4e00\u6837\u521b\u5efa\u4e00\u4e2a Adam \u4f18\u5316\u5668\uff0c\u8bad\u7ec3\u64cd\u4f5c\u548c\u53d8\u91cf\u521d\u59cb\u5316\u64cd\u4f5c\uff1a","title":"\u4e3a\u9884\u6d4b\u65f6\u95f4\u5e8f\u5217\u800c\u8bad\u7ec3"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#rnn_1","text":"\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u8bad\u7ec3\u4e86\u4e00\u4e2a\u80fd\u591f\u9884\u6d4b\u672a\u6765\u65f6\u523b\u6837\u672c\u503c\u7684\u6a21\u578b\uff0c\u6b63\u5982\u524d\u6587\u6240\u8ff0\uff0c\u53ef\u4ee5\u7528\u6a21\u578b\u6765\u751f\u6210\u65b0\u7684\u5e8f\u5217\u3002 \u4e3a\u6a21\u578b\u63d0\u4f9b \u957f\u5ea6\u4e3a n_steps \u7684\u79cd\u5b50\u5e8f\u5217, \u6bd4\u5982\u5168\u96f6\u5e8f\u5217\uff0c\u7136\u540e\u901a\u8fc7\u6a21\u578b\u9884\u6d4b\u4e0b\u4e00\u65f6\u523b\u7684\u503c\uff1b\u628a\u8be5\u9884\u6d4b\u503c\u6dfb\u52a0\u5230\u79cd\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\uff0c\u7528\u6700\u540e\u9762 \u957f\u5ea6\u4e3a n_steps \u7684\u5e8f\u5217\u505a\u4e3a\u65b0\u7684\u79cd\u5b50\u5e8f\u5217\uff0c\u505a\u4e0b\u4e00\u6b21\u9884\u6d4b\uff0c\u4ee5\u6b64\u7c7b\u63a8\u751f\u6210\u9884\u6d4b\u5e8f\u5217\u3002 \u5982\u56fe 14-11 \u6240\u793a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4ea7\u751f\u7684\u5e8f\u5217\u4f1a\u8ddf\u539f\u59cb\u65f6\u95f4\u5e8f\u5217\u76f8\u4f3c\u3002 sequence = [0.] * n_steps for iteration in range(300): X_batch = np.array(sequence[-n_steps:].reshape(1, n_steps, 1) y_pred = sess.run(outputs, feed_dict={X: X_batch} sequence.append(y_pred[0, -1, 0] \u5982\u679c\u4f60\u8bd5\u56fe\u628a\u7ea6\u7ff0\u00b7\u5217\u4fac\u7684\u5531\u7247\u585e\u7ed9\u4e00\u4e2a RNN \u6a21\u578b\uff0c\u770b\u5b83\u80fd\u4e0d\u80fd\u751f\u6210\u4e0b\u4e00\u5f20\u300a\u60f3\u8c61\u300b\u4e13\u8f91\u3002 \u6ce8 \u7ea6\u7ff0\u00b7\u5217\u4fac \u6709\u4e00\u5f20\u4e13\u8f91\u300aImagine\u300b\uff081971\uff09\uff0c\u8fd9\u91cc\u53d6\u5176\u53cc\u5173\u7684\u610f\u601d \u4e5f\u8bb8\u4f60\u9700\u8981\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684 RNN \u7f51\u7edc\uff0c\u5b83\u6709\u66f4\u591a\u7684\u795e\u7ecf\u5143\uff0c\u5c42\u6570\u4e5f\u66f4\u591a\u3002\u4e0b\u9762\u6765\u63a2\u7a76\u4e00\u4e0b\u6df1\u5ea6 RNN\u3002","title":"\u751f\u6210 RNN"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#rnn_2","text":"\u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u5c31\u662f\u628a\u4e00\u5c42\u5c42\u795e\u7ecf\u5143\u5806\u53e0\u8d77\u6765\uff0c\u6b63\u5982\u56fe 14-12 \u6240\u793a\u7684\u90a3\u6837\uff0c\u5b83\u5448\u73b0\u4e86\u4e00\u79cd\u6df1\u5ea6 RNN\u3002 \u4e3a\u4e86\u7528 TensorFlow \u5b9e\u73b0\u6df1\u5ea6 RNN\uff0c\u53ef\u5148\u521b\u5efa\u4e00\u4e9b\u795e\u7ecf\u5355\u5143\uff0c\u7136\u540e\u5806\u53e0\u8fdb MultiRNNCell \u3002 \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u521b\u5efa\u4e86 3 \u4e2a\u76f8\u540c\u7684\u795e\u7ecf\u5355\u5143\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4e0d\u540c\u7c7b\u522b\u7684\u3001\u5305\u542b\u4e0d\u540c\u4e0d\u540c\u6570\u91cf\u795e\u7ecf\u5143\u7684\u5355\u5143\uff09 n_neurons = 100 n_layers = 3 basic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) multi_layer_cell = tf.contrib.rnn.MultiRNNCell([basic_cell] * n_layers) outputs, states = tf.nn.dynamic_rnn(multi_layer_cell, X, dtype=tf.float32) \u8fd9\u4e9b\u4ee3\u7801\u5c31\u5b8c\u6210\u4e86\u8fd9\u90e8\u5206\u5806\u53e0\u5de5\u4f5c\u3002 status \u53d8\u91cf\u5305\u542b\u4e86\u6bcf\u5c42\u7684\u4e00\u4e2a\u5f20\u91cf\uff0c\u8fd9\u4e2a\u5f20\u91cf\u5c31\u4ee3\u8868\u4e86\u8be5\u5c42\u795e\u7ecf\u5355\u5143\u7684\u6700\u7ec8\u72b6\u6001\uff08\u7ef4\u5ea6\u4e3a [batch_size, n_neurons] \uff09\u3002 \u5982\u679c\u5728\u521b\u5efa MultiRNNCell \u65f6\u8bbe\u7f6e\u4e86 state_is_tuple=False \uff0c\u90a3\u4e48 status \u53d8\u91cf\u5c31\u53d8\u6210\u4e86\u5355\u4e2a\u5f20\u91cf\uff0c\u5b83\u5305\u542b\u4e86\u6bcf\u4e00\u5c42\u7684\u72b6\u6001\uff0c\u5176\u5728\u5217\u7684\u65b9\u5411\u4e0a\u8fdb\u884c\u4e86\u805a\u5408\uff0c\u7ef4\u5ea6\u4e3a [batch_size, n_layers*n_neurons] \u3002 \u6ce8\u610f\u5728 TensorFlow \u7248\u672c 0.11.0 \u4e4b\u524d\uff0c status \u662f\u5355\u4e2a\u5f20\u91cf\u662f\u9ed8\u8ba4\u8bbe\u7f6e\u3002","title":"\u6df1\u5ea6 RNN"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#gpu-rnn","text":"","title":"\u5728\u591a\u4e2a GPU \u4e0a\u5206\u5e03\u5f0f\u90e8\u7f72\u6df1\u5ea6 RNN \u7f51\u7edc"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#dropout","text":"\u5bf9\u4e8e\u6df1\u5c42\u6df1\u5ea6 RNN\uff0c\u5728\u8bad\u7ec3\u96c6\u4e0a\u5f88\u5bb9\u6613\u8fc7\u62df\u5408\u3002Dropout \u662f\u9632\u6b62\u8fc7\u62df\u5408\u7684\u5e38\u7528\u6280\u672f\u3002 \u53ef\u4ee5\u7b80\u5355\u7684\u5728 RNN \u5c42\u4e4b\u524d\u6216\u4e4b\u540e\u6dfb\u52a0\u4e00\u5c42 Dropout \u5c42\uff0c\u4f46\u5982\u679c\u9700\u8981\u5728 RNN \u5c42\u4e4b\u95f4\u5e94\u7528 Dropout \u6280\u672f\u5c31\u9700\u8981 DropoutWrapper \u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6bcf\u4e00\u5c42\u7684 RNN \u7684\u8f93\u5165\u524d\u90fd\u5e94\u7528\u4e86 Dropout\uff0cDropout \u7684\u6982\u7387\u4e3a 50%\u3002 keep_prob = 0.5 cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) cell_drop = tf.contrib.rnn.DropoutWrapper(cell, input_keep_prob=keep_prob) multi_layer_cell = tf.contrib.rnn.MultiRNNCell([cell_drop]*n_layers) rnn_outputs, states = tf.nn.dynamic_rnn(multi_layer_cell, X, dtype=tf.float32) \u540c\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e output_keep_prob \u6765\u5728\u8f93\u51fa\u5e94\u7528 Dropout \u6280\u672f\u3002 \u7136\u800c\u5728\u4ee5\u4e0a\u4ee3\u7801\u4e2d\u5b58\u5728\u7684\u4e3b\u8981\u95ee\u9898\u662f\uff0cDropout \u4e0d\u7ba1\u662f\u5728\u8bad\u7ec3\u8fd8\u662f\u6d4b\u8bd5\u65f6\u90fd\u8d77\u4f5c\u7528\u4e86\uff0c\u800c\u6211\u4eec\u60f3\u8981\u7684\u4ec5\u4ec5\u662f\u5728\u8bad\u7ec3\u65f6\u5e94\u7528 Dropout\u3002 \u5f88\u4e0d\u5e78\u7684\u662f DropoutWrapper \u4e0d\u652f\u6301 is_training \u8fd9\u6837\u4e00\u4e2a\u8bbe\u7f6e\u9009\u9879\u3002\u56e0\u6b64\u5fc5\u987b\u81ea\u5df1\u5199 Dropout \u5305\u88c5\u7c7b\uff0c\u6216\u8005\u521b\u5efa\u4e24\u4e2a\u8ba1\u7b97\u56fe\uff0c\u4e00\u4e2a\u7528\u6765\u8bad\u7ec3\uff0c\u4e00\u4e2a\u7528\u6765\u6d4b\u8bd5\u3002\u540e\u5219\u53ef\u901a\u8fc7\u5982\u4e0b\u9762\u4ee3\u7801\u8fd9\u6837\u5b9e\u73b0\u3002 import sys is_training = (sys.argv[-1] == \"train\") X = tf.placeholder(tf.float32, [None, n_steps, n_inputs]) y = tf.placeholder(tf.float32, [None, n_steps, n_outputs]) cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons) if is_training: cell = tf.contrib.rnn.DropoutWrapper(cell, input_keep_prob=keep_prob) multi_layer_cell = tf.contrib.rnn.MultiRNNCell([cell]*n_layers) rnn_outpus, status = tf.nn.dynamic_rnn(multi_layer_cell, X, dtype=tf.float32) [...] # bulid the rest of the graph init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: if is_training: init.run() for iteration in range(n_iterations): [...] # train the model save_path = saver.save(sess, \"/tmp/my_model.ckpt\") else: saver.restore(sess, \"/tmp/my_model.ckpt\") [...] # use the model \u901a\u8fc7\u4ee5\u4e0a\u7684\u65b9\u6cd5\u5c31\u80fd\u591f\u8bad\u7ec3\u5404\u79cd RNN \u7f51\u7edc\u4e86\u3002\u7136\u800c\u5bf9\u4e8e\u957f\u5e8f\u5217\u7684 RNN \u8bad\u7ec3\u8fd8\u8a00\u4e4b\u8fc7\u65e9\uff0c\u4e8b\u60c5\u4f1a\u53d8\u5f97\u6709\u4e00\u4e9b\u56f0\u96be\u3002 \u90a3\u4e48\u6211\u4eec\u6765\u63a2\u8ba8\u4e00\u4e0b\u7a76\u7adf\u8fd9\u662f\u4e3a\u4ec0\u4e48\u548c\u600e\u4e48\u5e94\u5bf9\u5462\uff1f","title":"Dropout \u7684\u5e94\u7528"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_11","text":"\u5728\u8bad\u7ec3\u957f\u5e8f\u5217\u7684 RNN \u6a21\u578b\u65f6\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u628a RNN \u5728\u65f6\u95f4\u7ef4\u5ea6\u4e0a\u5c55\u5f00\u6210\u5f88\u6df1\u7684\u795e\u7ecf\u7f51\u7edc\u3002\u6b63\u5982\u4efb\u4f55\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e00\u6837\uff0c\u5176\u9762\u4e34\u7740\u68af\u5ea6\u6d88\u5931/\u7206\u70b8\u7684\u95ee\u9898\uff0c\u4f7f\u8bad\u7ec3\u65e0\u6cd5\u7ec8\u6b62\u6216\u6536\u655b\u3002 \u5f88\u591a\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u7f13\u89e3\u8fd9\u79cd\u95ee\u9898\u7684\u6280\u5de7\u90fd\u53ef\u4ee5\u5e94\u7528\u5728\u6df1\u5ea6\u5c55\u5f00\u7684 RNN \u7f51\u7edc\uff1a\u597d\u7684\u53c2\u6570\u521d\u59cb\u5316\u65b9\u5f0f\uff0c\u975e\u9971\u548c\u7684\u6fc0\u6d3b\u51fd\u6570\uff08\u5982 ReLU\uff09\uff0c\u6279\u91cf\u89c4\u8303\u5316\uff08Batch Normalization\uff09\uff0c \u68af\u5ea6\u622a\u65ad\uff08Gradient Clipping\uff09\uff0c\u66f4\u5feb\u7684\u4f18\u5316\u5668\u3002 \u5373\u4fbf\u5982\u6b64\uff0c RNN \u5728\u5904\u7406\u9002\u4e2d\u7684\u957f\u5e8f\u5217\uff08\u5982 100 \u8f93\u5165\u5e8f\u5217\uff09\u4e5f\u5728\u8bad\u7ec3\u65f6\u8868\u73b0\u7684\u5f88\u6162\u3002 \u6700\u7b80\u5355\u548c\u5e38\u89c1\u7684\u65b9\u6cd5\u89e3\u51b3\u8bad\u7ec3\u65f6\u957f\u95ee\u9898\u5c31\u662f\u5728\u8bad\u7ec3\u9636\u6bb5\u4ec5\u4ec5\u5c55\u5f00\u9650\u5b9a\u65f6\u95f4\u6b65\u957f\u7684 RNN \u7f51\u7edc\uff0c\u4e00\u79cd\u79f0\u4e3a\u622a\u65ad\u65f6\u95f4\u53cd\u5411\u4f20\u64ad\u7684\u7b97\u6cd5\u3002 \u5728 TensorFlow \u4e2d\u901a\u8fc7\u622a\u65ad\u8f93\u5165\u5e8f\u5217\u6765\u7b80\u5355\u5b9e\u73b0\u8fd9\u79cd\u529f\u80fd\u3002\u4f8b\u5982\u5728\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u95ee\u9898\u4e0a\u53ef\u4ee5\u5728\u8bad\u7ec3\u65f6\u51cf\u5c0f n_steps \u6765\u5b9e\u73b0\u622a\u65ad\u3002\u7406\u6240\u5f53\u7136\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u9650\u5236\u6a21\u578b\u5728\u957f\u671f\u6a21\u5f0f\u7684\u5b66\u4e60\u80fd\u529b\u3002\u4e00\u79cd\u53d8\u901a\u65b9\u6848\u65f6\u786e\u4fdd\u7f29\u77ed\u7684\u5e8f\u5217\u4e2d\u5305\u542b\u65e7\u6570\u636e\u548c\u65b0\u6570\u636e\uff0c\u4ece\u800c\u4f7f\u6a21\u578b\u83b7\u5f97\u4e24\u8005\u4fe1\u606f\uff08\u5982\u5e8f\u5217\u540c\u65f6\u5305\u542b\u6700\u8fd1\u4e94\u4e2a\u6708\u7684\u6570\u636e\uff0c\u6700\u8fd1\u4e94\u5468\u7684\u548c\u6700\u8fd1\u4e94\u5929\u7684\u6570\u636e\uff09\u3002 \u95ee\u9898\u65f6\u5982\u4f55\u786e\u4fdd\u4ece\u53bb\u5e74\u7684\u7ec6\u5206\u7c7b\u4e2d\u83b7\u53d6\u7684\u6570\u636e\u6709\u6548\u6027\u5462\uff1f\u8fd9\u671f\u95f4\u77ed\u6682\u4f46\u91cd\u8981\u7684\u4e8b\u4ef6\u5bf9\u540e\u4e16\u7684\u5f71\u54cd\uff0c\u751a\u81f3\u65f6\u6570\u5e74\u540e\u8fd9\u79cd\u5f71\u54cd\u662f\u5426\u4e00\u5b9a\u8981\u8003\u8651\u5728\u5185\u5462\uff08\u5982\u9009\u4e3e\u7ed3\u679c\uff09\uff1f\u8fd9\u79cd\u65b9\u6848\u6709\u5176\u5148\u5929\u7684\u4e0d\u8db3\u4e4b\u5904\u3002 \u5728\u957f\u7684\u65f6\u95f4\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u8981\u9762\u4e34\u7684\u95ee\u9898\u65f6\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684\u8bb0\u5fc6\u4f1a\u5728\u957f\u65f6\u95f4\u8fd0\u884c\u7684 RNN \u7f51\u7edc\u4e2d\u9010\u6e10\u6de1\u53bb\u3002\u786e\u5b9e\uff0c\u901a\u8fc7\u53d8\u6362\u7684\u65b9\u5f0f\uff0c\u6570\u636e\u7a7f\u6d41\u5728 RNN \u7f51\u7edc\u4e4b\u4e2d\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6b65\u957f\u540e\u90fd\u6709\u4e00\u4e9b\u4fe1\u606f\u88ab\u629b\u5f03\u6389\u4e86\u3002\u90a3\u4e48\u5728\u4e00\u5b9a\u65f6\u95f4\u540e\uff0c\u7b2c\u4e00\u4e2a\u8f93\u5165\u5b9e\u9645\u4e0a\u4f1a\u5728 RNN \u7684\u72b6\u6001\u4e2d\u6d88\u5931\u4e8e\u65e0\u5f62\u3002 \u6bd4\u5982\u8bf4\uff0c\u4f60\u60f3\u8981\u5206\u6790\u957f\u7bc7\u5e45\u7684\u5f71\u8bc4\u7684\u60c5\u611f\u7c7b\u522b\uff0c\u5f71\u8bc4\u4ee5 \"I love this movie\" \u5f00\u7bc7\uff0c\u5e76\u8f85\u4ee5\u5404\u79cd\u6539\u5584\u5f71\u7247\u7684\u4e00\u4e9b\u5efa\u8bae\u3002\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5982\u679c RNN \u7f51\u7edc\u9010\u6e10\u5fd8\u8bb0\u4e86\u5f00\u5934\u7684\u51e0\u4e2a\u8bcd\uff0cRNN \u7f51\u7edc\u7684\u5224\u65ad\u5b8c\u5168\u6709\u53ef\u80fd\u4f1a\u5bf9\u5f71\u8bc4\u65ad\u7ae0\u53d6\u4e49\u3002 \u4e3a\u4e86\u89e3\u51b3\u5176\u4e2d\u7684\u95ee\u9898\uff0c\u5404\u79cd\u80fd\u591f\u643a\u5e26\u957f\u65f6\u8bb0\u5fc6\u7684\u795e\u7ecf\u5355\u5143\u7684\u53d8\u4f53\u88ab\u63d0\u51fa\u3002\u8fd9\u4e9b\u53d8\u4f53\u662f\u6709\u6548\u7684\uff0c\u5f80\u5f80\u57fa\u672c\u5f62\u5f0f\u7684\u795e\u7ecf\u5355\u5143\u5c31\u4e0d\u600e\u4e48\u88ab\u4f7f\u7528\u4e86\u3002 \u9996\u5148\u4e86\u89e3\u4e00\u4e0b\u6700\u6d41\u884c\u7684\u4e00\u79cd\u957f\u65f6\u8bb0\u5fc6\u795e\u7ecf\u5355\u5143\uff1a\u957f\u77ed\u65f6\u8bb0\u5fc6\u795e\u7ecf\u5355\u5143 LSTM\u3002","title":"\u957f\u65f6\u8bad\u7ec3\u7684\u56f0\u96be"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#lstm","text":"\u957f\u77ed\u65f6\u8bb0\u5fc6\u5355\u5143\u5728 1997 \u5e74 \u7531 S.H. \u548c J.S. \u9996\u6b21\u63d0\u51fa [3]\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5e74\u5185\u7ecf\u8fc7 A.G\uff0cH.S [4]\uff0c W.Z [5] \u7b49\u6570\u4f4d\u7814\u7a76\u4eba\u5458\u7684\u6539\u8fdb\u9010\u6e10\u5f62\u6210\u3002\u5982\u679c\u628a LSTM \u5355\u5143\u770b\u4f5c\u4e00\u4e2a\u9ed1\u76d2\uff0c\u4ece\u5916\u56f4\u770b\u5b83\u548c\u57fa\u672c\u5f62\u5f0f\u7684\u8bb0\u5fc6\u5355\u5143\u5f88\u76f8\u4f3c\uff0c\u4f46 LSTM \u5355\u5143\u4f1a\u6bd4\u57fa\u672c\u5355\u5143\u6027\u80fd\u66f4\u597d\uff0c\u6536\u655b\u66f4\u5feb\uff0c\u80fd\u591f\u611f\u77e5\u6570\u636e\u7684\u957f\u65f6\u4f9d\u8d56\u3002TensorFlow \u4e2d\u901a\u8fc7 BasicLSTMCell \u5b9e\u73b0 LSTM \u5355\u5143\u3002 [3]: \"Long Short-Term Memory,\" S.Hochreiter and J.Schmidhuber(1997) [4]: \"Long Short-Term Memory Recurrent Neural Network Architectures for Large Scale Acoustic Modeling,\" H.Sak et al.(2014) [5]: \"Recurrent Neural Network Regularization,\" W.Zaremba et al.(2015) lstm_cell = tf.contrib.rnn.BasicLSTMCell(num_units=n_neurons) LSTM \u5355\u5143\u7684\u5de5\u4f5c\u673a\u5236\u662f\u4ec0\u4e48\u5462\uff1f\u5728\u56fe 14-13 \u4e2d\u5c55\u793a\u4e86\u57fa\u672c LSTM \u5355\u5143\u7684\u7ed3\u6784\u3002 \u4e0d\u89c2\u5bdf LSTM \u5355\u5143\u5185\u90e8\uff0c\u9664\u4e86\u4e00\u4e9b\u4e0d\u540c\u5916\u8ddf\u5e38\u89c4 RNN \u5355\u5143\u6781\u5176\u76f8\u4f3c\u3002\u8fd9\u4e9b\u4e0d\u540c\u5305\u62ec LSTM \u5355\u5143\u72b6\u6001\u5206\u4e3a\u4e24\u4e2a\u5411\u91cf\uff1a \u548c \uff08 c \u4ee3\u8868 cell\uff09\u3002\u53ef\u4ee5\u7b80\u5355\u8ba4\u4e3a \u662f\u77ed\u671f\u8bb0\u5fc6\u72b6\u6001\uff0c \u662f\u957f\u671f\u8bb0\u5fc6\u72b6\u6001\u3002 \u597d\uff0c\u6211\u4eec\u6765\u6253\u5f00\u76d2\u5b50\u3002LSTM \u5355\u5143\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5176\u80fd\u591f\u5b66\u4e60\u4ece\u957f\u671f\u72b6\u6001\u4e2d\u5b58\u50a8\u4ec0\u4e48\uff0c\u5fd8\u8bb0\u4ec0\u4e48\uff0c\u8bfb\u53d6\u4ec0\u4e48\u3002\u957f\u671f\u72b6\u6001 \u4ece\u5de6\u5411\u53f3\u5728\u7f51\u7edc\u4e2d\u4f20\u64ad\uff0c\u4f9d\u6b21\u7ecf\u8fc7\u9057\u5fd8\u95e8\uff08forget gate\uff09\u65f6\u4e22\u5f03\u4e00\u4e9b\u8bb0\u5fc6\uff0c\u4e4b\u540e\u52a0\u6cd5\u64cd\u4f5c\u589e\u52a0\u4e00\u4e9b\u8bb0\u5fc6\uff08\u4ece\u8f93\u5165\u95e8\u4e2d\u9009\u62e9\u4e00\u4e9b\u8bb0\u5fc6\uff09\u3002\u8f93\u51fa \u4e0d\u7ecf\u4efb\u4f55\u8f6c\u6362\u76f4\u63a5\u8f93\u51fa\u3002\u6bcf\u4e2a\u5355\u4f4d\u65f6\u95f4\u6b65\u957f\u540e\uff0c\u90fd\u6709\u4e00\u4e9b\u8bb0\u5fc6\u88ab\u629b\u5f03\uff0c\u65b0\u7684\u8bb0\u5fc6\u88ab\u6dfb\u52a0\u8fdb\u6765\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u957f\u65f6\u72b6\u6001\u7ecf\u8fc7 tanh \u6fc0\u6d3b\u51fd\u6570\u901a\u8fc7\u8f93\u51fa\u95e8\u5f97\u5230\u77ed\u65f6\u8bb0\u5fc6 \uff0c\u540c\u65f6\u5b83\u4e5f\u662f\u8fd9\u4e00\u65f6\u523b\u7684\u5355\u5143\u8f93\u51fa\u7ed3\u679c \u3002\u63a5\u4e0b\u6765\u8ba8\u8bba\u4e00\u4e0b\u65b0\u7684\u8bb0\u5fc6\u65f6\u5982\u4f55\u4ea7\u751f\u7684\uff0c\u95e8\u7684\u529f\u80fd\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 \u9996\u5148\uff0c\u5f53\u524d\u7684\u8f93\u5165\u5411\u91cf \u548c\u524d\u4e00\u65f6\u523b\u7684\u77ed\u65f6\u72b6\u6001 \u4f5c\u4e3a\u8f93\u5165\u4f20\u7ed9\u56db\u4e2a\u5168\u8fde\u63a5\u5c42\uff0c\u8fd9\u56db\u4e2a\u5168\u8fde\u63a5\u5c42\u6709\u4e0d\u540c\u7684\u76ee\u7684\uff1a \u5176\u4e2d\u4e3b\u8981\u7684\u5168\u8fde\u63a5\u5c42\u8f93\u51fa \uff0c\u5b83\u7684\u5e38\u89c4\u4efb\u52a1\u5c31\u662f\u89e3\u6790\u5f53\u524d\u7684\u8f93\u5165 \u548c\u524d\u4e00\u65f6\u523b\u7684\u77ed\u65f6\u72b6\u6001 \u3002\u5728\u57fa\u672c\u5f62\u5f0f\u7684 RNN \u5355\u5143\u4e2d\uff0c\u5c31\u4e0e\u8fd9\u79cd\u5f62\u5f0f\u4e00\u6837\uff0c\u76f4\u63a5\u8f93\u51fa\u4e86 \u548c \u3002\u4e0e\u4e4b\u4e0d\u540c\u7684\u662f LSTM \u5355\u5143\u4f1a\u5c06\u4e00\u90e8\u5206 \u5b58\u50a8\u5728\u957f\u65f6\u72b6\u6001\u4e2d\u3002 \u5176\u5b83\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\u88ab\u79f0\u4e3a\u95e8\u63a7\u5236\u5668\uff08gate controller\uff09\u3002\u5176\u91c7\u7528 Logistic \u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u8f93\u51fa\u8303\u56f4\u5728 0 \u5230 1 \u4e4b\u95f4\u3002\u6b63\u5982\u5728\u7ed3\u6784\u56fe\u4e2d\u6240\u793a\uff0c\u8fd9\u4e09\u4e2a\u5c42\u7684\u8f93\u51fa\u63d0\u4f9b\u7ed9\u4e86\u9010\u5143\u7d20\u4e58\u6cd5\u64cd\u4f5c\uff0c\u5f53\u8f93\u5165\u4e3a 0 \u65f6\u95e8\u5173\u95ed\uff0c\u8f93\u51fa\u4e3a 1 \u65f6\u95e8\u6253\u5f00\u3002\u5206\u522b\u4e3a\uff1a \u9057\u5fd8\u95e8\uff08forget gat\uff09\u7531 \u63a7\u5236\uff0c\u6765\u51b3\u5b9a\u54ea\u4e9b\u957f\u671f\u8bb0\u5fc6\u9700\u8981\u88ab\u64e6\u9664\uff1b \u8f93\u5165\u95e8\uff08input gate\uff09 \u7531 \u63a7\u5236\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5904\u7406\u54ea\u90e8\u5206 \u5e94\u8be5\u88ab\u6dfb\u52a0\u5230\u957f\u65f6\u72b6\u6001\u4e2d\uff0c\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u88ab\u79f0\u4e3a \u90e8\u5206\u5b58\u50a8 \u3002 \u8f93\u51fa\u95e8\uff08output gate\uff09\u7531 \u63a7\u5236\uff0c\u5728\u8fd9\u4e00\u65f6\u523b\u7684\u8f93\u51fa \u548c \u5c31\u662f\u7531\u8f93\u51fa\u95e8\u63a7\u5236\u7684\uff0c\u4ece\u957f\u65f6\u72b6\u6001\u4e2d\u8bfb\u53d6\u7684\u8bb0\u5fc6\u3002 \u7b80\u8981\u6765\u8bf4\uff0cLSTM \u5355\u5143\u80fd\u591f\u5b66\u4e60\u5230\u8bc6\u522b\u91cd\u8981\u8f93\u5165\uff08\u8f93\u5165\u95e8\u4f5c\u7528\uff09\uff0c\u5b58\u50a8\u8fdb\u957f\u65f6\u72b6\u6001\uff0c\u5e76\u4fdd\u5b58\u5fc5\u8981\u7684\u65f6\u95f4\uff08\u9057\u5fd8\u95e8\u529f\u80fd\uff09\uff0c\u5e76\u5b66\u4f1a\u63d0\u53d6\u5f53\u524d\u8f93\u51fa\u6240\u9700\u8981\u7684\u8bb0\u5fc6\u3002 \u8fd9\u4e5f\u89e3\u91ca\u4e86 LSTM \u5355\u5143\u80fd\u591f\u5728\u63d0\u53d6\u957f\u65f6\u5e8f\u5217\uff0c\u957f\u6587\u672c\uff0c\u5f55\u97f3\u7b49\u6570\u636e\u4e2d\u7684\u957f\u671f\u6a21\u5f0f\u7684\u60ca\u4eba\u6210\u529f\u7684\u539f\u56e0\u3002 \u516c\u5f0f 14-3 \u603b\u7ed3\u4e86\u5982\u4f55\u8ba1\u7b97\u5355\u5143\u7684\u957f\u65f6\u72b6\u6001\uff0c\u77ed\u65f6\u72b6\u6001\uff0c\u548c\u5355\u4e2a\u8f93\u5165\u60c5\u5f62\u65f6\u6bcf\u5355\u4f4d\u6b65\u957f\u7684\u8f93\u51fa\uff08\u5c0f\u6279\u91cf\u7684\u65b9\u7a0b\u5f62\u5f0f\u4e0e\u5355\u8f93\u5165\u7684\u5f62\u5f0f\u76f8\u4f3c\uff09\u3002 \uff0c \uff0c \uff0c \u662f\u56db\u4e2a\u5168\u8fde\u63a5\u5c42\u5173\u4e8e\u8f93\u5165\u5411\u91cf \u7684\u6743\u91cd\u3002 \uff0c \uff0c \uff0c \u662f\u56db\u4e2a\u5168\u8fde\u63a5\u5c42\u5173\u4e8e\u4e0a\u4e00\u65f6\u523b\u7684\u77ed\u65f6\u72b6\u6001 \u7684\u6743\u91cd\u3002 \uff0c \uff0c \uff0c \u662f\u5168\u8fde\u63a5\u5c42\u7684\u56db\u4e2a\u504f\u7f6e\u9879\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f TensorFlow \u5c06\u5176\u521d\u59cb\u5316\u4e3a\u5168 1 \u5411\u91cf\uff0c\u800c\u975e\u5168 0\uff0c\u4e3a\u4e86\u963b\u6b62\u7f51\u7edc\u521d\u59cb\u8bad\u7ec3\u72b6\u6001\u4e0b\uff0c\u5404\u4e2a\u95e8\u5173\u95ed\u4ece\u800c\u5fd8\u8bb0\u6240\u6709\u8bb0\u5fc6\u3002","title":"LSTM \u5355\u5143"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_12","text":"\u57fa\u672c\u5f62\u5f0f\u7684 LSTM \u5355\u5143\u4e2d\uff0c\u95e8\u7684\u63a7\u5236\u4ec5\u6709\u5f53\u524d\u7684\u8f93\u5165 \u548c\u524d\u4e00\u65f6\u523b\u7684\u77ed\u65f6\u72b6\u6001 \u3002\u4e0d\u59a8\u8ba9\u5404\u4e2a\u63a7\u5236\u95e8\u7aa5\u89c6\u4e00\u4e0b\u957f\u65f6\u72b6\u6001\uff0c\u83b7\u53d6\u4e00\u4e9b\u4e0a\u4e0b\u6587\u4fe1\u606f\u4e0d\u5931\u4e3a\u4e00\u79cd\u5c1d\u8bd5\u3002 \u8be5\u60f3\u6cd5 \u7531 F.G.he J.S. \u5728 2000 \u5e74\u63d0\u51fa\u3002\u4ed6\u4eec\u63d0\u51fa\u7684 LSTM \u7684\u53d8\u4f53\u62e5\u6709\u53eb\u505a\u7aa5\u5b54\u8fde\u63a5\u7684\u989d\u5916\u8fde\u63a5\uff1a\u628a\u524d\u4e00\u65f6\u523b\u7684\u957f\u65f6\u72b6\u6001 \u52a0\u5165\u9057\u5fd8\u95e8\u548c\u8f93\u5165\u95e8\u63a7\u5236\u7684\u8f93\u5165\uff0c\u5f53\u524d\u65f6\u523b\u7684\u957f\u65f6\u72b6\u6001\u52a0\u5165\u8f93\u51fa\u95e8\u7684\u63a7\u5236\u8f93\u5165\u3002 TensorFLow \u4e2d\u7531 LSTMCell \u5b9e\u73b0\u4ee5\u4e0a\u53d8\u4f53 LSTM\uff0c\u5e76\u8bbe\u7f6e use_peepholes=True \u3002 lstm_cell = tf.contrib.rnn.LSTMCell(num_units=n_neurons, use_peepholes=True) \u5728\u4f17\u591a LSTM \u53d8\u4f53\u4e2d\uff0c\u4e00\u4e2a\u7279\u522b\u6d41\u884c\u7684\u53d8\u4f53\u5c31\u662f GRU \u5355\u5143\u3002","title":"\u7aa5\u5b54\u8fde\u63a5"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#gru","text":"\u95e8\u63a7\u5faa\u73af\u5355\u5143\uff08\u56fe 14-14\uff09\u5728 2014 \u5e74\u7684 K.Cho et al. \u7684\u8bba\u6587 \u4e2d\u63d0\u51fa\uff0c\u5e76\u4e14\u6b64\u6587\u4e5f\u5f15\u5165\u4e86\u524d\u6587\u6240\u8ff0\u7684\u7f16\u89e3\u7801\u7f51\u7edc\u3002 \u95e8\u63a7\u5faa\u73af\u5355\u5143\u662f LSTM \u5355\u5143\u7684\u7b80\u5316\u7248\u672c\uff0c\u80fd\u5b9e\u73b0\u540c\u6837\u7684\u6027\u80fd\uff0c\u8fd9\u4e5f\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u5b83\u80fd\u8d8a\u6765\u8d8a\u6d41\u884c\u3002\u7b80\u5316\u4e3b\u8981\u5728\u4e00\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u957f\u65f6\u72b6\u6001\u548c\u77ed\u65f6\u72b6\u6001\u5408\u5e76\u4e3a\u4e00\u4e2a\u5411\u91cf \u3002 \u7528\u540c\u4e00\u4e2a\u95e8\u63a7\u5236\u9057\u5fd8\u95e8\u548c\u8f93\u5165\u95e8\u3002\u5982\u679c\u95e8\u63a7\u5236\u8f93\u5165 1\uff0c\u8f93\u5165\u95e8\u6253\u5f00\uff0c\u9057\u5fd8\u95e8\u5173\u95ed\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5f53\u6709\u65b0\u7684\u8bb0\u5fc6\u9700\u8981\u5b58\u50a8\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u5b9e\u73b0\u5728\u5176\u5bf9\u5e94\u4f4d\u7f6e\u4e8b\u5148\u64e6\u9664\u8be5\u5904\u8bb0\u5fc6\u3002\u8fd9\u4e5f\u6784\u6210\u4e86 LSTM \u672c\u8eab\u7684\u5e38\u89c1\u53d8\u4f53\u3002 GRU \u5355\u5143\u53d6\u6d88\u4e86\u8f93\u51fa\u95e8\uff0c\u5355\u5143\u7684\u5168\u90e8\u72b6\u6001\u5c31\u662f\u8be5\u65f6\u523b\u7684\u5355\u5143\u8f93\u51fa\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u589e\u52a0\u4e86\u4e00\u4e2a\u63a7\u5236\u95e8 \u6765\u63a7\u5236\u54ea\u90e8\u5206\u524d\u4e00\u65f6\u95f4\u6b65\u7684\u72b6\u6001\u5728\u8be5\u65f6\u523b\u7684\u5355\u5143\u5185\u5448\u73b0\u3002 \u516c\u5f0f 14-4 \u603b\u7ed3\u4e86\u5982\u4f55\u8ba1\u7b97\u5355\u4e2a\u8f93\u5165\u60c5\u5f62\u65f6\u6bcf\u5355\u4f4d\u6b65\u7684\u5355\u5143\u7684\u72b6\u6001\u3002 \u5728 TensoFlow \u4e2d\u521b\u5efa GRU \u5355\u5143\u5f88\u7b80\u5355\uff1a gru_cell = tf.contrib.rnn.GRUCell(n_units=n_neurons) LSTM \u6216 GRU \u5355\u5143\u662f\u8fd1\u5e74\u6765 RNN \u6210\u529f\u80cc\u540e\u7684\u4e3b\u8981\u539f\u56e0\u4e4b\u4e00\uff0c\u7279\u522b\u662f\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09\u4e2d\u7684\u5e94\u7528\u3002","title":"GRU \u5355\u5143"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_13","text":"\u73b0\u5728\uff0c\u5927\u591a\u6570\u6700\u5148\u8fdb\u7684 NLP \u5e94\u7528\uff08\u5982\u673a\u5668\u7ffb\u8bd1\uff0c\u81ea\u52a8\u6458\u8981\uff0c\u89e3\u6790\uff0c\u60c5\u611f\u5206\u6790\u7b49\uff09\uff0c\u73b0\u5728\uff08\u81f3\u5c11\u4e00\u90e8\u5206\uff09\u90fd\u57fa\u4e8e RNN\u3002 \u5728\u6700\u540e\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5feb\u901f\u4e86\u89e3\u673a\u5668\u7ffb\u8bd1\u6a21\u578b\u7684\u6982\u51b5\u3002 TensorFlow \u7684\u5f88\u5389\u5bb3\u7684 Word2Vec \u548c Seq2Seq \u6559\u7a0b\u975e\u5e38\u597d\u5730\u4ecb\u7ecd\u4e86\u8fd9\u4e2a\u4e3b\u9898\uff0c\u6240\u4ee5\u4f60\u4e00\u5b9a\u8981\u9605\u8bfb\u4e00\u4e0b\u3002","title":"\u81ea\u7136\u8bed\u8a00\u5904\u7406"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_14","text":"\u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u8bcd\u7684\u8868\u793a\u5f62\u5f0f\u3002 \u4e00\u79cd\u9009\u62e9\u53ef\u4ee5\u662f\uff0c\u4f7f\u7528\u5355\u70ed\u5411\u91cf\u8868\u793a\u6bcf\u4e2a\u8bcd\u3002 \u5047\u8bbe\u4f60\u7684\u8bcd\u6c47\u8868\u5305\u542b 5 \u4e07\u4e2a\u5355\u8bcd\uff0c\u90a3\u4e48\u7b2c n \u4e2a\u5355\u8bcd\u5c06\u88ab\u8868\u793a\u4e3a 50,000 \u7ef4\u7684\u5411\u91cf\uff0c\u9664\u4e86\u7b2c n \u4e2a\u4f4d\u7f6e\u4e3a 1 \u4e4b\u5916\uff0c\u5176\u5b83\u5168\u90e8\u4e3a 0\u3002 \u7136\u800c\uff0c\u5bf9\u4e8e\u5982\u6b64\u5e9e\u5927\u7684\u8bcd\u6c47\u8868\uff0c\u8fd9\u79cd\u7a00\u758f\u8868\u793a\u6839\u672c\u5c31\u4e0d\u4f1a\u6709\u6548\u3002 \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e0c\u671b\u76f8\u4f3c\u7684\u5355\u8bcd\u5177\u6709\u76f8\u4f3c\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u8fd9\u4f7f\u5f97\u6a21\u578b\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u6240\u5b66\u7684\u5173\u4e8e\u5355\u8bcd\u7684\u53ea\u662f\uff0c\u63a8\u5e7f\u5230\u6240\u6709\u76f8\u4f3c\u5355\u8bcd\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6a21\u578b\u88ab\u544a\u77e5 \"I drink milk\" \u662f\u4e00\u4e2a\u6709\u6548\u7684\u53e5\u5b50\uff0c\u5e76\u4e14\u5982\u679c\u5b83\u77e5\u9053 \"milk\" \u63a5\u8fd1\u4e8e \"water\" \uff0c\u800c\u4e0d\u540c\u4e8e \"shoes\" \uff0c\u90a3\u4e48\u5b83\u4f1a\u77e5\u9053 \"I drink water\" \u4e5f\u8bb8\u662f\u4e00\u4e2a\u6709\u6548\u7684\u53e5\u5b50\uff0c\u800c \"I drink shoes\" \u53ef\u80fd\u4e0d\u662f\u3002 \u4f46\u4f60\u5982\u4f55\u63d0\u51fa\u8fd9\u6837\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u8868\u793a\u5462\uff1f \u6700\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u7528\u4e00\u4e2a\u76f8\u5f53\u5c0f\u4e14\u5bc6\u96c6\u7684\u5411\u91cf\uff08\u4f8b\u5982 150 \u7ef4\uff09\u8868\u793a\u8bcd\u6c47\u8868\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\uff0c\u79f0\u4e3a\u5d4c\u5165\uff0c\u5e76\u8ba9\u795e\u7ecf\u7f51\u7edc\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u6bcf\u4e2a\u5355\u8bcd\u5b66\u4e60\u4e00\u4e2a\u826f\u597d\u7684\u5d4c\u5165\u3002 \u5728\u8bad\u7ec3\u5f00\u59cb\u65f6\uff0c\u5d4c\u5165\u53ea\u662f\u968f\u673a\u9009\u62e9\u7684\uff0c\u4f46\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u53cd\u5411\u4f20\u64ad\u4f1a\u81ea\u52a8\u66f4\u65b0\u5d4c\u5165\uff0c\u6765\u5e2e\u52a9\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4efb\u52a1\u3002 \u901a\u5e38\u8fd9\u610f\u5473\u7740\uff0c\u76f8\u4f3c\u7684\u8bcd\u4f1a\u9010\u6e10\u5f7c\u6b64\u9760\u8fd1\uff0c\u751a\u81f3\u6700\u7ec8\u4ee5\u4e00\u79cd\u76f8\u5f53\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u7ec4\u7ec7\u8d77\u6765\u3002 \u4f8b\u5982\uff0c\u5d4c\u5165\u53ef\u80fd\u6700\u7ec8\u6cbf\u7740\u5404\u79cd\u8f74\u5206\u5e03\uff0c\u5b83\u4eec\u4ee3\u8868\u6027\u522b\uff0c\u5355\u6570/\u590d\u6570\uff0c\u5f62\u5bb9\u8bcd/\u540d\u8bcd\u3002 \u7ed3\u679c\u53ef\u80fd\u771f\u7684\u5f88\u795e\u5947\u3002 \u5728TensorFlow\u4e2d\uff0c\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf\u6765\u8868\u793a\u8bcd\u6c47\u8868\u4e2d\u6bcf\u4e2a\u8bcd\u7684\u5d4c\u5165\uff08\u968f\u673a\u521d\u59cb\u5316\uff09\uff1a vocabulary_size = 50000 embedding_size = 150 embeddings = tf.Variable( tf.random_uniform([vocabulary_size, embedding_size], -1.0, 1.0)) \u73b0\u5728\u5047\u8bbe\u4f60\u6253\u7b97\u5c06\u53e5\u5b50 \"I drink milk\" \u63d0\u4f9b\u7ed9\u4f60\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u4f60\u5e94\u8be5\u9996\u5148\u5bf9\u53e5\u5b50\u8fdb\u884c\u9884\u5904\u7406\u5e76\u5c06\u5176\u5206\u89e3\u6210\u5df2\u77e5\u5355\u8bcd\u7684\u5217\u8868\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5220\u9664\u4e0d\u5fc5\u8981\u7684\u5b57\u7b26\uff0c\u7528\u9884\u5b9a\u4e49\u7684\u6807\u8bb0\u8bcd\uff08\u5982 \"[UNK]\" \uff09\u66ff\u6362\u672a\u77e5\u5355\u8bcd\uff0c\u7528 \"[NUM]\" \u66ff\u6362\u6570\u5b57\u503c\uff0c\u7528 \"[URL]\" \u66ff\u6362 URL \u7b49\u3002 \u4e00\u65e6\u4f60\u6709\u4e86\u4e00\u4e2a\u5df2\u77e5\u5355\u8bcd\u5217\u8868\uff0c\u4f60\u53ef\u4ee5\u5728\u5b57\u5178\u4e2d\u67e5\u627e\u6bcf\u4e2a\u5355\u8bcd\u7684\u6574\u6570\u6807\u8bc6\u7b26\uff08\u4ece 0 \u5230 49999\uff09\uff0c\u4f8b\u5982 [72\uff0c3335\uff0c288] \u3002 \u6b64\u65f6\uff0c\u4f60\u5df2\u51c6\u5907\u597d\u4f7f\u7528\u5360\u4f4d\u7b26\u5c06\u8fd9\u4e9b\u5355\u8bcd\u6807\u8bc6\u7b26\u63d0\u4f9b\u7ed9 TensorFlow\uff0c\u5e76\u5e94\u7528 embedding_lookup() \u51fd\u6570\u6765\u83b7\u53d6\u76f8\u5e94\u7684\u5d4c\u5165\uff1a train_inputs = tf.placeholder(tf.int32, shape=[None]) # from ids... embed = tf.nn.embedding_lookup(embeddings, train_inputs) # ...to embeddings \u4e00\u65e6\u4f60\u7684\u6a21\u578b\u4e60\u5f97\u4e86\u826f\u597d\u7684\u8bcd\u5d4c\u5165\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5728\u4efb\u4f55 NLP \u5e94\u7528\u4e2d\u9ad8\u6548\u590d\u7528\uff1a\u6bd5\u7adf\uff0c \"milk\" \u4f9d\u7136\u63a5\u8fd1\u4e8e \"water\" \uff0c\u800c\u4e14\u4e0d\u7ba1\u4f60\u7684\u5e94\u7528\u662f\u4ec0\u4e48\uff0c\u5b83\u90fd\u4e0d\u540c\u4e8e \"shoes\" \u3002 \u5b9e\u9645\u4e0a\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4e0b\u8f7d\u9884\u8bad\u7ec3\u7684\u5355\u8bcd\u5d4c\u5165\uff0c\u800c\u4e0d\u662f\u8bad\u7ec3\u81ea\u5df1\u7684\u5355\u8bcd\u5d4c\u5165\u3002 \u5c31\u50cf\u590d\u7528\u9884\u8bad\u7ec3\u5c42\uff08\u53c2\u89c1\u7b2c 11 \u7ae0\uff09\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u51bb\u7ed3\u9884\u8bad\u7ec3\u5d4c\u5165\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 trainable=False \u521b\u5efa\u5d4c\u5165\u53d8\u91cf\uff09\uff0c\u6216\u8005\u8ba9\u53cd\u5411\u4f20\u64ad\u4e3a\u4f60\u7684\u5e94\u7528\u8c03\u6574\u5b83\u4eec\u3002 \u7b2c\u4e00\u79cd\u9009\u62e9\u5c06\u52a0\u901f\u8bad\u7ec3\uff0c\u4f46\u7b2c\u4e8c\u79cd\u9009\u62e9\u53ef\u80fd\u4f1a\u4ea7\u751f\u7a0d\u9ad8\u7684\u6027\u80fd\u3002 \u63d0\u793a \u5bf9\u4e8e\u8868\u793a\u53ef\u80fd\u62e5\u6709\u5927\u91cf\u4e0d\u540c\u503c\u7684\u7c7b\u522b\u5c5e\u6027\uff0c\u5d4c\u5165\u4e5f\u5f88\u6709\u7528\uff0c\u7279\u522b\u662f\u5f53\u503c\u4e4b\u95f4\u5b58\u5728\u590d\u6742\u7684\u76f8\u4f3c\u6027\u7684\u65f6\u5019\u3002 \u4f8b\u5982\uff0c\u8003\u8651\u804c\u4e1a\uff0c\u7231\u597d\uff0c\u83dc\u54c1\uff0c\u7269\u79cd\uff0c\u54c1\u724c\u7b49\u3002 \u4f60\u73b0\u5728\u62e5\u6709\u4e86\u5b9e\u73b0\u673a\u5668\u7ffb\u8bd1\u7cfb\u7edf\u6240\u9700\u7684\u51e0\u4e4e\u6240\u6709\u7684\u5de5\u5177\u3002 \u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u5b83\u5427\u3002","title":"\u5355\u8bcd\u5d4c\u5165"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_15","text":"\u8ba9\u6211\u4eec\u6765\u770b\u770b\u7b80\u5355\u7684\u673a\u5668\u7ffb\u8bd1\u6a21\u578b\uff0c\u5b83\u5c06\u82f1\u8bed\u53e5\u5b50\u7ffb\u8bd1\u6210\u6cd5\u8bed\uff08\u53c2\u89c1\u56fe 14-15\uff09\u3002 \u56fe 14-15\uff1a\u7b80\u5355\u7684\u673a\u5668\u7ffb\u8bd1\u6a21\u578b \u82f1\u8bed\u53e5\u5b50\u88ab\u9001\u8fdb\u7f16\u7801\u5668\uff0c\u89e3\u7801\u5668\u8f93\u51fa\u6cd5\u8bed\u7ffb\u8bd1\u3002 \u8bf7\u6ce8\u610f\uff0c\u6cd5\u8bed\u7ffb\u8bd1\u4e5f\u88ab\u7528\u4f5c\u89e3\u7801\u5668\u7684\u8f93\u5165\uff0c\u4f46\u540e\u9000\u4e86\u4e00\u6b65\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u89e3\u7801\u5668\u7684\u8f93\u5165\u662f\u5b83\u5e94\u8be5\u5728\u524d\u4e00\u6b65\u8f93\u51fa\u7684\u5b57\uff08\u4e0d\u7ba1\u5b83\u5b9e\u9645\u8f93\u51fa\u7684\u662f\u4ec0\u4e48\uff09\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5355\u8bcd\uff0c\u63d0\u4f9b\u4e86\u8868\u793a\u53e5\u5b50\u5f00\u59cb\u7684\u6807\u8bb0\uff08 \"<go>\" \uff09\u3002 \u89e3\u7801\u5668\u9884\u671f\u4ee5\u5e8f\u5217\u672b\u5c3e\u6807\u8bb0\uff08EOS\uff09\u7ed3\u675f\u53e5\u5b50\uff08 \"<eos>\" \uff09\u3002 \u8bf7\u6ce8\u610f\uff0c\u82f1\u8bed\u53e5\u5b50\u5728\u9001\u5165\u7f16\u7801\u5668\u4e4b\u524d\u4f1a\u53cd\u8f6c\u3002 \u4f8b\u5982\uff0c \"I drink milk\" \u4e0e \"milk drink I\" \u76f8\u53cd\u3002\u8fd9\u786e\u4fdd\u4e86\u82f1\u8bed\u53e5\u5b50\u7684\u5f00\u5934\u5c06\u4f1a\u6700\u540e\u9001\u5230\u7f16\u7801\u5668\uff0c\u8fd9\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u8fd9\u901a\u5e38\u662f\u89e3\u7801\u5668\u9700\u8981\u7ffb\u8bd1\u7684\u7b2c\u4e00\u4e2a\u4e1c\u897f\u3002 \u6bcf\u4e2a\u5355\u8bcd\u6700\u521d\u7531\u7b80\u5355\u6574\u6570\u6807\u8bc6\u7b26\u8868\u793a\uff08\u4f8b\u5982\uff0c\u5355\u8bcd \"milk\" \u4e3a 288\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u5d4c\u5165\u67e5\u627e\u8fd4\u56de\u8bcd\u7684\u5d4c\u5165\uff08\u5982\u524d\u6240\u8ff0\uff0c\u8fd9\u662f\u4e00\u4e2a\u5bc6\u96c6\u7684\uff0c\u76f8\u5f53\u4f4e\u7ef4\u7684\u5411\u91cf\uff09\u3002 \u8fd9\u4e9b\u8bcd\u7684\u5d4c\u5165\u662f\u5b9e\u9645\u9001\u5230\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u7684\u5185\u5bb9\u3002 \u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u89e3\u7801\u5668\u8f93\u51fa\u8f93\u51fa\u8bcd\u6c47\u8868\uff08\u5373\u6cd5\u8bed\uff09\u4e2d\u6bcf\u4e2a\u8bcd\u7684\u5f97\u5206\uff0c\u7136\u540e Softmax \u5c42\u5c06\u8fd9\u4e9b\u5f97\u5206\u8f6c\u6362\u4e3a\u6982\u7387\u3002 \u4f8b\u5982\uff0c\u5728\u7b2c\u4e00\u6b65\u4e2d\uff0c\u5355\u8bcd \"Je\" \u6709 20% \u7684\u6982\u7387\uff0c \"Tu\" \u6709 1% \u7684\u6982\u7387\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u6982\u7387\u6700\u9ad8\u7684\u8bcd\u4f1a\u8f93\u51fa\u3002 \u8fd9\u975e\u5e38\u7c7b\u4f3c\u4e8e\u5e38\u89c4\u5206\u7c7b\u4efb\u52a1\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u4f7f\u7528 softmax_cross_entropy_with_logits() \u51fd\u6570\u6765\u8bad\u7ec3\u6a21\u578b\u3002 \u8bf7\u6ce8\u610f\uff0c\u5728\u63a8\u65ad\u671f\u95f4\uff08\u8bad\u7ec3\u4e4b\u540e\uff09\uff0c\u4f60\u4e0d\u518d\u5c06\u76ee\u6807\u53e5\u5b50\u9001\u5165\u89e3\u7801\u5668\u3002 \u76f8\u53cd\uff0c\u53ea\u9700\u5411\u89e3\u7801\u5668\u63d0\u4f9b\u5b83\u5728\u4e0a\u4e00\u6b65\u8f93\u51fa\u7684\u5355\u8bcd\uff0c\u5982\u56fe 14-16 \u6240\u793a\uff08\u8fd9\u5c06\u9700\u8981\u5d4c\u5165\u67e5\u627e\uff0c\u5b83\u672a\u5728\u56fe\u4e2d\u663e\u793a\uff09\u3002 \u56fe 14-16\uff1a\u5728\u63a8\u65ad\u671f\u95f4\uff0c\u5c06\u4e4b\u524d\u7684\u8f93\u51fa\u5355\u8bcd\u63d0\u4f9b\u4e3a\u8f93\u5165 \u597d\u7684\uff0c\u73b0\u5728\u4f60\u6709\u4e86\u5927\u65b9\u5411\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4f60\u9605\u8bfb TensorFlow \u7684\u5e8f\u5217\u6559\u7a0b\uff0c\u5e76\u67e5\u770b rnn/translate/seq2seq_model.py \u4e2d\u7684\u4ee3\u7801\uff08\u5728 TensorFlow \u6a21\u578b\u4e2d\uff09\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u4e00\u4e9b\u91cd\u8981\u7684\u533a\u522b\uff1a \u9996\u5148\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5047\u5b9a\u6240\u6709\u8f93\u5165\u5e8f\u5217\uff08\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u7684\uff09\u5177\u6709\u6052\u5b9a\u7684\u957f\u5ea6\u3002\u4f46\u663e\u7136\u53e5\u5b50\u957f\u5ea6\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5904\u7406\u5b83 - \u4f8b\u5982\uff0c\u4f7f\u7528 static_rnn() \u6216 dynamic_rnn() \u51fd\u6570\u7684 sequence_length \u53c2\u6570\uff0c\u6765\u6307\u5b9a\u6bcf\u4e2a\u53e5\u5b50\u7684\u957f\u5ea6\uff08\u5982\u524d\u6240\u8ff0\uff09\u3002\u7136\u800c\uff0c\u6559\u7a0b\u4e2d\u4f7f\u7528\u4e86\u53e6\u4e00\u79cd\u65b9\u6cd5\uff08\u5927\u6982\u662f\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff09\uff1a\u53e5\u5b50\u5206\u5230\u957f\u5ea6\u76f8\u4f3c\u7684\u6876\u4e2d\uff08\u4f8b\u5982\uff0c\u53e5\u5b50\u7684\u5355\u8bcd 1 \u5230 6 \u5206\u5230\u4e00\u4e2a\u6876\uff0c\u5355\u8bcd 7 \u5230 12 \u5206\u5230\u53e6\u4e00\u4e2a\u6876\uff0c\u7b49\u7b49\uff09\uff0c\u5e76\u4e14\u4f7f\u7528\u7279\u6b8a\u7684\u586b\u5145\u6807\u8bb0\uff08\u4f8b\u5982 \"<pad>\" \uff09\u6765\u586b\u5145\u8f83\u77ed\u7684\u53e5\u5b50\u3002\u4f8b\u5982\uff0c \"I drink milk\" \u53d8\u6210 \"<pad> <pad> <pad> milk drink I\" \uff0c\u7ffb\u8bd1\u6210 \"Je bois du lait <eos> <pad>\" \u3002\u5f53\u7136\uff0c\u6211\u4eec\u5e0c\u671b\u5ffd\u7565\u4efb\u4f55 EOS \u6807\u8bb0\u4e4b\u540e\u7684\u8f93\u51fa\u3002\u4e3a\u6b64\uff0c\u672c\u6559\u7a0b\u7684\u5b9e\u73b0\u4f7f\u7528 target_weights \u5411\u91cf\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u76ee\u6807\u53e5\u5b50 \"Je bois du lait <eos> <pad>\" \uff0c\u6743\u91cd\u5c06\u8bbe\u7f6e\u4e3a [1.0,1.0,1.0,1.0,1.0,0.0] \uff08\u6ce8\u610f\u6743\u91cd 0.0 \u5bf9\u5e94\u76ee\u6807\u53e5\u5b50\u4e2d\u7684\u586b\u5145\u6807\u8bb0\uff09\u3002\u7b80\u5355\u5730\u5c06\u635f\u5931\u4e58\u4ee5\u76ee\u6807\u6743\u91cd\uff0c\u5c06\u6d88\u9664\u5bf9\u5e94 EOS \u6807\u8bb0\u4e4b\u540e\u7684\u5355\u8bcd\u7684\u635f\u5931\u3002 \u5176\u6b21\uff0c\u5f53\u8f93\u51fa\u8bcd\u6c47\u8868\u5f88\u5927\u65f6\uff08\u5c31\u662f\u8fd9\u91cc\u7684\u60c5\u51b5\uff09\uff0c\u8f93\u51fa\u6bcf\u4e2a\u53ef\u80fd\u7684\u5355\u8bcd\u7684\u6982\u7387\u5c06\u4f1a\u975e\u5e38\u6162\u3002 \u5982\u679c\u76ee\u6807\u8bcd\u6c47\u8868\u5305\u542b 50,000 \u4e2a\u6cd5\u8bed\u5355\u8bcd\uff0c\u5219\u89e3\u7801\u5668\u5c06\u8f93\u51fa 50,000 \u7ef4\u5411\u91cf\uff0c\u7136\u540e\u5728\u8fd9\u6837\u7684\u5927\u5411\u91cf\u4e0a\u8ba1\u7b97 softmax \u51fd\u6570\uff0c\u8ba1\u7b97\u91cf\u5c06\u975e\u5e38\u5927\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u8ba9\u89e3\u7801\u5668\u8f93\u51fa\u66f4\u5c0f\u7684\u5411\u91cf\uff0c\u4f8b\u5982 1,000 \u7ef4\u5411\u91cf\uff0c\u7136\u540e\u4f7f\u7528\u91c7\u6837\u6280\u672f\u6765\u4f30\u8ba1\u635f\u5931\uff0c\u800c\u4e0d\u5fc5\u5bf9\u76ee\u6807\u8bcd\u6c47\u8868\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u8ba1\u7b97\u5b83\u3002 \u8fd9\u79cd\u91c7\u6837 Softmax \u6280\u672f\u662f\u7531 S\u00e9bastienJean \u7b49\u4eba\u5728 2015 \u5e74\u63d0\u51fa\u7684\u3002\u5728 TensorFlow \u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 sampled_softmax_loss() \u51fd\u6570\u3002 \u7b2c\u4e09\uff0c\u6559\u7a0b\u7684\u5b9e\u73b0\u4f7f\u7528\u4e86\u4e00\u79cd\u6ce8\u610f\u529b\u673a\u5236\uff0c\u8ba9\u89e3\u7801\u5668\u80fd\u591f\u7aa5\u89c6\u8f93\u5165\u5e8f\u5217\u3002 \u6ce8\u610f\u529b\u589e\u5f3a\u7684 RNN \u4e0d\u5728\u672c\u4e66\u7684\u8ba8\u8bba\u8303\u56f4\u4e4b\u5185\uff0c\u4f46\u5982\u679c\u4f60\u6709\u5174\u8da3\uff0c\u53ef\u4ee5\u5173\u6ce8\u673a\u5668\u7ffb\u8bd1\uff0c\u673a\u5668\u9605\u8bfb\u548c\u56fe\u50cf\u8bf4\u660e\u7684\u76f8\u5173\u8bba\u6587\u3002 \u6700\u540e\uff0c\u672c\u6559\u7a0b\u7684\u5b9e\u73b0\u4f7f\u7528\u4e86 tf.nn.legacy_seq2seq \u6a21\u5757\uff0c\u8be5\u6a21\u5757\u63d0\u4f9b\u4e86\u8f7b\u677e\u6784\u5efa\u5404\u79cd\u7f16\u89e3\u7801\u5668\u6a21\u578b\u7684\u5de5\u5177\u3002 \u4f8b\u5982\uff0c embedding_rnn_seq2seq() \u51fd\u6570\u4f1a\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7f16\u89e3\u7801\u5668\u6a21\u578b\uff0c\u5b83\u4f1a\u81ea\u52a8\u4e3a\u4f60\u5904\u7406\u5355\u8bcd\u5d4c\u5165\uff0c\u5c31\u50cf\u56fe 14-15 \u4e2d\u6240\u793a\u7684\u4e00\u6837\u3002 \u6b64\u4ee3\u7801\u53ef\u80fd\u4f1a\u5f88\u5feb\u66f4\u65b0\uff0c\u6765\u4f7f\u7528\u65b0\u7684 tf.nn.seq2seq \u6a21\u5757\u3002 \u4f60\u73b0\u5728\u62e5\u6709\u4e86\uff0c\u4e86\u89e3\u6240\u6709 seq2seq \u6559\u7a0b\u7684\u5b9e\u73b0\u6240\u9700\u7684\u5168\u90e8\u5de5\u5177\u3002 \u5c06\u5b83\u4eec\u53d6\u51fa\uff0c\u5e76\u8bad\u7ec3\u4f60\u81ea\u5df1\u7684\u82f1\u6cd5\u7ffb\u8bd1\u5668\u5427\uff01","title":"\u7528\u4e8e\u673a\u5668\u7ffb\u8bd1\u7684\u7f16\u89e3\u7801\u5668\u7f51\u7edc"},{"location":"14.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#_16","text":"\u4f60\u80fd\u60f3\u8c61 seq2seq RNN \u7684\u51e0\u4e2a\u5e94\u7528\u5417\uff1f seq2vec \u7684 RNN \u5462\uff1fvex2seq \u7684 RNN \u5462\uff1f \u4e3a\u4ec0\u4e48\u4eba\u4eec\u4f7f\u7528\u7f16\u89e3\u7801\u5668 RNN \u800c\u4e0d\u662f\u7b80\u5355\u7684 seq2seq RNN \u6765\u81ea\u52a8\u7ffb\u8bd1\uff1f \u5982\u4f55\u5c06\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e0e RNN \u7ed3\u5408\uff0c\u6765\u5bf9\u89c6\u9891\u8fdb\u884c\u5206\u7c7b\uff1f \u4f7f\u7528 dynamic_rnn() \u800c\u4e0d\u662f static_rnn() \u6784\u5efa RNN \u6709\u4ec0\u4e48\u597d\u5904\uff1f \u4f60\u5982\u4f55\u5904\u7406\u957f\u5ea6\u53ef\u53d8\u7684\u8f93\u5165\u5e8f\u5217\uff1f \u90a3\u4e48\u957f\u5ea6\u53ef\u53d8\u8f93\u51fa\u5e8f\u5217\u5462\uff1f \u5728\u591a\u4e2a GPU \u4e0a\u5206\u914d\u6df1\u5c42 RNN \u7684\u8bad\u7ec3\u548c\u6267\u884c\u7684\u5e38\u89c1\u65b9\u5f0f\u662f\u4ec0\u4e48\uff1f Hochreiter \u548c Schmidhuber \u5728\u5176\u5173\u4e8e LSTM \u7684\u6587\u7ae0\u4e2d\u4f7f\u7528\u4e86\u5d4c\u5165\u5f0f Reber \u8bed\u6cd5\u3002 \u5b83\u4eec\u662f\u4ea7\u751f\u5b57\u7b26\u4e32\uff0c\u5982 \"BPBTSXXVPSEPE\" \u7684\u4eba\u9020\u8bed\u6cd5\u3002\u67e5\u770b Jenny Orr \u5bf9\u6b64\u4e3b\u9898\u7684 \u4e0d\u9519\u7684\u4ecb\u7ecd \u3002 \u9009\u62e9\u4e00\u4e2a\u7279\u5b9a\u7684\u5d4c\u5165\u5f0f Reber \u8bed\u6cd5\uff08\u4f8b\u5982 Jenny Orr \u9875\u9762\u4e0a\u663e\u793a\u7684\u8bed\u6cd5\uff09\uff0c\u7136\u540e\u8bad\u7ec3\u4e00\u4e2a RNN \u6765\u786e\u5b9a\u5b57\u7b26\u4e32\u662f\u5426\u9075\u5faa\u8be5\u8bed\u6cd5\u3002 \u4f60\u9996\u5148\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u80fd\u591f\u751f\u6210\u8bad\u7ec3\u6279\u91cf\uff0c\u5305\u542b\u5927\u7ea6 50% \u9075\u5faa\u8bed\u6cd5\u7684\u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca 50% \u4e0d\u9075\u5faa\u7684\u5b57\u7b26\u4e32\u3002 \u89e3\u51b3\u201cHow much did it rain? II\u201d\uff08\u4e0b\u96e8\u4e0b\u4e86\u591a\u4e45 II\uff09 Kaggle \u6bd4\u8d5b \u3002 \u8fd9\u662f\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u4efb\u52a1\uff1a\u5b83\u4e3a\u4f60\u63d0\u4f9b\u6781\u5316\u96f7\u8fbe\u503c\u7684\u5feb\u7167\uff0c\u5e76\u8981\u6c42\u9884\u6d4b\u6bcf\u5c0f\u65f6\u964d\u6c34\u91cf\u3002 Luis Andre Dutra e Silva \u7684 \u91c7\u8bbf \u5bf9\u4ed6\u5728\u6bd4\u8d5b\u4e2d\u83b7\u5f97\u7b2c\u4e8c\u540d\u7684\u6280\u672f\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u89c1\u89e3\u3002 \u7279\u522b\u662f\uff0c\u4ed6\u4f7f\u7528\u4e86\u7531\u4e24\u4e2a LSTM \u5c42\u7ec4\u6210\u7684 RNN\u3002 \u901a\u8fc7 TensorFlow \u7684 Word2Vec \u6559\u7a0b\u6765\u521b\u5efa\u5355\u8bcd\u5d4c\u5165\uff0c\u7136\u540e\u901a\u8fc7 Seq2Seq \u6559\u7a0b\u6765\u8bad\u7ec3\u82f1\u6cd5\u7ffb\u8bd1\u7cfb\u7edf\u3002 \u9644\u5f55 A \u63d0\u4f9b\u4e86\u8fd9\u4e9b\u7ec3\u4e60\u7684\u7b54\u6848\u3002","title":"\u7ec3\u4e60"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/","text":"\u5341\u4e94\u3001\u81ea\u7f16\u7801\u5668 \u81ea\u7f16\u7801\u5668\u662f\u80fd\u591f\u5728\u65e0\u76d1\u7763\u7684\u60c5\u51b5\u4e0b\u5b66\u4e60\u8f93\u5165\u6570\u636e\u7684\u6709\u6548\u8868\u793a\uff08\u53eb\u505a\u7f16\u7801\uff09\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff08\u5373\uff0c\u8bad\u7ec3\u96c6\u662f\u672a\u6807\u8bb0\uff09\u3002\u8fd9\u4e9b\u7f16\u7801\u901a\u5e38\u5177\u6709\u6bd4\u8f93\u5165\u6570\u636e\u4f4e\u5f97\u591a\u7684\u7ef4\u5ea6\uff0c\u4f7f\u5f97\u81ea\u7f16\u7801\u5668\u5bf9\u964d\u7ef4\u6709\u7528\uff08\u53c2\u89c1\u7b2c 8 \u7ae0\uff09\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u81ea\u7f16\u7801\u5668\u53ef\u4ee5\u4f5c\u4e3a\u5f3a\u5927\u7684\u7279\u5f81\u68c0\u6d4b\u5668\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u4e8e\u65e0\u76d1\u7763\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u9884\u8bad\u7ec3\uff08\u6b63\u5982\u6211\u4eec\u5728\u7b2c 11 \u7ae0\u4e2d\u8ba8\u8bba\u8fc7\u7684\uff09\u3002\u6700\u540e\uff0c\u4ed6\u4eec\u80fd\u591f\u968f\u673a\u751f\u6210\u4e0e\u8bad\u7ec3\u6570\u636e\u975e\u5e38\u76f8\u4f3c\u7684\u65b0\u6570\u636e\uff1b\u8fd9\u88ab\u79f0\u4e3a\u751f\u6210\u6a21\u578b\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728\u8138\u90e8\u56fe\u7247\u4e0a\u8bad\u7ec3\u81ea\u7f16\u7801\u5668\uff0c\u7136\u540e\u53ef\u4ee5\u751f\u6210\u65b0\u8138\u90e8\u3002 \u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u81ea\u7f16\u7801\u5668\u53ea\u9700\u5b66\u4e60\u5c06\u8f93\u5165\u590d\u5236\u5230\u5176\u8f93\u51fa\u5373\u53ef\u5de5\u4f5c\u3002 \u8fd9\u542c\u8d77\u6765\u50cf\u662f\u4e00\u4ef6\u5c0f\u4e8b\uff0c\u4f46\u6211\u4eec\u4f1a\u770b\u5230\u4ee5\u5404\u79cd\u65b9\u5f0f\u7ea6\u675f\u7f51\u7edc\u53ef\u80fd\u4f1a\u8ba9\u5b83\u53d8\u5f97\u76f8\u5f53\u56f0\u96be\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u9650\u5236\u5185\u90e8\u8868\u793a\u7684\u5927\u5c0f\uff0c\u6216\u8005\u53ef\u4ee5\u5411\u8f93\u5165\u6dfb\u52a0\u566a\u58f0\u5e76\u8bad\u7ec3\u7f51\u7edc\u4ee5\u6062\u590d\u539f\u59cb\u8f93\u5165\u3002\u8fd9\u4e9b\u7ea6\u675f\u9632\u6b62\u81ea\u7f16\u7801\u5668\u5c06\u8f93\u5165\u76f4\u63a5\u590d\u5236\u5230\u8f93\u51fa\uff0c\u8fd9\u8feb\u4f7f\u5b83\u5b66\u4e60\u8868\u793a\u6570\u636e\u7684\u6709\u6548\u65b9\u6cd5\u3002 \u7b80\u8a00\u4e4b\uff0c\u7f16\u7801\u662f\u81ea\u7f16\u7801\u5668\u5728\u67d0\u4e9b\u9650\u5236\u6761\u4ef6\u4e0b\u5c1d\u8bd5\u5b66\u4e60\u6052\u7b49\u51fd\u6570\u7684\u526f\u4ea7\u54c1\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u66f4\u6df1\u5165\u5730\u89e3\u91ca\u81ea\u7f16\u7801\u5668\u5982\u4f55\u5de5\u4f5c\uff0c\u53ef\u4ee5\u65bd\u52a0\u4ec0\u4e48\u7c7b\u578b\u7684\u7ea6\u675f\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 TensorFlow \u5b9e\u73b0\u5b83\u4eec\uff0c\u65e0\u8bba\u662f\u7528\u6765\u964d\u7ef4\uff0c\u7279\u5f81\u63d0\u53d6\uff0c\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u8fd8\u662f\u4f5c\u4e3a\u751f\u6210\u5f0f\u6a21\u578b\u3002 \u6709\u6548\u7684\u6570\u636e\u8868\u793a \u60a8\u53d1\u73b0\u4ee5\u4e0b\u54ea\u4e00\u4e2a\u6570\u5b57\u5e8f\u5217\u6700\u5bb9\u6613\u8bb0\u5fc6\uff1f 40, 27, 25, 36, 81, 57, 10, 73, 19, 68 50, 25, 76, 38, 19, 58, 29, 88, 44, 22, 11, 34, 17, 52, 26, 13, 40, 20 \u4e4d\u4e00\u770b\uff0c\u7b2c\u4e00\u4e2a\u5e8f\u5217\u4f3c\u4e4e\u5e94\u8be5\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u5b83\u8981\u77ed\u5f97\u591a\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4ed4\u7ec6\u89c2\u5bdf\u7b2c\u4e8c\u4e2a\u5e8f\u5217\uff0c\u5219\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u5b83\u9075\u5faa\u4e24\u6761\u7b80\u5355\u89c4\u5219\uff1a\u5076\u6570\u662f\u524d\u9762\u6570\u7684\u4e00\u534a\uff0c\u5947\u6570\u662f\u524d\u9762\u6570\u7684\u4e09\u500d\u52a0\u4e00\uff08\u8fd9\u662f\u4e00\u4e2a\u7740\u540d\u7684\u5e8f\u5217\uff0c\u79f0\u4e3a\u96f9\u77f3\u5e8f\u5217\uff09\u3002\u4e00\u65e6\u4f60\u6ce8\u610f\u5230\u8fd9\u79cd\u6a21\u5f0f\uff0c\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u6bd4\u7b2c\u4e00\u4e2a\u66f4\u5bb9\u6613\u8bb0\u5fc6\uff0c\u56e0\u4e3a\u4f60\u53ea\u9700\u8981\u8bb0\u4f4f\u4e24\u4e2a\u89c4\u5219\uff0c\u7b2c\u4e00\u4e2a\u6570\u5b57\u548c\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u53ef\u4ee5\u5feb\u901f\u8f7b\u677e\u5730\u8bb0\u4f4f\u975e\u5e38\u957f\u7684\u5e8f\u5217\uff0c\u5219\u60a8\u4e0d\u4f1a\u5728\u610f\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u4e2d\u5b58\u5728\u7684\u6a21\u5f0f\u3002 \u4f60\u53ea\u9700\u8981\u4e86\u89e3\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u662f\u8fd9\u6837\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5f88\u96be\u8bb0\u4f4f\u957f\u5e8f\u5217\uff0c\u56e0\u6b64\u8bc6\u522b\u6a21\u5f0f\u975e\u5e38\u6709\u7528\uff0c\u5e76\u4e14\u5e0c\u671b\u80fd\u591f\u6f84\u6e05\u4e3a\u4ec0\u4e48\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u9650\u5236\u81ea\u7f16\u7801\u5668\u4f1a\u4fc3\u4f7f\u5b83\u53d1\u73b0\u5e76\u5229\u7528\u6570\u636e\u4e2d\u7684\u6a21\u5f0f\u3002 \u8bb0\u5fc6\uff0c\u611f\u77e5\u548c\u6a21\u5f0f\u5339\u914d\u4e4b\u95f4\u7684\u5173\u7cfb\u5728 20 \u4e16\u7eaa 70 \u5e74\u4ee3\u65e9\u671f\u7531 William Chase \u548c Herbert Simon \u7740\u540d\u7814\u7a76\u3002 \u4ed6\u4eec\u89c2\u5bdf\u5230\uff0c\u4e13\u5bb6\u68cb\u624b\u80fd\u591f\u901a\u8fc7\u89c2\u770b\u68cb\u76d85\u79d2\u949f\u6765\u8bb0\u5fc6\u6240\u6709\u68cb\u5b50\u7684\u4f4d\u7f6e\uff0c\u8fd9\u662f\u5927\u591a\u6570\u4eba\u8ba4\u4e3a\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u4efb\u52a1\u3002 \u7136\u800c\uff0c\u53ea\u6709\u5f53\u8fd9\u4e9b\u68cb\u5b50\u88ab\u653e\u7f6e\u5728\u73b0\u5b9e\u4f4d\u7f6e\uff08\u6765\u81ea\u5b9e\u9645\u6bd4\u8d5b\uff09\u65f6\u624d\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u800c\u4e0d\u662f\u968f\u673a\u653e\u7f6e\u68cb\u5b50\u3002 \u56fd\u9645\u8c61\u68cb\u4e13\u5bb6\u6ca1\u6709\u6bd4\u4f60\u66f4\u597d\u7684\u8bb0\u5fc6\uff0c\u4ed6\u4eec\u53ea\u662f\u66f4\u5bb9\u6613\u770b\u5230\u56fd\u9645\u8c61\u68cb\u6a21\u5f0f\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u4ed6\u4eec\u5bf9\u6bd4\u8d5b\u7684\u7ecf\u9a8c\u3002 \u6ce8\u610f\u6a21\u5f0f\u6709\u52a9\u4e8e\u4ed6\u4eec\u6709\u6548\u5730\u5b58\u50a8\u4fe1\u606f\u3002 \u5c31\u50cf\u8fd9\u4e2a\u8bb0\u5fc6\u5b9e\u9a8c\u4e2d\u7684\u8c61\u68cb\u68cb\u624b\u4e00\u6837\uff0c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u4f1a\u67e5\u770b\u8f93\u5165\u4fe1\u606f\uff0c\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u9ad8\u6548\u7684\u5185\u90e8\u8868\u793a\u5f62\u5f0f\uff0c\u7136\u540e\u5410\u51fa\u4e00\u4e9b\uff08\u5e0c\u671b\uff09\u770b\u8d77\u6765\u975e\u5e38\u63a5\u8fd1\u8f93\u5165\u7684\u4e1c\u897f\u3002 \u81ea\u7f16\u7801\u5668\u603b\u662f\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u5185\u90e8\u8868\u793a\u7684\u7f16\u7801\u5668\uff08\u6216\u8bc6\u522b\u7f51\u7edc\uff09\uff0c\u7136\u540e\u662f\u5c06\u5185\u90e8\u8868\u793a\u8f6c\u6362\u4e3a\u8f93\u51fa\u7684\u89e3\u7801\u5668\uff08\u6216\u751f\u6210\u7f51\u7edc\uff09\uff08\u89c1\u56fe 15-1\uff09\u3002 \u5982\u60a8\u6240\u89c1\uff0c\u81ea\u7f16\u7801\u5668\u901a\u5e38\u5177\u6709\u4e0e\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff0c\u8bf7\u53c2\u9605\u7b2c 10 \u7ae0\uff09\u76f8\u540c\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u4f46\u8f93\u51fa\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u6570\u91cf\u5fc5\u987b\u7b49\u4e8e\u8f93\u5165\u6570\u91cf\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u7531\u4e24\u4e2a\u795e\u7ecf\u5143\uff08\u7f16\u7801\u5668\uff09\u7ec4\u6210\u7684\u9690\u85cf\u5c42\u548c\u4e00\u4e2a\u7531\u4e09\u4e2a\u795e\u7ecf\u5143\uff08\u89e3\u7801\u5668\uff09\u7ec4\u6210\u7684\u8f93\u51fa\u5c42\u3002 \u7531\u4e8e\u81ea\u7f16\u7801\u5668\u8bd5\u56fe\u91cd\u6784\u8f93\u5165\uff0c\u6240\u4ee5\u8f93\u51fa\u901a\u5e38\u88ab\u79f0\u4e3a\u91cd\u5efa\uff0c\u5e76\u4e14\u635f\u5931\u51fd\u6570\u5305\u542b\u91cd\u5efa\u635f\u5931\uff0c\u5f53\u91cd\u5efa\u4e0e\u8f93\u5165\u4e0d\u540c\u65f6\uff0c\u91cd\u5efa\u635f\u5931\u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c\u60e9\u7f5a\u3002 \u7531\u4e8e\u5185\u90e8\u8868\u793a\u5177\u6709\u6bd4\u8f93\u5165\u6570\u636e\u66f4\u4f4e\u7684\u7ef4\u5ea6\uff08\u5b83\u662f 2D \u800c\u4e0d\u662f 3D\uff09\uff0c\u6240\u4ee5\u81ea\u7f16\u7801\u5668\u88ab\u8ba4\u4e3a\u662f\u4e0d\u5b8c\u6574\u7684\u3002 \u4e0d\u5b8c\u6574\u7684\u81ea\u7f16\u7801\u5668\u4e0d\u80fd\u7b80\u5355\u5730\u5c06\u5176\u8f93\u5165\u590d\u5236\u5230\u7f16\u7801\uff0c\u4f46\u5b83\u5fc5\u987b\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u8f93\u51fa\u5176\u8f93\u5165\u7684\u526f\u672c\u3002 \u5b83\u88ab\u8feb\u5b66\u4e60\u8f93\u5165\u6570\u636e\u4e2d\u6700\u91cd\u8981\u7684\u7279\u5f81\uff08\u5e76\u5220\u9664\u4e0d\u91cd\u8981\u7684\u7279\u5f81\uff09\u3002 \u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4e0d\u5b8c\u6574\u7684\u81ea\u7f16\u7801\u5668\uff0c\u4ee5\u964d\u4f4e\u7ef4\u5ea6\u3002 \u7528\u4e0d\u5b8c\u6574\u7684\u7ebf\u6027\u81ea\u7f16\u7801\u5668\u6267\u884c PCA \u5982\u679c\u81ea\u7f16\u7801\u5668\u4ec5\u4f7f\u7528\u7ebf\u6027\u6fc0\u6d3b\u5e76\u4e14\u635f\u5931\u51fd\u6570\u662f\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\uff0c\u5219\u53ef\u4ee5\u663e\u793a\u5b83\u6700\u7ec8\u6267\u884c\u4e3b\u6210\u5206\u5206\u6790\uff08\u53c2\u89c1\u7b2c 8 \u7ae0\uff09\u3002 \u4ee5\u4e0b\u4ee3\u7801\u6784\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u81ea\u7f16\u7801\u5668\uff0c\u4ee5\u5728 3D \u6570\u636e\u96c6\u4e0a\u6267\u884c PCA\uff0c\u5e76\u5c06\u5176\u6295\u5f71\u5230 2D\uff1a import tensorflow as tf from tensorflow.contrib.layers import fully_connected n_inputs = 3 # 3D inputs n_hidden = 2 # 2D codings n_outputs = n_inputs learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=[None, n_inputs]) hidden = fully_connected(X, n_hidden, activation_fn=None) outputs = fully_connected(hidden, n_outputs, activation_fn=None) reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE optimizer = tf.train.AdamOptimizer(learning_rate) training_op = optimizer.minimize(reconstruction_loss) init = tf.global_variables_initializer() \u8fd9\u6bb5\u4ee3\u7801\u4e0e\u6211\u4eec\u5728\u8fc7\u53bb\u7ae0\u8282\u4e2d\u5efa\u7acb\u7684\u6240\u6709 MLP \u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u4e24\u4ef6\u4e8b\u662f\uff1a \u8f93\u51fa\u7684\u6570\u91cf\u7b49\u4e8e\u8f93\u5165\u7684\u6570\u91cf\u3002 \u4e3a\u4e86\u6267\u884c\u7b80\u5355\u7684 PCA\uff0c\u6211\u4eec\u8bbe\u7f6e activation_fn = None \uff08\u5373\uff0c\u6240\u6709\u795e\u7ecf\u5143\u90fd\u662f\u7ebf\u6027\u7684\uff09 \u800c\u635f\u5931\u51fd\u6570\u662f MSE\u3002 \u6211\u4eec\u5f88\u5feb\u4f1a\u770b\u5230\u66f4\u590d\u6742\u7684\u81ea\u7f16\u7801\u5668\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u52a0\u8f7d\u6570\u636e\u96c6\uff0c\u5728\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u6a21\u578b\uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u7f16\u7801\uff08\u5373\u5c06\u5176\u6295\u5f71\u5230 2D\uff09\uff1a X_train, X_test = [...] # load the dataset n_iterations = 1000 codings = hidden # the output of the hidden layer provides the codings with tf.Session() as sess: init.run() for iteration in range(n_iterations): training_op.run(feed_dict={X: X_train}) # no labels (unsupervised) codings_val = codings.eval(feed_dict={X: X_test}) \u56fe 15-2 \u663e\u793a\u4e86\u539f\u59cb 3D \u6570\u636e\u96c6\uff08\u5de6\u4fa7\uff09\u548c\u81ea\u7f16\u7801\u5668\u9690\u85cf\u5c42\u7684\u8f93\u51fa\uff08\u5373\u7f16\u7801\u5c42\uff0c\u53f3\u4fa7\uff09\u3002 \u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u81ea\u7f16\u7801\u5668\u627e\u5230\u4e86\u5c06\u6570\u636e\u6295\u5f71\u5230\u6570\u636e\u4e0a\u7684\u6700\u4f73\u4e8c\u7ef4\u5e73\u9762\uff0c\u4fdd\u7559\u4e86\u6570\u636e\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u5dee\u5f02\uff08\u5c31\u50cf PCA \u4e00\u6837\uff09\u3002 \u6808\u5f0f\u81ea\u7f16\u7801\u5668\uff08SAE\uff09 \u5c31\u50cf\u6211\u4eec\u8ba8\u8bba\u8fc7\u7684\u5176\u4ed6\u795e\u7ecf\u7f51\u7edc\u4e00\u6837\uff0c\u81ea\u7f16\u7801\u5668\u53ef\u4ee5\u6709\u591a\u4e2a\u9690\u85cf\u5c42\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u88ab\u79f0\u4e3a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\uff08\u6216\u6df1\u5ea6\u81ea\u7f16\u7801\u5668\uff09\u3002 \u6dfb\u52a0\u66f4\u591a\u5c42\u6709\u52a9\u4e8e\u81ea\u7f16\u7801\u5668\u4e86\u89e3\u66f4\u590d\u6742\u7684\u7f16\u7801\u3002 \u4f46\u662f\uff0c\u5fc5\u987b\u6ce8\u610f\u4e0d\u8981\u8ba9\u81ea\u7f16\u7801\u5668\u529f\u80fd\u592a\u5f3a\u5927\u3002 \u8bbe\u60f3\u4e00\u4e2a\u7f16\u7801\u5668\u975e\u5e38\u5f3a\u5927\uff0c\u53ea\u9700\u5b66\u4e60\u5c06\u6bcf\u4e2a\u8f93\u5165\u6620\u5c04\u5230\u4e00\u4e2a\u4efb\u610f\u6570\u5b57\uff08\u5e76\u4e14\u89e3\u7801\u5668\u5b66\u4e60\u53cd\u5411\u6620\u5c04\uff09\u5373\u53ef\u3002 \u5f88\u660e\u663e\uff0c\u8fd9\u6837\u7684\u81ea\u7f16\u7801\u5668\u5c06\u5b8c\u7f8e\u5730\u91cd\u6784\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u5b83\u4e0d\u4f1a\u5728\u8fc7\u7a0b\u4e2d\u5b66\u4e60\u5230\u4efb\u4f55\u6709\u7528\u7684\u6570\u636e\u8868\u793a\uff08\u5e76\u4e14\u5b83\u4e0d\u53ef\u80fd\u5f88\u597d\u5730\u63a8\u5e7f\u5230\u65b0\u7684\u5b9e\u4f8b\uff09\u3002 \u6808\u5f0f\u81ea\u7f16\u7801\u5668\u7684\u67b6\u6784\u5173\u4e8e\u4e2d\u592e\u9690\u85cf\u5c42\uff08\u7f16\u7801\u5c42\uff09\u901a\u5e38\u662f\u5bf9\u79f0\u7684\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u4e09\u660e\u6cbb\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a\u7528\u4e8e MNIST \u7684\u81ea\u7f16\u7801\u5668\uff08\u5728\u7b2c 3 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u53ef\u80fd\u6709 784 \u4e2a\u8f93\u5165\uff0c\u5176\u6b21\u662f\u4e00\u4e2a\u9690\u85cf\u5c42\uff0c\u6709 300 \u4e2a\u795e\u7ecf\u5143\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u4e2d\u592e\u9690\u85cf\u5c42\uff0c\u6709 150 \u4e2a\u795e\u7ecf\u5143\uff0c\u7136\u540e\u662f\u53e6\u4e00\u4e2a\u9690\u85cf\u5c42\uff0c\u6709 300 \u4e2a\u795e\u7ecf\u5143\uff0c\u8f93\u51fa\u5c42\u6709 784 \u795e\u7ecf\u5143\u3002 \u8fd9\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u5982\u56fe 15-3 \u6240\u793a\u3002 TensorFlow\u5b9e\u73b0 \u60a8\u53ef\u4ee5\u50cf\u5e38\u89c4\u6df1\u5ea6 MLP \u4e00\u6837\u5b9e\u73b0\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002 \u7279\u522b\u662f\uff0c\u6211\u4eec\u5728\u7b2c 11 \u7ae0\u4e2d\u7528\u4e8e\u8bad\u7ec3\u6df1\u5ea6\u7f51\u7edc\u7684\u6280\u672f\u4e5f\u53ef\u4ee5\u5e94\u7528\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528 He \u521d\u59cb\u5316\uff0cELU \u6fc0\u6d3b\u51fd\u6570\u548c l2 \u6b63\u5219\u5316\u4e3a MNIST \u6784\u5efa\u4e00\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002 \u4ee3\u7801\u5e94\u8be5\u770b\u8d77\u6765\u5f88\u719f\u6089\uff0c\u9664\u4e86\u6ca1\u6709\u6807\u7b7e\uff08\u6ca1\u6709 y \uff09\uff1a n_inputs = 28 * 28 # for MNIST n_hidden1 = 300 n_hidden2 = 150 # codings n_hidden3 = n_hidden1 n_outputs = n_inputs learning_rate = 0.01 l2_reg = 0.001 X = tf.placeholder(tf.float32, shape=[None, n_inputs]) with tf.contrib.framework.arg_scope( [fully_connected], activation_fn=tf.nn.elu, weights_initializer=tf.contrib.layers.variance_scaling_initializer(), weights_regularizer=tf.contrib.layers.l2_regularizer(l2_reg)): hidden1 = fully_connected(X, n_hidden1) hidden2 = fully_connected(hidden1, n_hidden2) # codings hidden3 = fully_connected(hidden2, n_hidden3) outputs = fully_connected(hidden3, n_outputs, activation_fn=None) reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE reg_losses = tf.get_collection(tf.GraphKeys.REGULARIZATION_LOSSES) loss = tf.add_n([reconstruction_loss] + reg_losses) optimizer = tf.train.AdamOptimizer(learning_rate) training_op = optimizer.minimize(loss) init = tf.global_variables_initializer() \u7136\u540e\u53ef\u4ee5\u6b63\u5e38\u8bad\u7ec3\u6a21\u578b\u3002 \u8bf7\u6ce8\u610f\uff0c\u6570\u5b57\u6807\u7b7e\uff08 y_batch \uff09\u672a\u4f7f\u7528\uff1a n_epochs = 5 batch_size = 150 with tf.Session() as sess: init.run() for epoch in range(n_epochs): n_batches = mnist.train.num_examples // batch_size for iteration in range(n_batches): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch}) \u5173\u8054\u6743\u91cd \u5f53\u81ea\u7f16\u7801\u5668\u6574\u9f50\u5730\u5bf9\u79f0\u65f6\uff0c\u5c31\u50cf\u6211\u4eec\u521a\u521a\u6784\u5efa\u7684\u90a3\u6837\uff0c\u4e00\u79cd\u5e38\u7528\u6280\u672f\u662f\u5c06\u89e3\u7801\u5668\u5c42\u7684\u6743\u91cd\u4e0e\u7f16\u7801\u5668\u5c42\u7684\u6743\u91cd\u76f8\u5173\u8054\u3002 \u8fd9\u6837\u51cf\u5c11\u4e86\u6a21\u578b\u4e2d\u7684\u6743\u91cd\u6570\u91cf\uff0c\u52a0\u5feb\u4e86\u8bad\u7ec3\u901f\u5ea6\uff0c\u5e76\u9650\u5236\u4e86\u8fc7\u5ea6\u62df\u5408\u7684\u98ce\u9669\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u81ea\u7f16\u7801\u5668\u603b\u5171\u5177\u6709 N \u4e2a\u5c42\uff08\u4e0d\u8ba1\u5165\u8f93\u5165\u5c42\uff09\uff0c\u5e76\u4e14 \u8868\u793a\u7b2c L \u5c42\u7684\u8fde\u63a5\u6743\u91cd\uff08\u4f8b\u5982\uff0c\u5c42 1 \u662f\u7b2c\u4e00\u9690\u85cf\u5c42\uff0c\u5219\u5c42 N / 2 \u662f\u7f16\u7801 \u5c42\uff0c\u800c\u5c42 N \u662f\u8f93\u51fa\u5c42\uff09\uff0c\u5219\u89e3\u7801\u5668\u5c42\u6743\u91cd\u53ef\u4ee5\u7b80\u5355\u5730\u5b9a\u4e49\u4e3a\uff1a \uff08\u5176\u4e2d L = 1, 2, ..., N2 \uff09\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u4f7f\u7528 fully_connected() \u51fd\u6570\u5728 TensorFlow \u4e2d\u5b9e\u73b0\u76f8\u5173\u6743\u91cd\u6709\u70b9\u9ebb\u70e6\uff1b\u624b\u52a8\u5b9a\u4e49\u5c42\u5b9e\u9645\u4e0a\u66f4\u5bb9\u6613\u3002 \u4ee3\u7801\u7ed3\u5c3e\u660e\u663e\u66f4\u52a0\u5197\u957f\uff1a activation = tf.nn.elu regularizer = tf.contrib.layers.l2_regularizer(l2_reg) initializer = tf.contrib.layers.variance_scaling_initializer() X = tf.placeholder(tf.float32, shape=[None, n_inputs]) weights1_init = initializer([n_inputs, n_hidden1]) weights2_init = initializer([n_hidden1, n_hidden2]) weights1 = tf.Variable(weights1_init, dtype=tf.float32, name=\"weights1\") weights2 = tf.Variable(weights2_init, dtype=tf.float32, name=\"weights2\") weights3 = tf.transpose(weights2, name=\"weights3\") # tied weights weights4 = tf.transpose(weights1, name=\"weights4\") # tied weights biases1 = tf.Variable(tf.zeros(n_hidden1), name=\"biases1\") biases2 = tf.Variable(tf.zeros(n_hidden2), name=\"biases2\") biases3 = tf.Variable(tf.zeros(n_hidden3), name=\"biases3\") biases4 = tf.Variable(tf.zeros(n_outputs), name=\"biases4\") hidden1 = activation(tf.matmul(X, weights1) + biases1) hidden2 = activation(tf.matmul(hidden1, weights2) + biases2) hidden3 = activation(tf.matmul(hidden2, weights3) + biases3) outputs = tf.matmul(hidden3, weights4) + biases4 reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) reg_loss = regularizer(weights1) + regularizer(weights2) loss = reconstruction_loss + reg_loss optimizer = tf.train.AdamOptimizer(learning_rate) training_op = optimizer.minimize(loss) init = tf.global_variables_initializer() \u8fd9\u6bb5\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u6709\u51e0\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u9700\u8981\u6ce8\u610f\uff1a \u9996\u5148\uff0c\u6743\u91cd 3 \u548c\u6743\u91cd 4 \u4e0d\u662f\u53d8\u91cf\uff0c\u5b83\u4eec\u5206\u522b\u662f\u6743\u91cd 2 \u548c\u6743\u91cd 1 \u7684\u8f6c\u7f6e\uff08\u5b83\u4eec\u4e0e\u5b83\u4eec\u201c\u7ed1\u5b9a\u201d\uff09\u3002 \u5176\u6b21\uff0c\u7531\u4e8e\u5b83\u4eec\u4e0d\u662f\u53d8\u91cf\uff0c\u6240\u4ee5\u89c4\u8303\u5b83\u4eec\u662f\u6ca1\u6709\u7528\u7684\uff1a\u6211\u4eec\u53ea\u8c03\u6574\u6743\u91cd 1 \u548c\u6743\u91cd 2\u3002 \u7b2c\u4e09\uff0c\u504f\u7f6e\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u675f\u7f1a\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u6b63\u89c4\u5316\u3002 \u4e00\u6b21\u8bad\u7ec3\u4e00\u4e2a\u81ea\u7f16\u7801\u5668 \u6211\u4eec\u4e0d\u662f\u4e00\u6b21\u5b8c\u6210\u6574\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u7684\u8bad\u7ec3\uff0c\u800c\u662f\u4e00\u6b21\u8bad\u7ec3\u4e00\u4e2a\u6d45\u81ea\u7f16\u7801\u5668\uff0c\u7136\u540e\u5c06\u6240\u6709\u8fd9\u4e9b\u81ea\u7f16\u7801\u5668\u5806\u53e0\u5230\u4e00\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\uff08\u56e0\u6b64\u540d\u79f0\uff09\u4e2d\uff0c\u901a\u5e38\u8981\u5feb\u5f97\u591a\uff0c\u5982\u56fe 15-4 \u6240\u793a\u3002 \u8fd9\u5bf9\u4e8e\u975e\u5e38\u6df1\u7684\u81ea\u7f16\u7801\u5668\u7279\u522b\u6709\u7528\u3002 \u5728\u8bad\u7ec3\u7684\u7b2c\u4e00\u9636\u6bb5\uff0c\u7b2c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u91cd\u6784\u8f93\u5165\u3002 \u5728\u7b2c\u4e8c\u9636\u6bb5\uff0c\u7b2c\u4e8c\u4e2a\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u91cd\u6784\u7b2c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u3002 \u6700\u540e\uff0c\u60a8\u53ea\u9700\u4f7f\u7528\u6240\u6709\u8fd9\u4e9b\u81ea\u7f16\u7801\u5668\u6765\u6784\u5efa\u4e00\u4e2a\u5927\u4e09\u660e\u6cbb\uff0c\u5982\u56fe 15-4 \u6240\u793a\uff08\u5373\uff0c\u60a8\u9996\u5148\u5c06\u6bcf\u4e2a\u81ea\u7f16\u7801\u5668\u7684\u9690\u85cf\u5c42\uff0c\u7136\u540e\u6309\u76f8\u53cd\u987a\u5e8f\u5806\u53e0\u8f93\u51fa\u5c42\uff09\u3002 \u8fd9\u7ed9\u4f60\u6700\u540e\u7684\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002 \u60a8\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u8f7b\u677e\u5730\u8bad\u7ec3\u66f4\u591a\u7684\u81ea\u7f16\u7801\u5668\uff0c\u6784\u5efa\u4e00\u4e2a\u975e\u5e38\u6df1\u7684\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u79cd\u591a\u9636\u6bb5\u8bad\u7ec3\u7b97\u6cd5\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u9636\u6bb5\u4f7f\u7528\u4e0d\u540c\u7684 TensorFlow \u56fe\u3002 \u8bad\u7ec3\u5b8c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u540e\uff0c\u60a8\u53ea\u9700\u901a\u8fc7\u5b83\u8fd0\u884c\u8bad\u7ec3\u96c6\u5e76\u6355\u83b7\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u3002 \u8fd9\u4e2a\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u7684\u8bad\u7ec3\u96c6\u3002 \u4e00\u65e6\u6240\u6709\u81ea\u7f16\u7801\u5668\u90fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u4e86\u8bad\u7ec3,\u60a8\u53ea\u9700\u590d\u5236\u6bcf\u4e2a\u81ea\u7f16\u7801\u5668\u7684\u6743\u91cd\u548c\u504f\u7f6e\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u4eec\u6765\u6784\u5efa\u5806\u53e0\u7684\u81ea\u7f16\u7801\u5668\u3002 \u5b9e\u73b0\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5728\u8fd9\u91cc\u8be6\u7ec6\u8bf4\u660e\uff0c\u4f46\u8bf7\u67e5\u9605 Jupyter notebooks \u4e2d\u7684\u4ee3\u7801\u4f5c\u4e3a\u793a\u4f8b\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u5305\u542b\u6574\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u7684\u5355\u4e2a\u56fe\uff0c\u4ee5\u53ca\u6267\u884c\u6bcf\u4e2a\u8bad\u7ec3\u9636\u6bb5\u7684\u4e00\u4e9b\u989d\u5916\u64cd\u4f5c\uff0c\u5982\u56fe 15-5 \u6240\u793a\u3002 \u8fd9\u503c\u5f97\u89e3\u91ca\u4e00\u4e0b\uff1a \u56fe\u4e2d\u7684\u4e2d\u592e\u5217\u662f\u5b8c\u6574\u7684\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002\u8fd9\u90e8\u5206\u53ef\u4ee5\u5728\u8bad\u7ec3\u540e\u4f7f\u7528\u3002 \u5de6\u5217\u662f\u8fd0\u884c\u7b2c\u4e00\u9636\u6bb5\u8bad\u7ec3\u6240\u9700\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002\u5b83\u521b\u5efa\u4e00\u4e2a\u7ed5\u8fc7\u9690\u85cf\u5c42 2 \u548c 3 \u7684\u8f93\u51fa\u5c42\u3002\u8be5\u8f93\u51fa\u5c42\u4e0e\u5806\u53e0\u7684\u81ea\u7f16\u7801\u5668\u7684\u8f93\u51fa\u5c42\u5171\u4eab\u76f8\u540c\u7684\u6743\u91cd\u548c\u504f\u7f6e\u3002\u6b64\u5916\u8fd8\u6709\u65e8\u5728\u4f7f\u8f93\u51fa\u5c3d\u53ef\u80fd\u63a5\u8fd1\u8f93\u5165\u7684\u8bad\u7ec3\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u8be5\u9636\u6bb5\u5c06\u8bad\u7ec3\u9690\u85cf\u5c421\u548c\u8f93\u51fa\u5c42\uff08\u5373\uff0c\u7b2c\u4e00\u81ea\u7f16\u7801\u5668\uff09\u7684\u6743\u91cd\u548c\u504f\u7f6e\u3002 \u56fe\u4e2d\u7684\u53f3\u5217\u662f\u8fd0\u884c\u7b2c\u4e8c\u9636\u6bb5\u8bad\u7ec3\u6240\u9700\u7684\u4e00\u7ec4\u64cd\u4f5c\u3002\u5b83\u589e\u52a0\u4e86\u8bad\u7ec3\u64cd\u4f5c\uff0c\u76ee\u7684\u662f\u4f7f\u9690\u85cf\u5c42 3 \u7684\u8f93\u51fa\u5c3d\u53ef\u80fd\u63a5\u8fd1\u9690\u85cf\u5c42 1 \u7684\u8f93\u51fa\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u8fd0\u884c\u9636\u6bb5 2 \u65f6\u51bb\u7ed3\u9690\u85cf\u5c42 1\u3002\u6b64\u9636\u6bb5\u5c06\u8bad\u7ec3\u9690\u85cf\u5c42 2 \u548c 3 \u7684\u6743\u91cd\u548c\u504f\u7f6e\uff08\u5373\u7b2c\u4e8c\u81ea\u7f16\u7801\u5668\uff09\u3002 TensorFlow \u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a [...] # Build the whole stacked autoencoder normally. # In this example, the weights are not tied. optimizer = tf.train.AdamOptimizer(learning_rate) with tf.name_scope(\"phase1\"): phase1_outputs = tf.matmul(hidden1, weights4) + biases4 phase1_reconstruction_loss = tf.reduce_mean(tf.square(phase1_outputs - X)) phase1_reg_loss = regularizer(weights1) + regularizer(weights4) phase1_loss = phase1_reconstruction_loss + phase1_reg_loss phase1_training_op = optimizer.minimize(phase1_loss) with tf.name_scope(\"phase2\"): phase2_reconstruction_loss = tf.reduce_mean(tf.square(hidden3 - hidden1)) phase2_reg_loss = regularizer(weights2) + regularizer(weights3) phase2_loss = phase2_reconstruction_loss + phase2_reg_loss train_vars = [weights2, biases2, weights3, biases3] phase2_training_op = optimizer.minimize(phase2_loss, var_list=train_vars) \u7b2c\u4e00\u9636\u6bb5\u6bd4\u8f83\u7b80\u5355\uff1a\u6211\u4eec\u53ea\u521b\u5efa\u4e00\u4e2a\u8df3\u8fc7\u9690\u85cf\u5c42 2 \u548c 3 \u7684\u8f93\u51fa\u5c42\uff0c\u7136\u540e\u6784\u5efa\u8bad\u7ec3\u64cd\u4f5c\u4ee5\u6700\u5c0f\u5316\u8f93\u51fa\u548c\u8f93\u5165\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u52a0\u4e0a\u4e00\u4e9b\u6b63\u5219\u5316\uff09\u3002 \u7b2c\u4e8c\u9636\u6bb5\u53ea\u662f\u589e\u52a0\u4e86\u5c06\u9690\u85cf\u5c42 3 \u548c\u9690\u85cf\u5c42 1 \u7684\u8f93\u51fa\u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5c0f\u5316\u7684\u64cd\u4f5c\uff08\u8fd8\u6709\u4e00\u4e9b\u6b63\u5219\u5316\uff09\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u5411 minim() \u65b9\u6cd5\u63d0\u4f9b\u53ef\u8bad\u7ec3\u53d8\u91cf\u7684\u5217\u8868\uff0c\u786e\u4fdd\u7701\u7565\u6743\u91cd 1 \u548c\u504f\u5dee 1\uff1b\u8fd9\u6709\u6548\u5730\u51bb\u7ed3\u4e86\u9636\u6bb5 2 \u671f\u95f4\u7684\u9690\u85cf\u5c42 1\u3002 \u5728\u6267\u884c\u9636\u6bb5\uff0c\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u4e3a\u9636\u6bb5 1 \u4e00\u4e9b\u8fed\u4ee3\u8fdb\u884c\u8bad\u7ec3\u64cd\u4f5c\uff0c\u7136\u540e\u9636\u6bb5 2 \u8bad\u7ec3\u8fd0\u884c\u66f4\u591a\u7684\u8fed\u4ee3\u3002 \u7531\u4e8e\u9690\u85cf\u5c42 1 \u5728\u9636\u6bb5 2 \u671f\u95f4\u88ab\u51bb\u7ed3\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u8bad\u7ec3\u5b9e\u4f8b\u5176\u8f93\u51fa\u5c06\u603b\u662f\u76f8\u540c\u7684\u3002 \u4e3a\u4e86\u907f\u514d\u5728\u6bcf\u4e2a\u65f6\u671f\u91cd\u65b0\u8ba1\u7b97\u9690\u85cf\u5c421\u7684\u8f93\u51fa\uff0c\u60a8\u53ef\u4ee5\u5728\u9636\u6bb5 1 \u7ed3\u675f\u65f6\u4e3a\u6574\u4e2a\u8bad\u7ec3\u96c6\u8ba1\u7b97\u5b83\uff0c\u7136\u540e\u76f4\u63a5\u5728\u9636\u6bb5 2 \u4e2d\u8f93\u5165\u9690\u85cf\u5c42 1 \u7684\u7f13\u5b58\u8f93\u51fa\u3002\u8fd9\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0d\u9519\u7684\u6027\u80fd\u4e0a\u7684\u63d0\u5347\u3002 \u53ef\u89c6\u5316\u91cd\u5efa \u786e\u4fdd\u81ea\u7f16\u7801\u5668\u5f97\u5230\u9002\u5f53\u8bad\u7ec3\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u6bd4\u8f83\u8f93\u5165\u548c\u8f93\u51fa\u3002 \u5b83\u4eec\u5fc5\u987b\u975e\u5e38\u76f8\u4f3c\uff0c\u5dee\u5f02\u5e94\u8be5\u662f\u4e0d\u91cd\u8981\u7684\u7ec6\u8282\u3002 \u6211\u4eec\u6765\u7ed8\u5236\u4e24\u4e2a\u968f\u673a\u6570\u5b57\u53ca\u5176\u91cd\u5efa\uff1a n_test_digits = 2 X_test = mnist.test.images[:n_test_digits] with tf.Session() as sess: [...] # Train the Autoencoder outputs_val = outputs.eval(feed_dict={X: X_test}) def plot_image(image, shape=[28, 28]): plt.imshow(image.reshape(shape), cmap=\"Greys\", interpolation=\"nearest\") plt.axis(\"off\") for digit_index in range(n_test_digits): plt.subplot(n_test_digits, 2, digit_index * 2 + 1) plot_image(X_test[digit_index]) plt.subplot(n_test_digits, 2, digit_index * 2 + 2) plot_image(outputs_val[digit_index]) \u770b\u8d77\u6765\u591f\u63a5\u8fd1\u3002 \u6240\u4ee5\u81ea\u7f16\u7801\u5668\u5df2\u7ecf\u9002\u5f53\u5730\u5b66\u4f1a\u4e86\u91cd\u73b0\u5b83\uff0c\u4f46\u662f\u5b83\u5b66\u5230\u4e86\u6709\u7528\u7684\u7279\u6027\uff1f \u8ba9\u6211\u4eec\u6765\u770b\u770b\u3002 \u53ef\u89c6\u5316\u529f\u80fd \u4e00\u65e6\u4f60\u7684\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u4e86\u4e00\u4e9b\u529f\u80fd\uff0c\u4f60\u53ef\u80fd\u60f3\u770b\u770b\u5b83\u4eec\u3002 \u6709\u5404\u79cd\u5404\u6837\u7684\u6280\u672f\u3002 \u53ef\u4ee5\u8bf4\u6700\u7b80\u5355\u7684\u6280\u672f\u662f\u5728\u6bcf\u4e2a\u9690\u85cf\u5c42\u4e2d\u8003\u8651\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u5e76\u627e\u5230\u6700\u80fd\u6fc0\u6d3b\u5b83\u7684\u8bad\u7ec3\u5b9e\u4f8b\u3002 \u8fd9\u5bf9\u9876\u5c42\u9690\u85cf\u5c42\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u4f1a\u6355\u83b7\u76f8\u5bf9\u8f83\u5927\u7684\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5728\u5305\u542b\u5b83\u4eec\u7684\u4e00\u7ec4\u8bad\u7ec3\u5b9e\u4f8b\u4e2d\u8f7b\u677e\u627e\u5230\u8fd9\u4e9b\u529f\u80fd\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u795e\u7ecf\u5143\u5728\u56fe\u7247\u4e2d\u770b\u5230\u4e00\u53ea\u732b\u65f6\u5f3a\u70c8\u6fc0\u6d3b\uff0c\u90a3\u4e48\u6fc0\u6d3b\u5b83\u7684\u56fe\u7247\u6700\u663e\u773c\u7684\u5730\u65b9\u90fd\u4f1a\u5305\u542b\u732b\u3002 \u7136\u800c\uff0c\u5bf9\u4e8e\u8f83\u4f4e\u5c42\uff0c\u8fd9\u79cd\u6280\u672f\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7279\u5f81\u66f4\u5c0f\uff0c\u66f4\u62bd\u8c61\uff0c\u56e0\u6b64\u5f88\u96be\u51c6\u786e\u7406\u89e3\u795e\u7ecf\u5143\u6b63\u5728\u4e3a\u4ec0\u4e48\u800c\u5174\u594b\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u53e6\u4e00\u79cd\u6280\u672f\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u56fe\u50cf\uff0c\u5176\u4e2d\u50cf\u7d20\u7684\u5f3a\u5ea6\u5bf9\u5e94\u4e8e\u7ed9\u5b9a\u795e\u7ecf\u5143\u7684\u8fde\u63a5\u6743\u91cd\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u7ed8\u5236\u4e86\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u4e2d\u4e94\u4e2a\u795e\u7ecf\u5143\u5b66\u4e60\u7684\u7279\u5f81\uff1a with tf.Session() as sess: [...] # train autoencoder weights1_val = weights1.eval() for i in range(5): plt.subplot(1, 5, i + 1) plot_image(weights1_val.T[i]) \u60a8\u53ef\u80fd\u4f1a\u5f97\u5230\u5982\u56fe 15-7 \u6240\u793a\u7684\u4f4e\u7ea7\u529f\u80fd\u3002 \u524d\u56db\u4e2a\u7279\u5f81\u4f3c\u4e4e\u5bf9\u5e94\u4e8e\u5c0f\u5757\uff0c\u800c\u7b2c\u4e94\u4e2a\u7279\u5f81\u4f3c\u4e4e\u5bfb\u627e\u5782\u76f4\u7b14\u5212\uff08\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u7279\u5f81\u6765\u81ea\u5806\u53e0\u53bb\u566a\u81ea\u7f16\u7801\u5668\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u8ba8\u8bba\uff09\u3002 \u53e6\u4e00\u79cd\u6280\u672f\u662f\u7ed9\u81ea\u7f16\u7801\u5668\u63d0\u4f9b\u4e00\u4e2a\u968f\u673a\u8f93\u5165\u56fe\u50cf\uff0c\u6d4b\u91cf\u60a8\u611f\u5174\u8da3\u7684\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\uff0c\u7136\u540e\u6267\u884c\u53cd\u5411\u4f20\u64ad\u6765\u8c03\u6574\u56fe\u50cf\uff0c\u4f7f\u795e\u7ecf\u5143\u6fc0\u6d3b\u5f97\u66f4\u591a\u3002 \u5982\u679c\u8fed\u4ee3\u6570\u6b21\uff08\u6267\u884c\u6e10\u53d8\u4e0a\u5347\uff09\uff0c\u56fe\u50cf\u5c06\u9010\u6e10\u53d8\u6210\u6700\u4ee4\u4eba\u5174\u594b\u7684\u56fe\u50cf\uff08\u7528\u4e8e\u795e\u7ecf\u5143\uff09\u3002 \u8fd9\u662f\u4e00\u79cd\u6709\u7528\u7684\u6280\u672f\uff0c\u7528\u4e8e\u53ef\u89c6\u5316\u795e\u7ecf\u5143\u6b63\u5728\u5bfb\u627e\u7684\u8f93\u5165\u7c7b\u578b\u3002 \u6700\u540e\uff0c\u5982\u679c\u4f7f\u7528\u81ea\u7f16\u7801\u5668\u6267\u884c\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\uff08\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5206\u7c7b\u4efb\u52a1\uff09\uff0c\u9a8c\u8bc1\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u7684\u7279\u5f81\u662f\u5426\u6709\u7528\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u662f\u6d4b\u91cf\u5206\u7c7b\u5668\u7684\u6027\u80fd\u3002 \u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u4f7f\u7528\u6808\u5f0f\u81ea\u7f16\u7801\u5668 \u6b63\u5982\u6211\u4eec\u5728\u7b2c 11 \u7ae0\u4e2d\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u5982\u679c\u60a8\u6b63\u5728\u5904\u7406\u590d\u6742\u7684\u76d1\u7763\u4efb\u52a1\uff0c\u4f46\u60a8\u6ca1\u6709\u5927\u91cf\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u5219\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u627e\u5230\u6267\u884c\u7c7b\u4f3c\u4efb\u52a1\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u7136\u540e\u91cd\u65b0\u4f7f\u7528\u5176\u8f83\u4f4e\u5c42\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u4ec5\u4f7f\u7528\u5f88\u5c11\u7684\u8bad\u7ec3\u6570\u636e\u6765\u8bad\u7ec3\u9ad8\u6027\u80fd\u6a21\u578b\uff0c\u56e0\u4e3a\u60a8\u7684\u795e\u7ecf\u7f51\u7edc\u4e0d\u5fc5\u5b66\u4e60\u6240\u6709\u7684\u4f4e\u7ea7\u7279\u5f81\uff1b\u5b83\u5c06\u91cd\u65b0\u4f7f\u7528\u73b0\u6709\u7f51\u7edc\u5b66\u4e60\u7684\u7279\u5f81\u68c0\u6d4b\u5668\u3002 \u540c\u6837\uff0c\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u5927\u578b\u6570\u636e\u96c6\uff0c\u4f46\u5927\u591a\u6570\u6570\u636e\u96c6\u672a\u6807\u8bb0\uff0c\u60a8\u53ef\u4ee5\u5148\u4f7f\u7528\u6240\u6709\u6570\u636e\u8bad\u7ec3\u6808\u5f0f\u81ea\u7f16\u7801\u5668\uff0c\u7136\u540e\u91cd\u65b0\u4f7f\u7528\u8f83\u4f4e\u5c42\u4e3a\u5b9e\u9645\u4efb\u52a1\u521b\u5efa\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4f7f\u7528\u6807\u8bb0\u6570\u636e\u5bf9\u5176\u8fdb\u884c\u8bad\u7ec3\u3002 \u4f8b\u5982\uff0c\u56fe 15-8 \u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u4e3a\u5206\u7c7b\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u3002 \u6b63\u5982\u524d\u9762\u8ba8\u8bba\u8fc7\u7684\uff0c\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u672c\u8eab\u901a\u5e38\u6bcf\u6b21\u90fd\u4f1a\u8bad\u7ec3\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u3002 \u5728\u8bad\u7ec3\u5206\u7c7b\u5668\u65f6\uff0c\u5982\u679c\u60a8\u786e\u5b9e\u6ca1\u6709\u592a\u591a\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u5219\u53ef\u80fd\u9700\u8981\u51bb\u7ed3\u9884\u8bad\u7ec3\u5c42\uff08\u81f3\u5c11\u662f\u8f83\u4f4e\u5c42\uff09\u3002 \u8fd9\u79cd\u60c5\u51b5\u5b9e\u9645\u4e0a\u5f88\u5e38\u89c1\uff0c\u56e0\u4e3a\u6784\u5efa\u4e00\u4e2a\u5927\u578b\u7684\u65e0\u6807\u7b7e\u6570\u636e\u96c6\u901a\u5e38\u5f88\u4fbf\u5b9c\uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u53ef\u4ee5\u4ece\u4e92\u8054\u7f51\u4e0a\u4e0b\u8f7d\u6570\u767e\u4e07\u5f20\u56fe\u50cf\uff09\uff0c\u4f46\u53ea\u80fd\u7531\u4eba\u7c7b\u53ef\u9760\u5730\u6807\u8bb0\u5b83\u4eec\uff08\u4f8b\u5982\uff0c\u5c06\u56fe\u50cf\u5206\u7c7b\u4e3a\u53ef\u7231\u6216\u4e0d\u53ef\u7231\uff09\u3002 \u6807\u8bb0\u5b9e\u4f8b\u662f\u8017\u65f6\u4e14\u6602\u8d35\u7684\uff0c\u56e0\u6b64\u53ea\u6709\u51e0\u5343\u4e2a\u6807\u8bb0\u5b9e\u4f8b\u662f\u5f88\u5e38\u89c1\u7684\u3002 \u6b63\u5982\u6211\u4eec\u524d\u9762\u6240\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u5f53\u524d\u6df1\u5ea6\u5b66\u4e60\u6d77\u5578\u7684\u89e6\u53d1\u56e0\u7d20\u4e4b\u4e00\u662f Geoffrey Hinton \u7b49\u4eba\u5728 2006 \u5e74\u7684\u53d1\u73b0\uff0c\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u4ee5\u65e0\u76d1\u7763\u7684\u65b9\u5f0f\u8fdb\u884c\u9884\u8bad\u7ec3\u3002 \u4ed6\u4eec\u4f7f\u7528\u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a\u5668\uff08\u89c1\u9644\u5f55 E\uff09\uff0c\u4f46\u5728 2007 \u5e74 Yoshua Bengio \u7b49\u4eba\u8868\u660e\u81ea\u7f16\u7801\u5668\u4e5f\u8d77\u4f5c\u7528\u3002 TensorFlow \u7684\u5b9e\u73b0\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\uff1a\u53ea\u9700\u4f7f\u7528\u6240\u6709\u8bad\u7ec3\u6570\u636e\u8bad\u7ec3\u81ea\u7f16\u7801\u5668\uff0c\u7136\u540e\u91cd\u7528\u5176\u7f16\u7801\u5668\u5c42\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u795e\u7ecf\u7f51\u7edc\uff08\u6709\u5173\u5982\u4f55\u91cd\u7528\u9884\u8bad\u7ec3\u5c42\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u7b2c 11 \u7ae0\u6216\u67e5\u770b Jupyte notebooks \u4e2d\u7684\u4ee3\u7801\u793a\u4f8b\uff09\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e3a\u4e86\u5f3a\u5236\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u6709\u8da3\u7684\u7279\u6027\uff0c\u6211\u4eec\u9650\u5236\u4e86\u7f16\u7801\u5c42\u7684\u5927\u5c0f\uff0c\u4f7f\u5176\u4e0d\u591f\u5b8c\u5584\u3002 \u5b9e\u9645\u4e0a\u53ef\u4ee5\u4f7f\u7528\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684\u7ea6\u675f\uff0c\u5305\u62ec\u5141\u8bb8\u7f16\u7801\u5c42\u4e0e\u8f93\u5165\u4e00\u6837\u5927\u6216\u751a\u81f3\u66f4\u5927\u7684\u7ea6\u675f\uff0c\u5bfc\u81f4\u8fc7\u5ea6\u5b8c\u6210\u7684\u81ea\u7f16\u7801\u5668\u3002 \u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u5176\u4e2d\u7684\u4e00\u4e9b\u65b9\u6cd5\u3002 \u964d\u566a\u81ea\u7f16\u7801\uff08DAE\uff09 \u53e6\u4e00\u79cd\u5f3a\u5236\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u6709\u7528\u529f\u80fd\u7684\u65b9\u6cd5\u662f\u4e3a\u5176\u8f93\u5165\u6dfb\u52a0\u566a\u58f0\uff0c\u5bf9\u5176\u8fdb\u884c\u8bad\u7ec3\u4ee5\u6062\u590d\u539f\u59cb\u7684\u65e0\u566a\u58f0\u8f93\u5165\u3002 \u8fd9\u53ef\u4ee5\u9632\u6b62\u81ea\u7f16\u7801\u5668\u5c06\u5176\u8f93\u5165\u590d\u5236\u5230\u5176\u8f93\u51fa\uff0c\u56e0\u6b64\u6700\u7ec8\u4e0d\u5f97\u4e0d\u5728\u6570\u636e\u4e2d\u67e5\u627e\u6a21\u5f0f\u3002 \u81ea 20 \u4e16\u7eaa 80 \u5e74\u4ee3\u4ee5\u6765\uff0c\u4f7f\u7528\u81ea\u7f16\u7801\u5668\u6d88\u9664\u566a\u97f3\u7684\u60f3\u6cd5\u5df2\u7ecf\u51fa\u73b0\uff08\u4f8b\u5982\uff0c\u5728 Yann LeCun \u7684 1987 \u5e74\u7855\u58eb\u8bba\u6587\u4e2d\u63d0\u5230\u8fc7\uff09\u3002 \u5728 2008 \u5e74\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0c\u5e15\u65af\u5361\u5c14\u6587\u68ee\u7279\u7b49\u4eba\u3002 \u8868\u660e\u81ea\u7f16\u7801\u5668\u4e5f\u53ef\u7528\u4e8e\u7279\u5f81\u63d0\u53d6\u3002 \u5728 2010 \u5e74\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d Vincent \u7b49\u4eba\u5f15\u5165\u5806\u53e0\u964d\u566a\u81ea\u7f16\u7801\u5668\u3002 \u566a\u58f0\u53ef\u4ee5\u662f\u7eaf\u7cb9\u7684\u9ad8\u65af\u566a\u58f0\u6dfb\u52a0\u5230\u8f93\u5165\uff0c\u6216\u8005\u5b83\u53ef\u4ee5\u968f\u673a\u5173\u95ed\u8f93\u5165\uff0c\u5c31\u50cf drop out\uff08\u5728\u7b2c 11 \u7ae0\u4ecb\u7ecd\uff09\u3002 \u56fe 15-9 \u663e\u793a\u4e86\u8fd9\u4e24\u4e2a\u9009\u9879\u3002 TensorFlow \u5b9e\u73b0 \u5728 TensorFlow \u4e2d\u5b9e\u73b0\u53bb\u566a\u81ea\u7f16\u7801\u5668\u5e76\u4e0d\u96be\u3002 \u6211\u4eec\u4ece\u9ad8\u65af\u566a\u58f0\u5f00\u59cb\u3002 \u8fd9\u5b9e\u9645\u4e0a\u5c31\u50cf\u8bad\u7ec3\u4e00\u4e2a\u5e38\u89c4\u7684\u81ea\u7f16\u7801\u5668\u4e00\u6837\uff0c\u9664\u4e86\u7ed9\u8f93\u5165\u6dfb\u52a0\u566a\u58f0\u5916\uff0c\u91cd\u5efa\u635f\u8017\u662f\u6839\u636e\u539f\u59cb\u8f93\u5165\u8ba1\u7b97\u7684\uff1a X = tf.placeholder(tf.float32, shape=[None, n_inputs]) X_noisy = X + tf.random_normal(tf.shape(X)) [...] hidden1 = activation(tf.matmul(X_noisy, weights1) + biases1) [...] reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE [...] \u7531\u4e8e X \u7684\u5f62\u72b6\u53ea\u662f\u5728\u6784\u9020\u9636\u6bb5\u90e8\u5206\u5b9a\u4e49\u7684\uff0c\u6211\u4eec\u4e0d\u80fd\u9884\u5148\u77e5\u9053\u6211\u4eec\u5fc5\u987b\u6dfb\u52a0\u5230 X \u4e2d\u7684\u566a\u58f0\u7684\u5f62\u72b6\u3002\u6211\u4eec\u4e0d\u80fd\u8c03\u7528 X.get_shape() \uff0c\u56e0\u4e3a\u8fd9\u53ea\u4f1a\u8fd4\u56de\u90e8\u5206\u5b9a\u4e49\u7684 X \u7684\u5f62\u72b6 \uff08 [None\uff0cn_inputs] \uff09\u548c random_normal() \u9700\u8981\u4e00\u4e2a\u5b8c\u5168\u5b9a\u4e49\u7684\u5f62\u72b6\uff0c\u56e0\u6b64\u4f1a\u5f15\u53d1\u5f02\u5e38\u3002 \u76f8\u53cd\uff0c\u6211\u4eec\u8c03\u7528 tf.shape(X) \uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u5c06\u5728\u8fd0\u884c\u65f6\u8fd4\u56de X \u7684\u5f62\u72b6\uff0c\u8be5\u64cd\u4f5c\u5c06\u5728\u6b64\u65f6\u5b8c\u5168\u5b9a\u4e49\u3002 \u5b9e\u65bd\u66f4\u666e\u904d\u7684 dropout \u7248\u672c,\u800c\u4e14\u8fd9\u4e2a\u7248\u672c\u5e76\u4e0d\u56f0\u96be\uff1a from tensorflow.contrib.layers import dropout keep_prob = 0.7 is_training = tf.placeholder_with_default(False, shape=(), name='is_training') X = tf.placeholder(tf.float32, shape=[None, n_inputs]) X_drop = dropout(X, keep_prob, is_training=is_training) [...] hidden1 = activation(tf.matmul(X_drop, weights1) + biases1) [...] reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE [...] \u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528 feed_dict \u5c06 is_training \u8bbe\u7f6e\u4e3a True \uff08\u5982\u7b2c 11 \u7ae0\u6240\u8ff0\uff09\uff1a sess.run(training_op, feed_dict={X: X_batch, is_training: True}) \u4f46\u662f\uff0c\u5728\u6d4b\u8bd5\u671f\u95f4\uff0c\u4e0d\u9700\u8981\u5c06 is_training \u8bbe\u7f6e\u4e3a False \uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5bf9 placeholder_with_default() \u51fd\u6570\u8c03\u7528\u7684\u9ed8\u8ba4\u503c\u3002 \u7a00\u758f\u81ea\u7f16\u7801\u5668 \u901a\u5e38\u826f\u597d\u7279\u5f81\u63d0\u53d6\u7684\u53e6\u4e00\u79cd\u7ea6\u675f\u662f\u7a00\u758f\u6027\uff1a\u901a\u8fc7\u5411\u635f\u5931\u51fd\u6570\u6dfb\u52a0\u9002\u5f53\u7684\u9879\uff0c\u81ea\u7f16\u7801\u5668\u88ab\u63a8\u52a8\u4ee5\u51cf\u5c11\u7f16\u7801\u5c42\u4e2d\u6d3b\u52a8\u795e\u7ecf\u5143\u7684\u6570\u91cf\u3002 \u4f8b\u5982\uff0c\u5b83\u53ef\u80fd\u88ab\u63a8\u5230\u7f16\u7801\u5c42\u4e2d\u5e73\u5747\u53ea\u6709 5% \u7684\u663e\u7740\u6d3b\u8dc3\u7684\u795e\u7ecf\u5143\u3002 \u8fd9\u8feb\u4f7f\u81ea\u7f16\u7801\u5668\u5c06\u6bcf\u4e2a\u8f93\u5165\u8868\u793a\u4e3a\u5c11\u91cf\u6fc0\u6d3b\u7684\u7ec4\u5408\u3002 \u56e0\u6b64\uff0c\u7f16\u7801\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u901a\u5e38\u90fd\u4f1a\u4ee3\u8868\u4e00\u4e2a\u6709\u7528\u7684\u7279\u5f81\uff08\u5982\u679c\u60a8\u6bcf\u4e2a\u6708\u53ea\u80fd\u8bf4\u51e0\u4e2a\u5b57\uff0c\u60a8\u53ef\u80fd\u4f1a\u8bd5\u7740\u8ba9\u5b83\u4eec\u503c\u5f97\u4e00\u542c\uff09\u3002 \u4e3a\u4e86\u652f\u6301\u7a00\u758f\u6a21\u578b\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5728\u6bcf\u6b21\u8bad\u7ec3\u8fed\u4ee3\u4e2d\u6d4b\u91cf\u7f16\u7801\u5c42\u7684\u5b9e\u9645\u7a00\u758f\u5ea6\u3002 \u6211\u4eec\u901a\u8fc7\u8ba1\u7b97\u6574\u4e2a\u8bad\u7ec3\u6279\u6b21\u4e2d\u7f16\u7801\u5c42\u4e2d\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u5e73\u5747\u6fc0\u6d3b\u6765\u5b9e\u73b0\u3002 \u6279\u91cf\u5927\u5c0f\u4e0d\u80fd\u592a\u5c0f\uff0c\u5426\u5219\u5e73\u5747\u6570\u4e0d\u51c6\u786e\u3002 \u4e00\u65e6\u6211\u4eec\u5bf9\u6bcf\u4e2a\u795e\u7ecf\u5143\u8fdb\u884c\u5e73\u5747\u6fc0\u6d3b\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u5411\u635f\u5931\u51fd\u6570\u6dfb\u52a0\u7a00\u758f\u635f\u5931\u6765\u60e9\u7f5a\u592a\u6d3b\u8dc3\u7684\u795e\u7ecf\u5143\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u6d4b\u91cf\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u5e73\u5747\u6fc0\u6d3b\u503c\u4e3a 0.3\uff0c\u4f46\u76ee\u6807\u7a00\u758f\u5ea6\u4e3a 0.1\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u53d7\u5230\u60e9\u7f5a\u624d\u80fd\u6fc0\u6d3b\u66f4\u5c11\u3002 \u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u5e73\u65b9\u8bef\u5dee (0.3-0.1)^2 \u6dfb\u52a0\u5230\u635f\u5931\u51fd\u6570\u4e2d\uff0c\u4f46\u5b9e\u9645\u4e0a\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 Kullback-Leibler \u6563\u5ea6\uff08\u5728\u7b2c 4 \u7ae0\u4e2d\u7b80\u8981\u8ba8\u8bba\uff09\uff0c\u5176\u5177\u6709\u6bd4\u5747\u65b9\u8bef\u5dee\u66f4\u5f3a\u7684\u68af\u5ea6\uff0c\u5982\u56fe 15-10 \u6240\u793a\u3002 \u7ed9\u5b9a\u4e24\u4e2a\u79bb\u6563\u7684\u6982\u7387\u5206\u5e03 P \u548c Q \uff0c\u8fd9\u4e9b\u5206\u5e03\u4e4b\u95f4\u7684 KL \u6563\u5ea6\uff0c\u8bb0\u4e3a Dkl(P || Q) \uff0c\u53ef\u4ee5\u4f7f\u7528\u516c\u5f0f 15-1 \u8ba1\u7b97\u3002 \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u60f3\u8981\u6d4b\u91cf\u7f16\u7801\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u5c06\u6fc0\u6d3b\u7684\u76ee\u6807\u6982\u7387 p \u4e0e\u5b9e\u9645\u6982\u7387 q \uff08\u5373\uff0c\u8bad\u7ec3\u6279\u6b21\u4e0a\u7684\u5e73\u5747\u6fc0\u6d3b\uff09\u4e4b\u95f4\u7684\u5dee\u5f02\u3002 \u6240\u4ee5KL\u6563\u5ea6\u7b80\u5316\u4e3a\u516c\u5f0f 15-2\u3002 \u4e00\u65e6\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u4e86\u7f16\u7801\u5c42\u4e2d\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u7a00\u758f\u635f\u5931\uff0c\u6211\u4eec\u5c31\u603b\u7ed3\u8fd9\u4e9b\u635f\u5931\uff0c\u5e76\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u635f\u5931\u51fd\u6570\u4e2d\u3002 \u4e3a\u4e86\u63a7\u5236\u7a00\u758f\u635f\u5931\u548c\u91cd\u6784\u635f\u5931\u7684\u76f8\u5bf9\u91cd\u8981\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7a00\u758f\u6743\u91cd\u8d85\u53c2\u6570\u4e58\u4ee5\u7a00\u758f\u635f\u5931\u3002 \u5982\u679c\u8fd9\u4e2a\u6743\u91cd\u592a\u9ad8\uff0c\u6a21\u578b\u4f1a\u7d27\u8d34\u76ee\u6807\u7a00\u758f\u5ea6\uff0c\u4f46\u5b83\u53ef\u80fd\u65e0\u6cd5\u6b63\u786e\u91cd\u5efa\u8f93\u5165\uff0c\u5bfc\u81f4\u6a21\u578b\u65e0\u7528\u3002 \u76f8\u53cd\uff0c\u5982\u679c\u5b83\u592a\u4f4e\uff0c\u6a21\u578b\u5c06\u5927\u591a\u5ffd\u7565\u7a00\u758f\u76ee\u6807\uff0c\u5b83\u4e0d\u4f1a\u5b66\u4e60\u4efb\u4f55\u6709\u8da3\u7684\u529f\u80fd\u3002 TensorFlow \u5b9e\u73b0 \u6211\u4eec\u73b0\u5728\u62e5\u6709\u4e86\u4f7f\u7528 TensorFlow \u5b9e\u73b0\u7a00\u758f\u81ea\u7f16\u7801\u5668\u6240\u9700\u7684\u5168\u90e8\u529f\u80fd\uff1a def kl_divergence(p, q): return p * tf.log(p / q) + (1 - p) * tf.log((1 - p) / (1 - q)) learning_rate = 0.01 sparsity_target = 0.1 sparsity_weight = 0.2 [...] # Build a normal autoencoder (in this example the coding layer is hidden1) optimizer = tf.train.AdamOptimizer(learning_rate) hidden1_mean = tf.reduce_mean(hidden1, axis=0) # batch mean sparsity_loss = tf.reduce_sum(kl_divergence(sparsity_target, hidden1_mean)) reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE loss = reconstruction_loss + sparsity_weight * sparsity_loss training_op = optimizer.minimize(loss) \u4e00\u4e2a\u91cd\u8981\u7684\u7ec6\u8282\u662f\u7f16\u7801\u5c42\u7684\u6fc0\u6d3b\u5fc5\u987b\u4ecb\u4e8e 0 \u548c 1 \u4e4b\u95f4\uff08\u4f46\u4e0d\u7b49\u4e8e 0 \u6216 1\uff09\uff0c\u5426\u5219 KL \u6563\u5ea6\u5c06\u8fd4\u56de NaN \uff08\u975e\u6570\u5b57\uff09\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5bf9\u7f16\u7801\u5c42\u4f7f\u7528\u903b\u8f91\u6fc0\u6d3b\u529f\u80fd\uff1a hidden1 = tf.nn.sigmoid(tf.matmul(X, weights1) + biases1) \u4e00\u4e2a\u7b80\u5355\u7684\u6280\u5de7\u53ef\u4ee5\u52a0\u901f\u6536\u655b\uff1a\u4e0d\u662f\u4f7f\u7528 MSE\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u5177\u6709\u8f83\u5927\u68af\u5ea6\u7684\u91cd\u5efa\u635f\u5931\u3002 \u4ea4\u53c9\u71b5\u901a\u5e38\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u8981\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u5bf9\u8f93\u5165\u8fdb\u884c\u89c4\u8303\u5316\u5904\u7406\uff0c\u4f7f\u5b83\u4eec\u7684\u53d6\u503c\u8303\u56f4\u4e3a 0 \u5230 1\uff0c\u5e76\u5728\u8f93\u51fa\u5c42\u4e2d\u4f7f\u7528\u903b\u8f91\u6fc0\u6d3b\u51fd\u6570\uff0c\u4ee5\u4fbf\u8f93\u51fa\u4e5f\u53d6\u503c\u4e3a 0 \u5230 1\u3002TensorFlow \u7684 sigmoid_cross_entropy_with_logits() \u51fd\u6570\u8d1f\u8d23 \u6709\u6548\u5730\u5c06 logistic\uff08sigmoid\uff09\u6fc0\u6d3b\u51fd\u6570\u5e94\u7528\u4e8e\u8f93\u51fa\u5e76\u8ba1\u7b97\u4ea4\u53c9\u71b5\uff1a [...] logits = tf.matmul(hidden1, weights2) + biases2) outputs = tf.nn.sigmoid(logits) reconstruction_loss = tf.reduce_sum( tf.nn.sigmoid_cross_entropy_with_logits(labels=X, logits=logits)) \u8bf7\u6ce8\u610f\uff0c\u8bad\u7ec3\u671f\u95f4\u4e0d\u9700\u8981\u8f93\u51fa\u64cd\u4f5c\uff08\u6211\u4eec\u4ec5\u5728\u6211\u4eec\u60f3\u8981\u67e5\u770b\u91cd\u5efa\u65f6\u624d\u4f7f\u7528\u5b83\uff09\u3002 \u53d8\u5206\u81ea\u7f16\u7801\u5668\uff08VAE\uff09 Diederik Kingma \u548c Max Welling \u4e8e 2014 \u5e74\u63a8\u51fa\u4e86\u53e6\u4e00\u7c7b\u91cd\u8981\u7684\u81ea\u7f16\u7801\u5668\uff0c\u5e76\u8fc5\u901f\u6210\u4e3a\u6700\u53d7\u6b22\u8fce\u7684\u81ea\u7f16\u7801\u5668\u7c7b\u578b\u4e4b\u4e00\uff1a\u53d8\u5206\u81ea\u7f16\u7801\u5668\u3002 \u5b83\u4eec\u4e0e\u6211\u4eec\u8fc4\u4eca\u4e3a\u6b62\u8ba8\u8bba\u7684\u6240\u6709\u81ea\u7f16\u7801\u5668\u5b8c\u5168\u4e0d\u540c\uff0c\u7279\u522b\u662f\uff1a \u5b83\u4eec\u662f\u6982\u7387\u81ea\u7f16\u7801\u5668\uff0c\u610f\u5473\u7740\u5373\u4f7f\u5728\u8bad\u7ec3\u4e4b\u540e\uff0c\u5b83\u4eec\u7684\u8f93\u51fa\u90e8\u5206\u4e5f\u662f\u5076\u7136\u786e\u5b9a\u7684\uff08\u76f8\u5bf9\u4e8e\u4ec5\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u968f\u673a\u6027\u7684\u81ea\u7f16\u7801\u5668\u7684\u53bb\u566a\uff09\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u4eec\u662f\u751f\u6210\u81ea\u7f16\u7801\u5668\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u751f\u6210\u770b\u8d77\u6765\u50cf\u4ece\u8bad\u7ec3\u96c6\u4e2d\u91c7\u6837\u7684\u65b0\u5b9e\u4f8b\u3002 \u8fd9\u4e24\u4e2a\u5c5e\u6027\u4f7f\u5b83\u4eec\u4e0e RBM \u975e\u5e38\u76f8\u4f3c\uff08\u89c1\u9644\u5f55 E\uff09\uff0c\u4f46\u5b83\u4eec\u66f4\u5bb9\u6613\u8bad\u7ec3\uff0c\u5e76\u4e14\u53d6\u6837\u8fc7\u7a0b\u66f4\u5feb\uff08\u5728 RBM \u4e4b\u524d\uff0c\u60a8\u9700\u8981\u7b49\u5f85\u7f51\u7edc\u7a33\u5b9a\u5728\u201c\u70ed\u5e73\u8861\u201d\u4e4b\u540e\u624d\u80fd\u8fdb\u884c\u53d6\u6837\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff09 \u6211\u4eec\u6765\u770b\u770b\u4ed6\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u56fe 15-11\uff08\u5de6\uff09\u663e\u793a\u4e86\u4e00\u4e2a\u53d8\u5206\u81ea\u7f16\u7801\u5668\u3002 \u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u8ba4\u8bc6\u5230\u6240\u6709\u81ea\u7f16\u7801\u5668\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u7f16\u7801\u5668\u540e\u8ddf\u89e3\u7801\u5668\uff08\u5728\u672c\u4f8b\u4e2d\uff0c\u5b83\u4eec\u90fd\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\uff09\uff0c\u4f46\u6709\u4e00\u4e2a\u8f6c\u6298\u70b9\uff1a\u4e0d\u662f\u76f4\u63a5\u4e3a\u7ed9\u5b9a\u7684\u8f93\u5165\u751f\u6210\u7f16\u7801 \uff0c\u7f16\u7801\u5668\u4ea7\u751f\u5e73\u5747\u7f16\u7801 \u03bc \u548c\u6807\u51c6\u5dee \u03c3 \u3002 \u7136\u540e\u4ece\u5e73\u5747\u503c \u03bc \u548c\u6807\u51c6\u5dee \u03c3 \u7684\u9ad8\u65af\u5206\u5e03\u968f\u673a\u91c7\u6837\u5b9e\u9645\u7f16\u7801\u3002 \u4e4b\u540e\uff0c\u89e3\u7801\u5668\u6b63\u5e38\u89e3\u7801\u91c7\u6837\u7684\u7f16\u7801\u3002 \u8be5\u56fe\u7684\u53f3\u4fa7\u90e8\u5206\u663e\u793a\u4e86\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u901a\u8fc7\u6b64\u81ea\u7f16\u7801\u5668\u3002 \u9996\u5148\uff0c\u7f16\u7801\u5668\u4ea7\u751f \u03bc \u548c \u03c3 \uff0c\u968f\u540e\u5bf9\u7f16\u7801\u8fdb\u884c\u968f\u673a\u91c7\u6837\uff08\u6ce8\u610f\u5b83\u4e0d\u662f\u5b8c\u5168\u4f4d\u4e8e \u03bc \u5904\uff09\uff0c\u6700\u540e\u5bf9\u7f16\u7801\u8fdb\u884c\u89e3\u7801\uff0c\u6700\u7ec8\u7684\u8f93\u51fa\u4e0e\u8bad\u7ec3\u5b9e\u4f8b\u7c7b\u4f3c\u3002 \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u5c3d\u7ba1\u8f93\u5165\u53ef\u80fd\u5177\u6709\u975e\u5e38\u590d\u6742\u7684\u5206\u5e03\uff0c\u4f46\u53d8\u5206\u81ea\u7f16\u7801\u5668\u503e\u5411\u4e8e\u4ea7\u751f\u7f16\u7801\uff0c\u770b\u8d77\u6765\u597d\u50cf\u5b83\u4eec\u662f\u4ece\u7b80\u5355\u7684\u9ad8\u65af\u5206\u5e03\u91c7\u6837\u7684\uff1a\u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u635f\u5931\u51fd\u6570\uff08\u5c06\u5728\u4e0b\u9762\u8ba8\u8bba\uff09\u63a8\u52a8 \u7f16\u7801\u5728\u7f16\u7801\u7a7a\u95f4\uff08\u4e5f\u79f0\u4e3a\u6f5c\u5728\u7a7a\u95f4\uff09\u5185\u9010\u6e10\u8fc1\u79fb\u4ee5\u5360\u636e\u770b\u8d77\u6765\u50cf\u9ad8\u65af\u70b9\u96c6\u6210\u7684\u4e91\u7684\u5927\u81f4\uff08\u8d85\uff09\u7403\u5f62\u533a\u57df\u3002 \u4e00\u4e2a\u91cd\u8981\u7684\u7ed3\u679c\u662f\uff0c\u5728\u8bad\u7ec3\u4e86\u4e00\u4e2a\u53d8\u5206\u81ea\u7f16\u7801\u5668\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff1a\u53ea\u9700\u4ece\u9ad8\u65af\u5206\u5e03\u4e2d\u62bd\u53d6\u4e00\u4e2a\u968f\u673a\u7f16\u7801\uff0c\u5bf9\u5b83\u8fdb\u884c\u89e3\u7801\u5c31\u53ef\u4ee5\u4e86\uff01 \u90a3\u4e48\u8ba9\u6211\u4eec\u770b\u770b\u635f\u5931\u51fd\u6570\u3002 \u5b83\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u3002 \u9996\u5148\u662f\u901a\u5e38\u7684\u91cd\u5efa\u635f\u5931\uff0c\u63a8\u52a8\u81ea\u7f16\u7801\u5668\u91cd\u73b0\u5176\u8f93\u5165\uff08\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u71b5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u524d\u6240\u8ff0\uff09\u3002 \u7b2c\u4e8c\u79cd\u662f\u6f5c\u5728\u7684\u635f\u5931\uff0c\u63a8\u52a8\u81ea\u7f16\u7801\u5668\u4f7f\u7f16\u7801\u770b\u8d77\u6765\u50cf\u662f\u4ece\u7b80\u5355\u7684\u9ad8\u65af\u5206\u5e03\u4e2d\u91c7\u6837\uff0c\u4e3a\u6b64\u6211\u4eec\u4f7f\u7528\u76ee\u6807\u5206\u5e03\uff08\u9ad8\u65af\u5206\u5e03\uff09\u4e0e\u7f16\u7801\u5b9e\u9645\u5206\u5e03\u4e4b\u95f4\u7684 KL \u6563\u5ea6\u3002 \u6570\u5b66\u6bd4\u4ee5\u524d\u590d\u6742\u4e00\u70b9\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u9ad8\u65af\u566a\u58f0\uff0c\u5b83\u9650\u5236\u4e86\u53ef\u4ee5\u4f20\u8f93\u5230\u7f16\u7801\u5c42\u7684\u4fe1\u606f\u91cf\uff08\u4ece\u800c\u63a8\u52a8\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u6709\u7528\u7684\u7279\u5f81\uff09\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e9b\u65b9\u7a0b\u7b80\u5316\u4e3a\u4e0b\u9762\u7684\u6f5c\u5728\u635f\u5931\u4ee3\u7801\uff1a eps = 1e-10 # smoothing term to avoid computing log(0) which is NaN latent_loss = 0.5 * tf.reduce_sum( tf.square(hidden3_sigma) + tf.square(hidden3_mean) - 1 - tf.log(eps + tf.square(hidden3_sigma))) \u4e00\u79cd\u5e38\u89c1\u7684\u53d8\u4f53\u662f\u8bad\u7ec3\u7f16\u7801\u5668\u8f93\u51fa \u03b3= log(\u03c3^2) \u800c\u4e0d\u662f \u03c3 \u3002 \u53ea\u8981\u6211\u4eec\u9700\u8981 \u03c3 \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97 \u03c3= exp(2/\u03b3) \u3002 \u8fd9\u4f7f\u5f97\u7f16\u7801\u5668\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u6355\u83b7\u4e0d\u540c\u6bd4\u4f8b\u7684 \u03c3 \uff0c\u4ece\u800c\u6709\u52a9\u4e8e\u52a0\u5feb\u6536\u655b\u901f\u5ea6\u3002 \u6f5c\u5728\u635f\u5931\u7ed3\u675f\u4f1a\u53d8\u5f97\u66f4\u7b80\u5355\u4e00\u4e9b\uff1a latent_loss = 0.5 * tf.reduce_sum( tf.exp(hidden3_gamma) + tf.square(hidden3_mean) - 1 - hidden3_gamma) \u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 log(\u03c3^2) \u53d8\u4f53\u6784\u5efa\u56fe 15-11\uff08\u5de6\uff09\u6240\u793a\u7684\u53d8\u5206\u81ea\u7f16\u7801\u5668: n_inputs = 28 * 28 # for MNIST n_hidden1 = 500 n_hidden2 = 500 n_hidden3 = 20 # codings n_hidden4 = n_hidden2 n_hidden5 = n_hidden1 n_outputs = n_inputs learning_rate = 0.001 with tf.contrib.framework.arg_scope( [fully_connected], activation_fn=tf.nn.elu, weights_initializer=tf.contrib.layers.variance_scaling_initializer()): X = tf.placeholder(tf.float32, [None, n_inputs]) hidden1 = fully_connected(X, n_hidden1) hidden2 = fully_connected(hidden1, n_hidden2) hidden3_mean = fully_connected(hidden2, n_hidden3, activation_fn=None) hidden3_gamma = fully_connected(hidden2, n_hidden3, activation_fn=None) hidden3_sigma = tf.exp(0.5 * hidden3_gamma) noise = tf.random_normal(tf.shape(hidden3_sigma), dtype=tf.float32) hidden3 = hidden3_mean + hidden3_sigma * noise hidden4 = fully_connected(hidden3, n_hidden4) hidden5 = fully_connected(hidden4, n_hidden5) logits = fully_connected(hidden5, n_outputs, activation_fn=None) outputs = tf.sigmoid(logits) reconstruction_loss = tf.reduce_sum( tf.nn.sigmoid_cross_entropy_with_logits(labels=X, logits=logits)) latent_loss = 0.5 * tf.reduce_sum( tf.exp(hidden3_gamma) + tf.square(hidden3_mean) - 1 - hidden3_gamma) cost = reconstruction_loss + latent_loss optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(cost) init = tf.global_variables_initializer() \u751f\u6210\u6570\u5b57 \u73b0\u5728\u8ba9\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u53d8\u5206\u81ea\u7f16\u7801\u5668\u6765\u751f\u6210\u770b\u8d77\u6765\u50cf\u624b\u5199\u6570\u5b57\u7684\u56fe\u50cf\u3002 \u6211\u4eec\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u8bad\u7ec3\u6a21\u578b\uff0c\u7136\u540e\u4ece\u9ad8\u65af\u5206\u5e03\u4e2d\u5bf9\u968f\u673a\u7f16\u7801\u8fdb\u884c\u91c7\u6837\u5e76\u5bf9\u5b83\u4eec\u8fdb\u884c\u89e3\u7801\u3002 import numpy as np n_digits = 60 n_epochs = 50 batch_size = 150 with tf.Session() as sess: init.run() for epoch in range(n_epochs): n_batches = mnist.train.num_examples // batch_size for iteration in range(n_batches): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch}) codings_rnd = np.random.normal(size=[n_digits, n_hidden3]) outputs_val = outputs.eval(feed_dict={hidden3: codings_rnd}) \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7531autoencoder\u751f\u6210\u7684\u201c\u624b\u5199\u201d\u6570\u5b57\u662f\u4ec0\u4e48\u6837\u7684\uff08\u53c2\u89c1\u56fe15-12\uff09\uff1a for iteration in range(n_digits): plt.subplot(n_digits, 10, iteration + 1) plot_image(outputs_val[iteration]) \u5176\u4ed6\u81ea\u7f16\u7801\u5668 \u76d1\u7763\u5f0f\u5b66\u4e60\u5728\u56fe\u50cf\u8bc6\u522b\uff0c\u8bed\u97f3\u8bc6\u522b\uff0c\u6587\u672c\u7ffb\u8bd1\u7b49\u65b9\u9762\u53d6\u5f97\u7684\u60ca\u4eba\u6210\u5c31\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u63a9\u76d6\u4e86\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u5c40\u9762\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u6b63\u5728\u84ec\u52c3\u53d1\u5c55\u3002 \u81ea\u7f16\u7801\u5668\u548c\u5176\u4ed6\u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u7684\u65b0\u4f53\u7cfb\u7ed3\u6784\u5b9a\u671f\u53d1\u660e\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u65e0\u6cd5\u5728\u672c\u4e66\u4e2d\u5168\u9762\u4ecb\u7ecd\u5b83\u4eec\u3002 \u4ee5\u4e0b\u662f\u60a8\u53ef\u80fd\u60f3\u8981\u67e5\u770b\u7684\u51e0\u79cd\u7c7b\u578b\u7684\u81ea\u7f16\u7801\u5668\u7684\u7b80\u8981\u8bf4\u660e\uff08\u7edd\u975e\u8be6\u5c3d\u65e0\u9057\uff09\uff1a \u538b\u7f29\u81ea\u7f16\u7801\u5668\uff08CAE\uff09 \u81ea\u7f16\u7801\u5668\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u53d7\u5230\u7ea6\u675f\uff0c\u56e0\u6b64\u4e0e\u8f93\u5165\u6709\u5173\u7684\u7f16\u7801\u7684\u5bfc\u6570\u5f88\u5c0f\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u4e24\u4e2a\u7c7b\u4f3c\u7684\u8f93\u5165\u5fc5\u987b\u5177\u6709\u76f8\u4f3c\u7684\u7f16\u7801\u3002 \u6808\u5f0f\u5377\u79ef\u81ea\u7f16\u7801\u5668\uff08SCAE\uff09 \u5b66\u4e60\u901a\u8fc7\u91cd\u6784\u901a\u8fc7\u5377\u79ef\u5c42\u5904\u7406\u7684\u56fe\u50cf\u6765\u63d0\u53d6\u89c6\u89c9\u7279\u5f81\u7684\u81ea\u7f16\u7801\u5668\u3002 \u751f\u6210\u968f\u673a\u7f51\u7edc\uff08GSN\uff09 \u6d88\u9664\u81ea\u7f16\u7801\u5668\u7684\u6cdb\u5316\uff0c\u589e\u52a0\u4e86\u751f\u6210\u6570\u636e\u7684\u80fd\u529b\u3002 \u8d62\u5bb6\u901a\u5403\uff08WTA\uff09\u7684\u81ea\u7f16\u7801 \u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u5728\u8ba1\u7b97\u7f16\u7801\u5c42\u4e2d\u6240\u6709\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u4e4b\u540e\uff0c\u53ea\u4fdd\u7559\u8bad\u7ec3\u6279\u6b21\u4e0a\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u524d k% \u6fc0\u6d3b\uff0c\u5176\u4f59\u90e8\u5206\u8bbe\u4e3a\u96f6\u3002 \u81ea\u7136\u8fd9\u5bfc\u81f4\u7a00\u758f\u7684\u7f16\u7801\u3002 \u800c\u4e14\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u7684 WTA \u65b9\u6cd5\u6765\u4ea7\u751f\u7a00\u758f\u5377\u79ef\u81ea\u7f16\u7801\u5668\u3002 \u5bf9\u6297\u81ea\u7f16\u7801\u5668\uff08AAE\uff09 \u4e00\u4e2a\u7f51\u7edc\u88ab\u8bad\u7ec3\u6765\u91cd\u73b0\u5b83\u7684\u8f93\u5165\uff0c\u540c\u65f6\u53e6\u4e00\u4e2a\u7f51\u7edc\u88ab\u8bad\u7ec3\u53bb\u627e\u5230\u7b2c\u4e00\u4e2a\u7f51\u7edc\u4e0d\u80fd\u6b63\u786e\u91cd\u5efa\u7684\u8f93\u5165\u3002 \u8fd9\u63a8\u52a8\u4e86\u7b2c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u5065\u58ee\u7684\u7f16\u7801\u3002","title":"15.\u81ea\u7f16\u7801\u5668"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_1","text":"\u81ea\u7f16\u7801\u5668\u662f\u80fd\u591f\u5728\u65e0\u76d1\u7763\u7684\u60c5\u51b5\u4e0b\u5b66\u4e60\u8f93\u5165\u6570\u636e\u7684\u6709\u6548\u8868\u793a\uff08\u53eb\u505a\u7f16\u7801\uff09\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff08\u5373\uff0c\u8bad\u7ec3\u96c6\u662f\u672a\u6807\u8bb0\uff09\u3002\u8fd9\u4e9b\u7f16\u7801\u901a\u5e38\u5177\u6709\u6bd4\u8f93\u5165\u6570\u636e\u4f4e\u5f97\u591a\u7684\u7ef4\u5ea6\uff0c\u4f7f\u5f97\u81ea\u7f16\u7801\u5668\u5bf9\u964d\u7ef4\u6709\u7528\uff08\u53c2\u89c1\u7b2c 8 \u7ae0\uff09\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u81ea\u7f16\u7801\u5668\u53ef\u4ee5\u4f5c\u4e3a\u5f3a\u5927\u7684\u7279\u5f81\u68c0\u6d4b\u5668\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u4e8e\u65e0\u76d1\u7763\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u9884\u8bad\u7ec3\uff08\u6b63\u5982\u6211\u4eec\u5728\u7b2c 11 \u7ae0\u4e2d\u8ba8\u8bba\u8fc7\u7684\uff09\u3002\u6700\u540e\uff0c\u4ed6\u4eec\u80fd\u591f\u968f\u673a\u751f\u6210\u4e0e\u8bad\u7ec3\u6570\u636e\u975e\u5e38\u76f8\u4f3c\u7684\u65b0\u6570\u636e\uff1b\u8fd9\u88ab\u79f0\u4e3a\u751f\u6210\u6a21\u578b\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728\u8138\u90e8\u56fe\u7247\u4e0a\u8bad\u7ec3\u81ea\u7f16\u7801\u5668\uff0c\u7136\u540e\u53ef\u4ee5\u751f\u6210\u65b0\u8138\u90e8\u3002 \u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u81ea\u7f16\u7801\u5668\u53ea\u9700\u5b66\u4e60\u5c06\u8f93\u5165\u590d\u5236\u5230\u5176\u8f93\u51fa\u5373\u53ef\u5de5\u4f5c\u3002 \u8fd9\u542c\u8d77\u6765\u50cf\u662f\u4e00\u4ef6\u5c0f\u4e8b\uff0c\u4f46\u6211\u4eec\u4f1a\u770b\u5230\u4ee5\u5404\u79cd\u65b9\u5f0f\u7ea6\u675f\u7f51\u7edc\u53ef\u80fd\u4f1a\u8ba9\u5b83\u53d8\u5f97\u76f8\u5f53\u56f0\u96be\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u9650\u5236\u5185\u90e8\u8868\u793a\u7684\u5927\u5c0f\uff0c\u6216\u8005\u53ef\u4ee5\u5411\u8f93\u5165\u6dfb\u52a0\u566a\u58f0\u5e76\u8bad\u7ec3\u7f51\u7edc\u4ee5\u6062\u590d\u539f\u59cb\u8f93\u5165\u3002\u8fd9\u4e9b\u7ea6\u675f\u9632\u6b62\u81ea\u7f16\u7801\u5668\u5c06\u8f93\u5165\u76f4\u63a5\u590d\u5236\u5230\u8f93\u51fa\uff0c\u8fd9\u8feb\u4f7f\u5b83\u5b66\u4e60\u8868\u793a\u6570\u636e\u7684\u6709\u6548\u65b9\u6cd5\u3002 \u7b80\u8a00\u4e4b\uff0c\u7f16\u7801\u662f\u81ea\u7f16\u7801\u5668\u5728\u67d0\u4e9b\u9650\u5236\u6761\u4ef6\u4e0b\u5c1d\u8bd5\u5b66\u4e60\u6052\u7b49\u51fd\u6570\u7684\u526f\u4ea7\u54c1\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u66f4\u6df1\u5165\u5730\u89e3\u91ca\u81ea\u7f16\u7801\u5668\u5982\u4f55\u5de5\u4f5c\uff0c\u53ef\u4ee5\u65bd\u52a0\u4ec0\u4e48\u7c7b\u578b\u7684\u7ea6\u675f\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 TensorFlow \u5b9e\u73b0\u5b83\u4eec\uff0c\u65e0\u8bba\u662f\u7528\u6765\u964d\u7ef4\uff0c\u7279\u5f81\u63d0\u53d6\uff0c\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u8fd8\u662f\u4f5c\u4e3a\u751f\u6210\u5f0f\u6a21\u578b\u3002","title":"\u5341\u4e94\u3001\u81ea\u7f16\u7801\u5668"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_2","text":"\u60a8\u53d1\u73b0\u4ee5\u4e0b\u54ea\u4e00\u4e2a\u6570\u5b57\u5e8f\u5217\u6700\u5bb9\u6613\u8bb0\u5fc6\uff1f 40, 27, 25, 36, 81, 57, 10, 73, 19, 68 50, 25, 76, 38, 19, 58, 29, 88, 44, 22, 11, 34, 17, 52, 26, 13, 40, 20 \u4e4d\u4e00\u770b\uff0c\u7b2c\u4e00\u4e2a\u5e8f\u5217\u4f3c\u4e4e\u5e94\u8be5\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u5b83\u8981\u77ed\u5f97\u591a\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4ed4\u7ec6\u89c2\u5bdf\u7b2c\u4e8c\u4e2a\u5e8f\u5217\uff0c\u5219\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u5b83\u9075\u5faa\u4e24\u6761\u7b80\u5355\u89c4\u5219\uff1a\u5076\u6570\u662f\u524d\u9762\u6570\u7684\u4e00\u534a\uff0c\u5947\u6570\u662f\u524d\u9762\u6570\u7684\u4e09\u500d\u52a0\u4e00\uff08\u8fd9\u662f\u4e00\u4e2a\u7740\u540d\u7684\u5e8f\u5217\uff0c\u79f0\u4e3a\u96f9\u77f3\u5e8f\u5217\uff09\u3002\u4e00\u65e6\u4f60\u6ce8\u610f\u5230\u8fd9\u79cd\u6a21\u5f0f\uff0c\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u6bd4\u7b2c\u4e00\u4e2a\u66f4\u5bb9\u6613\u8bb0\u5fc6\uff0c\u56e0\u4e3a\u4f60\u53ea\u9700\u8981\u8bb0\u4f4f\u4e24\u4e2a\u89c4\u5219\uff0c\u7b2c\u4e00\u4e2a\u6570\u5b57\u548c\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u53ef\u4ee5\u5feb\u901f\u8f7b\u677e\u5730\u8bb0\u4f4f\u975e\u5e38\u957f\u7684\u5e8f\u5217\uff0c\u5219\u60a8\u4e0d\u4f1a\u5728\u610f\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u4e2d\u5b58\u5728\u7684\u6a21\u5f0f\u3002 \u4f60\u53ea\u9700\u8981\u4e86\u89e3\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u662f\u8fd9\u6837\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5f88\u96be\u8bb0\u4f4f\u957f\u5e8f\u5217\uff0c\u56e0\u6b64\u8bc6\u522b\u6a21\u5f0f\u975e\u5e38\u6709\u7528\uff0c\u5e76\u4e14\u5e0c\u671b\u80fd\u591f\u6f84\u6e05\u4e3a\u4ec0\u4e48\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u9650\u5236\u81ea\u7f16\u7801\u5668\u4f1a\u4fc3\u4f7f\u5b83\u53d1\u73b0\u5e76\u5229\u7528\u6570\u636e\u4e2d\u7684\u6a21\u5f0f\u3002 \u8bb0\u5fc6\uff0c\u611f\u77e5\u548c\u6a21\u5f0f\u5339\u914d\u4e4b\u95f4\u7684\u5173\u7cfb\u5728 20 \u4e16\u7eaa 70 \u5e74\u4ee3\u65e9\u671f\u7531 William Chase \u548c Herbert Simon \u7740\u540d\u7814\u7a76\u3002 \u4ed6\u4eec\u89c2\u5bdf\u5230\uff0c\u4e13\u5bb6\u68cb\u624b\u80fd\u591f\u901a\u8fc7\u89c2\u770b\u68cb\u76d85\u79d2\u949f\u6765\u8bb0\u5fc6\u6240\u6709\u68cb\u5b50\u7684\u4f4d\u7f6e\uff0c\u8fd9\u662f\u5927\u591a\u6570\u4eba\u8ba4\u4e3a\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u4efb\u52a1\u3002 \u7136\u800c\uff0c\u53ea\u6709\u5f53\u8fd9\u4e9b\u68cb\u5b50\u88ab\u653e\u7f6e\u5728\u73b0\u5b9e\u4f4d\u7f6e\uff08\u6765\u81ea\u5b9e\u9645\u6bd4\u8d5b\uff09\u65f6\u624d\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u800c\u4e0d\u662f\u968f\u673a\u653e\u7f6e\u68cb\u5b50\u3002 \u56fd\u9645\u8c61\u68cb\u4e13\u5bb6\u6ca1\u6709\u6bd4\u4f60\u66f4\u597d\u7684\u8bb0\u5fc6\uff0c\u4ed6\u4eec\u53ea\u662f\u66f4\u5bb9\u6613\u770b\u5230\u56fd\u9645\u8c61\u68cb\u6a21\u5f0f\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u4ed6\u4eec\u5bf9\u6bd4\u8d5b\u7684\u7ecf\u9a8c\u3002 \u6ce8\u610f\u6a21\u5f0f\u6709\u52a9\u4e8e\u4ed6\u4eec\u6709\u6548\u5730\u5b58\u50a8\u4fe1\u606f\u3002 \u5c31\u50cf\u8fd9\u4e2a\u8bb0\u5fc6\u5b9e\u9a8c\u4e2d\u7684\u8c61\u68cb\u68cb\u624b\u4e00\u6837\uff0c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u4f1a\u67e5\u770b\u8f93\u5165\u4fe1\u606f\uff0c\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u9ad8\u6548\u7684\u5185\u90e8\u8868\u793a\u5f62\u5f0f\uff0c\u7136\u540e\u5410\u51fa\u4e00\u4e9b\uff08\u5e0c\u671b\uff09\u770b\u8d77\u6765\u975e\u5e38\u63a5\u8fd1\u8f93\u5165\u7684\u4e1c\u897f\u3002 \u81ea\u7f16\u7801\u5668\u603b\u662f\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u5185\u90e8\u8868\u793a\u7684\u7f16\u7801\u5668\uff08\u6216\u8bc6\u522b\u7f51\u7edc\uff09\uff0c\u7136\u540e\u662f\u5c06\u5185\u90e8\u8868\u793a\u8f6c\u6362\u4e3a\u8f93\u51fa\u7684\u89e3\u7801\u5668\uff08\u6216\u751f\u6210\u7f51\u7edc\uff09\uff08\u89c1\u56fe 15-1\uff09\u3002 \u5982\u60a8\u6240\u89c1\uff0c\u81ea\u7f16\u7801\u5668\u901a\u5e38\u5177\u6709\u4e0e\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff0c\u8bf7\u53c2\u9605\u7b2c 10 \u7ae0\uff09\u76f8\u540c\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u4f46\u8f93\u51fa\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u6570\u91cf\u5fc5\u987b\u7b49\u4e8e\u8f93\u5165\u6570\u91cf\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u7531\u4e24\u4e2a\u795e\u7ecf\u5143\uff08\u7f16\u7801\u5668\uff09\u7ec4\u6210\u7684\u9690\u85cf\u5c42\u548c\u4e00\u4e2a\u7531\u4e09\u4e2a\u795e\u7ecf\u5143\uff08\u89e3\u7801\u5668\uff09\u7ec4\u6210\u7684\u8f93\u51fa\u5c42\u3002 \u7531\u4e8e\u81ea\u7f16\u7801\u5668\u8bd5\u56fe\u91cd\u6784\u8f93\u5165\uff0c\u6240\u4ee5\u8f93\u51fa\u901a\u5e38\u88ab\u79f0\u4e3a\u91cd\u5efa\uff0c\u5e76\u4e14\u635f\u5931\u51fd\u6570\u5305\u542b\u91cd\u5efa\u635f\u5931\uff0c\u5f53\u91cd\u5efa\u4e0e\u8f93\u5165\u4e0d\u540c\u65f6\uff0c\u91cd\u5efa\u635f\u5931\u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c\u60e9\u7f5a\u3002 \u7531\u4e8e\u5185\u90e8\u8868\u793a\u5177\u6709\u6bd4\u8f93\u5165\u6570\u636e\u66f4\u4f4e\u7684\u7ef4\u5ea6\uff08\u5b83\u662f 2D \u800c\u4e0d\u662f 3D\uff09\uff0c\u6240\u4ee5\u81ea\u7f16\u7801\u5668\u88ab\u8ba4\u4e3a\u662f\u4e0d\u5b8c\u6574\u7684\u3002 \u4e0d\u5b8c\u6574\u7684\u81ea\u7f16\u7801\u5668\u4e0d\u80fd\u7b80\u5355\u5730\u5c06\u5176\u8f93\u5165\u590d\u5236\u5230\u7f16\u7801\uff0c\u4f46\u5b83\u5fc5\u987b\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u8f93\u51fa\u5176\u8f93\u5165\u7684\u526f\u672c\u3002 \u5b83\u88ab\u8feb\u5b66\u4e60\u8f93\u5165\u6570\u636e\u4e2d\u6700\u91cd\u8981\u7684\u7279\u5f81\uff08\u5e76\u5220\u9664\u4e0d\u91cd\u8981\u7684\u7279\u5f81\uff09\u3002 \u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4e0d\u5b8c\u6574\u7684\u81ea\u7f16\u7801\u5668\uff0c\u4ee5\u964d\u4f4e\u7ef4\u5ea6\u3002","title":"\u6709\u6548\u7684\u6570\u636e\u8868\u793a"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#pca","text":"\u5982\u679c\u81ea\u7f16\u7801\u5668\u4ec5\u4f7f\u7528\u7ebf\u6027\u6fc0\u6d3b\u5e76\u4e14\u635f\u5931\u51fd\u6570\u662f\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\uff0c\u5219\u53ef\u4ee5\u663e\u793a\u5b83\u6700\u7ec8\u6267\u884c\u4e3b\u6210\u5206\u5206\u6790\uff08\u53c2\u89c1\u7b2c 8 \u7ae0\uff09\u3002 \u4ee5\u4e0b\u4ee3\u7801\u6784\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u81ea\u7f16\u7801\u5668\uff0c\u4ee5\u5728 3D \u6570\u636e\u96c6\u4e0a\u6267\u884c PCA\uff0c\u5e76\u5c06\u5176\u6295\u5f71\u5230 2D\uff1a import tensorflow as tf from tensorflow.contrib.layers import fully_connected n_inputs = 3 # 3D inputs n_hidden = 2 # 2D codings n_outputs = n_inputs learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=[None, n_inputs]) hidden = fully_connected(X, n_hidden, activation_fn=None) outputs = fully_connected(hidden, n_outputs, activation_fn=None) reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE optimizer = tf.train.AdamOptimizer(learning_rate) training_op = optimizer.minimize(reconstruction_loss) init = tf.global_variables_initializer() \u8fd9\u6bb5\u4ee3\u7801\u4e0e\u6211\u4eec\u5728\u8fc7\u53bb\u7ae0\u8282\u4e2d\u5efa\u7acb\u7684\u6240\u6709 MLP \u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u4e24\u4ef6\u4e8b\u662f\uff1a \u8f93\u51fa\u7684\u6570\u91cf\u7b49\u4e8e\u8f93\u5165\u7684\u6570\u91cf\u3002 \u4e3a\u4e86\u6267\u884c\u7b80\u5355\u7684 PCA\uff0c\u6211\u4eec\u8bbe\u7f6e activation_fn = None \uff08\u5373\uff0c\u6240\u6709\u795e\u7ecf\u5143\u90fd\u662f\u7ebf\u6027\u7684\uff09 \u800c\u635f\u5931\u51fd\u6570\u662f MSE\u3002 \u6211\u4eec\u5f88\u5feb\u4f1a\u770b\u5230\u66f4\u590d\u6742\u7684\u81ea\u7f16\u7801\u5668\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u52a0\u8f7d\u6570\u636e\u96c6\uff0c\u5728\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u6a21\u578b\uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u7f16\u7801\uff08\u5373\u5c06\u5176\u6295\u5f71\u5230 2D\uff09\uff1a X_train, X_test = [...] # load the dataset n_iterations = 1000 codings = hidden # the output of the hidden layer provides the codings with tf.Session() as sess: init.run() for iteration in range(n_iterations): training_op.run(feed_dict={X: X_train}) # no labels (unsupervised) codings_val = codings.eval(feed_dict={X: X_test}) \u56fe 15-2 \u663e\u793a\u4e86\u539f\u59cb 3D \u6570\u636e\u96c6\uff08\u5de6\u4fa7\uff09\u548c\u81ea\u7f16\u7801\u5668\u9690\u85cf\u5c42\u7684\u8f93\u51fa\uff08\u5373\u7f16\u7801\u5c42\uff0c\u53f3\u4fa7\uff09\u3002 \u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u81ea\u7f16\u7801\u5668\u627e\u5230\u4e86\u5c06\u6570\u636e\u6295\u5f71\u5230\u6570\u636e\u4e0a\u7684\u6700\u4f73\u4e8c\u7ef4\u5e73\u9762\uff0c\u4fdd\u7559\u4e86\u6570\u636e\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u5dee\u5f02\uff08\u5c31\u50cf PCA \u4e00\u6837\uff09\u3002","title":"\u7528\u4e0d\u5b8c\u6574\u7684\u7ebf\u6027\u81ea\u7f16\u7801\u5668\u6267\u884c PCA"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#sae","text":"\u5c31\u50cf\u6211\u4eec\u8ba8\u8bba\u8fc7\u7684\u5176\u4ed6\u795e\u7ecf\u7f51\u7edc\u4e00\u6837\uff0c\u81ea\u7f16\u7801\u5668\u53ef\u4ee5\u6709\u591a\u4e2a\u9690\u85cf\u5c42\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u88ab\u79f0\u4e3a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\uff08\u6216\u6df1\u5ea6\u81ea\u7f16\u7801\u5668\uff09\u3002 \u6dfb\u52a0\u66f4\u591a\u5c42\u6709\u52a9\u4e8e\u81ea\u7f16\u7801\u5668\u4e86\u89e3\u66f4\u590d\u6742\u7684\u7f16\u7801\u3002 \u4f46\u662f\uff0c\u5fc5\u987b\u6ce8\u610f\u4e0d\u8981\u8ba9\u81ea\u7f16\u7801\u5668\u529f\u80fd\u592a\u5f3a\u5927\u3002 \u8bbe\u60f3\u4e00\u4e2a\u7f16\u7801\u5668\u975e\u5e38\u5f3a\u5927\uff0c\u53ea\u9700\u5b66\u4e60\u5c06\u6bcf\u4e2a\u8f93\u5165\u6620\u5c04\u5230\u4e00\u4e2a\u4efb\u610f\u6570\u5b57\uff08\u5e76\u4e14\u89e3\u7801\u5668\u5b66\u4e60\u53cd\u5411\u6620\u5c04\uff09\u5373\u53ef\u3002 \u5f88\u660e\u663e\uff0c\u8fd9\u6837\u7684\u81ea\u7f16\u7801\u5668\u5c06\u5b8c\u7f8e\u5730\u91cd\u6784\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u5b83\u4e0d\u4f1a\u5728\u8fc7\u7a0b\u4e2d\u5b66\u4e60\u5230\u4efb\u4f55\u6709\u7528\u7684\u6570\u636e\u8868\u793a\uff08\u5e76\u4e14\u5b83\u4e0d\u53ef\u80fd\u5f88\u597d\u5730\u63a8\u5e7f\u5230\u65b0\u7684\u5b9e\u4f8b\uff09\u3002 \u6808\u5f0f\u81ea\u7f16\u7801\u5668\u7684\u67b6\u6784\u5173\u4e8e\u4e2d\u592e\u9690\u85cf\u5c42\uff08\u7f16\u7801\u5c42\uff09\u901a\u5e38\u662f\u5bf9\u79f0\u7684\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u4e09\u660e\u6cbb\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a\u7528\u4e8e MNIST \u7684\u81ea\u7f16\u7801\u5668\uff08\u5728\u7b2c 3 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u53ef\u80fd\u6709 784 \u4e2a\u8f93\u5165\uff0c\u5176\u6b21\u662f\u4e00\u4e2a\u9690\u85cf\u5c42\uff0c\u6709 300 \u4e2a\u795e\u7ecf\u5143\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u4e2d\u592e\u9690\u85cf\u5c42\uff0c\u6709 150 \u4e2a\u795e\u7ecf\u5143\uff0c\u7136\u540e\u662f\u53e6\u4e00\u4e2a\u9690\u85cf\u5c42\uff0c\u6709 300 \u4e2a\u795e\u7ecf\u5143\uff0c\u8f93\u51fa\u5c42\u6709 784 \u795e\u7ecf\u5143\u3002 \u8fd9\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u5982\u56fe 15-3 \u6240\u793a\u3002","title":"\u6808\u5f0f\u81ea\u7f16\u7801\u5668\uff08SAE\uff09"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#tensorflow","text":"\u60a8\u53ef\u4ee5\u50cf\u5e38\u89c4\u6df1\u5ea6 MLP \u4e00\u6837\u5b9e\u73b0\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002 \u7279\u522b\u662f\uff0c\u6211\u4eec\u5728\u7b2c 11 \u7ae0\u4e2d\u7528\u4e8e\u8bad\u7ec3\u6df1\u5ea6\u7f51\u7edc\u7684\u6280\u672f\u4e5f\u53ef\u4ee5\u5e94\u7528\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528 He \u521d\u59cb\u5316\uff0cELU \u6fc0\u6d3b\u51fd\u6570\u548c l2 \u6b63\u5219\u5316\u4e3a MNIST \u6784\u5efa\u4e00\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002 \u4ee3\u7801\u5e94\u8be5\u770b\u8d77\u6765\u5f88\u719f\u6089\uff0c\u9664\u4e86\u6ca1\u6709\u6807\u7b7e\uff08\u6ca1\u6709 y \uff09\uff1a n_inputs = 28 * 28 # for MNIST n_hidden1 = 300 n_hidden2 = 150 # codings n_hidden3 = n_hidden1 n_outputs = n_inputs learning_rate = 0.01 l2_reg = 0.001 X = tf.placeholder(tf.float32, shape=[None, n_inputs]) with tf.contrib.framework.arg_scope( [fully_connected], activation_fn=tf.nn.elu, weights_initializer=tf.contrib.layers.variance_scaling_initializer(), weights_regularizer=tf.contrib.layers.l2_regularizer(l2_reg)): hidden1 = fully_connected(X, n_hidden1) hidden2 = fully_connected(hidden1, n_hidden2) # codings hidden3 = fully_connected(hidden2, n_hidden3) outputs = fully_connected(hidden3, n_outputs, activation_fn=None) reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE reg_losses = tf.get_collection(tf.GraphKeys.REGULARIZATION_LOSSES) loss = tf.add_n([reconstruction_loss] + reg_losses) optimizer = tf.train.AdamOptimizer(learning_rate) training_op = optimizer.minimize(loss) init = tf.global_variables_initializer() \u7136\u540e\u53ef\u4ee5\u6b63\u5e38\u8bad\u7ec3\u6a21\u578b\u3002 \u8bf7\u6ce8\u610f\uff0c\u6570\u5b57\u6807\u7b7e\uff08 y_batch \uff09\u672a\u4f7f\u7528\uff1a n_epochs = 5 batch_size = 150 with tf.Session() as sess: init.run() for epoch in range(n_epochs): n_batches = mnist.train.num_examples // batch_size for iteration in range(n_batches): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch})","title":"TensorFlow\u5b9e\u73b0"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_3","text":"\u5f53\u81ea\u7f16\u7801\u5668\u6574\u9f50\u5730\u5bf9\u79f0\u65f6\uff0c\u5c31\u50cf\u6211\u4eec\u521a\u521a\u6784\u5efa\u7684\u90a3\u6837\uff0c\u4e00\u79cd\u5e38\u7528\u6280\u672f\u662f\u5c06\u89e3\u7801\u5668\u5c42\u7684\u6743\u91cd\u4e0e\u7f16\u7801\u5668\u5c42\u7684\u6743\u91cd\u76f8\u5173\u8054\u3002 \u8fd9\u6837\u51cf\u5c11\u4e86\u6a21\u578b\u4e2d\u7684\u6743\u91cd\u6570\u91cf\uff0c\u52a0\u5feb\u4e86\u8bad\u7ec3\u901f\u5ea6\uff0c\u5e76\u9650\u5236\u4e86\u8fc7\u5ea6\u62df\u5408\u7684\u98ce\u9669\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u81ea\u7f16\u7801\u5668\u603b\u5171\u5177\u6709 N \u4e2a\u5c42\uff08\u4e0d\u8ba1\u5165\u8f93\u5165\u5c42\uff09\uff0c\u5e76\u4e14 \u8868\u793a\u7b2c L \u5c42\u7684\u8fde\u63a5\u6743\u91cd\uff08\u4f8b\u5982\uff0c\u5c42 1 \u662f\u7b2c\u4e00\u9690\u85cf\u5c42\uff0c\u5219\u5c42 N / 2 \u662f\u7f16\u7801 \u5c42\uff0c\u800c\u5c42 N \u662f\u8f93\u51fa\u5c42\uff09\uff0c\u5219\u89e3\u7801\u5668\u5c42\u6743\u91cd\u53ef\u4ee5\u7b80\u5355\u5730\u5b9a\u4e49\u4e3a\uff1a \uff08\u5176\u4e2d L = 1, 2, ..., N2 \uff09\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u4f7f\u7528 fully_connected() \u51fd\u6570\u5728 TensorFlow \u4e2d\u5b9e\u73b0\u76f8\u5173\u6743\u91cd\u6709\u70b9\u9ebb\u70e6\uff1b\u624b\u52a8\u5b9a\u4e49\u5c42\u5b9e\u9645\u4e0a\u66f4\u5bb9\u6613\u3002 \u4ee3\u7801\u7ed3\u5c3e\u660e\u663e\u66f4\u52a0\u5197\u957f\uff1a activation = tf.nn.elu regularizer = tf.contrib.layers.l2_regularizer(l2_reg) initializer = tf.contrib.layers.variance_scaling_initializer() X = tf.placeholder(tf.float32, shape=[None, n_inputs]) weights1_init = initializer([n_inputs, n_hidden1]) weights2_init = initializer([n_hidden1, n_hidden2]) weights1 = tf.Variable(weights1_init, dtype=tf.float32, name=\"weights1\") weights2 = tf.Variable(weights2_init, dtype=tf.float32, name=\"weights2\") weights3 = tf.transpose(weights2, name=\"weights3\") # tied weights weights4 = tf.transpose(weights1, name=\"weights4\") # tied weights biases1 = tf.Variable(tf.zeros(n_hidden1), name=\"biases1\") biases2 = tf.Variable(tf.zeros(n_hidden2), name=\"biases2\") biases3 = tf.Variable(tf.zeros(n_hidden3), name=\"biases3\") biases4 = tf.Variable(tf.zeros(n_outputs), name=\"biases4\") hidden1 = activation(tf.matmul(X, weights1) + biases1) hidden2 = activation(tf.matmul(hidden1, weights2) + biases2) hidden3 = activation(tf.matmul(hidden2, weights3) + biases3) outputs = tf.matmul(hidden3, weights4) + biases4 reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) reg_loss = regularizer(weights1) + regularizer(weights2) loss = reconstruction_loss + reg_loss optimizer = tf.train.AdamOptimizer(learning_rate) training_op = optimizer.minimize(loss) init = tf.global_variables_initializer() \u8fd9\u6bb5\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u6709\u51e0\u4ef6\u91cd\u8981\u7684\u4e8b\u60c5\u9700\u8981\u6ce8\u610f\uff1a \u9996\u5148\uff0c\u6743\u91cd 3 \u548c\u6743\u91cd 4 \u4e0d\u662f\u53d8\u91cf\uff0c\u5b83\u4eec\u5206\u522b\u662f\u6743\u91cd 2 \u548c\u6743\u91cd 1 \u7684\u8f6c\u7f6e\uff08\u5b83\u4eec\u4e0e\u5b83\u4eec\u201c\u7ed1\u5b9a\u201d\uff09\u3002 \u5176\u6b21\uff0c\u7531\u4e8e\u5b83\u4eec\u4e0d\u662f\u53d8\u91cf\uff0c\u6240\u4ee5\u89c4\u8303\u5b83\u4eec\u662f\u6ca1\u6709\u7528\u7684\uff1a\u6211\u4eec\u53ea\u8c03\u6574\u6743\u91cd 1 \u548c\u6743\u91cd 2\u3002 \u7b2c\u4e09\uff0c\u504f\u7f6e\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u675f\u7f1a\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u6b63\u89c4\u5316\u3002","title":"\u5173\u8054\u6743\u91cd"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_4","text":"\u6211\u4eec\u4e0d\u662f\u4e00\u6b21\u5b8c\u6210\u6574\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u7684\u8bad\u7ec3\uff0c\u800c\u662f\u4e00\u6b21\u8bad\u7ec3\u4e00\u4e2a\u6d45\u81ea\u7f16\u7801\u5668\uff0c\u7136\u540e\u5c06\u6240\u6709\u8fd9\u4e9b\u81ea\u7f16\u7801\u5668\u5806\u53e0\u5230\u4e00\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\uff08\u56e0\u6b64\u540d\u79f0\uff09\u4e2d\uff0c\u901a\u5e38\u8981\u5feb\u5f97\u591a\uff0c\u5982\u56fe 15-4 \u6240\u793a\u3002 \u8fd9\u5bf9\u4e8e\u975e\u5e38\u6df1\u7684\u81ea\u7f16\u7801\u5668\u7279\u522b\u6709\u7528\u3002 \u5728\u8bad\u7ec3\u7684\u7b2c\u4e00\u9636\u6bb5\uff0c\u7b2c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u91cd\u6784\u8f93\u5165\u3002 \u5728\u7b2c\u4e8c\u9636\u6bb5\uff0c\u7b2c\u4e8c\u4e2a\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u91cd\u6784\u7b2c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u3002 \u6700\u540e\uff0c\u60a8\u53ea\u9700\u4f7f\u7528\u6240\u6709\u8fd9\u4e9b\u81ea\u7f16\u7801\u5668\u6765\u6784\u5efa\u4e00\u4e2a\u5927\u4e09\u660e\u6cbb\uff0c\u5982\u56fe 15-4 \u6240\u793a\uff08\u5373\uff0c\u60a8\u9996\u5148\u5c06\u6bcf\u4e2a\u81ea\u7f16\u7801\u5668\u7684\u9690\u85cf\u5c42\uff0c\u7136\u540e\u6309\u76f8\u53cd\u987a\u5e8f\u5806\u53e0\u8f93\u51fa\u5c42\uff09\u3002 \u8fd9\u7ed9\u4f60\u6700\u540e\u7684\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002 \u60a8\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u8f7b\u677e\u5730\u8bad\u7ec3\u66f4\u591a\u7684\u81ea\u7f16\u7801\u5668\uff0c\u6784\u5efa\u4e00\u4e2a\u975e\u5e38\u6df1\u7684\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u79cd\u591a\u9636\u6bb5\u8bad\u7ec3\u7b97\u6cd5\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u9636\u6bb5\u4f7f\u7528\u4e0d\u540c\u7684 TensorFlow \u56fe\u3002 \u8bad\u7ec3\u5b8c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u540e\uff0c\u60a8\u53ea\u9700\u901a\u8fc7\u5b83\u8fd0\u884c\u8bad\u7ec3\u96c6\u5e76\u6355\u83b7\u9690\u85cf\u5c42\u7684\u8f93\u51fa\u3002 \u8fd9\u4e2a\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u7684\u8bad\u7ec3\u96c6\u3002 \u4e00\u65e6\u6240\u6709\u81ea\u7f16\u7801\u5668\u90fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u4e86\u8bad\u7ec3,\u60a8\u53ea\u9700\u590d\u5236\u6bcf\u4e2a\u81ea\u7f16\u7801\u5668\u7684\u6743\u91cd\u548c\u504f\u7f6e\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u4eec\u6765\u6784\u5efa\u5806\u53e0\u7684\u81ea\u7f16\u7801\u5668\u3002 \u5b9e\u73b0\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5728\u8fd9\u91cc\u8be6\u7ec6\u8bf4\u660e\uff0c\u4f46\u8bf7\u67e5\u9605 Jupyter notebooks \u4e2d\u7684\u4ee3\u7801\u4f5c\u4e3a\u793a\u4f8b\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u5305\u542b\u6574\u4e2a\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u7684\u5355\u4e2a\u56fe\uff0c\u4ee5\u53ca\u6267\u884c\u6bcf\u4e2a\u8bad\u7ec3\u9636\u6bb5\u7684\u4e00\u4e9b\u989d\u5916\u64cd\u4f5c\uff0c\u5982\u56fe 15-5 \u6240\u793a\u3002 \u8fd9\u503c\u5f97\u89e3\u91ca\u4e00\u4e0b\uff1a \u56fe\u4e2d\u7684\u4e2d\u592e\u5217\u662f\u5b8c\u6574\u7684\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u3002\u8fd9\u90e8\u5206\u53ef\u4ee5\u5728\u8bad\u7ec3\u540e\u4f7f\u7528\u3002 \u5de6\u5217\u662f\u8fd0\u884c\u7b2c\u4e00\u9636\u6bb5\u8bad\u7ec3\u6240\u9700\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002\u5b83\u521b\u5efa\u4e00\u4e2a\u7ed5\u8fc7\u9690\u85cf\u5c42 2 \u548c 3 \u7684\u8f93\u51fa\u5c42\u3002\u8be5\u8f93\u51fa\u5c42\u4e0e\u5806\u53e0\u7684\u81ea\u7f16\u7801\u5668\u7684\u8f93\u51fa\u5c42\u5171\u4eab\u76f8\u540c\u7684\u6743\u91cd\u548c\u504f\u7f6e\u3002\u6b64\u5916\u8fd8\u6709\u65e8\u5728\u4f7f\u8f93\u51fa\u5c3d\u53ef\u80fd\u63a5\u8fd1\u8f93\u5165\u7684\u8bad\u7ec3\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u8be5\u9636\u6bb5\u5c06\u8bad\u7ec3\u9690\u85cf\u5c421\u548c\u8f93\u51fa\u5c42\uff08\u5373\uff0c\u7b2c\u4e00\u81ea\u7f16\u7801\u5668\uff09\u7684\u6743\u91cd\u548c\u504f\u7f6e\u3002 \u56fe\u4e2d\u7684\u53f3\u5217\u662f\u8fd0\u884c\u7b2c\u4e8c\u9636\u6bb5\u8bad\u7ec3\u6240\u9700\u7684\u4e00\u7ec4\u64cd\u4f5c\u3002\u5b83\u589e\u52a0\u4e86\u8bad\u7ec3\u64cd\u4f5c\uff0c\u76ee\u7684\u662f\u4f7f\u9690\u85cf\u5c42 3 \u7684\u8f93\u51fa\u5c3d\u53ef\u80fd\u63a5\u8fd1\u9690\u85cf\u5c42 1 \u7684\u8f93\u51fa\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u8fd0\u884c\u9636\u6bb5 2 \u65f6\u51bb\u7ed3\u9690\u85cf\u5c42 1\u3002\u6b64\u9636\u6bb5\u5c06\u8bad\u7ec3\u9690\u85cf\u5c42 2 \u548c 3 \u7684\u6743\u91cd\u548c\u504f\u7f6e\uff08\u5373\u7b2c\u4e8c\u81ea\u7f16\u7801\u5668\uff09\u3002 TensorFlow \u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a [...] # Build the whole stacked autoencoder normally. # In this example, the weights are not tied. optimizer = tf.train.AdamOptimizer(learning_rate) with tf.name_scope(\"phase1\"): phase1_outputs = tf.matmul(hidden1, weights4) + biases4 phase1_reconstruction_loss = tf.reduce_mean(tf.square(phase1_outputs - X)) phase1_reg_loss = regularizer(weights1) + regularizer(weights4) phase1_loss = phase1_reconstruction_loss + phase1_reg_loss phase1_training_op = optimizer.minimize(phase1_loss) with tf.name_scope(\"phase2\"): phase2_reconstruction_loss = tf.reduce_mean(tf.square(hidden3 - hidden1)) phase2_reg_loss = regularizer(weights2) + regularizer(weights3) phase2_loss = phase2_reconstruction_loss + phase2_reg_loss train_vars = [weights2, biases2, weights3, biases3] phase2_training_op = optimizer.minimize(phase2_loss, var_list=train_vars) \u7b2c\u4e00\u9636\u6bb5\u6bd4\u8f83\u7b80\u5355\uff1a\u6211\u4eec\u53ea\u521b\u5efa\u4e00\u4e2a\u8df3\u8fc7\u9690\u85cf\u5c42 2 \u548c 3 \u7684\u8f93\u51fa\u5c42\uff0c\u7136\u540e\u6784\u5efa\u8bad\u7ec3\u64cd\u4f5c\u4ee5\u6700\u5c0f\u5316\u8f93\u51fa\u548c\u8f93\u5165\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u52a0\u4e0a\u4e00\u4e9b\u6b63\u5219\u5316\uff09\u3002 \u7b2c\u4e8c\u9636\u6bb5\u53ea\u662f\u589e\u52a0\u4e86\u5c06\u9690\u85cf\u5c42 3 \u548c\u9690\u85cf\u5c42 1 \u7684\u8f93\u51fa\u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5c0f\u5316\u7684\u64cd\u4f5c\uff08\u8fd8\u6709\u4e00\u4e9b\u6b63\u5219\u5316\uff09\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u5411 minim() \u65b9\u6cd5\u63d0\u4f9b\u53ef\u8bad\u7ec3\u53d8\u91cf\u7684\u5217\u8868\uff0c\u786e\u4fdd\u7701\u7565\u6743\u91cd 1 \u548c\u504f\u5dee 1\uff1b\u8fd9\u6709\u6548\u5730\u51bb\u7ed3\u4e86\u9636\u6bb5 2 \u671f\u95f4\u7684\u9690\u85cf\u5c42 1\u3002 \u5728\u6267\u884c\u9636\u6bb5\uff0c\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u4e3a\u9636\u6bb5 1 \u4e00\u4e9b\u8fed\u4ee3\u8fdb\u884c\u8bad\u7ec3\u64cd\u4f5c\uff0c\u7136\u540e\u9636\u6bb5 2 \u8bad\u7ec3\u8fd0\u884c\u66f4\u591a\u7684\u8fed\u4ee3\u3002 \u7531\u4e8e\u9690\u85cf\u5c42 1 \u5728\u9636\u6bb5 2 \u671f\u95f4\u88ab\u51bb\u7ed3\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u8bad\u7ec3\u5b9e\u4f8b\u5176\u8f93\u51fa\u5c06\u603b\u662f\u76f8\u540c\u7684\u3002 \u4e3a\u4e86\u907f\u514d\u5728\u6bcf\u4e2a\u65f6\u671f\u91cd\u65b0\u8ba1\u7b97\u9690\u85cf\u5c421\u7684\u8f93\u51fa\uff0c\u60a8\u53ef\u4ee5\u5728\u9636\u6bb5 1 \u7ed3\u675f\u65f6\u4e3a\u6574\u4e2a\u8bad\u7ec3\u96c6\u8ba1\u7b97\u5b83\uff0c\u7136\u540e\u76f4\u63a5\u5728\u9636\u6bb5 2 \u4e2d\u8f93\u5165\u9690\u85cf\u5c42 1 \u7684\u7f13\u5b58\u8f93\u51fa\u3002\u8fd9\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0d\u9519\u7684\u6027\u80fd\u4e0a\u7684\u63d0\u5347\u3002","title":"\u4e00\u6b21\u8bad\u7ec3\u4e00\u4e2a\u81ea\u7f16\u7801\u5668"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_5","text":"\u786e\u4fdd\u81ea\u7f16\u7801\u5668\u5f97\u5230\u9002\u5f53\u8bad\u7ec3\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u6bd4\u8f83\u8f93\u5165\u548c\u8f93\u51fa\u3002 \u5b83\u4eec\u5fc5\u987b\u975e\u5e38\u76f8\u4f3c\uff0c\u5dee\u5f02\u5e94\u8be5\u662f\u4e0d\u91cd\u8981\u7684\u7ec6\u8282\u3002 \u6211\u4eec\u6765\u7ed8\u5236\u4e24\u4e2a\u968f\u673a\u6570\u5b57\u53ca\u5176\u91cd\u5efa\uff1a n_test_digits = 2 X_test = mnist.test.images[:n_test_digits] with tf.Session() as sess: [...] # Train the Autoencoder outputs_val = outputs.eval(feed_dict={X: X_test}) def plot_image(image, shape=[28, 28]): plt.imshow(image.reshape(shape), cmap=\"Greys\", interpolation=\"nearest\") plt.axis(\"off\") for digit_index in range(n_test_digits): plt.subplot(n_test_digits, 2, digit_index * 2 + 1) plot_image(X_test[digit_index]) plt.subplot(n_test_digits, 2, digit_index * 2 + 2) plot_image(outputs_val[digit_index]) \u770b\u8d77\u6765\u591f\u63a5\u8fd1\u3002 \u6240\u4ee5\u81ea\u7f16\u7801\u5668\u5df2\u7ecf\u9002\u5f53\u5730\u5b66\u4f1a\u4e86\u91cd\u73b0\u5b83\uff0c\u4f46\u662f\u5b83\u5b66\u5230\u4e86\u6709\u7528\u7684\u7279\u6027\uff1f \u8ba9\u6211\u4eec\u6765\u770b\u770b\u3002","title":"\u53ef\u89c6\u5316\u91cd\u5efa"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_6","text":"\u4e00\u65e6\u4f60\u7684\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u4e86\u4e00\u4e9b\u529f\u80fd\uff0c\u4f60\u53ef\u80fd\u60f3\u770b\u770b\u5b83\u4eec\u3002 \u6709\u5404\u79cd\u5404\u6837\u7684\u6280\u672f\u3002 \u53ef\u4ee5\u8bf4\u6700\u7b80\u5355\u7684\u6280\u672f\u662f\u5728\u6bcf\u4e2a\u9690\u85cf\u5c42\u4e2d\u8003\u8651\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u5e76\u627e\u5230\u6700\u80fd\u6fc0\u6d3b\u5b83\u7684\u8bad\u7ec3\u5b9e\u4f8b\u3002 \u8fd9\u5bf9\u9876\u5c42\u9690\u85cf\u5c42\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u4f1a\u6355\u83b7\u76f8\u5bf9\u8f83\u5927\u7684\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5728\u5305\u542b\u5b83\u4eec\u7684\u4e00\u7ec4\u8bad\u7ec3\u5b9e\u4f8b\u4e2d\u8f7b\u677e\u627e\u5230\u8fd9\u4e9b\u529f\u80fd\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u795e\u7ecf\u5143\u5728\u56fe\u7247\u4e2d\u770b\u5230\u4e00\u53ea\u732b\u65f6\u5f3a\u70c8\u6fc0\u6d3b\uff0c\u90a3\u4e48\u6fc0\u6d3b\u5b83\u7684\u56fe\u7247\u6700\u663e\u773c\u7684\u5730\u65b9\u90fd\u4f1a\u5305\u542b\u732b\u3002 \u7136\u800c\uff0c\u5bf9\u4e8e\u8f83\u4f4e\u5c42\uff0c\u8fd9\u79cd\u6280\u672f\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7279\u5f81\u66f4\u5c0f\uff0c\u66f4\u62bd\u8c61\uff0c\u56e0\u6b64\u5f88\u96be\u51c6\u786e\u7406\u89e3\u795e\u7ecf\u5143\u6b63\u5728\u4e3a\u4ec0\u4e48\u800c\u5174\u594b\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u53e6\u4e00\u79cd\u6280\u672f\u3002 \u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u56fe\u50cf\uff0c\u5176\u4e2d\u50cf\u7d20\u7684\u5f3a\u5ea6\u5bf9\u5e94\u4e8e\u7ed9\u5b9a\u795e\u7ecf\u5143\u7684\u8fde\u63a5\u6743\u91cd\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u7ed8\u5236\u4e86\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u4e2d\u4e94\u4e2a\u795e\u7ecf\u5143\u5b66\u4e60\u7684\u7279\u5f81\uff1a with tf.Session() as sess: [...] # train autoencoder weights1_val = weights1.eval() for i in range(5): plt.subplot(1, 5, i + 1) plot_image(weights1_val.T[i]) \u60a8\u53ef\u80fd\u4f1a\u5f97\u5230\u5982\u56fe 15-7 \u6240\u793a\u7684\u4f4e\u7ea7\u529f\u80fd\u3002 \u524d\u56db\u4e2a\u7279\u5f81\u4f3c\u4e4e\u5bf9\u5e94\u4e8e\u5c0f\u5757\uff0c\u800c\u7b2c\u4e94\u4e2a\u7279\u5f81\u4f3c\u4e4e\u5bfb\u627e\u5782\u76f4\u7b14\u5212\uff08\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u7279\u5f81\u6765\u81ea\u5806\u53e0\u53bb\u566a\u81ea\u7f16\u7801\u5668\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u8ba8\u8bba\uff09\u3002 \u53e6\u4e00\u79cd\u6280\u672f\u662f\u7ed9\u81ea\u7f16\u7801\u5668\u63d0\u4f9b\u4e00\u4e2a\u968f\u673a\u8f93\u5165\u56fe\u50cf\uff0c\u6d4b\u91cf\u60a8\u611f\u5174\u8da3\u7684\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\uff0c\u7136\u540e\u6267\u884c\u53cd\u5411\u4f20\u64ad\u6765\u8c03\u6574\u56fe\u50cf\uff0c\u4f7f\u795e\u7ecf\u5143\u6fc0\u6d3b\u5f97\u66f4\u591a\u3002 \u5982\u679c\u8fed\u4ee3\u6570\u6b21\uff08\u6267\u884c\u6e10\u53d8\u4e0a\u5347\uff09\uff0c\u56fe\u50cf\u5c06\u9010\u6e10\u53d8\u6210\u6700\u4ee4\u4eba\u5174\u594b\u7684\u56fe\u50cf\uff08\u7528\u4e8e\u795e\u7ecf\u5143\uff09\u3002 \u8fd9\u662f\u4e00\u79cd\u6709\u7528\u7684\u6280\u672f\uff0c\u7528\u4e8e\u53ef\u89c6\u5316\u795e\u7ecf\u5143\u6b63\u5728\u5bfb\u627e\u7684\u8f93\u5165\u7c7b\u578b\u3002 \u6700\u540e\uff0c\u5982\u679c\u4f7f\u7528\u81ea\u7f16\u7801\u5668\u6267\u884c\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\uff08\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5206\u7c7b\u4efb\u52a1\uff09\uff0c\u9a8c\u8bc1\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u7684\u7279\u5f81\u662f\u5426\u6709\u7528\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u662f\u6d4b\u91cf\u5206\u7c7b\u5668\u7684\u6027\u80fd\u3002","title":"\u53ef\u89c6\u5316\u529f\u80fd"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_7","text":"\u6b63\u5982\u6211\u4eec\u5728\u7b2c 11 \u7ae0\u4e2d\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u5982\u679c\u60a8\u6b63\u5728\u5904\u7406\u590d\u6742\u7684\u76d1\u7763\u4efb\u52a1\uff0c\u4f46\u60a8\u6ca1\u6709\u5927\u91cf\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u5219\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u627e\u5230\u6267\u884c\u7c7b\u4f3c\u4efb\u52a1\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u7136\u540e\u91cd\u65b0\u4f7f\u7528\u5176\u8f83\u4f4e\u5c42\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u4ec5\u4f7f\u7528\u5f88\u5c11\u7684\u8bad\u7ec3\u6570\u636e\u6765\u8bad\u7ec3\u9ad8\u6027\u80fd\u6a21\u578b\uff0c\u56e0\u4e3a\u60a8\u7684\u795e\u7ecf\u7f51\u7edc\u4e0d\u5fc5\u5b66\u4e60\u6240\u6709\u7684\u4f4e\u7ea7\u7279\u5f81\uff1b\u5b83\u5c06\u91cd\u65b0\u4f7f\u7528\u73b0\u6709\u7f51\u7edc\u5b66\u4e60\u7684\u7279\u5f81\u68c0\u6d4b\u5668\u3002 \u540c\u6837\uff0c\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u5927\u578b\u6570\u636e\u96c6\uff0c\u4f46\u5927\u591a\u6570\u6570\u636e\u96c6\u672a\u6807\u8bb0\uff0c\u60a8\u53ef\u4ee5\u5148\u4f7f\u7528\u6240\u6709\u6570\u636e\u8bad\u7ec3\u6808\u5f0f\u81ea\u7f16\u7801\u5668\uff0c\u7136\u540e\u91cd\u65b0\u4f7f\u7528\u8f83\u4f4e\u5c42\u4e3a\u5b9e\u9645\u4efb\u52a1\u521b\u5efa\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4f7f\u7528\u6807\u8bb0\u6570\u636e\u5bf9\u5176\u8fdb\u884c\u8bad\u7ec3\u3002 \u4f8b\u5982\uff0c\u56fe 15-8 \u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u4e3a\u5206\u7c7b\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u3002 \u6b63\u5982\u524d\u9762\u8ba8\u8bba\u8fc7\u7684\uff0c\u6808\u5f0f\u81ea\u7f16\u7801\u5668\u672c\u8eab\u901a\u5e38\u6bcf\u6b21\u90fd\u4f1a\u8bad\u7ec3\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u3002 \u5728\u8bad\u7ec3\u5206\u7c7b\u5668\u65f6\uff0c\u5982\u679c\u60a8\u786e\u5b9e\u6ca1\u6709\u592a\u591a\u6807\u8bb0\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u5219\u53ef\u80fd\u9700\u8981\u51bb\u7ed3\u9884\u8bad\u7ec3\u5c42\uff08\u81f3\u5c11\u662f\u8f83\u4f4e\u5c42\uff09\u3002 \u8fd9\u79cd\u60c5\u51b5\u5b9e\u9645\u4e0a\u5f88\u5e38\u89c1\uff0c\u56e0\u4e3a\u6784\u5efa\u4e00\u4e2a\u5927\u578b\u7684\u65e0\u6807\u7b7e\u6570\u636e\u96c6\u901a\u5e38\u5f88\u4fbf\u5b9c\uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u53ef\u4ee5\u4ece\u4e92\u8054\u7f51\u4e0a\u4e0b\u8f7d\u6570\u767e\u4e07\u5f20\u56fe\u50cf\uff09\uff0c\u4f46\u53ea\u80fd\u7531\u4eba\u7c7b\u53ef\u9760\u5730\u6807\u8bb0\u5b83\u4eec\uff08\u4f8b\u5982\uff0c\u5c06\u56fe\u50cf\u5206\u7c7b\u4e3a\u53ef\u7231\u6216\u4e0d\u53ef\u7231\uff09\u3002 \u6807\u8bb0\u5b9e\u4f8b\u662f\u8017\u65f6\u4e14\u6602\u8d35\u7684\uff0c\u56e0\u6b64\u53ea\u6709\u51e0\u5343\u4e2a\u6807\u8bb0\u5b9e\u4f8b\u662f\u5f88\u5e38\u89c1\u7684\u3002 \u6b63\u5982\u6211\u4eec\u524d\u9762\u6240\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u5f53\u524d\u6df1\u5ea6\u5b66\u4e60\u6d77\u5578\u7684\u89e6\u53d1\u56e0\u7d20\u4e4b\u4e00\u662f Geoffrey Hinton \u7b49\u4eba\u5728 2006 \u5e74\u7684\u53d1\u73b0\uff0c\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u4ee5\u65e0\u76d1\u7763\u7684\u65b9\u5f0f\u8fdb\u884c\u9884\u8bad\u7ec3\u3002 \u4ed6\u4eec\u4f7f\u7528\u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a\u5668\uff08\u89c1\u9644\u5f55 E\uff09\uff0c\u4f46\u5728 2007 \u5e74 Yoshua Bengio \u7b49\u4eba\u8868\u660e\u81ea\u7f16\u7801\u5668\u4e5f\u8d77\u4f5c\u7528\u3002 TensorFlow \u7684\u5b9e\u73b0\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\uff1a\u53ea\u9700\u4f7f\u7528\u6240\u6709\u8bad\u7ec3\u6570\u636e\u8bad\u7ec3\u81ea\u7f16\u7801\u5668\uff0c\u7136\u540e\u91cd\u7528\u5176\u7f16\u7801\u5668\u5c42\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u795e\u7ecf\u7f51\u7edc\uff08\u6709\u5173\u5982\u4f55\u91cd\u7528\u9884\u8bad\u7ec3\u5c42\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u7b2c 11 \u7ae0\u6216\u67e5\u770b Jupyte notebooks \u4e2d\u7684\u4ee3\u7801\u793a\u4f8b\uff09\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e3a\u4e86\u5f3a\u5236\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u6709\u8da3\u7684\u7279\u6027\uff0c\u6211\u4eec\u9650\u5236\u4e86\u7f16\u7801\u5c42\u7684\u5927\u5c0f\uff0c\u4f7f\u5176\u4e0d\u591f\u5b8c\u5584\u3002 \u5b9e\u9645\u4e0a\u53ef\u4ee5\u4f7f\u7528\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684\u7ea6\u675f\uff0c\u5305\u62ec\u5141\u8bb8\u7f16\u7801\u5c42\u4e0e\u8f93\u5165\u4e00\u6837\u5927\u6216\u751a\u81f3\u66f4\u5927\u7684\u7ea6\u675f\uff0c\u5bfc\u81f4\u8fc7\u5ea6\u5b8c\u6210\u7684\u81ea\u7f16\u7801\u5668\u3002 \u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u5176\u4e2d\u7684\u4e00\u4e9b\u65b9\u6cd5\u3002","title":"\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u4f7f\u7528\u6808\u5f0f\u81ea\u7f16\u7801\u5668"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#dae","text":"\u53e6\u4e00\u79cd\u5f3a\u5236\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u6709\u7528\u529f\u80fd\u7684\u65b9\u6cd5\u662f\u4e3a\u5176\u8f93\u5165\u6dfb\u52a0\u566a\u58f0\uff0c\u5bf9\u5176\u8fdb\u884c\u8bad\u7ec3\u4ee5\u6062\u590d\u539f\u59cb\u7684\u65e0\u566a\u58f0\u8f93\u5165\u3002 \u8fd9\u53ef\u4ee5\u9632\u6b62\u81ea\u7f16\u7801\u5668\u5c06\u5176\u8f93\u5165\u590d\u5236\u5230\u5176\u8f93\u51fa\uff0c\u56e0\u6b64\u6700\u7ec8\u4e0d\u5f97\u4e0d\u5728\u6570\u636e\u4e2d\u67e5\u627e\u6a21\u5f0f\u3002 \u81ea 20 \u4e16\u7eaa 80 \u5e74\u4ee3\u4ee5\u6765\uff0c\u4f7f\u7528\u81ea\u7f16\u7801\u5668\u6d88\u9664\u566a\u97f3\u7684\u60f3\u6cd5\u5df2\u7ecf\u51fa\u73b0\uff08\u4f8b\u5982\uff0c\u5728 Yann LeCun \u7684 1987 \u5e74\u7855\u58eb\u8bba\u6587\u4e2d\u63d0\u5230\u8fc7\uff09\u3002 \u5728 2008 \u5e74\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0c\u5e15\u65af\u5361\u5c14\u6587\u68ee\u7279\u7b49\u4eba\u3002 \u8868\u660e\u81ea\u7f16\u7801\u5668\u4e5f\u53ef\u7528\u4e8e\u7279\u5f81\u63d0\u53d6\u3002 \u5728 2010 \u5e74\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d Vincent \u7b49\u4eba\u5f15\u5165\u5806\u53e0\u964d\u566a\u81ea\u7f16\u7801\u5668\u3002 \u566a\u58f0\u53ef\u4ee5\u662f\u7eaf\u7cb9\u7684\u9ad8\u65af\u566a\u58f0\u6dfb\u52a0\u5230\u8f93\u5165\uff0c\u6216\u8005\u5b83\u53ef\u4ee5\u968f\u673a\u5173\u95ed\u8f93\u5165\uff0c\u5c31\u50cf drop out\uff08\u5728\u7b2c 11 \u7ae0\u4ecb\u7ecd\uff09\u3002 \u56fe 15-9 \u663e\u793a\u4e86\u8fd9\u4e24\u4e2a\u9009\u9879\u3002","title":"\u964d\u566a\u81ea\u7f16\u7801\uff08DAE\uff09"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#tensorflow_1","text":"\u5728 TensorFlow \u4e2d\u5b9e\u73b0\u53bb\u566a\u81ea\u7f16\u7801\u5668\u5e76\u4e0d\u96be\u3002 \u6211\u4eec\u4ece\u9ad8\u65af\u566a\u58f0\u5f00\u59cb\u3002 \u8fd9\u5b9e\u9645\u4e0a\u5c31\u50cf\u8bad\u7ec3\u4e00\u4e2a\u5e38\u89c4\u7684\u81ea\u7f16\u7801\u5668\u4e00\u6837\uff0c\u9664\u4e86\u7ed9\u8f93\u5165\u6dfb\u52a0\u566a\u58f0\u5916\uff0c\u91cd\u5efa\u635f\u8017\u662f\u6839\u636e\u539f\u59cb\u8f93\u5165\u8ba1\u7b97\u7684\uff1a X = tf.placeholder(tf.float32, shape=[None, n_inputs]) X_noisy = X + tf.random_normal(tf.shape(X)) [...] hidden1 = activation(tf.matmul(X_noisy, weights1) + biases1) [...] reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE [...] \u7531\u4e8e X \u7684\u5f62\u72b6\u53ea\u662f\u5728\u6784\u9020\u9636\u6bb5\u90e8\u5206\u5b9a\u4e49\u7684\uff0c\u6211\u4eec\u4e0d\u80fd\u9884\u5148\u77e5\u9053\u6211\u4eec\u5fc5\u987b\u6dfb\u52a0\u5230 X \u4e2d\u7684\u566a\u58f0\u7684\u5f62\u72b6\u3002\u6211\u4eec\u4e0d\u80fd\u8c03\u7528 X.get_shape() \uff0c\u56e0\u4e3a\u8fd9\u53ea\u4f1a\u8fd4\u56de\u90e8\u5206\u5b9a\u4e49\u7684 X \u7684\u5f62\u72b6 \uff08 [None\uff0cn_inputs] \uff09\u548c random_normal() \u9700\u8981\u4e00\u4e2a\u5b8c\u5168\u5b9a\u4e49\u7684\u5f62\u72b6\uff0c\u56e0\u6b64\u4f1a\u5f15\u53d1\u5f02\u5e38\u3002 \u76f8\u53cd\uff0c\u6211\u4eec\u8c03\u7528 tf.shape(X) \uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u5c06\u5728\u8fd0\u884c\u65f6\u8fd4\u56de X \u7684\u5f62\u72b6\uff0c\u8be5\u64cd\u4f5c\u5c06\u5728\u6b64\u65f6\u5b8c\u5168\u5b9a\u4e49\u3002 \u5b9e\u65bd\u66f4\u666e\u904d\u7684 dropout \u7248\u672c,\u800c\u4e14\u8fd9\u4e2a\u7248\u672c\u5e76\u4e0d\u56f0\u96be\uff1a from tensorflow.contrib.layers import dropout keep_prob = 0.7 is_training = tf.placeholder_with_default(False, shape=(), name='is_training') X = tf.placeholder(tf.float32, shape=[None, n_inputs]) X_drop = dropout(X, keep_prob, is_training=is_training) [...] hidden1 = activation(tf.matmul(X_drop, weights1) + biases1) [...] reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE [...] \u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528 feed_dict \u5c06 is_training \u8bbe\u7f6e\u4e3a True \uff08\u5982\u7b2c 11 \u7ae0\u6240\u8ff0\uff09\uff1a sess.run(training_op, feed_dict={X: X_batch, is_training: True}) \u4f46\u662f\uff0c\u5728\u6d4b\u8bd5\u671f\u95f4\uff0c\u4e0d\u9700\u8981\u5c06 is_training \u8bbe\u7f6e\u4e3a False \uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5bf9 placeholder_with_default() \u51fd\u6570\u8c03\u7528\u7684\u9ed8\u8ba4\u503c\u3002","title":"TensorFlow \u5b9e\u73b0"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_8","text":"\u901a\u5e38\u826f\u597d\u7279\u5f81\u63d0\u53d6\u7684\u53e6\u4e00\u79cd\u7ea6\u675f\u662f\u7a00\u758f\u6027\uff1a\u901a\u8fc7\u5411\u635f\u5931\u51fd\u6570\u6dfb\u52a0\u9002\u5f53\u7684\u9879\uff0c\u81ea\u7f16\u7801\u5668\u88ab\u63a8\u52a8\u4ee5\u51cf\u5c11\u7f16\u7801\u5c42\u4e2d\u6d3b\u52a8\u795e\u7ecf\u5143\u7684\u6570\u91cf\u3002 \u4f8b\u5982\uff0c\u5b83\u53ef\u80fd\u88ab\u63a8\u5230\u7f16\u7801\u5c42\u4e2d\u5e73\u5747\u53ea\u6709 5% \u7684\u663e\u7740\u6d3b\u8dc3\u7684\u795e\u7ecf\u5143\u3002 \u8fd9\u8feb\u4f7f\u81ea\u7f16\u7801\u5668\u5c06\u6bcf\u4e2a\u8f93\u5165\u8868\u793a\u4e3a\u5c11\u91cf\u6fc0\u6d3b\u7684\u7ec4\u5408\u3002 \u56e0\u6b64\uff0c\u7f16\u7801\u5c42\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u901a\u5e38\u90fd\u4f1a\u4ee3\u8868\u4e00\u4e2a\u6709\u7528\u7684\u7279\u5f81\uff08\u5982\u679c\u60a8\u6bcf\u4e2a\u6708\u53ea\u80fd\u8bf4\u51e0\u4e2a\u5b57\uff0c\u60a8\u53ef\u80fd\u4f1a\u8bd5\u7740\u8ba9\u5b83\u4eec\u503c\u5f97\u4e00\u542c\uff09\u3002 \u4e3a\u4e86\u652f\u6301\u7a00\u758f\u6a21\u578b\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5728\u6bcf\u6b21\u8bad\u7ec3\u8fed\u4ee3\u4e2d\u6d4b\u91cf\u7f16\u7801\u5c42\u7684\u5b9e\u9645\u7a00\u758f\u5ea6\u3002 \u6211\u4eec\u901a\u8fc7\u8ba1\u7b97\u6574\u4e2a\u8bad\u7ec3\u6279\u6b21\u4e2d\u7f16\u7801\u5c42\u4e2d\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u5e73\u5747\u6fc0\u6d3b\u6765\u5b9e\u73b0\u3002 \u6279\u91cf\u5927\u5c0f\u4e0d\u80fd\u592a\u5c0f\uff0c\u5426\u5219\u5e73\u5747\u6570\u4e0d\u51c6\u786e\u3002 \u4e00\u65e6\u6211\u4eec\u5bf9\u6bcf\u4e2a\u795e\u7ecf\u5143\u8fdb\u884c\u5e73\u5747\u6fc0\u6d3b\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u5411\u635f\u5931\u51fd\u6570\u6dfb\u52a0\u7a00\u758f\u635f\u5931\u6765\u60e9\u7f5a\u592a\u6d3b\u8dc3\u7684\u795e\u7ecf\u5143\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u6d4b\u91cf\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u5e73\u5747\u6fc0\u6d3b\u503c\u4e3a 0.3\uff0c\u4f46\u76ee\u6807\u7a00\u758f\u5ea6\u4e3a 0.1\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u53d7\u5230\u60e9\u7f5a\u624d\u80fd\u6fc0\u6d3b\u66f4\u5c11\u3002 \u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u5e73\u65b9\u8bef\u5dee (0.3-0.1)^2 \u6dfb\u52a0\u5230\u635f\u5931\u51fd\u6570\u4e2d\uff0c\u4f46\u5b9e\u9645\u4e0a\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 Kullback-Leibler \u6563\u5ea6\uff08\u5728\u7b2c 4 \u7ae0\u4e2d\u7b80\u8981\u8ba8\u8bba\uff09\uff0c\u5176\u5177\u6709\u6bd4\u5747\u65b9\u8bef\u5dee\u66f4\u5f3a\u7684\u68af\u5ea6\uff0c\u5982\u56fe 15-10 \u6240\u793a\u3002 \u7ed9\u5b9a\u4e24\u4e2a\u79bb\u6563\u7684\u6982\u7387\u5206\u5e03 P \u548c Q \uff0c\u8fd9\u4e9b\u5206\u5e03\u4e4b\u95f4\u7684 KL \u6563\u5ea6\uff0c\u8bb0\u4e3a Dkl(P || Q) \uff0c\u53ef\u4ee5\u4f7f\u7528\u516c\u5f0f 15-1 \u8ba1\u7b97\u3002 \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u60f3\u8981\u6d4b\u91cf\u7f16\u7801\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u5c06\u6fc0\u6d3b\u7684\u76ee\u6807\u6982\u7387 p \u4e0e\u5b9e\u9645\u6982\u7387 q \uff08\u5373\uff0c\u8bad\u7ec3\u6279\u6b21\u4e0a\u7684\u5e73\u5747\u6fc0\u6d3b\uff09\u4e4b\u95f4\u7684\u5dee\u5f02\u3002 \u6240\u4ee5KL\u6563\u5ea6\u7b80\u5316\u4e3a\u516c\u5f0f 15-2\u3002 \u4e00\u65e6\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u4e86\u7f16\u7801\u5c42\u4e2d\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u7a00\u758f\u635f\u5931\uff0c\u6211\u4eec\u5c31\u603b\u7ed3\u8fd9\u4e9b\u635f\u5931\uff0c\u5e76\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u635f\u5931\u51fd\u6570\u4e2d\u3002 \u4e3a\u4e86\u63a7\u5236\u7a00\u758f\u635f\u5931\u548c\u91cd\u6784\u635f\u5931\u7684\u76f8\u5bf9\u91cd\u8981\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7a00\u758f\u6743\u91cd\u8d85\u53c2\u6570\u4e58\u4ee5\u7a00\u758f\u635f\u5931\u3002 \u5982\u679c\u8fd9\u4e2a\u6743\u91cd\u592a\u9ad8\uff0c\u6a21\u578b\u4f1a\u7d27\u8d34\u76ee\u6807\u7a00\u758f\u5ea6\uff0c\u4f46\u5b83\u53ef\u80fd\u65e0\u6cd5\u6b63\u786e\u91cd\u5efa\u8f93\u5165\uff0c\u5bfc\u81f4\u6a21\u578b\u65e0\u7528\u3002 \u76f8\u53cd\uff0c\u5982\u679c\u5b83\u592a\u4f4e\uff0c\u6a21\u578b\u5c06\u5927\u591a\u5ffd\u7565\u7a00\u758f\u76ee\u6807\uff0c\u5b83\u4e0d\u4f1a\u5b66\u4e60\u4efb\u4f55\u6709\u8da3\u7684\u529f\u80fd\u3002","title":"\u7a00\u758f\u81ea\u7f16\u7801\u5668"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#tensorflow_2","text":"\u6211\u4eec\u73b0\u5728\u62e5\u6709\u4e86\u4f7f\u7528 TensorFlow \u5b9e\u73b0\u7a00\u758f\u81ea\u7f16\u7801\u5668\u6240\u9700\u7684\u5168\u90e8\u529f\u80fd\uff1a def kl_divergence(p, q): return p * tf.log(p / q) + (1 - p) * tf.log((1 - p) / (1 - q)) learning_rate = 0.01 sparsity_target = 0.1 sparsity_weight = 0.2 [...] # Build a normal autoencoder (in this example the coding layer is hidden1) optimizer = tf.train.AdamOptimizer(learning_rate) hidden1_mean = tf.reduce_mean(hidden1, axis=0) # batch mean sparsity_loss = tf.reduce_sum(kl_divergence(sparsity_target, hidden1_mean)) reconstruction_loss = tf.reduce_mean(tf.square(outputs - X)) # MSE loss = reconstruction_loss + sparsity_weight * sparsity_loss training_op = optimizer.minimize(loss) \u4e00\u4e2a\u91cd\u8981\u7684\u7ec6\u8282\u662f\u7f16\u7801\u5c42\u7684\u6fc0\u6d3b\u5fc5\u987b\u4ecb\u4e8e 0 \u548c 1 \u4e4b\u95f4\uff08\u4f46\u4e0d\u7b49\u4e8e 0 \u6216 1\uff09\uff0c\u5426\u5219 KL \u6563\u5ea6\u5c06\u8fd4\u56de NaN \uff08\u975e\u6570\u5b57\uff09\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5bf9\u7f16\u7801\u5c42\u4f7f\u7528\u903b\u8f91\u6fc0\u6d3b\u529f\u80fd\uff1a hidden1 = tf.nn.sigmoid(tf.matmul(X, weights1) + biases1) \u4e00\u4e2a\u7b80\u5355\u7684\u6280\u5de7\u53ef\u4ee5\u52a0\u901f\u6536\u655b\uff1a\u4e0d\u662f\u4f7f\u7528 MSE\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u5177\u6709\u8f83\u5927\u68af\u5ea6\u7684\u91cd\u5efa\u635f\u5931\u3002 \u4ea4\u53c9\u71b5\u901a\u5e38\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u8981\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u5fc5\u987b\u5bf9\u8f93\u5165\u8fdb\u884c\u89c4\u8303\u5316\u5904\u7406\uff0c\u4f7f\u5b83\u4eec\u7684\u53d6\u503c\u8303\u56f4\u4e3a 0 \u5230 1\uff0c\u5e76\u5728\u8f93\u51fa\u5c42\u4e2d\u4f7f\u7528\u903b\u8f91\u6fc0\u6d3b\u51fd\u6570\uff0c\u4ee5\u4fbf\u8f93\u51fa\u4e5f\u53d6\u503c\u4e3a 0 \u5230 1\u3002TensorFlow \u7684 sigmoid_cross_entropy_with_logits() \u51fd\u6570\u8d1f\u8d23 \u6709\u6548\u5730\u5c06 logistic\uff08sigmoid\uff09\u6fc0\u6d3b\u51fd\u6570\u5e94\u7528\u4e8e\u8f93\u51fa\u5e76\u8ba1\u7b97\u4ea4\u53c9\u71b5\uff1a [...] logits = tf.matmul(hidden1, weights2) + biases2) outputs = tf.nn.sigmoid(logits) reconstruction_loss = tf.reduce_sum( tf.nn.sigmoid_cross_entropy_with_logits(labels=X, logits=logits)) \u8bf7\u6ce8\u610f\uff0c\u8bad\u7ec3\u671f\u95f4\u4e0d\u9700\u8981\u8f93\u51fa\u64cd\u4f5c\uff08\u6211\u4eec\u4ec5\u5728\u6211\u4eec\u60f3\u8981\u67e5\u770b\u91cd\u5efa\u65f6\u624d\u4f7f\u7528\u5b83\uff09\u3002","title":"TensorFlow \u5b9e\u73b0"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#vae","text":"Diederik Kingma \u548c Max Welling \u4e8e 2014 \u5e74\u63a8\u51fa\u4e86\u53e6\u4e00\u7c7b\u91cd\u8981\u7684\u81ea\u7f16\u7801\u5668\uff0c\u5e76\u8fc5\u901f\u6210\u4e3a\u6700\u53d7\u6b22\u8fce\u7684\u81ea\u7f16\u7801\u5668\u7c7b\u578b\u4e4b\u4e00\uff1a\u53d8\u5206\u81ea\u7f16\u7801\u5668\u3002 \u5b83\u4eec\u4e0e\u6211\u4eec\u8fc4\u4eca\u4e3a\u6b62\u8ba8\u8bba\u7684\u6240\u6709\u81ea\u7f16\u7801\u5668\u5b8c\u5168\u4e0d\u540c\uff0c\u7279\u522b\u662f\uff1a \u5b83\u4eec\u662f\u6982\u7387\u81ea\u7f16\u7801\u5668\uff0c\u610f\u5473\u7740\u5373\u4f7f\u5728\u8bad\u7ec3\u4e4b\u540e\uff0c\u5b83\u4eec\u7684\u8f93\u51fa\u90e8\u5206\u4e5f\u662f\u5076\u7136\u786e\u5b9a\u7684\uff08\u76f8\u5bf9\u4e8e\u4ec5\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u968f\u673a\u6027\u7684\u81ea\u7f16\u7801\u5668\u7684\u53bb\u566a\uff09\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u4eec\u662f\u751f\u6210\u81ea\u7f16\u7801\u5668\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u751f\u6210\u770b\u8d77\u6765\u50cf\u4ece\u8bad\u7ec3\u96c6\u4e2d\u91c7\u6837\u7684\u65b0\u5b9e\u4f8b\u3002 \u8fd9\u4e24\u4e2a\u5c5e\u6027\u4f7f\u5b83\u4eec\u4e0e RBM \u975e\u5e38\u76f8\u4f3c\uff08\u89c1\u9644\u5f55 E\uff09\uff0c\u4f46\u5b83\u4eec\u66f4\u5bb9\u6613\u8bad\u7ec3\uff0c\u5e76\u4e14\u53d6\u6837\u8fc7\u7a0b\u66f4\u5feb\uff08\u5728 RBM \u4e4b\u524d\uff0c\u60a8\u9700\u8981\u7b49\u5f85\u7f51\u7edc\u7a33\u5b9a\u5728\u201c\u70ed\u5e73\u8861\u201d\u4e4b\u540e\u624d\u80fd\u8fdb\u884c\u53d6\u6837\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff09 \u6211\u4eec\u6765\u770b\u770b\u4ed6\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u56fe 15-11\uff08\u5de6\uff09\u663e\u793a\u4e86\u4e00\u4e2a\u53d8\u5206\u81ea\u7f16\u7801\u5668\u3002 \u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u8ba4\u8bc6\u5230\u6240\u6709\u81ea\u7f16\u7801\u5668\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u7f16\u7801\u5668\u540e\u8ddf\u89e3\u7801\u5668\uff08\u5728\u672c\u4f8b\u4e2d\uff0c\u5b83\u4eec\u90fd\u6709\u4e24\u4e2a\u9690\u85cf\u5c42\uff09\uff0c\u4f46\u6709\u4e00\u4e2a\u8f6c\u6298\u70b9\uff1a\u4e0d\u662f\u76f4\u63a5\u4e3a\u7ed9\u5b9a\u7684\u8f93\u5165\u751f\u6210\u7f16\u7801 \uff0c\u7f16\u7801\u5668\u4ea7\u751f\u5e73\u5747\u7f16\u7801 \u03bc \u548c\u6807\u51c6\u5dee \u03c3 \u3002 \u7136\u540e\u4ece\u5e73\u5747\u503c \u03bc \u548c\u6807\u51c6\u5dee \u03c3 \u7684\u9ad8\u65af\u5206\u5e03\u968f\u673a\u91c7\u6837\u5b9e\u9645\u7f16\u7801\u3002 \u4e4b\u540e\uff0c\u89e3\u7801\u5668\u6b63\u5e38\u89e3\u7801\u91c7\u6837\u7684\u7f16\u7801\u3002 \u8be5\u56fe\u7684\u53f3\u4fa7\u90e8\u5206\u663e\u793a\u4e86\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u901a\u8fc7\u6b64\u81ea\u7f16\u7801\u5668\u3002 \u9996\u5148\uff0c\u7f16\u7801\u5668\u4ea7\u751f \u03bc \u548c \u03c3 \uff0c\u968f\u540e\u5bf9\u7f16\u7801\u8fdb\u884c\u968f\u673a\u91c7\u6837\uff08\u6ce8\u610f\u5b83\u4e0d\u662f\u5b8c\u5168\u4f4d\u4e8e \u03bc \u5904\uff09\uff0c\u6700\u540e\u5bf9\u7f16\u7801\u8fdb\u884c\u89e3\u7801\uff0c\u6700\u7ec8\u7684\u8f93\u51fa\u4e0e\u8bad\u7ec3\u5b9e\u4f8b\u7c7b\u4f3c\u3002 \u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u5c3d\u7ba1\u8f93\u5165\u53ef\u80fd\u5177\u6709\u975e\u5e38\u590d\u6742\u7684\u5206\u5e03\uff0c\u4f46\u53d8\u5206\u81ea\u7f16\u7801\u5668\u503e\u5411\u4e8e\u4ea7\u751f\u7f16\u7801\uff0c\u770b\u8d77\u6765\u597d\u50cf\u5b83\u4eec\u662f\u4ece\u7b80\u5355\u7684\u9ad8\u65af\u5206\u5e03\u91c7\u6837\u7684\uff1a\u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u635f\u5931\u51fd\u6570\uff08\u5c06\u5728\u4e0b\u9762\u8ba8\u8bba\uff09\u63a8\u52a8 \u7f16\u7801\u5728\u7f16\u7801\u7a7a\u95f4\uff08\u4e5f\u79f0\u4e3a\u6f5c\u5728\u7a7a\u95f4\uff09\u5185\u9010\u6e10\u8fc1\u79fb\u4ee5\u5360\u636e\u770b\u8d77\u6765\u50cf\u9ad8\u65af\u70b9\u96c6\u6210\u7684\u4e91\u7684\u5927\u81f4\uff08\u8d85\uff09\u7403\u5f62\u533a\u57df\u3002 \u4e00\u4e2a\u91cd\u8981\u7684\u7ed3\u679c\u662f\uff0c\u5728\u8bad\u7ec3\u4e86\u4e00\u4e2a\u53d8\u5206\u81ea\u7f16\u7801\u5668\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff1a\u53ea\u9700\u4ece\u9ad8\u65af\u5206\u5e03\u4e2d\u62bd\u53d6\u4e00\u4e2a\u968f\u673a\u7f16\u7801\uff0c\u5bf9\u5b83\u8fdb\u884c\u89e3\u7801\u5c31\u53ef\u4ee5\u4e86\uff01 \u90a3\u4e48\u8ba9\u6211\u4eec\u770b\u770b\u635f\u5931\u51fd\u6570\u3002 \u5b83\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u3002 \u9996\u5148\u662f\u901a\u5e38\u7684\u91cd\u5efa\u635f\u5931\uff0c\u63a8\u52a8\u81ea\u7f16\u7801\u5668\u91cd\u73b0\u5176\u8f93\u5165\uff08\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u71b5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u524d\u6240\u8ff0\uff09\u3002 \u7b2c\u4e8c\u79cd\u662f\u6f5c\u5728\u7684\u635f\u5931\uff0c\u63a8\u52a8\u81ea\u7f16\u7801\u5668\u4f7f\u7f16\u7801\u770b\u8d77\u6765\u50cf\u662f\u4ece\u7b80\u5355\u7684\u9ad8\u65af\u5206\u5e03\u4e2d\u91c7\u6837\uff0c\u4e3a\u6b64\u6211\u4eec\u4f7f\u7528\u76ee\u6807\u5206\u5e03\uff08\u9ad8\u65af\u5206\u5e03\uff09\u4e0e\u7f16\u7801\u5b9e\u9645\u5206\u5e03\u4e4b\u95f4\u7684 KL \u6563\u5ea6\u3002 \u6570\u5b66\u6bd4\u4ee5\u524d\u590d\u6742\u4e00\u70b9\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u9ad8\u65af\u566a\u58f0\uff0c\u5b83\u9650\u5236\u4e86\u53ef\u4ee5\u4f20\u8f93\u5230\u7f16\u7801\u5c42\u7684\u4fe1\u606f\u91cf\uff08\u4ece\u800c\u63a8\u52a8\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u6709\u7528\u7684\u7279\u5f81\uff09\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e9b\u65b9\u7a0b\u7b80\u5316\u4e3a\u4e0b\u9762\u7684\u6f5c\u5728\u635f\u5931\u4ee3\u7801\uff1a eps = 1e-10 # smoothing term to avoid computing log(0) which is NaN latent_loss = 0.5 * tf.reduce_sum( tf.square(hidden3_sigma) + tf.square(hidden3_mean) - 1 - tf.log(eps + tf.square(hidden3_sigma))) \u4e00\u79cd\u5e38\u89c1\u7684\u53d8\u4f53\u662f\u8bad\u7ec3\u7f16\u7801\u5668\u8f93\u51fa \u03b3= log(\u03c3^2) \u800c\u4e0d\u662f \u03c3 \u3002 \u53ea\u8981\u6211\u4eec\u9700\u8981 \u03c3 \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97 \u03c3= exp(2/\u03b3) \u3002 \u8fd9\u4f7f\u5f97\u7f16\u7801\u5668\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u6355\u83b7\u4e0d\u540c\u6bd4\u4f8b\u7684 \u03c3 \uff0c\u4ece\u800c\u6709\u52a9\u4e8e\u52a0\u5feb\u6536\u655b\u901f\u5ea6\u3002 \u6f5c\u5728\u635f\u5931\u7ed3\u675f\u4f1a\u53d8\u5f97\u66f4\u7b80\u5355\u4e00\u4e9b\uff1a latent_loss = 0.5 * tf.reduce_sum( tf.exp(hidden3_gamma) + tf.square(hidden3_mean) - 1 - hidden3_gamma) \u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 log(\u03c3^2) \u53d8\u4f53\u6784\u5efa\u56fe 15-11\uff08\u5de6\uff09\u6240\u793a\u7684\u53d8\u5206\u81ea\u7f16\u7801\u5668: n_inputs = 28 * 28 # for MNIST n_hidden1 = 500 n_hidden2 = 500 n_hidden3 = 20 # codings n_hidden4 = n_hidden2 n_hidden5 = n_hidden1 n_outputs = n_inputs learning_rate = 0.001 with tf.contrib.framework.arg_scope( [fully_connected], activation_fn=tf.nn.elu, weights_initializer=tf.contrib.layers.variance_scaling_initializer()): X = tf.placeholder(tf.float32, [None, n_inputs]) hidden1 = fully_connected(X, n_hidden1) hidden2 = fully_connected(hidden1, n_hidden2) hidden3_mean = fully_connected(hidden2, n_hidden3, activation_fn=None) hidden3_gamma = fully_connected(hidden2, n_hidden3, activation_fn=None) hidden3_sigma = tf.exp(0.5 * hidden3_gamma) noise = tf.random_normal(tf.shape(hidden3_sigma), dtype=tf.float32) hidden3 = hidden3_mean + hidden3_sigma * noise hidden4 = fully_connected(hidden3, n_hidden4) hidden5 = fully_connected(hidden4, n_hidden5) logits = fully_connected(hidden5, n_outputs, activation_fn=None) outputs = tf.sigmoid(logits) reconstruction_loss = tf.reduce_sum( tf.nn.sigmoid_cross_entropy_with_logits(labels=X, logits=logits)) latent_loss = 0.5 * tf.reduce_sum( tf.exp(hidden3_gamma) + tf.square(hidden3_mean) - 1 - hidden3_gamma) cost = reconstruction_loss + latent_loss optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(cost) init = tf.global_variables_initializer()","title":"\u53d8\u5206\u81ea\u7f16\u7801\u5668\uff08VAE\uff09"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_9","text":"\u73b0\u5728\u8ba9\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u53d8\u5206\u81ea\u7f16\u7801\u5668\u6765\u751f\u6210\u770b\u8d77\u6765\u50cf\u624b\u5199\u6570\u5b57\u7684\u56fe\u50cf\u3002 \u6211\u4eec\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u8bad\u7ec3\u6a21\u578b\uff0c\u7136\u540e\u4ece\u9ad8\u65af\u5206\u5e03\u4e2d\u5bf9\u968f\u673a\u7f16\u7801\u8fdb\u884c\u91c7\u6837\u5e76\u5bf9\u5b83\u4eec\u8fdb\u884c\u89e3\u7801\u3002 import numpy as np n_digits = 60 n_epochs = 50 batch_size = 150 with tf.Session() as sess: init.run() for epoch in range(n_epochs): n_batches = mnist.train.num_examples // batch_size for iteration in range(n_batches): X_batch, y_batch = mnist.train.next_batch(batch_size) sess.run(training_op, feed_dict={X: X_batch}) codings_rnd = np.random.normal(size=[n_digits, n_hidden3]) outputs_val = outputs.eval(feed_dict={hidden3: codings_rnd}) \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7531autoencoder\u751f\u6210\u7684\u201c\u624b\u5199\u201d\u6570\u5b57\u662f\u4ec0\u4e48\u6837\u7684\uff08\u53c2\u89c1\u56fe15-12\uff09\uff1a for iteration in range(n_digits): plt.subplot(n_digits, 10, iteration + 1) plot_image(outputs_val[iteration])","title":"\u751f\u6210\u6570\u5b57"},{"location":"15.%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8/#_10","text":"\u76d1\u7763\u5f0f\u5b66\u4e60\u5728\u56fe\u50cf\u8bc6\u522b\uff0c\u8bed\u97f3\u8bc6\u522b\uff0c\u6587\u672c\u7ffb\u8bd1\u7b49\u65b9\u9762\u53d6\u5f97\u7684\u60ca\u4eba\u6210\u5c31\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u63a9\u76d6\u4e86\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u5c40\u9762\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u6b63\u5728\u84ec\u52c3\u53d1\u5c55\u3002 \u81ea\u7f16\u7801\u5668\u548c\u5176\u4ed6\u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u7684\u65b0\u4f53\u7cfb\u7ed3\u6784\u5b9a\u671f\u53d1\u660e\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u65e0\u6cd5\u5728\u672c\u4e66\u4e2d\u5168\u9762\u4ecb\u7ecd\u5b83\u4eec\u3002 \u4ee5\u4e0b\u662f\u60a8\u53ef\u80fd\u60f3\u8981\u67e5\u770b\u7684\u51e0\u79cd\u7c7b\u578b\u7684\u81ea\u7f16\u7801\u5668\u7684\u7b80\u8981\u8bf4\u660e\uff08\u7edd\u975e\u8be6\u5c3d\u65e0\u9057\uff09\uff1a \u538b\u7f29\u81ea\u7f16\u7801\u5668\uff08CAE\uff09 \u81ea\u7f16\u7801\u5668\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u53d7\u5230\u7ea6\u675f\uff0c\u56e0\u6b64\u4e0e\u8f93\u5165\u6709\u5173\u7684\u7f16\u7801\u7684\u5bfc\u6570\u5f88\u5c0f\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u4e24\u4e2a\u7c7b\u4f3c\u7684\u8f93\u5165\u5fc5\u987b\u5177\u6709\u76f8\u4f3c\u7684\u7f16\u7801\u3002 \u6808\u5f0f\u5377\u79ef\u81ea\u7f16\u7801\u5668\uff08SCAE\uff09 \u5b66\u4e60\u901a\u8fc7\u91cd\u6784\u901a\u8fc7\u5377\u79ef\u5c42\u5904\u7406\u7684\u56fe\u50cf\u6765\u63d0\u53d6\u89c6\u89c9\u7279\u5f81\u7684\u81ea\u7f16\u7801\u5668\u3002 \u751f\u6210\u968f\u673a\u7f51\u7edc\uff08GSN\uff09 \u6d88\u9664\u81ea\u7f16\u7801\u5668\u7684\u6cdb\u5316\uff0c\u589e\u52a0\u4e86\u751f\u6210\u6570\u636e\u7684\u80fd\u529b\u3002 \u8d62\u5bb6\u901a\u5403\uff08WTA\uff09\u7684\u81ea\u7f16\u7801 \u5728\u8bad\u7ec3\u671f\u95f4\uff0c\u5728\u8ba1\u7b97\u7f16\u7801\u5c42\u4e2d\u6240\u6709\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u4e4b\u540e\uff0c\u53ea\u4fdd\u7559\u8bad\u7ec3\u6279\u6b21\u4e0a\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u524d k% \u6fc0\u6d3b\uff0c\u5176\u4f59\u90e8\u5206\u8bbe\u4e3a\u96f6\u3002 \u81ea\u7136\u8fd9\u5bfc\u81f4\u7a00\u758f\u7684\u7f16\u7801\u3002 \u800c\u4e14\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u7684 WTA \u65b9\u6cd5\u6765\u4ea7\u751f\u7a00\u758f\u5377\u79ef\u81ea\u7f16\u7801\u5668\u3002 \u5bf9\u6297\u81ea\u7f16\u7801\u5668\uff08AAE\uff09 \u4e00\u4e2a\u7f51\u7edc\u88ab\u8bad\u7ec3\u6765\u91cd\u73b0\u5b83\u7684\u8f93\u5165\uff0c\u540c\u65f6\u53e6\u4e00\u4e2a\u7f51\u7edc\u88ab\u8bad\u7ec3\u53bb\u627e\u5230\u7b2c\u4e00\u4e2a\u7f51\u7edc\u4e0d\u80fd\u6b63\u786e\u91cd\u5efa\u7684\u8f93\u5165\u3002 \u8fd9\u63a8\u52a8\u4e86\u7b2c\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u5065\u58ee\u7684\u7f16\u7801\u3002","title":"\u5176\u4ed6\u81ea\u7f16\u7801\u5668"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/","text":"\u5341\u516d\u3001\u5f3a\u5316\u5b66\u4e60 \u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u5982\u4eca\u662f\u673a\u5668\u5b66\u4e60\u7684\u4e00\u5927\u4ee4\u4eba\u6fc0\u52a8\u7684\u9886\u57df\uff0c\u5f53\u7136\u4e4b\u524d\u4e5f\u662f\u3002\u81ea\u4ece 1950 \u5e74\u88ab\u53d1\u660e\u51fa\u6765\u540e\uff0c\u5b83\u5728\u8fd9\u4e9b\u5e74\u4ea7\u751f\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u5e94\u7528\uff0c\u5c24\u5176\u662f\u5728\u6e38\u620f\uff08\u4f8b\u5982 TD-Gammon\uff0c\u4e00\u4e2a\u897f\u6d0b\u53cc\u9646\u68cb\u7a0b\u5e8f\uff09\u548c\u53ca\u5176\u63a7\u5236\u9886\u57df\uff0c\u4f46\u662f\u4ece\u672a\u5f04\u51fa\u4ec0\u4e48\u5927\u65b0\u95fb\u3002\u76f4\u5230 2013 \u5e74\u4e00\u4e2a\u9769\u547d\u6027\u7684\u53d1\u5c55\uff1a\u6765\u81ea\u82f1\u56fd\u7684\u7814\u7a76\u8005\u53d1\u8d77\u4e86\u4e00\u9879 Deepmind \u9879\u76ee\uff0c\u8fd9\u4e2a\u9879\u76ee\u53ef\u4ee5\u5b66\u4e60\u53bb\u73a9\u4efb\u4f55\u4ece\u5934\u5f00\u59cb\u7684 Atari \u6e38\u620f\uff0c\u751a\u81f3\u591a\u6570\u6bd4\u4eba\u7c7b\u73a9\u7684\u8fd8\u8981\u597d\uff0c\u5b83\u4ec5\u4f7f\u7528\u50cf\u7d20\u4f5c\u4e3a\u8f93\u5165\u800c\u6ca1\u6709\u4f7f\u7528\u6e38\u620f\u89c4\u5219\u7684\u4efb\u4f55\u5148\u9a8c\u77e5\u8bc6\u3002\u8fd9\u662f\u4e00\u7cfb\u5217\u4ee4\u4eba\u60ca\u53f9\u7684\u58ee\u4e3e\u4e2d\u7684\u7b2c\u4e00\u4e2a\uff0c\u5e76\u5728 2016 \u5e74 3 \u6708\u4ee5\u4ed6\u4eec\u7684\u7cfb\u7edf\u963f\u5c14\u6cd5\u72d7\u6218\u80dc\u4e86\u4e16\u754c\u56f4\u68cb\u51a0\u519b\u674e\u4e16\u77f3\u800c\u544a\u7ec8\u3002\u4ece\u672a\u6709\u7a0b\u5e8f\u80fd\u52c9\u5f3a\u6253\u8d25\u8fd9\u4e2a\u6e38\u620f\u7684\u5927\u5e08\uff0c\u66f4\u4e0d\u7528\u8bf4\u4e16\u754c\u51a0\u519b\u4e86\u3002\u4eca\u5929\uff0cRL \u7684\u6574\u4e2a\u9886\u57df\u6b63\u5728\u6cb8\u817e\u7740\u65b0\u7684\u60f3\u6cd5\uff0c\u5176\u90fd\u5177\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u8303\u56f4\u3002DeepMind \u5728 2014 \u88ab\u8c37\u6b4c\u4ee5\u8d85\u8fc7 5 \u4ebf\u7f8e\u5143\u6536\u8d2d\u3002 \u90a3\u4e48\u4ed6\u4eec\u662f\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u4e8b\u540e\u770b\u6765\uff0c\u539f\u7406\u4f3c\u4e4e\u76f8\u5f53\u7b80\u5355\uff1a\u4ed6\u4eec\u5c06\u6df1\u5ea6\u5b66\u4e60\u8fd0\u7528\u5230\u5f3a\u5316\u5b66\u4e60\u9886\u57df\uff0c\u7ed3\u679c\u5374\u8d85\u8d8a\u4e86\u4ed6\u4eec\u6700\u75af\u72c2\u7684\u8bbe\u60f3\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u9996\u5148\u89e3\u91ca\u5f3a\u5316\u5b66\u4e60\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u64c5\u957f\u4e8e\u4ec0\u4e48\uff0c\u7136\u540e\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e24\u4e2a\u5728\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u9886\u57df\u6700\u91cd\u8981\u7684\u6280\u672f\uff1a\u7b56\u7565\u68af\u5ea6\u548c\u6df1\u5ea6 Q \u7f51\u7edc\uff08DQN\uff09\uff0c\u5305\u62ec\u8ba8\u8bba\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u6765\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u5e73\u8861\u79fb\u52a8\u8f66\u4e0a\u7684\u6746\u5b50\uff0c\u53e6\u4e00\u4e2a\u73a9 Atari \u6e38\u620f\u3002\u540c\u6837\u7684\u6280\u672f\u53ef\u4ee5\u7528\u4e8e\u5404\u79cd\u5404\u6837\u7684\u4efb\u52a1\uff0c\u4ece\u6b65\u884c\u673a\u5668\u4eba\u5230\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u3002 \u5b66\u4e60\u4f18\u5316\u5956\u52b1 \u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\uff0c\u667a\u80fd\u4f53\u5728\u73af\u5883\uff08environment\uff09\u4e2d\u89c2\u5bdf\uff08observation\uff09\u5e76\u4e14\u505a\u51fa\u51b3\u7b56\uff08action\uff09\uff0c\u968f\u540e\u5b83\u4f1a\u5f97\u5230\u5956\u52b1\uff08reward\uff09\u3002\u5b83\u7684\u76ee\u6807\u662f\u53bb\u5b66\u4e60\u5982\u4f55\u884c\u52a8\u80fd\u6700\u5927\u5316 \u671f\u671b\u5956\u52b1 \u3002\u5982\u679c\u4f60\u4e0d\u5728\u610f\u53bb\u62df\u4eba\u5316\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u6b63\u5956\u52b1\u662f\u6109\u5feb\uff0c\u8d1f\u5956\u52b1\u662f\u75db\u82e6\uff08\u8fd9\u6837\u7684\u8bdd\u5956\u52b1\u4e00\u8bcd\u5c31\u6709\u70b9\u8bef\u5bfc\u4e86\uff09\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u667a\u80fd\u4f53\u5728\u73af\u5883\u4e2d\u884c\u52a8\uff0c\u5e76\u4e14\u5728\u5b9e\u9a8c\u548c\u9519\u8bef\u4e2d\u53bb\u5b66\u4e60\u6700\u5927\u5316\u5b83\u7684\u6109\u5feb\uff0c\u6700\u5c0f\u5316\u5b83\u7684\u75db\u82e6\u3002 \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u5e7f\u6cdb\u7684\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u9002\u7528\u4e8e\u5404\u79cd\u5404\u6837\u7684\u4efb\u52a1\u3002\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50\uff08\u8be6\u89c1\u56fe 16-1\uff09\uff1a \u667a\u80fd\u4f53\u53ef\u4ee5\u662f\u63a7\u5236\u4e00\u4e2a\u673a\u68b0\u72d7\u7684\u7a0b\u5e8f\u3002\u5728\u6b64\u4f8b\u4e2d\uff0c\u73af\u5883\u5c31\u662f\u771f\u5b9e\u7684\u4e16\u754c\uff0c\u667a\u80fd\u4f53\u901a\u8fc7\u8bb8\u591a\u7684\u4f20\u611f\u5668\u4f8b\u5982\u6444\u50cf\u673a\u6216\u8005\u4f20\u611f\u5668\u6765\u89c2\u5bdf\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u7ed9\u7535\u673a\u53d1\u9001\u4fe1\u53f7\u6765\u884c\u52a8\u3002\u5b83\u53ef\u4ee5\u88ab\u7f16\u7a0b\u8bbe\u7f6e\u4e3a\u5982\u679c\u5230\u8fbe\u4e86\u76ee\u7684\u5730\u5c31\u5f97\u5230\u6b63\u5956\u52b1\uff0c\u5982\u679c\u6d6a\u8d39\u65f6\u95f4\uff0c\u6216\u8005\u8d70\u9519\u65b9\u5411\uff0c\u6216\u6454\u5012\u4e86\u5c31\u5f97\u5230\u8d1f\u5956\u52b1\u3002 \u667a\u80fd\u4f53\u53ef\u4ee5\u662f\u63a7\u5236 MS.Pac-Man \u7684\u7a0b\u5e8f\u3002\u5728\u6b64\u4f8b\u4e2d\uff0c\u73af\u5883\u662f Atari \u6e38\u620f\u7684\u4eff\u771f\uff0c\u884c\u4e3a\u662f 9 \u4e2a\u64cd\u7eb5\u6746\u4f4d\uff08\u4e0a\u4e0b\u5de6\u53f3\u4e2d\u95f4\u7b49\u7b49\uff09\uff0c\u89c2\u5bdf\u662f\u5c4f\u5e55\uff0c\u56de\u62a5\u5c31\u662f\u6e38\u620f\u70b9\u6570\u3002 \u76f8\u4f3c\u5730\uff0c\u667a\u80fd\u4f53\u4e5f\u53ef\u4ee5\u662f\u68cb\u76d8\u6e38\u620f\u7684\u7a0b\u5e8f\u4f8b\u5982\uff1a\u56f4\u68cb\u3002 \u667a\u80fd\u4f53\u4e5f\u53ef\u4ee5\u4e0d\u7528\u53bb\u63a7\u5236\u4e00\u4e2a\u5b9e\u4f53\uff08\u6216\u865a\u62df\u7684\uff09\u53bb\u79fb\u52a8\u3002\u4f8b\u5982\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u667a\u80fd\u7a0b\u5e8f\uff0c\u5f53\u5b83\u8c03\u6574\u5230\u76ee\u6807\u6e29\u5ea6\u4ee5\u8282\u80fd\u65f6\u4f1a\u5f97\u5230\u6b63\u5956\u52b1\uff0c\u5f53\u4eba\u4eec\u9700\u8981\u81ea\u5df1\u53bb\u8c03\u8282\u6e29\u5ea6\u65f6\u5b83\u4f1a\u5f97\u5230\u8d1f\u5956\u52b1\uff0c\u6240\u4ee5\u667a\u80fd\u4f53\u5fc5\u987b\u5b66\u4f1a\u9884\u89c1\u4eba\u4eec\u7684\u9700\u8981\u3002 \u667a\u80fd\u4f53\u4e5f\u53ef\u4ee5\u53bb\u89c2\u6d4b\u80a1\u7968\u5e02\u573a\u4ef7\u683c\u4ee5\u5b9e\u65f6\u51b3\u5b9a\u4e70\u5356\u3002\u5956\u52b1\u7684\u4f9d\u636e\u663e\u7136\u4e3a\u6323\u94b1\u6216\u8005\u8d54\u94b1\u3002 \u5176\u5b9e\u6ca1\u6709\u6b63\u5956\u52b1\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f8b\u5982\u667a\u80fd\u4f53\u5728\u8ff7\u5bab\u5185\u79fb\u52a8\uff0c\u5b83\u6bcf\u5206\u6bcf\u79d2\u90fd\u5f97\u5230\u4e00\u4e2a\u8d1f\u5956\u52b1\uff0c\u6240\u4ee5\u5b83\u8981\u5c3d\u53ef\u80fd\u5feb\u7684\u627e\u5230\u51fa\u53e3\uff01\u8fd8\u6709\u5f88\u591a\u9002\u5408\u5f3a\u5316\u5b66\u4e60\u7684\u9886\u57df\uff0c\u4f8b\u5982\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\uff0c\u5728\u7f51\u9875\u4e0a\u653e\u5e7f\u544a\uff0c\u6216\u8005\u63a7\u5236\u4e00\u4e2a\u56fe\u50cf\u5206\u7c7b\u7cfb\u7edf\u8ba9\u5b83\u660e\u767d\u5b83\u5e94\u8be5\u5173\u6ce8\u4e8e\u4ec0\u4e48\u3002 \u7b56\u7565\u641c\u7d22 \u88ab\u667a\u80fd\u4f53\u4f7f\u7528\u53bb\u6539\u53d8\u5b83\u884c\u4e3a\u7684\u7b97\u6cd5\u53eb\u505a\u7b56\u7565\u3002\u4f8b\u5982\uff0c\u7b56\u7565\u53ef\u4ee5\u662f\u4e00\u4e2a\u628a\u89c2\u6d4b\u5f53\u8f93\u5165\uff0c\u884c\u4e3a\u5f53\u505a\u8f93\u51fa\u7684\u795e\u7ecf\u7f51\u7edc\uff08\u89c1\u56fe16-2\uff09\u3002 \u8fd9\u4e2a\u7b56\u7565\u53ef\u4ee5\u662f\u4f60\u80fd\u60f3\u5230\u7684\u4efb\u4f55\u7b97\u6cd5\uff0c\u5b83\u751a\u81f3\u53ef\u4ee5\u4e0d\u88ab\u786e\u5b9a\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e2a\u771f\u7a7a\u5438\u5c18\u5668\uff0c\u5b83\u7684\u5956\u52b1\u662f\u5728 30 \u5206\u949f\u5185\u6361\u8d77\u7684\u7070\u5c18\u6570\u91cf\u3002\u5b83\u7684\u7b56\u7565\u53ef\u4ee5\u662f\u6bcf\u79d2\u4ee5\u6982\u7387 P \u5411\u524d\u79fb\u52a8\uff0c\u6216\u8005\u4ee5\u6982\u7387 1-P \u968f\u673a\u5730\u5411\u5de6\u6216\u5411\u53f3\u65cb\u8f6c\u3002\u65cb\u8f6c\u89d2\u5ea6\u5c06\u662f -R \u548c +R \u4e4b\u95f4\u7684\u968f\u673a\u89d2\u5ea6\uff0c\u56e0\u4e3a\u8be5\u7b56\u7565\u6d89\u53ca\u4e00\u4e9b\u968f\u673a\u6027\uff0c\u6240\u4ee5\u79f0\u4e3a\u968f\u673a\u7b56\u7565\u3002\u673a\u5668\u4eba\u5c06\u6709\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u8f68\u8ff9\uff0c\u5b83\u4fdd\u8bc1\u5b83\u6700\u7ec8\u4f1a\u5230\u8fbe\u4efb\u4f55\u53ef\u4ee5\u5230\u8fbe\u7684\u5730\u65b9\uff0c\u5e76\u6361\u8d77\u6240\u6709\u7684\u7070\u5c18\u3002\u95ee\u9898\u662f\uff1a30\u5206\u949f\u540e\u5b83\u4f1a\u6361\u8d77\u591a\u5c11\u7070\u5c18\uff1f \u4f60\u600e\u4e48\u8bad\u7ec3\u8fd9\u6837\u7684\u673a\u5668\u4eba\uff1f\u4f60\u53ef\u4ee5\u8c03\u6574\u4e24\u4e2a\u7b56\u7565\u53c2\u6570\uff1a\u6982\u7387 P \u548c\u89d2\u5ea6\u8303\u56f4 R \u3002\u4e00\u4e2a\u60f3\u6cd5\u662f\u8fd9\u4e9b\u53c2\u6570\u5c1d\u8bd5\u8bb8\u591a\u4e0d\u540c\u7684\u503c\uff0c\u5e76\u9009\u62e9\u6267\u884c\u6700\u4f73\u7684\u7ec4\u5408\uff08\u89c1\u56fe 16-3\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u7b56\u7565\u641c\u7d22\u7684\u4f8b\u5b50\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f7f\u7528\u91ce\u86ee\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u5f53\u7b56\u7565\u7a7a\u95f4\u592a\u5927\uff08\u901a\u5e38\u60c5\u51b5\u4e0b\uff09\uff0c\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u627e\u5230\u4e00\u7ec4\u597d\u7684\u53c2\u6570\u5c31\u50cf\u662f\u5927\u6d77\u635e\u9488\u3002 \u53e6\u4e00\u79cd\u641c\u5bfb\u7b56\u7565\u7a7a\u95f4\u7684\u65b9\u6cd5\u662f\u9057\u4f20\u7b97\u6cd5\u3002\u4f8b\u5982\u4f60\u53ef\u4ee5\u968f\u673a\u521b\u9020\u4e00\u4e2a\u5305\u542b 100 \u4e2a\u7b56\u7565\u7684\u7b2c\u4e00\u4ee3\u57fa\u56e0\uff0c\u968f\u540e\u6740\u6b7b 80 \u4e2a\u7cdf\u7cd5\u7684\u7b56\u7565\uff0c\u968f\u540e\u8ba9 20 \u4e2a\u5e78\u5b58\u7b56\u7565\u7e41\u884d 4 \u4ee3\u3002\u4e00\u4e2a\u540e\u4ee3\u53ea\u662f\u5b83\u7236\u8f88\u57fa\u56e0\u7684\u590d\u5236\u54c1\u52a0\u4e0a\u4e00\u4e9b\u968f\u673a\u53d8\u5f02\u3002\u5e78\u5b58\u7684\u7b56\u7565\u52a0\u4e0a\u4ed6\u4eec\u7684\u540e\u4ee3\u5171\u540c\u6784\u6210\u4e86\u7b2c\u4e8c\u4ee3\u3002\u4f60\u53ef\u4ee5\u7ee7\u7eed\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fed\u4ee3\u4ee3\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u597d\u7684\u7b56\u7565\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u4f18\u5316\u6280\u672f\uff0c\u901a\u8fc7\u8bc4\u4f30\u5956\u52b1\u5173\u4e8e\u7b56\u7565\u53c2\u6570\u7684\u68af\u5ea6\uff0c\u7136\u540e\u901a\u8fc7\u8ddf\u968f\u68af\u5ea6\u5411\u66f4\u9ad8\u7684\u5956\u52b1\uff08\u68af\u5ea6\u4e0a\u5347\uff09\u8c03\u6574\u8fd9\u4e9b\u53c2\u6570\u3002\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a\u7b56\u7565\u68af\u5ea6\uff08policy gradient, PG\uff09\uff0c\u6211\u4eec\u5c06\u5728\u672c\u7ae0\u540e\u9762\u8be6\u7ec6\u8ba8\u8bba\u3002\u4f8b\u5982\uff0c\u56de\u5230\u771f\u7a7a\u5438\u5c18\u5668\u673a\u5668\u4eba\uff0c\u4f60\u53ef\u4ee5\u7a0d\u5fae\u589e\u52a0\u6982\u7387P\u5e76\u8bc4\u4f30\u8fd9\u662f\u5426\u589e\u52a0\u4e86\u673a\u5668\u4eba\u5728 30 \u5206\u949f\u5185\u62fe\u8d77\u7684\u7070\u5c18\u7684\u91cf\uff1b\u5982\u679c\u786e\u5b9e\u589e\u52a0\u4e86\uff0c\u5c31\u76f8\u5bf9\u5e94\u589e\u52a0 P \uff0c\u5426\u5219\u51cf\u5c11 P \u3002\u6211\u4eec\u5c06\u4f7f\u7528 Tensorflow \u6765\u5b9e\u73b0 PG \u7b97\u6cd5\uff0c\u4f46\u662f\u5728\u8fd9\u4e4b\u524d\u6211\u4eec\u9700\u8981\u4e3a\u667a\u80fd\u4f53\u521b\u9020\u4e00\u4e2a\u751f\u5b58\u7684\u73af\u5883\uff0c\u6240\u4ee5\u73b0\u5728\u662f\u4ecb\u7ecd OpenAI \u7684\u65f6\u5019\u4e86\u3002 OpenAI \u7684\u4ecb\u7ecd \u5f3a\u5316\u5b66\u4e60\u7684\u4e00\u4e2a\u6311\u6218\u662f\uff0c\u4e3a\u4e86\u8bad\u7ec3\u667a\u80fd\u4f53\uff0c\u9996\u5148\u9700\u8981\u6709\u4e00\u4e2a\u5de5\u4f5c\u73af\u5883\u3002\u5982\u679c\u4f60\u60f3\u8bbe\u8ba1\u4e00\u4e2a\u53ef\u4ee5\u5b66\u4e60 Atari \u6e38\u620f\u7684\u7a0b\u5e8f\uff0c\u4f60\u9700\u8981\u4e00\u4e2a Atari \u6e38\u620f\u6a21\u62df\u5668\u3002\u5982\u679c\u4f60\u60f3\u8bbe\u8ba1\u4e00\u4e2a\u6b65\u884c\u673a\u5668\u4eba\uff0c\u90a3\u4e48\u73af\u5883\u5c31\u662f\u771f\u5b9e\u7684\u4e16\u754c\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\u8bad\u7ec3\u4f60\u7684\u673a\u5668\u4eba\uff0c\u4f46\u662f\u8fd9\u6709\u5176\u5c40\u9650\u6027\uff1a\u5982\u679c\u673a\u5668\u4eba\u4ece\u60ac\u5d16\u4e0a\u6389\u4e0b\u6765\uff0c\u4f60\u4e0d\u80fd\u4ec5\u4ec5\u70b9\u51fb\u201c\u64a4\u6d88\u201d\u3002\u4f60\u4e5f\u4e0d\u80fd\u52a0\u5feb\u65f6\u95f4\uff1b\u589e\u52a0\u66f4\u591a\u7684\u8ba1\u7b97\u80fd\u529b\u4e0d\u4f1a\u8ba9\u673a\u5668\u4eba\u79fb\u52a8\u5f97\u66f4\u5feb\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u540c\u65f6\u8bad\u7ec3 1000 \u4e2a\u673a\u5668\u4eba\u662f\u975e\u5e38\u6602\u8d35\u7684\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8bad\u7ec3\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u662f\u56f0\u96be\u548c\u7f13\u6162\u7684\uff0c\u6240\u4ee5\u4f60\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u6a21\u62df\u73af\u5883\uff0c\u81f3\u5c11\u9700\u8981\u5f15\u5bfc\u8bad\u7ec3\u3002 OpenAI gym \u662f\u4e00\u4e2a\u5de5\u5177\u5305\uff0c\u5b83\u63d0\u4f9b\u5404\u79cd\u5404\u6837\u7684\u6a21\u62df\u73af\u5883\uff08Atari \u6e38\u620f\uff0c\u68cb\u76d8\u6e38\u620f\uff0c2D \u548c 3D \u7269\u7406\u6a21\u62df\u7b49\u7b49\uff09\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8bad\u7ec3\uff0c\u6bd4\u8f83\uff0c\u6216\u5f00\u53d1\u65b0\u7684 RL \u7b97\u6cd5\u3002 \u8ba9\u6211\u4eec\u5b89\u88c5 OpenAI gym\u3002\u53ef\u901a\u8fc7 pip \u5b89\u88c5\uff1a $ pip install --upgrade gym \u63a5\u4e0b\u6765\u6253\u5f00 Python shell \u6216 Jupyter \u7b14\u8bb0\u672c\u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u73af\u5883\uff1a >>> import gym >>> env = gym.make(\"CartPole-v0\") [2016-10-14 16:03:23,199] Making new env: MsPacman-v0 >>> obs = env.reset() >>> obs array([-0.03799846,-0.03288115,0.02337094,0.00720711]) >>> env.render() \u4f7f\u7528 make() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u73af\u5883\uff0c\u5728\u6b64\u4f8b\u4e2d\u662f CartPole \u73af\u5883\u3002\u8fd9\u662f\u4e00\u4e2a 2D \u6a21\u62df\uff0c\u5176\u4e2d\u63a8\u8f66\u53ef\u4ee5\u88ab\u5de6\u53f3\u52a0\u901f\uff0c\u4ee5\u5e73\u8861\u653e\u7f6e\u5728\u5b83\u4e0a\u9762\u7684\u5e73\u8861\u6746\uff08\u89c1\u56fe 16-4\uff09\u3002\u5728\u521b\u5efa\u73af\u5883\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 reset() \u521d\u59cb\u5316\u3002\u8fd9\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u89c2\u5bdf\u7ed3\u679c\u3002\u89c2\u5bdf\u53d6\u51b3\u4e8e\u73af\u5883\u7684\u7c7b\u578b\u3002\u5bf9\u4e8e CartPole \u73af\u5883\uff0c\u6bcf\u4e2a\u89c2\u6d4b\u662f\u5305\u542b\u56db\u4e2a\u6d6e\u70b9\u7684 1D Numpy \u5411\u91cf\uff1a\u8fd9\u4e9b\u6d6e\u70b9\u6570\u4ee3\u8868\u63a8\u8f66\u7684\u6c34\u5e73\u4f4d\u7f6e\uff080 \u4e3a\u4e2d\u5fc3\uff09\u3001\u5176\u901f\u5ea6\u3001\u6746\u7684\u89d2\u5ea6\uff080 \u7ef4\u5782\u76f4\uff09\u53ca\u5176\u89d2\u901f\u5ea6\u3002\u6700\u540e\uff0c render() \u65b9\u6cd5\u663e\u793a\u5982\u56fe 16-4 \u6240\u793a\u7684\u73af\u5883\u3002 \u5982\u679c\u4f60\u60f3\u8ba9 render() \u8ba9\u56fe\u50cf\u4ee5\u4e00\u4e2a NUMPY \u6570\u7ec4\u683c\u5f0f\u8fd4\u56de\uff0c\u53ef\u4ee5\u5c06 mode \u53c2\u6570\u8bbe\u7f6e\u4e3a rgb_array \uff08\u6ce8\u610f\u5176\u4ed6\u73af\u5883\u53ef\u80fd\u652f\u6301\u4e0d\u540c\u7684\u6a21\u5f0f\uff09\uff1a >>> img = env.render(mode=\"rgb_array\") >>> img.shape # height, width, channels (3=RGB) (400, 600, 3) \u4e0d\u5e78\u7684\u662f\uff0c\u5373\u4f7f\u5c06 mode \u53c2\u6570\u8bbe\u7f6e\u4e3a rgb_array \uff0cCartPole\uff08\u548c\u5176\u4ed6\u4e00\u4e9b\u73af\u5883\uff09\u8fd8\u662f\u4f1a\u5c06\u5c06\u56fe\u50cf\u5448\u73b0\u5230\u5c4f\u5e55\u4e0a\u3002\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u7684\u552f\u4e00\u65b9\u5f0f\u662f\u4f7f\u7528\u4e00\u4e2a fake X \u670d\u52a1\u5668\uff0c\u5982 XVFB \u6216 XDimMy\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 XVFB \u548c\u542f\u52a8 Python\uff1a xvfb-run -s \"screen 0 1400x900x24\" python \u3002\u6216\u8005\u4f7f\u7528 xvfbwrapper \u5305\u3002 \u8ba9\u6211\u4eec\u6765\u8be2\u95ee\u73af\u5883\u4ec0\u4e48\u52a8\u4f5c\u662f\u53ef\u80fd\u7684\uff1a >>> env.action_space Discrete(2) Discrete(2) \u8868\u793a\u53ef\u80fd\u7684\u52a8\u4f5c\u662f\u6574\u6570 0 \u548c 1\uff0c\u8868\u793a\u5411\u5de6\uff080\uff09\u6216\u53f3\uff081\uff09\u7684\u52a0\u901f\u3002\u5176\u4ed6\u73af\u5883\u53ef\u80fd\u6709\u66f4\u591a\u7684\u52a8\u4f5c\uff0c\u6216\u8005\u5176\u4ed6\u7c7b\u578b\u7684\u52a8\u4f5c\uff08\u4f8b\u5982\uff0c\u8fde\u7eed\u7684\uff09\u3002\u56e0\u4e3a\u6746\u5b50\u5411\u53f3\u503e\u659c\uff0c\u8ba9\u6211\u4eec\u5411\u53f3\u52a0\u901f\u63a8\u8f66\uff1a >>> action = 1 # accelerate right >>> obs, reward, done, info = env.step(action) >>> obs array([-0.03865608, 0.16189797, 0.02351508, -0.27801135]) >>> reward 1.0 >>> done False >>> info {} step() \u8868\u793a\u6267\u884c\u7ed9\u5b9a\u7684\u52a8\u4f5c\u5e76\u8fd4\u56de\u56db\u4e2a\u503c\uff1a obs : \u8fd9\u662f\u65b0\u7684\u89c2\u6d4b\uff0c\u5c0f\u8f66\u73b0\u5728\u6b63\u5728\u5411\u53f3\u8d70\uff08 obs[1]>0 \uff0c\u6ce8\uff1a\u5f53\u524d\u901f\u5ea6\u4e3a\u6b63\uff0c\u5411\u53f3\u4e3a\u6b63\uff09\u3002\u5e73\u8861\u6746\u4ecd\u7136\u5411\u53f3\u503e\u659c\uff08 obs[2]>0 \uff09\uff0c\u4f46\u662f\u4ed6\u7684\u89d2\u901f\u5ea6\u73b0\u5728\u4e3a\u8d1f\uff08 obs[3]<0 \uff09\uff0c\u6240\u4ee5\u5b83\u5728\u4e0b\u4e00\u6b65\u540e\u53ef\u80fd\u4f1a\u5411\u5de6\u503e\u659c\u3002 reward \uff1a \u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\uff0c\u65e0\u8bba\u4f60\u505a\u4ec0\u4e48\uff0c\u6bcf\u4e00\u6b65\u90fd\u4f1a\u5f97\u5230 1.0 \u5956\u52b1\uff0c\u6240\u4ee5\u6e38\u620f\u7684\u76ee\u6807\u5c31\u662f\u5c3d\u53ef\u80fd\u957f\u7684\u8fd0\u884c\u3002 done \uff1a \u5f53\u6e38\u620f\u7ed3\u675f\u65f6\u8fd9\u4e2a\u503c\u4f1a\u4e3a True \u3002\u5f53\u5e73\u8861\u6746\u503e\u659c\u592a\u591a\u65f6\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u4e4b\u540e\uff0c\u5fc5\u987b\u91cd\u65b0\u8bbe\u7f6e\u73af\u5883\u624d\u80fd\u91cd\u65b0\u4f7f\u7528\u3002 info \uff1a \u8be5\u5b57\u5178\u53ef\u4ee5\u5728\u5176\u4ed6\u73af\u5883\u4e2d\u63d0\u4f9b\u989d\u5916\u7684\u8c03\u8bd5\u4fe1\u606f\u3002\u8fd9\u4e9b\u6570\u636e\u4e0d\u5e94\u8be5\u7528\u4e8e\u8bad\u7ec3\uff08\u8fd9\u662f\u4f5c\u5f0a\uff09\u3002 \u8ba9\u6211\u4eec\u786c\u7f16\u7801\u4e00\u4e2a\u7b80\u5355\u7684\u7b56\u7565\uff0c\u5f53\u6746\u5411\u5de6\u503e\u659c\u65f6\u52a0\u901f\u5de6\u8fb9\uff0c\u5f53\u6746\u5411\u53f3\u503e\u659c\u65f6\u52a0\u901f\u3002\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u7b56\u7565\u6765\u83b7\u5f97\u8d85\u8fc7 500 \u6b65\u7684\u5e73\u5747\u56de\u62a5\uff1a def basic_policy(obs): angle = obs[2] return 0 if angle < 0 else 1 totals = [] for episode in range(500): episode_rewards = 0 obs = env.reset() for step in range(1000): # \u6700\u591a1000 \u6b65\uff0c\u6211\u4eec\u4e0d\u60f3\u8ba9\u5b83\u6c38\u8fdc\u8fd0\u884c\u4e0b\u53bb action = basic_policy(obs) obs, reward, done, info = env.step(action) episode_rewards += reward if done: break totals.append(episode_rewards) \u8fd9\u4e2a\u4ee3\u7801\u5e0c\u671b\u80fd\u81ea\u6211\u89e3\u91ca\u3002\u8ba9\u6211\u4eec\u770b\u770b\u7ed3\u679c\uff1a >>> import numpy as np >>> np.mean(totals), np.std(totals), np.min(totals), np.max(totals) (42.125999999999998, 9.1237121830974033, 24.0, 68.0) \u5373\u4f7f\u6709 500 \u6b21\u5c1d\u8bd5\uff0c\u8fd9\u4e00\u7b56\u7565\u4ece\u672a\u4f7f\u5e73\u8861\u6746\u5728\u8d85\u8fc7 68 \u4e2a\u8fde\u7eed\u7684\u6b65\u9aa4\u91cc\u4fdd\u6301\u76f4\u7acb\u3002\u8fd9\u4e0d\u592a\u597d\u3002\u5982\u679c\u4f60\u770b\u4e00\u4e0b Juyter Notebook \u4e2d\u7684\u6a21\u62df\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u63a8\u8f66\u8d8a\u6765\u8d8a\u5f3a\u70c8\u5730\u5de6\u53f3\u6446\u52a8\uff0c\u76f4\u5230\u5e73\u8861\u6746\u503e\u659c\u592a\u591a\u3002\u8ba9\u6211\u4eec\u770b\u770b\u795e\u7ecf\u7f51\u7edc\u662f\u5426\u80fd\u63d0\u51fa\u66f4\u597d\u7684\u7b56\u7565\u3002 \u795e\u7ecf\u7f51\u7edc\u7b56\u7565 \u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\u3002\u5c31\u50cf\u4e4b\u524d\u6211\u4eec\u7f16\u7801\u7684\u7b56\u7565\u4e00\u6837\uff0c\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\u5c06\u628a\u89c2\u5bdf\u4f5c\u4e3a\u8f93\u5165\uff0c\u8f93\u51fa\u8981\u6267\u884c\u7684\u52a8\u4f5c\u3002\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u5b83\u5c06\u4f30\u8ba1\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6982\u7387\uff0c\u7136\u540e\u6211\u4eec\u5c06\u6839\u636e\u4f30\u8ba1\u7684\u6982\u7387\u968f\u673a\u5730\u9009\u62e9\u4e00\u4e2a\u52a8\u4f5c\uff08\u89c1\u56fe 16-5\uff09\u3002\u5728 CartPole \u73af\u5883\u4e2d\uff0c\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u52a8\u4f5c\uff08\u5de6\u6216\u53f3\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u3002\u5b83\u5c06\u8f93\u51fa\u52a8\u4f5c 0\uff08\u5de6\uff09\u7684\u6982\u7387 p \uff0c\u52a8\u4f5c 1\uff08\u53f3\uff09\u7684\u6982\u7387\u663e\u7136\u5c06\u662f 1 - p \u3002 \u4f8b\u5982\uff0c\u5982\u679c\u5b83\u8f93\u51fa 0.7\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u4ee5 70% \u7684\u6982\u7387\u9009\u62e9\u52a8\u4f5c 0\uff0c\u4ee5 30% \u7684\u6982\u7387\u9009\u62e9\u52a8\u4f5c 1\u3002 \u4f60\u53ef\u80fd\u5947\u602a\u4e3a\u4ec0\u4e48\u6211\u4eec\u6839\u636e\u795e\u7ecf\u7f51\u7edc\u7ed9\u51fa\u7684\u6982\u7387\u6765\u9009\u62e9\u968f\u673a\u7684\u52a8\u4f5c\uff0c\u800c\u4e0d\u662f\u9009\u62e9\u6700\u9ad8\u5206\u6570\u7684\u52a8\u4f5c\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u667a\u80fd\u4f53\u5728 \u63a2\u7d22\u65b0\u7684\u884c\u4e3a \u548c \u5229\u7528\u90a3\u4e9b\u5df2\u77e5\u53ef\u884c\u7684\u884c\u52a8 \u4e4b\u95f4\u627e\u5230\u6b63\u786e\u7684\u5e73\u8861\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5047\u8bbe\u4f60\u7b2c\u4e00\u6b21\u53bb\u9910\u9986\uff0c\u6240\u6709\u7684\u83dc\u770b\u8d77\u6765\u540c\u6837\u5438\u5f15\u4eba\uff0c\u6240\u4ee5\u4f60\u968f\u673a\u6311\u9009\u4e00\u4e2a\u3002\u5982\u679c\u83dc\u597d\u5403\uff0c\u4f60\u53ef\u4ee5\u589e\u52a0\u4e0b\u4e00\u6b21\u70b9\u5b83\u7684\u6982\u7387\uff0c\u4f46\u662f\u4f60\u4e0d\u5e94\u8be5\u628a\u8fd9\u4e2a\u6982\u7387\u63d0\u9ad8\u5230 100%\uff0c\u5426\u5219\u4f60\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u5c1d\u8bd5\u5176\u4ed6\u83dc\u80b4\uff0c\u5176\u4e2d\u4e00\u4e9b\u751a\u81f3\u6bd4\u4f60\u5c1d\u8bd5\u7684\u66f4\u597d\u3002 \u8fd8\u8981\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u7279\u5b9a\u7684\u73af\u5883\u4e2d\uff0c\u8fc7\u53bb\u7684\u52a8\u4f5c\u548c\u89c2\u5bdf\u53ef\u4ee5\u88ab\u5b89\u5168\u5730\u5ffd\u7565\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u89c2\u5bdf\u90fd\u5305\u542b\u73af\u5883\u7684\u5b8c\u6574\u72b6\u6001\u3002\u5982\u679c\u6709\u4e00\u4e9b\u9690\u85cf\u72b6\u6001\uff0c\u90a3\u4e48\u4f60\u4e5f\u9700\u8981\u8003\u8651\u8fc7\u53bb\u7684\u884c\u4e3a\u548c\u89c2\u5bdf\u3002\u4f8b\u5982\uff0c\u5982\u679c\u73af\u5883\u4ec5\u4ec5\u63ed\u793a\u4e86\u63a8\u8f66\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u901f\u5ea6\uff0c\u90a3\u4e48\u4f60\u4e0d\u4ec5\u8981\u8003\u8651\u5f53\u524d\u7684\u89c2\u6d4b\uff0c\u8fd8\u8981\u8003\u8651\u5148\u524d\u7684\u89c2\u6d4b\uff0c\u4ee5\u4fbf\u4f30\u8ba1\u5f53\u524d\u7684\u901f\u5ea6\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u5f53\u89c2\u6d4b\u662f\u6709\u566a\u58f0\u7684\u7684\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u5e38\u4f60\u60f3\u7528\u8fc7\u53bb\u7684\u89c2\u5bdf\u6765\u4f30\u8ba1\u6700\u53ef\u80fd\u7684\u5f53\u524d\u72b6\u6001\u3002\u56e0\u6b64\uff0cCartPole \u95ee\u9898\u662f\u7b80\u5355\u7684\uff1b\u89c2\u6d4b\u662f\u65e0\u566a\u58f0\u7684\uff0c\u800c\u4e14\u5b83\u4eec\u5305\u542b\u73af\u5883\u7684\u5168\u72b6\u6001\u3002 import tensorflow as tf from tensorflow.contrib.layers import fully_connected # 1. \u58f0\u660e\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784 n_inputs = 4 # == env.observation_space.shape[0] n_hidden = 4 # \u8fd9\u53ea\u662f\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u4e0d\u9700\u8981\u8fc7\u591a\u7684\u9690\u85cf\u5c42 n_outputs = 1 # \u53ea\u8f93\u51fa\u5411\u5de6\u52a0\u901f\u7684\u6982\u7387 initializer = tf.contrib.layers.variance_scaling_initializer() # 2. \u5efa\u7acb\u795e\u7ecf\u7f51\u7edc X = tf.placeholder(tf.float32, shape=[None, n_inputs]) hidden = fully_connected(X, n_hidden, activation_fn=tf.nn.elu,weights_initializer=initializer) # \u9690\u5c42\u6fc0\u6d3b\u51fd\u6570\u4f7f\u7528\u6307\u6570\u7ebf\u6027\u51fd\u6570 logits = fully_connected(hidden, n_outputs, activation_fn=None,weights_initializer=initializer) outputs = tf.nn.sigmoid(logits) # 3. \u5728\u6982\u7387\u57fa\u7840\u4e0a\u968f\u673a\u9009\u62e9\u52a8\u4f5c p_left_and_right = tf.concat(axis=1, values=[outputs, 1 - outputs]) action = tf.multinomial(tf.log(p_left_and_right), num_samples=1) init = tf.global_variables_initializer() \u8ba9\u6211\u4eec\u901a\u8bfb\u4ee3\u7801\uff1a \u5728\u5bfc\u5165\u4e4b\u540e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u3002\u8f93\u5165\u7684\u6570\u91cf\u662f\u89c2\u6d4b\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u5728 CartPole \u7684\u60c5\u51b5\u4e0b\u662f 4 \u4e2a\uff09\uff0c\u6211\u4eec\u53ea\u6709 4 \u4e2a\u9690\u85cf\u5355\u5143\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u66f4\u591a\uff0c\u5e76\u4e14\u6211\u4eec\u53ea\u6709 1 \u4e2a\u8f93\u51fa\u6982\u7387\uff08\u5411\u5de6\u7684\u6982\u7387\uff09\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6784\u5efa\u4e86\u795e\u7ecf\u7f51\u7edc\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b83\u662f\u4e00\u4e2a vanilla \u591a\u5c42\u611f\u77e5\u5668\uff0c\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\u3002\u6ce8\u610f\uff0c\u8f93\u51fa\u5c42\u4f7f\u7528 Logistic\uff08Sigmoid\uff09\u6fc0\u6d3b\u51fd\u6570\uff0c\u4ee5\u4fbf\u8f93\u51fa\u4ece 0 \u5230 1 \u7684\u6982\u7387\u3002\u5982\u679c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u53ef\u80fd\u52a8\u4f5c\uff0c\u6bcf\u4e2a\u52a8\u4f5c\u90fd\u4f1a\u6709\u4e00\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\uff0c\u76f8\u5e94\u7684\u4f60\u5c06\u4f7f\u7528 Softmax \u6fc0\u6d3b\u51fd\u6570\u3002 \u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528 multinomial() \u51fd\u6570\u6765\u9009\u62e9\u4e00\u4e2a\u968f\u673a\u52a8\u4f5c\u3002\u8be5\u51fd\u6570\u72ec\u7acb\u5730\u91c7\u6837\u4e00\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u6574\u6570\uff0c\u7ed9\u5b9a\u6bcf\u4e2a\u6574\u6570\u7684\u5bf9\u6570\u6982\u7387\u3002\u4f8b\u5982\uff0c\u5982\u679c\u901a\u8fc7\u8bbe\u7f6e num_samples=5 \uff0c\u4ee4\u6570\u7ec4\u4e3a [np.log(0.5), np.log(0.2), np.log(0.3)] \u6765\u8c03\u7528\u5b83\uff0c\u90a3\u4e48\u5b83\u5c06\u8f93\u51fa\u4e94\u4e2a\u6574\u6570\uff0c\u6bcf\u4e2a\u6574\u6570\u90fd\u6709 50% \u7684\u6982\u7387\u662f 0\uff0c20% \u4e3a 1\uff0c30% \u4e3a 2\u3002\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u6574\u6570\u6765\u8868\u793a\u8981\u91c7\u53d6\u7684\u884c\u52a8\u3002\u7531\u4e8e\u8f93\u51fa\u5f20\u91cf\uff08output\uff09\u4ec5\u5305\u542b\u5411\u5de6\u7684\u6982\u7387\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5c06 1 - output \u8fde\u63a5\u5b83\uff0c\u4ee5\u5f97\u5230\u5305\u542b\u5de6\u548c\u53f3\u52a8\u4f5c\u7684\u6982\u7387\u7684\u5f20\u91cf\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u53ef\u80fd\u52a8\u4f5c\uff0c\u795e\u7ecf\u7f51\u7edc\u5c06\u4e0d\u5f97\u4e0d\u8f93\u51fa\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6982\u7387\uff0c\u8fd9\u65f6\u4f60\u5c31\u4e0d\u9700\u8981\u8fde\u63a5\u6b65\u9aa4\u4e86\u3002 \u597d\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u53ef\u4ee5\u89c2\u5bdf\u548c\u8f93\u51fa\u52a8\u4f5c\u7684\u795e\u7ecf\u7f51\u7edc\u4e86\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u8bad\u7ec3\u5b83\u5462\uff1f \u8bc4\u4ef7\u884c\u4e3a\uff1a\u4fe1\u7528\u5206\u914d\u95ee\u9898 \u5982\u679c\u6211\u4eec\u77e5\u9053\u6bcf\u4e00\u6b65\u7684\u6700\u4f73\u52a8\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u901a\u5e38\u4e00\u6837\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\uff0c\u901a\u8fc7\u6700\u5c0f\u5316\u4f30\u8ba1\u6982\u7387\u548c\u76ee\u6807\u6982\u7387\u4e4b\u95f4\u7684\u4ea4\u53c9\u71b5\u3002\u8fd9\u53ea\u662f\u901a\u5e38\u7684\u76d1\u7763\u5b66\u4e60\u3002\u7136\u800c\uff0c\u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\uff0c\u667a\u80fd\u4f53\u83b7\u5f97\u7684\u6307\u5bfc\u7684\u552f\u4e00\u9014\u5f84\u662f\u901a\u8fc7\u5956\u52b1\uff0c\u5956\u52b1\u901a\u5e38\u662f\u7a00\u758f\u7684\u548c\u5ef6\u8fdf\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u667a\u80fd\u4f53\u5728 100 \u4e2a\u6b65\u9aa4\u5185\u8bbe\u6cd5\u5e73\u8861\u6746\uff0c\u5b83\u600e\u4e48\u77e5\u9053\u5b83\u91c7\u53d6\u7684 100 \u4e2a\u884c\u52a8\u4e2d\u7684\u54ea\u4e00\u4e2a\u662f\u597d\u7684\uff0c\u54ea\u4e9b\u662f\u574f\u7684\uff1f\u5b83\u6240\u77e5\u9053\u7684\u662f\uff0c\u5728\u6700\u540e\u4e00\u6b21\u884c\u52a8\u4e4b\u540e\uff0c\u6746\u5b50\u5760\u843d\u4e86\uff0c\u4f46\u6700\u540e\u4e00\u6b21\u884c\u52a8\u80af\u5b9a\u4e0d\u662f\u5b8c\u5168\u8d1f\u8d23\u7684\u3002\u8fd9\u88ab\u79f0\u4e3a\u4fe1\u7528\u5206\u914d\u95ee\u9898\uff1a\u5f53\u667a\u80fd\u4f53\u5f97\u5230\u5956\u52b1\u65f6\uff0c\u5f88\u96be\u77e5\u9053\u54ea\u4e9b\u884c\u4e3a\u5e94\u8be5\u88ab\u4fe1\u4efb\uff08\u6216\u8d23\u5907\uff09\u3002\u60f3\u60f3\u4e00\u53ea\u72d7\u5728\u884c\u4e3a\u826f\u597d\u540e\u51e0\u5c0f\u65f6\u5c31\u4f1a\u5f97\u5230\u5956\u52b1\uff0c\u5b83\u4f1a\u660e\u767d\u5b83\u5f97\u5230\u4e86\u4ec0\u4e48\u56de\u62a5\u5417\uff1f \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u901a\u5e38\u7684\u7b56\u7565\u662f\u57fa\u4e8e\u8fd9\u4e2a\u52a8\u4f5c\u540e\u5f97\u5206\u7684\u603b\u548c\u6765\u8bc4\u4f30\u8fd9\u4e2a\u4e2a\u52a8\u4f5c\uff0c\u901a\u5e38\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u5e94\u7528\u8870\u51cf\u7387 r \u3002\u4f8b\u5982\uff08\u89c1\u56fe 16-6\uff09\uff0c\u5982\u679c\u4e00\u4e2a\u667a\u80fd\u4f53\u51b3\u5b9a\u8fde\u7eed\u4e09\u6b21\u5411\u53f3\uff0c\u5728\u7b2c\u4e00\u6b65\u4e4b\u540e\u5f97\u5230 +10 \u5956\u52b1\uff0c\u7b2c\u4e8c\u6b65\u540e\u5f97\u5230 0\uff0c\u6700\u540e\u5728\u7b2c\u4e09\u6b65\u4e4b\u540e\u5f97\u5230 -50\uff0c\u7136\u540e\u5047\u8bbe\u6211\u4eec\u4f7f\u7528\u8870\u51cf\u7387 r=0.8 \uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u52a8\u4f5c\u5c06\u5f97\u5230 10 +r\u00d70 + r2\u00d7(-50)=-22 \u7684\u5206\u8ff0\u3002\u5982\u679c\u8870\u51cf\u7387\u63a5\u8fd1 0\uff0c\u90a3\u4e48\u4e0e\u5373\u65f6\u5956\u52b1\u76f8\u6bd4\uff0c\u672a\u6765\u7684\u5956\u52b1\u4e0d\u4f1a\u6709\u591a\u5927\u610f\u4e49\u3002\u76f8\u53cd\uff0c\u5982\u679c\u8870\u51cf\u7387\u63a5\u8fd1 1\uff0c\u90a3\u4e48\u5bf9\u672a\u6765\u7684\u5956\u52b1\u51e0\u4e4e\u7b49\u4e8e\u5373\u65f6\u56de\u62a5\u3002\u5178\u578b\u7684\u8870\u51cf\u7387\u901a\u5e38\u4e3a\u662f 0.95 \u6216 0.99\u3002\u5982\u679c\u8870\u51cf\u7387\u4e3a 0.95\uff0c\u90a3\u4e48\u672a\u6765 13 \u6b65\u7684\u5956\u52b1\u5927\u7ea6\u662f\u5373\u65f6\u5956\u52b1\u7684\u4e00\u534a\uff08 0.9513\u00d70.5 \uff09\uff0c\u800c\u5f53\u8870\u51cf\u7387\u4e3a 0.99\uff0c\u672a\u6765 69 \u6b65\u7684\u5956\u52b1\u662f\u5373\u65f6\u5956\u52b1\u7684\u4e00\u534a\u3002\u5728 CartPole \u73af\u5883\u4e0b\uff0c\u884c\u4e3a\u5177\u6709\u76f8\u5f53\u77ed\u671f\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u9009\u62e9 0.95 \u7684\u6298\u6263\u7387\u662f\u5408\u7406\u7684\u3002 \u5f53\u7136\uff0c\u4e00\u4e2a\u597d\u7684\u52a8\u4f5c\u53ef\u80fd\u4f1a\u4f34\u968f\u7740\u4e00\u4e9b\u574f\u7684\u52a8\u4f5c\uff0c\u8fd9\u4e9b\u52a8\u4f5c\u4f1a\u5bfc\u81f4\u5e73\u8861\u6746\u8fc5\u901f\u4e0b\u964d\uff0c\u4ece\u800c\u5bfc\u81f4\u4e00\u4e2a\u597d\u7684\u52a8\u4f5c\u5f97\u5230\u4e00\u4e2a\u4f4e\u5206\u6570\uff08\u7c7b\u4f3c\u7684\uff0c\u4e00\u4e2a\u597d\u884c\u52a8\u8005\u6709\u65f6\u4f1a\u5728\u4e00\u90e8\u70c2\u7247\u4e2d\u626e\u6f14\u4e3b\u89d2\uff09\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u82b1\u8db3\u591f\u591a\u7684\u65f6\u95f4\u6765\u8bad\u7ec3\u6e38\u620f\uff0c\u5e73\u5747\u4e0b\u6765\u597d\u7684\u884c\u4e3a\u4f1a\u5f97\u5230\u6bd4\u574f\u7684\u66f4\u597d\u7684\u5206\u6570\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u83b7\u5f97\u76f8\u5f53\u53ef\u9760\u7684\u52a8\u4f5c\u5206\u6570\uff0c\u6211\u4eec\u5fc5\u987b\u8fd0\u884c\u5f88\u591a\u6b21\u5e76\u5c06\u6240\u6709\u52a8\u4f5c\u5206\u6570\u5f52\u4e00\u5316\uff08\u901a\u8fc7\u51cf\u53bb\u5e73\u5747\u503c\u5e76\u9664\u4ee5\u6807\u51c6\u504f\u5dee\uff09\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5408\u7406\u5730\u5047\u8bbe\u6d88\u6781\u5f97\u5206\u7684\u884c\u4e3a\u662f\u574f\u7684\uff0c\u800c\u79ef\u6781\u5f97\u5206\u7684\u884c\u4e3a\u662f\u597d\u7684\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u65b9\u6cd5\u6765\u8bc4\u4f30\u6bcf\u4e00\u4e2a\u52a8\u4f5c\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4f7f\u7528\u7b56\u7565\u68af\u5ea6\u6765\u8bad\u7ec3\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u667a\u80fd\u4f53\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u3002 \u7b56\u7565\u68af\u5ea6 \u6b63\u5982\u524d\u9762\u6240\u8ba8\u8bba\u7684\uff0cPG \u7b97\u6cd5\u901a\u8fc7\u9075\u5faa\u66f4\u9ad8\u56de\u62a5\u7684\u68af\u5ea6\u6765\u4f18\u5316\u7b56\u7565\u53c2\u6570\u3002\u4e00\u79cd\u6d41\u884c\u7684 PG \u7b97\u6cd5\uff0c\u79f0\u4e3a\u589e\u5f3a\u7b97\u6cd5\uff0c\u5728 1929 \u7531 Ronald Williams \u63d0\u51fa\u3002\u8fd9\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u53d8\u4f53\uff1a \u9996\u5148\uff0c\u8ba9\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\u73a9\u51e0\u6b21\u6e38\u620f\uff0c\u5e76\u5728\u6bcf\u4e00\u6b65\u8ba1\u7b97\u68af\u5ea6\uff0c\u8fd9\u4f7f\u5f97\u667a\u80fd\u4f53\u66f4\u53ef\u80fd\u9009\u62e9\u884c\u4e3a\uff0c\u4f46\u4e0d\u5e94\u7528\u8fd9\u4e9b\u68af\u5ea6\u3002 \u8fd0\u884c\u51e0\u6b21\u540e\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u52a8\u4f5c\u7684\u5f97\u5206\uff08\u4f7f\u7528\u524d\u9762\u6bb5\u843d\u4e2d\u63cf\u8ff0\u7684\u65b9\u6cd5\uff09\u3002 \u5982\u679c\u4e00\u4e2a\u52a8\u4f5c\u7684\u5206\u6570\u662f\u6b63\u7684\uff0c\u8fd9\u610f\u5473\u7740\u52a8\u4f5c\u662f\u597d\u7684\uff0c\u53ef\u5e94\u7528\u8f83\u65e9\u8ba1\u7b97\u7684\u68af\u5ea6\uff0c\u4ee5\u4fbf\u5c06\u6765\u6709\u66f4\u5927\u7684\u7684\u6982\u7387\u9009\u62e9\u8fd9\u4e2a\u52a8\u4f5c\u3002\u4f46\u662f\uff0c\u5982\u679c\u5206\u6570\u662f\u8d1f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u52a8\u4f5c\u662f\u574f\u7684\uff0c\u8981\u5e94\u7528\u8d1f\u68af\u5ea6\u6765\u4f7f\u5f97\u8fd9\u4e2a\u52a8\u4f5c\u5728\u5c06\u6765\u91c7\u53d6\u7684\u53ef\u80fd\u6027\u66f4\u4f4e\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u5c31\u662f\u7b80\u5355\u5730\u5c06\u6bcf\u4e2a\u68af\u5ea6\u5411\u91cf\u4e58\u4ee5\u76f8\u5e94\u7684\u52a8\u4f5c\u5f97\u5206\u3002 \u6700\u540e\uff0c\u8ba1\u7b97\u6240\u6709\u5f97\u5230\u7684\u68af\u5ea6\u5411\u91cf\u7684\u5e73\u5747\u503c\uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u6267\u884c\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4\u3002 \u8ba9\u6211\u4eec\u4f7f\u7528 TensorFlow \u5b9e\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u3002\u6211\u4eec\u5c06\u8bad\u7ec3\u6211\u4eec\u65e9\u5148\u5efa\u7acb\u7684\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\uff0c\u8ba9\u5b83\u5b66\u4f1a\u5e73\u8861\u8f66\u4e0a\u7684\u5e73\u8861\u6746\u3002\u8ba9\u6211\u4eec\u4ece\u5b8c\u6210\u4e4b\u524d\u7f16\u7801\u7684\u6784\u9020\u9636\u6bb5\u5f00\u59cb\uff0c\u6dfb\u52a0\u76ee\u6807\u6982\u7387\u3001\u4ee3\u4ef7\u51fd\u6570\u548c\u8bad\u7ec3\u64cd\u4f5c\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u610f\u613f\u662f\u9009\u62e9\u7684\u52a8\u4f5c\u662f\u6700\u597d\u7684\u52a8\u4f5c\uff0c\u5982\u679c\u9009\u62e9\u7684\u52a8\u4f5c\u662f\u52a8\u4f5c 0\uff08\u5de6\uff09\uff0c\u5219\u76ee\u6807\u6982\u7387\u5fc5\u987b\u4e3a 1\uff0c\u5982\u679c\u9009\u62e9\u52a8\u4f5c 1\uff08\u53f3\uff09\u5219\u76ee\u6807\u6982\u7387\u4e3a 0\uff1a y = 1. - tf.to_float(action) \u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u76ee\u6807\u6982\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u635f\u5931\u51fd\u6570\uff08\u4ea4\u53c9\u71b5\uff09\u5e76\u8ba1\u7b97\u68af\u5ea6\uff1a learning_rate = 0.01 cross_entropy = tf.nn.sigmoid_cross_entropy_with_logits( labels=y, logits=logits) optimizer = tf.train.AdamOptimizer(learning_rate) grads_and_vars = optimizer.compute_gradients(cross_entropy) \u6ce8\u610f\uff0c\u6211\u4eec\u6b63\u5728\u8c03\u7528\u4f18\u5316\u5668\u7684 compute_gradients() \u65b9\u6cd5\uff0c\u800c\u4e0d\u662f minimize() \u65b9\u6cd5\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u5728\u4f7f\u7528\u5b83\u4eec\u4e4b\u524d\u8c03\u6574\u68af\u5ea6\u3002 compute_gradients() \u65b9\u6cd5\u8fd4\u56de\u68af\u5ea6\u5411\u91cf/\u53d8\u91cf\u5bf9\u7684\u5217\u8868\uff08\u6bcf\u4e2a\u53ef\u8bad\u7ec3\u53d8\u91cf\u4e00\u5bf9\uff09\u3002\u8ba9\u6211\u4eec\u628a\u6240\u6709\u7684\u68af\u5ea6\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u4ee5\u4fbf\u65b9\u4fbf\u5730\u83b7\u5f97\u5b83\u4eec\u7684\u503c\uff1a gradients = [grad for grad, variable in grads_and_vars] \u597d\uff0c\u73b0\u5728\u662f\u68d8\u624b\u7684\u90e8\u5206\u3002\u5728\u6267\u884c\u9636\u6bb5\uff0c\u7b97\u6cd5\u5c06\u8fd0\u884c\u7b56\u7565\uff0c\u5e76\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u8bc4\u4f30\u8fd9\u4e9b\u68af\u5ea6\u5f20\u91cf\u5e76\u5b58\u50a8\u5b83\u4eec\u7684\u503c\u3002\u5728\u591a\u6b21\u8fd0\u884c\u4e4b\u540e\uff0c\u5b83\u5982\u5148\u524d\u6240\u89e3\u91ca\u7684\u8c03\u6574\u8fd9\u4e9b\u68af\u5ea6\uff08\u5373\uff0c\u901a\u8fc7\u52a8\u4f5c\u5206\u6570\u4e58\u4ee5\u5b83\u4eec\u5e76\u4f7f\u5b83\u4eec\u5f52\u4e00\u5316\uff09\uff0c\u5e76\u8ba1\u7b97\u8c03\u6574\u540e\u7684\u68af\u5ea6\u7684\u5e73\u5747\u503c\u3002\u63a5\u4e0b\u6765\uff0c\u9700\u8981\u5c06\u7ed3\u679c\u68af\u5ea6\u53cd\u9988\u5230\u4f18\u5316\u5668\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u6267\u884c\u4f18\u5316\u6b65\u9aa4\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u68af\u5ea6\u5411\u91cf\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5360\u4f4d\u7b26\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u64cd\u4f5c\u53bb\u5e94\u7528\u66f4\u65b0\u7684\u68af\u5ea6\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u8c03\u7528\u4f18\u5316\u5668\u7684 apply_gradients() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u68af\u5ea6\u5411\u91cf/\u53d8\u91cf\u5bf9\u7684\u5217\u8868\u3002\u6211\u4eec\u4e0d\u7ed9\u5b83\u539f\u59cb\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u800c\u662f\u7ed9\u5b83\u4e00\u4e2a\u5305\u542b\u66f4\u65b0\u68af\u5ea6\u7684\u5217\u8868\uff08\u5373\uff0c\u901a\u8fc7\u5360\u4f4d\u7b26\u9012\u9001\u7684\u68af\u5ea6\uff09\uff1a gradient_placeholders = [] grads_and_vars_feed = [] for grad, variable in grads_and_vars: gradient_placeholder = tf.placeholder(tf.float32, shape=grad.get_shape()) gradient_placeholders.append(gradient_placeholder) grads_and_vars_feed.append((gradient_placeholder, variable)) training_op = optimizer.apply_gradients(grads_and_vars_feed) \u8ba9\u6211\u4eec\u540e\u9000\u4e00\u6b65\uff0c\u770b\u770b\u6574\u4e2a\u8fd0\u884c\u8fc7\u7a0b\uff1a n_inputs = 4 n_hidden = 4 n_outputs = 1 initializer = tf.contrib.layers.variance_scaling_initializer() learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=[None, n_inputs]) hidden = fully_connected(X, n_hidden, activation_fn=tf.nn.elu,weights_initializer=initializer) logits = fully_connected(hidden, n_outputs, activation_fn=None, weights_initializer=initializer) outputs = tf.nn.sigmoid(logits) p_left_and_right = tf.concat(axis=1, values=[outputs, 1 - outputs]) action = tf.multinomial(tf.log(p_left_and_right), num_samples=1) y = 1. - tf.to_float(action) cross_entropy = tf.nn.sigmoid_cross_entropy_with_logits(labels=y, logits=logits) optimizer = tf.train.AdamOptimizer(learning_rate) grads_and_vars = optimizer.compute_gradients(cross_entropy) gradients = [grad for grad, variable in grads_and_vars] gradient_placeholders = [] grads_and_vars_feed = [] for grad, variable in grads_and_vars: gradient_placeholder = tf.placeholder(tf.float32, shape=grad.get_shape()) gradient_placeholders.append(gradient_placeholder) grads_and_vars_feed.append((gradient_placeholder, variable)) training_op = optimizer.apply_gradients(grads_and_vars_feed) init = tf.global_variables_initializer() saver = tf.train.Saver() \u5230\u6267\u884c\u9636\u6bb5\u4e86\uff01\u6211\u4eec\u5c06\u9700\u8981\u4e24\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u603b\u6298\u6263\u5956\u52b1\uff0c\u7ed9\u4e88\u539f\u59cb\u5956\u52b1\uff0c\u4ee5\u53ca\u5f52\u4e00\u5316\u591a\u6b21\u5faa\u73af\u7684\u7ed3\u679c\uff1a def discount_rewards(rewards, discount_rate): discounted_rewards = np.empty(len(rewards)) cumulative_rewards = 0 for step in reversed(range(len(rewards))): cumulative_rewards = rewards[step] + cumulative_rewards * discount_rate discounted_rewards[step] = cumulative_rewards return discounted_rewards def discount_and_normalize_rewards(all_rewards, discount_rate): all_discounted_rewards = [discount_rewards(rewards) for rewards in all_rewards] flat_rewards = np.concatenate(all_discounted_rewards) reward_mean = flat_rewards.mean() reward_std = flat_rewards.std() return [(discounted_rewards - reward_mean)/reward_std for discounted_rewards in all_discounted_rewards] \u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u8fd0\u884c\u7684\u5982\u4f55\uff1a >>> discount_rewards([10, 0, -50], discount_rate=0.8) array([-22., -40., -50.]) >>> discount_and_normalize_rewards([[10, 0, -50], [10, 20]], discount_rate=0.8) [array([-0.28435071, -0.86597718, -1.18910299]), array([ 1.26665318, 1.0727777 ])] \u5bf9 discount_rewards() \u7684\u8c03\u7528\u6b63\u597d\u8fd4\u56de\u6211\u4eec\u6240\u671f\u671b\u7684\uff08\u89c1\u56fe 16-6\uff09\u3002\u4f60\u4e5f\u53ef\u4ee5\u9a8c\u8bc1\u51fd\u6570 iscount_and_normalize_rewards() \u786e\u5b9e\u8fd4\u56de\u4e86\u4e24\u4e2a\u6b65\u9aa4\u4e2d\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6807\u51c6\u5316\u5206\u6570\u3002\u6ce8\u610f\u7b2c\u4e00\u6b65\u6bd4\u7b2c\u4e8c\u6b65\u5dee\u5f88\u591a\uff0c\u6240\u4ee5\u5b83\u7684\u5f52\u4e00\u5316\u5206\u6570\u90fd\u662f\u8d1f\u7684\uff1b\u4ece\u7b2c\u4e00\u6b65\u5f00\u59cb\u7684\u6240\u6709\u52a8\u4f5c\u90fd\u4f1a\u88ab\u8ba4\u4e3a\u662f\u574f\u7684\uff0c\u53cd\u4e4b\uff0c\u7b2c\u4e8c\u6b65\u7684\u6240\u6709\u52a8\u4f5c\u90fd\u4f1a\u88ab\u8ba4\u4e3a\u662f\u597d\u7684\u3002 \u6211\u4eec\u73b0\u5728\u6709\u4e86\u8bad\u7ec3\u7b56\u7565\u6240\u9700\u7684\u4e00\u5207\uff1a n_iterations = 250 # \u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570 n_max_steps = 1000 # \u6bcf\u4e00\u6b21\u7684\u6700\u5927\u6b65\u957f n_games_per_update = 10 # \u6bcf\u8fed\u4ee3\u5341\u6b21\u8bad\u7ec3\u4e00\u6b21\u7b56\u7565\u7f51\u7edc save_iterations = 10 # \u6bcf\u5341\u6b21\u8fed\u4ee3\u4fdd\u5b58\u6a21\u578b discount_rate = 0.95 with tf.Session() as sess: init.run() for iteration in range(n_iterations): all_rewards = [] #\u6bcf\u4e00\u6b21\u7684\u6240\u6709\u5956\u52b1 all_gradients = [] #\u6bcf\u4e00\u6b21\u7684\u6240\u6709\u68af\u5ea6 for game in range(n_games_per_update): current_rewards = [] #\u5f53\u524d\u6b65\u7684\u6240\u6709\u5956\u52b1 current_gradients = [] #\u5f53\u524d\u6b65\u7684\u6240\u6709\u68af\u5ea6 obs = env.reset() for step in range(n_max_steps): action_val, gradients_val = sess.run([action, gradients], feed_dict={X: obs.reshape(1, n_inputs)}) # \u4e00\u4e2aobs obs, reward, done, info = env.step(action_val[0][0]) current_rewards.append(reward) current_gradients.append(gradients_val) if done: break all_rewards.append(current_rewards) all_gradients.append(current_gradients) # \u6b64\u65f6\u6211\u4eec\u6bcf10\u6b21\u8fd0\u884c\u4e00\u6b21\u7b56\u7565\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4f7f\u7528\u4e4b\u524d\u63cf\u8ff0\u7684\u7b97\u6cd5\u53bb\u66f4\u65b0\u7b56\u7565\uff0c\u6ce8\uff1a\u5373\u4f7f\u7528\u8fed\u4ee310\u6b21\u7684\u7ed3\u679c\u6765\u4f18\u5316\u5f53\u524d\u7684\u7b56\u7565\u3002 all_rewards = discount_and_normalize_rewards(all_rewards) feed_dict = {} for var_index, grad_placeholder in enumerate(gradient_placeholders): # \u5c06\u68af\u5ea6\u4e0e\u884c\u4e3a\u5206\u6570\u76f8\u4e58\uff0c\u5e76\u8ba1\u7b97\u5e73\u5747\u503c mean_gradients = np.mean([reward * all_gradients[game_index][step][var_index] for game_index, rewards in enumerate(all_rewards) for step, reward in enumerate(rewards)],axis=0) feed_dict[grad_placeholder] = mean_gradients sess.run(training_op, feed_dict=feed_dict) if iteration % save_iterations == 0: saver.save(sess, \"./my_policy_net_pg.ckpt\") \u6bcf\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3\u90fd\u662f\u901a\u8fc7\u8fd0\u884c10\u6b21\u7684\u7b56\u7565\u5f00\u59cb\u7684\uff08\u6bcf\u6b21\u6700\u591a 1000 \u6b65\uff0c\u4ee5\u907f\u514d\u6c38\u8fdc\u8fd0\u884c\uff09\u3002\u5728\u6bcf\u4e00\u6b65\uff0c\u6211\u4eec\u4e5f\u8ba1\u7b97\u68af\u5ea6\uff0c\u5047\u8bbe\u9009\u62e9\u7684\u884c\u52a8\u662f\u6700\u597d\u7684\u3002\u5728\u8fd0\u884c\u4e86\u8fd9 10 \u6b21\u4e4b\u540e\uff0c\u6211\u4eec\u4f7f\u7528 discount_and_normalize_rewards() \u51fd\u6570\u8ba1\u7b97\u52a8\u4f5c\u5f97\u5206\uff1b\u6211\u4eec\u904d\u5386\u6bcf\u4e2a\u53ef\u8bad\u7ec3\u53d8\u91cf\uff0c\u5728\u6240\u6709\u6b21\u6570\u548c\u6240\u6709\u6b65\u9aa4\u4e2d\uff0c\u901a\u8fc7\u5176\u76f8\u5e94\u7684\u52a8\u4f5c\u5206\u6570\u6765\u4e58\u4ee5\u6bcf\u4e2a\u68af\u5ea6\u5411\u91cf\uff1b\u5e76\u4e14\u6211\u4eec\u8ba1\u7b97\u7ed3\u679c\u7684\u5e73\u5747\u503c\u3002\u6700\u540e\uff0c\u6211\u4eec\u8fd0\u884c\u8bad\u7ec3\u64cd\u4f5c\uff0c\u7ed9\u5b83\u63d0\u4f9b\u5e73\u5747\u68af\u5ea6\uff08\u5bf9\u6bcf\u4e2a\u53ef\u8bad\u7ec3\u53d8\u91cf\u63d0\u4f9b\u4e00\u4e2a\uff09\u3002\u6211\u4eec\u7ee7\u7eed\u6bcf 10 \u4e2a\u8bad\u7ec3\u6b21\u6570\u4fdd\u5b58\u4e00\u6b21\u6a21\u578b\u3002 \u6211\u4eec\u505a\u5b8c\u4e86\uff01\u8fd9\u6bb5\u4ee3\u7801\u5c06\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\uff0c\u5b83\u5c06\u6210\u529f\u5730\u5b66\u4f1a\u5e73\u8861\u8f66\u4e0a\u7684\u5e73\u8861\u6746\uff08\u4f60\u53ef\u4ee5\u5728 Juyter notebook \u4e0a\u8bd5\u7528\uff09\u3002\u6ce8\u610f\uff0c\u5b9e\u9645\u4e0a\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u73a9\u5bb6\u6e38\u620f\u7ed3\u675f\uff1a\u8981\u4e48\u5e73\u8861\u53ef\u4ee5\u503e\u659c\u592a\u5927\uff0c\u8981\u4e48\u8f66\u5b8c\u5168\u8131\u79bb\u5c4f\u5e55\u3002\u5728 250 \u6b21\u8bad\u7ec3\u8fed\u4ee3\u4e2d\uff0c\u7b56\u7565\u5b66\u4f1a\u5e73\u8861\u6781\u70b9\uff0c\u4f46\u5728\u907f\u514d\u8131\u79bb\u5c4f\u5e55\u65b9\u9762\u8fd8\u4e0d\u591f\u597d\u3002\u989d\u5916\u6570\u767e\u6b21\u7684\u8bad\u7ec3\u8fed\u4ee3\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002 \u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u627e\u5230\u4e00\u79cd\u5373\u4f7f\u5f53\u667a\u80fd\u4f53\u6700\u521d\u5bf9\u73af\u5883\u4e00\u65e0\u6240\u77e5\u65f6\u4e5f\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u7684\u7b97\u6cd5\u3002\u7136\u800c\uff0c\u9664\u975e\u4f60\u6b63\u5728\u5199\u8bba\u6587\uff0c\u5426\u5219\u4f60\u5e94\u8be5\u5c3d\u53ef\u80fd\u591a\u5730\u5c06\u5148\u524d\u7684\u77e5\u8bc6\u6ce8\u5165\u5230\u667a\u80fd\u4f53\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4f1a\u6781\u5927\u5730\u52a0\u901f\u8bad\u7ec3\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u6dfb\u52a0\u4e0e\u5c4f\u5e55\u4e2d\u5fc3\u8ddd\u79bb\u548c\u6781\u70b9\u89d2\u5ea6\u6210\u6b63\u6bd4\u7684\u8d1f\u5956\u52b1\u3002\u6b64\u5916\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e00\u4e2a\u76f8\u5f53\u597d\u7684\u7b56\u7565\uff0c\u4f60\u53ef\u4ee5\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6a21\u4eff\u5b83\uff0c\u7136\u540e\u4f7f\u7528\u7b56\u7565\u68af\u5ea6\u6765\u6539\u8fdb\u5b83\u3002 \u5c3d\u7ba1\u5b83\u76f8\u5bf9\u7b80\u5355\uff0c\u4f46\u662f\u8be5\u7b97\u6cd5\u662f\u975e\u5e38\u5f3a\u5927\u7684\u3002\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u89e3\u51b3\u66f4\u96be\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5e73\u8861\u4e00\u8f86\u624b\u63a8\u8f66\u4e0a\u7684\u5e73\u8861\u6746\u3002\u4e8b\u5b9e\u4e0a\uff0cAlgPaGo \u662f\u57fa\u4e8e\u7c7b\u4f3c\u7684 PG \u7b97\u6cd5\uff08\u52a0\u4e0a\u8499\u7279\u5361\u7f57\u6811\u641c\u7d22\uff0c\u8fd9\u8d85\u51fa\u4e86\u672c\u4e66\u7684\u8303\u56f4\uff09\u3002 \u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u53e6\u4e00\u4e2a\u6d41\u884c\u7684\u7b97\u6cd5\u3002\u4e0e PG \u7b97\u6cd5\u76f4\u63a5\u5c1d\u8bd5\u4f18\u5316\u7b56\u7565\u4ee5\u589e\u52a0\u5956\u52b1\u76f8\u53cd\uff0c\u6211\u4eec\u73b0\u5728\u770b\u7684\u7b97\u6cd5\u662f\u95f4\u63a5\u7684\uff1a\u667a\u80fd\u4f53\u5b66\u4e60\u53bb\u4f30\u8ba1\u6bcf\u4e2a\u72b6\u6001\u7684\u672a\u6765\u8870\u51cf\u5956\u52b1\u7684\u671f\u671b\u603b\u548c\uff0c\u6216\u8005\u5728\u6bcf\u4e2a\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u884c\u4e3a\u672a\u6765\u8870\u51cf\u5956\u52b1\u7684\u671f\u671b\u548c\u3002\u7136\u540e\uff0c\u4f7f\u7528\u8fd9\u4e9b\u77e5\u8bc6\u6765\u51b3\u5b9a\u5982\u4f55\u884c\u52a8\u3002\u4e3a\u4e86\u7406\u89e3\u8fd9\u4e9b\u7b97\u6cd5\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u4ecb\u7ecd\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\u3002 \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b \u5728\u4e8c\u5341\u4e16\u7eaa\u521d\uff0c\u6570\u5b66\u5bb6 Andrey Markov \u7814\u7a76\u4e86\u6ca1\u6709\u8bb0\u5fc6\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u79f0\u4e3a\u9a6c\u5c14\u53ef\u592b\u94fe\u3002\u8fd9\u6837\u7684\u8fc7\u7a0b\u5177\u6709\u56fa\u5b9a\u6570\u91cf\u7684\u72b6\u6001\uff0c\u5e76\u4e14\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u968f\u673a\u5730\u4ece\u4e00\u4e2a\u72b6\u6001\u6f14\u5316\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u3002\u5b83\u4ece\u72b6\u6001 S \u6f14\u53d8\u4e3a\u72b6\u6001 S' \u7684\u6982\u7387\u662f\u56fa\u5b9a\u7684\uff0c\u5b83\u53ea\u4f9d\u8d56\u4e8e (S, S') \u5bf9\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u7684\u72b6\u6001\uff08\u7cfb\u7edf\u6ca1\u6709\u8bb0\u5fc6\uff09\u3002 \u56fe 16-7 \u5c55\u793a\u4e86\u4e00\u4e2a\u5177\u6709\u56db\u4e2a\u72b6\u6001\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u4f8b\u5b50\u3002\u5047\u8bbe\u8be5\u8fc7\u7a0b\u4ece\u72b6\u6001 S0 \u5f00\u59cb\uff0c\u5e76\u4e14\u5728\u4e0b\u4e00\u6b65\u9aa4\u4e2d\u6709 70% \u7684\u6982\u7387\u4fdd\u6301\u5728\u8be5\u72b6\u6001\u4e0d\u53d8\u4e2d\u3002\u6700\u7ec8\uff0c\u5b83\u5fc5\u7136\u79bb\u5f00\u90a3\u4e2a\u72b6\u6001\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u56de\u6765\uff0c\u56e0\u4e3a\u6ca1\u6709\u5176\u4ed6\u72b6\u6001\u56de\u5230 S0 \u3002\u5982\u679c\u5b83\u8fdb\u5165\u72b6\u6001 S1 \uff0c\u90a3\u4e48\u5b83\u5f88\u53ef\u80fd\u4f1a\u8fdb\u5165\u72b6\u6001 S2 \uff0890% \u7684\u6982\u7387\uff09\uff0c\u7136\u540e\u7acb\u5373\u56de\u5230\u72b6\u6001 S1 \uff08\u4ee5 100% \u7684\u6982\u7387\uff09\u3002\u5b83\u53ef\u4ee5\u5728\u8fd9\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\u4ea4\u66ff\u591a\u6b21\uff0c\u4f46\u6700\u7ec8\u5b83\u4f1a\u843d\u5165\u72b6\u6001 S3 \u5e76\u6c38\u8fdc\u7559\u5728\u90a3\u91cc\uff08\u8fd9\u662f\u4e00\u4e2a\u7ec8\u7aef\u72b6\u6001\uff09\u3002\u9a6c\u5c14\u53ef\u592b\u94fe\u53ef\u4ee5\u6709\u975e\u5e38\u4e0d\u540c\u7684\u5e94\u7528\uff0c\u5b83\u4eec\u5728\u70ed\u529b\u5b66\u3001\u5316\u5b66\u3001\u7edf\u8ba1\u5b66\u7b49\u65b9\u9762\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u6700\u521d\u662f\u5728 20 \u4e16\u7eaa 50 \u5e74\u4ee3\u7531 Richard Bellman \u63cf\u8ff0\u7684\u3002\u5b83\u4eec\u7c7b\u4f3c\u4e8e\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u4f46\u6709\u4e00\u4e2a\u8fde\u7ed3\uff1a \u5728\u72b6\u6001\u8f6c\u79fb\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u4e00\u4e2a\u667a\u80fd\u4f53\u53ef\u4ee5\u9009\u62e9\u51e0\u79cd\u53ef\u80fd\u7684\u52a8\u4f5c\u4e2d\u7684\u4e00\u4e2a\uff0c\u5e76\u4e14\u8f6c\u79fb\u6982\u7387\u53d6\u51b3\u4e8e\u6240\u9009\u62e9\u7684\u52a8\u4f5c\u3002 \u6b64\u5916\uff0c\u4e00\u4e9b\u72b6\u6001\u8f6c\u79fb\u8fd4\u56de\u4e00\u4e9b\u5956\u52b1\uff08\u6b63\u6216\u8d1f\uff09\uff0c\u667a\u80fd\u4f53\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u7b56\u7565\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5c06\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u5956\u52b1\u3002 \u4f8b\u5982\uff0c\u56fe 16-8 \u4e2d\u6240\u793a\u7684 MDP \u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u5177\u6709\u4e09\u4e2a\u72b6\u6001\u548c\u4e09\u4e2a\u53ef\u80fd\u7684\u79bb\u6563\u52a8\u4f5c\u3002\u5982\u679c\u4ece\u72b6\u6001 S0 \u5f00\u59cb\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53ef\u4ee5\u5728\u52a8\u4f5c A0 \u3001 A1 \u6216 A2 \u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u5b83\u9009\u62e9\u52a8\u4f5c A1 \uff0c\u5b83\u5c31\u4fdd\u6301\u5728\u72b6\u6001 S0 \u4e2d\uff0c\u5e76\u4e14\u6ca1\u6709\u4efb\u4f55\u5956\u52b1\u3002\u56e0\u6b64\uff0c\u5982\u679c\u613f\u610f\u7684\u8bdd\uff0c\u5b83\u53ef\u4ee5\u51b3\u5b9a\u6c38\u8fdc\u5446\u5728\u90a3\u91cc\u3002\u4f46\u662f\uff0c\u5982\u679c\u5b83\u9009\u62e9\u52a8\u4f5c A0 \uff0c\u5b83\u6709 70% \u7684\u6982\u7387\u83b7\u5f97 10 \u5956\u52b1\uff0c\u5e76\u4fdd\u6301\u5728\u72b6\u6001 S0 \u3002\u7136\u540e\uff0c\u5b83\u53ef\u4ee5\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u5c1d\u8bd5\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684\u5956\u52b1\u3002\u4f46\u5b83\u5c06\u5728\u72b6\u6001 S1 \u4e2d\u7ed3\u675f\u8fd9\u6837\u7684\u884c\u4e3a\u3002\u5728\u72b6\u6001 S1 \u4e2d\uff0c\u5b83\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u52a8\u4f5c\uff1a A0 \u6216 A1 \u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u53cd\u590d\u9009\u62e9\u52a8\u4f5c A1 \u6765\u9009\u62e9\u505c\u7559\uff0c\u6216\u8005\u5b83\u53ef\u4ee5\u9009\u62e9\u52a8\u4f5c A2 \u79fb\u52a8\u5230\u72b6\u6001 S2 \u5e76\u5f97\u5230 -50 \u5956\u52b1\u3002\u5728\u72b6\u6001 S3 \u4e2d\uff0c\u9664\u4e86\u91c7\u53d6\u884c\u52a8 A1 \u4e4b\u5916\uff0c\u522b\u65e0\u9009\u62e9\uff0c\u8fd9\u5c06\u6700\u6709\u53ef\u80fd\u5f15\u5bfc\u5b83\u56de\u5230\u72b6\u6001 S0 \uff0c\u5728\u9014\u4e2d\u83b7\u5f97 40 \u7684\u5956\u52b1\u3002\u901a\u8fc7\u89c2\u5bdf\u8fd9\u4e2a MDP\uff0c\u4f60\u80fd\u731c\u51fa\u54ea\u4e00\u4e2a\u7b56\u7565\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u83b7\u5f97\u6700\u5927\u7684\u56de\u62a5\u5417\uff1f\u5728\u72b6\u6001 S0 \u4e2d\uff0c\u6e05\u695a\u5730\u77e5\u9053 A0 \u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u5728\u72b6\u6001 S3 \u4e2d\uff0c\u667a\u80fd\u4f53\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u91c7\u53d6\u884c\u52a8 A1 \uff0c\u4f46\u662f\u5728\u72b6\u6001 S1 \u4e2d\uff0c\u667a\u80fd\u4f53\u5426\u5e94\u8be5\u4fdd\u6301\u4e0d\u52a8\uff08 A0 \uff09\u6216\u901a\u8fc7\u706b\uff08 A2 \uff09\uff0c\u8fd9\u662f\u4e0d\u660e\u786e\u7684\u3002 Bellman \u627e\u5230\u4e86\u4e00\u79cd\u4f30\u8ba1\u4efb\u4f55\u72b6\u6001 S \u7684\u6700\u4f73\u72b6\u6001\u503c\u7684\u65b9\u6cd5\uff0c\u4ed6\u63d0\u51fa\u4e86 V(s) \uff0c\u5b83\u662f\u667a\u80fd\u4f53\u5728\u5176\u91c7\u53d6\u6700\u4f73\u884c\u4e3a\u8fbe\u5230\u72b6\u6001 s \u540e\u6240\u6709\u8870\u51cf\u672a\u6765\u5956\u52b1\u7684\u603b\u548c\u7684\u5e73\u5747\u671f\u671b\u3002\u4ed6\u8868\u660e\uff0c\u5982\u679c\u667a\u80fd\u4f53\u7684\u884c\u4e3a\u6700\u4f73\uff0c\u90a3\u4e48\u8d1d\u5c14\u66fc\u6700\u4f18\u6027\u516c\u5f0f\u9002\u7528\uff08\u89c1\u516c\u5f0f 16-1\uff09\u3002\u8fd9\u4e2a\u9012\u5f52\u516c\u5f0f\u8868\u793a\uff0c\u5982\u679c\u667a\u80fd\u4f53\u6700\u4f18\u5730\u8fd0\u884c\uff0c\u90a3\u4e48\u5f53\u524d\u72b6\u6001\u7684\u6700\u4f18\u503c\u7b49\u4e8e\u5728\u91c7\u53d6\u4e00\u4e2a\u6700\u4f18\u52a8\u4f5c\u4e4b\u540e\u5e73\u5747\u5f97\u5230\u7684\u5956\u52b1\uff0c\u52a0\u4e0a\u8be5\u52a8\u4f5c\u53ef\u80fd\u5bfc\u81f4\u7684\u6240\u6709\u53ef\u80fd\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u671f\u671b\u6700\u4f18\u503c\u3002 \u5176\u4e2d\uff1a T \u4e3a\u667a\u80fd\u4f53\u9009\u62e9\u52a8\u4f5c a \u65f6\u4ece\u72b6\u6001 s \u5230\u72b6\u6001 s' \u7684\u6982\u7387 R \u4e3a\u667a\u80fd\u4f53\u9009\u62e9\u4ee5\u52a8\u4f5c a \u4ece\u72b6\u6001 s \u5230\u72b6\u6001 s' \u7684\u8fc7\u7a0b\u4e2d\u5f97\u5230\u7684\u5956\u52b1 \u4e3a\u8870\u51cf\u7387 \u8fd9\u4e2a\u7b49\u5f0f\u76f4\u63a5\u5f15\u51fa\u4e86\u4e00\u79cd\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u53ef\u4ee5\u7cbe\u786e\u4f30\u8ba1\u6bcf\u4e2a\u53ef\u80fd\u72b6\u6001\u7684\u6700\u4f18\u72b6\u6001\u503c\uff1a\u9996\u5148\u5c06\u6240\u6709\u72b6\u6001\u503c\u4f30\u8ba1\u521d\u59cb\u5316\u4e3a\u96f6\uff0c\u7136\u540e\u7528\u6570\u503c\u8fed\u4ee3\u7b97\u6cd5\u8fed\u4ee3\u66f4\u65b0\u5b83\u4eec\uff08\u89c1\u516c\u5f0f 16-2\uff09\u3002\u4e00\u4e2a\u663e\u8457\u7684\u7ed3\u679c\u662f\uff0c\u7ed9\u5b9a\u8db3\u591f\u7684\u65f6\u95f4\uff0c\u8fd9\u4e9b\u4f30\u8ba1\u4fdd\u8bc1\u6536\u655b\u5230\u6700\u4f18\u72b6\u6001\u503c\uff0c\u5bf9\u5e94\u4e8e\u6700\u4f18\u7b56\u7565\u3002 \u5176\u4e2d\uff1a \u662f\u5728 k \u6b21\u7b97\u6cd5\u8fed\u4ee3\u5bf9\u72b6\u6001 s \u7684\u4f30\u8ba1 \u8be5\u7b97\u6cd5\u662f\u52a8\u6001\u89c4\u5212\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b83\u5c06\u4e86\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f30\u8ba1\u6f5c\u5728\u7684\u672a\u6765\u8870\u51cf\u5956\u52b1\u7684\u603b\u548c\uff09\u53d8\u4e3a\u53ef\u5904\u7406\u7684\u5b50\u95ee\u9898\uff0c\u53ef\u4ee5\u8fed\u4ee3\u5730\u5904\u7406\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u627e\u5230\u6700\u5927\u5316\u5e73\u5747\u62a5\u916c\u4e0e\u4e0b\u4e00\u4e2a\u8870\u51cf\u72b6\u6001\u503c\u7684\u548c\u7684\u52a8\u4f5c\uff09 \u4e86\u89e3\u6700\u4f73\u72b6\u6001\u503c\u53ef\u80fd\u662f\u6709\u7528\u7684\uff0c\u7279\u522b\u662f\u8bc4\u4f30\u7b56\u7565\uff0c\u4f46\u5b83\u6ca1\u6709\u660e\u786e\u5730\u544a\u8bc9\u667a\u80fd\u4f53\u8981\u505a\u4ec0\u4e48\u3002\u5e78\u8fd0\u7684\u662f\uff0cBellman \u53d1\u73b0\u4e86\u4e00\u79cd\u975e\u5e38\u7c7b\u4f3c\u7684\u7b97\u6cd5\u6765\u4f30\u8ba1\u6700\u4f18\u72b6\u6001-\u52a8\u4f5c\u503c\uff08 state-action values \uff09\uff0c\u901a\u5e38\u79f0\u4e3a Q \u503c\u3002\u72b6\u6001\u884c\u52a8 (S, A) \u5bf9\u7684\u6700\u4f18 Q \u503c\uff0c\u8bb0\u4e3a Q(s, a) \uff0c\u662f\u667a\u80fd\u4f53\u5728\u5230\u8fbe\u72b6\u6001 S \uff0c\u7136\u540e\u9009\u62e9\u52a8\u4f5c A \u4e4b\u540e\u5e73\u5747\u8870\u51cf\u672a\u6765\u5956\u52b1\u7684\u671f\u671b\u7684\u603b\u548c\u3002\u4f46\u662f\u5728\u5b83\u770b\u5230\u8fd9\u4e2a\u52a8\u4f5c\u7684\u7ed3\u679c\u4e4b\u524d\uff0c\u5047\u8bbe\u5b83\u5728\u8be5\u52a8\u4f5c\u4e4b\u540e\u7684\u52a8\u4f5c\u662f\u6700\u4f18\u7684\u3002 \u4e0b\u9762\u662f\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff1a\u518d\u6b21\uff0c\u901a\u8fc7\u521d\u59cb\u5316\u6240\u6709\u7684 Q \u503c\u4f30\u8ba1\u4e3a\u96f6\uff0c\u7136\u540e\u4f7f\u7528 Q \u503c\u8fed\u4ee3\u7b97\u6cd5\u66f4\u65b0\u5b83\u4eec\uff08\u53c2\u89c1\u516c\u5f0f 16-3\uff09\u3002 \u4e00\u65e6\u4f60\u6709\u4e86\u6700\u4f73\u7684 Q \u503c\uff0c\u5b9a\u4e49\u6700\u4f18\u7684\u7b56\u7565 \u03c0*(s) \uff0c\u5b83\u662f\u5e73\u51e1\u7684\uff1a\u5f53\u667a\u80fd\u4f53\u5904\u4e8e\u72b6\u6001 S \u65f6\uff0c\u5b83\u5e94\u8be5\u9009\u62e9\u5177\u6709\u6700\u9ad8 Q \u503c\u7684\u52a8\u4f5c\uff0c\u7528\u4e8e\u8be5\u72b6\u6001\uff1a \u3002 \u8ba9\u6211\u4eec\u628a\u8fd9\u4e2a\u7b97\u6cd5\u5e94\u7528\u5230\u56fe 16-8 \u6240\u793a\u7684 MDP \u4e2d\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49 MDP\uff1a nan=np.nan # \u4ee3\u8868\u4e0d\u53ef\u80fd\u7684\u52a8\u4f5c T = np.array([ # shape=[s, a, s'] [[0.7, 0.3, 0.0], [1.0, 0.0, 0.0], [0.8, 0.2, 0.0]], [[0.0, 1.0, 0.0], [nan, nan, nan], [0.0, 0.0, 1.0]], [[nan, nan, nan], [0.8, 0.1, 0.1], [nan, nan, nan]], ]) R = np.array([ # shape=[s, a, s'] [[10., 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]], [[10., 0.0, 0.0], [nan, nan, nan], [0.0, 0.0, -50.]], [[nan, nan, nan], [40., 0.0, 0.0], [nan, nan, nan]], ]) possible_actions = [[0, 1, 2], [0, 2], [1]] \u8ba9\u6211\u4eec\u8fd0\u884c Q \u503c\u8fed\u4ee3\u7b97\u6cd5 Q = np.full((3, 3), -np.inf) # -inf \u5bf9\u5e94\u7740\u4e0d\u53ef\u80fd\u7684\u52a8\u4f5c for state, actions in enumerate(possible_actions): Q[state, actions] = 0.0 # \u5bf9\u6240\u6709\u53ef\u80fd\u7684\u52a8\u4f5c\u521d\u59cb\u5316\u4e3a0.0 learning_rate = 0.01 discount_rate = 0.95 n_iterations = 100 for iteration in range(n_iterations): Q_prev = Q.copy() for s in range(3): for a in possible_actions[s]: Q[s, a] = np.sum([T[s, a, sp] * (R[s, a, sp] + discount_rate * np.max(Q_prev[sp])) for sp in range(3)]) \u7ed3\u679c\u7684 Q \u503c\u7c7b\u4f3c\u4e8e\u5982\u4e0b\uff1a >>> Q array([[ 21.89498982, 20.80024033, 16.86353093], [ 1.11669335, -inf, 1.17573546], [ -inf, 53.86946068, -inf]]) >>> np.argmax(Q, axis=1) # \u6bcf\u4e00\u72b6\u6001\u7684\u6700\u4f18\u52a8\u4f5c array([0, 2, 1]) \u8fd9\u7ed9\u6211\u4eec\u8fd9\u4e2a MDP \u7684\u6700\u4f73\u7b56\u7565\uff0c\u5f53\u4f7f\u7528 0.95 \u7684\u8870\u51cf\u7387\u65f6\uff1a\u5728\u72b6\u6001 S0 \u9009\u62e9\u52a8\u4f5c A0 \uff0c\u5728\u72b6\u6001 S1 \u9009\u62e9\u52a8\u4f5c A2 \uff08\u901a\u8fc7\u706b\u7130\uff01\uff09\u5728\u72b6\u6001 S2 \u4e2d\u9009\u62e9\u52a8\u4f5c A1 \uff08\u552f\u4e00\u53ef\u80fd\u7684\u52a8\u4f5c\uff09\u3002\u6709\u8da3\u7684\u662f\uff0c\u5982\u679c\u4f60\u628a\u8870\u51cf\u7387\u964d\u4f4e\u5230 0.9\uff0c\u6700\u4f18\u7684\u7b56\u7565\u6539\u53d8\uff1a\u5728\u72b6\u6001 S1 \u4e2d\uff0c\u6700\u597d\u7684\u52a8\u4f5c\u53d8\u6210 A0 \uff08\u4fdd\u6301\u4e0d\u53d8\uff1b\u4e0d\u901a\u8fc7\u706b\uff09\u3002\u8fd9\u662f\u6709\u9053\u7406\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u8ba4\u4e3a\u73b0\u5728\u6bd4\u672a\u6765\u66f4\u91cd\u8981\uff0c\u90a3\u4e48\u672a\u6765\u5956\u52b1\u7684\u524d\u666f\u662f\u4e0d\u503c\u5f97\u7acb\u523b\u7ecf\u5386\u75db\u82e6\u7684\u3002 \u65f6\u95f4\u5dee\u5206\u5b66\u4e60\u4e0e Q \u5b66\u4e60 \u5177\u6709\u79bb\u6563\u52a8\u4f5c\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u901a\u5e38\u53ef\u4ee5\u88ab\u5efa\u6a21\u4e3a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u4f46\u662f\u667a\u80fd\u4f53\u6700\u521d\u4e0d\u77e5\u9053\u8f6c\u79fb\u6982\u7387\u662f\u4ec0\u4e48\uff08\u5b83\u4e0d\u77e5\u9053 T \uff09\uff0c\u5e76\u4e14\u5b83\u4e0d\u77e5\u9053\u5956\u52b1\u4f1a\u662f\u4ec0\u4e48\uff08\u5b83\u4e0d\u77e5\u9053 R \uff09\u3002\u5b83\u5fc5\u987b\u7ecf\u5386\u6bcf\u4e00\u4e2a\u72b6\u6001\u548c\u6bcf\u4e00\u6b21\u8f6c\u53d8\u5e76\u4e14\u81f3\u5c11\u77e5\u9053\u4e00\u6b21\u5956\u52b1\uff0c\u5e76\u4e14\u5982\u679c\u8981\u5bf9\u8f6c\u79fb\u6982\u7387\u8fdb\u884c\u5408\u7406\u7684\u4f30\u8ba1\uff0c\u5c31\u5fc5\u987b\u7ecf\u5386\u591a\u6b21\u3002 \u65f6\u95f4\u5dee\u5206\u5b66\u4e60\uff08TD \u5b66\u4e60\uff09\u7b97\u6cd5\u4e0e\u6570\u503c\u8fed\u4ee3\u7b97\u6cd5\u975e\u5e38\u7c7b\u4f3c\uff0c\u4f46\u8003\u8651\u5230\u667a\u80fd\u4f53\u4ec5\u5177\u6709 MDP \u7684\u90e8\u5206\u77e5\u8bc6\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5047\u8bbe\u667a\u80fd\u4f53\u6700\u521d\u53ea\u77e5\u9053\u53ef\u80fd\u7684\u72b6\u6001\u548c\u52a8\u4f5c\uff0c\u6ca1\u6709\u66f4\u591a\u4e86\u3002\u667a\u80fd\u4f53\u4f7f\u7528\u63a2\u7d22\u7b56\u7565\uff0c\u4f8b\u5982\uff0c\u7eaf\u7cb9\u7684\u968f\u673a\u7b56\u7565\u6765\u63a2\u7d22 MDP\uff0c\u5e76\u4e14\u968f\u7740\u5b83\u7684\u53d1\u5c55\uff0cTD \u5b66\u4e60\u7b97\u6cd5\u57fa\u4e8e\u5b9e\u9645\u89c2\u5bdf\u5230\u7684\u8f6c\u6362\u548c\u5956\u52b1\u6765\u66f4\u65b0\u72b6\u6001\u503c\u7684\u4f30\u8ba1\uff08\u89c1\u516c\u5f0f 16-4\uff09\u3002 \u5176\u4e2d\uff1a a \u662f\u5b66\u4e60\u7387\uff08\u4f8b\u5982 0.01\uff09 TD \u5b66\u4e60\u4e0e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6709\u8bb8\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u7279\u522b\u662f\u5b83\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u6837\u672c\u7684\u884c\u4e3a\u3002\u5c31\u50cf SGD \u4e00\u6837\uff0c\u53ea\u6709\u5f53\u4f60\u9010\u6e10\u964d\u4f4e\u5b66\u4e60\u901f\u7387\u65f6\uff0c\u5b83\u624d\u80fd\u771f\u6b63\u6536\u655b\uff08\u5426\u5219\u5b83\u5c06\u5728\u6781\u503c\u70b9\u9707\u8361\uff09\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001 S \uff0c\u8be5\u7b97\u6cd5\u53ea\u8ddf\u8e2a\u667a\u80fd\u4f53\u79bb\u5f00\u8be5\u72b6\u6001\u65f6\u7acb\u5373\u83b7\u5f97\u7684\u5956\u52b1\u7684\u5e73\u5747\u503c\uff0c\u518d\u52a0\u4e0a\u5b83\u671f\u671b\u7a0d\u540e\u5f97\u5230\u7684\u5956\u52b1\uff08\u5047\u8bbe\u5b83\u7684\u884c\u4e3a\u6700\u4f73\uff09\u3002 \u7c7b\u4f3c\u5730\uff0c\u6b64\u65f6\u7684Q \u5b66\u4e60\u7b97\u6cd5\u662f Q \u503c\u8fed\u4ee3\u7b97\u6cd5\u7684\u6539\u7f16\u7248\u672c\uff0c\u5176\u9002\u5e94\u8f6c\u79fb\u6982\u7387\u548c\u56de\u62a5\u5728\u521d\u59cb\u672a\u77e5\u7684\u60c5\u51b5\uff08\u89c1\u516c\u5f0f16-5\uff09\u3002 \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001\u52a8\u4f5c\u5bf9 (s,a) \uff0c\u8be5\u7b97\u6cd5\u8ddf\u8e2a\u667a\u80fd\u4f53\u5728\u4ee5\u52a8\u4f5c A \u79bb\u5f00\u72b6\u6001 S \u65f6\u83b7\u5f97\u7684\u5373\u65f6\u5956\u52b1\u5e73\u5747\u503c R \uff0c\u52a0\u4e0a\u5b83\u671f\u671b\u7a0d\u540e\u5f97\u5230\u7684\u5956\u52b1\u3002\u7531\u4e8e\u76ee\u6807\u7b56\u7565\u5c06\u6700\u4f18\u5730\u8fd0\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u53d6\u4e0b\u4e00\u72b6\u6001\u7684 Q \u503c\u4f30\u8ba1\u7684\u6700\u5927\u503c\u3002 \u4ee5\u4e0b\u662f\u5982\u4f55\u5b9e\u73b0 Q \u5b66\u4e60\uff1a import numpy.random as rnd learning_rate0 = 0.05 learning_rate_decay = 0.1 n_iterations = 20000 s = 0 # \u5728\u72b6\u6001 0\u5f00\u59cb Q = np.full((3, 3), -np.inf) # -inf \u5bf9\u5e94\u7740\u4e0d\u53ef\u80fd\u7684\u52a8\u4f5c for state, actions in enumerate(possible_actions): Q[state, actions] = 0.0 # \u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u52a8\u4f5c\u521d\u59cb\u5316\u4e3a 0.0 for iteration in range(n_iterations): a = rnd.choice(possible_actions[s]) # \u968f\u673a\u9009\u62e9\u52a8\u4f5c sp = rnd.choice(range(3), p=T[s, a]) # \u4f7f\u7528 T[s, a] \u6311\u9009\u4e0b\u4e00\u72b6\u6001 reward = R[s, a, sp] learning_rate = learning_rate0 / (1 + iteration * learning_rate_decay) Q[s, a] = learning_rate * Q[s, a] + (1 - learning_rate) * (reward + discount_rate * np.max(Q[sp])) s = sp # \u79fb\u52a8\u81f3\u4e0b\u4e00\u72b6\u6001 \u7ed9\u5b9a\u8db3\u591f\u7684\u8fed\u4ee3\uff0c\u8be5\u7b97\u6cd5\u5c06\u6536\u655b\u5230\u6700\u4f18 Q \u503c\u3002\u8fd9\u88ab\u79f0\u4e3a\u79bb\u7ebf\u7b56\u7565\u7b97\u6cd5\uff0c\u56e0\u4e3a\u6b63\u5728\u8bad\u7ec3\u7684\u7b56\u7565\u4e0d\u662f\u6b63\u5728\u6267\u884c\u7684\u7b56\u7565\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8be5\u7b97\u6cd5\u80fd\u591f\u901a\u8fc7\u89c2\u5bdf\u667a\u80fd\u4f53\u884c\u4e3a\u968f\u673a\u5b66\u4e60\uff08\u4f8b\u5982\u5b66\u4e60\u5f53\u4f60\u7684\u8001\u5e08\u662f\u4e00\u4e2a\u9189\u7334\u5b50\u65f6\u6253\u9ad8\u5c14\u592b\u7403\uff09\u6700\u4f73\u7b56\u7565\u3002\u6211\u4eec\u80fd\u505a\u5f97\u66f4\u597d\u5417\uff1f \u63a2\u7d22\u7b56\u7565 \u5f53\u7136\uff0c\u53ea\u6709\u5728\u63a2\u7d22\u7b56\u7565\u5145\u5206\u63a2\u7d22 MDP \u7684\u60c5\u51b5\u4e0b\uff0cQ \u5b66\u4e60\u624d\u80fd\u8d77\u4f5c\u7528\u3002\u5c3d\u7ba1\u4e00\u4e2a\u7eaf\u7cb9\u7684\u968f\u673a\u7b56\u7565\u4fdd\u8bc1\u6700\u7ec8\u8bbf\u95ee\u6bcf\u4e00\u4e2a\u72b6\u6001\u548c\u6bcf\u4e2a\u8f6c\u6362\u591a\u6b21\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u5f88\u957f\u7684\u65f6\u95f4\u8fd9\u6837\u505a\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\u662f\u4f7f\u7528 \u03b5 \u8d2a\u5a6a\u7b56\u7565\uff1a\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5b83\u4ee5\u6982\u7387 \u03b5 \u968f\u673a\u5730\u6216\u4ee5\u6982\u7387\u4e3a 1-\u03b5 \u8d2a\u5a6a\u5730\uff08\u9009\u62e9\u5177\u6709\u6700\u9ad8 Q \u503c\u7684\u52a8\u4f5c\uff09\u3002\u03b5 \u8d2a\u5a6a\u7b56\u7565\u7684\u4f18\u70b9\uff08\u4e0e\u5b8c\u5168\u968f\u673a\u7b56\u7565\u76f8\u6bd4\uff09\u662f\uff0c\u5b83\u5c06\u82b1\u8d39\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u95f4\u6765\u63a2\u7d22\u73af\u5883\u4e2d\u6709\u8da3\u7684\u90e8\u5206\uff0c\u56e0\u4e3a Q \u503c\u4f30\u8ba1\u8d8a\u6765\u8d8a\u597d\uff0c\u540c\u65f6\u4ecd\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u8bbf\u95ee MDP \u7684\u672a\u77e5\u533a\u57df\u3002\u4ee5 \u03b5 \u4e3a\u5f88\u9ad8\u7684\u503c\uff08\u4f8b\u5982\uff0c1\uff09\u5f00\u59cb\uff0c\u7136\u540e\u9010\u6e10\u51cf\u5c0f\u5b83\uff08\u4f8b\u5982\uff0c\u4e0b\u964d\u5230 0.05\uff09\u662f\u5f88\u5e38\u89c1\u7684\u3002 \u53ef\u9009\u62e9\u7684\uff0c\u76f8\u6bd4\u4e8e\u4f9d\u8d56\u4e8e\u63a2\u7d22\u7684\u53ef\u80fd\u6027\uff0c\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u9f13\u52b1\u63a2\u7d22\u7b56\u7565\u6765\u5c1d\u8bd5\u5b83\u4ee5\u524d\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u7684\u884c\u52a8\u3002\u8fd9\u53ef\u4ee5\u88ab\u5b9e\u73b0\u4e3a\u9644\u52a0\u4e8e Q \u503c\u4f30\u8ba1\u7684\u5956\u91d1\uff0c\u5982\u516c\u5f0f 16-6 \u6240\u793a\u3002 \u5176\u4e2d\uff1a N \u8ba1\u7b97\u4e86\u5728\u72b6\u6001 s \u65f6\u9009\u62e9\u52a8\u4f5c a \u7684\u6b21\u6570 f \u662f\u4e00\u4e2a\u63a2\u7d22\u51fd\u6570\uff0c\u4f8b\u5982 f=q+K/(1+n) \uff0c\u5176\u4e2d K \u662f\u4e00\u4e2a\u597d\u5947\u8d85\u53c2\u6570\uff0c\u5b83\u6d4b\u91cf\u667a\u80fd\u4f53\u88ab\u5438\u5f15\u5230\u672a\u77e5\u72b6\u6001\u7684\u7a0b\u5ea6\u3002 \u8fd1\u4f3c Q \u5b66\u4e60 Q \u5b66\u4e60\u7684\u4e3b\u8981\u95ee\u9898\u662f\uff0c\u5b83\u4e0d\u80fd\u5f88\u597d\u5730\u6269\u5c55\u5230\u5177\u6709\u8bb8\u591a\u72b6\u6001\u548c\u52a8\u4f5c\u7684\u5927\uff08\u751a\u81f3\u4e2d\u7b49\uff09\u7684 MDP\u3002\u8bd5\u7740\u7528 Q \u5b66\u4e60\u6765\u8bad\u7ec3\u4e00\u4e2a\u667a\u80fd\u4f53\u53bb\u73a9 Ms. Pac-Man\u3002Ms. Pac-Man \u53ef\u4ee5\u5403\u8d85\u8fc7 250 \u7c92\u7c92\u5b50\uff0c\u6bcf\u4e00\u7c92\u90fd\u53ef\u4ee5\u5b58\u5728\u6216\u4e0d\u5b58\u5728\uff08\u5373\u5df2\u7ecf\u5403\u8fc7\uff09\u3002\u56e0\u6b64\uff0c\u53ef\u80fd\u72b6\u6001\u7684\u6570\u76ee\u5927\u4e8e 2 \u7684 250 \u6b21\u5e42\uff0c\u7ea6\u7b49\u4e8e 10 \u7684 75 \u6b21\u5e42\uff08\u5e76\u4e14\u8fd9\u662f\u8003\u8651\u9897\u7c92\u7684\u53ef\u80fd\u72b6\u6001\uff09\u3002\u8fd9\u6bd4\u5728\u53ef\u89c2\u6d4b\u7684\u5b87\u5b99\u4e2d\u7684\u539f\u5b50\u8981\u591a\u5f97\u591a\uff0c\u6240\u4ee5\u4f60\u7edd\u5bf9\u65e0\u6cd5\u8ffd\u8e2a\u6bcf\u4e00\u4e2a Q \u503c\u7684\u4f30\u8ba1\u503c\u3002 \u89e3\u51b3\u65b9\u6848\u662f\u627e\u5230\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u7528\u53ef\u7ba1\u7406\u6570\u91cf\u7684\u53c2\u6570\u6765\u8fd1\u4f3c Q \u503c\u3002\u8fd9\u88ab\u79f0\u4e3a\u8fd1\u4f3c Q \u5b66\u4e60\u3002\u591a\u5e74\u6765\uff0c\u4eba\u4eec\u90fd\u662f\u624b\u5de5\u5728\u72b6\u6001\u4e2d\u63d0\u53d6\u5e76\u7ebf\u6027\u7ec4\u5408\u7279\u5f81\uff08\u4f8b\u5982\uff0c\u6700\u8fd1\u7684\u9b3c\u7684\u8ddd\u79bb\uff0c\u5b83\u4eec\u7684\u65b9\u5411\u7b49\uff09\u6765\u4f30\u8ba1 Q \u503c\uff0c\u4f46\u662f DeepMind \u8868\u660e\u4f7f\u7528\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5de5\u4f5c\u5f97\u66f4\u597d\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u590d\u6742\u7684\u95ee\u9898\u3002\u5b83\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u5f81\u5de5\u7a0b\u3002\u7528\u4e8e\u4f30\u8ba1 Q \u503c\u7684 DNN \u88ab\u79f0\u4e3a\u6df1\u5ea6 Q \u7f51\u7edc\uff08DQN\uff09\uff0c\u5e76\u4e14\u4f7f\u7528\u8fd1\u4f3c Q \u5b66\u4e60\u7684 DQN \u88ab\u79f0\u4e3a\u6df1\u5ea6 Q \u5b66\u4e60\u3002 \u5728\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6df1\u5ea6 Q \u5b66\u4e60\u6765\u8bad\u7ec3\u4e00\u4e2a\u667a\u80fd\u4f53\u53bb\u73a9 Ms. Pac-Man\uff0c\u5c31\u50cf DeepMind \u5728 2013 \u6240\u505a\u7684\u90a3\u6837\u3002\u4ee3\u7801\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8c03\u6574\uff0c\u8c03\u6574\u540e\u5b66\u4e60\u53bb\u73a9\u5927\u591a\u6570 Atari \u6e38\u620f\u7684\u6548\u679c\u90fd\u76f8\u5f53\u597d\u3002\u5728\u5927\u591a\u6570\u52a8\u4f5c\u6e38\u620f\u4e2d\uff0c\u5b83\u53ef\u4ee5\u8fbe\u5230\u8d85\u4eba\u7684\u6280\u80fd\uff0c\u4f46\u5b83\u5728\u957f\u65f6\u8fd0\u884c\u7684\u6e38\u620f\u4e2d\u5374\u4e0d\u592a\u597d\u3002 \u5b66\u4e60\u53bb\u4f7f\u7528\u6df1\u5ea6 Q \u5b66\u4e60\u6765\u73a9 Ms.Pac-Man \u7531\u4e8e\u6211\u4eec\u5c06\u4f7f\u7528 Atari \u73af\u5883\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5b89\u88c5 OpenAI gym \u7684 Atari \u73af\u5883\u4f9d\u8d56\u9879\u3002\u5f53\u9700\u8981\u73a9\u5176\u4ed6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u4f1a\u4e3a\u4f60\u60f3\u73a9\u7684\u5176\u4ed6 OpenAI gym \u73af\u5883\u5b89\u88c5\u4f9d\u8d56\u9879\u3002\u5728 macOS \u4e0a\uff0c\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86 Homebrew \u7a0b\u5e8f\uff0c\u4f60\u9700\u8981\u8fd0\u884c\uff1a $ brew install cmake boost boost-python sdl2 swig wget \u5728 Ubuntu \u4e0a\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff08\u5982\u679c\u4f7f\u7528 Python 2\uff0c\u7528 Python \u66ff\u6362 Python 3\uff09\uff1a $ apt-get install -y python3-numpy python3-dev cmake zlib1g-dev libjpeg-dev\\ xvfb libav-tools xorg-dev python3-opengl libboost-all-dev libsdl2-dev swig \u968f\u540e\u5b89\u88c5\u989d\u5916\u7684 python \u5305\uff1a $ pip3 install --upgrade 'gym[all]' \u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u521b\u9020\u4e00\u4e2a Ms.Pac-Man \u73af\u5883\uff1a >>> env = gym.make(\"MsPacman-v0\") >>> obs = env.reset() >>> obs.shape # [\u957f\uff0c\u5bbd\uff0c\u901a\u9053] (210, 160, 3) >>> env.action_space Discrete(9) \u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u6709\u4e5d\u4e2a\u79bb\u6563\u52a8\u4f5c\u53ef\u7528\uff0c\u5b83\u5bf9\u5e94\u4e8e\u64cd\u7eb5\u6746\u7684\u4e5d\u4e2a\u53ef\u80fd\u4f4d\u7f6e\uff08\u5de6\u3001\u53f3\u3001\u4e0a\u3001\u4e0b\u3001\u4e2d\u3001\u5de6\u4e0a\u7b49\uff09\uff0c\u89c2\u5bdf\u7ed3\u679c\u662f Atari \u5c4f\u5e55\u7684\u622a\u56fe\uff08\u89c1\u56fe 16-9\uff0c\u5de6\uff09\uff0c\u8868\u793a\u4e3a 3D Numpy \u77e9\u9635\u3002\u8fd9\u4e9b\u56fe\u50cf\u6709\u70b9\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5c0f\u7684\u9884\u5904\u7406\u51fd\u6570\uff0c\u5c06\u56fe\u50cf\u88c1\u526a\u5e76\u7f29\u5c0f\u5230 88\u00d780 \u50cf\u7d20\uff0c\u5c06\u5176\u8f6c\u6362\u6210\u7070\u5ea6\uff0c\u5e76\u63d0\u9ad8 Ms.Pac-Man \u7684\u5bf9\u6bd4\u5ea6\u3002\u8fd9\u5c06\u51cf\u5c11 DQN \u6240\u9700\u7684\u8ba1\u7b97\u91cf\uff0c\u5e76\u52a0\u5feb\u57f9\u8bad\u7ec3\u3002 mspacman_color = np.array([210, 164, 74]).mean() def preprocess_observation(obs): img = obs[1:176:2, ::2] # \u88c1\u526a img = img.mean(axis=2) # \u7070\u5ea6\u5316 img[img==mspacman_color] = 0 # \u63d0\u5347\u5bf9\u6bd4\u5ea6 img = (img - 128) / 128 - 1 # \u6b63\u5219\u5316\u4e3a-1\u52301. return img.reshape(88, 80, 1) \u8fc7\u7a0b\u7684\u7ed3\u679c\u5982\u56fe 16-9 \u6240\u793a\uff08\u53f3\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u521b\u5efa DQN\u3002\u5b83\u53ef\u4ee5\u53ea\u53d6\u4e00\u4e2a\u72b6\u6001\u52a8\u4f5c\u5bf9 (S,A) \u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u8f93\u51fa\u76f8\u5e94\u7684 Q \u503c Q(s,a) \u7684\u4f30\u8ba1\u503c\uff0c\u4f46\u662f\u7531\u4e8e\u52a8\u4f5c\u662f\u79bb\u6563\u7684\uff0c\u6240\u4ee5\u4f7f\u7528\u53ea\u4f7f\u7528\u72b6\u6001 S \u4f5c\u4e3a\u8f93\u5165\u5e76\u8f93\u51fa\u6bcf\u4e2a\u52a8\u4f5c\u7684\u4e00\u4e2a Q \u503c\u4f30\u8ba1\u7684\u795e\u7ecf\u7f51\u7edc\u662f\u66f4\u65b9\u4fbf\u7684\u3002DQN \u5c06\u7531\u4e09\u4e2a\u5377\u79ef\u5c42\u7ec4\u6210\uff0c\u63a5\u7740\u662f\u4e24\u4e2a\u5168\u8fde\u63a5\u5c42\uff0c\u5176\u4e2d\u5305\u62ec\u8f93\u51fa\u5c42\uff08\u5982\u56fe 16-10\uff09\u3002 \u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7684\u8bad\u7ec3\u7b97\u6cd5\u9700\u8981\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u67b6\u6784\uff08\u4f46\u4e0d\u540c\u53c2\u6570\uff09\u7684 DQN\uff1a\u4e00\u4e2a\u5c06\u5728\u8bad\u7ec3\u671f\u95f4\u7528\u4e8e\u9a71\u52a8 Ms.Pac-Man\uff08the actor \uff0c\u884c\u52a8\u8005\uff09\uff0c\u53e6\u4e00\u4e2a\u5c06\u89c2\u770b\u884c\u52a8\u8005\u5e76\u4ece\u5176\u8bd5\u9a8c\u548c\u9519\u8bef\u4e2d\u5b66\u4e60\uff08the critic \uff0c\u8bc4\u5224\u8005\uff09\u3002\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\uff0c\u6211\u4eec\u628a\u8bc4\u5224\u8005\u7f51\u7edc\u590d\u5236\u7ed9\u884c\u52a8\u8005\u7f51\u7edc\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u76f8\u540c\u7684 DQN\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a q_network() \u51fd\u6570\u6765\u6784\u5efa\u5b83\u4eec\uff1a from tensorflow.contrib.layers import convolution2d, fully_connected input_height = 88 input_width = 80 input_channels = 1 conv_n_maps = [32, 64, 64] conv_kernel_sizes = [(8,8), (4,4), (3,3)] conv_strides = [4, 2, 1] conv_paddings = [\"SAME\"]*3 conv_activation = [tf.nn.relu]*3 n_hidden_in = 64 * 11 * 10 # conv3 \u6709 64 \u4e2a 11x10 \u6620\u5c04 each n_hidden = 512 hidden_activation = tf.nn.relu n_outputs = env.action_space.n # 9\u4e2a\u79bb\u6563\u52a8\u4f5c initializer = tf.contrib.layers.variance_scaling_initializer() def q_network(X_state, scope): prev_layer = X_state conv_layers = [] with tf.variable_scope(scope) as scope: for n_maps, kernel_size, stride, padding, activation in zip(conv_n_maps, conv_kernel_sizes, conv_strides, conv_paddings, conv_activation): prev_layer = convolution2d(prev_layer, num_outputs=n_maps, kernel_size=kernel_size, stride=stride, padding=padding, activation_fn=activation, weights_initializer=initializer) conv_layers.append(prev_layer) last_conv_layer_flat = tf.reshape(prev_layer, shape=[-1, n_hidden_in]) hidden = fully_connected(last_conv_layer_flat, n_hidden, activation_fn=hidden_activation, weights_initializer=initializer) outputs = fully_connected(hidden, n_outputs, activation_fn=None, weights_initializer=initializer) trainable_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope=scope.name) trainable_vars_by_name = {var.name[len(scope.name):]: var for var in trainable_vars} return outputs, trainable_vars_by_name \u8be5\u4ee3\u7801\u7684\u7b2c\u4e00\u90e8\u5206\u5b9a\u4e49\u4e86DQN\u4f53\u7cfb\u7ed3\u6784\u7684\u8d85\u53c2\u6570\u3002\u7136\u540e q_network() \u51fd\u6570\u521b\u5efa DQN\uff0c\u5c06\u73af\u5883\u7684\u72b6\u6001 X_state \u4f5c\u4e3a\u8f93\u5165\uff0c\u4ee5\u53ca\u53d8\u91cf\u8303\u56f4\u7684\u540d\u79f0\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u53ea\u4f7f\u7528\u4e00\u4e2a\u89c2\u5bdf\u6765\u8868\u793a\u73af\u5883\u7684\u72b6\u6001\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6ca1\u6709\u9690\u85cf\u7684\u72b6\u6001\uff08\u9664\u4e86\u95ea\u70c1\u7684\u7269\u4f53\u548c\u9b3c\u9b42\u7684\u65b9\u5411\uff09\u3002 trainable_vars_by_name \u5b57\u5178\u6536\u96c6\u4e86\u6240\u6709 DQN \u7684\u53ef\u8bad\u7ec3\u53d8\u91cf\u3002\u5f53\u6211\u4eec\u521b\u5efa\u64cd\u4f5c\u4ee5\u5c06\u8bc4\u8bba\u5bb6 DQN \u590d\u5236\u5230\u884c\u52a8\u8005 DQN \u65f6\uff0c\u8fd9\u5c06\u662f\u6709\u7528\u7684\u3002\u5b57\u5178\u7684\u952e\u662f\u53d8\u91cf\u7684\u540d\u79f0\uff0c\u53bb\u6389\u4e0e\u8303\u56f4\u540d\u79f0\u76f8\u5bf9\u5e94\u7684\u524d\u7f00\u7684\u4e00\u90e8\u5206\u3002\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a >>> trainable_vars_by_name {'/Conv/biases:0': <tensorflow.python.ops.variables.Variable at 0x121cf7b50>, '/Conv/weights:0': <tensorflow.python.ops.variables.Variable...>, '/Conv_1/biases:0': <tensorflow.python.ops.variables.Variable...>, '/Conv_1/weights:0': <tensorflow.python.ops.variables.Variable...>, '/Conv_2/biases:0': <tensorflow.python.ops.variables.Variable...>, '/Conv_2/weights:0': <tensorflow.python.ops.variables.Variable...>, '/fully_connected/biases:0': <tensorflow.python.ops.variables.Variable...>, '/fully_connected/weights:0': <tensorflow.python.ops.variables.Variable...>, '/fully_connected_1/biases:0': <tensorflow.python.ops.variables.Variable...>, '/fully_connected_1/weights:0': <tensorflow.python.ops.variables.Variable...>} \u73b0\u5728\u8ba9\u6211\u4eec\u4e3a\u4e24\u4e2a DQN \u521b\u5efa\u8f93\u5165\u5360\u4f4d\u7b26\uff0c\u4ee5\u53ca\u590d\u5236\u8bc4\u8bba\u5bb6 DQN \u7ed9\u884c\u52a8\u8005 DQN \u7684\u64cd\u4f5c\uff1a X_state = tf.placeholder(tf.float32, shape=[None, input_height, input_width,input_channels]) actor_q_values, actor_vars = q_network(X_state, scope=\"q_networks/actor\") critic_q_values, critic_vars = q_network(X_state, scope=\"q_networks/critic\") copy_ops = [actor_var.assign(critic_vars[var_name]) for var_name, actor_var in actor_vars.items()] copy_critic_to_actor = tf.group(*copy_ops) \u8ba9\u6211\u4eec\u540e\u9000\u4e00\u6b65\uff1a\u6211\u4eec\u73b0\u5728\u6709\u4e24\u4e2a DQN\uff0c\u5b83\u4eec\u90fd\u80fd\u591f\u5c06\u73af\u5883\u72b6\u6001\uff08\u5373\u9884\u5904\u7406\u89c2\u5bdf\uff09\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u8f93\u51fa\u5728\u8be5\u72b6\u6001\u4e0b\u7684\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u52a8\u4f5c\u7684\u4f30\u8ba1 Q \u503c\u3002\u53e6\u5916\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a copy_critic_to_actor \u7684\u64cd\u4f5c\uff0c\u5c06\u8bc4\u8bba\u5bb6 DQN \u7684\u6240\u6709\u53ef\u8bad\u7ec3\u53d8\u91cf\u590d\u5236\u5230\u884c\u52a8\u8005 DQN\u3002\u6211\u4eec\u4f7f\u7528 TensorFlow \u7684 tf.group() \u51fd\u6570\u5c06\u6240\u6709\u8d4b\u503c\u64cd\u4f5c\u5206\u7ec4\u5230\u4e00\u4e2a\u65b9\u4fbf\u7684\u64cd\u4f5c\u4e2d\u3002 \u884c\u52a8\u8005 DQN \u53ef\u4ee5\u7528\u6765\u626e\u6f14 Ms.Pac-Man\uff08\u6700\u521d\u975e\u5e38\u7cdf\u7cd5\uff09\u3002\u6b63\u5982\u524d\u9762\u6240\u8ba8\u8bba\u7684\uff0c\u4f60\u5e0c\u671b\u5b83\u8db3\u591f\u6df1\u5165\u5730\u63a2\u7a76\u6e38\u620f\uff0c\u6240\u4ee5\u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u60f3\u5c06\u5b83\u7528 \u03b5 \u8d2a\u5a6a\u7b56\u7565\u6216\u53e6\u4e00\u79cd\u63a2\u7d22\u7b56\u7565\u76f8\u7ed3\u5408\u3002 \u4f46\u662f\u8bc4\u8bba\u5bb6 DQN \u5462\uff1f\u5b83\u5982\u4f55\u53bb\u5b66\u4e60\u73a9\u6e38\u620f\uff1f\u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u5c06\u8bd5\u56fe\u4f7f\u5176\u9884\u6d4b\u7684 Q \u503c\u53bb\u5339\u914d\u884c\u52a8\u8005\u901a\u8fc7\u5176\u7ecf\u9a8c\u7684\u6e38\u620f\u4f30\u8ba1\u7684 Q \u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u8ba9\u884c\u52a8\u8005\u73a9\u4e00\u6bb5\u65f6\u95f4\uff0c\u628a\u6240\u6709\u7684\u7ecf\u9a8c\u4fdd\u5b58\u5728\u56de\u653e\u8bb0\u5fc6\u5b58\u50a8\u5668\u4e2d\u3002\u6bcf\u4e2a\u8bb0\u5fc6\u5c06\u662f\u4e00\u4e2a 5 \u5143\u7ec4\uff08\u72b6\u6001\u3001\u52a8\u4f5c\u3001\u4e0b\u4e00\u72b6\u6001\u3001\u5956\u52b1\u3001\u7ee7\u7eed\uff09\uff0c\u5176\u4e2d\u201c\u7ee7\u7eed\u201d\u9879\u5728\u6e38\u620f\u7ed3\u675f\u65f6\u7b49\u4e8e 0\uff0c\u5426\u5219\u4e3a 1\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9a\u671f\u5730\u4ece\u56de\u653e\u5b58\u50a8\u5668\u4e2d\u91c7\u6837\u4e00\u6279\u8bb0\u5fc6\uff0c\u5e76\u4e14\u6211\u4eec\u5c06\u4f30\u8ba1\u8fd9\u4e9b\u5b58\u50a8\u5668\u4e2d\u7684 Q \u503c\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u76d1\u7763\u5b66\u4e60\u6280\u672f\u8bad\u7ec3\u8bc4\u8bba\u5bb6 DQN \u53bb\u9884\u6d4b\u8fd9\u4e9b Q \u503c\u3002\u6bcf\u9694\u51e0\u4e2a\u8bad\u7ec3\u5468\u671f\uff0c\u6211\u4eec\u4f1a\u628a\u8bc4\u8bba\u5bb6 DQN \u590d\u5236\u5230\u884c\u52a8\u8005 DQN\u3002\u5c31\u8fd9\u6837\uff01\u516c\u5f0f 16-7 \u793a\u51fa\u4e86\u7528\u4e8e\u8bad\u7ec3\u8bc4\u8bba\u5bb6 DQN \u7684\u635f\u5931\u51fd\u6570\uff1a \u5176\u4e2d\uff1a \u548c \u5206\u522b\u4e3a\u72b6\u6001\uff0c\u884c\u4e3a\uff0c\u56de\u62a5\uff0c\u548c\u4e0b\u4e00\u72b6\u6001\uff0c\u5747\u4ece\u5b58\u50a8\u5668\u4e2d\u7b2c i \u6b21\u91c7\u6837\u5f97\u5230 m \u662f\u8bb0\u5fc6\u6279\u5904\u7406\u7684\u957f\u5ea6 \u03b8 critic\u548c \u03b8actor \u4e3a\u8bc4\u8bba\u8005\u548c\u884c\u52a8\u8005\u7684\u53c2\u6570 \u662f\u8bc4\u8bba\u5bb6 DQN \u5bf9\u7b2c i \u8bb0\u5fc6\u72b6\u6001\u884c\u4e3a Q \u503c\u7684\u9884\u6d4b \u662f\u6f14\u5458 DQN \u5728\u9009\u62e9\u52a8\u4f5c A' \u65f6\u7684\u4e0b\u4e00\u72b6\u6001 S' \u7684\u671f\u671b Q \u503c\u7684\u9884\u6d4b y \u662f\u7b2c i \u8bb0\u5fc6\u7684\u76ee\u6807 Q \u503c\uff0c\u6ce8\u610f\uff0c\u5b83\u7b49\u540c\u4e8e\u884c\u52a8\u8005\u5b9e\u9645\u89c2\u5bdf\u5230\u7684\u5956\u52b1\uff0c\u518d\u52a0\u4e0a\u884c\u52a8\u8005\u5bf9\u5982\u679c\u5b83\u80fd\u53d1\u6325\u6700\u4f73\u6548\u679c\uff08\u636e\u5b83\u6240\u77e5\uff09\uff0c\u672a\u6765\u7684\u56de\u62a5\u5e94\u8be5\u662f\u4ec0\u4e48\u7684\u9884\u6d4b\u3002 J \u4e3a\u8bad\u7ec3\u8bc4\u8bba\u5bb6 DQN \u7684\u635f\u5931\u51fd\u6570\u3002\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u8fd9\u53ea\u662f\u7531\u884c\u52a8\u8005 DQN \u4f30\u8ba1\u7684\u76ee\u6807 Q \u503c y \u548c\u8bc4\u8bba\u5bb6 DQN \u5bf9\u8fd9\u4e9b Q \u503c\u7684\u9884\u6d4b\u4e4b\u95f4\u7684\u5747\u65b9\u8bef\u5dee\u3002 \u56de\u653e\u8bb0\u5fc6\u662f\u53ef\u9009\u7684\uff0c\u4f46\u5f3a\u70c8\u63a8\u8350\u4f7f\u5b83\u5b58\u5728\u3002\u6ca1\u6709\u5b83\uff0c\u4f60\u4f1a\u8bad\u7ec3\u8bc4\u8bba\u5bb6 DQN \u4f7f\u7528\u8fde\u7eed\u7684\u7ecf\u9a8c\uff0c\u8fd9\u53ef\u80fd\u662f\u76f8\u5173\u7684\u3002\u8fd9\u5c06\u5f15\u5165\u5927\u91cf\u7684\u504f\u5dee\u5e76\u4e14\u51cf\u6162\u8bad\u7ec3\u7b97\u6cd5\u7684\u6536\u655b\u6027\u3002\u901a\u8fc7\u4f7f\u7528\u56de\u653e\u8bb0\u5fc6\uff0c\u6211\u4eec\u786e\u4fdd\u9988\u9001\u5230\u8bad\u7ec3\u7b97\u6cd5\u7684\u5b58\u50a8\u5668\u53ef\u4ee5\u662f\u4e0d\u76f8\u5173\u7684\u3002 \u8ba9\u6211\u4eec\u6dfb\u52a0\u8bc4\u8bba\u5bb6 DQN \u7684\u8bad\u7ec3\u64cd\u4f5c\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u8ba1\u7b97\u5176\u5728\u5b58\u50a8\u5668\u6279\u5904\u7406\u4e2d\u7684\u6bcf\u4e2a\u72b6\u6001\u52a8\u4f5c\u7684\u9884\u6d4b Q \u503c\u3002\u7531\u4e8e DQN \u4e3a\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u52a8\u4f5c\u8f93\u51fa\u4e00\u4e2a Q \u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u6301\u4e0e\u5728\u8be5\u5b58\u50a8\u5668\u4e2d\u5b9e\u9645\u9009\u62e9\u7684\u52a8\u4f5c\u76f8\u5bf9\u5e94\u7684 Q \u503c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u628a\u52a8\u4f5c\u8f6c\u6362\u6210\u4e00\u4e2a\u70ed\u5411\u91cf\uff08\u8bb0\u4f4f\u8fd9\u662f\u4e00\u4e2a\u6ee1\u662f 0 \u7684\u5411\u91cf\uff0c\u9664\u4e86\u7b2c i \u4e2a\u7d22\u5f15\u4e2d\u76841\uff09\uff0c\u5e76\u4e58\u4ee5 Q \u503c\uff1a\u8fd9\u5c06\u5220\u9664\u6240\u6709\u4e0e\u8bb0\u5fc6\u52a8\u4f5c\u5bf9\u5e94\u7684 Q \u503c\u5916\u7684 Q \u503c\u3002\u7136\u540e\u53ea\u5bf9\u7b2c\u4e00\u8f74\u6c42\u548c\uff0c\u4ee5\u83b7\u5f97\u6bcf\u4e2a\u5b58\u50a8\u5668\u6240\u9700\u7684 Q \u503c\u9884\u6d4b\u3002 X_action = tf.placeholder(tf.int32, shape=[None]) q_value = tf.reduce_sum(critic_q_values * tf.one_hot(X_action, n_outputs), axis=1, keep_dims=True) \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u8bad\u7ec3\u64cd\u4f5c\uff0c\u5047\u8bbe\u76ee\u6807Q\u503c\u5c06\u901a\u8fc7\u5360\u4f4d\u7b26\u9988\u5165\u3002\u6211\u4eec\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a\u4e0d\u53ef\u8bad\u7ec3\u7684\u53d8\u91cf global_step \u3002\u4f18\u5316\u5668\u7684 minimize() \u64cd\u4f5c\u5c06\u8d1f\u8d23\u589e\u52a0\u5b83\u3002\u53e6\u5916\uff0c\u6211\u4eec\u521b\u5efa\u4e86 init \u64cd\u4f5c\u548c Saver \u3002 y = tf.placeholder(tf.float32, shape=[None, 1]) cost = tf.reduce_mean(tf.square(y - q_value)) global_step = tf.Variable(0, trainable=False, name='global_step') optimizer = tf.train.AdamOptimizer(learning_rate) training_op = optimizer.minimize(cost, global_step=global_step) init = tf.global_variables_initializer() saver = tf.train.Saver() \u8fd9\u5c31\u662f\u8bad\u7ec3\u9636\u6bb5\u7684\u60c5\u51b5\u3002\u5728\u6211\u4eec\u67e5\u770b\u6267\u884c\u9636\u6bb5\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5de5\u5177\u3002\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4ece\u56de\u653e\u8bb0\u5fc6\u5f00\u59cb\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a deque \u5217\u8868\uff0c\u56e0\u4e3a\u5728\u5c06\u6570\u636e\u63a8\u9001\u5230\u961f\u5217\u4e2d\u5e76\u5728\u8fbe\u5230\u6700\u5927\u5185\u5b58\u5927\u5c0f\u65f6\u4ece\u5217\u8868\u7684\u672b\u5c3e\u5f39\u51fa\u5b83\u4eec\u4f7f\u662f\u975e\u5e38\u6709\u6548\u7684\u3002\u6211\u4eec\u8fd8\u5c06\u7f16\u5199\u4e00\u4e2a\u5c0f\u51fd\u6570\u6765\u968f\u673a\u5730\u4ece\u56de\u653e\u8bb0\u5fc6\u4e2d\u91c7\u6837\u4e00\u6279\u5904\u7406\uff1a from collections import deque replay_memory_size = 10000 replay_memory = deque([], maxlen=replay_memory_size) def sample_memories(batch_size): indices = rnd.permutation(len(replay_memory))[:batch_size] cols = [[], [], [], [], []] # state, action, reward, next_state, continue for idx in indices: memory = replay_memory[idx] for col, value in zip(cols, memory): col.append(value) cols = [np.array(col) for col in cols] return (cols[0], cols[1], cols[2].reshape(-1, 1), cols[3],cols[4].reshape(-1, 1)) \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u884c\u52a8\u8005\u6765\u63a2\u7d22\u6e38\u620f\u3002\u6211\u4eec\u4f7f\u7528 \u03b5 \u8d2a\u5a6a\u7b56\u7565\uff0c\u5e76\u5728 50000 \u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e2d\u9010\u6b65\u5c06 \u03b5 \u4ece 1 \u964d\u4f4e\u5230 0.05\u3002 eps_min = 0.05 eps_max = 1.0 eps_decay_steps = 50000 def epsilon_greedy(q_values, step): epsilon = max(eps_min, eps_max - (eps_max-eps_min) * step/eps_decay_steps) if rnd.rand() < epsilon: return rnd.randint(n_outputs) # \u968f\u673a\u52a8\u4f5c else: return np.argmax(q_values) # \u6700\u4f18\u52a8\u4f5c \u5c31\u662f\u8fd9\u6837\uff01\u6211\u4eec\u51c6\u5907\u597d\u5f00\u59cb\u8bad\u7ec3\u4e86\u3002\u6267\u884c\u9636\u6bb5\u4e0d\u5305\u542b\u592a\u590d\u6742\u7684\u4e1c\u897f\uff0c\u4f46\u5b83\u6709\u70b9\u957f\uff0c\u6240\u4ee5\u6df1\u547c\u5438\u3002\u51c6\u5907\u597d\u4e86\u5417\uff1f\u6765\u6b21\u591f\uff01\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u521d\u59cb\u5316\u51e0\u4e2a\u53d8\u91cf\uff1a n_steps = 100000 # \u603b\u7684\u8bad\u7ec3\u6b65\u957f training_start = 1000 # \u5728\u6e38\u620f1000\u6b21\u8fed\u4ee3\u540e\u5f00\u59cb\u8bad\u7ec3 training_interval = 3 # \u6bcf3\u6b21\u8fed\u4ee3\u8bad\u7ec3\u4e00\u6b21 save_steps = 50 # \u6bcf50\u8bad\u7ec3\u6b65\u957f\u4fdd\u5b58\u6a21\u578b copy_steps = 25 # \u6bcf25\u8bad\u7ec3\u6b65\u957f\u540e\u590d\u5236\u8bc4\u8bba\u5bb6Q\u503c\u5230\u884c\u52a8\u8005 discount_rate = 0.95 skip_start = 90 # \u8df3\u8fc7\u6e38\u620f\u5f00\u59cb(\u53ea\u662f\u7b49\u5f85\u65f6\u95f4) batch_size = 50 iteration = 0 # \u6e38\u620f\u8fed\u4ee3 checkpoint_path = \"./my_dqn.ckpt\" done = True # env \u9700\u8981\u88ab\u91cd\u7f6e \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6253\u5f00\u4f1a\u8bdd\u5e76\u5f00\u59cb\u8bad\u7ec3\uff1a with tf.Session() as sess: if os.path.isfile(checkpoint_path): saver.restore(sess, checkpoint_path) else: init.run() while True: step = global_step.eval() if step >= n_steps: break iteration += 1 if done: # \u6e38\u620f\u7ed3\u675f\uff0c\u91cd\u6765 obs = env.reset() for skip in range(skip_start): # \u8df3\u8fc7\u6e38\u620f\u5f00\u5934 obs, reward, done, info = env.step(0) state = preprocess_observation(obs) # \u884c\u52a8\u8005\u8bc4\u4f30\u8981\u5e72\u4ec0\u4e48 q_values = actor_q_values.eval(feed_dict={X_state: [state]}) action = epsilon_greedy(q_values, step) # \u884c\u52a8\u8005\u5f00\u59cb\u73a9\u6e38\u620f obs, reward, done, info = env.step(action) next_state = preprocess_observation(obs) # \u8ba9\u6211\u4eec\u8bb0\u4e0b\u6765\u521a\u624d\u53d1\u751f\u4e86\u5565 replay_memory.append((state, action, reward, next_state, 1.0 - done)) state = next_state if iteration < training_start or iteration % training_interval != 0: continue # \u8bc4\u8bba\u5bb6\u5b66\u4e60 X_state_val, X_action_val, rewards, X_next_state_val, continues = ( sample_memories(batch_size)) next_q_values = actor_q_values.eval( feed_dict={X_state: X_next_state_val}) max_next_q_values = np.max(next_q_values, axis=1, keepdims=True) y_val = rewards + continues * discount_rate * max_next_q_values training_op.run(feed_dict={X_state: X_state_val,X_action: X_action_val, y: y_val}) # \u590d\u5236\u8bc4\u8bba\u5bb6Q\u503c\u5230\u884c\u52a8\u8005 if step % copy_steps == 0: copy_critic_to_actor.run() # \u4fdd\u5b58\u6a21\u578b if step % save_steps == 0: saver.save(sess, checkpoint_path) \u5982\u679c\u68c0\u67e5\u70b9\u6587\u4ef6\u5b58\u5728\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u6062\u590d\u6a21\u578b\uff0c\u5426\u5219\u6211\u4eec\u53ea\u9700\u521d\u59cb\u5316\u53d8\u91cf\u3002\u7136\u540e\uff0c\u4e3b\u5faa\u73af\u5f00\u59cb\uff0c\u5176\u4e2d iteration \u8ba1\u7b97\u4ece\u7a0b\u5e8f\u5f00\u59cb\u4ee5\u6765\u6e38\u620f\u6b65\u9aa4\u7684\u603b\u6570\uff0c\u540c\u65f6 step \u8ba1\u7b97\u4ece\u8bad\u7ec3\u5f00\u59cb\u7684\u8bad\u7ec3\u6b65\u9aa4\u7684\u603b\u6570\uff08\u5982\u679c\u6062\u590d\u4e86\u68c0\u67e5\u70b9\uff0c\u4e5f\u6062\u590d\u5168\u5c40\u6b65\u9aa4\uff09\u3002\u7136\u540e\u4ee3\u7801\u91cd\u7f6e\u6e38\u620f\uff08\u8df3\u8fc7\u7b2c\u4e00\u4e2a\u65e0\u804a\u7684\u7b49\u5f85\u6e38\u620f\u7684\u6b65\u9aa4\uff0c\u8fd9\u6b65\u9aa4\u5565\u90fd\u6ca1\u6709\uff09\u3002\u63a5\u4e0b\u6765\uff0c\u884c\u52a8\u8005\u8bc4\u4f30\u8be5\u505a\u4ec0\u4e48\uff0c\u5e76\u4e14\u73a9\u6e38\u620f\uff0c\u5e76\u4e14\u5b83\u7684\u7ecf\u9a8c\u88ab\u5b58\u50a8\u5728\u56de\u653e\u8bb0\u5fc6\u4e2d\u3002\u7136\u540e\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff08\u70ed\u8eab\u671f\u540e\uff09\uff0c\u8bc4\u8bba\u5bb6\u5f00\u59cb\u4e00\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u3002\u5b83\u91c7\u6837\u4e00\u6279\u56de\u653e\u8bb0\u5fc6\uff0c\u5e76\u8981\u6c42\u884c\u52a8\u8005\u4f30\u8ba1\u4e0b\u4e00\u72b6\u6001\u7684\u6240\u6709\u52a8\u4f5c\u7684Q\u503c\uff0c\u5e76\u5e94\u7528\u516c\u5f0f 16-7 \u6765\u8ba1\u7b97\u76ee\u6807 Q \u503c y_val .\u8fd9\u91cc\u552f\u4e00\u68d8\u624b\u7684\u90e8\u5206\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684 Q \u503c\u4e58\u4ee5 continues \u5411\u91cf\uff0c\u4ee5\u5c06\u5bf9\u5e94\u4e8e\u6e38\u620f\u7ed3\u675f\u7684\u8bb0\u5fc6 Q \u503c\u6e05\u96f6\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fdb\u884c\u8bad\u7ec3\u64cd\u4f5c\uff0c\u4ee5\u63d0\u9ad8\u8bc4\u8bba\u5bb6\u9884\u6d4b Q \u503c\u7684\u80fd\u529b\u3002\u6700\u540e\uff0c\u6211\u4eec\u5b9a\u671f\u5c06\u8bc4\u8bba\u5bb6\u7684 Q \u503c\u590d\u5236\u7ed9\u884c\u52a8\u8005\uff0c\u7136\u540e\u4fdd\u5b58\u6a21\u578b\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u662f\u975e\u5e38\u7f13\u6162\u7684\uff1a\u5982\u679c\u4f60\u4f7f\u7528\u4f60\u7684\u7834\u7b14\u8bb0\u672c\u7535\u8111\u8fdb\u884c\u8bad\u7ec3\u7684\u8bdd\uff0c\u60f3\u8ba9 Ms. Pac-Man \u53d8\u597d\u4e00\u70b9\u70b9\u4f60\u5f97\u82b1\u597d\u51e0\u5929\uff0c\u5982\u679c\u4f60\u770b\u770b\u5b66\u4e60\u66f2\u7ebf\uff0c\u8ba1\u7b97\u4e00\u4e0b\u6bcf\u6b21\u7684\u5e73\u5747\u5956\u52b1\uff0c\u4f60\u4f1a\u53d1\u73b0\u5230\u5b83\u662f\u975e\u5e38\u5608\u6742\u7684\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u53ef\u80fd\u6ca1\u6709\u660e\u663e\u7684\u8fdb\u5c55\uff0c\u76f4\u5230\u667a\u80fd\u4f53\u5b66\u4f1a\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u751f\u5b58\u3002\u5982\u524d\u6240\u8ff0\uff0c\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u5148\u9a8c\u77e5\u8bc6\u6ce8\u5165\u5230\u6a21\u578b\u4e2d\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u9884\u5904\u7406\u3001\u5956\u52b1\u7b49\uff09\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u9996\u5148\u8bad\u7ec3\u5b83\u6765\u6a21\u4eff\u57fa\u672c\u7b56\u7565\u6765\u5f15\u5bfc\u6a21\u578b\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0cRL\u4ecd\u7136\u9700\u8981\u76f8\u5f53\u591a\u7684\u8010\u5fc3\u548c\u8c03\u6574\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u662f\u975e\u5e38\u4ee4\u4eba\u5174\u594b\u7684\u3002 \u7ec3\u4e60 \u4f60\u600e\u6837\u53bb\u5b9a\u4e49\u5f3a\u5316\u5b66\u4e60\uff1f\u5b83\u4e0e\u4f20\u7edf\u7684\u76d1\u7763\u4ee5\u53ca\u975e\u76d1\u7763\u5b66\u4e60\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f \u4f60\u80fd\u60f3\u5230\u4ec0\u4e48\u672c\u7ae0\u6ca1\u6709\u63d0\u5230\u8fc7\u7684\u5f3a\u5316\u5b66\u4e60\u5e94\u7528\uff1f\u667a\u80fd\u4f53\u662f\u4ec0\u4e48\uff1f\u4ec0\u4e48\u662f\u53ef\u80fd\u7684\u52a8\u4f5c\uff0c\u4ec0\u4e48\u662f\u5956\u52b1\uff1f \u4ec0\u4e48\u662f\u8870\u51cf\u7387\uff1f\u5982\u679c\u4f60\u4fee\u6539\u4e86\u8870\u51cf\u7387\u90a3\u6700\u4f18\u7b56\u7565\u4f1a\u53d8\u5316\u5417\uff1f \u4f60\u600e\u4e48\u53bb\u5b9a\u4e49\u5f3a\u5316\u5b66\u4e60\u667a\u80fd\u4f53\u7684\u8868\u73b0\uff1f \u4ec0\u4e48\u662f\u4fe1\u7528\u8bc4\u4f30\u95ee\u9898\uff1f\u5b83\u600e\u4e48\u51fa\u73b0\u7684\uff1f\u4f60\u600e\u4e48\u89e3\u51b3\uff1f \u4f7f\u7528\u56de\u653e\u8bb0\u5fc6\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f \u4ec0\u4e48\u662f\u95ed\u7b56\u7565 RL \u7b97\u6cd5\uff1f \u4f7f\u7528\u6df1\u5ea6 Q \u5b66\u4e60\u6765\u5904\u7406 OpenAI gym \u7684\u201cBypedalWalker-v2\u201d \u3002QNET \u4e0d\u9700\u8981\u5bf9\u8fd9\u4e2a\u4efb\u52a1\u4f7f\u7528\u975e\u5e38\u6df1\u7684\u7f51\u7edc\u3002 \u4f7f\u7528\u7b56\u7565\u68af\u5ea6\u8bad\u7ec3\u667a\u80fd\u4f53\u626e\u6f14 Pong\uff0c\u4e00\u4e2a\u8457\u540d\u7684 Atari \u6e38\u620f\uff08PANV0 \u5728 OpenAI gym \u7684 Pong-v0\uff09\u3002\u6ce8\u610f\uff1a\u4e2a\u4eba\u7684\u89c2\u5bdf\u4e0d\u8db3\u4ee5\u8bf4\u660e\u7403\u7684\u65b9\u5411\u548c\u901f\u5ea6\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u6b21\u5c06\u4e24\u6b21\u89c2\u6d4b\u4f20\u9012\u7ed9\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\u3002\u4e3a\u4e86\u51cf\u5c11\u7ef4\u5ea6\u548c\u52a0\u901f\u8bad\u7ec3\uff0c\u4f60\u5fc5\u987b\u9884\u5148\u5904\u7406\u8fd9\u4e9b\u56fe\u50cf\uff08\u88c1\u526a\uff0c\u8c03\u6574\u5927\u5c0f\uff0c\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u6210\u9ed1\u767d\uff09\uff0c\u5e76\u53ef\u80fd\u5c06\u5b83\u4eec\u5408\u5e76\u6210\u5355\u4e2a\u56fe\u50cf\uff08\u4f8b\u5982\u53bb\u53e0\u52a0\u5b83\u4eec\uff09\u3002 \u5982\u679c\u4f60\u6709\u5927\u7ea6 100 \u7f8e\u5143\u5907\u7528\uff0c\u4f60\u53ef\u4ee5\u8d2d\u4e70 Raspberry Pi 3 \u518d\u52a0\u4e0a\u4e00\u4e9b\u4fbf\u5b9c\u7684\u673a\u5668\u4eba\u7ec4\u4ef6\uff0c\u5728 PI \u4e0a\u5b89\u88c5 TensorFlow\uff0c\u7136\u540e\u8ba9\u6211\u4eec\u55e8\u8d77\u6765~\uff01\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u770b\u770b Lukas Biewald \u7684\u8fd9\u4e2a\u6709\u8da3\u7684\u5e16\u5b50\uff0c\u6216\u8005\u770b\u770b GoPiGo \u6216 BrickPi\u3002\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u901a\u8fc7\u4f7f\u7528\u7b56\u7565\u68af\u5ea6\u8bad\u7ec3\u673a\u5668\u4eba\u6765\u6784\u5efa\u771f\u5b9e\u7684 cartpole \uff1f\u6216\u8005\u9020\u4e00\u4e2a\u673a\u5668\u4eba\u8718\u86db\uff0c\u8ba9\u5b83\u5b66\u4f1a\u8d70\u8def\uff1b\u5f53\u5b83\u63a5\u8fd1\u67d0\u4e2a\u76ee\u6807\u65f6\uff0c\u7ed9\u4e88\u5956\u52b1\uff08\u4f60\u9700\u8981\u4f20\u611f\u5668\u6765\u6d4b\u91cf\u76ee\u6807\u7684\u8ddd\u79bb\uff09\u3002\u552f\u4e00\u7684\u9650\u5236\u5c31\u662f\u4f60\u7684\u60f3\u8c61\u529b\u3002 \u7ec3\u4e60\u7b54\u6848\u5747\u5728\u9644\u5f55 A\u3002 \u611f\u8c22 \u5728\u6211\u4eec\u7ed3\u675f\u8fd9\u672c\u4e66\u7684\u6700\u540e\u4e00\u7ae0\u4e4b\u524d\uff0c\u6211\u60f3\u611f\u8c22\u4f60\u4eec\u8bfb\u5230\u6700\u540e\u4e00\u6bb5\u3002\u6211\u771f\u5fc3\u5e0c\u671b\u4f60\u80fd\u50cf\u6211\u5199\u8fd9\u672c\u4e66\u4e00\u6837\u6109\u5feb\u5730\u9605\u8bfb\u8fd9\u672c\u4e66\uff0c\u8fd9\u5bf9\u4f60\u7684\u9879\u76ee\uff0c\u6216\u591a\u6216\u5c11\u90fd\u662f\u6709\u7528\u7684\u3002 \u5982\u679c\u53d1\u73b0\u9519\u8bef\uff0c\u8bf7\u53d1\u9001\u53cd\u9988\u3002\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u6211\u5f88\u60f3\u77e5\u9053\u4f60\u7684\u60f3\u6cd5\uff0c\u6240\u4ee5\u8bf7\u4e0d\u8981\u72b9\u8c6b\uff0c\u901a\u8fc7 O'Reilly \u6765\u4e0e\u6211\u8054\u7cfb\uff0c\u6216\u8005\u901a\u8fc7 ageron/handson-ml GITHUB \u9879\u76ee\u6765\u7ec3\u4e60\u3002 \u5bf9\u4f60\u6765\u8bf4\uff0c\u6211\u6700\u597d\u7684\u5efa\u8bae\u662f\u7ec3\u4e60\u548c\u7ec3\u4e60\uff1a\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u505a\u8fc7\u8fd9\u4e9b\u7ec3\u4e60\uff0c\u8bd5\u7740\u4f7f\u7528 Juyter notebook \u53c2\u52a0\u6240\u6709\u7684\u7ec3\u4e60\uff0c\u52a0\u5165 kaggle \u7f51\u7ad9\u6216\u5176\u4ed6 ML \u793e\u533a\uff0c\u770b ML \u8bfe\u7a0b\uff0c\u9605\u8bfb\u8bba\u6587\uff0c\u53c2\u52a0\u4f1a\u8bae\uff0c\u4f1a\u89c1\u4e13\u5bb6\u3002\u60a8\u53ef\u80fd\u8fd8\u60f3\u7814\u7a76\u6211\u4eec\u5728\u672c\u4e66\u4e2d\u6ca1\u6709\u6d89\u53ca\u7684\u4e00\u4e9b\u4e3b\u9898\uff0c\u5305\u62ec\u63a8\u8350\u7cfb\u7edf\u3001\u805a\u7c7b\u7b97\u6cd5\u3001\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5\u548c\u9057\u4f20\u7b97\u6cd5\u3002 \u6211\u6700\u5927\u7684\u5e0c\u671b\u662f\uff0c\u8fd9\u672c\u4e66\u5c06\u6fc0\u52b1\u4f60\u5efa\u7acb\u4e00\u4e2a\u7f8e\u5999\u7684 ML \u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u5c06\u6709\u5229\u4e8e\u6211\u4eec\u6240\u6709\u4eba\uff01\u90a3\u4f1a\u662f\u4ec0\u4e48\u5462\uff1f 2016 \u5e74 11 \u6708 26 \u65e5\uff0c\u5965\u5217\u4f26\u00b7\u683c\u4f26 \u4f60\u7684\u652f\u6301\uff0c\u662f\u6211\u4eec\u6bcf\u4e2a\u5f00\u6e90\u5de5\u4f5c\u8005\u7684\u9a84\u50b2\uff5e","title":"16.\u5f3a\u5316\u5b66\u4e60"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_1","text":"\u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u5982\u4eca\u662f\u673a\u5668\u5b66\u4e60\u7684\u4e00\u5927\u4ee4\u4eba\u6fc0\u52a8\u7684\u9886\u57df\uff0c\u5f53\u7136\u4e4b\u524d\u4e5f\u662f\u3002\u81ea\u4ece 1950 \u5e74\u88ab\u53d1\u660e\u51fa\u6765\u540e\uff0c\u5b83\u5728\u8fd9\u4e9b\u5e74\u4ea7\u751f\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u5e94\u7528\uff0c\u5c24\u5176\u662f\u5728\u6e38\u620f\uff08\u4f8b\u5982 TD-Gammon\uff0c\u4e00\u4e2a\u897f\u6d0b\u53cc\u9646\u68cb\u7a0b\u5e8f\uff09\u548c\u53ca\u5176\u63a7\u5236\u9886\u57df\uff0c\u4f46\u662f\u4ece\u672a\u5f04\u51fa\u4ec0\u4e48\u5927\u65b0\u95fb\u3002\u76f4\u5230 2013 \u5e74\u4e00\u4e2a\u9769\u547d\u6027\u7684\u53d1\u5c55\uff1a\u6765\u81ea\u82f1\u56fd\u7684\u7814\u7a76\u8005\u53d1\u8d77\u4e86\u4e00\u9879 Deepmind \u9879\u76ee\uff0c\u8fd9\u4e2a\u9879\u76ee\u53ef\u4ee5\u5b66\u4e60\u53bb\u73a9\u4efb\u4f55\u4ece\u5934\u5f00\u59cb\u7684 Atari \u6e38\u620f\uff0c\u751a\u81f3\u591a\u6570\u6bd4\u4eba\u7c7b\u73a9\u7684\u8fd8\u8981\u597d\uff0c\u5b83\u4ec5\u4f7f\u7528\u50cf\u7d20\u4f5c\u4e3a\u8f93\u5165\u800c\u6ca1\u6709\u4f7f\u7528\u6e38\u620f\u89c4\u5219\u7684\u4efb\u4f55\u5148\u9a8c\u77e5\u8bc6\u3002\u8fd9\u662f\u4e00\u7cfb\u5217\u4ee4\u4eba\u60ca\u53f9\u7684\u58ee\u4e3e\u4e2d\u7684\u7b2c\u4e00\u4e2a\uff0c\u5e76\u5728 2016 \u5e74 3 \u6708\u4ee5\u4ed6\u4eec\u7684\u7cfb\u7edf\u963f\u5c14\u6cd5\u72d7\u6218\u80dc\u4e86\u4e16\u754c\u56f4\u68cb\u51a0\u519b\u674e\u4e16\u77f3\u800c\u544a\u7ec8\u3002\u4ece\u672a\u6709\u7a0b\u5e8f\u80fd\u52c9\u5f3a\u6253\u8d25\u8fd9\u4e2a\u6e38\u620f\u7684\u5927\u5e08\uff0c\u66f4\u4e0d\u7528\u8bf4\u4e16\u754c\u51a0\u519b\u4e86\u3002\u4eca\u5929\uff0cRL \u7684\u6574\u4e2a\u9886\u57df\u6b63\u5728\u6cb8\u817e\u7740\u65b0\u7684\u60f3\u6cd5\uff0c\u5176\u90fd\u5177\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u8303\u56f4\u3002DeepMind \u5728 2014 \u88ab\u8c37\u6b4c\u4ee5\u8d85\u8fc7 5 \u4ebf\u7f8e\u5143\u6536\u8d2d\u3002 \u90a3\u4e48\u4ed6\u4eec\u662f\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u4e8b\u540e\u770b\u6765\uff0c\u539f\u7406\u4f3c\u4e4e\u76f8\u5f53\u7b80\u5355\uff1a\u4ed6\u4eec\u5c06\u6df1\u5ea6\u5b66\u4e60\u8fd0\u7528\u5230\u5f3a\u5316\u5b66\u4e60\u9886\u57df\uff0c\u7ed3\u679c\u5374\u8d85\u8d8a\u4e86\u4ed6\u4eec\u6700\u75af\u72c2\u7684\u8bbe\u60f3\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u9996\u5148\u89e3\u91ca\u5f3a\u5316\u5b66\u4e60\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u64c5\u957f\u4e8e\u4ec0\u4e48\uff0c\u7136\u540e\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e24\u4e2a\u5728\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u9886\u57df\u6700\u91cd\u8981\u7684\u6280\u672f\uff1a\u7b56\u7565\u68af\u5ea6\u548c\u6df1\u5ea6 Q \u7f51\u7edc\uff08DQN\uff09\uff0c\u5305\u62ec\u8ba8\u8bba\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u6765\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u5e73\u8861\u79fb\u52a8\u8f66\u4e0a\u7684\u6746\u5b50\uff0c\u53e6\u4e00\u4e2a\u73a9 Atari \u6e38\u620f\u3002\u540c\u6837\u7684\u6280\u672f\u53ef\u4ee5\u7528\u4e8e\u5404\u79cd\u5404\u6837\u7684\u4efb\u52a1\uff0c\u4ece\u6b65\u884c\u673a\u5668\u4eba\u5230\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u3002","title":"\u5341\u516d\u3001\u5f3a\u5316\u5b66\u4e60"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_2","text":"\u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\uff0c\u667a\u80fd\u4f53\u5728\u73af\u5883\uff08environment\uff09\u4e2d\u89c2\u5bdf\uff08observation\uff09\u5e76\u4e14\u505a\u51fa\u51b3\u7b56\uff08action\uff09\uff0c\u968f\u540e\u5b83\u4f1a\u5f97\u5230\u5956\u52b1\uff08reward\uff09\u3002\u5b83\u7684\u76ee\u6807\u662f\u53bb\u5b66\u4e60\u5982\u4f55\u884c\u52a8\u80fd\u6700\u5927\u5316 \u671f\u671b\u5956\u52b1 \u3002\u5982\u679c\u4f60\u4e0d\u5728\u610f\u53bb\u62df\u4eba\u5316\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u6b63\u5956\u52b1\u662f\u6109\u5feb\uff0c\u8d1f\u5956\u52b1\u662f\u75db\u82e6\uff08\u8fd9\u6837\u7684\u8bdd\u5956\u52b1\u4e00\u8bcd\u5c31\u6709\u70b9\u8bef\u5bfc\u4e86\uff09\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u667a\u80fd\u4f53\u5728\u73af\u5883\u4e2d\u884c\u52a8\uff0c\u5e76\u4e14\u5728\u5b9e\u9a8c\u548c\u9519\u8bef\u4e2d\u53bb\u5b66\u4e60\u6700\u5927\u5316\u5b83\u7684\u6109\u5feb\uff0c\u6700\u5c0f\u5316\u5b83\u7684\u75db\u82e6\u3002 \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u5e7f\u6cdb\u7684\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u9002\u7528\u4e8e\u5404\u79cd\u5404\u6837\u7684\u4efb\u52a1\u3002\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50\uff08\u8be6\u89c1\u56fe 16-1\uff09\uff1a \u667a\u80fd\u4f53\u53ef\u4ee5\u662f\u63a7\u5236\u4e00\u4e2a\u673a\u68b0\u72d7\u7684\u7a0b\u5e8f\u3002\u5728\u6b64\u4f8b\u4e2d\uff0c\u73af\u5883\u5c31\u662f\u771f\u5b9e\u7684\u4e16\u754c\uff0c\u667a\u80fd\u4f53\u901a\u8fc7\u8bb8\u591a\u7684\u4f20\u611f\u5668\u4f8b\u5982\u6444\u50cf\u673a\u6216\u8005\u4f20\u611f\u5668\u6765\u89c2\u5bdf\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u7ed9\u7535\u673a\u53d1\u9001\u4fe1\u53f7\u6765\u884c\u52a8\u3002\u5b83\u53ef\u4ee5\u88ab\u7f16\u7a0b\u8bbe\u7f6e\u4e3a\u5982\u679c\u5230\u8fbe\u4e86\u76ee\u7684\u5730\u5c31\u5f97\u5230\u6b63\u5956\u52b1\uff0c\u5982\u679c\u6d6a\u8d39\u65f6\u95f4\uff0c\u6216\u8005\u8d70\u9519\u65b9\u5411\uff0c\u6216\u6454\u5012\u4e86\u5c31\u5f97\u5230\u8d1f\u5956\u52b1\u3002 \u667a\u80fd\u4f53\u53ef\u4ee5\u662f\u63a7\u5236 MS.Pac-Man \u7684\u7a0b\u5e8f\u3002\u5728\u6b64\u4f8b\u4e2d\uff0c\u73af\u5883\u662f Atari \u6e38\u620f\u7684\u4eff\u771f\uff0c\u884c\u4e3a\u662f 9 \u4e2a\u64cd\u7eb5\u6746\u4f4d\uff08\u4e0a\u4e0b\u5de6\u53f3\u4e2d\u95f4\u7b49\u7b49\uff09\uff0c\u89c2\u5bdf\u662f\u5c4f\u5e55\uff0c\u56de\u62a5\u5c31\u662f\u6e38\u620f\u70b9\u6570\u3002 \u76f8\u4f3c\u5730\uff0c\u667a\u80fd\u4f53\u4e5f\u53ef\u4ee5\u662f\u68cb\u76d8\u6e38\u620f\u7684\u7a0b\u5e8f\u4f8b\u5982\uff1a\u56f4\u68cb\u3002 \u667a\u80fd\u4f53\u4e5f\u53ef\u4ee5\u4e0d\u7528\u53bb\u63a7\u5236\u4e00\u4e2a\u5b9e\u4f53\uff08\u6216\u865a\u62df\u7684\uff09\u53bb\u79fb\u52a8\u3002\u4f8b\u5982\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u667a\u80fd\u7a0b\u5e8f\uff0c\u5f53\u5b83\u8c03\u6574\u5230\u76ee\u6807\u6e29\u5ea6\u4ee5\u8282\u80fd\u65f6\u4f1a\u5f97\u5230\u6b63\u5956\u52b1\uff0c\u5f53\u4eba\u4eec\u9700\u8981\u81ea\u5df1\u53bb\u8c03\u8282\u6e29\u5ea6\u65f6\u5b83\u4f1a\u5f97\u5230\u8d1f\u5956\u52b1\uff0c\u6240\u4ee5\u667a\u80fd\u4f53\u5fc5\u987b\u5b66\u4f1a\u9884\u89c1\u4eba\u4eec\u7684\u9700\u8981\u3002 \u667a\u80fd\u4f53\u4e5f\u53ef\u4ee5\u53bb\u89c2\u6d4b\u80a1\u7968\u5e02\u573a\u4ef7\u683c\u4ee5\u5b9e\u65f6\u51b3\u5b9a\u4e70\u5356\u3002\u5956\u52b1\u7684\u4f9d\u636e\u663e\u7136\u4e3a\u6323\u94b1\u6216\u8005\u8d54\u94b1\u3002 \u5176\u5b9e\u6ca1\u6709\u6b63\u5956\u52b1\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f8b\u5982\u667a\u80fd\u4f53\u5728\u8ff7\u5bab\u5185\u79fb\u52a8\uff0c\u5b83\u6bcf\u5206\u6bcf\u79d2\u90fd\u5f97\u5230\u4e00\u4e2a\u8d1f\u5956\u52b1\uff0c\u6240\u4ee5\u5b83\u8981\u5c3d\u53ef\u80fd\u5feb\u7684\u627e\u5230\u51fa\u53e3\uff01\u8fd8\u6709\u5f88\u591a\u9002\u5408\u5f3a\u5316\u5b66\u4e60\u7684\u9886\u57df\uff0c\u4f8b\u5982\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\uff0c\u5728\u7f51\u9875\u4e0a\u653e\u5e7f\u544a\uff0c\u6216\u8005\u63a7\u5236\u4e00\u4e2a\u56fe\u50cf\u5206\u7c7b\u7cfb\u7edf\u8ba9\u5b83\u660e\u767d\u5b83\u5e94\u8be5\u5173\u6ce8\u4e8e\u4ec0\u4e48\u3002","title":"\u5b66\u4e60\u4f18\u5316\u5956\u52b1"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_3","text":"\u88ab\u667a\u80fd\u4f53\u4f7f\u7528\u53bb\u6539\u53d8\u5b83\u884c\u4e3a\u7684\u7b97\u6cd5\u53eb\u505a\u7b56\u7565\u3002\u4f8b\u5982\uff0c\u7b56\u7565\u53ef\u4ee5\u662f\u4e00\u4e2a\u628a\u89c2\u6d4b\u5f53\u8f93\u5165\uff0c\u884c\u4e3a\u5f53\u505a\u8f93\u51fa\u7684\u795e\u7ecf\u7f51\u7edc\uff08\u89c1\u56fe16-2\uff09\u3002 \u8fd9\u4e2a\u7b56\u7565\u53ef\u4ee5\u662f\u4f60\u80fd\u60f3\u5230\u7684\u4efb\u4f55\u7b97\u6cd5\uff0c\u5b83\u751a\u81f3\u53ef\u4ee5\u4e0d\u88ab\u786e\u5b9a\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e2a\u771f\u7a7a\u5438\u5c18\u5668\uff0c\u5b83\u7684\u5956\u52b1\u662f\u5728 30 \u5206\u949f\u5185\u6361\u8d77\u7684\u7070\u5c18\u6570\u91cf\u3002\u5b83\u7684\u7b56\u7565\u53ef\u4ee5\u662f\u6bcf\u79d2\u4ee5\u6982\u7387 P \u5411\u524d\u79fb\u52a8\uff0c\u6216\u8005\u4ee5\u6982\u7387 1-P \u968f\u673a\u5730\u5411\u5de6\u6216\u5411\u53f3\u65cb\u8f6c\u3002\u65cb\u8f6c\u89d2\u5ea6\u5c06\u662f -R \u548c +R \u4e4b\u95f4\u7684\u968f\u673a\u89d2\u5ea6\uff0c\u56e0\u4e3a\u8be5\u7b56\u7565\u6d89\u53ca\u4e00\u4e9b\u968f\u673a\u6027\uff0c\u6240\u4ee5\u79f0\u4e3a\u968f\u673a\u7b56\u7565\u3002\u673a\u5668\u4eba\u5c06\u6709\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u8f68\u8ff9\uff0c\u5b83\u4fdd\u8bc1\u5b83\u6700\u7ec8\u4f1a\u5230\u8fbe\u4efb\u4f55\u53ef\u4ee5\u5230\u8fbe\u7684\u5730\u65b9\uff0c\u5e76\u6361\u8d77\u6240\u6709\u7684\u7070\u5c18\u3002\u95ee\u9898\u662f\uff1a30\u5206\u949f\u540e\u5b83\u4f1a\u6361\u8d77\u591a\u5c11\u7070\u5c18\uff1f \u4f60\u600e\u4e48\u8bad\u7ec3\u8fd9\u6837\u7684\u673a\u5668\u4eba\uff1f\u4f60\u53ef\u4ee5\u8c03\u6574\u4e24\u4e2a\u7b56\u7565\u53c2\u6570\uff1a\u6982\u7387 P \u548c\u89d2\u5ea6\u8303\u56f4 R \u3002\u4e00\u4e2a\u60f3\u6cd5\u662f\u8fd9\u4e9b\u53c2\u6570\u5c1d\u8bd5\u8bb8\u591a\u4e0d\u540c\u7684\u503c\uff0c\u5e76\u9009\u62e9\u6267\u884c\u6700\u4f73\u7684\u7ec4\u5408\uff08\u89c1\u56fe 16-3\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u7b56\u7565\u641c\u7d22\u7684\u4f8b\u5b50\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f7f\u7528\u91ce\u86ee\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u5f53\u7b56\u7565\u7a7a\u95f4\u592a\u5927\uff08\u901a\u5e38\u60c5\u51b5\u4e0b\uff09\uff0c\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u627e\u5230\u4e00\u7ec4\u597d\u7684\u53c2\u6570\u5c31\u50cf\u662f\u5927\u6d77\u635e\u9488\u3002 \u53e6\u4e00\u79cd\u641c\u5bfb\u7b56\u7565\u7a7a\u95f4\u7684\u65b9\u6cd5\u662f\u9057\u4f20\u7b97\u6cd5\u3002\u4f8b\u5982\u4f60\u53ef\u4ee5\u968f\u673a\u521b\u9020\u4e00\u4e2a\u5305\u542b 100 \u4e2a\u7b56\u7565\u7684\u7b2c\u4e00\u4ee3\u57fa\u56e0\uff0c\u968f\u540e\u6740\u6b7b 80 \u4e2a\u7cdf\u7cd5\u7684\u7b56\u7565\uff0c\u968f\u540e\u8ba9 20 \u4e2a\u5e78\u5b58\u7b56\u7565\u7e41\u884d 4 \u4ee3\u3002\u4e00\u4e2a\u540e\u4ee3\u53ea\u662f\u5b83\u7236\u8f88\u57fa\u56e0\u7684\u590d\u5236\u54c1\u52a0\u4e0a\u4e00\u4e9b\u968f\u673a\u53d8\u5f02\u3002\u5e78\u5b58\u7684\u7b56\u7565\u52a0\u4e0a\u4ed6\u4eec\u7684\u540e\u4ee3\u5171\u540c\u6784\u6210\u4e86\u7b2c\u4e8c\u4ee3\u3002\u4f60\u53ef\u4ee5\u7ee7\u7eed\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fed\u4ee3\u4ee3\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u597d\u7684\u7b56\u7565\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u4f18\u5316\u6280\u672f\uff0c\u901a\u8fc7\u8bc4\u4f30\u5956\u52b1\u5173\u4e8e\u7b56\u7565\u53c2\u6570\u7684\u68af\u5ea6\uff0c\u7136\u540e\u901a\u8fc7\u8ddf\u968f\u68af\u5ea6\u5411\u66f4\u9ad8\u7684\u5956\u52b1\uff08\u68af\u5ea6\u4e0a\u5347\uff09\u8c03\u6574\u8fd9\u4e9b\u53c2\u6570\u3002\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a\u7b56\u7565\u68af\u5ea6\uff08policy gradient, PG\uff09\uff0c\u6211\u4eec\u5c06\u5728\u672c\u7ae0\u540e\u9762\u8be6\u7ec6\u8ba8\u8bba\u3002\u4f8b\u5982\uff0c\u56de\u5230\u771f\u7a7a\u5438\u5c18\u5668\u673a\u5668\u4eba\uff0c\u4f60\u53ef\u4ee5\u7a0d\u5fae\u589e\u52a0\u6982\u7387P\u5e76\u8bc4\u4f30\u8fd9\u662f\u5426\u589e\u52a0\u4e86\u673a\u5668\u4eba\u5728 30 \u5206\u949f\u5185\u62fe\u8d77\u7684\u7070\u5c18\u7684\u91cf\uff1b\u5982\u679c\u786e\u5b9e\u589e\u52a0\u4e86\uff0c\u5c31\u76f8\u5bf9\u5e94\u589e\u52a0 P \uff0c\u5426\u5219\u51cf\u5c11 P \u3002\u6211\u4eec\u5c06\u4f7f\u7528 Tensorflow \u6765\u5b9e\u73b0 PG \u7b97\u6cd5\uff0c\u4f46\u662f\u5728\u8fd9\u4e4b\u524d\u6211\u4eec\u9700\u8981\u4e3a\u667a\u80fd\u4f53\u521b\u9020\u4e00\u4e2a\u751f\u5b58\u7684\u73af\u5883\uff0c\u6240\u4ee5\u73b0\u5728\u662f\u4ecb\u7ecd OpenAI \u7684\u65f6\u5019\u4e86\u3002","title":"\u7b56\u7565\u641c\u7d22"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#openai","text":"\u5f3a\u5316\u5b66\u4e60\u7684\u4e00\u4e2a\u6311\u6218\u662f\uff0c\u4e3a\u4e86\u8bad\u7ec3\u667a\u80fd\u4f53\uff0c\u9996\u5148\u9700\u8981\u6709\u4e00\u4e2a\u5de5\u4f5c\u73af\u5883\u3002\u5982\u679c\u4f60\u60f3\u8bbe\u8ba1\u4e00\u4e2a\u53ef\u4ee5\u5b66\u4e60 Atari \u6e38\u620f\u7684\u7a0b\u5e8f\uff0c\u4f60\u9700\u8981\u4e00\u4e2a Atari \u6e38\u620f\u6a21\u62df\u5668\u3002\u5982\u679c\u4f60\u60f3\u8bbe\u8ba1\u4e00\u4e2a\u6b65\u884c\u673a\u5668\u4eba\uff0c\u90a3\u4e48\u73af\u5883\u5c31\u662f\u771f\u5b9e\u7684\u4e16\u754c\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\u8bad\u7ec3\u4f60\u7684\u673a\u5668\u4eba\uff0c\u4f46\u662f\u8fd9\u6709\u5176\u5c40\u9650\u6027\uff1a\u5982\u679c\u673a\u5668\u4eba\u4ece\u60ac\u5d16\u4e0a\u6389\u4e0b\u6765\uff0c\u4f60\u4e0d\u80fd\u4ec5\u4ec5\u70b9\u51fb\u201c\u64a4\u6d88\u201d\u3002\u4f60\u4e5f\u4e0d\u80fd\u52a0\u5feb\u65f6\u95f4\uff1b\u589e\u52a0\u66f4\u591a\u7684\u8ba1\u7b97\u80fd\u529b\u4e0d\u4f1a\u8ba9\u673a\u5668\u4eba\u79fb\u52a8\u5f97\u66f4\u5feb\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u540c\u65f6\u8bad\u7ec3 1000 \u4e2a\u673a\u5668\u4eba\u662f\u975e\u5e38\u6602\u8d35\u7684\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8bad\u7ec3\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u662f\u56f0\u96be\u548c\u7f13\u6162\u7684\uff0c\u6240\u4ee5\u4f60\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u6a21\u62df\u73af\u5883\uff0c\u81f3\u5c11\u9700\u8981\u5f15\u5bfc\u8bad\u7ec3\u3002 OpenAI gym \u662f\u4e00\u4e2a\u5de5\u5177\u5305\uff0c\u5b83\u63d0\u4f9b\u5404\u79cd\u5404\u6837\u7684\u6a21\u62df\u73af\u5883\uff08Atari \u6e38\u620f\uff0c\u68cb\u76d8\u6e38\u620f\uff0c2D \u548c 3D \u7269\u7406\u6a21\u62df\u7b49\u7b49\uff09\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8bad\u7ec3\uff0c\u6bd4\u8f83\uff0c\u6216\u5f00\u53d1\u65b0\u7684 RL \u7b97\u6cd5\u3002 \u8ba9\u6211\u4eec\u5b89\u88c5 OpenAI gym\u3002\u53ef\u901a\u8fc7 pip \u5b89\u88c5\uff1a $ pip install --upgrade gym \u63a5\u4e0b\u6765\u6253\u5f00 Python shell \u6216 Jupyter \u7b14\u8bb0\u672c\u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a\u73af\u5883\uff1a >>> import gym >>> env = gym.make(\"CartPole-v0\") [2016-10-14 16:03:23,199] Making new env: MsPacman-v0 >>> obs = env.reset() >>> obs array([-0.03799846,-0.03288115,0.02337094,0.00720711]) >>> env.render() \u4f7f\u7528 make() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u73af\u5883\uff0c\u5728\u6b64\u4f8b\u4e2d\u662f CartPole \u73af\u5883\u3002\u8fd9\u662f\u4e00\u4e2a 2D \u6a21\u62df\uff0c\u5176\u4e2d\u63a8\u8f66\u53ef\u4ee5\u88ab\u5de6\u53f3\u52a0\u901f\uff0c\u4ee5\u5e73\u8861\u653e\u7f6e\u5728\u5b83\u4e0a\u9762\u7684\u5e73\u8861\u6746\uff08\u89c1\u56fe 16-4\uff09\u3002\u5728\u521b\u5efa\u73af\u5883\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 reset() \u521d\u59cb\u5316\u3002\u8fd9\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u89c2\u5bdf\u7ed3\u679c\u3002\u89c2\u5bdf\u53d6\u51b3\u4e8e\u73af\u5883\u7684\u7c7b\u578b\u3002\u5bf9\u4e8e CartPole \u73af\u5883\uff0c\u6bcf\u4e2a\u89c2\u6d4b\u662f\u5305\u542b\u56db\u4e2a\u6d6e\u70b9\u7684 1D Numpy \u5411\u91cf\uff1a\u8fd9\u4e9b\u6d6e\u70b9\u6570\u4ee3\u8868\u63a8\u8f66\u7684\u6c34\u5e73\u4f4d\u7f6e\uff080 \u4e3a\u4e2d\u5fc3\uff09\u3001\u5176\u901f\u5ea6\u3001\u6746\u7684\u89d2\u5ea6\uff080 \u7ef4\u5782\u76f4\uff09\u53ca\u5176\u89d2\u901f\u5ea6\u3002\u6700\u540e\uff0c render() \u65b9\u6cd5\u663e\u793a\u5982\u56fe 16-4 \u6240\u793a\u7684\u73af\u5883\u3002 \u5982\u679c\u4f60\u60f3\u8ba9 render() \u8ba9\u56fe\u50cf\u4ee5\u4e00\u4e2a NUMPY \u6570\u7ec4\u683c\u5f0f\u8fd4\u56de\uff0c\u53ef\u4ee5\u5c06 mode \u53c2\u6570\u8bbe\u7f6e\u4e3a rgb_array \uff08\u6ce8\u610f\u5176\u4ed6\u73af\u5883\u53ef\u80fd\u652f\u6301\u4e0d\u540c\u7684\u6a21\u5f0f\uff09\uff1a >>> img = env.render(mode=\"rgb_array\") >>> img.shape # height, width, channels (3=RGB) (400, 600, 3) \u4e0d\u5e78\u7684\u662f\uff0c\u5373\u4f7f\u5c06 mode \u53c2\u6570\u8bbe\u7f6e\u4e3a rgb_array \uff0cCartPole\uff08\u548c\u5176\u4ed6\u4e00\u4e9b\u73af\u5883\uff09\u8fd8\u662f\u4f1a\u5c06\u5c06\u56fe\u50cf\u5448\u73b0\u5230\u5c4f\u5e55\u4e0a\u3002\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u7684\u552f\u4e00\u65b9\u5f0f\u662f\u4f7f\u7528\u4e00\u4e2a fake X \u670d\u52a1\u5668\uff0c\u5982 XVFB \u6216 XDimMy\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 XVFB \u548c\u542f\u52a8 Python\uff1a xvfb-run -s \"screen 0 1400x900x24\" python \u3002\u6216\u8005\u4f7f\u7528 xvfbwrapper \u5305\u3002 \u8ba9\u6211\u4eec\u6765\u8be2\u95ee\u73af\u5883\u4ec0\u4e48\u52a8\u4f5c\u662f\u53ef\u80fd\u7684\uff1a >>> env.action_space Discrete(2) Discrete(2) \u8868\u793a\u53ef\u80fd\u7684\u52a8\u4f5c\u662f\u6574\u6570 0 \u548c 1\uff0c\u8868\u793a\u5411\u5de6\uff080\uff09\u6216\u53f3\uff081\uff09\u7684\u52a0\u901f\u3002\u5176\u4ed6\u73af\u5883\u53ef\u80fd\u6709\u66f4\u591a\u7684\u52a8\u4f5c\uff0c\u6216\u8005\u5176\u4ed6\u7c7b\u578b\u7684\u52a8\u4f5c\uff08\u4f8b\u5982\uff0c\u8fde\u7eed\u7684\uff09\u3002\u56e0\u4e3a\u6746\u5b50\u5411\u53f3\u503e\u659c\uff0c\u8ba9\u6211\u4eec\u5411\u53f3\u52a0\u901f\u63a8\u8f66\uff1a >>> action = 1 # accelerate right >>> obs, reward, done, info = env.step(action) >>> obs array([-0.03865608, 0.16189797, 0.02351508, -0.27801135]) >>> reward 1.0 >>> done False >>> info {} step() \u8868\u793a\u6267\u884c\u7ed9\u5b9a\u7684\u52a8\u4f5c\u5e76\u8fd4\u56de\u56db\u4e2a\u503c\uff1a obs : \u8fd9\u662f\u65b0\u7684\u89c2\u6d4b\uff0c\u5c0f\u8f66\u73b0\u5728\u6b63\u5728\u5411\u53f3\u8d70\uff08 obs[1]>0 \uff0c\u6ce8\uff1a\u5f53\u524d\u901f\u5ea6\u4e3a\u6b63\uff0c\u5411\u53f3\u4e3a\u6b63\uff09\u3002\u5e73\u8861\u6746\u4ecd\u7136\u5411\u53f3\u503e\u659c\uff08 obs[2]>0 \uff09\uff0c\u4f46\u662f\u4ed6\u7684\u89d2\u901f\u5ea6\u73b0\u5728\u4e3a\u8d1f\uff08 obs[3]<0 \uff09\uff0c\u6240\u4ee5\u5b83\u5728\u4e0b\u4e00\u6b65\u540e\u53ef\u80fd\u4f1a\u5411\u5de6\u503e\u659c\u3002 reward \uff1a \u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\uff0c\u65e0\u8bba\u4f60\u505a\u4ec0\u4e48\uff0c\u6bcf\u4e00\u6b65\u90fd\u4f1a\u5f97\u5230 1.0 \u5956\u52b1\uff0c\u6240\u4ee5\u6e38\u620f\u7684\u76ee\u6807\u5c31\u662f\u5c3d\u53ef\u80fd\u957f\u7684\u8fd0\u884c\u3002 done \uff1a \u5f53\u6e38\u620f\u7ed3\u675f\u65f6\u8fd9\u4e2a\u503c\u4f1a\u4e3a True \u3002\u5f53\u5e73\u8861\u6746\u503e\u659c\u592a\u591a\u65f6\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u4e4b\u540e\uff0c\u5fc5\u987b\u91cd\u65b0\u8bbe\u7f6e\u73af\u5883\u624d\u80fd\u91cd\u65b0\u4f7f\u7528\u3002 info \uff1a \u8be5\u5b57\u5178\u53ef\u4ee5\u5728\u5176\u4ed6\u73af\u5883\u4e2d\u63d0\u4f9b\u989d\u5916\u7684\u8c03\u8bd5\u4fe1\u606f\u3002\u8fd9\u4e9b\u6570\u636e\u4e0d\u5e94\u8be5\u7528\u4e8e\u8bad\u7ec3\uff08\u8fd9\u662f\u4f5c\u5f0a\uff09\u3002 \u8ba9\u6211\u4eec\u786c\u7f16\u7801\u4e00\u4e2a\u7b80\u5355\u7684\u7b56\u7565\uff0c\u5f53\u6746\u5411\u5de6\u503e\u659c\u65f6\u52a0\u901f\u5de6\u8fb9\uff0c\u5f53\u6746\u5411\u53f3\u503e\u659c\u65f6\u52a0\u901f\u3002\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u7b56\u7565\u6765\u83b7\u5f97\u8d85\u8fc7 500 \u6b65\u7684\u5e73\u5747\u56de\u62a5\uff1a def basic_policy(obs): angle = obs[2] return 0 if angle < 0 else 1 totals = [] for episode in range(500): episode_rewards = 0 obs = env.reset() for step in range(1000): # \u6700\u591a1000 \u6b65\uff0c\u6211\u4eec\u4e0d\u60f3\u8ba9\u5b83\u6c38\u8fdc\u8fd0\u884c\u4e0b\u53bb action = basic_policy(obs) obs, reward, done, info = env.step(action) episode_rewards += reward if done: break totals.append(episode_rewards) \u8fd9\u4e2a\u4ee3\u7801\u5e0c\u671b\u80fd\u81ea\u6211\u89e3\u91ca\u3002\u8ba9\u6211\u4eec\u770b\u770b\u7ed3\u679c\uff1a >>> import numpy as np >>> np.mean(totals), np.std(totals), np.min(totals), np.max(totals) (42.125999999999998, 9.1237121830974033, 24.0, 68.0) \u5373\u4f7f\u6709 500 \u6b21\u5c1d\u8bd5\uff0c\u8fd9\u4e00\u7b56\u7565\u4ece\u672a\u4f7f\u5e73\u8861\u6746\u5728\u8d85\u8fc7 68 \u4e2a\u8fde\u7eed\u7684\u6b65\u9aa4\u91cc\u4fdd\u6301\u76f4\u7acb\u3002\u8fd9\u4e0d\u592a\u597d\u3002\u5982\u679c\u4f60\u770b\u4e00\u4e0b Juyter Notebook \u4e2d\u7684\u6a21\u62df\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u63a8\u8f66\u8d8a\u6765\u8d8a\u5f3a\u70c8\u5730\u5de6\u53f3\u6446\u52a8\uff0c\u76f4\u5230\u5e73\u8861\u6746\u503e\u659c\u592a\u591a\u3002\u8ba9\u6211\u4eec\u770b\u770b\u795e\u7ecf\u7f51\u7edc\u662f\u5426\u80fd\u63d0\u51fa\u66f4\u597d\u7684\u7b56\u7565\u3002","title":"OpenAI \u7684\u4ecb\u7ecd"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_4","text":"\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\u3002\u5c31\u50cf\u4e4b\u524d\u6211\u4eec\u7f16\u7801\u7684\u7b56\u7565\u4e00\u6837\uff0c\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\u5c06\u628a\u89c2\u5bdf\u4f5c\u4e3a\u8f93\u5165\uff0c\u8f93\u51fa\u8981\u6267\u884c\u7684\u52a8\u4f5c\u3002\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u5b83\u5c06\u4f30\u8ba1\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6982\u7387\uff0c\u7136\u540e\u6211\u4eec\u5c06\u6839\u636e\u4f30\u8ba1\u7684\u6982\u7387\u968f\u673a\u5730\u9009\u62e9\u4e00\u4e2a\u52a8\u4f5c\uff08\u89c1\u56fe 16-5\uff09\u3002\u5728 CartPole \u73af\u5883\u4e2d\uff0c\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u52a8\u4f5c\uff08\u5de6\u6216\u53f3\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\u3002\u5b83\u5c06\u8f93\u51fa\u52a8\u4f5c 0\uff08\u5de6\uff09\u7684\u6982\u7387 p \uff0c\u52a8\u4f5c 1\uff08\u53f3\uff09\u7684\u6982\u7387\u663e\u7136\u5c06\u662f 1 - p \u3002 \u4f8b\u5982\uff0c\u5982\u679c\u5b83\u8f93\u51fa 0.7\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u4ee5 70% \u7684\u6982\u7387\u9009\u62e9\u52a8\u4f5c 0\uff0c\u4ee5 30% \u7684\u6982\u7387\u9009\u62e9\u52a8\u4f5c 1\u3002 \u4f60\u53ef\u80fd\u5947\u602a\u4e3a\u4ec0\u4e48\u6211\u4eec\u6839\u636e\u795e\u7ecf\u7f51\u7edc\u7ed9\u51fa\u7684\u6982\u7387\u6765\u9009\u62e9\u968f\u673a\u7684\u52a8\u4f5c\uff0c\u800c\u4e0d\u662f\u9009\u62e9\u6700\u9ad8\u5206\u6570\u7684\u52a8\u4f5c\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u667a\u80fd\u4f53\u5728 \u63a2\u7d22\u65b0\u7684\u884c\u4e3a \u548c \u5229\u7528\u90a3\u4e9b\u5df2\u77e5\u53ef\u884c\u7684\u884c\u52a8 \u4e4b\u95f4\u627e\u5230\u6b63\u786e\u7684\u5e73\u8861\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5047\u8bbe\u4f60\u7b2c\u4e00\u6b21\u53bb\u9910\u9986\uff0c\u6240\u6709\u7684\u83dc\u770b\u8d77\u6765\u540c\u6837\u5438\u5f15\u4eba\uff0c\u6240\u4ee5\u4f60\u968f\u673a\u6311\u9009\u4e00\u4e2a\u3002\u5982\u679c\u83dc\u597d\u5403\uff0c\u4f60\u53ef\u4ee5\u589e\u52a0\u4e0b\u4e00\u6b21\u70b9\u5b83\u7684\u6982\u7387\uff0c\u4f46\u662f\u4f60\u4e0d\u5e94\u8be5\u628a\u8fd9\u4e2a\u6982\u7387\u63d0\u9ad8\u5230 100%\uff0c\u5426\u5219\u4f60\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u5c1d\u8bd5\u5176\u4ed6\u83dc\u80b4\uff0c\u5176\u4e2d\u4e00\u4e9b\u751a\u81f3\u6bd4\u4f60\u5c1d\u8bd5\u7684\u66f4\u597d\u3002 \u8fd8\u8981\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u7279\u5b9a\u7684\u73af\u5883\u4e2d\uff0c\u8fc7\u53bb\u7684\u52a8\u4f5c\u548c\u89c2\u5bdf\u53ef\u4ee5\u88ab\u5b89\u5168\u5730\u5ffd\u7565\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u89c2\u5bdf\u90fd\u5305\u542b\u73af\u5883\u7684\u5b8c\u6574\u72b6\u6001\u3002\u5982\u679c\u6709\u4e00\u4e9b\u9690\u85cf\u72b6\u6001\uff0c\u90a3\u4e48\u4f60\u4e5f\u9700\u8981\u8003\u8651\u8fc7\u53bb\u7684\u884c\u4e3a\u548c\u89c2\u5bdf\u3002\u4f8b\u5982\uff0c\u5982\u679c\u73af\u5883\u4ec5\u4ec5\u63ed\u793a\u4e86\u63a8\u8f66\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u901f\u5ea6\uff0c\u90a3\u4e48\u4f60\u4e0d\u4ec5\u8981\u8003\u8651\u5f53\u524d\u7684\u89c2\u6d4b\uff0c\u8fd8\u8981\u8003\u8651\u5148\u524d\u7684\u89c2\u6d4b\uff0c\u4ee5\u4fbf\u4f30\u8ba1\u5f53\u524d\u7684\u901f\u5ea6\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u5f53\u89c2\u6d4b\u662f\u6709\u566a\u58f0\u7684\u7684\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u5e38\u4f60\u60f3\u7528\u8fc7\u53bb\u7684\u89c2\u5bdf\u6765\u4f30\u8ba1\u6700\u53ef\u80fd\u7684\u5f53\u524d\u72b6\u6001\u3002\u56e0\u6b64\uff0cCartPole \u95ee\u9898\u662f\u7b80\u5355\u7684\uff1b\u89c2\u6d4b\u662f\u65e0\u566a\u58f0\u7684\uff0c\u800c\u4e14\u5b83\u4eec\u5305\u542b\u73af\u5883\u7684\u5168\u72b6\u6001\u3002 import tensorflow as tf from tensorflow.contrib.layers import fully_connected # 1. \u58f0\u660e\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784 n_inputs = 4 # == env.observation_space.shape[0] n_hidden = 4 # \u8fd9\u53ea\u662f\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u4e0d\u9700\u8981\u8fc7\u591a\u7684\u9690\u85cf\u5c42 n_outputs = 1 # \u53ea\u8f93\u51fa\u5411\u5de6\u52a0\u901f\u7684\u6982\u7387 initializer = tf.contrib.layers.variance_scaling_initializer() # 2. \u5efa\u7acb\u795e\u7ecf\u7f51\u7edc X = tf.placeholder(tf.float32, shape=[None, n_inputs]) hidden = fully_connected(X, n_hidden, activation_fn=tf.nn.elu,weights_initializer=initializer) # \u9690\u5c42\u6fc0\u6d3b\u51fd\u6570\u4f7f\u7528\u6307\u6570\u7ebf\u6027\u51fd\u6570 logits = fully_connected(hidden, n_outputs, activation_fn=None,weights_initializer=initializer) outputs = tf.nn.sigmoid(logits) # 3. \u5728\u6982\u7387\u57fa\u7840\u4e0a\u968f\u673a\u9009\u62e9\u52a8\u4f5c p_left_and_right = tf.concat(axis=1, values=[outputs, 1 - outputs]) action = tf.multinomial(tf.log(p_left_and_right), num_samples=1) init = tf.global_variables_initializer() \u8ba9\u6211\u4eec\u901a\u8bfb\u4ee3\u7801\uff1a \u5728\u5bfc\u5165\u4e4b\u540e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u3002\u8f93\u5165\u7684\u6570\u91cf\u662f\u89c2\u6d4b\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u5728 CartPole \u7684\u60c5\u51b5\u4e0b\u662f 4 \u4e2a\uff09\uff0c\u6211\u4eec\u53ea\u6709 4 \u4e2a\u9690\u85cf\u5355\u5143\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u66f4\u591a\uff0c\u5e76\u4e14\u6211\u4eec\u53ea\u6709 1 \u4e2a\u8f93\u51fa\u6982\u7387\uff08\u5411\u5de6\u7684\u6982\u7387\uff09\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6784\u5efa\u4e86\u795e\u7ecf\u7f51\u7edc\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b83\u662f\u4e00\u4e2a vanilla \u591a\u5c42\u611f\u77e5\u5668\uff0c\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\u3002\u6ce8\u610f\uff0c\u8f93\u51fa\u5c42\u4f7f\u7528 Logistic\uff08Sigmoid\uff09\u6fc0\u6d3b\u51fd\u6570\uff0c\u4ee5\u4fbf\u8f93\u51fa\u4ece 0 \u5230 1 \u7684\u6982\u7387\u3002\u5982\u679c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u53ef\u80fd\u52a8\u4f5c\uff0c\u6bcf\u4e2a\u52a8\u4f5c\u90fd\u4f1a\u6709\u4e00\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\uff0c\u76f8\u5e94\u7684\u4f60\u5c06\u4f7f\u7528 Softmax \u6fc0\u6d3b\u51fd\u6570\u3002 \u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528 multinomial() \u51fd\u6570\u6765\u9009\u62e9\u4e00\u4e2a\u968f\u673a\u52a8\u4f5c\u3002\u8be5\u51fd\u6570\u72ec\u7acb\u5730\u91c7\u6837\u4e00\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u6574\u6570\uff0c\u7ed9\u5b9a\u6bcf\u4e2a\u6574\u6570\u7684\u5bf9\u6570\u6982\u7387\u3002\u4f8b\u5982\uff0c\u5982\u679c\u901a\u8fc7\u8bbe\u7f6e num_samples=5 \uff0c\u4ee4\u6570\u7ec4\u4e3a [np.log(0.5), np.log(0.2), np.log(0.3)] \u6765\u8c03\u7528\u5b83\uff0c\u90a3\u4e48\u5b83\u5c06\u8f93\u51fa\u4e94\u4e2a\u6574\u6570\uff0c\u6bcf\u4e2a\u6574\u6570\u90fd\u6709 50% \u7684\u6982\u7387\u662f 0\uff0c20% \u4e3a 1\uff0c30% \u4e3a 2\u3002\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u6574\u6570\u6765\u8868\u793a\u8981\u91c7\u53d6\u7684\u884c\u52a8\u3002\u7531\u4e8e\u8f93\u51fa\u5f20\u91cf\uff08output\uff09\u4ec5\u5305\u542b\u5411\u5de6\u7684\u6982\u7387\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5c06 1 - output \u8fde\u63a5\u5b83\uff0c\u4ee5\u5f97\u5230\u5305\u542b\u5de6\u548c\u53f3\u52a8\u4f5c\u7684\u6982\u7387\u7684\u5f20\u91cf\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u53ef\u80fd\u52a8\u4f5c\uff0c\u795e\u7ecf\u7f51\u7edc\u5c06\u4e0d\u5f97\u4e0d\u8f93\u51fa\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6982\u7387\uff0c\u8fd9\u65f6\u4f60\u5c31\u4e0d\u9700\u8981\u8fde\u63a5\u6b65\u9aa4\u4e86\u3002 \u597d\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u53ef\u4ee5\u89c2\u5bdf\u548c\u8f93\u51fa\u52a8\u4f5c\u7684\u795e\u7ecf\u7f51\u7edc\u4e86\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u8bad\u7ec3\u5b83\u5462\uff1f","title":"\u795e\u7ecf\u7f51\u7edc\u7b56\u7565"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_5","text":"\u5982\u679c\u6211\u4eec\u77e5\u9053\u6bcf\u4e00\u6b65\u7684\u6700\u4f73\u52a8\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u901a\u5e38\u4e00\u6837\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\uff0c\u901a\u8fc7\u6700\u5c0f\u5316\u4f30\u8ba1\u6982\u7387\u548c\u76ee\u6807\u6982\u7387\u4e4b\u95f4\u7684\u4ea4\u53c9\u71b5\u3002\u8fd9\u53ea\u662f\u901a\u5e38\u7684\u76d1\u7763\u5b66\u4e60\u3002\u7136\u800c\uff0c\u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\uff0c\u667a\u80fd\u4f53\u83b7\u5f97\u7684\u6307\u5bfc\u7684\u552f\u4e00\u9014\u5f84\u662f\u901a\u8fc7\u5956\u52b1\uff0c\u5956\u52b1\u901a\u5e38\u662f\u7a00\u758f\u7684\u548c\u5ef6\u8fdf\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u667a\u80fd\u4f53\u5728 100 \u4e2a\u6b65\u9aa4\u5185\u8bbe\u6cd5\u5e73\u8861\u6746\uff0c\u5b83\u600e\u4e48\u77e5\u9053\u5b83\u91c7\u53d6\u7684 100 \u4e2a\u884c\u52a8\u4e2d\u7684\u54ea\u4e00\u4e2a\u662f\u597d\u7684\uff0c\u54ea\u4e9b\u662f\u574f\u7684\uff1f\u5b83\u6240\u77e5\u9053\u7684\u662f\uff0c\u5728\u6700\u540e\u4e00\u6b21\u884c\u52a8\u4e4b\u540e\uff0c\u6746\u5b50\u5760\u843d\u4e86\uff0c\u4f46\u6700\u540e\u4e00\u6b21\u884c\u52a8\u80af\u5b9a\u4e0d\u662f\u5b8c\u5168\u8d1f\u8d23\u7684\u3002\u8fd9\u88ab\u79f0\u4e3a\u4fe1\u7528\u5206\u914d\u95ee\u9898\uff1a\u5f53\u667a\u80fd\u4f53\u5f97\u5230\u5956\u52b1\u65f6\uff0c\u5f88\u96be\u77e5\u9053\u54ea\u4e9b\u884c\u4e3a\u5e94\u8be5\u88ab\u4fe1\u4efb\uff08\u6216\u8d23\u5907\uff09\u3002\u60f3\u60f3\u4e00\u53ea\u72d7\u5728\u884c\u4e3a\u826f\u597d\u540e\u51e0\u5c0f\u65f6\u5c31\u4f1a\u5f97\u5230\u5956\u52b1\uff0c\u5b83\u4f1a\u660e\u767d\u5b83\u5f97\u5230\u4e86\u4ec0\u4e48\u56de\u62a5\u5417\uff1f \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u901a\u5e38\u7684\u7b56\u7565\u662f\u57fa\u4e8e\u8fd9\u4e2a\u52a8\u4f5c\u540e\u5f97\u5206\u7684\u603b\u548c\u6765\u8bc4\u4f30\u8fd9\u4e2a\u4e2a\u52a8\u4f5c\uff0c\u901a\u5e38\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u5e94\u7528\u8870\u51cf\u7387 r \u3002\u4f8b\u5982\uff08\u89c1\u56fe 16-6\uff09\uff0c\u5982\u679c\u4e00\u4e2a\u667a\u80fd\u4f53\u51b3\u5b9a\u8fde\u7eed\u4e09\u6b21\u5411\u53f3\uff0c\u5728\u7b2c\u4e00\u6b65\u4e4b\u540e\u5f97\u5230 +10 \u5956\u52b1\uff0c\u7b2c\u4e8c\u6b65\u540e\u5f97\u5230 0\uff0c\u6700\u540e\u5728\u7b2c\u4e09\u6b65\u4e4b\u540e\u5f97\u5230 -50\uff0c\u7136\u540e\u5047\u8bbe\u6211\u4eec\u4f7f\u7528\u8870\u51cf\u7387 r=0.8 \uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u52a8\u4f5c\u5c06\u5f97\u5230 10 +r\u00d70 + r2\u00d7(-50)=-22 \u7684\u5206\u8ff0\u3002\u5982\u679c\u8870\u51cf\u7387\u63a5\u8fd1 0\uff0c\u90a3\u4e48\u4e0e\u5373\u65f6\u5956\u52b1\u76f8\u6bd4\uff0c\u672a\u6765\u7684\u5956\u52b1\u4e0d\u4f1a\u6709\u591a\u5927\u610f\u4e49\u3002\u76f8\u53cd\uff0c\u5982\u679c\u8870\u51cf\u7387\u63a5\u8fd1 1\uff0c\u90a3\u4e48\u5bf9\u672a\u6765\u7684\u5956\u52b1\u51e0\u4e4e\u7b49\u4e8e\u5373\u65f6\u56de\u62a5\u3002\u5178\u578b\u7684\u8870\u51cf\u7387\u901a\u5e38\u4e3a\u662f 0.95 \u6216 0.99\u3002\u5982\u679c\u8870\u51cf\u7387\u4e3a 0.95\uff0c\u90a3\u4e48\u672a\u6765 13 \u6b65\u7684\u5956\u52b1\u5927\u7ea6\u662f\u5373\u65f6\u5956\u52b1\u7684\u4e00\u534a\uff08 0.9513\u00d70.5 \uff09\uff0c\u800c\u5f53\u8870\u51cf\u7387\u4e3a 0.99\uff0c\u672a\u6765 69 \u6b65\u7684\u5956\u52b1\u662f\u5373\u65f6\u5956\u52b1\u7684\u4e00\u534a\u3002\u5728 CartPole \u73af\u5883\u4e0b\uff0c\u884c\u4e3a\u5177\u6709\u76f8\u5f53\u77ed\u671f\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u9009\u62e9 0.95 \u7684\u6298\u6263\u7387\u662f\u5408\u7406\u7684\u3002 \u5f53\u7136\uff0c\u4e00\u4e2a\u597d\u7684\u52a8\u4f5c\u53ef\u80fd\u4f1a\u4f34\u968f\u7740\u4e00\u4e9b\u574f\u7684\u52a8\u4f5c\uff0c\u8fd9\u4e9b\u52a8\u4f5c\u4f1a\u5bfc\u81f4\u5e73\u8861\u6746\u8fc5\u901f\u4e0b\u964d\uff0c\u4ece\u800c\u5bfc\u81f4\u4e00\u4e2a\u597d\u7684\u52a8\u4f5c\u5f97\u5230\u4e00\u4e2a\u4f4e\u5206\u6570\uff08\u7c7b\u4f3c\u7684\uff0c\u4e00\u4e2a\u597d\u884c\u52a8\u8005\u6709\u65f6\u4f1a\u5728\u4e00\u90e8\u70c2\u7247\u4e2d\u626e\u6f14\u4e3b\u89d2\uff09\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u82b1\u8db3\u591f\u591a\u7684\u65f6\u95f4\u6765\u8bad\u7ec3\u6e38\u620f\uff0c\u5e73\u5747\u4e0b\u6765\u597d\u7684\u884c\u4e3a\u4f1a\u5f97\u5230\u6bd4\u574f\u7684\u66f4\u597d\u7684\u5206\u6570\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u83b7\u5f97\u76f8\u5f53\u53ef\u9760\u7684\u52a8\u4f5c\u5206\u6570\uff0c\u6211\u4eec\u5fc5\u987b\u8fd0\u884c\u5f88\u591a\u6b21\u5e76\u5c06\u6240\u6709\u52a8\u4f5c\u5206\u6570\u5f52\u4e00\u5316\uff08\u901a\u8fc7\u51cf\u53bb\u5e73\u5747\u503c\u5e76\u9664\u4ee5\u6807\u51c6\u504f\u5dee\uff09\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5408\u7406\u5730\u5047\u8bbe\u6d88\u6781\u5f97\u5206\u7684\u884c\u4e3a\u662f\u574f\u7684\uff0c\u800c\u79ef\u6781\u5f97\u5206\u7684\u884c\u4e3a\u662f\u597d\u7684\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u65b9\u6cd5\u6765\u8bc4\u4f30\u6bcf\u4e00\u4e2a\u52a8\u4f5c\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4f7f\u7528\u7b56\u7565\u68af\u5ea6\u6765\u8bad\u7ec3\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u667a\u80fd\u4f53\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u3002","title":"\u8bc4\u4ef7\u884c\u4e3a\uff1a\u4fe1\u7528\u5206\u914d\u95ee\u9898"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_6","text":"\u6b63\u5982\u524d\u9762\u6240\u8ba8\u8bba\u7684\uff0cPG \u7b97\u6cd5\u901a\u8fc7\u9075\u5faa\u66f4\u9ad8\u56de\u62a5\u7684\u68af\u5ea6\u6765\u4f18\u5316\u7b56\u7565\u53c2\u6570\u3002\u4e00\u79cd\u6d41\u884c\u7684 PG \u7b97\u6cd5\uff0c\u79f0\u4e3a\u589e\u5f3a\u7b97\u6cd5\uff0c\u5728 1929 \u7531 Ronald Williams \u63d0\u51fa\u3002\u8fd9\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u53d8\u4f53\uff1a \u9996\u5148\uff0c\u8ba9\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\u73a9\u51e0\u6b21\u6e38\u620f\uff0c\u5e76\u5728\u6bcf\u4e00\u6b65\u8ba1\u7b97\u68af\u5ea6\uff0c\u8fd9\u4f7f\u5f97\u667a\u80fd\u4f53\u66f4\u53ef\u80fd\u9009\u62e9\u884c\u4e3a\uff0c\u4f46\u4e0d\u5e94\u7528\u8fd9\u4e9b\u68af\u5ea6\u3002 \u8fd0\u884c\u51e0\u6b21\u540e\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u52a8\u4f5c\u7684\u5f97\u5206\uff08\u4f7f\u7528\u524d\u9762\u6bb5\u843d\u4e2d\u63cf\u8ff0\u7684\u65b9\u6cd5\uff09\u3002 \u5982\u679c\u4e00\u4e2a\u52a8\u4f5c\u7684\u5206\u6570\u662f\u6b63\u7684\uff0c\u8fd9\u610f\u5473\u7740\u52a8\u4f5c\u662f\u597d\u7684\uff0c\u53ef\u5e94\u7528\u8f83\u65e9\u8ba1\u7b97\u7684\u68af\u5ea6\uff0c\u4ee5\u4fbf\u5c06\u6765\u6709\u66f4\u5927\u7684\u7684\u6982\u7387\u9009\u62e9\u8fd9\u4e2a\u52a8\u4f5c\u3002\u4f46\u662f\uff0c\u5982\u679c\u5206\u6570\u662f\u8d1f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u52a8\u4f5c\u662f\u574f\u7684\uff0c\u8981\u5e94\u7528\u8d1f\u68af\u5ea6\u6765\u4f7f\u5f97\u8fd9\u4e2a\u52a8\u4f5c\u5728\u5c06\u6765\u91c7\u53d6\u7684\u53ef\u80fd\u6027\u66f4\u4f4e\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u5c31\u662f\u7b80\u5355\u5730\u5c06\u6bcf\u4e2a\u68af\u5ea6\u5411\u91cf\u4e58\u4ee5\u76f8\u5e94\u7684\u52a8\u4f5c\u5f97\u5206\u3002 \u6700\u540e\uff0c\u8ba1\u7b97\u6240\u6709\u5f97\u5230\u7684\u68af\u5ea6\u5411\u91cf\u7684\u5e73\u5747\u503c\uff0c\u5e76\u4f7f\u7528\u5b83\u6765\u6267\u884c\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4\u3002 \u8ba9\u6211\u4eec\u4f7f\u7528 TensorFlow \u5b9e\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u3002\u6211\u4eec\u5c06\u8bad\u7ec3\u6211\u4eec\u65e9\u5148\u5efa\u7acb\u7684\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\uff0c\u8ba9\u5b83\u5b66\u4f1a\u5e73\u8861\u8f66\u4e0a\u7684\u5e73\u8861\u6746\u3002\u8ba9\u6211\u4eec\u4ece\u5b8c\u6210\u4e4b\u524d\u7f16\u7801\u7684\u6784\u9020\u9636\u6bb5\u5f00\u59cb\uff0c\u6dfb\u52a0\u76ee\u6807\u6982\u7387\u3001\u4ee3\u4ef7\u51fd\u6570\u548c\u8bad\u7ec3\u64cd\u4f5c\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u610f\u613f\u662f\u9009\u62e9\u7684\u52a8\u4f5c\u662f\u6700\u597d\u7684\u52a8\u4f5c\uff0c\u5982\u679c\u9009\u62e9\u7684\u52a8\u4f5c\u662f\u52a8\u4f5c 0\uff08\u5de6\uff09\uff0c\u5219\u76ee\u6807\u6982\u7387\u5fc5\u987b\u4e3a 1\uff0c\u5982\u679c\u9009\u62e9\u52a8\u4f5c 1\uff08\u53f3\uff09\u5219\u76ee\u6807\u6982\u7387\u4e3a 0\uff1a y = 1. - tf.to_float(action) \u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u76ee\u6807\u6982\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u635f\u5931\u51fd\u6570\uff08\u4ea4\u53c9\u71b5\uff09\u5e76\u8ba1\u7b97\u68af\u5ea6\uff1a learning_rate = 0.01 cross_entropy = tf.nn.sigmoid_cross_entropy_with_logits( labels=y, logits=logits) optimizer = tf.train.AdamOptimizer(learning_rate) grads_and_vars = optimizer.compute_gradients(cross_entropy) \u6ce8\u610f\uff0c\u6211\u4eec\u6b63\u5728\u8c03\u7528\u4f18\u5316\u5668\u7684 compute_gradients() \u65b9\u6cd5\uff0c\u800c\u4e0d\u662f minimize() \u65b9\u6cd5\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u5728\u4f7f\u7528\u5b83\u4eec\u4e4b\u524d\u8c03\u6574\u68af\u5ea6\u3002 compute_gradients() \u65b9\u6cd5\u8fd4\u56de\u68af\u5ea6\u5411\u91cf/\u53d8\u91cf\u5bf9\u7684\u5217\u8868\uff08\u6bcf\u4e2a\u53ef\u8bad\u7ec3\u53d8\u91cf\u4e00\u5bf9\uff09\u3002\u8ba9\u6211\u4eec\u628a\u6240\u6709\u7684\u68af\u5ea6\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u4ee5\u4fbf\u65b9\u4fbf\u5730\u83b7\u5f97\u5b83\u4eec\u7684\u503c\uff1a gradients = [grad for grad, variable in grads_and_vars] \u597d\uff0c\u73b0\u5728\u662f\u68d8\u624b\u7684\u90e8\u5206\u3002\u5728\u6267\u884c\u9636\u6bb5\uff0c\u7b97\u6cd5\u5c06\u8fd0\u884c\u7b56\u7565\uff0c\u5e76\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u8bc4\u4f30\u8fd9\u4e9b\u68af\u5ea6\u5f20\u91cf\u5e76\u5b58\u50a8\u5b83\u4eec\u7684\u503c\u3002\u5728\u591a\u6b21\u8fd0\u884c\u4e4b\u540e\uff0c\u5b83\u5982\u5148\u524d\u6240\u89e3\u91ca\u7684\u8c03\u6574\u8fd9\u4e9b\u68af\u5ea6\uff08\u5373\uff0c\u901a\u8fc7\u52a8\u4f5c\u5206\u6570\u4e58\u4ee5\u5b83\u4eec\u5e76\u4f7f\u5b83\u4eec\u5f52\u4e00\u5316\uff09\uff0c\u5e76\u8ba1\u7b97\u8c03\u6574\u540e\u7684\u68af\u5ea6\u7684\u5e73\u5747\u503c\u3002\u63a5\u4e0b\u6765\uff0c\u9700\u8981\u5c06\u7ed3\u679c\u68af\u5ea6\u53cd\u9988\u5230\u4f18\u5316\u5668\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u6267\u884c\u4f18\u5316\u6b65\u9aa4\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u68af\u5ea6\u5411\u91cf\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5360\u4f4d\u7b26\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u64cd\u4f5c\u53bb\u5e94\u7528\u66f4\u65b0\u7684\u68af\u5ea6\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u8c03\u7528\u4f18\u5316\u5668\u7684 apply_gradients() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u68af\u5ea6\u5411\u91cf/\u53d8\u91cf\u5bf9\u7684\u5217\u8868\u3002\u6211\u4eec\u4e0d\u7ed9\u5b83\u539f\u59cb\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u800c\u662f\u7ed9\u5b83\u4e00\u4e2a\u5305\u542b\u66f4\u65b0\u68af\u5ea6\u7684\u5217\u8868\uff08\u5373\uff0c\u901a\u8fc7\u5360\u4f4d\u7b26\u9012\u9001\u7684\u68af\u5ea6\uff09\uff1a gradient_placeholders = [] grads_and_vars_feed = [] for grad, variable in grads_and_vars: gradient_placeholder = tf.placeholder(tf.float32, shape=grad.get_shape()) gradient_placeholders.append(gradient_placeholder) grads_and_vars_feed.append((gradient_placeholder, variable)) training_op = optimizer.apply_gradients(grads_and_vars_feed) \u8ba9\u6211\u4eec\u540e\u9000\u4e00\u6b65\uff0c\u770b\u770b\u6574\u4e2a\u8fd0\u884c\u8fc7\u7a0b\uff1a n_inputs = 4 n_hidden = 4 n_outputs = 1 initializer = tf.contrib.layers.variance_scaling_initializer() learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=[None, n_inputs]) hidden = fully_connected(X, n_hidden, activation_fn=tf.nn.elu,weights_initializer=initializer) logits = fully_connected(hidden, n_outputs, activation_fn=None, weights_initializer=initializer) outputs = tf.nn.sigmoid(logits) p_left_and_right = tf.concat(axis=1, values=[outputs, 1 - outputs]) action = tf.multinomial(tf.log(p_left_and_right), num_samples=1) y = 1. - tf.to_float(action) cross_entropy = tf.nn.sigmoid_cross_entropy_with_logits(labels=y, logits=logits) optimizer = tf.train.AdamOptimizer(learning_rate) grads_and_vars = optimizer.compute_gradients(cross_entropy) gradients = [grad for grad, variable in grads_and_vars] gradient_placeholders = [] grads_and_vars_feed = [] for grad, variable in grads_and_vars: gradient_placeholder = tf.placeholder(tf.float32, shape=grad.get_shape()) gradient_placeholders.append(gradient_placeholder) grads_and_vars_feed.append((gradient_placeholder, variable)) training_op = optimizer.apply_gradients(grads_and_vars_feed) init = tf.global_variables_initializer() saver = tf.train.Saver() \u5230\u6267\u884c\u9636\u6bb5\u4e86\uff01\u6211\u4eec\u5c06\u9700\u8981\u4e24\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u603b\u6298\u6263\u5956\u52b1\uff0c\u7ed9\u4e88\u539f\u59cb\u5956\u52b1\uff0c\u4ee5\u53ca\u5f52\u4e00\u5316\u591a\u6b21\u5faa\u73af\u7684\u7ed3\u679c\uff1a def discount_rewards(rewards, discount_rate): discounted_rewards = np.empty(len(rewards)) cumulative_rewards = 0 for step in reversed(range(len(rewards))): cumulative_rewards = rewards[step] + cumulative_rewards * discount_rate discounted_rewards[step] = cumulative_rewards return discounted_rewards def discount_and_normalize_rewards(all_rewards, discount_rate): all_discounted_rewards = [discount_rewards(rewards) for rewards in all_rewards] flat_rewards = np.concatenate(all_discounted_rewards) reward_mean = flat_rewards.mean() reward_std = flat_rewards.std() return [(discounted_rewards - reward_mean)/reward_std for discounted_rewards in all_discounted_rewards] \u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u8fd0\u884c\u7684\u5982\u4f55\uff1a >>> discount_rewards([10, 0, -50], discount_rate=0.8) array([-22., -40., -50.]) >>> discount_and_normalize_rewards([[10, 0, -50], [10, 20]], discount_rate=0.8) [array([-0.28435071, -0.86597718, -1.18910299]), array([ 1.26665318, 1.0727777 ])] \u5bf9 discount_rewards() \u7684\u8c03\u7528\u6b63\u597d\u8fd4\u56de\u6211\u4eec\u6240\u671f\u671b\u7684\uff08\u89c1\u56fe 16-6\uff09\u3002\u4f60\u4e5f\u53ef\u4ee5\u9a8c\u8bc1\u51fd\u6570 iscount_and_normalize_rewards() \u786e\u5b9e\u8fd4\u56de\u4e86\u4e24\u4e2a\u6b65\u9aa4\u4e2d\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6807\u51c6\u5316\u5206\u6570\u3002\u6ce8\u610f\u7b2c\u4e00\u6b65\u6bd4\u7b2c\u4e8c\u6b65\u5dee\u5f88\u591a\uff0c\u6240\u4ee5\u5b83\u7684\u5f52\u4e00\u5316\u5206\u6570\u90fd\u662f\u8d1f\u7684\uff1b\u4ece\u7b2c\u4e00\u6b65\u5f00\u59cb\u7684\u6240\u6709\u52a8\u4f5c\u90fd\u4f1a\u88ab\u8ba4\u4e3a\u662f\u574f\u7684\uff0c\u53cd\u4e4b\uff0c\u7b2c\u4e8c\u6b65\u7684\u6240\u6709\u52a8\u4f5c\u90fd\u4f1a\u88ab\u8ba4\u4e3a\u662f\u597d\u7684\u3002 \u6211\u4eec\u73b0\u5728\u6709\u4e86\u8bad\u7ec3\u7b56\u7565\u6240\u9700\u7684\u4e00\u5207\uff1a n_iterations = 250 # \u8bad\u7ec3\u8fed\u4ee3\u6b21\u6570 n_max_steps = 1000 # \u6bcf\u4e00\u6b21\u7684\u6700\u5927\u6b65\u957f n_games_per_update = 10 # \u6bcf\u8fed\u4ee3\u5341\u6b21\u8bad\u7ec3\u4e00\u6b21\u7b56\u7565\u7f51\u7edc save_iterations = 10 # \u6bcf\u5341\u6b21\u8fed\u4ee3\u4fdd\u5b58\u6a21\u578b discount_rate = 0.95 with tf.Session() as sess: init.run() for iteration in range(n_iterations): all_rewards = [] #\u6bcf\u4e00\u6b21\u7684\u6240\u6709\u5956\u52b1 all_gradients = [] #\u6bcf\u4e00\u6b21\u7684\u6240\u6709\u68af\u5ea6 for game in range(n_games_per_update): current_rewards = [] #\u5f53\u524d\u6b65\u7684\u6240\u6709\u5956\u52b1 current_gradients = [] #\u5f53\u524d\u6b65\u7684\u6240\u6709\u68af\u5ea6 obs = env.reset() for step in range(n_max_steps): action_val, gradients_val = sess.run([action, gradients], feed_dict={X: obs.reshape(1, n_inputs)}) # \u4e00\u4e2aobs obs, reward, done, info = env.step(action_val[0][0]) current_rewards.append(reward) current_gradients.append(gradients_val) if done: break all_rewards.append(current_rewards) all_gradients.append(current_gradients) # \u6b64\u65f6\u6211\u4eec\u6bcf10\u6b21\u8fd0\u884c\u4e00\u6b21\u7b56\u7565\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4f7f\u7528\u4e4b\u524d\u63cf\u8ff0\u7684\u7b97\u6cd5\u53bb\u66f4\u65b0\u7b56\u7565\uff0c\u6ce8\uff1a\u5373\u4f7f\u7528\u8fed\u4ee310\u6b21\u7684\u7ed3\u679c\u6765\u4f18\u5316\u5f53\u524d\u7684\u7b56\u7565\u3002 all_rewards = discount_and_normalize_rewards(all_rewards) feed_dict = {} for var_index, grad_placeholder in enumerate(gradient_placeholders): # \u5c06\u68af\u5ea6\u4e0e\u884c\u4e3a\u5206\u6570\u76f8\u4e58\uff0c\u5e76\u8ba1\u7b97\u5e73\u5747\u503c mean_gradients = np.mean([reward * all_gradients[game_index][step][var_index] for game_index, rewards in enumerate(all_rewards) for step, reward in enumerate(rewards)],axis=0) feed_dict[grad_placeholder] = mean_gradients sess.run(training_op, feed_dict=feed_dict) if iteration % save_iterations == 0: saver.save(sess, \"./my_policy_net_pg.ckpt\") \u6bcf\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3\u90fd\u662f\u901a\u8fc7\u8fd0\u884c10\u6b21\u7684\u7b56\u7565\u5f00\u59cb\u7684\uff08\u6bcf\u6b21\u6700\u591a 1000 \u6b65\uff0c\u4ee5\u907f\u514d\u6c38\u8fdc\u8fd0\u884c\uff09\u3002\u5728\u6bcf\u4e00\u6b65\uff0c\u6211\u4eec\u4e5f\u8ba1\u7b97\u68af\u5ea6\uff0c\u5047\u8bbe\u9009\u62e9\u7684\u884c\u52a8\u662f\u6700\u597d\u7684\u3002\u5728\u8fd0\u884c\u4e86\u8fd9 10 \u6b21\u4e4b\u540e\uff0c\u6211\u4eec\u4f7f\u7528 discount_and_normalize_rewards() \u51fd\u6570\u8ba1\u7b97\u52a8\u4f5c\u5f97\u5206\uff1b\u6211\u4eec\u904d\u5386\u6bcf\u4e2a\u53ef\u8bad\u7ec3\u53d8\u91cf\uff0c\u5728\u6240\u6709\u6b21\u6570\u548c\u6240\u6709\u6b65\u9aa4\u4e2d\uff0c\u901a\u8fc7\u5176\u76f8\u5e94\u7684\u52a8\u4f5c\u5206\u6570\u6765\u4e58\u4ee5\u6bcf\u4e2a\u68af\u5ea6\u5411\u91cf\uff1b\u5e76\u4e14\u6211\u4eec\u8ba1\u7b97\u7ed3\u679c\u7684\u5e73\u5747\u503c\u3002\u6700\u540e\uff0c\u6211\u4eec\u8fd0\u884c\u8bad\u7ec3\u64cd\u4f5c\uff0c\u7ed9\u5b83\u63d0\u4f9b\u5e73\u5747\u68af\u5ea6\uff08\u5bf9\u6bcf\u4e2a\u53ef\u8bad\u7ec3\u53d8\u91cf\u63d0\u4f9b\u4e00\u4e2a\uff09\u3002\u6211\u4eec\u7ee7\u7eed\u6bcf 10 \u4e2a\u8bad\u7ec3\u6b21\u6570\u4fdd\u5b58\u4e00\u6b21\u6a21\u578b\u3002 \u6211\u4eec\u505a\u5b8c\u4e86\uff01\u8fd9\u6bb5\u4ee3\u7801\u5c06\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\uff0c\u5b83\u5c06\u6210\u529f\u5730\u5b66\u4f1a\u5e73\u8861\u8f66\u4e0a\u7684\u5e73\u8861\u6746\uff08\u4f60\u53ef\u4ee5\u5728 Juyter notebook \u4e0a\u8bd5\u7528\uff09\u3002\u6ce8\u610f\uff0c\u5b9e\u9645\u4e0a\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u73a9\u5bb6\u6e38\u620f\u7ed3\u675f\uff1a\u8981\u4e48\u5e73\u8861\u53ef\u4ee5\u503e\u659c\u592a\u5927\uff0c\u8981\u4e48\u8f66\u5b8c\u5168\u8131\u79bb\u5c4f\u5e55\u3002\u5728 250 \u6b21\u8bad\u7ec3\u8fed\u4ee3\u4e2d\uff0c\u7b56\u7565\u5b66\u4f1a\u5e73\u8861\u6781\u70b9\uff0c\u4f46\u5728\u907f\u514d\u8131\u79bb\u5c4f\u5e55\u65b9\u9762\u8fd8\u4e0d\u591f\u597d\u3002\u989d\u5916\u6570\u767e\u6b21\u7684\u8bad\u7ec3\u8fed\u4ee3\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002 \u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u627e\u5230\u4e00\u79cd\u5373\u4f7f\u5f53\u667a\u80fd\u4f53\u6700\u521d\u5bf9\u73af\u5883\u4e00\u65e0\u6240\u77e5\u65f6\u4e5f\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u7684\u7b97\u6cd5\u3002\u7136\u800c\uff0c\u9664\u975e\u4f60\u6b63\u5728\u5199\u8bba\u6587\uff0c\u5426\u5219\u4f60\u5e94\u8be5\u5c3d\u53ef\u80fd\u591a\u5730\u5c06\u5148\u524d\u7684\u77e5\u8bc6\u6ce8\u5165\u5230\u667a\u80fd\u4f53\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4f1a\u6781\u5927\u5730\u52a0\u901f\u8bad\u7ec3\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u6dfb\u52a0\u4e0e\u5c4f\u5e55\u4e2d\u5fc3\u8ddd\u79bb\u548c\u6781\u70b9\u89d2\u5ea6\u6210\u6b63\u6bd4\u7684\u8d1f\u5956\u52b1\u3002\u6b64\u5916\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e00\u4e2a\u76f8\u5f53\u597d\u7684\u7b56\u7565\uff0c\u4f60\u53ef\u4ee5\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6a21\u4eff\u5b83\uff0c\u7136\u540e\u4f7f\u7528\u7b56\u7565\u68af\u5ea6\u6765\u6539\u8fdb\u5b83\u3002 \u5c3d\u7ba1\u5b83\u76f8\u5bf9\u7b80\u5355\uff0c\u4f46\u662f\u8be5\u7b97\u6cd5\u662f\u975e\u5e38\u5f3a\u5927\u7684\u3002\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u89e3\u51b3\u66f4\u96be\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5e73\u8861\u4e00\u8f86\u624b\u63a8\u8f66\u4e0a\u7684\u5e73\u8861\u6746\u3002\u4e8b\u5b9e\u4e0a\uff0cAlgPaGo \u662f\u57fa\u4e8e\u7c7b\u4f3c\u7684 PG \u7b97\u6cd5\uff08\u52a0\u4e0a\u8499\u7279\u5361\u7f57\u6811\u641c\u7d22\uff0c\u8fd9\u8d85\u51fa\u4e86\u672c\u4e66\u7684\u8303\u56f4\uff09\u3002 \u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u53e6\u4e00\u4e2a\u6d41\u884c\u7684\u7b97\u6cd5\u3002\u4e0e PG \u7b97\u6cd5\u76f4\u63a5\u5c1d\u8bd5\u4f18\u5316\u7b56\u7565\u4ee5\u589e\u52a0\u5956\u52b1\u76f8\u53cd\uff0c\u6211\u4eec\u73b0\u5728\u770b\u7684\u7b97\u6cd5\u662f\u95f4\u63a5\u7684\uff1a\u667a\u80fd\u4f53\u5b66\u4e60\u53bb\u4f30\u8ba1\u6bcf\u4e2a\u72b6\u6001\u7684\u672a\u6765\u8870\u51cf\u5956\u52b1\u7684\u671f\u671b\u603b\u548c\uff0c\u6216\u8005\u5728\u6bcf\u4e2a\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u884c\u4e3a\u672a\u6765\u8870\u51cf\u5956\u52b1\u7684\u671f\u671b\u548c\u3002\u7136\u540e\uff0c\u4f7f\u7528\u8fd9\u4e9b\u77e5\u8bc6\u6765\u51b3\u5b9a\u5982\u4f55\u884c\u52a8\u3002\u4e3a\u4e86\u7406\u89e3\u8fd9\u4e9b\u7b97\u6cd5\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u4ecb\u7ecd\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\u3002","title":"\u7b56\u7565\u68af\u5ea6"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_7","text":"\u5728\u4e8c\u5341\u4e16\u7eaa\u521d\uff0c\u6570\u5b66\u5bb6 Andrey Markov \u7814\u7a76\u4e86\u6ca1\u6709\u8bb0\u5fc6\u7684\u968f\u673a\u8fc7\u7a0b\uff0c\u79f0\u4e3a\u9a6c\u5c14\u53ef\u592b\u94fe\u3002\u8fd9\u6837\u7684\u8fc7\u7a0b\u5177\u6709\u56fa\u5b9a\u6570\u91cf\u7684\u72b6\u6001\uff0c\u5e76\u4e14\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u968f\u673a\u5730\u4ece\u4e00\u4e2a\u72b6\u6001\u6f14\u5316\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u3002\u5b83\u4ece\u72b6\u6001 S \u6f14\u53d8\u4e3a\u72b6\u6001 S' \u7684\u6982\u7387\u662f\u56fa\u5b9a\u7684\uff0c\u5b83\u53ea\u4f9d\u8d56\u4e8e (S, S') \u5bf9\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u7684\u72b6\u6001\uff08\u7cfb\u7edf\u6ca1\u6709\u8bb0\u5fc6\uff09\u3002 \u56fe 16-7 \u5c55\u793a\u4e86\u4e00\u4e2a\u5177\u6709\u56db\u4e2a\u72b6\u6001\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u4f8b\u5b50\u3002\u5047\u8bbe\u8be5\u8fc7\u7a0b\u4ece\u72b6\u6001 S0 \u5f00\u59cb\uff0c\u5e76\u4e14\u5728\u4e0b\u4e00\u6b65\u9aa4\u4e2d\u6709 70% \u7684\u6982\u7387\u4fdd\u6301\u5728\u8be5\u72b6\u6001\u4e0d\u53d8\u4e2d\u3002\u6700\u7ec8\uff0c\u5b83\u5fc5\u7136\u79bb\u5f00\u90a3\u4e2a\u72b6\u6001\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u56de\u6765\uff0c\u56e0\u4e3a\u6ca1\u6709\u5176\u4ed6\u72b6\u6001\u56de\u5230 S0 \u3002\u5982\u679c\u5b83\u8fdb\u5165\u72b6\u6001 S1 \uff0c\u90a3\u4e48\u5b83\u5f88\u53ef\u80fd\u4f1a\u8fdb\u5165\u72b6\u6001 S2 \uff0890% \u7684\u6982\u7387\uff09\uff0c\u7136\u540e\u7acb\u5373\u56de\u5230\u72b6\u6001 S1 \uff08\u4ee5 100% \u7684\u6982\u7387\uff09\u3002\u5b83\u53ef\u4ee5\u5728\u8fd9\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\u4ea4\u66ff\u591a\u6b21\uff0c\u4f46\u6700\u7ec8\u5b83\u4f1a\u843d\u5165\u72b6\u6001 S3 \u5e76\u6c38\u8fdc\u7559\u5728\u90a3\u91cc\uff08\u8fd9\u662f\u4e00\u4e2a\u7ec8\u7aef\u72b6\u6001\uff09\u3002\u9a6c\u5c14\u53ef\u592b\u94fe\u53ef\u4ee5\u6709\u975e\u5e38\u4e0d\u540c\u7684\u5e94\u7528\uff0c\u5b83\u4eec\u5728\u70ed\u529b\u5b66\u3001\u5316\u5b66\u3001\u7edf\u8ba1\u5b66\u7b49\u65b9\u9762\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u6700\u521d\u662f\u5728 20 \u4e16\u7eaa 50 \u5e74\u4ee3\u7531 Richard Bellman \u63cf\u8ff0\u7684\u3002\u5b83\u4eec\u7c7b\u4f3c\u4e8e\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u4f46\u6709\u4e00\u4e2a\u8fde\u7ed3\uff1a \u5728\u72b6\u6001\u8f6c\u79fb\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u4e00\u4e2a\u667a\u80fd\u4f53\u53ef\u4ee5\u9009\u62e9\u51e0\u79cd\u53ef\u80fd\u7684\u52a8\u4f5c\u4e2d\u7684\u4e00\u4e2a\uff0c\u5e76\u4e14\u8f6c\u79fb\u6982\u7387\u53d6\u51b3\u4e8e\u6240\u9009\u62e9\u7684\u52a8\u4f5c\u3002 \u6b64\u5916\uff0c\u4e00\u4e9b\u72b6\u6001\u8f6c\u79fb\u8fd4\u56de\u4e00\u4e9b\u5956\u52b1\uff08\u6b63\u6216\u8d1f\uff09\uff0c\u667a\u80fd\u4f53\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u7b56\u7565\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5c06\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u5956\u52b1\u3002 \u4f8b\u5982\uff0c\u56fe 16-8 \u4e2d\u6240\u793a\u7684 MDP \u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u5177\u6709\u4e09\u4e2a\u72b6\u6001\u548c\u4e09\u4e2a\u53ef\u80fd\u7684\u79bb\u6563\u52a8\u4f5c\u3002\u5982\u679c\u4ece\u72b6\u6001 S0 \u5f00\u59cb\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53ef\u4ee5\u5728\u52a8\u4f5c A0 \u3001 A1 \u6216 A2 \u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u5b83\u9009\u62e9\u52a8\u4f5c A1 \uff0c\u5b83\u5c31\u4fdd\u6301\u5728\u72b6\u6001 S0 \u4e2d\uff0c\u5e76\u4e14\u6ca1\u6709\u4efb\u4f55\u5956\u52b1\u3002\u56e0\u6b64\uff0c\u5982\u679c\u613f\u610f\u7684\u8bdd\uff0c\u5b83\u53ef\u4ee5\u51b3\u5b9a\u6c38\u8fdc\u5446\u5728\u90a3\u91cc\u3002\u4f46\u662f\uff0c\u5982\u679c\u5b83\u9009\u62e9\u52a8\u4f5c A0 \uff0c\u5b83\u6709 70% \u7684\u6982\u7387\u83b7\u5f97 10 \u5956\u52b1\uff0c\u5e76\u4fdd\u6301\u5728\u72b6\u6001 S0 \u3002\u7136\u540e\uff0c\u5b83\u53ef\u4ee5\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u5c1d\u8bd5\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684\u5956\u52b1\u3002\u4f46\u5b83\u5c06\u5728\u72b6\u6001 S1 \u4e2d\u7ed3\u675f\u8fd9\u6837\u7684\u884c\u4e3a\u3002\u5728\u72b6\u6001 S1 \u4e2d\uff0c\u5b83\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u52a8\u4f5c\uff1a A0 \u6216 A1 \u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u53cd\u590d\u9009\u62e9\u52a8\u4f5c A1 \u6765\u9009\u62e9\u505c\u7559\uff0c\u6216\u8005\u5b83\u53ef\u4ee5\u9009\u62e9\u52a8\u4f5c A2 \u79fb\u52a8\u5230\u72b6\u6001 S2 \u5e76\u5f97\u5230 -50 \u5956\u52b1\u3002\u5728\u72b6\u6001 S3 \u4e2d\uff0c\u9664\u4e86\u91c7\u53d6\u884c\u52a8 A1 \u4e4b\u5916\uff0c\u522b\u65e0\u9009\u62e9\uff0c\u8fd9\u5c06\u6700\u6709\u53ef\u80fd\u5f15\u5bfc\u5b83\u56de\u5230\u72b6\u6001 S0 \uff0c\u5728\u9014\u4e2d\u83b7\u5f97 40 \u7684\u5956\u52b1\u3002\u901a\u8fc7\u89c2\u5bdf\u8fd9\u4e2a MDP\uff0c\u4f60\u80fd\u731c\u51fa\u54ea\u4e00\u4e2a\u7b56\u7565\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u83b7\u5f97\u6700\u5927\u7684\u56de\u62a5\u5417\uff1f\u5728\u72b6\u6001 S0 \u4e2d\uff0c\u6e05\u695a\u5730\u77e5\u9053 A0 \u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u5728\u72b6\u6001 S3 \u4e2d\uff0c\u667a\u80fd\u4f53\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u91c7\u53d6\u884c\u52a8 A1 \uff0c\u4f46\u662f\u5728\u72b6\u6001 S1 \u4e2d\uff0c\u667a\u80fd\u4f53\u5426\u5e94\u8be5\u4fdd\u6301\u4e0d\u52a8\uff08 A0 \uff09\u6216\u901a\u8fc7\u706b\uff08 A2 \uff09\uff0c\u8fd9\u662f\u4e0d\u660e\u786e\u7684\u3002 Bellman \u627e\u5230\u4e86\u4e00\u79cd\u4f30\u8ba1\u4efb\u4f55\u72b6\u6001 S \u7684\u6700\u4f73\u72b6\u6001\u503c\u7684\u65b9\u6cd5\uff0c\u4ed6\u63d0\u51fa\u4e86 V(s) \uff0c\u5b83\u662f\u667a\u80fd\u4f53\u5728\u5176\u91c7\u53d6\u6700\u4f73\u884c\u4e3a\u8fbe\u5230\u72b6\u6001 s \u540e\u6240\u6709\u8870\u51cf\u672a\u6765\u5956\u52b1\u7684\u603b\u548c\u7684\u5e73\u5747\u671f\u671b\u3002\u4ed6\u8868\u660e\uff0c\u5982\u679c\u667a\u80fd\u4f53\u7684\u884c\u4e3a\u6700\u4f73\uff0c\u90a3\u4e48\u8d1d\u5c14\u66fc\u6700\u4f18\u6027\u516c\u5f0f\u9002\u7528\uff08\u89c1\u516c\u5f0f 16-1\uff09\u3002\u8fd9\u4e2a\u9012\u5f52\u516c\u5f0f\u8868\u793a\uff0c\u5982\u679c\u667a\u80fd\u4f53\u6700\u4f18\u5730\u8fd0\u884c\uff0c\u90a3\u4e48\u5f53\u524d\u72b6\u6001\u7684\u6700\u4f18\u503c\u7b49\u4e8e\u5728\u91c7\u53d6\u4e00\u4e2a\u6700\u4f18\u52a8\u4f5c\u4e4b\u540e\u5e73\u5747\u5f97\u5230\u7684\u5956\u52b1\uff0c\u52a0\u4e0a\u8be5\u52a8\u4f5c\u53ef\u80fd\u5bfc\u81f4\u7684\u6240\u6709\u53ef\u80fd\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u671f\u671b\u6700\u4f18\u503c\u3002 \u5176\u4e2d\uff1a T \u4e3a\u667a\u80fd\u4f53\u9009\u62e9\u52a8\u4f5c a \u65f6\u4ece\u72b6\u6001 s \u5230\u72b6\u6001 s' \u7684\u6982\u7387 R \u4e3a\u667a\u80fd\u4f53\u9009\u62e9\u4ee5\u52a8\u4f5c a \u4ece\u72b6\u6001 s \u5230\u72b6\u6001 s' \u7684\u8fc7\u7a0b\u4e2d\u5f97\u5230\u7684\u5956\u52b1 \u4e3a\u8870\u51cf\u7387 \u8fd9\u4e2a\u7b49\u5f0f\u76f4\u63a5\u5f15\u51fa\u4e86\u4e00\u79cd\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u53ef\u4ee5\u7cbe\u786e\u4f30\u8ba1\u6bcf\u4e2a\u53ef\u80fd\u72b6\u6001\u7684\u6700\u4f18\u72b6\u6001\u503c\uff1a\u9996\u5148\u5c06\u6240\u6709\u72b6\u6001\u503c\u4f30\u8ba1\u521d\u59cb\u5316\u4e3a\u96f6\uff0c\u7136\u540e\u7528\u6570\u503c\u8fed\u4ee3\u7b97\u6cd5\u8fed\u4ee3\u66f4\u65b0\u5b83\u4eec\uff08\u89c1\u516c\u5f0f 16-2\uff09\u3002\u4e00\u4e2a\u663e\u8457\u7684\u7ed3\u679c\u662f\uff0c\u7ed9\u5b9a\u8db3\u591f\u7684\u65f6\u95f4\uff0c\u8fd9\u4e9b\u4f30\u8ba1\u4fdd\u8bc1\u6536\u655b\u5230\u6700\u4f18\u72b6\u6001\u503c\uff0c\u5bf9\u5e94\u4e8e\u6700\u4f18\u7b56\u7565\u3002 \u5176\u4e2d\uff1a \u662f\u5728 k \u6b21\u7b97\u6cd5\u8fed\u4ee3\u5bf9\u72b6\u6001 s \u7684\u4f30\u8ba1 \u8be5\u7b97\u6cd5\u662f\u52a8\u6001\u89c4\u5212\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b83\u5c06\u4e86\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f30\u8ba1\u6f5c\u5728\u7684\u672a\u6765\u8870\u51cf\u5956\u52b1\u7684\u603b\u548c\uff09\u53d8\u4e3a\u53ef\u5904\u7406\u7684\u5b50\u95ee\u9898\uff0c\u53ef\u4ee5\u8fed\u4ee3\u5730\u5904\u7406\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u627e\u5230\u6700\u5927\u5316\u5e73\u5747\u62a5\u916c\u4e0e\u4e0b\u4e00\u4e2a\u8870\u51cf\u72b6\u6001\u503c\u7684\u548c\u7684\u52a8\u4f5c\uff09 \u4e86\u89e3\u6700\u4f73\u72b6\u6001\u503c\u53ef\u80fd\u662f\u6709\u7528\u7684\uff0c\u7279\u522b\u662f\u8bc4\u4f30\u7b56\u7565\uff0c\u4f46\u5b83\u6ca1\u6709\u660e\u786e\u5730\u544a\u8bc9\u667a\u80fd\u4f53\u8981\u505a\u4ec0\u4e48\u3002\u5e78\u8fd0\u7684\u662f\uff0cBellman \u53d1\u73b0\u4e86\u4e00\u79cd\u975e\u5e38\u7c7b\u4f3c\u7684\u7b97\u6cd5\u6765\u4f30\u8ba1\u6700\u4f18\u72b6\u6001-\u52a8\u4f5c\u503c\uff08 state-action values \uff09\uff0c\u901a\u5e38\u79f0\u4e3a Q \u503c\u3002\u72b6\u6001\u884c\u52a8 (S, A) \u5bf9\u7684\u6700\u4f18 Q \u503c\uff0c\u8bb0\u4e3a Q(s, a) \uff0c\u662f\u667a\u80fd\u4f53\u5728\u5230\u8fbe\u72b6\u6001 S \uff0c\u7136\u540e\u9009\u62e9\u52a8\u4f5c A \u4e4b\u540e\u5e73\u5747\u8870\u51cf\u672a\u6765\u5956\u52b1\u7684\u671f\u671b\u7684\u603b\u548c\u3002\u4f46\u662f\u5728\u5b83\u770b\u5230\u8fd9\u4e2a\u52a8\u4f5c\u7684\u7ed3\u679c\u4e4b\u524d\uff0c\u5047\u8bbe\u5b83\u5728\u8be5\u52a8\u4f5c\u4e4b\u540e\u7684\u52a8\u4f5c\u662f\u6700\u4f18\u7684\u3002 \u4e0b\u9762\u662f\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff1a\u518d\u6b21\uff0c\u901a\u8fc7\u521d\u59cb\u5316\u6240\u6709\u7684 Q \u503c\u4f30\u8ba1\u4e3a\u96f6\uff0c\u7136\u540e\u4f7f\u7528 Q \u503c\u8fed\u4ee3\u7b97\u6cd5\u66f4\u65b0\u5b83\u4eec\uff08\u53c2\u89c1\u516c\u5f0f 16-3\uff09\u3002 \u4e00\u65e6\u4f60\u6709\u4e86\u6700\u4f73\u7684 Q \u503c\uff0c\u5b9a\u4e49\u6700\u4f18\u7684\u7b56\u7565 \u03c0*(s) \uff0c\u5b83\u662f\u5e73\u51e1\u7684\uff1a\u5f53\u667a\u80fd\u4f53\u5904\u4e8e\u72b6\u6001 S \u65f6\uff0c\u5b83\u5e94\u8be5\u9009\u62e9\u5177\u6709\u6700\u9ad8 Q \u503c\u7684\u52a8\u4f5c\uff0c\u7528\u4e8e\u8be5\u72b6\u6001\uff1a \u3002 \u8ba9\u6211\u4eec\u628a\u8fd9\u4e2a\u7b97\u6cd5\u5e94\u7528\u5230\u56fe 16-8 \u6240\u793a\u7684 MDP \u4e2d\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49 MDP\uff1a nan=np.nan # \u4ee3\u8868\u4e0d\u53ef\u80fd\u7684\u52a8\u4f5c T = np.array([ # shape=[s, a, s'] [[0.7, 0.3, 0.0], [1.0, 0.0, 0.0], [0.8, 0.2, 0.0]], [[0.0, 1.0, 0.0], [nan, nan, nan], [0.0, 0.0, 1.0]], [[nan, nan, nan], [0.8, 0.1, 0.1], [nan, nan, nan]], ]) R = np.array([ # shape=[s, a, s'] [[10., 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]], [[10., 0.0, 0.0], [nan, nan, nan], [0.0, 0.0, -50.]], [[nan, nan, nan], [40., 0.0, 0.0], [nan, nan, nan]], ]) possible_actions = [[0, 1, 2], [0, 2], [1]] \u8ba9\u6211\u4eec\u8fd0\u884c Q \u503c\u8fed\u4ee3\u7b97\u6cd5 Q = np.full((3, 3), -np.inf) # -inf \u5bf9\u5e94\u7740\u4e0d\u53ef\u80fd\u7684\u52a8\u4f5c for state, actions in enumerate(possible_actions): Q[state, actions] = 0.0 # \u5bf9\u6240\u6709\u53ef\u80fd\u7684\u52a8\u4f5c\u521d\u59cb\u5316\u4e3a0.0 learning_rate = 0.01 discount_rate = 0.95 n_iterations = 100 for iteration in range(n_iterations): Q_prev = Q.copy() for s in range(3): for a in possible_actions[s]: Q[s, a] = np.sum([T[s, a, sp] * (R[s, a, sp] + discount_rate * np.max(Q_prev[sp])) for sp in range(3)]) \u7ed3\u679c\u7684 Q \u503c\u7c7b\u4f3c\u4e8e\u5982\u4e0b\uff1a >>> Q array([[ 21.89498982, 20.80024033, 16.86353093], [ 1.11669335, -inf, 1.17573546], [ -inf, 53.86946068, -inf]]) >>> np.argmax(Q, axis=1) # \u6bcf\u4e00\u72b6\u6001\u7684\u6700\u4f18\u52a8\u4f5c array([0, 2, 1]) \u8fd9\u7ed9\u6211\u4eec\u8fd9\u4e2a MDP \u7684\u6700\u4f73\u7b56\u7565\uff0c\u5f53\u4f7f\u7528 0.95 \u7684\u8870\u51cf\u7387\u65f6\uff1a\u5728\u72b6\u6001 S0 \u9009\u62e9\u52a8\u4f5c A0 \uff0c\u5728\u72b6\u6001 S1 \u9009\u62e9\u52a8\u4f5c A2 \uff08\u901a\u8fc7\u706b\u7130\uff01\uff09\u5728\u72b6\u6001 S2 \u4e2d\u9009\u62e9\u52a8\u4f5c A1 \uff08\u552f\u4e00\u53ef\u80fd\u7684\u52a8\u4f5c\uff09\u3002\u6709\u8da3\u7684\u662f\uff0c\u5982\u679c\u4f60\u628a\u8870\u51cf\u7387\u964d\u4f4e\u5230 0.9\uff0c\u6700\u4f18\u7684\u7b56\u7565\u6539\u53d8\uff1a\u5728\u72b6\u6001 S1 \u4e2d\uff0c\u6700\u597d\u7684\u52a8\u4f5c\u53d8\u6210 A0 \uff08\u4fdd\u6301\u4e0d\u53d8\uff1b\u4e0d\u901a\u8fc7\u706b\uff09\u3002\u8fd9\u662f\u6709\u9053\u7406\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u8ba4\u4e3a\u73b0\u5728\u6bd4\u672a\u6765\u66f4\u91cd\u8981\uff0c\u90a3\u4e48\u672a\u6765\u5956\u52b1\u7684\u524d\u666f\u662f\u4e0d\u503c\u5f97\u7acb\u523b\u7ecf\u5386\u75db\u82e6\u7684\u3002","title":"\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#q","text":"\u5177\u6709\u79bb\u6563\u52a8\u4f5c\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u901a\u5e38\u53ef\u4ee5\u88ab\u5efa\u6a21\u4e3a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u4f46\u662f\u667a\u80fd\u4f53\u6700\u521d\u4e0d\u77e5\u9053\u8f6c\u79fb\u6982\u7387\u662f\u4ec0\u4e48\uff08\u5b83\u4e0d\u77e5\u9053 T \uff09\uff0c\u5e76\u4e14\u5b83\u4e0d\u77e5\u9053\u5956\u52b1\u4f1a\u662f\u4ec0\u4e48\uff08\u5b83\u4e0d\u77e5\u9053 R \uff09\u3002\u5b83\u5fc5\u987b\u7ecf\u5386\u6bcf\u4e00\u4e2a\u72b6\u6001\u548c\u6bcf\u4e00\u6b21\u8f6c\u53d8\u5e76\u4e14\u81f3\u5c11\u77e5\u9053\u4e00\u6b21\u5956\u52b1\uff0c\u5e76\u4e14\u5982\u679c\u8981\u5bf9\u8f6c\u79fb\u6982\u7387\u8fdb\u884c\u5408\u7406\u7684\u4f30\u8ba1\uff0c\u5c31\u5fc5\u987b\u7ecf\u5386\u591a\u6b21\u3002 \u65f6\u95f4\u5dee\u5206\u5b66\u4e60\uff08TD \u5b66\u4e60\uff09\u7b97\u6cd5\u4e0e\u6570\u503c\u8fed\u4ee3\u7b97\u6cd5\u975e\u5e38\u7c7b\u4f3c\uff0c\u4f46\u8003\u8651\u5230\u667a\u80fd\u4f53\u4ec5\u5177\u6709 MDP \u7684\u90e8\u5206\u77e5\u8bc6\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5047\u8bbe\u667a\u80fd\u4f53\u6700\u521d\u53ea\u77e5\u9053\u53ef\u80fd\u7684\u72b6\u6001\u548c\u52a8\u4f5c\uff0c\u6ca1\u6709\u66f4\u591a\u4e86\u3002\u667a\u80fd\u4f53\u4f7f\u7528\u63a2\u7d22\u7b56\u7565\uff0c\u4f8b\u5982\uff0c\u7eaf\u7cb9\u7684\u968f\u673a\u7b56\u7565\u6765\u63a2\u7d22 MDP\uff0c\u5e76\u4e14\u968f\u7740\u5b83\u7684\u53d1\u5c55\uff0cTD \u5b66\u4e60\u7b97\u6cd5\u57fa\u4e8e\u5b9e\u9645\u89c2\u5bdf\u5230\u7684\u8f6c\u6362\u548c\u5956\u52b1\u6765\u66f4\u65b0\u72b6\u6001\u503c\u7684\u4f30\u8ba1\uff08\u89c1\u516c\u5f0f 16-4\uff09\u3002 \u5176\u4e2d\uff1a a \u662f\u5b66\u4e60\u7387\uff08\u4f8b\u5982 0.01\uff09 TD \u5b66\u4e60\u4e0e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6709\u8bb8\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u7279\u522b\u662f\u5b83\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u6837\u672c\u7684\u884c\u4e3a\u3002\u5c31\u50cf SGD \u4e00\u6837\uff0c\u53ea\u6709\u5f53\u4f60\u9010\u6e10\u964d\u4f4e\u5b66\u4e60\u901f\u7387\u65f6\uff0c\u5b83\u624d\u80fd\u771f\u6b63\u6536\u655b\uff08\u5426\u5219\u5b83\u5c06\u5728\u6781\u503c\u70b9\u9707\u8361\uff09\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001 S \uff0c\u8be5\u7b97\u6cd5\u53ea\u8ddf\u8e2a\u667a\u80fd\u4f53\u79bb\u5f00\u8be5\u72b6\u6001\u65f6\u7acb\u5373\u83b7\u5f97\u7684\u5956\u52b1\u7684\u5e73\u5747\u503c\uff0c\u518d\u52a0\u4e0a\u5b83\u671f\u671b\u7a0d\u540e\u5f97\u5230\u7684\u5956\u52b1\uff08\u5047\u8bbe\u5b83\u7684\u884c\u4e3a\u6700\u4f73\uff09\u3002 \u7c7b\u4f3c\u5730\uff0c\u6b64\u65f6\u7684Q \u5b66\u4e60\u7b97\u6cd5\u662f Q \u503c\u8fed\u4ee3\u7b97\u6cd5\u7684\u6539\u7f16\u7248\u672c\uff0c\u5176\u9002\u5e94\u8f6c\u79fb\u6982\u7387\u548c\u56de\u62a5\u5728\u521d\u59cb\u672a\u77e5\u7684\u60c5\u51b5\uff08\u89c1\u516c\u5f0f16-5\uff09\u3002 \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001\u52a8\u4f5c\u5bf9 (s,a) \uff0c\u8be5\u7b97\u6cd5\u8ddf\u8e2a\u667a\u80fd\u4f53\u5728\u4ee5\u52a8\u4f5c A \u79bb\u5f00\u72b6\u6001 S \u65f6\u83b7\u5f97\u7684\u5373\u65f6\u5956\u52b1\u5e73\u5747\u503c R \uff0c\u52a0\u4e0a\u5b83\u671f\u671b\u7a0d\u540e\u5f97\u5230\u7684\u5956\u52b1\u3002\u7531\u4e8e\u76ee\u6807\u7b56\u7565\u5c06\u6700\u4f18\u5730\u8fd0\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u53d6\u4e0b\u4e00\u72b6\u6001\u7684 Q \u503c\u4f30\u8ba1\u7684\u6700\u5927\u503c\u3002 \u4ee5\u4e0b\u662f\u5982\u4f55\u5b9e\u73b0 Q \u5b66\u4e60\uff1a import numpy.random as rnd learning_rate0 = 0.05 learning_rate_decay = 0.1 n_iterations = 20000 s = 0 # \u5728\u72b6\u6001 0\u5f00\u59cb Q = np.full((3, 3), -np.inf) # -inf \u5bf9\u5e94\u7740\u4e0d\u53ef\u80fd\u7684\u52a8\u4f5c for state, actions in enumerate(possible_actions): Q[state, actions] = 0.0 # \u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u52a8\u4f5c\u521d\u59cb\u5316\u4e3a 0.0 for iteration in range(n_iterations): a = rnd.choice(possible_actions[s]) # \u968f\u673a\u9009\u62e9\u52a8\u4f5c sp = rnd.choice(range(3), p=T[s, a]) # \u4f7f\u7528 T[s, a] \u6311\u9009\u4e0b\u4e00\u72b6\u6001 reward = R[s, a, sp] learning_rate = learning_rate0 / (1 + iteration * learning_rate_decay) Q[s, a] = learning_rate * Q[s, a] + (1 - learning_rate) * (reward + discount_rate * np.max(Q[sp])) s = sp # \u79fb\u52a8\u81f3\u4e0b\u4e00\u72b6\u6001 \u7ed9\u5b9a\u8db3\u591f\u7684\u8fed\u4ee3\uff0c\u8be5\u7b97\u6cd5\u5c06\u6536\u655b\u5230\u6700\u4f18 Q \u503c\u3002\u8fd9\u88ab\u79f0\u4e3a\u79bb\u7ebf\u7b56\u7565\u7b97\u6cd5\uff0c\u56e0\u4e3a\u6b63\u5728\u8bad\u7ec3\u7684\u7b56\u7565\u4e0d\u662f\u6b63\u5728\u6267\u884c\u7684\u7b56\u7565\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8be5\u7b97\u6cd5\u80fd\u591f\u901a\u8fc7\u89c2\u5bdf\u667a\u80fd\u4f53\u884c\u4e3a\u968f\u673a\u5b66\u4e60\uff08\u4f8b\u5982\u5b66\u4e60\u5f53\u4f60\u7684\u8001\u5e08\u662f\u4e00\u4e2a\u9189\u7334\u5b50\u65f6\u6253\u9ad8\u5c14\u592b\u7403\uff09\u6700\u4f73\u7b56\u7565\u3002\u6211\u4eec\u80fd\u505a\u5f97\u66f4\u597d\u5417\uff1f","title":"\u65f6\u95f4\u5dee\u5206\u5b66\u4e60\u4e0e Q \u5b66\u4e60"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_8","text":"\u5f53\u7136\uff0c\u53ea\u6709\u5728\u63a2\u7d22\u7b56\u7565\u5145\u5206\u63a2\u7d22 MDP \u7684\u60c5\u51b5\u4e0b\uff0cQ \u5b66\u4e60\u624d\u80fd\u8d77\u4f5c\u7528\u3002\u5c3d\u7ba1\u4e00\u4e2a\u7eaf\u7cb9\u7684\u968f\u673a\u7b56\u7565\u4fdd\u8bc1\u6700\u7ec8\u8bbf\u95ee\u6bcf\u4e00\u4e2a\u72b6\u6001\u548c\u6bcf\u4e2a\u8f6c\u6362\u591a\u6b21\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u5f88\u957f\u7684\u65f6\u95f4\u8fd9\u6837\u505a\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\u662f\u4f7f\u7528 \u03b5 \u8d2a\u5a6a\u7b56\u7565\uff1a\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5b83\u4ee5\u6982\u7387 \u03b5 \u968f\u673a\u5730\u6216\u4ee5\u6982\u7387\u4e3a 1-\u03b5 \u8d2a\u5a6a\u5730\uff08\u9009\u62e9\u5177\u6709\u6700\u9ad8 Q \u503c\u7684\u52a8\u4f5c\uff09\u3002\u03b5 \u8d2a\u5a6a\u7b56\u7565\u7684\u4f18\u70b9\uff08\u4e0e\u5b8c\u5168\u968f\u673a\u7b56\u7565\u76f8\u6bd4\uff09\u662f\uff0c\u5b83\u5c06\u82b1\u8d39\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u95f4\u6765\u63a2\u7d22\u73af\u5883\u4e2d\u6709\u8da3\u7684\u90e8\u5206\uff0c\u56e0\u4e3a Q \u503c\u4f30\u8ba1\u8d8a\u6765\u8d8a\u597d\uff0c\u540c\u65f6\u4ecd\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u8bbf\u95ee MDP \u7684\u672a\u77e5\u533a\u57df\u3002\u4ee5 \u03b5 \u4e3a\u5f88\u9ad8\u7684\u503c\uff08\u4f8b\u5982\uff0c1\uff09\u5f00\u59cb\uff0c\u7136\u540e\u9010\u6e10\u51cf\u5c0f\u5b83\uff08\u4f8b\u5982\uff0c\u4e0b\u964d\u5230 0.05\uff09\u662f\u5f88\u5e38\u89c1\u7684\u3002 \u53ef\u9009\u62e9\u7684\uff0c\u76f8\u6bd4\u4e8e\u4f9d\u8d56\u4e8e\u63a2\u7d22\u7684\u53ef\u80fd\u6027\uff0c\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u9f13\u52b1\u63a2\u7d22\u7b56\u7565\u6765\u5c1d\u8bd5\u5b83\u4ee5\u524d\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u7684\u884c\u52a8\u3002\u8fd9\u53ef\u4ee5\u88ab\u5b9e\u73b0\u4e3a\u9644\u52a0\u4e8e Q \u503c\u4f30\u8ba1\u7684\u5956\u91d1\uff0c\u5982\u516c\u5f0f 16-6 \u6240\u793a\u3002 \u5176\u4e2d\uff1a N \u8ba1\u7b97\u4e86\u5728\u72b6\u6001 s \u65f6\u9009\u62e9\u52a8\u4f5c a \u7684\u6b21\u6570 f \u662f\u4e00\u4e2a\u63a2\u7d22\u51fd\u6570\uff0c\u4f8b\u5982 f=q+K/(1+n) \uff0c\u5176\u4e2d K \u662f\u4e00\u4e2a\u597d\u5947\u8d85\u53c2\u6570\uff0c\u5b83\u6d4b\u91cf\u667a\u80fd\u4f53\u88ab\u5438\u5f15\u5230\u672a\u77e5\u72b6\u6001\u7684\u7a0b\u5ea6\u3002","title":"\u63a2\u7d22\u7b56\u7565"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#q_1","text":"Q \u5b66\u4e60\u7684\u4e3b\u8981\u95ee\u9898\u662f\uff0c\u5b83\u4e0d\u80fd\u5f88\u597d\u5730\u6269\u5c55\u5230\u5177\u6709\u8bb8\u591a\u72b6\u6001\u548c\u52a8\u4f5c\u7684\u5927\uff08\u751a\u81f3\u4e2d\u7b49\uff09\u7684 MDP\u3002\u8bd5\u7740\u7528 Q \u5b66\u4e60\u6765\u8bad\u7ec3\u4e00\u4e2a\u667a\u80fd\u4f53\u53bb\u73a9 Ms. Pac-Man\u3002Ms. Pac-Man \u53ef\u4ee5\u5403\u8d85\u8fc7 250 \u7c92\u7c92\u5b50\uff0c\u6bcf\u4e00\u7c92\u90fd\u53ef\u4ee5\u5b58\u5728\u6216\u4e0d\u5b58\u5728\uff08\u5373\u5df2\u7ecf\u5403\u8fc7\uff09\u3002\u56e0\u6b64\uff0c\u53ef\u80fd\u72b6\u6001\u7684\u6570\u76ee\u5927\u4e8e 2 \u7684 250 \u6b21\u5e42\uff0c\u7ea6\u7b49\u4e8e 10 \u7684 75 \u6b21\u5e42\uff08\u5e76\u4e14\u8fd9\u662f\u8003\u8651\u9897\u7c92\u7684\u53ef\u80fd\u72b6\u6001\uff09\u3002\u8fd9\u6bd4\u5728\u53ef\u89c2\u6d4b\u7684\u5b87\u5b99\u4e2d\u7684\u539f\u5b50\u8981\u591a\u5f97\u591a\uff0c\u6240\u4ee5\u4f60\u7edd\u5bf9\u65e0\u6cd5\u8ffd\u8e2a\u6bcf\u4e00\u4e2a Q \u503c\u7684\u4f30\u8ba1\u503c\u3002 \u89e3\u51b3\u65b9\u6848\u662f\u627e\u5230\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u7528\u53ef\u7ba1\u7406\u6570\u91cf\u7684\u53c2\u6570\u6765\u8fd1\u4f3c Q \u503c\u3002\u8fd9\u88ab\u79f0\u4e3a\u8fd1\u4f3c Q \u5b66\u4e60\u3002\u591a\u5e74\u6765\uff0c\u4eba\u4eec\u90fd\u662f\u624b\u5de5\u5728\u72b6\u6001\u4e2d\u63d0\u53d6\u5e76\u7ebf\u6027\u7ec4\u5408\u7279\u5f81\uff08\u4f8b\u5982\uff0c\u6700\u8fd1\u7684\u9b3c\u7684\u8ddd\u79bb\uff0c\u5b83\u4eec\u7684\u65b9\u5411\u7b49\uff09\u6765\u4f30\u8ba1 Q \u503c\uff0c\u4f46\u662f DeepMind \u8868\u660e\u4f7f\u7528\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5de5\u4f5c\u5f97\u66f4\u597d\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u590d\u6742\u7684\u95ee\u9898\u3002\u5b83\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u5f81\u5de5\u7a0b\u3002\u7528\u4e8e\u4f30\u8ba1 Q \u503c\u7684 DNN \u88ab\u79f0\u4e3a\u6df1\u5ea6 Q \u7f51\u7edc\uff08DQN\uff09\uff0c\u5e76\u4e14\u4f7f\u7528\u8fd1\u4f3c Q \u5b66\u4e60\u7684 DQN \u88ab\u79f0\u4e3a\u6df1\u5ea6 Q \u5b66\u4e60\u3002 \u5728\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6df1\u5ea6 Q \u5b66\u4e60\u6765\u8bad\u7ec3\u4e00\u4e2a\u667a\u80fd\u4f53\u53bb\u73a9 Ms. Pac-Man\uff0c\u5c31\u50cf DeepMind \u5728 2013 \u6240\u505a\u7684\u90a3\u6837\u3002\u4ee3\u7801\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8c03\u6574\uff0c\u8c03\u6574\u540e\u5b66\u4e60\u53bb\u73a9\u5927\u591a\u6570 Atari \u6e38\u620f\u7684\u6548\u679c\u90fd\u76f8\u5f53\u597d\u3002\u5728\u5927\u591a\u6570\u52a8\u4f5c\u6e38\u620f\u4e2d\uff0c\u5b83\u53ef\u4ee5\u8fbe\u5230\u8d85\u4eba\u7684\u6280\u80fd\uff0c\u4f46\u5b83\u5728\u957f\u65f6\u8fd0\u884c\u7684\u6e38\u620f\u4e2d\u5374\u4e0d\u592a\u597d\u3002","title":"\u8fd1\u4f3c Q \u5b66\u4e60"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#q-mspac-man","text":"\u7531\u4e8e\u6211\u4eec\u5c06\u4f7f\u7528 Atari \u73af\u5883\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5b89\u88c5 OpenAI gym \u7684 Atari \u73af\u5883\u4f9d\u8d56\u9879\u3002\u5f53\u9700\u8981\u73a9\u5176\u4ed6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u4f1a\u4e3a\u4f60\u60f3\u73a9\u7684\u5176\u4ed6 OpenAI gym \u73af\u5883\u5b89\u88c5\u4f9d\u8d56\u9879\u3002\u5728 macOS \u4e0a\uff0c\u5047\u8bbe\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86 Homebrew \u7a0b\u5e8f\uff0c\u4f60\u9700\u8981\u8fd0\u884c\uff1a $ brew install cmake boost boost-python sdl2 swig wget \u5728 Ubuntu \u4e0a\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff08\u5982\u679c\u4f7f\u7528 Python 2\uff0c\u7528 Python \u66ff\u6362 Python 3\uff09\uff1a $ apt-get install -y python3-numpy python3-dev cmake zlib1g-dev libjpeg-dev\\ xvfb libav-tools xorg-dev python3-opengl libboost-all-dev libsdl2-dev swig \u968f\u540e\u5b89\u88c5\u989d\u5916\u7684 python \u5305\uff1a $ pip3 install --upgrade 'gym[all]' \u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u521b\u9020\u4e00\u4e2a Ms.Pac-Man \u73af\u5883\uff1a >>> env = gym.make(\"MsPacman-v0\") >>> obs = env.reset() >>> obs.shape # [\u957f\uff0c\u5bbd\uff0c\u901a\u9053] (210, 160, 3) >>> env.action_space Discrete(9) \u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u6709\u4e5d\u4e2a\u79bb\u6563\u52a8\u4f5c\u53ef\u7528\uff0c\u5b83\u5bf9\u5e94\u4e8e\u64cd\u7eb5\u6746\u7684\u4e5d\u4e2a\u53ef\u80fd\u4f4d\u7f6e\uff08\u5de6\u3001\u53f3\u3001\u4e0a\u3001\u4e0b\u3001\u4e2d\u3001\u5de6\u4e0a\u7b49\uff09\uff0c\u89c2\u5bdf\u7ed3\u679c\u662f Atari \u5c4f\u5e55\u7684\u622a\u56fe\uff08\u89c1\u56fe 16-9\uff0c\u5de6\uff09\uff0c\u8868\u793a\u4e3a 3D Numpy \u77e9\u9635\u3002\u8fd9\u4e9b\u56fe\u50cf\u6709\u70b9\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5c0f\u7684\u9884\u5904\u7406\u51fd\u6570\uff0c\u5c06\u56fe\u50cf\u88c1\u526a\u5e76\u7f29\u5c0f\u5230 88\u00d780 \u50cf\u7d20\uff0c\u5c06\u5176\u8f6c\u6362\u6210\u7070\u5ea6\uff0c\u5e76\u63d0\u9ad8 Ms.Pac-Man \u7684\u5bf9\u6bd4\u5ea6\u3002\u8fd9\u5c06\u51cf\u5c11 DQN \u6240\u9700\u7684\u8ba1\u7b97\u91cf\uff0c\u5e76\u52a0\u5feb\u57f9\u8bad\u7ec3\u3002 mspacman_color = np.array([210, 164, 74]).mean() def preprocess_observation(obs): img = obs[1:176:2, ::2] # \u88c1\u526a img = img.mean(axis=2) # \u7070\u5ea6\u5316 img[img==mspacman_color] = 0 # \u63d0\u5347\u5bf9\u6bd4\u5ea6 img = (img - 128) / 128 - 1 # \u6b63\u5219\u5316\u4e3a-1\u52301. return img.reshape(88, 80, 1) \u8fc7\u7a0b\u7684\u7ed3\u679c\u5982\u56fe 16-9 \u6240\u793a\uff08\u53f3\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u521b\u5efa DQN\u3002\u5b83\u53ef\u4ee5\u53ea\u53d6\u4e00\u4e2a\u72b6\u6001\u52a8\u4f5c\u5bf9 (S,A) \u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u8f93\u51fa\u76f8\u5e94\u7684 Q \u503c Q(s,a) \u7684\u4f30\u8ba1\u503c\uff0c\u4f46\u662f\u7531\u4e8e\u52a8\u4f5c\u662f\u79bb\u6563\u7684\uff0c\u6240\u4ee5\u4f7f\u7528\u53ea\u4f7f\u7528\u72b6\u6001 S \u4f5c\u4e3a\u8f93\u5165\u5e76\u8f93\u51fa\u6bcf\u4e2a\u52a8\u4f5c\u7684\u4e00\u4e2a Q \u503c\u4f30\u8ba1\u7684\u795e\u7ecf\u7f51\u7edc\u662f\u66f4\u65b9\u4fbf\u7684\u3002DQN \u5c06\u7531\u4e09\u4e2a\u5377\u79ef\u5c42\u7ec4\u6210\uff0c\u63a5\u7740\u662f\u4e24\u4e2a\u5168\u8fde\u63a5\u5c42\uff0c\u5176\u4e2d\u5305\u62ec\u8f93\u51fa\u5c42\uff08\u5982\u56fe 16-10\uff09\u3002 \u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7684\u8bad\u7ec3\u7b97\u6cd5\u9700\u8981\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u67b6\u6784\uff08\u4f46\u4e0d\u540c\u53c2\u6570\uff09\u7684 DQN\uff1a\u4e00\u4e2a\u5c06\u5728\u8bad\u7ec3\u671f\u95f4\u7528\u4e8e\u9a71\u52a8 Ms.Pac-Man\uff08the actor \uff0c\u884c\u52a8\u8005\uff09\uff0c\u53e6\u4e00\u4e2a\u5c06\u89c2\u770b\u884c\u52a8\u8005\u5e76\u4ece\u5176\u8bd5\u9a8c\u548c\u9519\u8bef\u4e2d\u5b66\u4e60\uff08the critic \uff0c\u8bc4\u5224\u8005\uff09\u3002\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\uff0c\u6211\u4eec\u628a\u8bc4\u5224\u8005\u7f51\u7edc\u590d\u5236\u7ed9\u884c\u52a8\u8005\u7f51\u7edc\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u76f8\u540c\u7684 DQN\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a q_network() \u51fd\u6570\u6765\u6784\u5efa\u5b83\u4eec\uff1a from tensorflow.contrib.layers import convolution2d, fully_connected input_height = 88 input_width = 80 input_channels = 1 conv_n_maps = [32, 64, 64] conv_kernel_sizes = [(8,8), (4,4), (3,3)] conv_strides = [4, 2, 1] conv_paddings = [\"SAME\"]*3 conv_activation = [tf.nn.relu]*3 n_hidden_in = 64 * 11 * 10 # conv3 \u6709 64 \u4e2a 11x10 \u6620\u5c04 each n_hidden = 512 hidden_activation = tf.nn.relu n_outputs = env.action_space.n # 9\u4e2a\u79bb\u6563\u52a8\u4f5c initializer = tf.contrib.layers.variance_scaling_initializer() def q_network(X_state, scope): prev_layer = X_state conv_layers = [] with tf.variable_scope(scope) as scope: for n_maps, kernel_size, stride, padding, activation in zip(conv_n_maps, conv_kernel_sizes, conv_strides, conv_paddings, conv_activation): prev_layer = convolution2d(prev_layer, num_outputs=n_maps, kernel_size=kernel_size, stride=stride, padding=padding, activation_fn=activation, weights_initializer=initializer) conv_layers.append(prev_layer) last_conv_layer_flat = tf.reshape(prev_layer, shape=[-1, n_hidden_in]) hidden = fully_connected(last_conv_layer_flat, n_hidden, activation_fn=hidden_activation, weights_initializer=initializer) outputs = fully_connected(hidden, n_outputs, activation_fn=None, weights_initializer=initializer) trainable_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope=scope.name) trainable_vars_by_name = {var.name[len(scope.name):]: var for var in trainable_vars} return outputs, trainable_vars_by_name \u8be5\u4ee3\u7801\u7684\u7b2c\u4e00\u90e8\u5206\u5b9a\u4e49\u4e86DQN\u4f53\u7cfb\u7ed3\u6784\u7684\u8d85\u53c2\u6570\u3002\u7136\u540e q_network() \u51fd\u6570\u521b\u5efa DQN\uff0c\u5c06\u73af\u5883\u7684\u72b6\u6001 X_state \u4f5c\u4e3a\u8f93\u5165\uff0c\u4ee5\u53ca\u53d8\u91cf\u8303\u56f4\u7684\u540d\u79f0\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u53ea\u4f7f\u7528\u4e00\u4e2a\u89c2\u5bdf\u6765\u8868\u793a\u73af\u5883\u7684\u72b6\u6001\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6ca1\u6709\u9690\u85cf\u7684\u72b6\u6001\uff08\u9664\u4e86\u95ea\u70c1\u7684\u7269\u4f53\u548c\u9b3c\u9b42\u7684\u65b9\u5411\uff09\u3002 trainable_vars_by_name \u5b57\u5178\u6536\u96c6\u4e86\u6240\u6709 DQN \u7684\u53ef\u8bad\u7ec3\u53d8\u91cf\u3002\u5f53\u6211\u4eec\u521b\u5efa\u64cd\u4f5c\u4ee5\u5c06\u8bc4\u8bba\u5bb6 DQN \u590d\u5236\u5230\u884c\u52a8\u8005 DQN \u65f6\uff0c\u8fd9\u5c06\u662f\u6709\u7528\u7684\u3002\u5b57\u5178\u7684\u952e\u662f\u53d8\u91cf\u7684\u540d\u79f0\uff0c\u53bb\u6389\u4e0e\u8303\u56f4\u540d\u79f0\u76f8\u5bf9\u5e94\u7684\u524d\u7f00\u7684\u4e00\u90e8\u5206\u3002\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a >>> trainable_vars_by_name {'/Conv/biases:0': <tensorflow.python.ops.variables.Variable at 0x121cf7b50>, '/Conv/weights:0': <tensorflow.python.ops.variables.Variable...>, '/Conv_1/biases:0': <tensorflow.python.ops.variables.Variable...>, '/Conv_1/weights:0': <tensorflow.python.ops.variables.Variable...>, '/Conv_2/biases:0': <tensorflow.python.ops.variables.Variable...>, '/Conv_2/weights:0': <tensorflow.python.ops.variables.Variable...>, '/fully_connected/biases:0': <tensorflow.python.ops.variables.Variable...>, '/fully_connected/weights:0': <tensorflow.python.ops.variables.Variable...>, '/fully_connected_1/biases:0': <tensorflow.python.ops.variables.Variable...>, '/fully_connected_1/weights:0': <tensorflow.python.ops.variables.Variable...>} \u73b0\u5728\u8ba9\u6211\u4eec\u4e3a\u4e24\u4e2a DQN \u521b\u5efa\u8f93\u5165\u5360\u4f4d\u7b26\uff0c\u4ee5\u53ca\u590d\u5236\u8bc4\u8bba\u5bb6 DQN \u7ed9\u884c\u52a8\u8005 DQN \u7684\u64cd\u4f5c\uff1a X_state = tf.placeholder(tf.float32, shape=[None, input_height, input_width,input_channels]) actor_q_values, actor_vars = q_network(X_state, scope=\"q_networks/actor\") critic_q_values, critic_vars = q_network(X_state, scope=\"q_networks/critic\") copy_ops = [actor_var.assign(critic_vars[var_name]) for var_name, actor_var in actor_vars.items()] copy_critic_to_actor = tf.group(*copy_ops) \u8ba9\u6211\u4eec\u540e\u9000\u4e00\u6b65\uff1a\u6211\u4eec\u73b0\u5728\u6709\u4e24\u4e2a DQN\uff0c\u5b83\u4eec\u90fd\u80fd\u591f\u5c06\u73af\u5883\u72b6\u6001\uff08\u5373\u9884\u5904\u7406\u89c2\u5bdf\uff09\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u8f93\u51fa\u5728\u8be5\u72b6\u6001\u4e0b\u7684\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u52a8\u4f5c\u7684\u4f30\u8ba1 Q \u503c\u3002\u53e6\u5916\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a copy_critic_to_actor \u7684\u64cd\u4f5c\uff0c\u5c06\u8bc4\u8bba\u5bb6 DQN \u7684\u6240\u6709\u53ef\u8bad\u7ec3\u53d8\u91cf\u590d\u5236\u5230\u884c\u52a8\u8005 DQN\u3002\u6211\u4eec\u4f7f\u7528 TensorFlow \u7684 tf.group() \u51fd\u6570\u5c06\u6240\u6709\u8d4b\u503c\u64cd\u4f5c\u5206\u7ec4\u5230\u4e00\u4e2a\u65b9\u4fbf\u7684\u64cd\u4f5c\u4e2d\u3002 \u884c\u52a8\u8005 DQN \u53ef\u4ee5\u7528\u6765\u626e\u6f14 Ms.Pac-Man\uff08\u6700\u521d\u975e\u5e38\u7cdf\u7cd5\uff09\u3002\u6b63\u5982\u524d\u9762\u6240\u8ba8\u8bba\u7684\uff0c\u4f60\u5e0c\u671b\u5b83\u8db3\u591f\u6df1\u5165\u5730\u63a2\u7a76\u6e38\u620f\uff0c\u6240\u4ee5\u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u60f3\u5c06\u5b83\u7528 \u03b5 \u8d2a\u5a6a\u7b56\u7565\u6216\u53e6\u4e00\u79cd\u63a2\u7d22\u7b56\u7565\u76f8\u7ed3\u5408\u3002 \u4f46\u662f\u8bc4\u8bba\u5bb6 DQN \u5462\uff1f\u5b83\u5982\u4f55\u53bb\u5b66\u4e60\u73a9\u6e38\u620f\uff1f\u7b80\u800c\u8a00\u4e4b\uff0c\u5b83\u5c06\u8bd5\u56fe\u4f7f\u5176\u9884\u6d4b\u7684 Q \u503c\u53bb\u5339\u914d\u884c\u52a8\u8005\u901a\u8fc7\u5176\u7ecf\u9a8c\u7684\u6e38\u620f\u4f30\u8ba1\u7684 Q \u503c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u8ba9\u884c\u52a8\u8005\u73a9\u4e00\u6bb5\u65f6\u95f4\uff0c\u628a\u6240\u6709\u7684\u7ecf\u9a8c\u4fdd\u5b58\u5728\u56de\u653e\u8bb0\u5fc6\u5b58\u50a8\u5668\u4e2d\u3002\u6bcf\u4e2a\u8bb0\u5fc6\u5c06\u662f\u4e00\u4e2a 5 \u5143\u7ec4\uff08\u72b6\u6001\u3001\u52a8\u4f5c\u3001\u4e0b\u4e00\u72b6\u6001\u3001\u5956\u52b1\u3001\u7ee7\u7eed\uff09\uff0c\u5176\u4e2d\u201c\u7ee7\u7eed\u201d\u9879\u5728\u6e38\u620f\u7ed3\u675f\u65f6\u7b49\u4e8e 0\uff0c\u5426\u5219\u4e3a 1\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9a\u671f\u5730\u4ece\u56de\u653e\u5b58\u50a8\u5668\u4e2d\u91c7\u6837\u4e00\u6279\u8bb0\u5fc6\uff0c\u5e76\u4e14\u6211\u4eec\u5c06\u4f30\u8ba1\u8fd9\u4e9b\u5b58\u50a8\u5668\u4e2d\u7684 Q \u503c\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u76d1\u7763\u5b66\u4e60\u6280\u672f\u8bad\u7ec3\u8bc4\u8bba\u5bb6 DQN \u53bb\u9884\u6d4b\u8fd9\u4e9b Q \u503c\u3002\u6bcf\u9694\u51e0\u4e2a\u8bad\u7ec3\u5468\u671f\uff0c\u6211\u4eec\u4f1a\u628a\u8bc4\u8bba\u5bb6 DQN \u590d\u5236\u5230\u884c\u52a8\u8005 DQN\u3002\u5c31\u8fd9\u6837\uff01\u516c\u5f0f 16-7 \u793a\u51fa\u4e86\u7528\u4e8e\u8bad\u7ec3\u8bc4\u8bba\u5bb6 DQN \u7684\u635f\u5931\u51fd\u6570\uff1a \u5176\u4e2d\uff1a \u548c \u5206\u522b\u4e3a\u72b6\u6001\uff0c\u884c\u4e3a\uff0c\u56de\u62a5\uff0c\u548c\u4e0b\u4e00\u72b6\u6001\uff0c\u5747\u4ece\u5b58\u50a8\u5668\u4e2d\u7b2c i \u6b21\u91c7\u6837\u5f97\u5230 m \u662f\u8bb0\u5fc6\u6279\u5904\u7406\u7684\u957f\u5ea6 \u03b8 critic\u548c \u03b8actor \u4e3a\u8bc4\u8bba\u8005\u548c\u884c\u52a8\u8005\u7684\u53c2\u6570 \u662f\u8bc4\u8bba\u5bb6 DQN \u5bf9\u7b2c i \u8bb0\u5fc6\u72b6\u6001\u884c\u4e3a Q \u503c\u7684\u9884\u6d4b \u662f\u6f14\u5458 DQN \u5728\u9009\u62e9\u52a8\u4f5c A' \u65f6\u7684\u4e0b\u4e00\u72b6\u6001 S' \u7684\u671f\u671b Q \u503c\u7684\u9884\u6d4b y \u662f\u7b2c i \u8bb0\u5fc6\u7684\u76ee\u6807 Q \u503c\uff0c\u6ce8\u610f\uff0c\u5b83\u7b49\u540c\u4e8e\u884c\u52a8\u8005\u5b9e\u9645\u89c2\u5bdf\u5230\u7684\u5956\u52b1\uff0c\u518d\u52a0\u4e0a\u884c\u52a8\u8005\u5bf9\u5982\u679c\u5b83\u80fd\u53d1\u6325\u6700\u4f73\u6548\u679c\uff08\u636e\u5b83\u6240\u77e5\uff09\uff0c\u672a\u6765\u7684\u56de\u62a5\u5e94\u8be5\u662f\u4ec0\u4e48\u7684\u9884\u6d4b\u3002 J \u4e3a\u8bad\u7ec3\u8bc4\u8bba\u5bb6 DQN \u7684\u635f\u5931\u51fd\u6570\u3002\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u8fd9\u53ea\u662f\u7531\u884c\u52a8\u8005 DQN \u4f30\u8ba1\u7684\u76ee\u6807 Q \u503c y \u548c\u8bc4\u8bba\u5bb6 DQN \u5bf9\u8fd9\u4e9b Q \u503c\u7684\u9884\u6d4b\u4e4b\u95f4\u7684\u5747\u65b9\u8bef\u5dee\u3002 \u56de\u653e\u8bb0\u5fc6\u662f\u53ef\u9009\u7684\uff0c\u4f46\u5f3a\u70c8\u63a8\u8350\u4f7f\u5b83\u5b58\u5728\u3002\u6ca1\u6709\u5b83\uff0c\u4f60\u4f1a\u8bad\u7ec3\u8bc4\u8bba\u5bb6 DQN \u4f7f\u7528\u8fde\u7eed\u7684\u7ecf\u9a8c\uff0c\u8fd9\u53ef\u80fd\u662f\u76f8\u5173\u7684\u3002\u8fd9\u5c06\u5f15\u5165\u5927\u91cf\u7684\u504f\u5dee\u5e76\u4e14\u51cf\u6162\u8bad\u7ec3\u7b97\u6cd5\u7684\u6536\u655b\u6027\u3002\u901a\u8fc7\u4f7f\u7528\u56de\u653e\u8bb0\u5fc6\uff0c\u6211\u4eec\u786e\u4fdd\u9988\u9001\u5230\u8bad\u7ec3\u7b97\u6cd5\u7684\u5b58\u50a8\u5668\u53ef\u4ee5\u662f\u4e0d\u76f8\u5173\u7684\u3002 \u8ba9\u6211\u4eec\u6dfb\u52a0\u8bc4\u8bba\u5bb6 DQN \u7684\u8bad\u7ec3\u64cd\u4f5c\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u8ba1\u7b97\u5176\u5728\u5b58\u50a8\u5668\u6279\u5904\u7406\u4e2d\u7684\u6bcf\u4e2a\u72b6\u6001\u52a8\u4f5c\u7684\u9884\u6d4b Q \u503c\u3002\u7531\u4e8e DQN \u4e3a\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u52a8\u4f5c\u8f93\u51fa\u4e00\u4e2a Q \u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u6301\u4e0e\u5728\u8be5\u5b58\u50a8\u5668\u4e2d\u5b9e\u9645\u9009\u62e9\u7684\u52a8\u4f5c\u76f8\u5bf9\u5e94\u7684 Q \u503c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u628a\u52a8\u4f5c\u8f6c\u6362\u6210\u4e00\u4e2a\u70ed\u5411\u91cf\uff08\u8bb0\u4f4f\u8fd9\u662f\u4e00\u4e2a\u6ee1\u662f 0 \u7684\u5411\u91cf\uff0c\u9664\u4e86\u7b2c i \u4e2a\u7d22\u5f15\u4e2d\u76841\uff09\uff0c\u5e76\u4e58\u4ee5 Q \u503c\uff1a\u8fd9\u5c06\u5220\u9664\u6240\u6709\u4e0e\u8bb0\u5fc6\u52a8\u4f5c\u5bf9\u5e94\u7684 Q \u503c\u5916\u7684 Q \u503c\u3002\u7136\u540e\u53ea\u5bf9\u7b2c\u4e00\u8f74\u6c42\u548c\uff0c\u4ee5\u83b7\u5f97\u6bcf\u4e2a\u5b58\u50a8\u5668\u6240\u9700\u7684 Q \u503c\u9884\u6d4b\u3002 X_action = tf.placeholder(tf.int32, shape=[None]) q_value = tf.reduce_sum(critic_q_values * tf.one_hot(X_action, n_outputs), axis=1, keep_dims=True) \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u8bad\u7ec3\u64cd\u4f5c\uff0c\u5047\u8bbe\u76ee\u6807Q\u503c\u5c06\u901a\u8fc7\u5360\u4f4d\u7b26\u9988\u5165\u3002\u6211\u4eec\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a\u4e0d\u53ef\u8bad\u7ec3\u7684\u53d8\u91cf global_step \u3002\u4f18\u5316\u5668\u7684 minimize() \u64cd\u4f5c\u5c06\u8d1f\u8d23\u589e\u52a0\u5b83\u3002\u53e6\u5916\uff0c\u6211\u4eec\u521b\u5efa\u4e86 init \u64cd\u4f5c\u548c Saver \u3002 y = tf.placeholder(tf.float32, shape=[None, 1]) cost = tf.reduce_mean(tf.square(y - q_value)) global_step = tf.Variable(0, trainable=False, name='global_step') optimizer = tf.train.AdamOptimizer(learning_rate) training_op = optimizer.minimize(cost, global_step=global_step) init = tf.global_variables_initializer() saver = tf.train.Saver() \u8fd9\u5c31\u662f\u8bad\u7ec3\u9636\u6bb5\u7684\u60c5\u51b5\u3002\u5728\u6211\u4eec\u67e5\u770b\u6267\u884c\u9636\u6bb5\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5de5\u5177\u3002\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4ece\u56de\u653e\u8bb0\u5fc6\u5f00\u59cb\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a deque \u5217\u8868\uff0c\u56e0\u4e3a\u5728\u5c06\u6570\u636e\u63a8\u9001\u5230\u961f\u5217\u4e2d\u5e76\u5728\u8fbe\u5230\u6700\u5927\u5185\u5b58\u5927\u5c0f\u65f6\u4ece\u5217\u8868\u7684\u672b\u5c3e\u5f39\u51fa\u5b83\u4eec\u4f7f\u662f\u975e\u5e38\u6709\u6548\u7684\u3002\u6211\u4eec\u8fd8\u5c06\u7f16\u5199\u4e00\u4e2a\u5c0f\u51fd\u6570\u6765\u968f\u673a\u5730\u4ece\u56de\u653e\u8bb0\u5fc6\u4e2d\u91c7\u6837\u4e00\u6279\u5904\u7406\uff1a from collections import deque replay_memory_size = 10000 replay_memory = deque([], maxlen=replay_memory_size) def sample_memories(batch_size): indices = rnd.permutation(len(replay_memory))[:batch_size] cols = [[], [], [], [], []] # state, action, reward, next_state, continue for idx in indices: memory = replay_memory[idx] for col, value in zip(cols, memory): col.append(value) cols = [np.array(col) for col in cols] return (cols[0], cols[1], cols[2].reshape(-1, 1), cols[3],cols[4].reshape(-1, 1)) \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u884c\u52a8\u8005\u6765\u63a2\u7d22\u6e38\u620f\u3002\u6211\u4eec\u4f7f\u7528 \u03b5 \u8d2a\u5a6a\u7b56\u7565\uff0c\u5e76\u5728 50000 \u4e2a\u8bad\u7ec3\u6b65\u9aa4\u4e2d\u9010\u6b65\u5c06 \u03b5 \u4ece 1 \u964d\u4f4e\u5230 0.05\u3002 eps_min = 0.05 eps_max = 1.0 eps_decay_steps = 50000 def epsilon_greedy(q_values, step): epsilon = max(eps_min, eps_max - (eps_max-eps_min) * step/eps_decay_steps) if rnd.rand() < epsilon: return rnd.randint(n_outputs) # \u968f\u673a\u52a8\u4f5c else: return np.argmax(q_values) # \u6700\u4f18\u52a8\u4f5c \u5c31\u662f\u8fd9\u6837\uff01\u6211\u4eec\u51c6\u5907\u597d\u5f00\u59cb\u8bad\u7ec3\u4e86\u3002\u6267\u884c\u9636\u6bb5\u4e0d\u5305\u542b\u592a\u590d\u6742\u7684\u4e1c\u897f\uff0c\u4f46\u5b83\u6709\u70b9\u957f\uff0c\u6240\u4ee5\u6df1\u547c\u5438\u3002\u51c6\u5907\u597d\u4e86\u5417\uff1f\u6765\u6b21\u591f\uff01\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u521d\u59cb\u5316\u51e0\u4e2a\u53d8\u91cf\uff1a n_steps = 100000 # \u603b\u7684\u8bad\u7ec3\u6b65\u957f training_start = 1000 # \u5728\u6e38\u620f1000\u6b21\u8fed\u4ee3\u540e\u5f00\u59cb\u8bad\u7ec3 training_interval = 3 # \u6bcf3\u6b21\u8fed\u4ee3\u8bad\u7ec3\u4e00\u6b21 save_steps = 50 # \u6bcf50\u8bad\u7ec3\u6b65\u957f\u4fdd\u5b58\u6a21\u578b copy_steps = 25 # \u6bcf25\u8bad\u7ec3\u6b65\u957f\u540e\u590d\u5236\u8bc4\u8bba\u5bb6Q\u503c\u5230\u884c\u52a8\u8005 discount_rate = 0.95 skip_start = 90 # \u8df3\u8fc7\u6e38\u620f\u5f00\u59cb(\u53ea\u662f\u7b49\u5f85\u65f6\u95f4) batch_size = 50 iteration = 0 # \u6e38\u620f\u8fed\u4ee3 checkpoint_path = \"./my_dqn.ckpt\" done = True # env \u9700\u8981\u88ab\u91cd\u7f6e \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6253\u5f00\u4f1a\u8bdd\u5e76\u5f00\u59cb\u8bad\u7ec3\uff1a with tf.Session() as sess: if os.path.isfile(checkpoint_path): saver.restore(sess, checkpoint_path) else: init.run() while True: step = global_step.eval() if step >= n_steps: break iteration += 1 if done: # \u6e38\u620f\u7ed3\u675f\uff0c\u91cd\u6765 obs = env.reset() for skip in range(skip_start): # \u8df3\u8fc7\u6e38\u620f\u5f00\u5934 obs, reward, done, info = env.step(0) state = preprocess_observation(obs) # \u884c\u52a8\u8005\u8bc4\u4f30\u8981\u5e72\u4ec0\u4e48 q_values = actor_q_values.eval(feed_dict={X_state: [state]}) action = epsilon_greedy(q_values, step) # \u884c\u52a8\u8005\u5f00\u59cb\u73a9\u6e38\u620f obs, reward, done, info = env.step(action) next_state = preprocess_observation(obs) # \u8ba9\u6211\u4eec\u8bb0\u4e0b\u6765\u521a\u624d\u53d1\u751f\u4e86\u5565 replay_memory.append((state, action, reward, next_state, 1.0 - done)) state = next_state if iteration < training_start or iteration % training_interval != 0: continue # \u8bc4\u8bba\u5bb6\u5b66\u4e60 X_state_val, X_action_val, rewards, X_next_state_val, continues = ( sample_memories(batch_size)) next_q_values = actor_q_values.eval( feed_dict={X_state: X_next_state_val}) max_next_q_values = np.max(next_q_values, axis=1, keepdims=True) y_val = rewards + continues * discount_rate * max_next_q_values training_op.run(feed_dict={X_state: X_state_val,X_action: X_action_val, y: y_val}) # \u590d\u5236\u8bc4\u8bba\u5bb6Q\u503c\u5230\u884c\u52a8\u8005 if step % copy_steps == 0: copy_critic_to_actor.run() # \u4fdd\u5b58\u6a21\u578b if step % save_steps == 0: saver.save(sess, checkpoint_path) \u5982\u679c\u68c0\u67e5\u70b9\u6587\u4ef6\u5b58\u5728\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u6062\u590d\u6a21\u578b\uff0c\u5426\u5219\u6211\u4eec\u53ea\u9700\u521d\u59cb\u5316\u53d8\u91cf\u3002\u7136\u540e\uff0c\u4e3b\u5faa\u73af\u5f00\u59cb\uff0c\u5176\u4e2d iteration \u8ba1\u7b97\u4ece\u7a0b\u5e8f\u5f00\u59cb\u4ee5\u6765\u6e38\u620f\u6b65\u9aa4\u7684\u603b\u6570\uff0c\u540c\u65f6 step \u8ba1\u7b97\u4ece\u8bad\u7ec3\u5f00\u59cb\u7684\u8bad\u7ec3\u6b65\u9aa4\u7684\u603b\u6570\uff08\u5982\u679c\u6062\u590d\u4e86\u68c0\u67e5\u70b9\uff0c\u4e5f\u6062\u590d\u5168\u5c40\u6b65\u9aa4\uff09\u3002\u7136\u540e\u4ee3\u7801\u91cd\u7f6e\u6e38\u620f\uff08\u8df3\u8fc7\u7b2c\u4e00\u4e2a\u65e0\u804a\u7684\u7b49\u5f85\u6e38\u620f\u7684\u6b65\u9aa4\uff0c\u8fd9\u6b65\u9aa4\u5565\u90fd\u6ca1\u6709\uff09\u3002\u63a5\u4e0b\u6765\uff0c\u884c\u52a8\u8005\u8bc4\u4f30\u8be5\u505a\u4ec0\u4e48\uff0c\u5e76\u4e14\u73a9\u6e38\u620f\uff0c\u5e76\u4e14\u5b83\u7684\u7ecf\u9a8c\u88ab\u5b58\u50a8\u5728\u56de\u653e\u8bb0\u5fc6\u4e2d\u3002\u7136\u540e\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff08\u70ed\u8eab\u671f\u540e\uff09\uff0c\u8bc4\u8bba\u5bb6\u5f00\u59cb\u4e00\u4e2a\u8bad\u7ec3\u6b65\u9aa4\u3002\u5b83\u91c7\u6837\u4e00\u6279\u56de\u653e\u8bb0\u5fc6\uff0c\u5e76\u8981\u6c42\u884c\u52a8\u8005\u4f30\u8ba1\u4e0b\u4e00\u72b6\u6001\u7684\u6240\u6709\u52a8\u4f5c\u7684Q\u503c\uff0c\u5e76\u5e94\u7528\u516c\u5f0f 16-7 \u6765\u8ba1\u7b97\u76ee\u6807 Q \u503c y_val .\u8fd9\u91cc\u552f\u4e00\u68d8\u624b\u7684\u90e8\u5206\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684 Q \u503c\u4e58\u4ee5 continues \u5411\u91cf\uff0c\u4ee5\u5c06\u5bf9\u5e94\u4e8e\u6e38\u620f\u7ed3\u675f\u7684\u8bb0\u5fc6 Q \u503c\u6e05\u96f6\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fdb\u884c\u8bad\u7ec3\u64cd\u4f5c\uff0c\u4ee5\u63d0\u9ad8\u8bc4\u8bba\u5bb6\u9884\u6d4b Q \u503c\u7684\u80fd\u529b\u3002\u6700\u540e\uff0c\u6211\u4eec\u5b9a\u671f\u5c06\u8bc4\u8bba\u5bb6\u7684 Q \u503c\u590d\u5236\u7ed9\u884c\u52a8\u8005\uff0c\u7136\u540e\u4fdd\u5b58\u6a21\u578b\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u662f\u975e\u5e38\u7f13\u6162\u7684\uff1a\u5982\u679c\u4f60\u4f7f\u7528\u4f60\u7684\u7834\u7b14\u8bb0\u672c\u7535\u8111\u8fdb\u884c\u8bad\u7ec3\u7684\u8bdd\uff0c\u60f3\u8ba9 Ms. Pac-Man \u53d8\u597d\u4e00\u70b9\u70b9\u4f60\u5f97\u82b1\u597d\u51e0\u5929\uff0c\u5982\u679c\u4f60\u770b\u770b\u5b66\u4e60\u66f2\u7ebf\uff0c\u8ba1\u7b97\u4e00\u4e0b\u6bcf\u6b21\u7684\u5e73\u5747\u5956\u52b1\uff0c\u4f60\u4f1a\u53d1\u73b0\u5230\u5b83\u662f\u975e\u5e38\u5608\u6742\u7684\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u53ef\u80fd\u6ca1\u6709\u660e\u663e\u7684\u8fdb\u5c55\uff0c\u76f4\u5230\u667a\u80fd\u4f53\u5b66\u4f1a\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u751f\u5b58\u3002\u5982\u524d\u6240\u8ff0\uff0c\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u5148\u9a8c\u77e5\u8bc6\u6ce8\u5165\u5230\u6a21\u578b\u4e2d\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u9884\u5904\u7406\u3001\u5956\u52b1\u7b49\uff09\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u9996\u5148\u8bad\u7ec3\u5b83\u6765\u6a21\u4eff\u57fa\u672c\u7b56\u7565\u6765\u5f15\u5bfc\u6a21\u578b\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0cRL\u4ecd\u7136\u9700\u8981\u76f8\u5f53\u591a\u7684\u8010\u5fc3\u548c\u8c03\u6574\uff0c\u4f46\u6700\u7ec8\u7ed3\u679c\u662f\u975e\u5e38\u4ee4\u4eba\u5174\u594b\u7684\u3002","title":"\u5b66\u4e60\u53bb\u4f7f\u7528\u6df1\u5ea6 Q \u5b66\u4e60\u6765\u73a9 Ms.Pac-Man"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_9","text":"\u4f60\u600e\u6837\u53bb\u5b9a\u4e49\u5f3a\u5316\u5b66\u4e60\uff1f\u5b83\u4e0e\u4f20\u7edf\u7684\u76d1\u7763\u4ee5\u53ca\u975e\u76d1\u7763\u5b66\u4e60\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f \u4f60\u80fd\u60f3\u5230\u4ec0\u4e48\u672c\u7ae0\u6ca1\u6709\u63d0\u5230\u8fc7\u7684\u5f3a\u5316\u5b66\u4e60\u5e94\u7528\uff1f\u667a\u80fd\u4f53\u662f\u4ec0\u4e48\uff1f\u4ec0\u4e48\u662f\u53ef\u80fd\u7684\u52a8\u4f5c\uff0c\u4ec0\u4e48\u662f\u5956\u52b1\uff1f \u4ec0\u4e48\u662f\u8870\u51cf\u7387\uff1f\u5982\u679c\u4f60\u4fee\u6539\u4e86\u8870\u51cf\u7387\u90a3\u6700\u4f18\u7b56\u7565\u4f1a\u53d8\u5316\u5417\uff1f \u4f60\u600e\u4e48\u53bb\u5b9a\u4e49\u5f3a\u5316\u5b66\u4e60\u667a\u80fd\u4f53\u7684\u8868\u73b0\uff1f \u4ec0\u4e48\u662f\u4fe1\u7528\u8bc4\u4f30\u95ee\u9898\uff1f\u5b83\u600e\u4e48\u51fa\u73b0\u7684\uff1f\u4f60\u600e\u4e48\u89e3\u51b3\uff1f \u4f7f\u7528\u56de\u653e\u8bb0\u5fc6\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f \u4ec0\u4e48\u662f\u95ed\u7b56\u7565 RL \u7b97\u6cd5\uff1f \u4f7f\u7528\u6df1\u5ea6 Q \u5b66\u4e60\u6765\u5904\u7406 OpenAI gym \u7684\u201cBypedalWalker-v2\u201d \u3002QNET \u4e0d\u9700\u8981\u5bf9\u8fd9\u4e2a\u4efb\u52a1\u4f7f\u7528\u975e\u5e38\u6df1\u7684\u7f51\u7edc\u3002 \u4f7f\u7528\u7b56\u7565\u68af\u5ea6\u8bad\u7ec3\u667a\u80fd\u4f53\u626e\u6f14 Pong\uff0c\u4e00\u4e2a\u8457\u540d\u7684 Atari \u6e38\u620f\uff08PANV0 \u5728 OpenAI gym \u7684 Pong-v0\uff09\u3002\u6ce8\u610f\uff1a\u4e2a\u4eba\u7684\u89c2\u5bdf\u4e0d\u8db3\u4ee5\u8bf4\u660e\u7403\u7684\u65b9\u5411\u548c\u901f\u5ea6\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u6b21\u5c06\u4e24\u6b21\u89c2\u6d4b\u4f20\u9012\u7ed9\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\u3002\u4e3a\u4e86\u51cf\u5c11\u7ef4\u5ea6\u548c\u52a0\u901f\u8bad\u7ec3\uff0c\u4f60\u5fc5\u987b\u9884\u5148\u5904\u7406\u8fd9\u4e9b\u56fe\u50cf\uff08\u88c1\u526a\uff0c\u8c03\u6574\u5927\u5c0f\uff0c\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u6210\u9ed1\u767d\uff09\uff0c\u5e76\u53ef\u80fd\u5c06\u5b83\u4eec\u5408\u5e76\u6210\u5355\u4e2a\u56fe\u50cf\uff08\u4f8b\u5982\u53bb\u53e0\u52a0\u5b83\u4eec\uff09\u3002 \u5982\u679c\u4f60\u6709\u5927\u7ea6 100 \u7f8e\u5143\u5907\u7528\uff0c\u4f60\u53ef\u4ee5\u8d2d\u4e70 Raspberry Pi 3 \u518d\u52a0\u4e0a\u4e00\u4e9b\u4fbf\u5b9c\u7684\u673a\u5668\u4eba\u7ec4\u4ef6\uff0c\u5728 PI \u4e0a\u5b89\u88c5 TensorFlow\uff0c\u7136\u540e\u8ba9\u6211\u4eec\u55e8\u8d77\u6765~\uff01\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u770b\u770b Lukas Biewald \u7684\u8fd9\u4e2a\u6709\u8da3\u7684\u5e16\u5b50\uff0c\u6216\u8005\u770b\u770b GoPiGo \u6216 BrickPi\u3002\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u901a\u8fc7\u4f7f\u7528\u7b56\u7565\u68af\u5ea6\u8bad\u7ec3\u673a\u5668\u4eba\u6765\u6784\u5efa\u771f\u5b9e\u7684 cartpole \uff1f\u6216\u8005\u9020\u4e00\u4e2a\u673a\u5668\u4eba\u8718\u86db\uff0c\u8ba9\u5b83\u5b66\u4f1a\u8d70\u8def\uff1b\u5f53\u5b83\u63a5\u8fd1\u67d0\u4e2a\u76ee\u6807\u65f6\uff0c\u7ed9\u4e88\u5956\u52b1\uff08\u4f60\u9700\u8981\u4f20\u611f\u5668\u6765\u6d4b\u91cf\u76ee\u6807\u7684\u8ddd\u79bb\uff09\u3002\u552f\u4e00\u7684\u9650\u5236\u5c31\u662f\u4f60\u7684\u60f3\u8c61\u529b\u3002 \u7ec3\u4e60\u7b54\u6848\u5747\u5728\u9644\u5f55 A\u3002","title":"\u7ec3\u4e60"},{"location":"16.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/#_10","text":"\u5728\u6211\u4eec\u7ed3\u675f\u8fd9\u672c\u4e66\u7684\u6700\u540e\u4e00\u7ae0\u4e4b\u524d\uff0c\u6211\u60f3\u611f\u8c22\u4f60\u4eec\u8bfb\u5230\u6700\u540e\u4e00\u6bb5\u3002\u6211\u771f\u5fc3\u5e0c\u671b\u4f60\u80fd\u50cf\u6211\u5199\u8fd9\u672c\u4e66\u4e00\u6837\u6109\u5feb\u5730\u9605\u8bfb\u8fd9\u672c\u4e66\uff0c\u8fd9\u5bf9\u4f60\u7684\u9879\u76ee\uff0c\u6216\u591a\u6216\u5c11\u90fd\u662f\u6709\u7528\u7684\u3002 \u5982\u679c\u53d1\u73b0\u9519\u8bef\uff0c\u8bf7\u53d1\u9001\u53cd\u9988\u3002\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u6211\u5f88\u60f3\u77e5\u9053\u4f60\u7684\u60f3\u6cd5\uff0c\u6240\u4ee5\u8bf7\u4e0d\u8981\u72b9\u8c6b\uff0c\u901a\u8fc7 O'Reilly \u6765\u4e0e\u6211\u8054\u7cfb\uff0c\u6216\u8005\u901a\u8fc7 ageron/handson-ml GITHUB \u9879\u76ee\u6765\u7ec3\u4e60\u3002 \u5bf9\u4f60\u6765\u8bf4\uff0c\u6211\u6700\u597d\u7684\u5efa\u8bae\u662f\u7ec3\u4e60\u548c\u7ec3\u4e60\uff1a\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u505a\u8fc7\u8fd9\u4e9b\u7ec3\u4e60\uff0c\u8bd5\u7740\u4f7f\u7528 Juyter notebook \u53c2\u52a0\u6240\u6709\u7684\u7ec3\u4e60\uff0c\u52a0\u5165 kaggle \u7f51\u7ad9\u6216\u5176\u4ed6 ML \u793e\u533a\uff0c\u770b ML \u8bfe\u7a0b\uff0c\u9605\u8bfb\u8bba\u6587\uff0c\u53c2\u52a0\u4f1a\u8bae\uff0c\u4f1a\u89c1\u4e13\u5bb6\u3002\u60a8\u53ef\u80fd\u8fd8\u60f3\u7814\u7a76\u6211\u4eec\u5728\u672c\u4e66\u4e2d\u6ca1\u6709\u6d89\u53ca\u7684\u4e00\u4e9b\u4e3b\u9898\uff0c\u5305\u62ec\u63a8\u8350\u7cfb\u7edf\u3001\u805a\u7c7b\u7b97\u6cd5\u3001\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5\u548c\u9057\u4f20\u7b97\u6cd5\u3002 \u6211\u6700\u5927\u7684\u5e0c\u671b\u662f\uff0c\u8fd9\u672c\u4e66\u5c06\u6fc0\u52b1\u4f60\u5efa\u7acb\u4e00\u4e2a\u7f8e\u5999\u7684 ML \u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u5c06\u6709\u5229\u4e8e\u6211\u4eec\u6240\u6709\u4eba\uff01\u90a3\u4f1a\u662f\u4ec0\u4e48\u5462\uff1f 2016 \u5e74 11 \u6708 26 \u65e5\uff0c\u5965\u5217\u4f26\u00b7\u683c\u4f26 \u4f60\u7684\u652f\u6301\uff0c\u662f\u6211\u4eec\u6bcf\u4e2a\u5f00\u6e90\u5de5\u4f5c\u8005\u7684\u9a84\u50b2\uff5e","title":"\u611f\u8c22"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/","text":"\u4e8c\u3001\u4e00\u4e2a\u5b8c\u6574\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee \u672c\u7ae0\u4e2d\uff0c\u4f60\u4f1a\u5047\u88c5\u4f5c\u4e3a\u88ab\u4e00\u5bb6\u5730\u4ea7\u516c\u53f8\u521a\u521a\u96c7\u4f63\u7684\u6570\u636e\u79d1\u5b66\u5bb6\uff0c\u5b8c\u6574\u5730\u5b66\u4e60\u4e00\u4e2a\u6848\u4f8b\u9879\u76ee\u3002\u4e0b\u9762\u662f\u4e3b\u8981\u6b65\u9aa4\uff1a \u9879\u76ee\u6982\u8ff0\u3002 \u83b7\u53d6\u6570\u636e\u3002 \u53d1\u73b0\u5e76\u53ef\u89c6\u5316\u6570\u636e\uff0c\u53d1\u73b0\u89c4\u5f8b\u3002 \u4e3a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u51c6\u5907\u6570\u636e\u3002 \u9009\u62e9\u6a21\u578b\uff0c\u8fdb\u884c\u8bad\u7ec3\u3002 \u5fae\u8c03\u6a21\u578b\u3002 \u7ed9\u51fa\u89e3\u51b3\u65b9\u6848\u3002 \u90e8\u7f72\u3001\u76d1\u63a7\u3001\u7ef4\u62a4\u7cfb\u7edf\u3002 \u4f7f\u7528\u771f\u5b9e\u6570\u636e \u5b66\u4e60\u673a\u5668\u5b66\u4e60\u65f6\uff0c\u6700\u597d\u4f7f\u7528\u771f\u5b9e\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4eba\u5de5\u6570\u636e\u96c6\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e0a\u5343\u4e2a\u5f00\u6e90\u6570\u636e\u96c6\u53ef\u4ee5\u8fdb\u884c\u9009\u62e9\uff0c\u6db5\u76d6\u591a\u4e2a\u9886\u57df\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u53ef\u4ee5\u67e5\u627e\u7684\u6570\u636e\u7684\u5730\u65b9\uff1a \u6d41\u884c\u7684\u5f00\u6e90\u6570\u636e\u4ed3\u5e93\uff1a UC Irvine Machine Learning Repository Kaggle datasets Amazon\u2019s AWS datasets \u51c6\u5165\u53e3\uff08\u63d0\u4f9b\u5f00\u6e90\u6570\u636e\u5217\u8868\uff09 http://dataportals.org/ http://opendatamonitor.eu/ http://quandl.com/ \u5176\u5b83\u5217\u51fa\u6d41\u884c\u5f00\u6e90\u6570\u636e\u4ed3\u5e93\u7684\u7f51\u9875\uff1a Wikipedia\u2019s list of Machine Learning datasets Quora.com question Datasets subreddit \u672c\u7ae0\uff0c\u6211\u4eec\u9009\u62e9\u7684\u662f StatLib \u7684\u52a0\u5dde\u623f\u4ea7\u4ef7\u683c\u6570\u636e\u96c6\uff08\u89c1\u56fe 2-1\uff09\u3002\u8fd9\u4e2a\u6570\u636e\u96c6\u662f\u57fa\u4e8e 1990 \u5e74\u52a0\u5dde\u666e\u67e5\u7684\u6570\u636e\u3002\u6570\u636e\u5df2\u7ecf\u6709\u70b9\u8001\uff081990 \u5e74\u8fd8\u80fd\u4e70\u4e00\u4e2a\u6e7e\u533a\u4e0d\u9519\u7684\u623f\u5b50\uff09\uff0c\u4f46\u662f\u5b83\u6709\u8bb8\u591a\u4f18\u70b9\uff0c\u5229\u4e8e\u5b66\u4e60\uff0c\u6240\u4ee5\u5047\u8bbe\u8fd9\u4e2a\u6570\u636e\u4e3a\u6700\u8fd1\u7684\u3002\u4e3a\u4e86\u4fbf\u4e8e\u6559\u5b66\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7c7b\u522b\u5c5e\u6027\uff0c\u5e76\u9664\u53bb\u4e86\u4e00\u4e9b\u3002 \u56fe 2-1 \u52a0\u5dde\u623f\u4ea7\u4ef7\u683c \u9879\u76ee\u6982\u89c8 \u6b22\u8fce\u6765\u5230\u673a\u5668\u5b66\u4e60\u623f\u5730\u4ea7\u516c\u53f8\uff01\u4f60\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u662f\u5229\u7528\u52a0\u5dde\u666e\u67e5\u6570\u636e\uff0c\u5efa\u7acb\u4e00\u4e2a\u52a0\u5dde\u623f\u4ef7\u6a21\u578b\u3002\u8fd9\u4e2a\u6570\u636e\u5305\u542b\u6bcf\u4e2a\u8857\u533a\u7ec4\u7684\u4eba\u53e3\u3001\u6536\u5165\u4e2d\u4f4d\u6570\u3001\u623f\u4ef7\u4e2d\u4f4d\u6570\u7b49\u6307\u6807\u3002 \u8857\u533a\u7ec4\u662f\u7f8e\u56fd\u8c03\u67e5\u5c40\u53d1\u5e03\u6837\u672c\u6570\u636e\u7684\u6700\u5c0f\u5730\u7406\u5355\u4f4d\uff08\u4e00\u4e2a\u8857\u533a\u901a\u5e38\u6709 600 \u5230 3000 \u4eba\uff09\u3002\u6211\u4eec\u5c06\u5176\u7b80\u79f0\u4e3a\u201c\u8857\u533a\u201d\u3002 \u4f60\u7684\u6a21\u578b\u8981\u5229\u7528\u8fd9\u4e2a\u6570\u636e\u8fdb\u884c\u5b66\u4e60\uff0c\u7136\u540e\u6839\u636e\u5176\u5b83\u6307\u6807\uff0c\u9884\u6d4b\u4efb\u4f55\u8857\u533a\u7684\u7684\u623f\u4ef7\u4e2d\u4f4d\u6570\u3002 \u63d0\u793a\uff1a\u4f60\u662f\u4e00\u4e2a\u6709\u6761\u7406\u7684\u6570\u636e\u79d1\u5b66\u5bb6\uff0c\u4f60\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u62ff\u51fa\u4f60\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u6e05\u5355\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u9644\u5f55 B \u4e2d\u7684\u6e05\u5355\uff1b\u8fd9\u4e2a\u6e05\u5355\u9002\u7528\u4e8e\u5927\u591a\u6570\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\uff0c\u4f46\u662f\u4f60\u8fd8\u662f\u8981\u786e\u8ba4\u5b83\u662f\u5426\u6ee1\u8db3\u9700\u6c42\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f1a\u68c0\u67e5\u8bb8\u591a\u6e05\u5355\u4e0a\u7684\u9879\u76ee\uff0c\u4f46\u662f\u4e5f\u4f1a\u8df3\u8fc7\u4e00\u4e9b\u7b80\u5355\u7684\uff0c\u6709\u4e9b\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u518d\u8ba8\u8bba\u3002 \u5212\u5b9a\u95ee\u9898 \u95ee\u8001\u677f\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u5e94\u8be5\u662f\u5546\u4e1a\u76ee\u6807\u662f\u4ec0\u4e48\uff1f\u5efa\u7acb\u6a21\u578b\u53ef\u80fd\u4e0d\u662f\u6700\u7ec8\u76ee\u6807\u3002\u516c\u53f8\u8981\u5982\u4f55\u4f7f\u7528\u3001\u5e76\u4ece\u6a21\u578b\u53d7\u76ca\uff1f\u8fd9\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u51b3\u5b9a\u4e86\u5982\u4f55\u5212\u5b9a\u95ee\u9898\uff0c\u8981\u9009\u62e9\u4ec0\u4e48\u7b97\u6cd5\uff0c\u8bc4\u4f30\u6a21\u578b\u6027\u80fd\u7684\u6307\u6807\u662f\u4ec0\u4e48\uff0c\u8981\u82b1\u591a\u5c11\u7cbe\u529b\u8fdb\u884c\u5fae\u8c03\u3002 \u8001\u677f\u544a\u8bc9\u4f60\u4f60\u7684\u6a21\u578b\u7684\u8f93\u51fa\uff08\u4e00\u4e2a\u533a\u7684\u623f\u4ef7\u4e2d\u4f4d\u6570\uff09\u4f1a\u4f20\u7ed9\u53e6\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\uff08\u89c1\u56fe 2-2\uff09\uff0c\u4e5f\u6709\u5176\u5b83\u4fe1\u53f7\u4f1a\u4f20\u5165\u540e\u9762\u7684\u7cfb\u7edf\u3002\u8fd9\u4e00\u6574\u5957\u7cfb\u7edf\u53ef\u4ee5\u786e\u5b9a\u67d0\u4e2a\u533a\u8fdb\u884c\u6295\u8d44\u503c\u4e0d\u503c\u3002\u786e\u5b9a\u503c\u4e0d\u503c\u5f97\u6295\u8d44\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u76f4\u63a5\u5f71\u54cd\u5229\u6da6\u3002 \u56fe 2-2 \u623f\u5730\u4ea7\u6295\u8d44\u7684\u673a\u5668\u5b66\u4e60\u6d41\u6c34\u7ebf \u6d41\u6c34\u7ebf \u4e00\u7cfb\u5217\u7684\u6570\u636e\u5904\u7406\u7ec4\u4ef6\u88ab\u79f0\u4e3a\u6570\u636e\u6d41\u6c34\u7ebf\u3002\u6d41\u6c34\u7ebf\u5728\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u4e2d\u5f88\u5e38\u89c1\uff0c\u56e0\u4e3a\u6709\u8bb8\u591a\u6570\u636e\u8981\u5904\u7406\u548c\u8f6c\u6362\u3002 \u7ec4\u4ef6\u901a\u5e38\u662f\u5f02\u6b65\u8fd0\u884c\u7684\u3002\u6bcf\u4e2a\u7ec4\u4ef6\u5438\u7eb3\u8fdb\u5927\u91cf\u6570\u636e\uff0c\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u5c06\u6570\u636e\u4f20\u8f93\u5230\u53e6\u4e00\u4e2a\u6570\u636e\u5bb9\u5668\u4e2d\uff0c\u800c\u540e\u6d41\u6c34\u7ebf\u4e2d\u7684\u53e6\u4e00\u4e2a\u7ec4\u4ef6\u6536\u5165\u8fd9\u4e2a\u6570\u636e\uff0c\u7136\u540e\u8f93\u51fa\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f9d\u6b21\u8fdb\u884c\u4e0b\u53bb\u3002\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u662f\u72ec\u7acb\u7684\uff1a\u7ec4\u4ef6\u95f4\u7684\u63a5\u53e3\u53ea\u662f\u6570\u636e\u5bb9\u5668\u3002\u8fd9\u6837\u53ef\u4ee5\u8ba9\u7cfb\u7edf\u66f4\u4fbf\u4e8e\u7406\u89e3\uff08\u8bb0\u4f4f\u6570\u636e\u6d41\u7684\u56fe\uff09\uff0c\u4e0d\u540c\u7684\u9879\u76ee\u7ec4\u53ef\u4ee5\u5173\u6ce8\u4e8e\u4e0d\u540c\u7684\u7ec4\u4ef6\u3002\u8fdb\u800c\uff0c\u5982\u679c\u4e00\u4e2a\u7ec4\u4ef6\u5931\u6548\u4e86\uff0c\u4e0b\u6e38\u7684\u7ec4\u4ef6\u4f7f\u7528\u5931\u6548\u7ec4\u4ef6\u6700\u540e\u751f\u4ea7\u7684\u6570\u636e\uff0c\u901a\u5e38\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff08\u4e00\u6bb5\u65f6\u95f4\uff09\u3002\u8fd9\u6837\u5c31\u4f7f\u6574\u4e2a\u67b6\u6784\u76f8\u5f53\u5065\u58ee\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u6ca1\u6709\u76d1\u63a7\uff0c\u5931\u6548\u7684\u7ec4\u4ef6\u4f1a\u5728\u4e0d\u88ab\u6ce8\u610f\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u3002\u6570\u636e\u4f1a\u53d7\u5230\u6c61\u67d3\uff0c\u6574\u4e2a\u7cfb\u7edf\u7684\u6027\u80fd\u5c31\u4f1a\u4e0b\u964d\u3002 \u4e0b\u4e00\u4e2a\u8981\u95ee\u7684\u95ee\u9898\u662f\uff0c\u73b0\u5728\u7684\u89e3\u51b3\u65b9\u6848\u6548\u679c\u5982\u4f55\u3002\u8001\u677f\u901a\u5e38\u4f1a\u7ed9\u4e00\u4e2a\u53c2\u8003\u6027\u80fd\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u95ee\u9898\u3002\u8001\u677f\u8bf4\uff0c\u73b0\u5728\u8857\u533a\u7684\u623f\u4ef7\u662f\u9760\u4e13\u5bb6\u624b\u5de5\u4f30\u8ba1\u7684\uff0c\u4e13\u5bb6\u961f\u4f0d\u6536\u96c6\u6700\u65b0\u7684\u5173\u4e8e\u4e00\u4e2a\u533a\u7684\u4fe1\u606f\uff08\u4e0d\u5305\u62ec\u623f\u4ef7\u4e2d\u4f4d\u6570\uff09\uff0c\u4ed6\u4eec\u4f7f\u7528\u590d\u6742\u7684\u89c4\u5219\u8fdb\u884c\u4f30\u8ba1\u3002\u8fd9\u79cd\u65b9\u6cd5\u8d39\u94b1\u8d39\u65f6\u95f4\uff0c\u800c\u4e14\u4f30\u8ba1\u7ed3\u679c\u4e0d\u7406\u60f3\uff0c\u8bef\u5dee\u7387\u5927\u6982\u6709 15%\u3002 OK\uff0c\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bbe\u8ba1\u7cfb\u7edf\u4e86\u3002\u9996\u5148\uff0c\u4f60\u9700\u8981\u5212\u5b9a\u95ee\u9898\uff1a\u76d1\u7763\u6216\u975e\u76d1\u7763\uff0c\u8fd8\u662f\u5f3a\u5316\u5b66\u4e60\uff1f\u8fd9\u662f\u4e2a\u5206\u7c7b\u4efb\u52a1\u3001\u56de\u5f52\u4efb\u52a1\uff0c\u8fd8\u662f\u5176\u5b83\u7684\uff1f\u8981\u4f7f\u7528\u6279\u91cf\u5b66\u4e60\u8fd8\u662f\u7ebf\u4e0a\u5b66\u4e60\uff1f\u7ee7\u7eed\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u6682\u505c\u4e00\u4e0b\uff0c\u5c1d\u8bd5\u81ea\u5df1\u56de\u7b54\u4e0b\u8fd9\u4e9b\u95ee\u9898\u3002 \u4f60\u80fd\u56de\u7b54\u51fa\u6765\u5417\uff1f\u4e00\u8d77\u770b\u4e0b\u7b54\u6848\uff1a\u5f88\u660e\u663e\uff0c\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff0c\u56e0\u4e3a\u4f60\u8981\u4f7f\u7528\u7684\u662f\u6709\u6807\u7b7e\u7684\u8bad\u7ec3\u6837\u672c\uff08\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u9884\u5b9a\u7684\u4ea7\u51fa\uff0c\u5373\u8857\u533a\u7684\u623f\u4ef7\u4e2d\u4f4d\u6570\uff09\u3002\u5e76\u4e14\uff0c\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u56de\u5f52\u4efb\u52a1\uff0c\u56e0\u4e3a\u4f60\u8981\u9884\u6d4b\u4e00\u4e2a\u503c\u3002\u8bb2\u7684\u66f4\u7ec6\u4e9b\uff0c\u8fd9\u662f\u4e00\u4e2a\u591a\u53d8\u91cf\u56de\u5f52\u95ee\u9898\uff0c\u56e0\u4e3a\u7cfb\u7edf\u8981\u4f7f\u7528\u591a\u4e2a\u53d8\u91cf\u8fdb\u884c\u9884\u6d4b\uff08\u8981\u4f7f\u7528\u8857\u533a\u7684\u4eba\u53e3\uff0c\u6536\u5165\u4e2d\u4f4d\u6570\u7b49\u7b49\uff09\u3002\u5728\u7b2c\u4e00\u7ae0\u4e2d\uff0c\u4f60\u53ea\u662f\u6839\u636e\u4eba\u5747 GDP \u6765\u9884\u6d4b\u751f\u6d3b\u6ee1\u610f\u5ea6\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u4e2a\u5355\u53d8\u91cf\u56de\u5f52\u95ee\u9898\u3002\u6700\u540e\uff0c\u6ca1\u6709\u8fde\u7eed\u7684\u6570\u636e\u6d41\u8fdb\u5165\u7cfb\u7edf\uff0c\u6ca1\u6709\u7279\u522b\u9700\u6c42\u9700\u8981\u5bf9\u6570\u636e\u53d8\u52a8\u4f5c\u51fa\u5feb\u901f\u9002\u5e94\u3002\u6570\u636e\u91cf\u4e0d\u5927\u53ef\u4ee5\u653e\u5230\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u6279\u91cf\u5b66\u4e60\u5c31\u591f\u4e86\u3002 \u63d0\u793a\uff1a\u5982\u679c\u6570\u636e\u91cf\u5f88\u5927\uff0c\u4f60\u53ef\u4ee5\u8981\u4e48\u5728\u591a\u4e2a\u670d\u52a1\u5668\u4e0a\u5bf9\u6279\u91cf\u5b66\u4e60\u505a\u62c6\u5206\uff08\u4f7f\u7528 MapReduce \u6280\u672f\uff0c\u540e\u9762\u4f1a\u770b\u5230\uff09\uff0c\u6216\u662f\u4f7f\u7528\u7ebf\u4e0a\u5b66\u4e60\u3002 \u9009\u62e9\u6027\u80fd\u6307\u6807 \u4e0b\u4e00\u6b65\u662f\u9009\u62e9\u6027\u80fd\u6307\u6807\u3002\u56de\u5f52\u95ee\u9898\u7684\u5178\u578b\u6307\u6807\u662f\u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff09\u3002\u5747\u65b9\u6839\u8bef\u5dee\u6d4b\u91cf\u7684\u662f\u7cfb\u7edf\u9884\u6d4b\u8bef\u5dee\u7684\u6807\u51c6\u5dee\u3002\u4f8b\u5982\uff0cRMSE \u7b49\u4e8e 50000\uff0c\u610f\u5473\u7740\uff0c68% \u7684\u7cfb\u7edf\u9884\u6d4b\u503c\u4f4d\u4e8e\u5b9e\u9645\u503c\u7684 50000 \u7f8e\u5143\u4ee5\u5185\uff0c95% \u7684\u9884\u6d4b\u503c\u4f4d\u4e8e\u5b9e\u9645\u503c\u7684 100000 \u7f8e\u5143\u4ee5\u5185\uff08\u4e00\u4e2a\u7279\u5f81\u901a\u5e38\u90fd\u7b26\u5408\u9ad8\u65af\u5206\u5e03\uff0c\u5373\u6ee1\u8db3 \u201c68-95-99.7\u201d\u89c4\u5219\uff1a\u5927\u7ea668%\u7684\u503c\u843d\u5728 1\u03c3 \u5185\uff0c95% \u7684\u503c\u843d\u5728 2\u03c3 \u5185\uff0c99.7%\u7684\u503c\u843d\u5728 3\u03c3 \u5185\uff0c\u8fd9\u91cc\u7684 \u03c3 \u7b49\u4e8e50000\uff09\u3002\u516c\u5f0f 2-1 \u5c55\u793a\u4e86\u8ba1\u7b97 RMSE \u7684\u65b9\u6cd5\u3002 \u516c\u5f0f 2-1 \u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff09 \u7b26\u53f7\u7684\u542b\u4e49 \u8fd9\u4e2a\u65b9\u7a0b\u5f15\u5165\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u8d2f\u7a7f\u672c\u4e66\u7684\u673a\u5668\u5b66\u4e60\u7b26\u53f7\uff1a m \u662f\u6d4b\u91cf RMSE \u7684\u6570\u636e\u96c6\u4e2d\u7684\u5b9e\u4f8b\u6570\u91cf\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u7528\u4e00\u4e2a\u542b\u6709 2000 \u4e2a\u8857\u533a\u7684\u9a8c\u8bc1\u96c6\u6c42 RMSE\uff0c\u5219 m = 2000 \u3002 \u662f\u6570\u636e\u96c6\u7b2c i \u4e2a\u5b9e\u4f8b\u7684\u6240\u6709\u7279\u5f81\u503c\uff08\u4e0d\u5305\u542b\u6807\u7b7e\uff09\u7684\u5411\u91cf\uff0c \u662f\u5b83\u7684\u6807\u7b7e\uff08\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u8f93\u51fa\u503c\uff09\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6570\u636e\u96c6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8857\u533a\u4f4d\u4e8e\u7ecf\u5ea6 \u2013118.29\u00b0\uff0c\u7eac\u5ea6 33.91\u00b0\uff0c\u6709 1416 \u540d\u5c45\u6c11\uff0c\u6536\u5165\u4e2d\u4f4d\u6570\u662f 38372 \u7f8e\u5143\uff0c\u623f\u4ef7\u4e2d\u4f4d\u6570\u662f 156400 \u7f8e\u5143\uff08\u5ffd\u7565\u6389\u5176\u5b83\u7684\u7279\u5f81\uff09\uff0c\u5219\u6709\uff1a \u548c\uff0c X \u662f\u5305\u542b\u6570\u636e\u96c6\u4e2d\u6240\u6709\u5b9e\u4f8b\u7684\u6240\u6709\u7279\u5f81\u503c\uff08\u4e0d\u5305\u542b\u6807\u7b7e\uff09\u7684\u77e9\u9635\u3002\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u7b2c i \u884c\u662f \u7684\u8f6c\u7f6e\uff0c\u8bb0\u4e3a \u3002 \u4f8b\u5982\uff0c\u4ecd\u7136\u662f\u524d\u9762\u63d0\u5230\u7684\u7b2c\u4e00\u533a\uff0c\u77e9\u9635 X \u5c31\u662f\uff1a ![](../images/chapter_2/o-2-3.png) h \u662f\u7cfb\u7edf\u7684\u9884\u6d4b\u51fd\u6570\uff0c\u4e5f\u79f0\u4e3a\u5047\u8bbe\uff08hypothesis\uff09\u3002\u5f53\u7cfb\u7edf\u6536\u5230\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf \uff0c\u5c31\u4f1a\u8f93\u51fa\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u4e00\u4e2a\u9884\u6d4b\u503c \uff08 \u8bfb\u4f5c y-hat \uff09\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u7cfb\u7edf\u9884\u6d4b\u7b2c\u4e00\u533a\u7684\u623f\u4ef7\u4e2d\u4f4d\u6570\u662f 158400 \u7f8e\u5143\uff0c\u5219 \u3002\u9884\u6d4b\u8bef\u5dee\u662f \u3002 RMSE(X,h) \u662f\u4f7f\u7528\u5047\u8bbe h \u5728\u6837\u672c\u96c6\u4e0a\u6d4b\u91cf\u7684\u635f\u5931\u51fd\u6570\u3002 \u6211\u4eec\u4f7f\u7528\u5c0f\u5199\u659c\u4f53\u8868\u793a\u6807\u91cf\u503c\uff08\u4f8b\u5982 \u6216 \uff09\u548c\u51fd\u6570\u540d\uff08\u4f8b\u5982 \uff09\uff0c\u5c0f\u5199\u7c97\u4f53\u8868\u793a\u5411\u91cf\uff08\u4f8b\u5982 \uff09\uff0c\u5927\u5199\u7c97\u4f53\u8868\u793a\u77e9\u9635\uff08\u4f8b\u5982 \uff09\u3002 \u867d\u7136\u5927\u591a\u6570\u65f6\u5019 RMSE \u662f\u56de\u5f52\u4efb\u52a1\u53ef\u9760\u7684\u6027\u80fd\u6307\u6807\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u53e6\u5916\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u5b58\u5728\u8bb8\u591a\u5f02\u5e38\u7684\u8857\u533a\u3002\u6b64\u65f6\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\uff08Mean Absolute Error\uff0c\u4e5f\u79f0\u4f5c\u5e73\u5747\u7edd\u5bf9\u504f\u5dee\uff09\uff0c\u89c1\u516c\u5f0f 2-2\uff1a \u516c\u5f0f2-2 \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee RMSE \u548c MAE \u90fd\u662f\u6d4b\u91cf\u9884\u6d4b\u503c\u548c\u76ee\u6807\u503c\u4e24\u4e2a\u5411\u91cf\u8ddd\u79bb\u7684\u65b9\u6cd5\u3002\u6709\u591a\u79cd\u6d4b\u91cf\u8ddd\u79bb\u7684\u65b9\u6cd5\uff0c\u6216\u8303\u6570\uff1a \u8ba1\u7b97\u5bf9\u5e94\u6b27\u51e0\u91cc\u5f97\u8303\u6570\u7684\u5e73\u65b9\u548c\u7684\u6839\uff08RMSE\uff09\uff1a\u8fd9\u4e2a\u8ddd\u79bb\u4ecb\u7ecd\u8fc7\u3002\u5b83\u4e5f\u79f0\u4f5c \u21132 \u8303\u6570\uff0c\u6807\u8bb0\u4e3a \uff08\u6216\u53ea\u662f \uff09\u3002 \u8ba1\u7b97\u5bf9\u5e94\u4e8e \u21131 \uff08\u6807\u8bb0\u4e3a \uff09\u8303\u6570\u7684\u7edd\u5bf9\u503c\u548c\uff08MAE\uff09\u3002\u6709\u65f6\uff0c\u4e5f\u79f0\u5176\u4e3a\u66fc\u54c8\u987f\u8303\u6570\uff0c\u56e0\u4e3a\u5b83\u6d4b\u91cf\u4e86\u57ce\u5e02\u4e2d\u7684\u4e24\u70b9\uff0c\u6cbf\u7740\u77e9\u5f62\u7684\u8fb9\u884c\u8d70\u7684\u8ddd\u79bb\u3002 \u66f4\u4e00\u822c\u7684\uff0c\u5305\u542b n \u4e2a\u5143\u7d20\u7684\u5411\u91cf v \u7684 \u2113k \u8303\u6570\uff08K \u9636\u95f5\u6c0f\u8303\u6570\uff09\uff0c\u5b9a\u4e49\u6210 \u21130 \uff08\u6c49\u660e\u8303\u6570\uff09\u53ea\u663e\u793a\u4e86\u8fd9\u4e2a\u5411\u91cf\u7684\u57fa\u6570\uff08\u5373\uff0c\u975e\u96f6\u5143\u7d20\u7684\u4e2a\u6570\uff09\uff0c \u2113\u221e \uff08\u5207\u6bd4\u96ea\u592b\u8303\u6570\uff09\u662f\u5411\u91cf\u4e2d\u6700\u5927\u7684\u7edd\u5bf9\u503c\u3002 \u8303\u6570\u7684\u6307\u6570\u8d8a\u9ad8\uff0c\u5c31\u8d8a\u5173\u6ce8\u5927\u7684\u503c\u800c\u5ffd\u7565\u5c0f\u7684\u503c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 RMSE \u6bd4 MAE \u5bf9\u5f02\u5e38\u503c\u66f4\u654f\u611f\u3002\u4f46\u662f\u5f53\u5f02\u5e38\u503c\u662f\u6307\u6570\u5206\u5e03\u7684\uff08\u7c7b\u4f3c\u6b63\u6001\u66f2\u7ebf\uff09\uff0cRMSE \u5c31\u4f1a\u8868\u73b0\u5f88\u597d\u3002 \u6838\u5b9e\u5047\u8bbe \u6700\u540e\uff0c\u6700\u597d\u5217\u51fa\u5e76\u6838\u5bf9\u8fc4\u4eca\uff08\u4f60\u6216\u5176\u4ed6\u4eba\uff09\u4f5c\u51fa\u7684\u5047\u8bbe\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c3d\u65e9\u53d1\u73b0\u4e25\u91cd\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4f60\u7684\u7cfb\u7edf\u8f93\u51fa\u7684\u8857\u533a\u623f\u4ef7\uff0c\u4f1a\u4f20\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\uff0c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e9b\u4ef7\u683c\u786e\u5b9e\u4f1a\u88ab\u5f53\u505a\u8857\u533a\u623f\u4ef7\u4f7f\u7528\u3002\u4f46\u662f\u5982\u679c\u4e0b\u6e38\u7cfb\u7edf\u5b9e\u9645\u4e0a\u5c06\u4ef7\u683c\u8f6c\u5316\u6210\u4e86\u5206\u7c7b\uff08\u4f8b\u5982\uff0c\u4fbf\u5b9c\u3001\u4e2d\u7b49\u3001\u6602\u8d35\uff09\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u5206\u7c7b\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4ef7\u683c\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u83b7\u5f97\u51c6\u786e\u7684\u4ef7\u683c\u5c31\u4e0d\u90a3\u4e48\u91cd\u8981\u4e86\uff0c\u4f60\u53ea\u9700\u8981\u5f97\u5230\u5408\u9002\u7684\u5206\u7c7b\u3002\u95ee\u9898\u76f8\u5e94\u5730\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5206\u7c7b\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u56de\u5f52\u4efb\u52a1\u3002\u4f60\u53ef\u4e0d\u60f3\u5728\u4e00\u4e2a\u56de\u5f52\u7cfb\u7edf\u4e0a\u5de5\u4f5c\u4e86\u6570\u6708\uff0c\u6700\u540e\u624d\u53d1\u73b0\u771f\u76f8\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5728\u4e0e\u4e0b\u6e38\u7cfb\u7edf\u4e3b\u7ba1\u63a2\u8ba8\u4e4b\u540e\uff0c\u4f60\u5f88\u786e\u4fe1\u4ed6\u4eec\u9700\u8981\u7684\u5c31\u662f\u5b9e\u9645\u7684\u4ef7\u683c\uff0c\u800c\u4e0d\u662f\u5206\u7c7b\u3002\u5f88\u597d\uff01\u6574\u88c5\u5f85\u53d1\uff0c\u53ef\u4ee5\u5f00\u59cb\u5199\u4ee3\u7801\u4e86\u3002 \u83b7\u53d6\u6570\u636e \u5f00\u59cb\u52a8\u624b\u3002\u6700\u540e\u7528 Jupyter notebook \u5b8c\u6574\u5730\u6572\u4e00\u904d\u793a\u4f8b\u4ee3\u7801\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u4f4d\u4e8e https://github.com/ageron/handson-ml \u3002 \u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4 \u9996\u5148\uff0c\u4f60\u9700\u8981\u5b89\u88c5 Python\u3002\u53ef\u80fd\u5df2\u7ecf\u5b89\u88c5\u8fc7\u4e86\uff0c\u6ca1\u6709\u7684\u8bdd\uff0c\u53ef\u4ee5\u4ece\u5b98\u7f51\u4e0b\u8f7d https://www.python.org/ \u3002 \u63a5\u4e0b\u6765\uff0c\u9700\u8981\u4e3a\u4f60\u7684\u673a\u5668\u5b66\u4e60\u4ee3\u7801\u548c\u6570\u636e\u96c6\u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u3002\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff08\u5728\u63d0\u793a\u7b26 $ \u4e4b\u540e\uff09\uff1a $ export ML_PATH=\"$HOME/ml\" # \u53ef\u4ee5\u66f4\u6539\u8def\u5f84 $ mkdir -p $ML_PATH \u8fd8\u9700\u8981\u4e00\u4e9b Python \u6a21\u5757\uff1aJupyter\u3001NumPy\u3001Pandas\u3001Matplotlib \u548c Scikit-Learn\u3002\u5982\u679c\u6240\u6709\u8fd9\u4e9b\u6a21\u5757\u90fd\u5df2\u7ecf\u5728 Jupyter \u4e2d\u8fd0\u884c\u4e86\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u8282\u201c\u4e0b\u8f7d\u6570\u636e\u201d\u3002\u5982\u679c\u8fd8\u6ca1\u5b89\u88c5\uff0c\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8fdb\u884c\u5b89\u88c5\uff08\u5305\u62ec\u5b83\u4eec\u7684\u4f9d\u8d56\uff09\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u7cfb\u7edf\u7684\u5305\u7ba1\u7406\u7cfb\u7edf\uff08\u6bd4\u5982 Ubuntu \u4e0a\u7684 apt-get \uff0c\u6216 macOS \u4e0a\u7684 MacPorts \u6216 HomeBrew\uff09\uff0c\u5b89\u88c5\u4e00\u4e2a Python \u79d1\u5b66\u8ba1\u7b97\u73af\u5883\u6bd4\u5982 Anaconda\uff0c\u4f7f\u7528 Anaconda \u7684\u5305\u7ba1\u7406\u7cfb\u7edf\uff0c\u6216\u8005\u4f7f\u7528 Python \u81ea\u5df1\u7684\u5305\u7ba1\u7406\u5668 pip \uff0c\u5b83\u662f Python \u5b89\u88c5\u5305\uff08\u81ea\u4ece 2.7.9 \u7248\u672c\uff09\u81ea\u5e26\u7684\u3002\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u68c0\u6d4b\u662f\u5426\u5b89\u88c5 pip \uff1a $ pip3 --version pip 9.0.1 from [...]/lib/python3.5/site-packages (python 3.5) \u4f60\u9700\u8981\u4fdd\u8bc1 pip \u662f\u8fd1\u671f\u7684\u7248\u672c\uff0c\u81f3\u5c11\u9ad8\u4e8e 1.4\uff0c\u4ee5\u4fdd\u969c\u4e8c\u8fdb\u5236\u6a21\u5757\u6587\u4ef6\u7684\u5b89\u88c5\uff08\u4e5f\u79f0\u4e3a wheel\uff09\u3002\u8981\u5347\u7ea7 pip \uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a $ pip3 install --upgrade pip Collecting pip [...] Successfully installed pip-9.0.1 \u521b\u5efa\u72ec\u7acb\u73af\u5883 \u5982\u679c\u4f60\u5e0c\u671b\u5728\u4e00\u4e2a\u72ec\u7acb\u73af\u5883\u4e2d\u5de5\u4f5c\uff08\u5f3a\u70c8\u63a8\u8350\u8fd9\u4e48\u505a\uff0c\u4e0d\u540c\u9879\u76ee\u7684\u5e93\u7684\u7248\u672c\u4e0d\u4f1a\u51b2\u7a81\uff09\uff0c\u7528\u4e0b\u9762\u7684 pip \u547d\u4ee4\u5b89\u88c5 virtualenv \uff1a ``` $ pip3 install --user --upgrade virtualenv Collecting virtualenv [...] Successfully installed virtualenv ``` \u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684 Python \u73af\u5883\uff1a $ cd $ML_PATH $ virtualenv env Using base prefix '[...]' New python executable in [...]/ml/env/bin/python3.5 Also creating executable in [...]/ml/env/bin/python Installing setuptools, pip, wheel...done. \u4ee5\u540e\u6bcf\u6b21\u60f3\u8981\u6fc0\u6d3b\u8fd9\u4e2a\u73af\u5883,\u53ea\u9700\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u7136\u540e\u8f93\u5165\uff1a $ cd $ML_PATH $ source env/bin/activate \u542f\u52a8\u8be5\u73af\u5883\u65f6\uff0c\u4f7f\u7528 pip \u5b89\u88c5\u7684\u4efb\u4f55\u5305\u90fd\u53ea\u5b89\u88c5\u4e8e\u8fd9\u4e2a\u72ec\u7acb\u73af\u5883\u4e2d\uff0cPython \u6307\u6325\u8bbf\u95ee\u8fd9\u4e9b\u5305\uff08\u5982\u679c\u4f60\u5e0c\u671b Python \u80fd\u8bbf\u95ee\u7cfb\u7edf\u7684\u5305\uff0c\u521b\u5efa\u73af\u5883\u65f6\u8981\u4f7f\u7528\u5305\u9009\u9879 --system-site \uff09\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b virtualenv \u6587\u6863\u3002 \u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 pip \u547d\u4ee4\u5b89\u88c5\u6240\u6709\u5fc5\u9700\u7684\u6a21\u5757\u548c\u5b83\u4eec\u7684\u4f9d\u8d56\uff1a $ pip3 install --upgrade jupyter matplotlib numpy pandas scipy scikit-learn Collecting jupyter Downloading jupyter-1.0.0-py2.py3-none-any.whl Collecting matplotlib [...] \u8981\u68c0\u67e5\u5b89\u88c5\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5f15\u5165\u6bcf\u4e2a\u6a21\u5757\uff1a $ python3 -c \"import jupyter, matplotlib, numpy, pandas, scipy, sklearn\" \u8fd9\u4e2a\u547d\u4ee4\u4e0d\u5e94\u8be5\u6709\u4efb\u4f55\u8f93\u51fa\u548c\u9519\u8bef\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6253\u5f00 Jupyter\uff1a $ jupyter notebook [I 15:24 NotebookApp] Serving notebooks from local directory: [...]/ml [I 15:24 NotebookApp] 0 active kernels [I 15:24 NotebookApp] The Jupyter Notebook is running at: http://localhost:8888/ [I 15:24 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation). Jupyter \u670d\u52a1\u5668\u73b0\u5728\u8fd0\u884c\u5728\u7ec8\u7aef\u4e0a\uff0c\u76d1\u542c 888 8\u7aef\u53e3\u3002\u4f60\u53ef\u4ee5\u7528\u6d4f\u89c8\u5668\u6253\u5f00 http://localhost:8888/ \uff0c\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u670d\u52a1\u5668\uff08\u670d\u52a1\u5668\u542f\u52a8\u65f6\uff0c\u901a\u5e38\u5c31\u81ea\u52a8\u6253\u5f00\u4e86\uff09\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u7a7a\u7684\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\uff08\u5982\u679c\u6309\u7167\u5148\u524d\u7684 virtualenv \u6b65\u9aa4\uff0c\u53ea\u5305\u542b env \u76ee\u5f55\uff09\u3002 \u73b0\u5728\u70b9\u51fb\u6309\u94ae New \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Python \u6ce8\u672c\uff0c\u9009\u62e9\u5408\u9002\u7684 Python \u7248\u672c\uff08\u89c1\u56fe 2-3\uff09\u3002 \u56fe 2-3 Jupyter \u7684\u5de5\u4f5c\u7a7a\u95f4 \u8fd9\u4e00\u6b65\u505a\u4e86\u4e09\u4ef6\u4e8b\uff1a\u9996\u5148\uff0c\u5728\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 notebook \u6587\u4ef6 Untitled.ipynb \uff1b\u7b2c\u4e8c\uff0c\u5b83\u542f\u52a8\u4e86\u4e00\u4e2a Jupyter \u7684 Python \u5185\u6838\u6765\u8fd0\u884c\u8fd9\u4e2a notebook\uff1b\u7b2c\u4e09\uff0c\u5728\u4e00\u4e2a\u65b0\u680f\u4e2d\u6253\u5f00\u8fd9\u4e2a notebook\u3002\u63a5\u4e0b\u6765\uff0c\u70b9\u51fb Untitled\uff0c\u5c06\u8fd9\u4e2a notebook \u91cd\u547d\u540d\u4e3a Housing \uff08\u8fd9\u4f1a\u5c06 ipynb \u6587\u4ef6\u81ea\u52a8\u547d\u540d\u4e3a Housing.ipynb \uff09\u3002 notebook \u5305\u542b\u4e00\u7ec4\u4ee3\u7801\u6846\u3002\u6bcf\u4e2a\u4ee3\u7801\u6846\u53ef\u4ee5\u653e\u5165\u53ef\u6267\u884c\u4ee3\u7801\u6216\u683c\u5f0f\u5316\u6587\u672c\u3002\u73b0\u5728\uff0cnotebook \u53ea\u6709\u4e00\u4e2a\u7a7a\u7684\u4ee3\u7801\u6846\uff0c\u6807\u7b7e\u662f In [1]: \u3002\u5728\u6846\u4e2d\u8f93\u5165 print(\"Hello world!\") \uff0c\u70b9\u51fb\u8fd0\u884c\u6309\u94ae\uff08\u89c1\u56fe 2-4\uff09\u6216\u6309 Shift+Enter \u3002\u8fd9\u4f1a\u5c06\u5f53\u524d\u7684\u4ee3\u7801\u6846\u53d1\u9001\u5230 Python \u5185\u6838\uff0c\u8fd0\u884c\u4e4b\u540e\u4f1a\u8fd4\u56de\u8f93\u51fa\u3002\u7ed3\u679c\u663e\u793a\u5728\u4ee3\u7801\u6846\u4e0b\u65b9\u3002\u7531\u4e8e\u62b5\u8fbe\u4e86 notebook \u7684\u5e95\u90e8\uff0c\u4e00\u4e2a\u65b0\u7684\u4ee3\u7801\u6846\u4f1a\u88ab\u81ea\u52a8\u521b\u5efa\u51fa\u6765\u3002\u4ece Jupyter \u7684 Help \u83dc\u5355\u4e2d\u7684 User Interface Tour\uff0c\u53ef\u4ee5\u5b66\u4e60 Jupyter \u7684\u57fa\u672c\u64cd\u4f5c\u3002 \u56fe 2-4 \u5728 notebook \u4e2d\u6253\u5370 Hello world! \u4e0b\u8f7d\u6570\u636e \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u662f\u5b58\u50a8\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08\u6216\u5176\u5b83\u5e38\u89c1\u6570\u636e\u5e93\uff09\u4e2d\u7684\u591a\u4e2a\u8868\u3001\u6587\u6863\u3001\u6587\u4ef6\u3002\u8981\u8bbf\u95ee\u6570\u636e\uff0c\u4f60\u9996\u5148\u8981\u6709\u5bc6\u7801\u548c\u767b\u5f55\u6743\u9650\uff0c\u5e76\u8981\u4e86\u89e3\u6570\u636e\u6a21\u5f0f\u3002\u4f46\u662f\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u8fd9\u4e00\u5207\u8981\u7b80\u5355\u4e9b\uff1a\u53ea\u8981\u4e0b\u8f7d\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\uff0c housing.tgz \uff0c\u5b83\u5305\u542b\u4e00\u4e2a CSV \u6587\u4ef6 housing.csv \uff0c\u542b\u6709\u6240\u6709\u6570\u636e\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u4e0b\u8f7d\uff0c\u8fd0\u884c tar xzf housing.tgz \u89e3\u538b\u51fa csv \u6587\u4ef6\uff0c\u4f46\u662f\u66f4\u597d\u7684\u529e\u6cd5\u662f\u5199\u4e00\u4e2a\u5c0f\u51fd\u6570\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002\u5982\u679c\u6570\u636e\u53d8\u52a8\u9891\u7e41\uff0c\u8fd9\u4e48\u505a\u662f\u975e\u5e38\u597d\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8ba9\u4f60\u5199\u4e00\u4e2a\u5c0f\u811a\u672c\u968f\u65f6\u83b7\u53d6\u6700\u65b0\u7684\u6570\u636e\uff08\u6216\u8005\u521b\u5efa\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\u6765\u505a\uff09\u3002\u5982\u679c\u4f60\u60f3\u5728\u591a\u53f0\u673a\u5668\u4e0a\u5b89\u88c5\u6570\u636e\u96c6\uff0c\u83b7\u53d6\u6570\u636e\u81ea\u52a8\u5316\u4e5f\u662f\u975e\u5e38\u597d\u7684\u3002 \u4e0b\u9762\u662f\u83b7\u53d6\u6570\u636e\u7684\u51fd\u6570\uff1a import os import tarfile from six.moves import urllib DOWNLOAD_ROOT = \"https://raw.githubusercontent.com/ageron/handson-ml/master/\" HOUSING_PATH = \"datasets/housing\" HOUSING_URL = DOWNLOAD_ROOT + HOUSING_PATH + \"/housing.tgz\" def fetch_housing_data(housing_url=HOUSING_URL, housing_path=HOUSING_PATH): if not os.path.isdir(housing_path): os.makedirs(housing_path) tgz_path = os.path.join(housing_path, \"housing.tgz\") urllib.request.urlretrieve(housing_url, tgz_path) housing_tgz = tarfile.open(tgz_path) housing_tgz.extractall(path=housing_path) housing_tgz.close() \u73b0\u5728\uff0c\u5f53\u4f60\u8c03\u7528 fetch_housing_data() \uff0c\u5c31\u4f1a\u5728\u5de5\u4f5c\u7a7a\u95f4\u521b\u5efa\u4e00\u4e2a datasets/housing \u76ee\u5f55\uff0c\u4e0b\u8f7d housing.tgz \u6587\u4ef6\uff0c\u89e3\u538b\u51fa housing.csv \u3002 \u7136\u540e\u4f7f\u7528Pandas\u52a0\u8f7d\u6570\u636e\u3002\u8fd8\u662f\u7528\u4e00\u4e2a\u5c0f\u51fd\u6570\u6765\u52a0\u8f7d\u6570\u636e\uff1a import pandas as pd def load_housing_data(housing_path=HOUSING_PATH): csv_path = os.path.join(housing_path, \"housing.csv\") return pd.read_csv(csv_path) \u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u6709\u6570\u636e\u7684 Pandas DataFrame \u5bf9\u8c61\u3002 \u5feb\u901f\u67e5\u770b\u6570\u636e\u7ed3\u6784 \u4f7f\u7528 DataFrame \u7684 head() \u65b9\u6cd5\u67e5\u770b\u8be5\u6570\u636e\u96c6\u7684\u524d5\u884c\uff08\u89c1\u56fe 2-5\uff09\u3002 \u56fe 2-5 \u6570\u636e\u96c6\u7684\u524d\u4e94\u884c \u6bcf\u4e00\u884c\u90fd\u8868\u793a\u4e00\u4e2a\u8857\u533a\u3002\u5171\u6709 10 \u4e2a\u5c5e\u6027\uff08\u622a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230 6 \u4e2a\uff09\uff1a\u7ecf\u5ea6\u3001\u7ef4\u5ea6\u3001\u623f\u5c4b\u5e74\u9f84\u4e2d\u4f4d\u6570\u3001\u603b\u623f\u95f4\u6570\u3001\u603b\u5367\u5ba4\u6570\u3001\u4eba\u53e3\u6570\u3001\u5bb6\u5ead\u6570\u3001\u6536\u5165\u4e2d\u4f4d\u6570\u3001\u623f\u5c4b\u4ef7\u503c\u4e2d\u4f4d\u6570\u3001\u79bb\u5927\u6d77\u8ddd\u79bb\u3002 info() \u65b9\u6cd5\u53ef\u4ee5\u5feb\u901f\u67e5\u770b\u6570\u636e\u7684\u63cf\u8ff0\uff0c\u7279\u522b\u662f\u603b\u884c\u6570\u3001\u6bcf\u4e2a\u5c5e\u6027\u7684\u7c7b\u578b\u548c\u975e\u7a7a\u503c\u7684\u6570\u91cf\uff08\u89c1\u56fe 2-6\uff09\u3002 \u56fe 2-6 \u623f\u5c4b\u4fe1\u606f \u6570\u636e\u96c6\u4e2d\u5171\u6709 20640 \u4e2a\u5b9e\u4f8b\uff0c\u6309\u7167\u673a\u5668\u5b66\u4e60\u7684\u6807\u51c6\u8fd9\u4e2a\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u4f46\u662f\u975e\u5e38\u9002\u5408\u5165\u95e8\u3002\u6211\u4eec\u6ce8\u610f\u5230\u603b\u623f\u95f4\u6570\u53ea\u6709 20433 \u4e2a\u975e\u7a7a\u503c\uff0c\u8fd9\u610f\u5473\u7740\u6709 207 \u4e2a\u8857\u533a\u7f3a\u5c11\u8fd9\u4e2a\u503c\u3002\u6211\u4eec\u5c06\u5728\u540e\u9762\u5bf9\u5b83\u8fdb\u884c\u5904\u7406\u3002 \u6240\u6709\u7684\u5c5e\u6027\u90fd\u662f\u6570\u503c\u7684\uff0c\u9664\u4e86\u79bb\u5927\u6d77\u8ddd\u79bb\u8fd9\u9879\u3002\u5b83\u7684\u7c7b\u578b\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\u53ef\u4ee5\u5305\u542b\u4efb\u610f Python \u5bf9\u8c61\uff0c\u4f46\u662f\u56e0\u4e3a\u8be5\u9879\u662f\u4ece CSV \u6587\u4ef6\u52a0\u8f7d\u7684\uff0c\u6240\u4ee5\u5fc5\u7136\u662f\u6587\u672c\u7c7b\u578b\u3002\u5728\u521a\u624d\u67e5\u770b\u6570\u636e\u524d\u4e94\u9879\u65f6\uff0c\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u90a3\u4e00\u5217\u7684\u503c\u662f\u91cd\u590d\u7684\uff0c\u610f\u5473\u7740\u5b83\u53ef\u80fd\u662f\u4e00\u9879\u8868\u793a\u7c7b\u522b\u7684\u5c5e\u6027\u3002\u53ef\u4ee5\u4f7f\u7528 value_counts() \u65b9\u6cd5\u67e5\u770b\u8be5\u9879\u4e2d\u90fd\u6709\u54ea\u4e9b\u7c7b\u522b\uff0c\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u90fd\u5305\u542b\u6709\u591a\u5c11\u4e2a\u8857\u533a\uff1a >>> housing[\"ocean_proximity\"].value_counts() <1H OCEAN 9136 INLAND 6551 NEAR OCEAN 2658 NEAR BAY 2290 ISLAND 5 Name: ocean_proximity, dtype: int64 \u518d\u6765\u770b\u5176\u5b83\u5b57\u6bb5\u3002 describe() \u65b9\u6cd5\u5c55\u793a\u4e86\u6570\u503c\u5c5e\u6027\u7684\u6982\u62ec\uff08\u89c1\u56fe 2-7\uff09\u3002 \u56fe 2-7 \u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u6982\u62ec count \u3001 mean \u3001 min \u548c max \u51e0\u884c\u7684\u610f\u601d\u5f88\u660e\u663e\u4e86\u3002\u6ce8\u610f\uff0c\u7a7a\u503c\u88ab\u5ffd\u7565\u4e86\uff08\u6240\u4ee5\uff0c\u5367\u5ba4\u603b\u6570\u662f 20433 \u800c\u4e0d\u662f 20640\uff09\u3002 std \u662f\u6807\u51c6\u5dee\uff08\u63ed\u793a\u6570\u503c\u7684\u5206\u6563\u5ea6\uff09\u300225%\u300150%\u300175% \u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u5206\u4f4d\u6570\uff1a\u6bcf\u4e2a\u5206\u4f4d\u6570\u6307\u660e\u5c0f\u4e8e\u8fd9\u4e2a\u503c\uff0c\u4e14\u6307\u5b9a\u5206\u7ec4\u7684\u767e\u5206\u6bd4\u3002\u4f8b\u5982\uff0c25% \u7684\u8857\u533a\u7684\u623f\u5c4b\u5e74\u9f84\u4e2d\u4f4d\u6570\u5c0f\u4e8e 18\uff0c\u800c 50% \u7684\u5c0f\u4e8e 29\uff0c75% \u7684\u5c0f\u4e8e 37\u3002\u8fd9\u4e9b\u503c\u901a\u5e38\u79f0\u4e3a\u7b2c 25 \u4e2a\u767e\u5206\u4f4d\u6570\uff08\u6216\u7b2c\u4e00\u4e2a\u56db\u5206\u4f4d\u6570\uff09\uff0c\u4e2d\u4f4d\u6570\uff0c\u7b2c 75 \u4e2a\u767e\u5206\u4f4d\u6570\uff08\u7b2c\u4e09\u4e2a\u56db\u5206\u4f4d\u6570\uff09\u3002 \u53e6\u4e00\u79cd\u5feb\u901f\u4e86\u89e3\u6570\u636e\u7c7b\u578b\u7684\u65b9\u6cd5\u662f\u753b\u51fa\u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u67f1\u72b6\u56fe\u3002\u67f1\u72b6\u56fe\uff08\u7684\u7eb5\u8f74\uff09\u5c55\u793a\u4e86\u7279\u5b9a\u8303\u56f4\u7684\u5b9e\u4f8b\u7684\u4e2a\u6570\u3002\u4f60\u8fd8\u53ef\u4ee5\u4e00\u6b21\u7ed9\u4e00\u4e2a\u5c5e\u6027\u753b\u56fe\uff0c\u6216\u5bf9\u5b8c\u6574\u6570\u636e\u96c6\u8c03\u7528 hist() \u65b9\u6cd5\uff0c\u540e\u8005\u4f1a\u753b\u51fa\u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u67f1\u72b6\u56fe\uff08\u89c1\u56fe 2-8\uff09\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u7565\u5fae\u8d85\u8fc7 800 \u4e2a\u8857\u533a\u7684 median_house_value \u503c\u5dee\u4e0d\u591a\u7b49\u4e8e 500000 \u7f8e\u5143\u3002 %matplotlib inline # only in a Jupyter notebook import matplotlib.pyplot as plt housing.hist(bins=50, figsize=(20,15)) plt.show() \u56fe 2-8 \u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u67f1\u72b6\u56fe \u6ce8\uff1a hist() \u65b9\u6cd5\u4f9d\u8d56\u4e8e Matplotlib\uff0c\u540e\u8005\u4f9d\u8d56\u4e8e\u7528\u6237\u6307\u5b9a\u7684\u56fe\u5f62\u540e\u7aef\u4ee5\u6253\u5370\u5230\u5c4f\u5e55\u4e0a\u3002\u56e0\u6b64\u5728\u753b\u56fe\u4e4b\u524d\uff0c\u4f60\u8981\u6307\u5b9a Matplotlib \u8981\u4f7f\u7528\u7684\u540e\u7aef\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 Jupyter \u7684\u9b54\u672f\u547d\u4ee4 %matplotlib inline \u3002\u5b83\u4f1a\u544a\u8bc9 Jupyter \u8bbe\u5b9a\u597d Matplotlib\uff0c\u4ee5\u4f7f\u7528 Jupyter \u81ea\u5df1\u7684\u540e\u7aef\u3002\u7ed8\u56fe\u5c31\u4f1a\u5728 notebook \u4e2d\u6e32\u67d3\u4e86\u3002\u6ce8\u610f\u5728 Jupyter \u4e2d\u8c03\u7528 show() \u4e0d\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u4ee3\u7801\u6846\u6267\u884c\u540e Jupyter \u4f1a\u81ea\u52a8\u5c55\u793a\u56fe\u50cf\u3002 \u6ce8\u610f\u67f1\u72b6\u56fe\u4e2d\u7684\u4e00\u4e9b\u70b9\uff1a \u9996\u5148\uff0c\u6536\u5165\u4e2d\u4f4d\u6570\u8c8c\u4f3c\u4e0d\u662f\u7f8e\u5143\uff08USD\uff09\u3002\u4e0e\u6570\u636e\u91c7\u96c6\u56e2\u961f\u4ea4\u6d41\u4e4b\u540e\uff0c\u4f60\u88ab\u544a\u77e5\u6570\u636e\u662f\u7ecf\u8fc7\u7f29\u653e\u8c03\u6574\u7684\uff0c\u8fc7\u9ad8\u6536\u5165\u4e2d\u4f4d\u6570\u7684\u4f1a\u53d8\u4e3a 15\uff08\u5b9e\u9645\u4e3a 15.0001\uff09\uff0c\u8fc7\u4f4e\u7684\u4f1a\u53d8\u4e3a 5\uff08\u5b9e\u9645\u4e3a 0.4999\uff09\u3002\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\u5f88\u6b63\u5e38\uff0c\u8fd9\u4e0d\u4e00\u5b9a\u662f\u4e2a\u95ee\u9898\uff0c\u4f46\u4f60\u8981\u660e\u767d\u6570\u636e\u662f\u5982\u4f55\u8ba1\u7b97\u51fa\u6765\u7684\u3002 \u623f\u5c4b\u5e74\u9f84\u4e2d\u4f4d\u6570\u548c\u623f\u5c4b\u4ef7\u503c\u4e2d\u4f4d\u6570\u4e5f\u88ab\u8bbe\u4e86\u4e0a\u9650\u3002\u540e\u8005\u53ef\u80fd\u662f\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u662f\u4f60\u7684\u76ee\u6807\u5c5e\u6027\uff08\u4f60\u7684\u6807\u7b7e\uff09\u3002\u4f60\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u53ef\u80fd\u5b66\u4e60\u5230\u4ef7\u683c\u4e0d\u4f1a\u8d85\u51fa\u8fd9\u4e2a\u754c\u9650\u3002\u4f60\u9700\u8981\u4e0e\u4e0b\u6e38\u56e2\u961f\u6838\u5b9e\uff0c\u8fd9\u662f\u5426\u4f1a\u6210\u4e3a\u95ee\u9898\u3002\u5982\u679c\u4ed6\u4eec\u544a\u8bc9\u4f60\u4ed6\u4eec\u9700\u8981\u660e\u786e\u7684\u9884\u6d4b\u503c\uff0c\u5373\u4f7f\u8d85\u8fc7 500000 \u7f8e\u5143\uff0c\u4f60\u5219\u6709\u4e24\u4e2a\u9009\u9879\uff1a \u5bf9\u4e8e\u8bbe\u4e86\u4e0a\u9650\u7684\u6807\u7b7e\uff0c\u91cd\u65b0\u6536\u96c6\u5408\u9002\u7684\u6807\u7b7e\uff1b \u5c06\u8fd9\u4e9b\u8857\u533a\u4ece\u8bad\u7ec3\u96c6\u79fb\u9664\uff08\u4e5f\u4ece\u6d4b\u8bd5\u96c6\u79fb\u9664\uff0c\u56e0\u4e3a\u82e5\u623f\u4ef7\u8d85\u51fa 500000 \u7f8e\u5143\uff0c\u4f60\u7684\u7cfb\u7edf\u5c31\u4f1a\u88ab\u5dee\u8bc4\uff09\u3002 \u8fd9\u4e9b\u5c5e\u6027\u503c\u6709\u4e0d\u540c\u7684\u91cf\u5ea6\u3002\u6211\u4eec\u4f1a\u5728\u672c\u7ae0\u540e\u9762\u8ba8\u8bba\u7279\u5f81\u7f29\u653e\u3002 \u6700\u540e\uff0c\u8bb8\u591a\u67f1\u72b6\u56fe\u7684\u5c3e\u5df4\u5f88\u957f\uff1a\u76f8\u8f83\u4e8e\u5de6\u8fb9\uff0c\u5b83\u4eec\u5728\u4e2d\u4f4d\u6570\u7684\u53f3\u8fb9\u5ef6\u4f38\u8fc7\u8fdc\u3002\u5bf9\u4e8e\u67d0\u4e9b\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u8fd9\u4f1a\u4f7f\u68c0\u6d4b\u89c4\u5f8b\u53d8\u5f97\u66f4\u96be\u4e9b\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u5c1d\u8bd5\u53d8\u6362\u5904\u7406\u8fd9\u4e9b\u5c5e\u6027\uff0c\u4f7f\u5176\u53d8\u4e3a\u6b63\u6001\u5206\u5e03\u3002 \u5e0c\u671b\u4f60\u73b0\u5728\u5bf9\u8981\u5904\u7406\u7684\u6570\u636e\u6709\u4e00\u5b9a\u4e86\u89e3\u4e86\u3002 \u8b66\u544a\uff1a\u7a0d\u7b49\uff01\u5728\u4f60\u8fdb\u4e00\u6b65\u67e5\u770b\u6570\u636e\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u96c6\uff0c\u5c06\u5b83\u653e\u5728\u4e00\u65c1\uff0c\u5343\u4e07\u4e0d\u8981\u518d\u770b\u5b83\u3002 \u521b\u5efa\u6d4b\u8bd5\u96c6 \u5728\u8fd9\u4e2a\u9636\u6bb5\u5c31\u5206\u5272\u6570\u636e\uff0c\u542c\u8d77\u6765\u5f88\u5947\u602a\u3002\u6bd5\u7adf\uff0c\u4f60\u53ea\u662f\u7b80\u5355\u5feb\u901f\u5730\u67e5\u770b\u4e86\u6570\u636e\u800c\u5df2\uff0c\u4f60\u9700\u8981\u518d\u4ed4\u7ec6\u8c03\u67e5\u4e0b\u6570\u636e\u4ee5\u51b3\u5b9a\u4f7f\u7528\u4ec0\u4e48\u7b97\u6cd5\u3002\u8fd9\u4e48\u60f3\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u4eba\u7c7b\u7684\u5927\u8111\u662f\u4e00\u4e2a\u795e\u5947\u7684\u53d1\u73b0\u89c4\u5f8b\u7684\u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u5927\u8111\u975e\u5e38\u5bb9\u6613\u53d1\u751f\u8fc7\u62df\u5408\uff1a\u5982\u679c\u4f60\u67e5\u770b\u4e86\u6d4b\u8bd5\u96c6\uff0c\u5c31\u4f1a\u4e0d\u7ecf\u610f\u5730\u6309\u7167\u6d4b\u8bd5\u96c6\u4e2d\u7684\u89c4\u5f8b\u6765\u9009\u62e9\u67d0\u4e2a\u7279\u5b9a\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u3002\u518d\u5f53\u4f60\u4f7f\u7528\u6d4b\u8bd5\u96c6\u6765\u8bc4\u4f30\u8bef\u5dee\u7387\u65f6\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8bc4\u4f30\u8fc7\u4e8e\u4e50\u89c2\uff0c\u800c\u5b9e\u9645\u90e8\u7f72\u7684\u7cfb\u7edf\u8868\u73b0\u5c31\u4f1a\u5dee\u3002\u8fd9\u79f0\u4e3a\u6570\u636e\u900f\u89c6\u504f\u5dee\u3002 \u7406\u8bba\u4e0a\uff0c\u521b\u5efa\u6d4b\u8bd5\u96c6\u5f88\u7b80\u5355\uff1a\u53ea\u8981\u968f\u673a\u6311\u9009\u4e00\u4e9b\u5b9e\u4f8b\uff0c\u4e00\u822c\u662f\u6570\u636e\u96c6\u7684 20%\uff0c\u653e\u5230\u4e00\u8fb9\uff1a import numpy as np def split_train_test(data, test_ratio): shuffled_indices = np.random.permutation(len(data)) test_set_size = int(len(data) * test_ratio) test_indices = shuffled_indices[:test_set_size] train_indices = shuffled_indices[test_set_size:] return data.iloc[train_indices], data.iloc[test_indices] \u7136\u540e\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\uff1a >>> train_set, test_set = split_train_test(housing, 0.2) >>> print(len(train_set), \"train +\", len(test_set), \"test\") 16512 train + 4128 test \u8fd9\u4e2a\u65b9\u6cd5\u53ef\u884c\uff0c\u4f46\u662f\u5e76\u4e0d\u5b8c\u7f8e\uff1a\u5982\u679c\u518d\u6b21\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e0d\u540c\u7684\u6d4b\u8bd5\u96c6\uff01\u591a\u6b21\u8fd0\u884c\u4e4b\u540e\uff0c\u4f60\uff08\u6216\u4f60\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff09\u5c31\u4f1a\u5f97\u5230\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u8fd9\u662f\u9700\u8981\u907f\u514d\u7684\u3002 \u89e3\u51b3\u7684\u529e\u6cd5\u4e4b\u4e00\u662f\u4fdd\u5b58\u7b2c\u4e00\u6b21\u8fd0\u884c\u5f97\u5230\u7684\u6d4b\u8bd5\u96c6\uff0c\u5e76\u5728\u968f\u540e\u7684\u8fc7\u7a0b\u52a0\u8f7d\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u8c03\u7528 np.random.permutation() \u4e4b\u524d\uff0c\u8bbe\u7f6e\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u79cd\u5b50\uff08\u6bd4\u5982 np.random.seed(42) \uff09\uff0c\u4ee5\u4ea7\u751f\u603b\u662f\u76f8\u540c\u7684\u6d17\u724c\u6307\u6570\uff08shuffled indices\uff09\u3002 \u4f46\u662f\u5982\u679c\u6570\u636e\u96c6\u66f4\u65b0\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u5931\u6548\u3002\u4e00\u4e2a\u901a\u5e38\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u4f7f\u7528\u6bcf\u4e2a\u5b9e\u4f8b\u7684ID\u6765\u5224\u5b9a\u8fd9\u4e2a\u5b9e\u4f8b\u662f\u5426\u5e94\u8be5\u653e\u5165\u6d4b\u8bd5\u96c6\uff08\u5047\u8bbe\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u552f\u4e00\u5e76\u4e14\u4e0d\u53d8\u7684ID\uff09\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u5b9e\u4f8bID\u7684\u54c8\u5e0c\u503c\uff0c\u53ea\u4fdd\u7559\u5176\u6700\u540e\u4e00\u4e2a\u5b57\u8282\uff0c\u5982\u679c\u8be5\u503c\u5c0f\u4e8e\u7b49\u4e8e 51\uff08\u7ea6\u4e3a 256 \u7684 20%\uff09\uff0c\u5c31\u5c06\u5176\u653e\u5165\u6d4b\u8bd5\u96c6\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5728\u591a\u6b21\u8fd0\u884c\u4e2d\uff0c\u6d4b\u8bd5\u96c6\u4fdd\u6301\u4e0d\u53d8\uff0c\u5373\u4f7f\u66f4\u65b0\u4e86\u6570\u636e\u96c6\u3002\u65b0\u7684\u6d4b\u8bd5\u96c6\u4f1a\u5305\u542b\u65b0\u5b9e\u4f8b\u4e2d\u7684 20%\uff0c\u4f46\u4e0d\u4f1a\u6709\u4e4b\u524d\u4f4d\u4e8e\u8bad\u7ec3\u96c6\u7684\u5b9e\u4f8b\u3002\u4e0b\u9762\u662f\u4e00\u79cd\u53ef\u7528\u7684\u65b9\u6cd5\uff1a import hashlib def test_set_check(identifier, test_ratio, hash): return hash(np.int64(identifier)).digest()[-1] < 256 * test_ratio def split_train_test_by_id(data, test_ratio, id_column, hash=hashlib.md5): ids = data[id_column] in_test_set = ids.apply(lambda id_: test_set_check(id_, test_ratio, hash)) return data.loc[~in_test_set], data.loc[in_test_set] \u4e0d\u8fc7\uff0c\u623f\u4ea7\u6570\u636e\u96c6\u6ca1\u6709ID\u8fd9\u4e00\u5217\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u884c\u7d22\u5f15\u4f5c\u4e3a ID\uff1a housing_with_id = housing.reset_index() # adds an `index` column train_set, test_set = split_train_test_by_id(housing_with_id, 0.2, \"index\") \u5982\u679c\u4f7f\u7528\u884c\u7d22\u5f15\u4f5c\u4e3a\u552f\u4e00\u8bc6\u522b\u7801\uff0c\u4f60\u9700\u8981\u4fdd\u8bc1\u65b0\u6570\u636e\u90fd\u653e\u5230\u73b0\u6709\u6570\u636e\u7684\u5c3e\u90e8\uff0c\u4e14\u6ca1\u6709\u884c\u88ab\u5220\u9664\u3002\u5982\u679c\u505a\u4e0d\u5230\uff0c\u5219\u53ef\u4ee5\u7528\u6700\u7a33\u5b9a\u7684\u7279\u5f81\u6765\u521b\u5efa\u552f\u4e00\u8bc6\u522b\u7801\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u533a\u7684\u7ef4\u5ea6\u548c\u7ecf\u5ea6\u5728\u51e0\u767e\u4e07\u5e74\u4e4b\u5185\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u4e24\u8005\u7ed3\u5408\u6210\u4e00\u4e2a ID\uff1a housing_with_id[\"id\"] = housing[\"longitude\"] * 1000 + housing[\"latitude\"] train_set, test_set = split_train_test_by_id(housing_with_id, 0.2, \"id\") Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e9b\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u591a\u79cd\u65b9\u5f0f\u5c06\u6570\u636e\u96c6\u5206\u5272\u6210\u591a\u4e2a\u5b50\u96c6\u3002\u6700\u7b80\u5355\u7684\u51fd\u6570\u662f train_test_split \uff0c\u5b83\u7684\u4f5c\u7528\u548c\u4e4b\u524d\u7684\u51fd\u6570 split_train_test \u5f88\u50cf\uff0c\u5e76\u5e26\u6709\u5176\u5b83\u4e00\u4e9b\u529f\u80fd\u3002\u9996\u5148\uff0c\u5b83\u6709\u4e00\u4e2a random_state \u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u524d\u9762\u8bb2\u8fc7\u7684\u968f\u673a\u751f\u6210\u5668\u79cd\u5b50\uff1b\u7b2c\u4e8c\uff0c\u4f60\u53ef\u4ee5\u5c06\u79cd\u5b50\u4f20\u9012\u7ed9\u591a\u4e2a\u884c\u6570\u76f8\u540c\u7684\u6570\u636e\u96c6\uff0c\u53ef\u4ee5\u5728\u76f8\u540c\u7684\u7d22\u5f15\u4e0a\u5206\u5272\u6570\u636e\u96c6\uff08\u8fd9\u4e2a\u529f\u80fd\u975e\u5e38\u6709\u7528\uff0c\u6bd4\u5982\u4f60\u7684\u6807\u7b7e\u503c\u662f\u653e\u5728\u53e6\u4e00\u4e2a DataFrame \u91cc\u7684\uff09\uff1a from sklearn.model_selection import train_test_split train_set, test_set = train_test_split(housing, test_size=0.2, random_state=42) \u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u91c7\u7528\u7684\u90fd\u662f\u7eaf\u968f\u673a\u7684\u53d6\u6837\u65b9\u6cd5\u3002\u5f53\u4f60\u7684\u6570\u636e\u96c6\u5f88\u5927\u65f6\uff08\u5c24\u5176\u662f\u548c\u5c5e\u6027\u6570\u76f8\u6bd4\uff09\uff0c\u8fd9\u901a\u5e38\u53ef\u884c\uff1b\u4f46\u5982\u679c\u6570\u636e\u96c6\u4e0d\u5927\uff0c\u5c31\u4f1a\u6709\u91c7\u6837\u504f\u5dee\u7684\u98ce\u9669\u3002\u5f53\u4e00\u4e2a\u8c03\u67e5\u516c\u53f8\u60f3\u8981\u5bf9 1000 \u4e2a\u4eba\u8fdb\u884c\u8c03\u67e5\uff0c\u5b83\u4eec\u4e0d\u662f\u5728\u7535\u8bdd\u4ead\u91cc\u968f\u673a\u9009 1000 \u4e2a\u4eba\u51fa\u6765\u3002\u8c03\u67e5\u516c\u53f8\u8981\u4fdd\u8bc1\u8fd9 1000 \u4e2a\u4eba\u5bf9\u4eba\u7fa4\u6574\u4f53\u6709\u4ee3\u8868\u6027\u3002\u4f8b\u5982\uff0c\u7f8e\u56fd\u4eba\u53e3\u7684 51.3% \u662f\u5973\u6027\uff0c48.7% \u662f\u7537\u6027\u3002\u6240\u4ee5\u5728\u7f8e\u56fd\uff0c\u4e25\u8c28\u7684\u8c03\u67e5\u9700\u8981\u4fdd\u8bc1\u6837\u672c\u4e5f\u662f\u8fd9\u4e2a\u6bd4\u4f8b\uff1a513 \u540d\u5973\u6027\uff0c487 \u540d\u7537\u6027\u3002\u8fd9\u79f0\u4f5c\u5206\u5c42\u91c7\u6837\uff08stratified sampling\uff09\uff1a\u5c06\u4eba\u7fa4\u5206\u6210\u5747\u5300\u7684\u5b50\u5206\u7ec4\uff0c\u79f0\u4e3a\u5206\u5c42\uff0c\u4ece\u6bcf\u4e2a\u5206\u5c42\u53bb\u53d6\u5408\u9002\u6570\u91cf\u7684\u5b9e\u4f8b\uff0c\u4ee5\u4fdd\u8bc1\u6d4b\u8bd5\u96c6\u5bf9\u603b\u4eba\u6570\u6709\u4ee3\u8868\u6027\u3002\u5982\u679c\u8c03\u67e5\u516c\u53f8\u91c7\u7528\u7eaf\u968f\u673a\u91c7\u6837\uff0c\u4f1a\u6709 12% \u7684\u6982\u7387\u5bfc\u81f4\u91c7\u6837\u504f\u5dee\uff1a\u5973\u6027\u4eba\u6570\u5c11\u4e8e 49%\uff0c\u6216\u591a\u4e8e 54%\u3002\u4e0d\u7ba1\u53d1\u751f\u90a3\u79cd\u60c5\u51b5\uff0c\u8c03\u67e5\u7ed3\u679c\u90fd\u4f1a\u4e25\u91cd\u504f\u5dee\u3002 \u5047\u8bbe\u4e13\u5bb6\u544a\u8bc9\u4f60\uff0c\u6536\u5165\u4e2d\u4f4d\u6570\u662f\u9884\u6d4b\u623f\u4ef7\u4e2d\u4f4d\u6570\u975e\u5e38\u91cd\u8981\u7684\u5c5e\u6027\u3002\u4f60\u53ef\u80fd\u60f3\u8981\u4fdd\u8bc1\u6d4b\u8bd5\u96c6\u53ef\u4ee5\u4ee3\u8868\u6574\u4f53\u6570\u636e\u96c6\u4e2d\u7684\u591a\u79cd\u6536\u5165\u5206\u7c7b\u3002\u56e0\u4e3a\u6536\u5165\u4e2d\u4f4d\u6570\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u6570\u503c\u5c5e\u6027\uff0c\u4f60\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u6536\u5165\u7c7b\u522b\u5c5e\u6027\u3002\u518d\u4ed4\u7ec6\u5730\u770b\u4e00\u4e0b\u6536\u5165\u4e2d\u4f4d\u6570\u7684\u67f1\u72b6\u56fe\uff08\u56fe 2-9\uff09\uff08\u8bd1\u6ce8\uff1a\u8be5\u56fe\u662f\u5bf9\u6536\u5165\u4e2d\u4f4d\u6570\u5904\u7406\u8fc7\u540e\u7684\u56fe\uff09\uff1a \u56fe 2-9 \u6536\u5165\u5206\u7c7b\u7684\u67f1\u72b6\u56fe \u5927\u591a\u6570\u7684\u6536\u5165\u4e2d\u4f4d\u6570\u7684\u503c\u805a\u96c6\u5728 2-5\uff08\u4e07\u7f8e\u5143\uff09\uff0c\u4f46\u662f\u4e00\u4e9b\u6536\u5165\u4e2d\u4f4d\u6570\u4f1a\u8d85\u8fc7 6\u3002\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u5206\u5c42\u90fd\u8981\u6709\u8db3\u591f\u7684\u5b9e\u4f8b\u4f4d\u4e8e\u4f60\u7684\u6570\u636e\u4e2d\uff0c\u8fd9\u70b9\u5f88\u91cd\u8981\u3002\u5426\u5219\uff0c\u5bf9\u5206\u5c42\u91cd\u8981\u6027\u7684\u8bc4\u4f30\u5c31\u4f1a\u6709\u504f\u5dee\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f60\u4e0d\u80fd\u6709\u8fc7\u591a\u7684\u5206\u5c42\uff0c\u4e14\u6bcf\u4e2a\u5206\u5c42\u90fd\u8981\u8db3\u591f\u5927\u3002\u540e\u9762\u7684\u4ee3\u7801\u901a\u8fc7\u5c06\u6536\u5165\u4e2d\u4f4d\u6570\u9664\u4ee5 1.5\uff08\u4ee5\u9650\u5236\u6536\u5165\u5206\u7c7b\u7684\u6570\u91cf\uff09\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u6536\u5165\u7c7b\u522b\u5c5e\u6027\uff0c\u7528 ceil \u5bf9\u503c\u820d\u5165\uff08\u4ee5\u4ea7\u751f\u79bb\u6563\u7684\u5206\u7c7b\uff09\uff0c\u7136\u540e\u5c06\u6240\u6709\u5927\u4e8e 5\u7684\u5206\u7c7b\u5f52\u5165\u5230\u5206\u7c7b 5\uff1a housing[\"income_cat\"] = np.ceil(housing[\"median_income\"] / 1.5) housing[\"income_cat\"].where(housing[\"income_cat\"] < 5, 5.0, inplace=True) \u73b0\u5728\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u6536\u5165\u5206\u7c7b\uff0c\u8fdb\u884c\u5206\u5c42\u91c7\u6837\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 Scikit-Learn \u7684 StratifiedShuffleSplit \u7c7b\uff1a from sklearn.model_selection import StratifiedShuffleSplit split = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42) for train_index, test_index in split.split(housing, housing[\"income_cat\"]): strat_train_set = housing.loc[train_index] strat_test_set = housing.loc[test_index] \u68c0\u67e5\u4e0b\u7ed3\u679c\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\u4f60\u53ef\u4ee5\u5728\u5b8c\u6574\u7684\u623f\u4ea7\u6570\u636e\u96c6\u4e2d\u67e5\u770b\u6536\u5165\u5206\u7c7b\u6bd4\u4f8b\uff1a >>> housing[\"income_cat\"].value_counts() / len(housing) 3.0 0.350581 2.0 0.318847 4.0 0.176308 5.0 0.114438 1.0 0.039826 Name: income_cat, dtype: float64 \u4f7f\u7528\u76f8\u4f3c\u7684\u4ee3\u7801\uff0c\u8fd8\u53ef\u4ee5\u6d4b\u91cf\u6d4b\u8bd5\u96c6\u4e2d\u6536\u5165\u5206\u7c7b\u7684\u6bd4\u4f8b\u3002\u56fe 2-10 \u5bf9\u6bd4\u4e86\u603b\u6570\u636e\u96c6\u3001\u5206\u5c42\u91c7\u6837\u7684\u6d4b\u8bd5\u96c6\u3001\u7eaf\u968f\u673a\u91c7\u6837\u6d4b\u8bd5\u96c6\u7684\u6536\u5165\u5206\u7c7b\u6bd4\u4f8b\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5206\u5c42\u91c7\u6837\u6d4b\u8bd5\u96c6\u7684\u6536\u5165\u5206\u7c7b\u6bd4\u4f8b\u4e0e\u603b\u6570\u636e\u96c6\u51e0\u4e4e\u76f8\u540c\uff0c\u800c\u968f\u673a\u91c7\u6837\u6570\u636e\u96c6\u504f\u5dee\u4e25\u91cd\u3002 \u56fe 2-10 \u5206\u5c42\u91c7\u6837\u548c\u7eaf\u968f\u673a\u91c7\u6837\u7684\u6837\u672c\u504f\u5dee\u6bd4\u8f83 \u73b0\u5728\uff0c\u4f60\u9700\u8981\u5220\u9664 income_cat \u5c5e\u6027\uff0c\u4f7f\u6570\u636e\u56de\u5230\u521d\u59cb\u72b6\u6001\uff1a for set in (strat_train_set, strat_test_set): set.drop([\"income_cat\"], axis=1, inplace=True) \u6211\u4eec\u7528\u4e86\u5927\u91cf\u65f6\u95f4\u6765\u751f\u6210\u6d4b\u8bd5\u96c6\u7684\u539f\u56e0\u662f\uff1a\u6d4b\u8bd5\u96c6\u901a\u5e38\u88ab\u5ffd\u7565\uff0c\u4f46\u5b9e\u9645\u662f\u673a\u5668\u5b66\u4e60\u975e\u5e38\u91cd\u8981\u7684\u4e00\u90e8\u5206\u3002\u8fd8\u6709\uff0c\u751f\u6210\u6d4b\u8bd5\u96c6\u8fc7\u7a0b\u4e2d\u7684\u8bb8\u591a\u601d\u8def\u5bf9\u4e8e\u540e\u9762\u7684\u4ea4\u53c9\u9a8c\u8bc1\u8ba8\u8bba\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684\u3002\u63a5\u4e0b\u6765\u8fdb\u5165\u4e0b\u4e00\u9636\u6bb5\uff1a\u6570\u636e\u63a2\u7d22\u3002 \u6570\u636e\u63a2\u7d22\u548c\u53ef\u89c6\u5316\u3001\u53d1\u73b0\u89c4\u5f8b \u76ee\u524d\u4e3a\u6b62\uff0c\u4f60\u53ea\u662f\u5feb\u901f\u67e5\u770b\u4e86\u6570\u636e\uff0c\u5bf9\u8981\u5904\u7406\u7684\u6570\u636e\u6709\u4e86\u6574\u4f53\u4e86\u89e3\u3002\u73b0\u5728\u7684\u76ee\u6807\u662f\u66f4\u6df1\u7684\u63a2\u7d22\u6570\u636e\u3002 \u9996\u5148\uff0c\u4fdd\u8bc1\u4f60\u5c06\u6d4b\u8bd5\u96c6\u653e\u5728\u4e86\u4e00\u65c1\uff0c\u53ea\u662f\u7814\u7a76\u8bad\u7ec3\u96c6\u3002\u53e6\u5916\uff0c\u5982\u679c\u8bad\u7ec3\u96c6\u975e\u5e38\u5927\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u518d\u91c7\u6837\u4e00\u4e2a\u63a2\u7d22\u96c6\uff0c\u4fdd\u8bc1\u64cd\u4f5c\u65b9\u4fbf\u5feb\u901f\u3002\u5728\u6211\u4eec\u7684\u6848\u4f8b\u4e2d\uff0c\u6570\u636e\u96c6\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5168\u96c6\u4e0a\u76f4\u63a5\u5de5\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u514d\u635f\u4f24\u8bad\u7ec3\u96c6\uff1a housing = strat_train_set.copy() \u5730\u7406\u6570\u636e\u53ef\u89c6\u5316 \u56e0\u4e3a\u5b58\u5728\u5730\u7406\u4fe1\u606f\uff08\u7eac\u5ea6\u548c\u7ecf\u5ea6\uff09\uff0c\u521b\u5efa\u4e00\u4e2a\u6240\u6709\u8857\u533a\u7684\u6563\u70b9\u56fe\u6765\u6570\u636e\u53ef\u89c6\u5316\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u4e3b\u610f\uff08\u56fe 2-11\uff09\uff1a housing.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\") \u56fe 2-11 \u6570\u636e\u7684\u5730\u7406\u4fe1\u606f\u6563\u70b9\u56fe \u8fd9\u5f20\u56fe\u770b\u8d77\u6765\u5f88\u50cf\u52a0\u5dde\uff0c\u4f46\u662f\u770b\u4e0d\u51fa\u4ec0\u4e48\u7279\u522b\u7684\u89c4\u5f8b\u3002\u5c06 alpha \u8bbe\u4e3a 0.1\uff0c\u53ef\u4ee5\u66f4\u5bb9\u6613\u770b\u51fa\u6570\u636e\u70b9\u7684\u5bc6\u5ea6\uff08\u56fe 2-12\uff09\uff1a housing.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", alpha=0.1) \u56fe 2-12 \u663e\u793a\u9ad8\u5bc6\u5ea6\u533a\u57df\u7684\u6563\u70b9\u56fe \u73b0\u5728\u770b\u8d77\u6765\u597d\u591a\u4e86\uff1a\u53ef\u4ee5\u975e\u5e38\u6e05\u695a\u5730\u770b\u5230\u9ad8\u5bc6\u5ea6\u533a\u57df\uff0c\u6e7e\u533a\u3001\u6d1b\u6749\u77f6\u548c\u5723\u8fed\u6208\uff0c\u4ee5\u53ca\u4e2d\u592e\u8c37\uff0c\u7279\u522b\u662f\u4ece\u8428\u514b\u62c9\u95e8\u6258\u548c\u5f17\u96f7\u65af\u8bfa\u3002 \u901a\u5e38\u6765\u8bb2\uff0c\u4eba\u7c7b\u7684\u5927\u8111\u975e\u5e38\u5584\u4e8e\u53d1\u73b0\u56fe\u7247\u4e2d\u7684\u89c4\u5f8b\uff0c\u4f46\u662f\u9700\u8981\u8c03\u6574\u53ef\u89c6\u5316\u53c2\u6570\u4f7f\u89c4\u5f8b\u663e\u73b0\u51fa\u6765\u3002 \u73b0\u5728\u6765\u770b\u623f\u4ef7\uff08\u56fe 2-13\uff09\u3002\u6bcf\u4e2a\u5708\u7684\u534a\u5f84\u8868\u793a\u8857\u533a\u7684\u4eba\u53e3\uff08\u9009\u9879 s \uff09\uff0c\u989c\u8272\u4ee3\u8868\u4ef7\u683c\uff08\u9009\u9879 c \uff09\u3002\u6211\u4eec\u7528\u9884\u5148\u5b9a\u4e49\u7684\u540d\u4e3a jet \u7684\u989c\u8272\u56fe\uff08\u9009\u9879 cmap \uff09\uff0c\u5b83\u7684\u8303\u56f4\u662f\u4ece\u84dd\u8272\uff08\u4f4e\u4ef7\uff09\u5230\u7ea2\u8272\uff08\u9ad8\u4ef7\uff09\uff1a housing.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", alpha=0.4, s=housing[\"population\"]/100, label=\"population\", c=\"median_house_value\", cmap=plt.get_cmap(\"jet\"), colorbar=True, ) plt.legend() \u56fe 2-13 \u52a0\u5dde\u623f\u4ef7 \u8fd9\u5f20\u56fe\u8bf4\u660e\u623f\u4ef7\u548c\u4f4d\u7f6e\uff08\u6bd4\u5982\uff0c\u9760\u6d77\uff09\u548c\u4eba\u53e3\u5bc6\u5ea6\u8054\u7cfb\u5bc6\u5207\uff0c\u8fd9\u70b9\u4f60\u53ef\u80fd\u65e9\u5c31\u77e5\u9053\u3002\u53ef\u4ee5\u4f7f\u7528\u805a\u7c7b\u7b97\u6cd5\u6765\u68c0\u6d4b\u4e3b\u8981\u7684\u805a\u96c6\uff0c\u7528\u4e00\u4e2a\u65b0\u7684\u7279\u5f81\u503c\u6d4b\u91cf\u805a\u96c6\u4e2d\u5fc3\u7684\u8ddd\u79bb\u3002\u5c3d\u7ba1\u5317\u52a0\u5dde\u6d77\u5cb8\u533a\u57df\u7684\u623f\u4ef7\u4e0d\u662f\u975e\u5e38\u9ad8\uff0c\u4f46\u79bb\u5927\u6d77\u8ddd\u79bb\u5c5e\u6027\u4e5f\u53ef\u80fd\u5f88\u6709\u7528\uff0c\u6240\u4ee5\u8fd9\u4e0d\u662f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\u5c31\u53ef\u4ee5\u5b9a\u4e49\u7684\u95ee\u9898\u3002 \u67e5\u627e\u5173\u8054 \u56e0\u4e3a\u6570\u636e\u96c6\u5e76\u4e0d\u662f\u975e\u5e38\u5927\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4f7f\u7528 corr() \u65b9\u6cd5\u8ba1\u7b97\u51fa\u6bcf\u5bf9\u5c5e\u6027\u95f4\u7684\u6807\u51c6\u76f8\u5173\u7cfb\u6570\uff08standard correlation coefficient\uff0c\u4e5f\u79f0\u4f5c\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\uff09\uff1a corr_matrix = housing.corr() \u73b0\u5728\u6765\u770b\u4e0b\u6bcf\u4e2a\u5c5e\u6027\u548c\u623f\u4ef7\u4e2d\u4f4d\u6570\u7684\u5173\u8054\u5ea6\uff1a >>> corr_matrix[\"median_house_value\"].sort_values(ascending=False) median_house_value 1.000000 median_income 0.687170 total_rooms 0.135231 housing_median_age 0.114220 households 0.064702 total_bedrooms 0.047865 population -0.026699 longitude -0.047279 latitude -0.142826 Name: median_house_value, dtype: float64 \u76f8\u5173\u7cfb\u6570\u7684\u8303\u56f4\u662f -1 \u5230 1\u3002\u5f53\u63a5\u8fd1 1 \u65f6\uff0c\u610f\u5473\u5f3a\u6b63\u76f8\u5173\uff1b\u4f8b\u5982\uff0c\u5f53\u6536\u5165\u4e2d\u4f4d\u6570\u589e\u52a0\u65f6\uff0c\u623f\u4ef7\u4e2d\u4f4d\u6570\u4e5f\u4f1a\u589e\u52a0\u3002\u5f53\u76f8\u5173\u7cfb\u6570\u63a5\u8fd1 -1 \u65f6\uff0c\u610f\u5473\u5f3a\u8d1f\u76f8\u5173\uff1b\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u7eac\u5ea6\u548c\u623f\u4ef7\u4e2d\u4f4d\u6570\u6709\u8f7b\u5fae\u7684\u8d1f\u76f8\u5173\u6027\uff08\u5373\uff0c\u8d8a\u5f80\u5317\uff0c\u623f\u4ef7\u8d8a\u53ef\u80fd\u964d\u4f4e\uff09\u3002\u6700\u540e\uff0c\u76f8\u5173\u7cfb\u6570\u63a5\u8fd1 0\uff0c\u610f\u5473\u6ca1\u6709\u7ebf\u6027\u76f8\u5173\u6027\u3002\u56fe 2-14 \u5c55\u793a\u4e86\u76f8\u5173\u7cfb\u6570\u5728\u6a2a\u8f74\u548c\u7eb5\u8f74\u4e4b\u95f4\u7684\u4e0d\u540c\u56fe\u5f62\u3002 \u56fe 2-14 \u4e0d\u540c\u6570\u636e\u96c6\u7684\u6807\u51c6\u76f8\u5173\u7cfb\u6570\uff08\u6765\u6e90\uff1aWikipedia\uff1b\u516c\u5171\u9886\u57df\u56fe\u7247\uff09 \u8b66\u544a\uff1a\u76f8\u5173\u7cfb\u6570\u53ea\u6d4b\u91cf\u7ebf\u6027\u5173\u7cfb\uff08\u5982\u679c x \u4e0a\u5347\uff0c y \u5219\u4e0a\u5347\u6216\u4e0b\u964d\uff09\u3002\u76f8\u5173\u7cfb\u6570\u53ef\u80fd\u4f1a\u5b8c\u5168\u5ffd\u7565\u975e\u7ebf\u6027\u5173\u7cfb\uff08\u4f8b\u5982\uff0c\u5982\u679c x \u63a5\u8fd1 0\uff0c\u5219 y \u503c\u4f1a\u53d8\u9ad8\uff09\u3002\u5728\u4e0a\u9762\u56fe\u7247\u7684\u6700\u540e\u4e00\u884c\u4e2d\uff0c\u4ed6\u4eec\u7684\u76f8\u5173\u7cfb\u6570\u90fd\u63a5\u8fd1\u4e8e 0\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u8f74\u5e76\u4e0d\u72ec\u7acb\uff1a\u8fd9\u4e9b\u5c31\u662f\u975e\u7ebf\u6027\u5173\u7cfb\u7684\u4f8b\u5b50\u3002\u53e6\u5916\uff0c\u7b2c\u4e8c\u884c\u7684\u76f8\u5173\u7cfb\u6570\u7b49\u4e8e 1 \u6216 -1\uff1b\u8fd9\u548c\u659c\u7387\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u4f60\u7684\u8eab\u9ad8\uff08\u5355\u4f4d\u662f\u82f1\u5bf8\uff09\u4e0e\u8eab\u9ad8\uff08\u5355\u4f4d\u662f\u82f1\u5c3a\u6216\u7eb3\u7c73\uff09\u7684\u76f8\u5173\u7cfb\u6570\u5c31\u662f 1\u3002 \u53e6\u4e00\u79cd\u68c0\u6d4b\u5c5e\u6027\u95f4\u76f8\u5173\u7cfb\u6570\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 Pandas \u7684 scatter_matrix \u51fd\u6570\uff0c\u5b83\u80fd\u753b\u51fa\u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u5bf9\u6bcf\u4e2a\u5176\u5b83\u6570\u503c\u5c5e\u6027\u7684\u56fe\u3002\u56e0\u4e3a\u73b0\u5728\u5171\u6709 11 \u4e2a\u6570\u503c\u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230 11 ** 2 = 121 \u5f20\u56fe\uff0c\u5728\u4e00\u9875\u4e0a\u753b\u4e0d\u4e0b\uff0c\u6240\u4ee5\u53ea\u5173\u6ce8\u51e0\u4e2a\u548c\u623f\u4ef7\u4e2d\u4f4d\u6570\u6700\u6709\u53ef\u80fd\u76f8\u5173\u7684\u5c5e\u6027\uff08\u56fe 2-15\uff09\uff1a from pandas.tools.plotting import scatter_matrix attributes = [\"median_house_value\", \"median_income\", \"total_rooms\", \"housing_median_age\"] scatter_matrix(housing[attributes], figsize=(12, 8)) \u56fe 2-15 \u6563\u70b9\u77e9\u9635 \u5982\u679c pandas \u5c06\u6bcf\u4e2a\u53d8\u91cf\u5bf9\u81ea\u5df1\u4f5c\u56fe\uff0c\u4e3b\u5bf9\u89d2\u7ebf\uff08\u5de6\u4e0a\u5230\u53f3\u4e0b\uff09\u90fd\u4f1a\u662f\u76f4\u7ebf\u56fe\u3002\u6240\u4ee5 Pandas \u5c55\u793a\u7684\u662f\u6bcf\u4e2a\u5c5e\u6027\u7684\u67f1\u72b6\u56fe\uff08\u4e5f\u53ef\u4ee5\u662f\u5176\u5b83\u7684\uff0c\u8bf7\u53c2\u8003 Pandas \u6587\u6863\uff09\u3002 \u6700\u6709\u5e0c\u671b\u7528\u6765\u9884\u6d4b\u623f\u4ef7\u4e2d\u4f4d\u6570\u7684\u5c5e\u6027\u662f\u6536\u5165\u4e2d\u4f4d\u6570\uff0c\u56e0\u6b64\u5c06\u8fd9\u5f20\u56fe\u653e\u5927\uff08\u56fe 2-16\uff09\uff1a housing.plot(kind=\"scatter\", x=\"median_income\",y=\"median_house_value\", alpha=0.1) \u56fe 2-16 \u6536\u5165\u4e2d\u4f4d\u6570 vs \u623f\u4ef7\u4e2d\u4f4d\u6570 \u8fd9\u5f20\u56fe\u8bf4\u660e\u4e86\u51e0\u70b9\u3002\u9996\u5148\uff0c\u76f8\u5173\u6027\u975e\u5e38\u9ad8\uff1b\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\u5411\u4e0a\u7684\u8d8b\u52bf\uff0c\u5e76\u4e14\u6570\u636e\u70b9\u4e0d\u662f\u975e\u5e38\u5206\u6563\u3002\u7b2c\u4e8c\uff0c\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\u6700\u9ad8\u4ef7\uff0c\u6e05\u6670\u5730\u5448\u73b0\u4e3a\u4e00\u6761\u4f4d\u4e8e 500000 \u7f8e\u5143\u7684\u6c34\u5e73\u7ebf\u3002\u8fd9\u5f20\u56fe\u4e5f\u5448\u73b0\u4e86\u4e00\u4e9b\u4e0d\u662f\u90a3\u4e48\u660e\u663e\u7684\u76f4\u7ebf\uff1a\u4e00\u6761\u4f4d\u4e8e 450000 \u7f8e\u5143\u7684\u76f4\u7ebf\uff0c\u4e00\u6761\u4f4d\u4e8e 350000 \u7f8e\u5143\u7684\u76f4\u7ebf\uff0c\u4e00\u6761\u5728 280000 \u7f8e\u5143\u7684\u7ebf\uff0c\u548c\u4e00\u4e9b\u66f4\u9760\u4e0b\u7684\u7ebf\u3002\u4f60\u53ef\u80fd\u5e0c\u671b\u53bb\u9664\u5bf9\u5e94\u7684\u8857\u533a\uff0c\u4ee5\u9632\u6b62\u7b97\u6cd5\u91cd\u590d\u8fd9\u4e9b\u5de7\u5408\u3002 \u5c5e\u6027\u7ec4\u5408\u8bd5\u9a8c \u5e0c\u671b\u524d\u9762\u7684\u4e00\u8282\u80fd\u6559\u7ed9\u4f60\u4e00\u4e9b\u63a2\u7d22\u6570\u636e\u3001\u53d1\u73b0\u89c4\u5f8b\u7684\u65b9\u6cd5\u3002\u4f60\u53d1\u73b0\u4e86\u4e00\u4e9b\u6570\u636e\u7684\u5de7\u5408\uff0c\u9700\u8981\u5728\u7ed9\u7b97\u6cd5\u63d0\u4f9b\u6570\u636e\u4e4b\u524d\uff0c\u5c06\u5176\u53bb\u9664\u3002\u4f60\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e9b\u5c5e\u6027\u95f4\u6709\u8da3\u7684\u5173\u8054\uff0c\u7279\u522b\u662f\u76ee\u6807\u5c5e\u6027\u3002\u4f60\u8fd8\u6ce8\u610f\u5230\u4e00\u4e9b\u5c5e\u6027\u5177\u6709\u957f\u5c3e\u5206\u5e03\uff0c\u56e0\u6b64\u4f60\u53ef\u80fd\u8981\u5c06\u5176\u8fdb\u884c\u8f6c\u6362\uff08\u4f8b\u5982\uff0c\u8ba1\u7b97\u5176 log \u5bf9\u6570\uff09\u3002\u5f53\u7136\uff0c\u4e0d\u540c\u9879\u76ee\u7684\u5904\u7406\u65b9\u6cd5\u5404\u4e0d\u76f8\u540c\uff0c\u4f46\u5927\u4f53\u601d\u8def\u662f\u76f8\u4f3c\u7684\u3002 \u7ed9\u7b97\u6cd5\u51c6\u5907\u6570\u636e\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u505a\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u662f\u5c1d\u8bd5\u591a\u79cd\u5c5e\u6027\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u67d0\u4e2a\u8857\u533a\u6709\u591a\u5c11\u6237\uff0c\u8be5\u8857\u533a\u7684\u603b\u623f\u95f4\u6570\u5c31\u6ca1\u4ec0\u4e48\u7528\u3002\u4f60\u771f\u6b63\u9700\u8981\u7684\u662f\u6bcf\u6237\u6709\u51e0\u4e2a\u623f\u95f4\u3002\u76f8\u4f3c\u7684\uff0c\u603b\u5367\u5ba4\u6570\u4e5f\u4e0d\u91cd\u8981\uff1a\u4f60\u53ef\u80fd\u9700\u8981\u5c06\u5176\u4e0e\u623f\u95f4\u6570\u8fdb\u884c\u6bd4\u8f83\u3002\u6bcf\u6237\u7684\u4eba\u53e3\u6570\u4e5f\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u5c5e\u6027\u7ec4\u5408\u3002\u8ba9\u6211\u4eec\u6765\u521b\u5efa\u8fd9\u4e9b\u65b0\u7684\u5c5e\u6027\uff1a housing[\"rooms_per_household\"] = housing[\"total_rooms\"]/housing[\"households\"] housing[\"bedrooms_per_room\"] = housing[\"total_bedrooms\"]/housing[\"total_rooms\"] housing[\"population_per_household\"]=housing[\"population\"]/housing[\"households\"] \u73b0\u5728\uff0c\u518d\u6765\u770b\u76f8\u5173\u77e9\u9635\uff1a >>> corr_matrix = housing.corr() >>> corr_matrix[\"median_house_value\"].sort_values(ascending=False) median_house_value 1.000000 median_income 0.687170 rooms_per_household 0.199343 total_rooms 0.135231 housing_median_age 0.114220 households 0.064702 total_bedrooms 0.047865 population_per_household -0.021984 population -0.026699 longitude -0.047279 latitude -0.142826 bedrooms_per_room -0.260070 Name: median_house_value, dtype: float64 \u770b\u8d77\u6765\u4e0d\u9519\uff01\u4e0e\u603b\u623f\u95f4\u6570\u6216\u5367\u5ba4\u6570\u76f8\u6bd4\uff0c\u65b0\u7684 bedrooms_per_room \u5c5e\u6027\u4e0e\u623f\u4ef7\u4e2d\u4f4d\u6570\u7684\u5173\u8054\u66f4\u5f3a\u3002\u663e\u7136\uff0c\u5367\u5ba4\u6570/\u603b\u623f\u95f4\u6570\u7684\u6bd4\u4f8b\u8d8a\u4f4e\uff0c\u623f\u4ef7\u5c31\u8d8a\u9ad8\u3002\u6bcf\u6237\u7684\u623f\u95f4\u6570\u4e5f\u6bd4\u8857\u533a\u7684\u603b\u623f\u95f4\u6570\u7684\u66f4\u6709\u4fe1\u606f\uff0c\u5f88\u660e\u663e\uff0c\u623f\u5c4b\u8d8a\u5927\uff0c\u623f\u4ef7\u5c31\u8d8a\u9ad8\u3002 \u8fd9\u4e00\u6b65\u7684\u6570\u636e\u63a2\u7d22\u4e0d\u5fc5\u975e\u5e38\u5b8c\u5907\uff0c\u6b64\u5904\u7684\u76ee\u7684\u662f\u6709\u4e00\u4e2a\u6b63\u786e\u7684\u5f00\u59cb\uff0c\u5feb\u901f\u53d1\u73b0\u89c4\u5f8b\uff0c\u4ee5\u5f97\u5230\u4e00\u4e2a\u5408\u7406\u7684\u539f\u578b\u3002\u4f46\u662f\u8fd9\u662f\u4e00\u4e2a\u4ea4\u4e92\u8fc7\u7a0b\uff1a\u4e00\u65e6\u4f60\u5f97\u5230\u4e86\u4e00\u4e2a\u539f\u578b\uff0c\u5e76\u8fd0\u884c\u8d77\u6765\uff0c\u4f60\u5c31\u53ef\u4ee5\u5206\u6790\u5b83\u7684\u8f93\u51fa\uff0c\u8fdb\u800c\u53d1\u73b0\u66f4\u591a\u7684\u89c4\u5f8b\uff0c\u7136\u540e\u518d\u56de\u5230\u6570\u636e\u63a2\u7d22\u8fd9\u6b65\u3002 \u4e3a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u51c6\u5907\u6570\u636e \u73b0\u5728\u6765\u4e3a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u51c6\u5907\u6570\u636e\u3002\u4e0d\u8981\u624b\u5de5\u6765\u505a\uff0c\u4f60\u9700\u8981\u5199\u4e00\u4e9b\u51fd\u6570\uff0c\u7406\u7531\u5982\u4e0b\uff1a \u51fd\u6570\u53ef\u4ee5\u8ba9\u4f60\u5728\u4efb\u4f55\u6570\u636e\u96c6\u4e0a\uff08\u6bd4\u5982\uff0c\u4f60\u4e0b\u4e00\u6b21\u83b7\u53d6\u7684\u662f\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u96c6\uff09\u65b9\u4fbf\u5730\u8fdb\u884c\u91cd\u590d\u6570\u636e\u8f6c\u6362\u3002 \u4f60\u80fd\u6162\u6162\u5efa\u7acb\u4e00\u4e2a\u8f6c\u6362\u51fd\u6570\u5e93\uff0c\u53ef\u4ee5\u5728\u672a\u6765\u7684\u9879\u76ee\u4e2d\u590d\u7528\u3002 \u5728\u5c06\u6570\u636e\u4f20\u7ed9\u7b97\u6cd5\u4e4b\u524d\uff0c\u4f60\u53ef\u4ee5\u5728\u5b9e\u65f6\u7cfb\u7edf\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u3002 \u8fd9\u53ef\u4ee5\u8ba9\u4f60\u65b9\u4fbf\u5730\u5c1d\u8bd5\u591a\u79cd\u6570\u636e\u8f6c\u6362\uff0c\u67e5\u770b\u54ea\u4e9b\u8f6c\u6362\u65b9\u6cd5\u7ed3\u5408\u8d77\u6765\u6548\u679c\u6700\u597d\u3002 \u4f46\u662f\uff0c\u8fd8\u662f\u5148\u56de\u5230\u5e72\u51c0\u7684\u8bad\u7ec3\u96c6\uff08\u901a\u8fc7\u518d\u6b21\u590d\u5236 strat_train_set \uff09\uff0c\u5c06\u9884\u6d4b\u91cf\u548c\u6807\u7b7e\u5206\u5f00\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u60f3\u5bf9\u9884\u6d4b\u91cf\u548c\u76ee\u6807\u503c\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff08\u6ce8\u610f drop() \u521b\u5efa\u4e86\u4e00\u4efd\u6570\u636e\u7684\u5907\u4efd\uff0c\u800c\u4e0d\u5f71\u54cd strat_train_set \uff09\uff1a housing = strat_train_set.drop(\"median_house_value\", axis=1) housing_labels = strat_train_set[\"median_house_value\"].copy() \u6570\u636e\u6e05\u6d17 \u5927\u591a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e0d\u80fd\u5904\u7406\u7f3a\u5931\u7684\u7279\u5f81\uff0c\u56e0\u6b64\u5148\u521b\u5efa\u4e00\u4e9b\u51fd\u6570\u6765\u5904\u7406\u7279\u5f81\u7f3a\u5931\u7684\u95ee\u9898\u3002\u524d\u9762\uff0c\u4f60\u5e94\u8be5\u6ce8\u610f\u5230\u4e86\u5c5e\u6027 total_bedrooms \u6709\u4e00\u4e9b\u7f3a\u5931\u503c\u3002\u6709\u4e09\u4e2a\u89e3\u51b3\u9009\u9879\uff1a \u53bb\u6389\u5bf9\u5e94\u7684\u8857\u533a\uff1b \u53bb\u6389\u6574\u4e2a\u5c5e\u6027\uff1b \u8fdb\u884c\u8d4b\u503c\uff080\u3001\u5e73\u5747\u503c\u3001\u4e2d\u4f4d\u6570\u7b49\u7b49\uff09\u3002 \u7528 DataFrame \u7684 dropna() \uff0c drop() \uff0c\u548c fillna() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\uff1a housing.dropna(subset=[\"total_bedrooms\"]) # \u9009\u98791 housing.drop(\"total_bedrooms\", axis=1) # \u9009\u98792 median = housing[\"total_bedrooms\"].median() housing[\"total_bedrooms\"].fillna(median) # \u9009\u98793 \u5982\u679c\u9009\u62e9\u9009\u9879 3\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u8bad\u7ec3\u96c6\u7684\u4e2d\u4f4d\u6570\uff0c\u7528\u4e2d\u4f4d\u6570\u586b\u5145\u8bad\u7ec3\u96c6\u7684\u7f3a\u5931\u503c\uff0c\u4e0d\u8981\u5fd8\u8bb0\u4fdd\u5b58\u8be5\u4e2d\u4f4d\u6570\u3002\u540e\u9762\u7528\u6d4b\u8bd5\u96c6\u8bc4\u4f30\u7cfb\u7edf\u65f6\uff0c\u9700\u8981\u66ff\u6362\u6d4b\u8bd5\u96c6\u4e2d\u7684\u7f3a\u5931\u503c\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u5b9e\u65f6\u66ff\u6362\u65b0\u6570\u636e\u4e2d\u7684\u7f3a\u5931\u503c\u3002 Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u7c7b\u6765\u5904\u7406\u7f3a\u5931\u503c\uff1a Imputer \u3002\u4e0b\u9762\u662f\u5176\u4f7f\u7528\u65b9\u6cd5\uff1a\u9996\u5148\uff0c\u9700\u8981\u521b\u5efa\u4e00\u4e2a Imputer \u5b9e\u4f8b\uff0c\u6307\u5b9a\u7528\u67d0\u5c5e\u6027\u7684\u4e2d\u4f4d\u6570\u6765\u66ff\u6362\u8be5\u5c5e\u6027\u6240\u6709\u7684\u7f3a\u5931\u503c\uff1a from sklearn.preprocessing import Imputer imputer = Imputer(strategy=\"median\") \u56e0\u4e3a\u53ea\u6709\u6570\u503c\u5c5e\u6027\u624d\u80fd\u7b97\u51fa\u4e2d\u4f4d\u6570\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4efd\u4e0d\u5305\u62ec\u6587\u672c\u5c5e\u6027 ocean_proximity \u7684\u6570\u636e\u526f\u672c\uff1a housing_num = housing.drop(\"ocean_proximity\", axis=1) \u73b0\u5728\uff0c\u5c31\u53ef\u4ee5\u7528 fit() \u65b9\u6cd5\u5c06 imputer \u5b9e\u4f8b\u62df\u5408\u5230\u8bad\u7ec3\u6570\u636e\uff1a imputer.fit(housing_num) imputer \u8ba1\u7b97\u51fa\u4e86\u6bcf\u4e2a\u5c5e\u6027\u7684\u4e2d\u4f4d\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u4e86\u5b9e\u4f8b\u53d8\u91cf statistics_ \u4e2d\u3002\u867d\u7136\u6b64\u65f6\u53ea\u6709\u5c5e\u6027 total_bedrooms \u5b58\u5728\u7f3a\u5931\u503c\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u786e\u5b9a\u5728\u4ee5\u540e\u7684\u65b0\u7684\u6570\u636e\u4e2d\u4f1a\u4e0d\u4f1a\u6709\u5176\u4ed6\u5c5e\u6027\u4e5f\u5b58\u5728\u7f3a\u5931\u503c\uff0c\u6240\u4ee5\u5b89\u5168\u7684\u505a\u6cd5\u662f\u5c06 imputer \u5e94\u7528\u5230\u6bcf\u4e2a\u6570\u503c\uff1a >>> imputer.statistics_ array([ -118.51 , 34.26 , 29. , 2119. , 433. , 1164. , 408. , 3.5414]) >>> housing_num.median().values array([ -118.51 , 34.26 , 29. , 2119. , 433. , 1164. , 408. , 3.5414]) \u73b0\u5728\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u201c\u8bad\u7ec3\u8fc7\u7684\u201d imputer \u6765\u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884c\u8f6c\u6362\uff0c\u5c06\u7f3a\u5931\u503c\u66ff\u6362\u4e3a\u4e2d\u4f4d\u6570\uff1a X = imputer.transform(housing_num) \u7ed3\u679c\u662f\u4e00\u4e2a\u5305\u542b\u8f6c\u6362\u540e\u7279\u5f81\u7684\u666e\u901a\u7684 Numpy \u6570\u7ec4\u3002\u5982\u679c\u4f60\u60f3\u5c06\u5176\u653e\u56de\u5230 Pandas DataFrame \u4e2d\uff0c\u4e5f\u5f88\u7b80\u5355\uff1a housing_tr = pd.DataFrame(X, columns=housing_num.columns) Scikit-Learn \u8bbe\u8ba1 Scikit-Learn \u8bbe\u8ba1\u7684 API \u8bbe\u8ba1\u7684\u975e\u5e38\u597d\u3002\u5b83\u7684\u4e3b\u8981\u8bbe\u8ba1\u539f\u5219\u662f\uff1a \u4e00\u81f4\u6027\uff1a\u6240\u6709\u5bf9\u8c61\u7684\u63a5\u53e3\u4e00\u81f4\u4e14\u7b80\u5355\uff1a \u4f30\u8ba1\u5668\uff08estimator\uff09\u3002\u4efb\u4f55\u53ef\u4ee5\u57fa\u4e8e\u6570\u636e\u96c6\u5bf9\u4e00\u4e9b\u53c2\u6570\u8fdb\u884c\u4f30\u8ba1\u7684\u5bf9\u8c61\u90fd\u88ab\u79f0\u4e3a\u4f30\u8ba1\u5668\uff08\u6bd4\u5982\uff0c imputer \u5c31\u662f\u4e2a\u4f30\u8ba1\u5668\uff09\u3002\u4f30\u8ba1\u672c\u8eab\u662f\u901a\u8fc7 fit() \u65b9\u6cd5\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u6570\u636e\u96c6\u4f5c\u4e3a\u53c2\u6570\uff08\u5bf9\u4e8e\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u9700\u8981\u4e24\u4e2a\u6570\u636e\u96c6\uff1b\u7b2c\u4e8c\u4e2a\u6570\u636e\u96c6\u5305\u542b\u6807\u7b7e\uff09\u3002\u4efb\u4f55\u5176\u5b83\u7528\u6765\u6307\u5bfc\u4f30\u8ba1\u8fc7\u7a0b\u7684\u53c2\u6570\u90fd\u88ab\u5f53\u505a\u8d85\u53c2\u6570\uff08\u6bd4\u5982 imputer \u7684 strategy \uff09\uff0c\u5e76\u4e14\u8d85\u53c2\u6570\u8981\u88ab\u8bbe\u7f6e\u6210\u5b9e\u4f8b\u53d8\u91cf\uff08\u901a\u5e38\u901a\u8fc7\u6784\u9020\u5668\u53c2\u6570\u8bbe\u7f6e\uff09\u3002 \u8f6c\u6362\u5668\uff08transformer\uff09\u3002\u4e00\u4e9b\u4f30\u8ba1\u5668\uff08\u6bd4\u5982 imputer \uff09\u4e5f\u53ef\u4ee5\u8f6c\u6362\u6570\u636e\u96c6\uff0c\u8fd9\u4e9b\u4f30\u8ba1\u5668\u88ab\u79f0\u4e3a\u8f6c\u6362\u5668\u3002API\u4e5f\u662f\u76f8\u5f53\u7b80\u5355\uff1a\u8f6c\u6362\u662f\u901a\u8fc7 transform() \u65b9\u6cd5\uff0c\u88ab\u8f6c\u6362\u7684\u6570\u636e\u96c6\u4f5c\u4e3a\u53c2\u6570\u3002\u8fd4\u56de\u7684\u662f\u7ecf\u8fc7\u8f6c\u6362\u7684\u6570\u636e\u96c6\u3002\u8f6c\u6362\u8fc7\u7a0b\u4f9d\u8d56\u5b66\u4e60\u5230\u7684\u53c2\u6570\uff0c\u6bd4\u5982 imputer \u7684\u4f8b\u5b50\u3002\u6240\u6709\u7684\u8f6c\u6362\u90fd\u6709\u4e00\u4e2a\u4fbf\u6377\u7684\u65b9\u6cd5 fit_transform() \uff0c\u7b49\u540c\u4e8e\u8c03\u7528 fit() \u518d transform() \uff08\u4f46\u6709\u65f6 fit_transform() \u7ecf\u8fc7\u4f18\u5316\uff0c\u8fd0\u884c\u7684\u66f4\u5feb\uff09\u3002 \u9884\u6d4b\u5668\uff08predictor\uff09\u3002\u6700\u540e\uff0c\u4e00\u4e9b\u4f30\u8ba1\u5668\u53ef\u4ee5\u6839\u636e\u7ed9\u51fa\u7684\u6570\u636e\u96c6\u505a\u9884\u6d4b\uff0c\u8fd9\u4e9b\u4f30\u8ba1\u5668\u79f0\u4e3a\u9884\u6d4b\u5668\u3002\u4f8b\u5982\uff0c\u4e0a\u4e00\u7ae0\u7684 LinearRegression \u6a21\u578b\u5c31\u662f\u4e00\u4e2a\u9884\u6d4b\u5668\uff1a\u5b83\u6839\u636e\u4e00\u4e2a\u56fd\u5bb6\u7684\u4eba\u5747 GDP \u9884\u6d4b\u751f\u6d3b\u6ee1\u610f\u5ea6\u3002\u9884\u6d4b\u5668\u6709\u4e00\u4e2a predict() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u7528\u65b0\u5b9e\u4f8b\u7684\u6570\u636e\u96c6\u505a\u51fa\u76f8\u5e94\u7684\u9884\u6d4b\u3002\u9884\u6d4b\u5668\u8fd8\u6709\u4e00\u4e2a score() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u6839\u636e\u6d4b\u8bd5\u96c6\uff08\u548c\u76f8\u5e94\u7684\u6807\u7b7e\uff0c\u5982\u679c\u662f\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u7684\u8bdd\uff09\u5bf9\u9884\u6d4b\u8fdb\u884c\u8861\u5668\u3002 \u53ef\u68c0\u9a8c\u3002\u6240\u6709\u4f30\u8ba1\u5668\u7684\u8d85\u53c2\u6570\u90fd\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f8b\u7684public\u53d8\u91cf\u76f4\u63a5\u8bbf\u95ee\uff08\u6bd4\u5982\uff0c imputer.strategy \uff09\uff0c\u5e76\u4e14\u6240\u6709\u4f30\u8ba1\u5668\u5b66\u4e60\u5230\u7684\u53c2\u6570\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u5b9e\u4f8b\u53d8\u91cf\u540d\u540e\u52a0\u4e0b\u5212\u7ebf\u6765\u8bbf\u95ee\uff08\u6bd4\u5982\uff0c imputer.statistics_ \uff09\u3002 \u7c7b\u4e0d\u53ef\u6269\u6563\u3002\u6570\u636e\u96c6\u88ab\u8868\u793a\u6210 NumPy \u6570\u7ec4\u6216 SciPy \u7a00\u758f\u77e9\u9635\uff0c\u800c\u4e0d\u662f\u81ea\u5236\u7684\u7c7b\u3002\u8d85\u53c2\u6570\u53ea\u662f\u666e\u901a\u7684 Python \u5b57\u7b26\u4e32\u6216\u6570\u5b57\u3002 \u53ef\u7ec4\u5408\u3002\u5c3d\u53ef\u80fd\u4f7f\u7528\u73b0\u5b58\u7684\u6a21\u5757\u3002\u4f8b\u5982\uff0c\u7528\u4efb\u610f\u7684\u8f6c\u6362\u5668\u5e8f\u5217\u52a0\u4e0a\u4e00\u4e2a\u4f30\u8ba1\u5668\uff0c\u5c31\u53ef\u4ee5\u505a\u6210\u4e00\u4e2a\u6d41\u6c34\u7ebf\uff0c\u540e\u9762\u4f1a\u770b\u5230\u4f8b\u5b50\u3002 \u5408\u7406\u7684\u9ed8\u8ba4\u503c\u3002Scikit-Learn \u7ed9\u5927\u591a\u6570\u53c2\u6570\u63d0\u4f9b\u4e86\u5408\u7406\u7684\u9ed8\u8ba4\u503c\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u521b\u5efa\u4e00\u4e2a\u7cfb\u7edf\u3002 \u5904\u7406\u6587\u672c\u548c\u7c7b\u522b\u5c5e\u6027 \u524d\u9762\uff0c\u6211\u4eec\u4e22\u5f03\u4e86\u7c7b\u522b\u5c5e\u6027 ocean_proximity \uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u6587\u672c\u5c5e\u6027\uff0c\u4e0d\u80fd\u8ba1\u7b97\u51fa\u4e2d\u4f4d\u6570\u3002\u5927\u591a\u6570\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u8ddf\u559c\u6b22\u548c\u6570\u5b57\u6253\u4ea4\u9053\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u628a\u8fd9\u4e9b\u6587\u672c\u6807\u7b7e\u8f6c\u6362\u4e3a\u6570\u5b57\u3002 Scikit-Learn \u4e3a\u8fd9\u4e2a\u4efb\u52a1\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f6c\u6362\u5668 LabelEncoder \uff1a >>> from sklearn.preprocessing import LabelEncoder >>> encoder = LabelEncoder() >>> housing_cat = housing[\"ocean_proximity\"] >>> housing_cat_encoded = encoder.fit_transform(housing_cat) >>> housing_cat_encoded array([1, 1, 4, ..., 1, 0, 3]) \u8bd1\u6ce8: \u5728\u539f\u4e66\u4e2d\u4f7f\u7528 LabelEncoder \u8f6c\u6362\u5668\u6765\u8f6c\u6362\u6587\u672c\u7279\u5f81\u5217\u7684\u65b9\u5f0f\u662f\u9519\u8bef\u7684\uff0c\u8be5\u8f6c\u6362\u5668\u53ea\u80fd\u7528\u6765\u8f6c\u6362\u6807\u7b7e\uff08\u6b63\u5982\u5176\u540d\uff09\u3002\u5728\u8fd9\u91cc\u4f7f\u7528 LabelEncoder \u6ca1\u6709\u51fa\u9519\u7684\u539f\u56e0\u662f\u8be5\u6570\u636e\u53ea\u6709\u4e00\u5217\u6587\u672c\u7279\u5f81\u503c\uff0c\u5728\u6709\u591a\u4e2a\u6587\u672c\u7279\u5f81\u5217\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u9519\u3002\u5e94\u4f7f\u7528 factorize() \u65b9\u6cd5\u6765\u8fdb\u884c\u64cd\u4f5c\uff1a python housing_cat_encoded, housing_categories = housing_cat.factorize() housing_cat_encoded[:10] \u597d\u4e86\u4e00\u4e9b\uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55 ML \u7b97\u6cd5\u91cc\u7528\u8fd9\u4e2a\u6570\u503c\u6570\u636e\u4e86\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6620\u5c04\u8868\uff0c\u7f16\u7801\u5668\u662f\u901a\u8fc7\u5c5e\u6027 classes_ \u6765\u5b66\u4e60\u7684\uff08 <1H OCEAN \u88ab\u6620\u5c04\u4e3a 0\uff0c INLAND \u88ab\u6620\u5c04\u4e3a 1\uff0c\u7b49\u7b49\uff09\uff1a >>> print(encoder.classes_) ['<1H OCEAN' 'INLAND' 'ISLAND' 'NEAR BAY' 'NEAR OCEAN'] \u8fd9\u79cd\u505a\u6cd5\u7684\u95ee\u9898\u662f\uff0cML \u7b97\u6cd5\u4f1a\u8ba4\u4e3a\u4e24\u4e2a\u4e34\u8fd1\u7684\u503c\u6bd4\u4e24\u4e2a\u758f\u8fdc\u7684\u503c\u8981\u66f4\u76f8\u4f3c\u3002\u663e\u7136\u8fd9\u6837\u4e0d\u5bf9\uff08\u6bd4\u5982\uff0c\u5206\u7c7b 0 \u548c 4 \u6bd4 0 \u548c 1 \u66f4\u76f8\u4f3c\uff09\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u7ed9\u6bcf\u4e2a\u5206\u7c7b\u521b\u5efa\u4e00\u4e2a\u4e8c\u5143\u5c5e\u6027\uff1a\u5f53\u5206\u7c7b\u662f <1H OCEAN \uff0c\u8be5\u5c5e\u6027\u4e3a 1\uff08\u5426\u5219\u4e3a 0\uff09\uff0c\u5f53\u5206\u7c7b\u662f INLAND \uff0c\u53e6\u4e00\u4e2a\u5c5e\u6027\u7b49\u4e8e 1\uff08\u5426\u5219\u4e3a 0\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u79f0\u4f5c\u72ec\u70ed\u7f16\u7801\uff08One-Hot Encoding\uff09\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\u4f1a\u7b49\u4e8e 1\uff08\u70ed\uff09\uff0c\u5176\u4f59\u4f1a\u662f 0\uff08\u51b7\uff09\u3002 Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7f16\u7801\u5668 OneHotEncoder \uff0c\u7528\u4e8e\u5c06\u6574\u6570\u5206\u7c7b\u503c\u8f6c\u53d8\u4e3a\u72ec\u70ed\u5411\u91cf\u3002\u6ce8\u610f fit_transform() \u7528\u4e8e 2D \u6570\u7ec4\uff0c\u800c housing_cat_encoded \u662f\u4e00\u4e2a 1D \u6570\u7ec4\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u5176\u53d8\u5f62\uff1a >>> from sklearn.preprocessing import OneHotEncoder >>> encoder = OneHotEncoder() >>> housing_cat_1hot = encoder.fit_transform(housing_cat_encoded.reshape(-1,1)) >>> housing_cat_1hot <16513x5 sparse matrix of type '<class 'numpy.float64'>' with 16513 stored elements in Compressed Sparse Row format> \u6ce8\u610f\u8f93\u51fa\u7ed3\u679c\u662f\u4e00\u4e2a SciPy \u7a00\u758f\u77e9\u9635\uff0c\u800c\u4e0d\u662f NumPy \u6570\u7ec4\u3002\u5f53\u7c7b\u522b\u5c5e\u6027\u6709\u6570\u5343\u4e2a\u5206\u7c7b\u65f6\uff0c\u8fd9\u6837\u975e\u5e38\u6709\u7528\u3002\u7ecf\u8fc7\u72ec\u70ed\u7f16\u7801\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6709\u6570\u5343\u5217\u7684\u77e9\u9635\uff0c\u8fd9\u4e2a\u77e9\u9635\u6bcf\u884c\u53ea\u6709\u4e00\u4e2a 1\uff0c\u5176\u4f59\u90fd\u662f 0\u3002\u4f7f\u7528\u5927\u91cf\u5185\u5b58\u6765\u5b58\u50a8\u8fd9\u4e9b 0 \u975e\u5e38\u6d6a\u8d39\uff0c\u6240\u4ee5\u7a00\u758f\u77e9\u9635\u53ea\u5b58\u50a8\u975e\u96f6\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u4f60\u53ef\u4ee5\u50cf\u4e00\u4e2a 2D \u6570\u636e\u90a3\u6837\u8fdb\u884c\u4f7f\u7528\uff0c\u4f46\u662f\u5982\u679c\u4f60\u771f\u7684\u60f3\u5c06\u5176\u8f6c\u53d8\u6210\u4e00\u4e2a\uff08\u5bc6\u96c6\u7684\uff09NumPy \u6570\u7ec4\uff0c\u53ea\u9700\u8c03\u7528 toarray() \u65b9\u6cd5\uff1a >>> housing_cat_1hot.toarray() array([[ 0., 1., 0., 0., 0.], [ 0., 1., 0., 0., 0.], [ 0., 0., 0., 0., 1.], ..., [ 0., 1., 0., 0., 0.], [ 1., 0., 0., 0., 0.], [ 0., 0., 0., 1., 0.]]) \u4f7f\u7528\u7c7b LabelBinarizer \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u6b65\u6267\u884c\u8fd9\u4e24\u4e2a\u8f6c\u6362\uff08\u4ece\u6587\u672c\u5206\u7c7b\u5230\u6574\u6570\u5206\u7c7b\uff0c\u518d\u4ece\u6574\u6570\u5206\u7c7b\u5230\u72ec\u70ed\u5411\u91cf\uff09\uff1a >>> from sklearn.preprocessing import LabelBinarizer >>> encoder = LabelBinarizer() >>> housing_cat_1hot = encoder.fit_transform(housing_cat) >>> housing_cat_1hot array([[0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 1], ..., [0, 1, 0, 0, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1, 0]]) \u6ce8\u610f\u9ed8\u8ba4\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5bc6\u96c6 NumPy \u6570\u7ec4\u3002\u5411\u6784\u9020\u5668 LabelBinarizer \u4f20\u9012 sparse_output=True \uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7a00\u758f\u77e9\u9635\u3002 \u8bd1\u6ce8: \u5728\u539f\u4e66\u4e2d\u4f7f\u7528 LabelBinarizer \u7684\u65b9\u5f0f\u4e5f\u662f\u9519\u8bef\u7684\uff0c\u8be5\u7c7b\u4e5f\u5e94\u7528\u4e8e\u6807\u7b7e\u5217\u7684\u8f6c\u6362\u3002\u6b63\u786e\u505a\u6cd5\u662f\u4f7f\u7528sklearn\u5373\u5c06\u63d0\u4f9b\u7684 CategoricalEncoder \u7c7b\u3002\u5982\u679c\u5728\u4f60\u9605\u8bfb\u6b64\u6587\u65f6sklearn\u4e2d\u5c1a\u672a\u63d0\u4f9b\u6b64\u7c7b\uff0c\u7528\u5982\u4e0b\u65b9\u5f0f\u4ee3\u66ff\uff1a\uff08\u6765\u81ea Pull Request #9151\uff09 ```python Definition of the CategoricalEncoder class, copied from PR #9151. Just run this cell, or copy it to your code, do not try to understand it (yet). from sklearn.base import BaseEstimator, TransformerMixin from sklearn.utils import check_array from sklearn.preprocessing import LabelEncoder from scipy import sparse class CategoricalEncoder(BaseEstimator, TransformerMixin): \"\"\"Encode categorical features as a numeric array. The input to this transformer should be a matrix of integers or strings, denoting the values taken on by categorical (discrete) features. The features can be encoded using a one-hot aka one-of-K scheme ( encoding='onehot' , the default) or converted to ordinal integers ( encoding='ordinal' ). This encoding is needed for feeding categorical data to many scikit-learn estimators, notably linear models and SVMs with the standard kernels. Read more in the :ref: User Guide <preprocessing_categorical_features> . Parameters ---------- encoding : str, 'onehot', 'onehot-dense' or 'ordinal' The type of encoding to use (default is 'onehot'): - 'onehot': encode the features using a one-hot aka one-of-K scheme (or also called 'dummy' encoding). This creates a binary column for each category and returns a sparse matrix. - 'onehot-dense': the same as 'onehot' but returns a dense array instead of a sparse matrix. - 'ordinal': encode the features as ordinal integers. This results in a single column of integers (0 to n_categories - 1) per feature. categories : 'auto' or a list of lists/arrays of values. Categories (unique values) per feature: - 'auto' : Determine categories automatically from the training data. - list : categories[i] holds the categories expected in the ith column. The passed categories are sorted before encoding the data (used categories can be found in the categories_ attribute). dtype : number type, default np.float64 Desired dtype of output. handle_unknown : 'error' (default) or 'ignore' Whether to raise an error or ignore if a unknown categorical feature is present during transform (default is to raise). When this is parameter is set to 'ignore' and an unknown category is encountered during transform, the resulting one-hot encoded columns for this feature will be all zeros. Ignoring unknown categories is not supported for encoding='ordinal' . Attributes ---------- categories_ : list of arrays The categories of each feature determined during fitting. When categories were specified manually, this holds the sorted categories (in order corresponding with output of transform ). Examples -------- Given a dataset with three features and two samples, we let the encoder find the maximum value per feature and transform the data to a binary one-hot encoding. >>> from sklearn.preprocessing import CategoricalEncoder >>> enc = CategoricalEncoder(handle_unknown='ignore') >>> enc.fit([[0, 0, 3], [1, 1, 0], [0, 2, 1], [1, 0, 2]]) ... # doctest: +ELLIPSIS CategoricalEncoder(categories='auto', dtype=<... 'numpy.float64'>, encoding='onehot', handle_unknown='ignore') >>> enc.transform([[0, 1, 1], [1, 0, 4]]).toarray() array([[ 1., 0., 0., 1., 0., 0., 1., 0., 0.], [ 0., 1., 1., 0., 0., 0., 0., 0., 0.]]) See also -------- sklearn.preprocessing.OneHotEncoder : performs a one-hot encoding of integer ordinal features. The OneHotEncoder assumes that input features take on values in the range [0, max(feature)] instead of using the unique values. sklearn.feature_extraction.DictVectorizer : performs a one-hot encoding of dictionary items (also handles string-valued features). sklearn.feature_extraction.FeatureHasher : performs an approximate one-hot encoding of dictionary items or strings. \"\"\" def __init__(self, encoding='onehot', categories='auto', dtype=np.float64, handle_unknown='error'): self.encoding = encoding self.categories = categories self.dtype = dtype self.handle_unknown = handle_unknown def fit(self, X, y=None): \"\"\"Fit the CategoricalEncoder to X. Parameters ---------- X : array-like, shape [n_samples, n_feature] The data to determine the categories of each feature. Returns ------- self \"\"\" if self.encoding not in ['onehot', 'onehot-dense', 'ordinal']: template = (\"encoding should be either 'onehot', 'onehot-dense' \" \"or 'ordinal', got %s\") raise ValueError(template % self.handle_unknown) if self.handle_unknown not in ['error', 'ignore']: template = (\"handle_unknown should be either 'error' or \" \"'ignore', got %s\") raise ValueError(template % self.handle_unknown) if self.encoding == 'ordinal' and self.handle_unknown == 'ignore': raise ValueError(\"handle_unknown='ignore' is not supported for\" \" encoding='ordinal'\") X = check_array(X, dtype=np.object, accept_sparse='csc', copy=True) n_samples, n_features = X.shape self._label_encoders_ = [LabelEncoder() for _ in range(n_features)] for i in range(n_features): le = self._label_encoders_[i] Xi = X[:, i] if self.categories == 'auto': le.fit(Xi) else: valid_mask = np.in1d(Xi, self.categories[i]) if not np.all(valid_mask): if self.handle_unknown == 'error': diff = np.unique(Xi[~valid_mask]) msg = (\"Found unknown categories {0} in column {1}\" \" during fit\".format(diff, i)) raise ValueError(msg) le.classes_ = np.array(np.sort(self.categories[i])) self.categories_ = [le.classes_ for le in self._label_encoders_] return self def transform(self, X): \"\"\"Transform X using one-hot encoding. Parameters ---------- X : array-like, shape [n_samples, n_features] The data to encode. Returns ------- X_out : sparse matrix or a 2-d array Transformed input. \"\"\" X = check_array(X, accept_sparse='csc', dtype=np.object, copy=True) n_samples, n_features = X.shape X_int = np.zeros_like(X, dtype=np.int) X_mask = np.ones_like(X, dtype=np.bool) for i in range(n_features): valid_mask = np.in1d(X[:, i], self.categories_[i]) if not np.all(valid_mask): if self.handle_unknown == 'error': diff = np.unique(X[~valid_mask, i]) msg = (\"Found unknown categories {0} in column {1}\" \" during transform\".format(diff, i)) raise ValueError(msg) else: # Set the problematic rows to an acceptable value and # continue `The rows are marked `X_mask` and will be # removed later. X_mask[:, i] = valid_mask X[:, i][~valid_mask] = self.categories_[i][0] X_int[:, i] = self._label_encoders_[i].transform(X[:, i]) if self.encoding == 'ordinal': return X_int.astype(self.dtype, copy=False) mask = X_mask.ravel() n_values = [cats.shape[0] for cats in self.categories_] n_values = np.array([0] + n_values) indices = np.cumsum(n_values) column_indices = (X_int + indices[:-1]).ravel()[mask] row_indices = np.repeat(np.arange(n_samples, dtype=np.int32), n_features)[mask] data = np.ones(n_samples * n_features)[mask] out = sparse.csc_matrix((data, (row_indices, column_indices)), shape=(n_samples, indices[-1]), dtype=self.dtype).tocsr() if self.encoding == 'onehot-dense': return out.toarray() else: return out ``` \u8f6c\u6362\u65b9\u6cd5\uff1a ```python from sklearn.preprocessing import CategoricalEncoder # in future versions of Scikit-Learn cat_encoder = CategoricalEncoder() housing_cat_reshaped = housing_cat.values.reshape(-1, 1) housing_cat_1hot = cat_encoder.fit_transform(housing_cat_reshaped) housing_cat_1hot ``` \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668 \u5c3d\u7ba1 Scikit-Learn \u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u7528\u7684\u8f6c\u6362\u5668\uff0c\u4f60\u8fd8\u662f\u9700\u8981\u81ea\u5df1\u52a8\u624b\u5199\u8f6c\u6362\u5668\u6267\u884c\u4efb\u52a1\uff0c\u6bd4\u5982\u81ea\u5b9a\u4e49\u7684\u6e05\u7406\u64cd\u4f5c\uff0c\u6216\u5c5e\u6027\u7ec4\u5408\u3002\u4f60\u9700\u8981\u8ba9\u81ea\u5236\u7684\u8f6c\u6362\u5668\u4e0e Scikit-Learn \u7ec4\u4ef6\uff08\u6bd4\u5982\u6d41\u6c34\u7ebf\uff09\u65e0\u7f1d\u8854\u63a5\u5de5\u4f5c\uff0c\u56e0\u4e3a Scikit-Learn \u662f\u4f9d\u8d56\u9e2d\u5b50\u7c7b\u578b\u7684\uff08\u800c\u4e0d\u662f\u7ee7\u627f\uff09\uff0c\u4f60\u6240\u9700\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u7c7b\u5e76\u6267\u884c\u4e09\u4e2a\u65b9\u6cd5\uff1a fit() \uff08\u8fd4\u56de self \uff09\uff0c transform() \uff0c\u548c fit_transform() \u3002\u901a\u8fc7\u6dfb\u52a0 TransformerMixin \u4f5c\u4e3a\u57fa\u7c7b\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5f97\u5230\u6700\u540e\u4e00\u4e2a\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u6dfb\u52a0 BaseEstimator \u4f5c\u4e3a\u57fa\u7c7b\uff08\u4e14\u6784\u9020\u5668\u4e2d\u907f\u514d\u4f7f\u7528 *args \u548c **kargs \uff09\uff0c\u4f60\u5c31\u80fd\u5f97\u5230\u4e24\u4e2a\u989d\u5916\u7684\u65b9\u6cd5\uff08 get_params() \u548c set_params() \uff09\uff0c\u4e8c\u8005\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u8d85\u53c2\u6570\u81ea\u52a8\u5fae\u8c03\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5c0f\u8f6c\u6362\u5668\u7c7b\u6dfb\u52a0\u4e86\u4e0a\u9762\u8ba8\u8bba\u7684\u5c5e\u6027\uff1a from sklearn.base import BaseEstimator, TransformerMixin rooms_ix, bedrooms_ix, population_ix, household_ix = 3, 4, 5, 6 class CombinedAttributesAdder(BaseEstimator, TransformerMixin): def __init__(self, add_bedrooms_per_room = True): # no *args or **kargs self.add_bedrooms_per_room = add_bedrooms_per_room def fit(self, X, y=None): return self # nothing else to do def transform(self, X, y=None): rooms_per_household = X[:, rooms_ix] / X[:, household_ix] population_per_household = X[:, population_ix] / X[:, household_ix] if self.add_bedrooms_per_room: bedrooms_per_room = X[:, bedrooms_ix] / X[:, rooms_ix] return np.c_[X, rooms_per_household, population_per_household, bedrooms_per_room] else: return np.c_[X, rooms_per_household, population_per_household] attr_adder = CombinedAttributesAdder(add_bedrooms_per_room=False) housing_extra_attribs = attr_adder.transform(housing.values) \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8f6c\u6362\u5668\u6709\u4e00\u4e2a\u8d85\u53c2\u6570 add_bedrooms_per_room \uff0c\u9ed8\u8ba4\u8bbe\u4e3a True \uff08\u63d0\u4f9b\u4e00\u4e2a\u5408\u7406\u7684\u9ed8\u8ba4\u503c\u5f88\u6709\u5e2e\u52a9\uff09\u3002\u8fd9\u4e2a\u8d85\u53c2\u6570\u53ef\u4ee5\u8ba9\u4f60\u65b9\u4fbf\u5730\u53d1\u73b0\u6dfb\u52a0\u4e86\u8fd9\u4e2a\u5c5e\u6027\u662f\u5426\u5bf9\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6709\u5e2e\u52a9\u3002\u66f4\u4e00\u822c\u5730\uff0c\u4f60\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u4e0d\u80fd\u5b8c\u5168\u786e\u4fdd\u7684\u6570\u636e\u51c6\u5907\u6b65\u9aa4\u6dfb\u52a0\u4e00\u4e2a\u8d85\u53c2\u6570\u3002\u6570\u636e\u51c6\u5907\u6b65\u9aa4\u8d8a\u81ea\u52a8\u5316\uff0c\u53ef\u4ee5\u81ea\u52a8\u5316\u7684\u64cd\u4f5c\u7ec4\u5408\u5c31\u8d8a\u591a\uff0c\u8d8a\u5bb9\u6613\u53d1\u73b0\u66f4\u597d\u7528\u7684\u7ec4\u5408\uff08\u5e76\u80fd\u8282\u7701\u5927\u91cf\u65f6\u95f4\uff09\u3002 \u7279\u5f81\u7f29\u653e \u6570\u636e\u8981\u505a\u7684\u6700\u91cd\u8981\u7684\u8f6c\u6362\u4e4b\u4e00\u662f\u7279\u5f81\u7f29\u653e\u3002\u9664\u4e86\u4e2a\u522b\u60c5\u51b5\uff0c\u5f53\u8f93\u5165\u7684\u6570\u503c\u5c5e\u6027\u91cf\u5ea6\u4e0d\u540c\u65f6\uff0c\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u6027\u80fd\u90fd\u4e0d\u4f1a\u597d\u3002\u8fd9\u4e2a\u89c4\u5f8b\u4e5f\u9002\u7528\u4e8e\u623f\u4ea7\u6570\u636e\uff1a\u603b\u623f\u95f4\u6570\u5206\u5e03\u8303\u56f4\u662f 6 \u5230 39320\uff0c\u800c\u6536\u5165\u4e2d\u4f4d\u6570\u53ea\u5206\u5e03\u5728 0 \u5230 15\u3002\u6ce8\u610f\u901a\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u76ee\u6807\u503c\u8fdb\u884c\u7f29\u653e\u3002 \u6709\u4e24\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u6240\u6709\u7684\u5c5e\u6027\u6709\u76f8\u540c\u7684\u91cf\u5ea6\uff1a\u7ebf\u6027\u51fd\u6570\u5f52\u4e00\u5316\uff08Min-Max scaling\uff09\u548c\u6807\u51c6\u5316\uff08standardization\uff09\u3002 \u7ebf\u6027\u51fd\u6570\u5f52\u4e00\u5316\uff08\u8bb8\u591a\u4eba\u79f0\u5176\u4e3a\u5f52\u4e00\u5316\uff08normalization\uff09\uff09\u5f88\u7b80\u5355\uff1a\u503c\u88ab\u8f6c\u53d8\u3001\u91cd\u65b0\u7f29\u653e\uff0c\u76f4\u5230\u8303\u56f4\u53d8\u6210 0 \u5230 1\u3002\u6211\u4eec\u901a\u8fc7\u51cf\u53bb\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u9664\u4ee5\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u503c\uff0c\u6765\u8fdb\u884c\u5f52\u4e00\u5316\u3002Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f6c\u6362\u5668 MinMaxScaler \u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002\u5b83\u6709\u4e00\u4e2a\u8d85\u53c2\u6570 feature_range \uff0c\u53ef\u4ee5\u8ba9\u4f60\u6539\u53d8\u8303\u56f4\uff0c\u5982\u679c\u4e0d\u5e0c\u671b\u8303\u56f4\u662f 0 \u5230 1\u3002 \u6807\u51c6\u5316\u5c31\u5f88\u4e0d\u540c\uff1a\u9996\u5148\u51cf\u53bb\u5e73\u5747\u503c\uff08\u6240\u4ee5\u6807\u51c6\u5316\u503c\u7684\u5e73\u5747\u503c\u603b\u662f 0\uff09\uff0c\u7136\u540e\u9664\u4ee5\u65b9\u5dee\uff0c\u4f7f\u5f97\u5230\u7684\u5206\u5e03\u5177\u6709\u5355\u4f4d\u65b9\u5dee\u3002\u4e0e\u5f52\u4e00\u5316\u4e0d\u540c\uff0c\u6807\u51c6\u5316\u4e0d\u4f1a\u9650\u5b9a\u503c\u5230\u67d0\u4e2a\u7279\u5b9a\u7684\u8303\u56f4\uff0c\u8fd9\u5bf9\u67d0\u4e9b\u7b97\u6cd5\u53ef\u80fd\u6784\u6210\u95ee\u9898\uff08\u6bd4\u5982\uff0c\u795e\u7ecf\u7f51\u7edc\u5e38\u9700\u8981\u8f93\u5165\u503c\u5f97\u8303\u56f4\u662f 0 \u5230 1\uff09\u3002\u4f46\u662f\uff0c\u6807\u51c6\u5316\u53d7\u5230\u5f02\u5e38\u503c\u7684\u5f71\u54cd\u5f88\u5c0f\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4e00\u4e2a\u8857\u533a\u7684\u6536\u5165\u4e2d\u4f4d\u6570\u7531\u4e8e\u67d0\u79cd\u9519\u8bef\u53d8\u6210\u4e86100\uff0c\u5f52\u4e00\u5316\u4f1a\u5c06\u5176\u5b83\u8303\u56f4\u662f 0 \u5230 15 \u7684\u503c\u53d8\u4e3a 0-0.15\uff0c\u4f46\u662f\u6807\u51c6\u5316\u4e0d\u4f1a\u53d7\u4ec0\u4e48\u5f71\u54cd\u3002Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f6c\u6362\u5668 StandardScaler \u6765\u8fdb\u884c\u6807\u51c6\u5316\u3002 \u8b66\u544a\uff1a\u4e0e\u6240\u6709\u7684\u8f6c\u6362\u4e00\u6837\uff0c\u7f29\u653e\u5668\u53ea\u80fd\u5411\u8bad\u7ec3\u96c6\u62df\u5408\uff0c\u800c\u4e0d\u662f\u5411\u5b8c\u6574\u7684\u6570\u636e\u96c6\uff08\u5305\u62ec\u6d4b\u8bd5\u96c6\uff09\u3002\u53ea\u6709\u8fd9\u6837\uff0c\u4f60\u624d\u80fd\u7528\u7f29\u653e\u5668\u8f6c\u6362\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\uff08\u548c\u65b0\u6570\u636e\uff09\u3002 \u8f6c\u6362\u6d41\u6c34\u7ebf \u4f60\u5df2\u7ecf\u770b\u5230\uff0c\u5b58\u5728\u8bb8\u591a\u6570\u636e\u8f6c\u6362\u6b65\u9aa4\uff0c\u9700\u8981\u6309\u4e00\u5b9a\u7684\u987a\u5e8f\u6267\u884c\u3002\u5e78\u8fd0\u7684\u662f\uff0cScikit-Learn \u63d0\u4f9b\u4e86\u7c7b Pipeline \uff0c\u6765\u8fdb\u884c\u8fd9\u4e00\u7cfb\u5217\u7684\u8f6c\u6362\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u5c0f\u6d41\u6c34\u7ebf\uff1a from sklearn.pipeline import Pipeline from sklearn.preprocessing import StandardScaler num_pipeline = Pipeline([ ('imputer', Imputer(strategy=\"median\")), ('attribs_adder', CombinedAttributesAdder()), ('std_scaler', StandardScaler()), ]) housing_num_tr = num_pipeline.fit_transform(housing_num) Pipeline \u6784\u9020\u5668\u9700\u8981\u4e00\u4e2a\u5b9a\u4e49\u6b65\u9aa4\u987a\u5e8f\u7684\u540d\u5b57/\u4f30\u8ba1\u5668\u5bf9\u7684\u5217\u8868\u3002\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u4f30\u8ba1\u5668\uff0c\u5176\u4f59\u90fd\u8981\u662f\u8f6c\u6362\u5668\uff08\u5373\uff0c\u5b83\u4eec\u90fd\u8981\u6709 fit_transform() \u65b9\u6cd5\uff09\u3002\u540d\u5b57\u53ef\u4ee5\u968f\u610f\u8d77\u3002 \u5f53\u4f60\u8c03\u7528\u6d41\u6c34\u7ebf\u7684 fit() \u65b9\u6cd5\uff0c\u5c31\u4f1a\u5bf9\u6240\u6709\u8f6c\u6362\u5668\u987a\u5e8f\u8c03\u7528 fit_transform() \u65b9\u6cd5\uff0c\u5c06\u6bcf\u6b21\u8c03\u7528\u7684\u8f93\u51fa\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u8c03\u7528\uff0c\u4e00\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u4f30\u8ba1\u5668\uff0c\u5b83\u53ea\u6267\u884c fit() \u65b9\u6cd5\u3002 \u6d41\u6c34\u7ebf\u66b4\u9732\u76f8\u540c\u7684\u65b9\u6cd5\u4f5c\u4e3a\u6700\u7ec8\u7684\u4f30\u8ba1\u5668\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6700\u540e\u7684\u4f30\u8ba1\u5668\u662f\u4e00\u4e2a StandardScaler \uff0c\u5b83\u662f\u4e00\u4e2a\u8f6c\u6362\u5668\uff0c\u56e0\u6b64\u8fd9\u4e2a\u6d41\u6c34\u7ebf\u6709\u4e00\u4e2a transform() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u987a\u5e8f\u5bf9\u6570\u636e\u505a\u6240\u6709\u8f6c\u6362\uff08\u5b83\u8fd8\u6709\u4e00\u4e2a fit_transform \u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\uff0c\u5c31\u4e0d\u5fc5\u5148\u8c03\u7528 fit() \u518d\u8fdb\u884c transform() \uff09\u3002 \u4f60\u73b0\u5728\u5c31\u6709\u4e86\u4e00\u4e2a\u5bf9\u6570\u503c\u7684\u6d41\u6c34\u7ebf\uff0c\u4f60\u8fd8\u9700\u8981\u5bf9\u5206\u7c7b\u503c\u5e94\u7528 LabelBinarizer \uff1a\u5982\u4f55\u5c06\u8fd9\u4e9b\u8f6c\u6362\u5199\u6210\u4e00\u4e2a\u6d41\u6c34\u7ebf\u5462\uff1fScikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7c7b FeatureUnion \u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002\u4f60\u7ed9\u5b83\u4e00\u5217\u8f6c\u6362\u5668\uff08\u53ef\u4ee5\u662f\u6240\u6709\u7684\u8f6c\u6362\u5668\uff09\uff0c\u5f53\u8c03\u7528\u5b83\u7684 transform() \u65b9\u6cd5\uff0c\u6bcf\u4e2a\u8f6c\u6362\u5668\u7684 transform() \u4f1a\u88ab\u5e76\u884c\u6267\u884c\uff0c\u7b49\u5f85\u8f93\u51fa\uff0c\u7136\u540e\u5c06\u8f93\u51fa\u5408\u5e76\u8d77\u6765\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\uff08\u5f53\u7136\uff0c\u8c03\u7528\u5b83\u7684 fit() \u65b9\u6cd5\u5c31\u4f1a\u8c03\u7528\u6bcf\u4e2a\u8f6c\u6362\u5668\u7684 fit() \uff09\u3002\u4e00\u4e2a\u5b8c\u6574\u7684\u5904\u7406\u6570\u503c\u548c\u7c7b\u522b\u5c5e\u6027\u7684\u6d41\u6c34\u7ebf\u5982\u4e0b\u6240\u793a\uff1a from sklearn.pipeline import FeatureUnion num_attribs = list(housing_num) cat_attribs = [\"ocean_proximity\"] num_pipeline = Pipeline([ ('selector', DataFrameSelector(num_attribs)), ('imputer', Imputer(strategy=\"median\")), ('attribs_adder', CombinedAttributesAdder()), ('std_scaler', StandardScaler()), ]) cat_pipeline = Pipeline([ ('selector', DataFrameSelector(cat_attribs)), ('label_binarizer', LabelBinarizer()), ]) full_pipeline = FeatureUnion(transformer_list=[ (\"num_pipeline\", num_pipeline), (\"cat_pipeline\", cat_pipeline), ]) \u8bd1\u6ce8: \u5982\u679c\u4f60\u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 cat_pipeline \u6d41\u6c34\u7ebf\u4f7f\u7528 LabelBinarizer \u8f6c\u6362\u5668\u4f1a\u5bfc\u81f4\u6267\u884c\u9519\u8bef\uff0c\u89e3\u51b3\u65b9\u6848\u662f\u7528\u4e0a\u6587\u63d0\u5230\u7684 CategoricalEncoder \u8f6c\u6362\u5668\u6765\u4ee3\u66ff\uff1a python cat_pipeline = Pipeline([ ('selector', DataFrameSelector(cat_attribs)), ('cat_encoder', CategoricalEncoder(encoding=\"onehot-dense\")), ]) \u4f60\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u8fd0\u884c\u6574\u4e2a\u6d41\u6c34\u7ebf\uff1a >>> housing_prepared = full_pipeline.fit_transform(housing) >>> housing_prepared array([[ 0.73225807, -0.67331551, 0.58426443, ..., 0. , 0. , 0. ], [-0.99102923, 1.63234656, -0.92655887, ..., 0. , 0. , 0. ], [...] >>> housing_prepared.shape (16513, 17) \u6bcf\u4e2a\u5b50\u6d41\u6c34\u7ebf\u90fd\u4ee5\u4e00\u4e2a\u9009\u62e9\u8f6c\u6362\u5668\u5f00\u59cb\uff1a\u901a\u8fc7\u9009\u62e9\u5bf9\u5e94\u7684\u5c5e\u6027\uff08\u6570\u503c\u6216\u5206\u7c7b\uff09\u3001\u4e22\u5f03\u5176\u5b83\u7684\uff0c\u6765\u8f6c\u6362\u6570\u636e\uff0c\u5e76\u5c06\u8f93\u51fa DataFrame \u8f6c\u53d8\u6210\u4e00\u4e2a NumPy \u6570\u7ec4\u3002Scikit-Learn \u6ca1\u6709\u5de5\u5177\u6765\u5904\u7406 Pandas DataFrame \uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u81ea\u5b9a\u4e49\u8f6c\u6362\u5668\u6765\u505a\u8fd9\u9879\u5de5\u4f5c\uff1a from sklearn.base import BaseEstimator, TransformerMixin class DataFrameSelector(BaseEstimator, TransformerMixin): def __init__(self, attribute_names): self.attribute_names = attribute_names def fit(self, X, y=None): return self def transform(self, X): return X[self.attribute_names].values \u9009\u62e9\u5e76\u8bad\u7ec3\u6a21\u578b \u53ef\u5230\u8fd9\u4e00\u6b65\u4e86\uff01\u4f60\u5728\u524d\u9762\u9650\u5b9a\u4e86\u95ee\u9898\u3001\u83b7\u5f97\u4e86\u6570\u636e\u3001\u63a2\u7d22\u4e86\u6570\u636e\u3001\u91c7\u6837\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u96c6\u3001\u5199\u4e86\u81ea\u52a8\u5316\u7684\u8f6c\u6362\u6d41\u6c34\u7ebf\u6765\u6e05\u7406\u548c\u4e3a\u7b97\u6cd5\u51c6\u5907\u6570\u636e\u3002\u73b0\u5728\uff0c\u4f60\u5df2\u7ecf\u51c6\u5907\u597d\u9009\u62e9\u5e76\u8bad\u7ec3\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u6a21\u578b\u4e86\u3002 \u5728\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u548c\u8bc4\u4f30 \u597d\u6d88\u606f\u662f\u57fa\u4e8e\u524d\u9762\u7684\u5de5\u4f5c\uff0c\u63a5\u4e0b\u6765\u8981\u505a\u7684\u6bd4\u4f60\u60f3\u7684\u8981\u7b80\u5355\u8bb8\u591a\u3002\u50cf\u524d\u4e00\u7ae0\u90a3\u6837\uff0c\u6211\u4eec\u5148\u6765\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff1a from sklearn.linear_model import LinearRegression lin_reg = LinearRegression() lin_reg.fit(housing_prepared, housing_labels) \u5b8c\u6bd5\uff01\u4f60\u73b0\u5728\u5c31\u6709\u4e86\u4e00\u4e2a\u53ef\u7528\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3002\u7528\u4e00\u4e9b\u8bad\u7ec3\u96c6\u4e2d\u7684\u5b9e\u4f8b\u505a\u4e0b\u9a8c\u8bc1\uff1a >>> some_data = housing.iloc[:5] >>> some_labels = housing_labels.iloc[:5] >>> some_data_prepared = full_pipeline.transform(some_data) >>> print(\"Predictions:\\t\", lin_reg.predict(some_data_prepared)) Predictions: [ 303104. 44800. 308928. 294208. 368704.] >>> print(\"Labels:\\t\\t\", list(some_labels)) Labels: [359400.0, 69700.0, 302100.0, 301300.0, 351900.0] \u884c\u7684\u901a\uff0c\u5c3d\u7ba1\u9884\u6d4b\u5e76\u4e0d\u600e\u4e48\u51c6\u786e\uff08\u6bd4\u5982\uff0c\u7b2c\u4e8c\u4e2a\u9884\u6d4b\u504f\u79bb\u4e86 50%\uff01\uff09\u3002\u8ba9\u6211\u4eec\u4f7f\u7528 Scikit-Learn \u7684 mean_squared_error \u51fd\u6570\uff0c\u7528\u5168\u90e8\u8bad\u7ec3\u96c6\u6765\u8ba1\u7b97\u4e0b\u8fd9\u4e2a\u56de\u5f52\u6a21\u578b\u7684 RMSE\uff1a >>> from sklearn.metrics import mean_squared_error >>> housing_predictions = lin_reg.predict(housing_prepared) >>> lin_mse = mean_squared_error(housing_labels, housing_predictions) >>> lin_rmse = np.sqrt(lin_mse) >>> lin_rmse 68628.413493824875 OK\uff0c\u6709\u603b\u6bd4\u6ca1\u6709\u5f3a\uff0c\u4f46\u663e\u7136\u7ed3\u679c\u5e76\u4e0d\u597d\uff1a\u5927\u591a\u6570\u8857\u533a\u7684 median_housing_values \u4f4d\u4e8e 120000 \u5230 265000 \u7f8e\u5143\u4e4b\u95f4\uff0c\u56e0\u6b64\u9884\u6d4b\u8bef\u5dee 68628 \u7f8e\u5143\u4e0d\u80fd\u8ba9\u4eba\u6ee1\u610f\u3002\u8fd9\u662f\u4e00\u4e2a\u6a21\u578b\u6b20\u62df\u5408\u8bad\u7ec3\u6570\u636e\u7684\u4f8b\u5b50\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u610f\u5473\u7740\u7279\u5f81\u6ca1\u6709\u63d0\u4f9b\u8db3\u591f\u591a\u7684\u4fe1\u606f\u6765\u505a\u51fa\u4e00\u4e2a\u597d\u7684\u9884\u6d4b\uff0c\u6216\u8005\u6a21\u578b\u5e76\u4e0d\u5f3a\u5927\u3002\u5c31\u50cf\u524d\u4e00\u7ae0\u770b\u5230\u7684\uff0c\u4fee\u590d\u6b20\u62df\u5408\u7684\u4e3b\u8981\u65b9\u6cd5\u662f\u9009\u62e9\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u7ed9\u8bad\u7ec3\u7b97\u6cd5\u63d0\u4f9b\u66f4\u597d\u7684\u7279\u5f81\uff0c\u6216\u53bb\u6389\u6a21\u578b\u4e0a\u7684\u9650\u5236\u3002\u8fd9\u4e2a\u6a21\u578b\u8fd8\u6ca1\u6709\u6b63\u5219\u5316\uff0c\u6240\u4ee5\u6392\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u9009\u9879\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u6dfb\u52a0\u66f4\u591a\u7279\u5f81\uff08\u6bd4\u5982\uff0c\u4eba\u53e3\u7684\u5bf9\u6570\u503c\uff09\uff0c\u4f46\u662f\u9996\u5148\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e2a\u66f4\u4e3a\u590d\u6742\u7684\u6a21\u578b\uff0c\u770b\u770b\u6548\u679c\u3002 \u6765\u8bad\u7ec3\u4e00\u4e2a DecisionTreeRegressor \u3002\u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u53d1\u73b0\u6570\u636e\u4e2d\u590d\u6742\u7684\u975e\u7ebf\u6027\u5173\u7cfb\uff08\u51b3\u7b56\u6811\u4f1a\u5728\u7b2c 6 \u7ae0\u8be6\u7ec6\u8bb2\u89e3\uff09\u3002\u4ee3\u7801\u770b\u8d77\u6765\u5f88\u719f\u6089\uff1a from sklearn.tree import DecisionTreeRegressor tree_reg = DecisionTreeRegressor() tree_reg.fit(housing_prepared, housing_labels) \u73b0\u5728\u6a21\u578b\u5c31\u8bad\u7ec3\u597d\u4e86\uff0c\u7528\u8bad\u7ec3\u96c6\u8bc4\u4f30\u4e0b\uff1a >>> housing_predictions = tree_reg.predict(housing_prepared) >>> tree_mse = mean_squared_error(housing_labels, housing_predictions) >>> tree_rmse = np.sqrt(tree_mse) >>> tree_rmse 0.0 \u7b49\u4e00\u4e0b\uff0c\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u6ca1\u6709\u8bef\u5dee\uff1f\u8fd9\u4e2a\u6a21\u578b\u53ef\u80fd\u662f\u7edd\u5bf9\u5b8c\u7f8e\u7684\u5417\uff1f\u5f53\u7136\uff0c\u66f4\u5927\u53ef\u80fd\u6027\u662f\u8fd9\u4e2a\u6a21\u578b\u4e25\u91cd\u8fc7\u62df\u5408\u6570\u636e\u3002\u5982\u4f55\u786e\u5b9a\u5462\uff1f\u5982\u524d\u6240\u8ff0\uff0c\u76f4\u5230\u4f60\u51c6\u5907\u8fd0\u884c\u4e00\u4e2a\u5177\u5907\u8db3\u591f\u4fe1\u5fc3\u7684\u6a21\u578b\uff0c\u90fd\u4e0d\u8981\u78b0\u6d4b\u8bd5\u96c6\uff0c\u56e0\u6b64\u4f60\u9700\u8981\u4f7f\u7528\u8bad\u7ec3\u96c6\u7684\u90e8\u5206\u6570\u636e\u6765\u505a\u8bad\u7ec3\uff0c\u7528\u4e00\u90e8\u5206\u6765\u505a\u6a21\u578b\u9a8c\u8bc1\u3002 \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u505a\u66f4\u4f73\u7684\u8bc4\u4f30 \u8bc4\u4f30\u51b3\u7b56\u6811\u6a21\u578b\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u7528\u51fd\u6570 train_test_split \u6765\u5206\u5272\u8bad\u7ec3\u96c6\uff0c\u5f97\u5230\u4e00\u4e2a\u66f4\u5c0f\u7684\u8bad\u7ec3\u96c6\u548c\u4e00\u4e2a\u9a8c\u8bc1\u96c6\uff0c\u7136\u540e\u7528\u66f4\u5c0f\u7684\u8bad\u7ec3\u96c6\u6765\u8bad\u7ec3\u6a21\u578b\uff0c\u7528\u9a8c\u8bc1\u96c6\u6765\u8bc4\u4f30\u3002\u8fd9\u9700\u8981\u4e00\u5b9a\u5de5\u4f5c\u91cf\uff0c\u5e76\u4e0d\u96be\u800c\u4e14\u4e5f\u53ef\u884c\u3002 \u53e6\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 Scikit-Learn \u7684\u4ea4\u53c9\u9a8c\u8bc1\u529f\u80fd\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u91c7\u7528\u4e86 K \u6298\u4ea4\u53c9\u9a8c\u8bc1\uff08K-fold cross-validation\uff09\uff1a\u5b83\u968f\u673a\u5730\u5c06\u8bad\u7ec3\u96c6\u5206\u6210\u5341\u4e2a\u4e0d\u540c\u7684\u5b50\u96c6\uff0c\u6210\u4e3a\u201c\u6298\u201d\uff0c\u7136\u540e\u8bad\u7ec3\u8bc4\u4f30\u51b3\u7b56\u6811\u6a21\u578b 10 \u6b21\uff0c\u6bcf\u6b21\u9009\u4e00\u4e2a\u4e0d\u7528\u7684\u6298\u6765\u505a\u8bc4\u4f30\uff0c\u7528\u5176\u5b83 9 \u4e2a\u6765\u505a\u8bad\u7ec3\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5305\u542b 10 \u4e2a\u8bc4\u5206\u7684\u6570\u7ec4\uff1a from sklearn.model_selection import cross_val_score scores = cross_val_score(tree_reg, housing_prepared, housing_labels, scoring=\"neg_mean_squared_error\", cv=10) rmse_scores = np.sqrt(-scores) \u8b66\u544a\uff1aScikit-Learn \u4ea4\u53c9\u9a8c\u8bc1\u529f\u80fd\u671f\u671b\u7684\u662f\u6548\u7528\u51fd\u6570\uff08\u8d8a\u5927\u8d8a\u597d\uff09\u800c\u4e0d\u662f\u635f\u5931\u51fd\u6570\uff08\u8d8a\u4f4e\u8d8a\u597d\uff09\uff0c\u56e0\u6b64\u5f97\u5206\u51fd\u6570\u5b9e\u9645\u4e0a\u4e0e MSE \u76f8\u53cd\uff08\u5373\u8d1f\u503c\uff09\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u524d\u9762\u7684\u4ee3\u7801\u5728\u8ba1\u7b97\u5e73\u65b9\u6839\u4e4b\u524d\u5148\u8ba1\u7b97 -scores \u3002 \u6765\u770b\u4e0b\u7ed3\u679c\uff1a >>> def display_scores(scores): ... print(\"Scores:\", scores) ... print(\"Mean:\", scores.mean()) ... print(\"Standard deviation:\", scores.std()) ... >>> display_scores(tree_rmse_scores) Scores: [ 74678.4916885 64766.2398337 69632.86942005 69166.67693232 71486.76507766 73321.65695983 71860.04741226 71086.32691692 76934.2726093 69060.93319262] Mean: 71199.4280043 Standard deviation: 3202.70522793 \u73b0\u5728\u51b3\u7b56\u6811\u5c31\u4e0d\u50cf\u524d\u9762\u770b\u8d77\u6765\u90a3\u4e48\u597d\u4e86\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u770b\u8d77\u6765\u6bd4\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u8fd8\u7cdf\uff01\u6ce8\u610f\u5230\u4ea4\u53c9\u9a8c\u8bc1\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u4f60\u5f97\u5230\u6a21\u578b\u6027\u80fd\u7684\u8bc4\u4f30\uff0c\u8fd8\u80fd\u6d4b\u91cf\u8bc4\u4f30\u7684\u51c6\u786e\u6027\uff08\u5373\uff0c\u5b83\u7684\u6807\u51c6\u5dee\uff09\u3002\u51b3\u7b56\u6811\u7684\u8bc4\u5206\u5927\u7ea6\u662f 71200\uff0c\u901a\u5e38\u6ce2\u52a8\u6709 \u00b13200\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u9a8c\u8bc1\u96c6\uff0c\u5c31\u5f97\u4e0d\u5230\u8fd9\u4e9b\u4fe1\u606f\u3002\u4f46\u662f\u4ea4\u53c9\u9a8c\u8bc1\u7684\u4ee3\u4ef7\u662f\u8bad\u7ec3\u4e86\u6a21\u578b\u591a\u6b21\uff0c\u4e0d\u53ef\u80fd\u603b\u662f\u8fd9\u6837\u3002 \u8ba9\u6211\u4eec\u8ba1\u7b97\u4e0b\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u7684\u76f8\u540c\u5206\u6570\uff0c\u4ee5\u505a\u786e\u4fdd\uff1a >>> lin_scores = cross_val_score(lin_reg, housing_prepared, housing_labels, ... scoring=\"neg_mean_squared_error\", cv=10) ... >>> lin_rmse_scores = np.sqrt(-lin_scores) >>> display_scores(lin_rmse_scores) Scores: [ 70423.5893262 65804.84913139 66620.84314068 72510.11362141 66414.74423281 71958.89083606 67624.90198297 67825.36117664 72512.36533141 68028.11688067] Mean: 68972.377566 Standard deviation: 2493.98819069 \u5224\u65ad\u6ca1\u9519\uff1a\u51b3\u7b56\u6811\u6a21\u578b\u8fc7\u62df\u5408\u5f88\u4e25\u91cd\uff0c\u5b83\u7684\u6027\u80fd\u6bd4\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u8fd8\u5dee\u3002 \u73b0\u5728\u518d\u5c1d\u8bd5\u6700\u540e\u4e00\u4e2a\u6a21\u578b\uff1a RandomForestRegressor \u3002\u7b2c7\u7ae0\u6211\u4eec\u4f1a\u770b\u5230\uff0c\u968f\u673a\u68ee\u6797\u662f\u901a\u8fc7\u7528\u7279\u5f81\u7684\u968f\u673a\u5b50\u96c6\u8bad\u7ec3\u8bb8\u591a\u51b3\u7b56\u6811\u3002\u5728\u5176\u5b83\u591a\u4e2a\u6a21\u578b\u4e4b\u4e0a\u5efa\u7acb\u6a21\u578b\u79f0\u4e3a\u96c6\u6210\u5b66\u4e60\uff08Ensemble Learning\uff09\uff0c\u5b83\u662f\u63a8\u8fdb ML \u7b97\u6cd5\u7684\u4e00\u79cd\u597d\u65b9\u6cd5\u3002\u6211\u4eec\u4f1a\u8df3\u8fc7\u5927\u90e8\u5206\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u4ee3\u7801\u672c\u8d28\u4e0a\u548c\u5176\u5b83\u6a21\u578b\u4e00\u6837\uff1a >>> from sklearn.ensemble import RandomForestRegressor >>> forest_reg = RandomForestRegressor() >>> forest_reg.fit(housing_prepared, housing_labels) >>> [...] >>> forest_rmse 22542.396440343684 >>> display_scores(forest_rmse_scores) Scores: [ 53789.2879722 50256.19806622 52521.55342602 53237.44937943 52428.82176158 55854.61222549 52158.02291609 50093.66125649 53240.80406125 52761.50852822] Mean: 52634.1919593 Standard deviation: 1576.20472269 \u73b0\u5728\u597d\u591a\u4e86\uff1a\u968f\u673a\u68ee\u6797\u770b\u8d77\u6765\u5f88\u6709\u5e0c\u671b\u3002\u4f46\u662f\uff0c\u8bad\u7ec3\u96c6\u7684\u8bc4\u5206\u4ecd\u7136\u6bd4\u9a8c\u8bc1\u96c6\u7684\u8bc4\u5206\u4f4e\u5f88\u591a\u3002\u89e3\u51b3\u8fc7\u62df\u5408\u53ef\u4ee5\u901a\u8fc7\u7b80\u5316\u6a21\u578b\uff0c\u7ed9\u6a21\u578b\u52a0\u9650\u5236\uff08\u5373\uff0c\u89c4\u6574\u5316\uff09\uff0c\u6216\u7528\u66f4\u591a\u7684\u8bad\u7ec3\u6570\u636e\u3002\u5728\u6df1\u5165\u968f\u673a\u68ee\u6797\u4e4b\u524d\uff0c\u4f60\u5e94\u8be5\u5c1d\u8bd5\u4e0b\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u5176\u5b83\u7c7b\u578b\u6a21\u578b\uff08\u4e0d\u540c\u6838\u5fc3\u7684\u652f\u6301\u5411\u91cf\u673a\uff0c\u795e\u7ecf\u7f51\u7edc\uff0c\u7b49\u7b49\uff09\uff0c\u4e0d\u8981\u5728\u8c03\u8282\u8d85\u53c2\u6570\u4e0a\u82b1\u8d39\u592a\u591a\u65f6\u95f4\u3002\u76ee\u6807\u662f\u5217\u51fa\u4e00\u4e2a\u53ef\u80fd\u6a21\u578b\u7684\u5217\u8868\uff08\u4e24\u5230\u4e94\u4e2a\uff09\u3002 \u63d0\u793a\uff1a\u4f60\u8981\u4fdd\u5b58\u6bcf\u4e2a\u8bd5\u9a8c\u8fc7\u7684\u6a21\u578b\uff0c\u4ee5\u4fbf\u540e\u7eed\u53ef\u4ee5\u518d\u7528\u3002\u8981\u786e\u4fdd\u6709\u8d85\u53c2\u6570\u548c\u8bad\u7ec3\u53c2\u6570\uff0c\u4ee5\u53ca\u4ea4\u53c9\u9a8c\u8bc1\u8bc4\u5206\uff0c\u548c\u5b9e\u9645\u7684\u9884\u6d4b\u503c\u3002\u8fd9\u53ef\u4ee5\u8ba9\u4f60\u6bd4\u8f83\u4e0d\u540c\u7c7b\u578b\u6a21\u578b\u7684\u8bc4\u5206\uff0c\u8fd8\u53ef\u4ee5\u6bd4\u8f83\u8bef\u5dee\u79cd\u7c7b\u3002\u4f60\u53ef\u4ee5\u7528 Python \u7684\u6a21\u5757 pickle \uff0c\u975e\u5e38\u65b9\u4fbf\u5730\u4fdd\u5b58 Scikit-Learn \u6a21\u578b\uff0c\u6216\u4f7f\u7528 sklearn.externals.joblib \uff0c\u540e\u8005\u5e8f\u5217\u5316\u5927 NumPy \u6570\u7ec4\u66f4\u6709\u6548\u7387\uff1a ```python from sklearn.externals import joblib joblib.dump(my_model, \"my_model.pkl\") \u7136\u540e my_model_loaded = joblib.load(\"my_model.pkl\") ``` \u6a21\u578b\u5fae\u8c03 \u5047\u8bbe\u4f60\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u91cc\u6709\u51e0\u4e2a\u6709\u5e0c\u671b\u7684\u6a21\u578b\u3002\u4f60\u73b0\u5728\u9700\u8981\u5bf9\u5b83\u4eec\u8fdb\u884c\u5fae\u8c03\u3002\u8ba9\u6211\u4eec\u6765\u770b\u51e0\u79cd\u5fae\u8c03\u7684\u65b9\u6cd5\u3002 \u7f51\u683c\u641c\u7d22 \u5fae\u8c03\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u624b\u5de5\u8c03\u6574\u8d85\u53c2\u6570\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u597d\u7684\u8d85\u53c2\u6570\u7ec4\u5408\u3002\u8fd9\u4e48\u505a\u7684\u8bdd\u4f1a\u975e\u5e38\u5197\u957f\uff0c\u4f60\u4e5f\u53ef\u80fd\u6ca1\u6709\u65f6\u95f4\u63a2\u7d22\u591a\u79cd\u7ec4\u5408\u3002 \u4f60\u5e94\u8be5\u4f7f\u7528 Scikit-Learn \u7684 GridSearchCV \u6765\u505a\u8fd9\u9879\u641c\u7d22\u5de5\u4f5c\u3002\u4f60\u6240\u9700\u8981\u505a\u7684\u662f\u544a\u8bc9 GridSearchCV \u8981\u8bd5\u9a8c\u6709\u54ea\u4e9b\u8d85\u53c2\u6570\uff0c\u8981\u8bd5\u9a8c\u4ec0\u4e48\u503c\uff0c GridSearchCV \u5c31\u80fd\u7528\u4ea4\u53c9\u9a8c\u8bc1\u8bd5\u9a8c\u6240\u6709\u53ef\u80fd\u8d85\u53c2\u6570\u503c\u7684\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u641c\u7d22\u4e86 RandomForestRegressor \u8d85\u53c2\u6570\u503c\u7684\u6700\u4f73\u7ec4\u5408\uff1a from sklearn.model_selection import GridSearchCV param_grid = [ {'n_estimators': [3, 10, 30], 'max_features': [2, 4, 6, 8]}, {'bootstrap': [False], 'n_estimators': [3, 10], 'max_features': [2, 3, 4]}, ] forest_reg = RandomForestRegressor() grid_search = GridSearchCV(forest_reg, param_grid, cv=5, scoring='neg_mean_squared_error') grid_search.fit(housing_prepared, housing_labels) \u5f53\u4f60\u4e0d\u80fd\u786e\u5b9a\u8d85\u53c2\u6570\u8be5\u6709\u4ec0\u4e48\u503c\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5c1d\u8bd5\u8fde\u7eed\u7684 10 \u7684\u5e42\uff08\u5982\u679c\u60f3\u8981\u4e00\u4e2a\u7c92\u5ea6\u66f4\u5c0f\u7684\u641c\u5bfb\uff0c\u53ef\u4ee5\u7528\u66f4\u5c0f\u7684\u6570\uff0c\u5c31\u50cf\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5bf9\u8d85\u53c2\u6570 n_estimators \u505a\u7684\uff09\u3002 param_grid \u544a\u8bc9 Scikit-Learn \u9996\u5148\u8bc4\u4f30\u6240\u6709\u7684\u5217\u5728\u7b2c\u4e00\u4e2a dict \u4e2d\u7684 n_estimators \u548c max_features \u7684 3 \u00d7 4 = 12 \u79cd\u7ec4\u5408\uff08\u4e0d\u7528\u62c5\u5fc3\u8fd9\u4e9b\u8d85\u53c2\u6570\u7684\u542b\u4e49\uff0c\u4f1a\u5728\u7b2c 7 \u7ae0\u4e2d\u89e3\u91ca\uff09\u3002\u7136\u540e\u5c1d\u8bd5\u7b2c\u4e8c\u4e2a dict \u4e2d\u8d85\u53c2\u6570\u7684 2 \u00d7 3 = 6 \u79cd\u7ec4\u5408\uff0c\u8fd9\u6b21\u4f1a\u5c06\u8d85\u53c2\u6570 bootstrap \u8bbe\u4e3a False \u800c\u4e0d\u662f True \uff08\u540e\u8005\u662f\u8be5\u8d85\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\uff09\u3002 \u603b\u4e4b\uff0c\u7f51\u683c\u641c\u7d22\u4f1a\u63a2\u7d22 12 + 6 = 18 \u79cd RandomForestRegressor \u7684\u8d85\u53c2\u6570\u7ec4\u5408\uff0c\u4f1a\u8bad\u7ec3\u6bcf\u4e2a\u6a21\u578b\u4e94\u6b21\uff08\u56e0\u4e3a\u7528\u7684\u662f\u4e94\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8bad\u7ec3\u603b\u5171\u6709 18 \u00d7 5 = 90 \u8f6e\uff01K \u6298\u5c06\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u5b8c\u6210\u540e\uff0c\u4f60\u5c31\u80fd\u83b7\u5f97\u53c2\u6570\u7684\u6700\u4f73\u7ec4\u5408\uff0c\u5982\u4e0b\u6240\u793a\uff1a >>> grid_search.best_params_ {'max_features': 6, 'n_estimators': 30} \u63d0\u793a\uff1a\u56e0\u4e3a 30 \u662f n_estimators \u7684\u6700\u5927\u503c\uff0c\u4f60\u4e5f\u5e94\u8be5\u4f30\u8ba1\u66f4\u9ad8\u7684\u503c\uff0c\u56e0\u4e3a\u8bc4\u4f30\u7684\u5206\u6570\u53ef\u80fd\u4f1a\u968f n_estimators \u7684\u589e\u5927\u800c\u6301\u7eed\u63d0\u5347\u3002 \u4f60\u8fd8\u80fd\u76f4\u63a5\u5f97\u5230\u6700\u4f73\u7684\u4f30\u8ba1\u5668\uff1a >>> grid_search.best_estimator_ RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None, max_features=6, max_leaf_nodes=None, min_samples_leaf=1, min_samples_split=2, min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1, oob_score=False, random_state=None, verbose=0, warm_start=False) \u6ce8\u610f\uff1a\u5982\u679c GridSearchCV \u662f\u4ee5\uff08\u9ed8\u8ba4\u503c\uff09 refit=True \u5f00\u59cb\u8fd0\u884c\u7684\uff0c\u5219\u4e00\u65e6\u7528\u4ea4\u53c9\u9a8c\u8bc1\u627e\u5230\u4e86\u6700\u4f73\u7684\u4f30\u8ba1\u5668\uff0c\u5c31\u4f1a\u5728\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u91cd\u65b0\u8bad\u7ec3\u3002\u8fd9\u662f\u4e00\u4e2a\u597d\u65b9\u6cd5\uff0c\u56e0\u4e3a\u7528\u66f4\u591a\u6570\u636e\u8bad\u7ec3\u4f1a\u63d0\u9ad8\u6027\u80fd\u3002 \u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u8bc4\u4f30\u5f97\u5206\uff1a >>> cvres = grid_search.cv_results_ ... for mean_score, params in zip(cvres[\"mean_test_score\"], cvres[\"params\"]): ... print(np.sqrt(-mean_score), params) ... 64912.0351358 {'max_features': 2, 'n_estimators': 3} 55535.2786524 {'max_features': 2, 'n_estimators': 10} 52940.2696165 {'max_features': 2, 'n_estimators': 30} 60384.0908354 {'max_features': 4, 'n_estimators': 3} 52709.9199934 {'max_features': 4, 'n_estimators': 10} 50503.5985321 {'max_features': 4, 'n_estimators': 30} 59058.1153485 {'max_features': 6, 'n_estimators': 3} 52172.0292957 {'max_features': 6, 'n_estimators': 10} 49958.9555932 {'max_features': 6, 'n_estimators': 30} 59122.260006 {'max_features': 8, 'n_estimators': 3} 52441.5896087 {'max_features': 8, 'n_estimators': 10} 50041.4899416 {'max_features': 8, 'n_estimators': 30} 62371.1221202 {'bootstrap': False, 'max_features': 2, 'n_estimators': 3} 54572.2557534 {'bootstrap': False, 'max_features': 2, 'n_estimators': 10} 59634.0533132 {'bootstrap': False, 'max_features': 3, 'n_estimators': 3} 52456.0883904 {'bootstrap': False, 'max_features': 3, 'n_estimators': 10} 58825.665239 {'bootstrap': False, 'max_features': 4, 'n_estimators': 3} 52012.9945396 {'bootstrap': False, 'max_features': 4, 'n_estimators': 10} \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u8bbe\u5b9a\u8d85\u53c2\u6570 max_features \u4e3a 6\uff0c n_estimators \u4e3a 30\uff0c\u5f97\u5230\u4e86\u6700\u4f73\u65b9\u6848\u3002\u5bf9\u8fd9\u4e2a\u7ec4\u5408\uff0cRMSE \u7684\u503c\u662f 49959\uff0c\u8fd9\u6bd4\u4e4b\u524d\u4f7f\u7528\u9ed8\u8ba4\u7684\u8d85\u53c2\u6570\u7684\u503c\uff0852634\uff09\u8981\u7a0d\u5fae\u597d\u4e00\u4e9b\u3002\u795d\u8d3a\u4f60\uff0c\u4f60\u6210\u529f\u5730\u5fae\u8c03\u4e86\u6700\u4f73\u6a21\u578b\uff01 \u63d0\u793a\uff1a\u4e0d\u8981\u5fd8\u8bb0\uff0c\u4f60\u53ef\u4ee5\u50cf\u8d85\u53c2\u6570\u4e00\u6837\u5904\u7406\u6570\u636e\u51c6\u5907\u7684\u6b65\u9aa4\u3002\u4f8b\u5982\uff0c\u7f51\u683c\u641c\u7d22\u53ef\u4ee5\u81ea\u52a8\u5224\u65ad\u662f\u5426\u6dfb\u52a0\u4e00\u4e2a\u4f60\u4e0d\u786e\u5b9a\u7684\u7279\u5f81\uff08\u6bd4\u5982\uff0c\u4f7f\u7528\u8f6c\u6362\u5668 CombinedAttributesAdder \u7684\u8d85\u53c2\u6570 add_bedrooms_per_room \uff09\u3002\u5b83\u8fd8\u80fd\u7528\u76f8\u4f3c\u7684\u65b9\u6cd5\u6765\u81ea\u52a8\u627e\u5230\u5904\u7406\u5f02\u5e38\u503c\u3001\u7f3a\u5931\u7279\u5f81\u3001\u7279\u5f81\u9009\u62e9\u7b49\u4efb\u52a1\u7684\u6700\u4f73\u65b9\u6cd5\u3002 \u968f\u673a\u641c\u7d22 \u5f53\u63a2\u7d22\u76f8\u5bf9\u8f83\u5c11\u7684\u7ec4\u5408\u65f6\uff0c\u5c31\u50cf\u524d\u9762\u7684\u4f8b\u5b50\uff0c\u7f51\u683c\u641c\u7d22\u8fd8\u53ef\u4ee5\u3002\u4f46\u662f\u5f53\u8d85\u53c2\u6570\u7684\u641c\u7d22\u7a7a\u95f4\u5f88\u5927\u65f6\uff0c\u6700\u597d\u4f7f\u7528 RandomizedSearchCV \u3002\u8fd9\u4e2a\u7c7b\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u7c7b GridSearchCV \u5f88\u76f8\u4f3c\uff0c\u4f46\u5b83\u4e0d\u662f\u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\uff0c\u800c\u662f\u901a\u8fc7\u9009\u62e9\u6bcf\u4e2a\u8d85\u53c2\u6570\u7684\u4e00\u4e2a\u968f\u673a\u503c\u7684\u7279\u5b9a\u6570\u91cf\u7684\u968f\u673a\u7ec4\u5408\u3002\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e24\u4e2a\u4f18\u70b9\uff1a \u5982\u679c\u4f60\u8ba9\u968f\u673a\u641c\u7d22\u8fd0\u884c\uff0c\u6bd4\u5982 1000 \u6b21\uff0c\u5b83\u4f1a\u63a2\u7d22\u6bcf\u4e2a\u8d85\u53c2\u6570\u7684 1000 \u4e2a\u4e0d\u540c\u7684\u503c\uff08\u800c\u4e0d\u662f\u50cf\u7f51\u683c\u641c\u7d22\u90a3\u6837\uff0c\u53ea\u641c\u7d22\u6bcf\u4e2a\u8d85\u53c2\u6570\u7684\u51e0\u4e2a\u503c\uff09\u3002 \u4f60\u53ef\u4ee5\u65b9\u4fbf\u5730\u901a\u8fc7\u8bbe\u5b9a\u641c\u7d22\u6b21\u6570\uff0c\u63a7\u5236\u8d85\u53c2\u6570\u641c\u7d22\u7684\u8ba1\u7b97\u91cf\u3002 \u96c6\u6210\u65b9\u6cd5 \u53e6\u4e00\u79cd\u5fae\u8c03\u7cfb\u7edf\u7684\u65b9\u6cd5\u662f\u5c06\u8868\u73b0\u6700\u597d\u7684\u6a21\u578b\u7ec4\u5408\u8d77\u6765\u3002\u7ec4\u5408\uff08\u96c6\u6210\uff09\u4e4b\u540e\u7684\u6027\u80fd\u901a\u5e38\u8981\u6bd4\u5355\u72ec\u7684\u6a21\u578b\u8981\u597d\uff08\u5c31\u50cf\u968f\u673a\u68ee\u6797\u8981\u6bd4\u5355\u72ec\u7684\u51b3\u7b56\u6811\u8981\u597d\uff09\uff0c\u7279\u522b\u662f\u5f53\u5355\u72ec\u6a21\u578b\u7684\u8bef\u5dee\u7c7b\u578b\u4e0d\u540c\u65f6\u3002\u6211\u4eec\u4f1a\u5728\u7b2c7\u7ae0\u66f4\u6df1\u5165\u5730\u8bb2\u89e3\u8fd9\u70b9\u3002 \u5206\u6790\u6700\u4f73\u6a21\u578b\u548c\u5b83\u4eec\u7684\u8bef\u5dee \u901a\u8fc7\u5206\u6790\u6700\u4f73\u6a21\u578b\uff0c\u5e38\u5e38\u53ef\u4ee5\u83b7\u5f97\u5bf9\u95ee\u9898\u66f4\u6df1\u7684\u4e86\u89e3\u3002\u6bd4\u5982\uff0c RandomForestRegressor \u53ef\u4ee5\u6307\u51fa\u6bcf\u4e2a\u5c5e\u6027\u5bf9\u4e8e\u505a\u51fa\u51c6\u786e\u9884\u6d4b\u7684\u76f8\u5bf9\u91cd\u8981\u6027\uff1a >>> feature_importances = grid_search.best_estimator_.feature_importances_ >>> feature_importances array([ 7.14156423e-02, 6.76139189e-02, 4.44260894e-02, 1.66308583e-02, 1.66076861e-02, 1.82402545e-02, 1.63458761e-02, 3.26497987e-01, 6.04365775e-02, 1.13055290e-01, 7.79324766e-02, 1.12166442e-02, 1.53344918e-01, 8.41308969e-05, 2.68483884e-03, 3.46681181e-03]) \u5c06\u91cd\u8981\u6027\u5206\u6570\u548c\u5c5e\u6027\u540d\u653e\u5230\u4e00\u8d77\uff1a >>> extra_attribs = [\"rooms_per_hhold\", \"pop_per_hhold\", \"bedrooms_per_room\"] >>> cat_one_hot_attribs = list(encoder.classes_) >>> attributes = num_attribs + extra_attribs + cat_one_hot_attribs >>> sorted(zip(feature_importances,attributes), reverse=True) [(0.32649798665134971, 'median_income'), (0.15334491760305854, 'INLAND'), (0.11305529021187399, 'pop_per_hhold'), (0.07793247662544775, 'bedrooms_per_room'), (0.071415642259275158, 'longitude'), (0.067613918945568688, 'latitude'), (0.060436577499703222, 'rooms_per_hhold'), (0.04442608939578685, 'housing_median_age'), (0.018240254462909437, 'population'), (0.01663085833886218, 'total_rooms'), (0.016607686091288865, 'total_bedrooms'), (0.016345876147580776, 'households'), (0.011216644219017424, '<1H OCEAN'), (0.0034668118081117387, 'NEAR OCEAN'), (0.0026848388432755429, 'NEAR BAY'), (8.4130896890070617e-05, 'ISLAND')] \u6709\u4e86\u8fd9\u4e2a\u4fe1\u606f\uff0c\u4f60\u5c31\u53ef\u4ee5\u4e22\u5f03\u4e00\u4e9b\u4e0d\u90a3\u4e48\u91cd\u8981\u7684\u7279\u5f81\uff08\u6bd4\u5982\uff0c\u663e\u7136\u53ea\u8981\u4e00\u4e2a ocean_proximity \u7684\u7c7b\u578b\uff08INLAND\uff09\u5c31\u591f\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e22\u5f03\u6389\u5176\u5b83\u7684\uff09\u3002 \u4f60\u8fd8\u5e94\u8be5\u770b\u4e00\u4e0b\u7cfb\u7edf\u72af\u7684\u8bef\u5dee\uff0c\u641e\u6e05\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4e9b\u8bef\u5dee\uff0c\u4ee5\u53ca\u5982\u4f55\u6539\u6b63\u95ee\u9898\uff08\u6dfb\u52a0\u66f4\u591a\u7684\u7279\u5f81\uff0c\u6216\u76f8\u53cd\uff0c\u53bb\u6389\u6ca1\u6709\u4ec0\u4e48\u4fe1\u606f\u7684\u7279\u5f81\uff0c\u6e05\u6d17\u5f02\u5e38\u503c\u7b49\u7b49\uff09\u3002 \u7528\u6d4b\u8bd5\u96c6\u8bc4\u4f30\u7cfb\u7edf \u8c03\u8282\u5b8c\u7cfb\u7edf\u4e4b\u540e\uff0c\u4f60\u7ec8\u4e8e\u6709\u4e86\u4e00\u4e2a\u6027\u80fd\u8db3\u591f\u597d\u7684\u7cfb\u7edf\u3002\u73b0\u5728\u5c31\u53ef\u4ee5\u7528\u6d4b\u8bd5\u96c6\u8bc4\u4f30\u6700\u540e\u7684\u6a21\u578b\u4e86\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u7684\uff1a\u4ece\u6d4b\u8bd5\u96c6\u5f97\u5230\u9884\u6d4b\u503c\u548c\u6807\u7b7e\uff0c\u8fd0\u884c full_pipeline \u8f6c\u6362\u6570\u636e\uff08\u8c03\u7528 transform() \uff0c\u800c\u4e0d\u662f fit_transform() \uff01\uff09\uff0c\u518d\u7528\u6d4b\u8bd5\u96c6\u8bc4\u4f30\u6700\u7ec8\u6a21\u578b\uff1a final_model = grid_search.best_estimator_ X_test = strat_test_set.drop(\"median_house_value\", axis=1) y_test = strat_test_set[\"median_house_value\"].copy() X_test_prepared = full_pipeline.transform(X_test) final_predictions = final_model.predict(X_test_prepared) final_mse = mean_squared_error(y_test, final_predictions) final_rmse = np.sqrt(final_mse) # => evaluates to 48,209.6 \u8bc4\u4f30\u7ed3\u679c\u901a\u5e38\u8981\u6bd4\u4ea4\u53c9\u9a8c\u8bc1\u7684\u6548\u679c\u5dee\u4e00\u70b9\uff0c\u5982\u679c\u4f60\u4e4b\u524d\u505a\u8fc7\u5f88\u591a\u8d85\u53c2\u6570\u5fae\u8c03\uff08\u56e0\u4e3a\u4f60\u7684\u7cfb\u7edf\u5728\u9a8c\u8bc1\u96c6\u4e0a\u5fae\u8c03\uff0c\u5f97\u5230\u4e86\u4e0d\u9519\u7684\u6027\u80fd\uff0c\u901a\u5e38\u4e0d\u4f1a\u5728\u672a\u77e5\u7684\u6570\u636e\u96c6\u4e0a\u6709\u540c\u6837\u597d\u7684\u6548\u679c\uff09\u3002\u8fd9\u4e2a\u4f8b\u5b50\u4e0d\u5c5e\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f46\u662f\u5f53\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u4f60\u4e00\u5b9a\u8981\u5fcd\u4f4f\u4e0d\u8981\u8c03\u8282\u8d85\u53c2\u6570\uff0c\u4f7f\u6d4b\u8bd5\u96c6\u7684\u6548\u679c\u53d8\u597d\uff1b\u8fd9\u6837\u7684\u63d0\u5347\u4e0d\u80fd\u63a8\u5e7f\u5230\u65b0\u6570\u636e\u4e0a\u3002 \u7136\u540e\u5c31\u662f\u9879\u76ee\u7684\u9884\u4e0a\u7ebf\u9636\u6bb5\uff1a\u4f60\u9700\u8981\u5c55\u793a\u4f60\u7684\u65b9\u6848\uff08\u91cd\u70b9\u8bf4\u660e\u5b66\u5230\u4e86\u4ec0\u4e48\u3001\u505a\u4e86\u4ec0\u4e48\u3001\u6ca1\u505a\u4ec0\u4e48\u3001\u505a\u8fc7\u4ec0\u4e48\u5047\u8bbe\u3001\u7cfb\u7edf\u7684\u9650\u5236\u662f\u4ec0\u4e48\uff0c\u7b49\u7b49\uff09\uff0c\u8bb0\u5f55\u4e0b\u6240\u6709\u4e8b\u60c5\uff0c\u7528\u6f02\u4eae\u7684\u56fe\u8868\u548c\u5bb9\u6613\u8bb0\u4f4f\u7684\u8868\u8fbe\uff08\u6bd4\u5982\uff0c\u201c\u6536\u5165\u4e2d\u4f4d\u6570\u662f\u623f\u4ef7\u6700\u91cd\u8981\u7684\u9884\u6d4b\u91cf\u201d\uff09\u505a\u4e00\u6b21\u7cbe\u5f69\u7684\u5c55\u793a\u3002 \u542f\u52a8\u3001\u76d1\u63a7\u3001\u7ef4\u62a4\u7cfb\u7edf \u5f88\u597d\uff0c\u4f60\u88ab\u5141\u8bb8\u542f\u52a8\u7cfb\u7edf\u4e86\uff01\u4f60\u9700\u8981\u4e3a\u5b9e\u9645\u751f\u4ea7\u505a\u597d\u51c6\u5907\uff0c\u7279\u522b\u662f\u63a5\u5165\u8f93\u5165\u6570\u636e\u6e90\uff0c\u5e76\u7f16\u5199\u6d4b\u8bd5\u3002 \u4f60\u8fd8\u9700\u8981\u7f16\u5199\u76d1\u63a7\u4ee3\u7801\uff0c\u4ee5\u56fa\u5b9a\u95f4\u9694\u68c0\u6d4b\u7cfb\u7edf\u7684\u5b9e\u65f6\u8868\u73b0\uff0c\u5f53\u53d1\u751f\u4e0b\u964d\u65f6\u89e6\u53d1\u62a5\u8b66\u3002\u8fd9\u5bf9\u4e8e\u6355\u83b7\u7a81\u7136\u7684\u7cfb\u7edf\u5d29\u6e83\u548c\u6027\u80fd\u4e0b\u964d\u5341\u5206\u91cd\u8981\u3002\u505a\u76d1\u63a7\u5f88\u5e38\u89c1\uff0c\u662f\u56e0\u4e3a\u6a21\u578b\u4f1a\u968f\u7740\u6570\u636e\u7684\u6f14\u5316\u800c\u6027\u80fd\u4e0b\u964d\uff0c\u9664\u975e\u6a21\u578b\u7528\u65b0\u6570\u636e\u5b9a\u671f\u8bad\u7ec3\u3002 \u8bc4\u4f30\u7cfb\u7edf\u7684\u8868\u73b0\u9700\u8981\u5bf9\u9884\u6d4b\u503c\u91c7\u6837\u5e76\u8fdb\u884c\u8bc4\u4f30\u3002\u8fd9\u901a\u5e38\u9700\u8981\u4eba\u6765\u5206\u6790\u3002\u5206\u6790\u8005\u53ef\u80fd\u662f\u9886\u57df\u4e13\u5bb6\uff0c\u6216\u8005\u662f\u4f17\u5305\u5e73\u53f0\uff08\u6bd4\u5982 Amazon Mechanical Turk \u6216 CrowdFlower\uff09\u7684\u5de5\u4eba\u3002\u4e0d\u7ba1\u91c7\u7528\u54ea\u79cd\u65b9\u6cd5\uff0c\u4f60\u90fd\u9700\u8981\u5c06\u4eba\u5de5\u8bc4\u4f30\u7684\u6d41\u6c34\u7ebf\u690d\u5165\u7cfb\u7edf\u3002 \u4f60\u8fd8\u8981\u8bc4\u4f30\u7cfb\u7edf\u8f93\u5165\u6570\u636e\u7684\u8d28\u91cf\u3002\u6709\u65f6\u56e0\u4e3a\u4f4e\u8d28\u91cf\u7684\u4fe1\u53f7\uff08\u6bd4\u5982\u5931\u7075\u7684\u4f20\u611f\u5668\u53d1\u9001\u968f\u673a\u503c\uff0c\u6216\u53e6\u4e00\u4e2a\u56e2\u961f\u7684\u8f93\u51fa\u505c\u6ede\uff09\uff0c\u7cfb\u7edf\u7684\u8868\u73b0\u4f1a\u9010\u6e10\u53d8\u5dee\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u7cfb\u7edf\u7684\u8868\u73b0\u624d\u80fd\u4e0b\u964d\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u89e6\u53d1\u8b66\u62a5\u3002\u5982\u679c\u76d1\u6d4b\u4e86\u7cfb\u7edf\u7684\u8f93\u5165\uff0c\u4f60\u5c31\u53ef\u80fd\u5c3d\u91cf\u65e9\u7684\u53d1\u73b0\u95ee\u9898\u3002\u5bf9\u4e8e\u7ebf\u4e0a\u5b66\u4e60\u7cfb\u7edf\uff0c\u76d1\u6d4b\u8f93\u5165\u6570\u636e\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002 \u6700\u540e\uff0c\u4f60\u53ef\u80fd\u60f3\u5b9a\u671f\u7528\u65b0\u6570\u636e\u8bad\u7ec3\u6a21\u578b\u3002\u4f60\u5e94\u8be5\u5c3d\u53ef\u80fd\u81ea\u52a8\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5982\u679c\u4e0d\u8fd9\u4e48\u505a\uff0c\u975e\u5e38\u6709\u53ef\u80fd\u4f60\u9700\u8981\u6bcf\u9694\u81f3\u5c11\u516d\u4e2a\u6708\u66f4\u65b0\u6a21\u578b\uff0c\u7cfb\u7edf\u7684\u8868\u73b0\u5c31\u4f1a\u4ea7\u751f\u4e25\u91cd\u6ce2\u52a8\u3002\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u662f\u4e00\u4e2a\u7ebf\u4e0a\u5b66\u4e60\u7cfb\u7edf\uff0c\u4f60\u9700\u8981\u5b9a\u671f\u4fdd\u5b58\u7cfb\u7edf\u72b6\u6001\u5feb\u7167\uff0c\u597d\u80fd\u65b9\u4fbf\u5730\u56de\u6eda\u5230\u4e4b\u524d\u7684\u5de5\u4f5c\u72b6\u6001\u3002 \u5b9e\u8df5\uff01 \u5e0c\u671b\u8fd9\u4e00\u7ae0\u80fd\u544a\u8bc9\u4f60\u673a\u5668\u5b66\u4e60\u9879\u76ee\u662f\u4ec0\u4e48\u6837\u7684\uff0c\u4f60\u80fd\u7528\u5b66\u5230\u7684\u5de5\u5177\u8bad\u7ec3\u4e00\u4e2a\u597d\u7cfb\u7edf\u3002\u4f60\u5df2\u7ecf\u770b\u5230\uff0c\u5927\u90e8\u5206\u7684\u5de5\u4f5c\u662f\u6570\u636e\u51c6\u5907\u6b65\u9aa4\u3001\u642d\u5efa\u76d1\u6d4b\u5de5\u5177\u3001\u5efa\u7acb\u4eba\u4e3a\u8bc4\u4f30\u7684\u6d41\u6c34\u7ebf\u548c\u81ea\u52a8\u5316\u5b9a\u671f\u6a21\u578b\u8bad\u7ec3\uff0c\u5f53\u7136\uff0c\u6700\u597d\u80fd\u4e86\u89e3\u6574\u4e2a\u8fc7\u7a0b\u3001\u719f\u6089\u4e09\u6216\u56db\u79cd\u7b97\u6cd5\uff0c\u800c\u4e0d\u662f\u5728\u63a2\u7d22\u9ad8\u7ea7\u7b97\u6cd5\u4e0a\u6d6a\u8d39\u5168\u90e8\u65f6\u95f4\uff0c\u5bfc\u81f4\u5728\u5168\u5c40\u4e0a\u7684\u65f6\u95f4\u4e0d\u591f\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u8fd9\u6837\u505a\uff0c\u73b0\u5728\u6700\u597d\u62ff\u8d77\u53f0\u7535\u8111\uff0c\u9009\u62e9\u4e00\u4e2a\u611f\u5174\u8da3\u7684\u6570\u636e\u96c6\uff0c\u5c06\u6574\u4e2a\u6d41\u7a0b\u4ece\u5934\u5230\u5c3e\u5b8c\u6210\u4e00\u904d\u3002\u4e00\u4e2a\u4e0d\u9519\u7684\u7740\u624b\u5f00\u59cb\u7684\u5730\u70b9\u662f\u7ade\u8d5b\u7f51\u7ad9\uff0c\u6bd4\u5982 http://kaggle.com/ \uff1a\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u4e00\u4e2a\u76ee\u6807\uff0c\u4ee5\u53ca\u5206\u4eab\u7ecf\u9a8c\u7684\u4eba\u3002 \u7ec3\u4e60 \u4f7f\u7528\u672c\u7ae0\u7684\u623f\u4ea7\u6570\u636e\u96c6\uff1a \u5c1d\u8bd5\u4e00\u4e2a\u652f\u6301\u5411\u91cf\u673a\u56de\u5f52\u5668\uff08 sklearn.svm.SVR \uff09\uff0c\u4f7f\u7528\u591a\u4e2a\u8d85\u53c2\u6570\uff0c\u6bd4\u5982 kernel=\"linear\" \uff08\u591a\u4e2a\u8d85\u53c2\u6570 C \u503c\uff09\u3002\u73b0\u5728\u4e0d\u7528\u62c5\u5fc3\u8fd9\u4e9b\u8d85\u53c2\u6570\u662f\u4ec0\u4e48\u542b\u4e49\u3002\u6700\u4f73\u7684 SVR \u9884\u6d4b\u8868\u73b0\u5982\u4f55\uff1f \u5c1d\u8bd5\u7528 RandomizedSearchCV \u66ff\u6362 GridSearchCV \u3002 \u5c1d\u8bd5\u5728\u51c6\u5907\u6d41\u6c34\u7ebf\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u53ea\u9009\u62e9\u6700\u91cd\u8981\u5c5e\u6027\u7684\u8f6c\u6362\u5668\u3002 \u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u53ef\u4ee5\u5b8c\u6210\u6570\u636e\u51c6\u5907\u548c\u6700\u7ec8\u9884\u6d4b\u7684\u6d41\u6c34\u7ebf\u3002 \u4f7f\u7528 GridSearchCV \u81ea\u52a8\u63a2\u7d22\u4e00\u4e9b\u51c6\u5907\u8fc7\u7a0b\u4e2d\u7684\u5019\u9009\u9879\u3002 \u7ec3\u4e60\u9898\u7b54\u6848\u53ef\u4ee5\u5728 \u7ebf\u4e0a\u7684 Jupyter notebook \u627e\u5230\u3002","title":"2.\u4e00\u4e2a\u5b8c\u6574\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_1","text":"\u672c\u7ae0\u4e2d\uff0c\u4f60\u4f1a\u5047\u88c5\u4f5c\u4e3a\u88ab\u4e00\u5bb6\u5730\u4ea7\u516c\u53f8\u521a\u521a\u96c7\u4f63\u7684\u6570\u636e\u79d1\u5b66\u5bb6\uff0c\u5b8c\u6574\u5730\u5b66\u4e60\u4e00\u4e2a\u6848\u4f8b\u9879\u76ee\u3002\u4e0b\u9762\u662f\u4e3b\u8981\u6b65\u9aa4\uff1a \u9879\u76ee\u6982\u8ff0\u3002 \u83b7\u53d6\u6570\u636e\u3002 \u53d1\u73b0\u5e76\u53ef\u89c6\u5316\u6570\u636e\uff0c\u53d1\u73b0\u89c4\u5f8b\u3002 \u4e3a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u51c6\u5907\u6570\u636e\u3002 \u9009\u62e9\u6a21\u578b\uff0c\u8fdb\u884c\u8bad\u7ec3\u3002 \u5fae\u8c03\u6a21\u578b\u3002 \u7ed9\u51fa\u89e3\u51b3\u65b9\u6848\u3002 \u90e8\u7f72\u3001\u76d1\u63a7\u3001\u7ef4\u62a4\u7cfb\u7edf\u3002","title":"\u4e8c\u3001\u4e00\u4e2a\u5b8c\u6574\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_2","text":"\u5b66\u4e60\u673a\u5668\u5b66\u4e60\u65f6\uff0c\u6700\u597d\u4f7f\u7528\u771f\u5b9e\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4eba\u5de5\u6570\u636e\u96c6\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e0a\u5343\u4e2a\u5f00\u6e90\u6570\u636e\u96c6\u53ef\u4ee5\u8fdb\u884c\u9009\u62e9\uff0c\u6db5\u76d6\u591a\u4e2a\u9886\u57df\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u53ef\u4ee5\u67e5\u627e\u7684\u6570\u636e\u7684\u5730\u65b9\uff1a \u6d41\u884c\u7684\u5f00\u6e90\u6570\u636e\u4ed3\u5e93\uff1a UC Irvine Machine Learning Repository Kaggle datasets Amazon\u2019s AWS datasets \u51c6\u5165\u53e3\uff08\u63d0\u4f9b\u5f00\u6e90\u6570\u636e\u5217\u8868\uff09 http://dataportals.org/ http://opendatamonitor.eu/ http://quandl.com/ \u5176\u5b83\u5217\u51fa\u6d41\u884c\u5f00\u6e90\u6570\u636e\u4ed3\u5e93\u7684\u7f51\u9875\uff1a Wikipedia\u2019s list of Machine Learning datasets Quora.com question Datasets subreddit \u672c\u7ae0\uff0c\u6211\u4eec\u9009\u62e9\u7684\u662f StatLib \u7684\u52a0\u5dde\u623f\u4ea7\u4ef7\u683c\u6570\u636e\u96c6\uff08\u89c1\u56fe 2-1\uff09\u3002\u8fd9\u4e2a\u6570\u636e\u96c6\u662f\u57fa\u4e8e 1990 \u5e74\u52a0\u5dde\u666e\u67e5\u7684\u6570\u636e\u3002\u6570\u636e\u5df2\u7ecf\u6709\u70b9\u8001\uff081990 \u5e74\u8fd8\u80fd\u4e70\u4e00\u4e2a\u6e7e\u533a\u4e0d\u9519\u7684\u623f\u5b50\uff09\uff0c\u4f46\u662f\u5b83\u6709\u8bb8\u591a\u4f18\u70b9\uff0c\u5229\u4e8e\u5b66\u4e60\uff0c\u6240\u4ee5\u5047\u8bbe\u8fd9\u4e2a\u6570\u636e\u4e3a\u6700\u8fd1\u7684\u3002\u4e3a\u4e86\u4fbf\u4e8e\u6559\u5b66\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7c7b\u522b\u5c5e\u6027\uff0c\u5e76\u9664\u53bb\u4e86\u4e00\u4e9b\u3002 \u56fe 2-1 \u52a0\u5dde\u623f\u4ea7\u4ef7\u683c","title":"\u4f7f\u7528\u771f\u5b9e\u6570\u636e"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_3","text":"\u6b22\u8fce\u6765\u5230\u673a\u5668\u5b66\u4e60\u623f\u5730\u4ea7\u516c\u53f8\uff01\u4f60\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u662f\u5229\u7528\u52a0\u5dde\u666e\u67e5\u6570\u636e\uff0c\u5efa\u7acb\u4e00\u4e2a\u52a0\u5dde\u623f\u4ef7\u6a21\u578b\u3002\u8fd9\u4e2a\u6570\u636e\u5305\u542b\u6bcf\u4e2a\u8857\u533a\u7ec4\u7684\u4eba\u53e3\u3001\u6536\u5165\u4e2d\u4f4d\u6570\u3001\u623f\u4ef7\u4e2d\u4f4d\u6570\u7b49\u6307\u6807\u3002 \u8857\u533a\u7ec4\u662f\u7f8e\u56fd\u8c03\u67e5\u5c40\u53d1\u5e03\u6837\u672c\u6570\u636e\u7684\u6700\u5c0f\u5730\u7406\u5355\u4f4d\uff08\u4e00\u4e2a\u8857\u533a\u901a\u5e38\u6709 600 \u5230 3000 \u4eba\uff09\u3002\u6211\u4eec\u5c06\u5176\u7b80\u79f0\u4e3a\u201c\u8857\u533a\u201d\u3002 \u4f60\u7684\u6a21\u578b\u8981\u5229\u7528\u8fd9\u4e2a\u6570\u636e\u8fdb\u884c\u5b66\u4e60\uff0c\u7136\u540e\u6839\u636e\u5176\u5b83\u6307\u6807\uff0c\u9884\u6d4b\u4efb\u4f55\u8857\u533a\u7684\u7684\u623f\u4ef7\u4e2d\u4f4d\u6570\u3002 \u63d0\u793a\uff1a\u4f60\u662f\u4e00\u4e2a\u6709\u6761\u7406\u7684\u6570\u636e\u79d1\u5b66\u5bb6\uff0c\u4f60\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u62ff\u51fa\u4f60\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u6e05\u5355\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u9644\u5f55 B \u4e2d\u7684\u6e05\u5355\uff1b\u8fd9\u4e2a\u6e05\u5355\u9002\u7528\u4e8e\u5927\u591a\u6570\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\uff0c\u4f46\u662f\u4f60\u8fd8\u662f\u8981\u786e\u8ba4\u5b83\u662f\u5426\u6ee1\u8db3\u9700\u6c42\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f1a\u68c0\u67e5\u8bb8\u591a\u6e05\u5355\u4e0a\u7684\u9879\u76ee\uff0c\u4f46\u662f\u4e5f\u4f1a\u8df3\u8fc7\u4e00\u4e9b\u7b80\u5355\u7684\uff0c\u6709\u4e9b\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u518d\u8ba8\u8bba\u3002","title":"\u9879\u76ee\u6982\u89c8"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_4","text":"\u95ee\u8001\u677f\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u5e94\u8be5\u662f\u5546\u4e1a\u76ee\u6807\u662f\u4ec0\u4e48\uff1f\u5efa\u7acb\u6a21\u578b\u53ef\u80fd\u4e0d\u662f\u6700\u7ec8\u76ee\u6807\u3002\u516c\u53f8\u8981\u5982\u4f55\u4f7f\u7528\u3001\u5e76\u4ece\u6a21\u578b\u53d7\u76ca\uff1f\u8fd9\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u51b3\u5b9a\u4e86\u5982\u4f55\u5212\u5b9a\u95ee\u9898\uff0c\u8981\u9009\u62e9\u4ec0\u4e48\u7b97\u6cd5\uff0c\u8bc4\u4f30\u6a21\u578b\u6027\u80fd\u7684\u6307\u6807\u662f\u4ec0\u4e48\uff0c\u8981\u82b1\u591a\u5c11\u7cbe\u529b\u8fdb\u884c\u5fae\u8c03\u3002 \u8001\u677f\u544a\u8bc9\u4f60\u4f60\u7684\u6a21\u578b\u7684\u8f93\u51fa\uff08\u4e00\u4e2a\u533a\u7684\u623f\u4ef7\u4e2d\u4f4d\u6570\uff09\u4f1a\u4f20\u7ed9\u53e6\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\uff08\u89c1\u56fe 2-2\uff09\uff0c\u4e5f\u6709\u5176\u5b83\u4fe1\u53f7\u4f1a\u4f20\u5165\u540e\u9762\u7684\u7cfb\u7edf\u3002\u8fd9\u4e00\u6574\u5957\u7cfb\u7edf\u53ef\u4ee5\u786e\u5b9a\u67d0\u4e2a\u533a\u8fdb\u884c\u6295\u8d44\u503c\u4e0d\u503c\u3002\u786e\u5b9a\u503c\u4e0d\u503c\u5f97\u6295\u8d44\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u76f4\u63a5\u5f71\u54cd\u5229\u6da6\u3002 \u56fe 2-2 \u623f\u5730\u4ea7\u6295\u8d44\u7684\u673a\u5668\u5b66\u4e60\u6d41\u6c34\u7ebf \u6d41\u6c34\u7ebf \u4e00\u7cfb\u5217\u7684\u6570\u636e\u5904\u7406\u7ec4\u4ef6\u88ab\u79f0\u4e3a\u6570\u636e\u6d41\u6c34\u7ebf\u3002\u6d41\u6c34\u7ebf\u5728\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u4e2d\u5f88\u5e38\u89c1\uff0c\u56e0\u4e3a\u6709\u8bb8\u591a\u6570\u636e\u8981\u5904\u7406\u548c\u8f6c\u6362\u3002 \u7ec4\u4ef6\u901a\u5e38\u662f\u5f02\u6b65\u8fd0\u884c\u7684\u3002\u6bcf\u4e2a\u7ec4\u4ef6\u5438\u7eb3\u8fdb\u5927\u91cf\u6570\u636e\uff0c\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u5c06\u6570\u636e\u4f20\u8f93\u5230\u53e6\u4e00\u4e2a\u6570\u636e\u5bb9\u5668\u4e2d\uff0c\u800c\u540e\u6d41\u6c34\u7ebf\u4e2d\u7684\u53e6\u4e00\u4e2a\u7ec4\u4ef6\u6536\u5165\u8fd9\u4e2a\u6570\u636e\uff0c\u7136\u540e\u8f93\u51fa\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f9d\u6b21\u8fdb\u884c\u4e0b\u53bb\u3002\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u662f\u72ec\u7acb\u7684\uff1a\u7ec4\u4ef6\u95f4\u7684\u63a5\u53e3\u53ea\u662f\u6570\u636e\u5bb9\u5668\u3002\u8fd9\u6837\u53ef\u4ee5\u8ba9\u7cfb\u7edf\u66f4\u4fbf\u4e8e\u7406\u89e3\uff08\u8bb0\u4f4f\u6570\u636e\u6d41\u7684\u56fe\uff09\uff0c\u4e0d\u540c\u7684\u9879\u76ee\u7ec4\u53ef\u4ee5\u5173\u6ce8\u4e8e\u4e0d\u540c\u7684\u7ec4\u4ef6\u3002\u8fdb\u800c\uff0c\u5982\u679c\u4e00\u4e2a\u7ec4\u4ef6\u5931\u6548\u4e86\uff0c\u4e0b\u6e38\u7684\u7ec4\u4ef6\u4f7f\u7528\u5931\u6548\u7ec4\u4ef6\u6700\u540e\u751f\u4ea7\u7684\u6570\u636e\uff0c\u901a\u5e38\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff08\u4e00\u6bb5\u65f6\u95f4\uff09\u3002\u8fd9\u6837\u5c31\u4f7f\u6574\u4e2a\u67b6\u6784\u76f8\u5f53\u5065\u58ee\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u6ca1\u6709\u76d1\u63a7\uff0c\u5931\u6548\u7684\u7ec4\u4ef6\u4f1a\u5728\u4e0d\u88ab\u6ce8\u610f\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u3002\u6570\u636e\u4f1a\u53d7\u5230\u6c61\u67d3\uff0c\u6574\u4e2a\u7cfb\u7edf\u7684\u6027\u80fd\u5c31\u4f1a\u4e0b\u964d\u3002 \u4e0b\u4e00\u4e2a\u8981\u95ee\u7684\u95ee\u9898\u662f\uff0c\u73b0\u5728\u7684\u89e3\u51b3\u65b9\u6848\u6548\u679c\u5982\u4f55\u3002\u8001\u677f\u901a\u5e38\u4f1a\u7ed9\u4e00\u4e2a\u53c2\u8003\u6027\u80fd\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u95ee\u9898\u3002\u8001\u677f\u8bf4\uff0c\u73b0\u5728\u8857\u533a\u7684\u623f\u4ef7\u662f\u9760\u4e13\u5bb6\u624b\u5de5\u4f30\u8ba1\u7684\uff0c\u4e13\u5bb6\u961f\u4f0d\u6536\u96c6\u6700\u65b0\u7684\u5173\u4e8e\u4e00\u4e2a\u533a\u7684\u4fe1\u606f\uff08\u4e0d\u5305\u62ec\u623f\u4ef7\u4e2d\u4f4d\u6570\uff09\uff0c\u4ed6\u4eec\u4f7f\u7528\u590d\u6742\u7684\u89c4\u5219\u8fdb\u884c\u4f30\u8ba1\u3002\u8fd9\u79cd\u65b9\u6cd5\u8d39\u94b1\u8d39\u65f6\u95f4\uff0c\u800c\u4e14\u4f30\u8ba1\u7ed3\u679c\u4e0d\u7406\u60f3\uff0c\u8bef\u5dee\u7387\u5927\u6982\u6709 15%\u3002 OK\uff0c\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bbe\u8ba1\u7cfb\u7edf\u4e86\u3002\u9996\u5148\uff0c\u4f60\u9700\u8981\u5212\u5b9a\u95ee\u9898\uff1a\u76d1\u7763\u6216\u975e\u76d1\u7763\uff0c\u8fd8\u662f\u5f3a\u5316\u5b66\u4e60\uff1f\u8fd9\u662f\u4e2a\u5206\u7c7b\u4efb\u52a1\u3001\u56de\u5f52\u4efb\u52a1\uff0c\u8fd8\u662f\u5176\u5b83\u7684\uff1f\u8981\u4f7f\u7528\u6279\u91cf\u5b66\u4e60\u8fd8\u662f\u7ebf\u4e0a\u5b66\u4e60\uff1f\u7ee7\u7eed\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u6682\u505c\u4e00\u4e0b\uff0c\u5c1d\u8bd5\u81ea\u5df1\u56de\u7b54\u4e0b\u8fd9\u4e9b\u95ee\u9898\u3002 \u4f60\u80fd\u56de\u7b54\u51fa\u6765\u5417\uff1f\u4e00\u8d77\u770b\u4e0b\u7b54\u6848\uff1a\u5f88\u660e\u663e\uff0c\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff0c\u56e0\u4e3a\u4f60\u8981\u4f7f\u7528\u7684\u662f\u6709\u6807\u7b7e\u7684\u8bad\u7ec3\u6837\u672c\uff08\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u9884\u5b9a\u7684\u4ea7\u51fa\uff0c\u5373\u8857\u533a\u7684\u623f\u4ef7\u4e2d\u4f4d\u6570\uff09\u3002\u5e76\u4e14\uff0c\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u56de\u5f52\u4efb\u52a1\uff0c\u56e0\u4e3a\u4f60\u8981\u9884\u6d4b\u4e00\u4e2a\u503c\u3002\u8bb2\u7684\u66f4\u7ec6\u4e9b\uff0c\u8fd9\u662f\u4e00\u4e2a\u591a\u53d8\u91cf\u56de\u5f52\u95ee\u9898\uff0c\u56e0\u4e3a\u7cfb\u7edf\u8981\u4f7f\u7528\u591a\u4e2a\u53d8\u91cf\u8fdb\u884c\u9884\u6d4b\uff08\u8981\u4f7f\u7528\u8857\u533a\u7684\u4eba\u53e3\uff0c\u6536\u5165\u4e2d\u4f4d\u6570\u7b49\u7b49\uff09\u3002\u5728\u7b2c\u4e00\u7ae0\u4e2d\uff0c\u4f60\u53ea\u662f\u6839\u636e\u4eba\u5747 GDP \u6765\u9884\u6d4b\u751f\u6d3b\u6ee1\u610f\u5ea6\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u4e2a\u5355\u53d8\u91cf\u56de\u5f52\u95ee\u9898\u3002\u6700\u540e\uff0c\u6ca1\u6709\u8fde\u7eed\u7684\u6570\u636e\u6d41\u8fdb\u5165\u7cfb\u7edf\uff0c\u6ca1\u6709\u7279\u522b\u9700\u6c42\u9700\u8981\u5bf9\u6570\u636e\u53d8\u52a8\u4f5c\u51fa\u5feb\u901f\u9002\u5e94\u3002\u6570\u636e\u91cf\u4e0d\u5927\u53ef\u4ee5\u653e\u5230\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u6279\u91cf\u5b66\u4e60\u5c31\u591f\u4e86\u3002 \u63d0\u793a\uff1a\u5982\u679c\u6570\u636e\u91cf\u5f88\u5927\uff0c\u4f60\u53ef\u4ee5\u8981\u4e48\u5728\u591a\u4e2a\u670d\u52a1\u5668\u4e0a\u5bf9\u6279\u91cf\u5b66\u4e60\u505a\u62c6\u5206\uff08\u4f7f\u7528 MapReduce \u6280\u672f\uff0c\u540e\u9762\u4f1a\u770b\u5230\uff09\uff0c\u6216\u662f\u4f7f\u7528\u7ebf\u4e0a\u5b66\u4e60\u3002","title":"\u5212\u5b9a\u95ee\u9898"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_5","text":"\u4e0b\u4e00\u6b65\u662f\u9009\u62e9\u6027\u80fd\u6307\u6807\u3002\u56de\u5f52\u95ee\u9898\u7684\u5178\u578b\u6307\u6807\u662f\u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff09\u3002\u5747\u65b9\u6839\u8bef\u5dee\u6d4b\u91cf\u7684\u662f\u7cfb\u7edf\u9884\u6d4b\u8bef\u5dee\u7684\u6807\u51c6\u5dee\u3002\u4f8b\u5982\uff0cRMSE \u7b49\u4e8e 50000\uff0c\u610f\u5473\u7740\uff0c68% \u7684\u7cfb\u7edf\u9884\u6d4b\u503c\u4f4d\u4e8e\u5b9e\u9645\u503c\u7684 50000 \u7f8e\u5143\u4ee5\u5185\uff0c95% \u7684\u9884\u6d4b\u503c\u4f4d\u4e8e\u5b9e\u9645\u503c\u7684 100000 \u7f8e\u5143\u4ee5\u5185\uff08\u4e00\u4e2a\u7279\u5f81\u901a\u5e38\u90fd\u7b26\u5408\u9ad8\u65af\u5206\u5e03\uff0c\u5373\u6ee1\u8db3 \u201c68-95-99.7\u201d\u89c4\u5219\uff1a\u5927\u7ea668%\u7684\u503c\u843d\u5728 1\u03c3 \u5185\uff0c95% \u7684\u503c\u843d\u5728 2\u03c3 \u5185\uff0c99.7%\u7684\u503c\u843d\u5728 3\u03c3 \u5185\uff0c\u8fd9\u91cc\u7684 \u03c3 \u7b49\u4e8e50000\uff09\u3002\u516c\u5f0f 2-1 \u5c55\u793a\u4e86\u8ba1\u7b97 RMSE \u7684\u65b9\u6cd5\u3002 \u516c\u5f0f 2-1 \u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff09 \u7b26\u53f7\u7684\u542b\u4e49 \u8fd9\u4e2a\u65b9\u7a0b\u5f15\u5165\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u8d2f\u7a7f\u672c\u4e66\u7684\u673a\u5668\u5b66\u4e60\u7b26\u53f7\uff1a m \u662f\u6d4b\u91cf RMSE \u7684\u6570\u636e\u96c6\u4e2d\u7684\u5b9e\u4f8b\u6570\u91cf\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u7528\u4e00\u4e2a\u542b\u6709 2000 \u4e2a\u8857\u533a\u7684\u9a8c\u8bc1\u96c6\u6c42 RMSE\uff0c\u5219 m = 2000 \u3002 \u662f\u6570\u636e\u96c6\u7b2c i \u4e2a\u5b9e\u4f8b\u7684\u6240\u6709\u7279\u5f81\u503c\uff08\u4e0d\u5305\u542b\u6807\u7b7e\uff09\u7684\u5411\u91cf\uff0c \u662f\u5b83\u7684\u6807\u7b7e\uff08\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u8f93\u51fa\u503c\uff09\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6570\u636e\u96c6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8857\u533a\u4f4d\u4e8e\u7ecf\u5ea6 \u2013118.29\u00b0\uff0c\u7eac\u5ea6 33.91\u00b0\uff0c\u6709 1416 \u540d\u5c45\u6c11\uff0c\u6536\u5165\u4e2d\u4f4d\u6570\u662f 38372 \u7f8e\u5143\uff0c\u623f\u4ef7\u4e2d\u4f4d\u6570\u662f 156400 \u7f8e\u5143\uff08\u5ffd\u7565\u6389\u5176\u5b83\u7684\u7279\u5f81\uff09\uff0c\u5219\u6709\uff1a \u548c\uff0c X \u662f\u5305\u542b\u6570\u636e\u96c6\u4e2d\u6240\u6709\u5b9e\u4f8b\u7684\u6240\u6709\u7279\u5f81\u503c\uff08\u4e0d\u5305\u542b\u6807\u7b7e\uff09\u7684\u77e9\u9635\u3002\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u7b2c i \u884c\u662f \u7684\u8f6c\u7f6e\uff0c\u8bb0\u4e3a \u3002 \u4f8b\u5982\uff0c\u4ecd\u7136\u662f\u524d\u9762\u63d0\u5230\u7684\u7b2c\u4e00\u533a\uff0c\u77e9\u9635 X \u5c31\u662f\uff1a ![](../images/chapter_2/o-2-3.png) h \u662f\u7cfb\u7edf\u7684\u9884\u6d4b\u51fd\u6570\uff0c\u4e5f\u79f0\u4e3a\u5047\u8bbe\uff08hypothesis\uff09\u3002\u5f53\u7cfb\u7edf\u6536\u5230\u4e00\u4e2a\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf \uff0c\u5c31\u4f1a\u8f93\u51fa\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u4e00\u4e2a\u9884\u6d4b\u503c \uff08 \u8bfb\u4f5c y-hat \uff09\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u7cfb\u7edf\u9884\u6d4b\u7b2c\u4e00\u533a\u7684\u623f\u4ef7\u4e2d\u4f4d\u6570\u662f 158400 \u7f8e\u5143\uff0c\u5219 \u3002\u9884\u6d4b\u8bef\u5dee\u662f \u3002 RMSE(X,h) \u662f\u4f7f\u7528\u5047\u8bbe h \u5728\u6837\u672c\u96c6\u4e0a\u6d4b\u91cf\u7684\u635f\u5931\u51fd\u6570\u3002 \u6211\u4eec\u4f7f\u7528\u5c0f\u5199\u659c\u4f53\u8868\u793a\u6807\u91cf\u503c\uff08\u4f8b\u5982 \u6216 \uff09\u548c\u51fd\u6570\u540d\uff08\u4f8b\u5982 \uff09\uff0c\u5c0f\u5199\u7c97\u4f53\u8868\u793a\u5411\u91cf\uff08\u4f8b\u5982 \uff09\uff0c\u5927\u5199\u7c97\u4f53\u8868\u793a\u77e9\u9635\uff08\u4f8b\u5982 \uff09\u3002 \u867d\u7136\u5927\u591a\u6570\u65f6\u5019 RMSE \u662f\u56de\u5f52\u4efb\u52a1\u53ef\u9760\u7684\u6027\u80fd\u6307\u6807\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u53e6\u5916\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u5b58\u5728\u8bb8\u591a\u5f02\u5e38\u7684\u8857\u533a\u3002\u6b64\u65f6\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\uff08Mean Absolute Error\uff0c\u4e5f\u79f0\u4f5c\u5e73\u5747\u7edd\u5bf9\u504f\u5dee\uff09\uff0c\u89c1\u516c\u5f0f 2-2\uff1a \u516c\u5f0f2-2 \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee RMSE \u548c MAE \u90fd\u662f\u6d4b\u91cf\u9884\u6d4b\u503c\u548c\u76ee\u6807\u503c\u4e24\u4e2a\u5411\u91cf\u8ddd\u79bb\u7684\u65b9\u6cd5\u3002\u6709\u591a\u79cd\u6d4b\u91cf\u8ddd\u79bb\u7684\u65b9\u6cd5\uff0c\u6216\u8303\u6570\uff1a \u8ba1\u7b97\u5bf9\u5e94\u6b27\u51e0\u91cc\u5f97\u8303\u6570\u7684\u5e73\u65b9\u548c\u7684\u6839\uff08RMSE\uff09\uff1a\u8fd9\u4e2a\u8ddd\u79bb\u4ecb\u7ecd\u8fc7\u3002\u5b83\u4e5f\u79f0\u4f5c \u21132 \u8303\u6570\uff0c\u6807\u8bb0\u4e3a \uff08\u6216\u53ea\u662f \uff09\u3002 \u8ba1\u7b97\u5bf9\u5e94\u4e8e \u21131 \uff08\u6807\u8bb0\u4e3a \uff09\u8303\u6570\u7684\u7edd\u5bf9\u503c\u548c\uff08MAE\uff09\u3002\u6709\u65f6\uff0c\u4e5f\u79f0\u5176\u4e3a\u66fc\u54c8\u987f\u8303\u6570\uff0c\u56e0\u4e3a\u5b83\u6d4b\u91cf\u4e86\u57ce\u5e02\u4e2d\u7684\u4e24\u70b9\uff0c\u6cbf\u7740\u77e9\u5f62\u7684\u8fb9\u884c\u8d70\u7684\u8ddd\u79bb\u3002 \u66f4\u4e00\u822c\u7684\uff0c\u5305\u542b n \u4e2a\u5143\u7d20\u7684\u5411\u91cf v \u7684 \u2113k \u8303\u6570\uff08K \u9636\u95f5\u6c0f\u8303\u6570\uff09\uff0c\u5b9a\u4e49\u6210 \u21130 \uff08\u6c49\u660e\u8303\u6570\uff09\u53ea\u663e\u793a\u4e86\u8fd9\u4e2a\u5411\u91cf\u7684\u57fa\u6570\uff08\u5373\uff0c\u975e\u96f6\u5143\u7d20\u7684\u4e2a\u6570\uff09\uff0c \u2113\u221e \uff08\u5207\u6bd4\u96ea\u592b\u8303\u6570\uff09\u662f\u5411\u91cf\u4e2d\u6700\u5927\u7684\u7edd\u5bf9\u503c\u3002 \u8303\u6570\u7684\u6307\u6570\u8d8a\u9ad8\uff0c\u5c31\u8d8a\u5173\u6ce8\u5927\u7684\u503c\u800c\u5ffd\u7565\u5c0f\u7684\u503c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 RMSE \u6bd4 MAE \u5bf9\u5f02\u5e38\u503c\u66f4\u654f\u611f\u3002\u4f46\u662f\u5f53\u5f02\u5e38\u503c\u662f\u6307\u6570\u5206\u5e03\u7684\uff08\u7c7b\u4f3c\u6b63\u6001\u66f2\u7ebf\uff09\uff0cRMSE \u5c31\u4f1a\u8868\u73b0\u5f88\u597d\u3002","title":"\u9009\u62e9\u6027\u80fd\u6307\u6807"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_6","text":"\u6700\u540e\uff0c\u6700\u597d\u5217\u51fa\u5e76\u6838\u5bf9\u8fc4\u4eca\uff08\u4f60\u6216\u5176\u4ed6\u4eba\uff09\u4f5c\u51fa\u7684\u5047\u8bbe\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c3d\u65e9\u53d1\u73b0\u4e25\u91cd\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4f60\u7684\u7cfb\u7edf\u8f93\u51fa\u7684\u8857\u533a\u623f\u4ef7\uff0c\u4f1a\u4f20\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\uff0c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e9b\u4ef7\u683c\u786e\u5b9e\u4f1a\u88ab\u5f53\u505a\u8857\u533a\u623f\u4ef7\u4f7f\u7528\u3002\u4f46\u662f\u5982\u679c\u4e0b\u6e38\u7cfb\u7edf\u5b9e\u9645\u4e0a\u5c06\u4ef7\u683c\u8f6c\u5316\u6210\u4e86\u5206\u7c7b\uff08\u4f8b\u5982\uff0c\u4fbf\u5b9c\u3001\u4e2d\u7b49\u3001\u6602\u8d35\uff09\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u5206\u7c7b\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4ef7\u683c\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u83b7\u5f97\u51c6\u786e\u7684\u4ef7\u683c\u5c31\u4e0d\u90a3\u4e48\u91cd\u8981\u4e86\uff0c\u4f60\u53ea\u9700\u8981\u5f97\u5230\u5408\u9002\u7684\u5206\u7c7b\u3002\u95ee\u9898\u76f8\u5e94\u5730\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5206\u7c7b\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u56de\u5f52\u4efb\u52a1\u3002\u4f60\u53ef\u4e0d\u60f3\u5728\u4e00\u4e2a\u56de\u5f52\u7cfb\u7edf\u4e0a\u5de5\u4f5c\u4e86\u6570\u6708\uff0c\u6700\u540e\u624d\u53d1\u73b0\u771f\u76f8\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5728\u4e0e\u4e0b\u6e38\u7cfb\u7edf\u4e3b\u7ba1\u63a2\u8ba8\u4e4b\u540e\uff0c\u4f60\u5f88\u786e\u4fe1\u4ed6\u4eec\u9700\u8981\u7684\u5c31\u662f\u5b9e\u9645\u7684\u4ef7\u683c\uff0c\u800c\u4e0d\u662f\u5206\u7c7b\u3002\u5f88\u597d\uff01\u6574\u88c5\u5f85\u53d1\uff0c\u53ef\u4ee5\u5f00\u59cb\u5199\u4ee3\u7801\u4e86\u3002","title":"\u6838\u5b9e\u5047\u8bbe"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_7","text":"\u5f00\u59cb\u52a8\u624b\u3002\u6700\u540e\u7528 Jupyter notebook \u5b8c\u6574\u5730\u6572\u4e00\u904d\u793a\u4f8b\u4ee3\u7801\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u4f4d\u4e8e https://github.com/ageron/handson-ml \u3002","title":"\u83b7\u53d6\u6570\u636e"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_8","text":"\u9996\u5148\uff0c\u4f60\u9700\u8981\u5b89\u88c5 Python\u3002\u53ef\u80fd\u5df2\u7ecf\u5b89\u88c5\u8fc7\u4e86\uff0c\u6ca1\u6709\u7684\u8bdd\uff0c\u53ef\u4ee5\u4ece\u5b98\u7f51\u4e0b\u8f7d https://www.python.org/ \u3002 \u63a5\u4e0b\u6765\uff0c\u9700\u8981\u4e3a\u4f60\u7684\u673a\u5668\u5b66\u4e60\u4ee3\u7801\u548c\u6570\u636e\u96c6\u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u3002\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff08\u5728\u63d0\u793a\u7b26 $ \u4e4b\u540e\uff09\uff1a $ export ML_PATH=\"$HOME/ml\" # \u53ef\u4ee5\u66f4\u6539\u8def\u5f84 $ mkdir -p $ML_PATH \u8fd8\u9700\u8981\u4e00\u4e9b Python \u6a21\u5757\uff1aJupyter\u3001NumPy\u3001Pandas\u3001Matplotlib \u548c Scikit-Learn\u3002\u5982\u679c\u6240\u6709\u8fd9\u4e9b\u6a21\u5757\u90fd\u5df2\u7ecf\u5728 Jupyter \u4e2d\u8fd0\u884c\u4e86\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u8282\u201c\u4e0b\u8f7d\u6570\u636e\u201d\u3002\u5982\u679c\u8fd8\u6ca1\u5b89\u88c5\uff0c\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8fdb\u884c\u5b89\u88c5\uff08\u5305\u62ec\u5b83\u4eec\u7684\u4f9d\u8d56\uff09\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u7cfb\u7edf\u7684\u5305\u7ba1\u7406\u7cfb\u7edf\uff08\u6bd4\u5982 Ubuntu \u4e0a\u7684 apt-get \uff0c\u6216 macOS \u4e0a\u7684 MacPorts \u6216 HomeBrew\uff09\uff0c\u5b89\u88c5\u4e00\u4e2a Python \u79d1\u5b66\u8ba1\u7b97\u73af\u5883\u6bd4\u5982 Anaconda\uff0c\u4f7f\u7528 Anaconda \u7684\u5305\u7ba1\u7406\u7cfb\u7edf\uff0c\u6216\u8005\u4f7f\u7528 Python \u81ea\u5df1\u7684\u5305\u7ba1\u7406\u5668 pip \uff0c\u5b83\u662f Python \u5b89\u88c5\u5305\uff08\u81ea\u4ece 2.7.9 \u7248\u672c\uff09\u81ea\u5e26\u7684\u3002\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u68c0\u6d4b\u662f\u5426\u5b89\u88c5 pip \uff1a $ pip3 --version pip 9.0.1 from [...]/lib/python3.5/site-packages (python 3.5) \u4f60\u9700\u8981\u4fdd\u8bc1 pip \u662f\u8fd1\u671f\u7684\u7248\u672c\uff0c\u81f3\u5c11\u9ad8\u4e8e 1.4\uff0c\u4ee5\u4fdd\u969c\u4e8c\u8fdb\u5236\u6a21\u5757\u6587\u4ef6\u7684\u5b89\u88c5\uff08\u4e5f\u79f0\u4e3a wheel\uff09\u3002\u8981\u5347\u7ea7 pip \uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a $ pip3 install --upgrade pip Collecting pip [...] Successfully installed pip-9.0.1 \u521b\u5efa\u72ec\u7acb\u73af\u5883 \u5982\u679c\u4f60\u5e0c\u671b\u5728\u4e00\u4e2a\u72ec\u7acb\u73af\u5883\u4e2d\u5de5\u4f5c\uff08\u5f3a\u70c8\u63a8\u8350\u8fd9\u4e48\u505a\uff0c\u4e0d\u540c\u9879\u76ee\u7684\u5e93\u7684\u7248\u672c\u4e0d\u4f1a\u51b2\u7a81\uff09\uff0c\u7528\u4e0b\u9762\u7684 pip \u547d\u4ee4\u5b89\u88c5 virtualenv \uff1a ``` $ pip3 install --user --upgrade virtualenv Collecting virtualenv [...] Successfully installed virtualenv ``` \u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684 Python \u73af\u5883\uff1a $ cd $ML_PATH $ virtualenv env Using base prefix '[...]' New python executable in [...]/ml/env/bin/python3.5 Also creating executable in [...]/ml/env/bin/python Installing setuptools, pip, wheel...done. \u4ee5\u540e\u6bcf\u6b21\u60f3\u8981\u6fc0\u6d3b\u8fd9\u4e2a\u73af\u5883,\u53ea\u9700\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u7136\u540e\u8f93\u5165\uff1a $ cd $ML_PATH $ source env/bin/activate \u542f\u52a8\u8be5\u73af\u5883\u65f6\uff0c\u4f7f\u7528 pip \u5b89\u88c5\u7684\u4efb\u4f55\u5305\u90fd\u53ea\u5b89\u88c5\u4e8e\u8fd9\u4e2a\u72ec\u7acb\u73af\u5883\u4e2d\uff0cPython \u6307\u6325\u8bbf\u95ee\u8fd9\u4e9b\u5305\uff08\u5982\u679c\u4f60\u5e0c\u671b Python \u80fd\u8bbf\u95ee\u7cfb\u7edf\u7684\u5305\uff0c\u521b\u5efa\u73af\u5883\u65f6\u8981\u4f7f\u7528\u5305\u9009\u9879 --system-site \uff09\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b virtualenv \u6587\u6863\u3002 \u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 pip \u547d\u4ee4\u5b89\u88c5\u6240\u6709\u5fc5\u9700\u7684\u6a21\u5757\u548c\u5b83\u4eec\u7684\u4f9d\u8d56\uff1a $ pip3 install --upgrade jupyter matplotlib numpy pandas scipy scikit-learn Collecting jupyter Downloading jupyter-1.0.0-py2.py3-none-any.whl Collecting matplotlib [...] \u8981\u68c0\u67e5\u5b89\u88c5\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5f15\u5165\u6bcf\u4e2a\u6a21\u5757\uff1a $ python3 -c \"import jupyter, matplotlib, numpy, pandas, scipy, sklearn\" \u8fd9\u4e2a\u547d\u4ee4\u4e0d\u5e94\u8be5\u6709\u4efb\u4f55\u8f93\u51fa\u548c\u9519\u8bef\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6253\u5f00 Jupyter\uff1a $ jupyter notebook [I 15:24 NotebookApp] Serving notebooks from local directory: [...]/ml [I 15:24 NotebookApp] 0 active kernels [I 15:24 NotebookApp] The Jupyter Notebook is running at: http://localhost:8888/ [I 15:24 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation). Jupyter \u670d\u52a1\u5668\u73b0\u5728\u8fd0\u884c\u5728\u7ec8\u7aef\u4e0a\uff0c\u76d1\u542c 888 8\u7aef\u53e3\u3002\u4f60\u53ef\u4ee5\u7528\u6d4f\u89c8\u5668\u6253\u5f00 http://localhost:8888/ \uff0c\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u670d\u52a1\u5668\uff08\u670d\u52a1\u5668\u542f\u52a8\u65f6\uff0c\u901a\u5e38\u5c31\u81ea\u52a8\u6253\u5f00\u4e86\uff09\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u7a7a\u7684\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\uff08\u5982\u679c\u6309\u7167\u5148\u524d\u7684 virtualenv \u6b65\u9aa4\uff0c\u53ea\u5305\u542b env \u76ee\u5f55\uff09\u3002 \u73b0\u5728\u70b9\u51fb\u6309\u94ae New \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Python \u6ce8\u672c\uff0c\u9009\u62e9\u5408\u9002\u7684 Python \u7248\u672c\uff08\u89c1\u56fe 2-3\uff09\u3002 \u56fe 2-3 Jupyter \u7684\u5de5\u4f5c\u7a7a\u95f4 \u8fd9\u4e00\u6b65\u505a\u4e86\u4e09\u4ef6\u4e8b\uff1a\u9996\u5148\uff0c\u5728\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 notebook \u6587\u4ef6 Untitled.ipynb \uff1b\u7b2c\u4e8c\uff0c\u5b83\u542f\u52a8\u4e86\u4e00\u4e2a Jupyter \u7684 Python \u5185\u6838\u6765\u8fd0\u884c\u8fd9\u4e2a notebook\uff1b\u7b2c\u4e09\uff0c\u5728\u4e00\u4e2a\u65b0\u680f\u4e2d\u6253\u5f00\u8fd9\u4e2a notebook\u3002\u63a5\u4e0b\u6765\uff0c\u70b9\u51fb Untitled\uff0c\u5c06\u8fd9\u4e2a notebook \u91cd\u547d\u540d\u4e3a Housing \uff08\u8fd9\u4f1a\u5c06 ipynb \u6587\u4ef6\u81ea\u52a8\u547d\u540d\u4e3a Housing.ipynb \uff09\u3002 notebook \u5305\u542b\u4e00\u7ec4\u4ee3\u7801\u6846\u3002\u6bcf\u4e2a\u4ee3\u7801\u6846\u53ef\u4ee5\u653e\u5165\u53ef\u6267\u884c\u4ee3\u7801\u6216\u683c\u5f0f\u5316\u6587\u672c\u3002\u73b0\u5728\uff0cnotebook \u53ea\u6709\u4e00\u4e2a\u7a7a\u7684\u4ee3\u7801\u6846\uff0c\u6807\u7b7e\u662f In [1]: \u3002\u5728\u6846\u4e2d\u8f93\u5165 print(\"Hello world!\") \uff0c\u70b9\u51fb\u8fd0\u884c\u6309\u94ae\uff08\u89c1\u56fe 2-4\uff09\u6216\u6309 Shift+Enter \u3002\u8fd9\u4f1a\u5c06\u5f53\u524d\u7684\u4ee3\u7801\u6846\u53d1\u9001\u5230 Python \u5185\u6838\uff0c\u8fd0\u884c\u4e4b\u540e\u4f1a\u8fd4\u56de\u8f93\u51fa\u3002\u7ed3\u679c\u663e\u793a\u5728\u4ee3\u7801\u6846\u4e0b\u65b9\u3002\u7531\u4e8e\u62b5\u8fbe\u4e86 notebook \u7684\u5e95\u90e8\uff0c\u4e00\u4e2a\u65b0\u7684\u4ee3\u7801\u6846\u4f1a\u88ab\u81ea\u52a8\u521b\u5efa\u51fa\u6765\u3002\u4ece Jupyter \u7684 Help \u83dc\u5355\u4e2d\u7684 User Interface Tour\uff0c\u53ef\u4ee5\u5b66\u4e60 Jupyter \u7684\u57fa\u672c\u64cd\u4f5c\u3002 \u56fe 2-4 \u5728 notebook \u4e2d\u6253\u5370 Hello world!","title":"\u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_9","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u662f\u5b58\u50a8\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08\u6216\u5176\u5b83\u5e38\u89c1\u6570\u636e\u5e93\uff09\u4e2d\u7684\u591a\u4e2a\u8868\u3001\u6587\u6863\u3001\u6587\u4ef6\u3002\u8981\u8bbf\u95ee\u6570\u636e\uff0c\u4f60\u9996\u5148\u8981\u6709\u5bc6\u7801\u548c\u767b\u5f55\u6743\u9650\uff0c\u5e76\u8981\u4e86\u89e3\u6570\u636e\u6a21\u5f0f\u3002\u4f46\u662f\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u8fd9\u4e00\u5207\u8981\u7b80\u5355\u4e9b\uff1a\u53ea\u8981\u4e0b\u8f7d\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\uff0c housing.tgz \uff0c\u5b83\u5305\u542b\u4e00\u4e2a CSV \u6587\u4ef6 housing.csv \uff0c\u542b\u6709\u6240\u6709\u6570\u636e\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u4e0b\u8f7d\uff0c\u8fd0\u884c tar xzf housing.tgz \u89e3\u538b\u51fa csv \u6587\u4ef6\uff0c\u4f46\u662f\u66f4\u597d\u7684\u529e\u6cd5\u662f\u5199\u4e00\u4e2a\u5c0f\u51fd\u6570\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002\u5982\u679c\u6570\u636e\u53d8\u52a8\u9891\u7e41\uff0c\u8fd9\u4e48\u505a\u662f\u975e\u5e38\u597d\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8ba9\u4f60\u5199\u4e00\u4e2a\u5c0f\u811a\u672c\u968f\u65f6\u83b7\u53d6\u6700\u65b0\u7684\u6570\u636e\uff08\u6216\u8005\u521b\u5efa\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\u6765\u505a\uff09\u3002\u5982\u679c\u4f60\u60f3\u5728\u591a\u53f0\u673a\u5668\u4e0a\u5b89\u88c5\u6570\u636e\u96c6\uff0c\u83b7\u53d6\u6570\u636e\u81ea\u52a8\u5316\u4e5f\u662f\u975e\u5e38\u597d\u7684\u3002 \u4e0b\u9762\u662f\u83b7\u53d6\u6570\u636e\u7684\u51fd\u6570\uff1a import os import tarfile from six.moves import urllib DOWNLOAD_ROOT = \"https://raw.githubusercontent.com/ageron/handson-ml/master/\" HOUSING_PATH = \"datasets/housing\" HOUSING_URL = DOWNLOAD_ROOT + HOUSING_PATH + \"/housing.tgz\" def fetch_housing_data(housing_url=HOUSING_URL, housing_path=HOUSING_PATH): if not os.path.isdir(housing_path): os.makedirs(housing_path) tgz_path = os.path.join(housing_path, \"housing.tgz\") urllib.request.urlretrieve(housing_url, tgz_path) housing_tgz = tarfile.open(tgz_path) housing_tgz.extractall(path=housing_path) housing_tgz.close() \u73b0\u5728\uff0c\u5f53\u4f60\u8c03\u7528 fetch_housing_data() \uff0c\u5c31\u4f1a\u5728\u5de5\u4f5c\u7a7a\u95f4\u521b\u5efa\u4e00\u4e2a datasets/housing \u76ee\u5f55\uff0c\u4e0b\u8f7d housing.tgz \u6587\u4ef6\uff0c\u89e3\u538b\u51fa housing.csv \u3002 \u7136\u540e\u4f7f\u7528Pandas\u52a0\u8f7d\u6570\u636e\u3002\u8fd8\u662f\u7528\u4e00\u4e2a\u5c0f\u51fd\u6570\u6765\u52a0\u8f7d\u6570\u636e\uff1a import pandas as pd def load_housing_data(housing_path=HOUSING_PATH): csv_path = os.path.join(housing_path, \"housing.csv\") return pd.read_csv(csv_path) \u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u6709\u6570\u636e\u7684 Pandas DataFrame \u5bf9\u8c61\u3002","title":"\u4e0b\u8f7d\u6570\u636e"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_10","text":"\u4f7f\u7528 DataFrame \u7684 head() \u65b9\u6cd5\u67e5\u770b\u8be5\u6570\u636e\u96c6\u7684\u524d5\u884c\uff08\u89c1\u56fe 2-5\uff09\u3002 \u56fe 2-5 \u6570\u636e\u96c6\u7684\u524d\u4e94\u884c \u6bcf\u4e00\u884c\u90fd\u8868\u793a\u4e00\u4e2a\u8857\u533a\u3002\u5171\u6709 10 \u4e2a\u5c5e\u6027\uff08\u622a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230 6 \u4e2a\uff09\uff1a\u7ecf\u5ea6\u3001\u7ef4\u5ea6\u3001\u623f\u5c4b\u5e74\u9f84\u4e2d\u4f4d\u6570\u3001\u603b\u623f\u95f4\u6570\u3001\u603b\u5367\u5ba4\u6570\u3001\u4eba\u53e3\u6570\u3001\u5bb6\u5ead\u6570\u3001\u6536\u5165\u4e2d\u4f4d\u6570\u3001\u623f\u5c4b\u4ef7\u503c\u4e2d\u4f4d\u6570\u3001\u79bb\u5927\u6d77\u8ddd\u79bb\u3002 info() \u65b9\u6cd5\u53ef\u4ee5\u5feb\u901f\u67e5\u770b\u6570\u636e\u7684\u63cf\u8ff0\uff0c\u7279\u522b\u662f\u603b\u884c\u6570\u3001\u6bcf\u4e2a\u5c5e\u6027\u7684\u7c7b\u578b\u548c\u975e\u7a7a\u503c\u7684\u6570\u91cf\uff08\u89c1\u56fe 2-6\uff09\u3002 \u56fe 2-6 \u623f\u5c4b\u4fe1\u606f \u6570\u636e\u96c6\u4e2d\u5171\u6709 20640 \u4e2a\u5b9e\u4f8b\uff0c\u6309\u7167\u673a\u5668\u5b66\u4e60\u7684\u6807\u51c6\u8fd9\u4e2a\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u4f46\u662f\u975e\u5e38\u9002\u5408\u5165\u95e8\u3002\u6211\u4eec\u6ce8\u610f\u5230\u603b\u623f\u95f4\u6570\u53ea\u6709 20433 \u4e2a\u975e\u7a7a\u503c\uff0c\u8fd9\u610f\u5473\u7740\u6709 207 \u4e2a\u8857\u533a\u7f3a\u5c11\u8fd9\u4e2a\u503c\u3002\u6211\u4eec\u5c06\u5728\u540e\u9762\u5bf9\u5b83\u8fdb\u884c\u5904\u7406\u3002 \u6240\u6709\u7684\u5c5e\u6027\u90fd\u662f\u6570\u503c\u7684\uff0c\u9664\u4e86\u79bb\u5927\u6d77\u8ddd\u79bb\u8fd9\u9879\u3002\u5b83\u7684\u7c7b\u578b\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\u53ef\u4ee5\u5305\u542b\u4efb\u610f Python \u5bf9\u8c61\uff0c\u4f46\u662f\u56e0\u4e3a\u8be5\u9879\u662f\u4ece CSV \u6587\u4ef6\u52a0\u8f7d\u7684\uff0c\u6240\u4ee5\u5fc5\u7136\u662f\u6587\u672c\u7c7b\u578b\u3002\u5728\u521a\u624d\u67e5\u770b\u6570\u636e\u524d\u4e94\u9879\u65f6\uff0c\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u90a3\u4e00\u5217\u7684\u503c\u662f\u91cd\u590d\u7684\uff0c\u610f\u5473\u7740\u5b83\u53ef\u80fd\u662f\u4e00\u9879\u8868\u793a\u7c7b\u522b\u7684\u5c5e\u6027\u3002\u53ef\u4ee5\u4f7f\u7528 value_counts() \u65b9\u6cd5\u67e5\u770b\u8be5\u9879\u4e2d\u90fd\u6709\u54ea\u4e9b\u7c7b\u522b\uff0c\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u90fd\u5305\u542b\u6709\u591a\u5c11\u4e2a\u8857\u533a\uff1a >>> housing[\"ocean_proximity\"].value_counts() <1H OCEAN 9136 INLAND 6551 NEAR OCEAN 2658 NEAR BAY 2290 ISLAND 5 Name: ocean_proximity, dtype: int64 \u518d\u6765\u770b\u5176\u5b83\u5b57\u6bb5\u3002 describe() \u65b9\u6cd5\u5c55\u793a\u4e86\u6570\u503c\u5c5e\u6027\u7684\u6982\u62ec\uff08\u89c1\u56fe 2-7\uff09\u3002 \u56fe 2-7 \u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u6982\u62ec count \u3001 mean \u3001 min \u548c max \u51e0\u884c\u7684\u610f\u601d\u5f88\u660e\u663e\u4e86\u3002\u6ce8\u610f\uff0c\u7a7a\u503c\u88ab\u5ffd\u7565\u4e86\uff08\u6240\u4ee5\uff0c\u5367\u5ba4\u603b\u6570\u662f 20433 \u800c\u4e0d\u662f 20640\uff09\u3002 std \u662f\u6807\u51c6\u5dee\uff08\u63ed\u793a\u6570\u503c\u7684\u5206\u6563\u5ea6\uff09\u300225%\u300150%\u300175% \u5c55\u793a\u4e86\u5bf9\u5e94\u7684\u5206\u4f4d\u6570\uff1a\u6bcf\u4e2a\u5206\u4f4d\u6570\u6307\u660e\u5c0f\u4e8e\u8fd9\u4e2a\u503c\uff0c\u4e14\u6307\u5b9a\u5206\u7ec4\u7684\u767e\u5206\u6bd4\u3002\u4f8b\u5982\uff0c25% \u7684\u8857\u533a\u7684\u623f\u5c4b\u5e74\u9f84\u4e2d\u4f4d\u6570\u5c0f\u4e8e 18\uff0c\u800c 50% \u7684\u5c0f\u4e8e 29\uff0c75% \u7684\u5c0f\u4e8e 37\u3002\u8fd9\u4e9b\u503c\u901a\u5e38\u79f0\u4e3a\u7b2c 25 \u4e2a\u767e\u5206\u4f4d\u6570\uff08\u6216\u7b2c\u4e00\u4e2a\u56db\u5206\u4f4d\u6570\uff09\uff0c\u4e2d\u4f4d\u6570\uff0c\u7b2c 75 \u4e2a\u767e\u5206\u4f4d\u6570\uff08\u7b2c\u4e09\u4e2a\u56db\u5206\u4f4d\u6570\uff09\u3002 \u53e6\u4e00\u79cd\u5feb\u901f\u4e86\u89e3\u6570\u636e\u7c7b\u578b\u7684\u65b9\u6cd5\u662f\u753b\u51fa\u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u67f1\u72b6\u56fe\u3002\u67f1\u72b6\u56fe\uff08\u7684\u7eb5\u8f74\uff09\u5c55\u793a\u4e86\u7279\u5b9a\u8303\u56f4\u7684\u5b9e\u4f8b\u7684\u4e2a\u6570\u3002\u4f60\u8fd8\u53ef\u4ee5\u4e00\u6b21\u7ed9\u4e00\u4e2a\u5c5e\u6027\u753b\u56fe\uff0c\u6216\u5bf9\u5b8c\u6574\u6570\u636e\u96c6\u8c03\u7528 hist() \u65b9\u6cd5\uff0c\u540e\u8005\u4f1a\u753b\u51fa\u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u67f1\u72b6\u56fe\uff08\u89c1\u56fe 2-8\uff09\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u7565\u5fae\u8d85\u8fc7 800 \u4e2a\u8857\u533a\u7684 median_house_value \u503c\u5dee\u4e0d\u591a\u7b49\u4e8e 500000 \u7f8e\u5143\u3002 %matplotlib inline # only in a Jupyter notebook import matplotlib.pyplot as plt housing.hist(bins=50, figsize=(20,15)) plt.show() \u56fe 2-8 \u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u67f1\u72b6\u56fe \u6ce8\uff1a hist() \u65b9\u6cd5\u4f9d\u8d56\u4e8e Matplotlib\uff0c\u540e\u8005\u4f9d\u8d56\u4e8e\u7528\u6237\u6307\u5b9a\u7684\u56fe\u5f62\u540e\u7aef\u4ee5\u6253\u5370\u5230\u5c4f\u5e55\u4e0a\u3002\u56e0\u6b64\u5728\u753b\u56fe\u4e4b\u524d\uff0c\u4f60\u8981\u6307\u5b9a Matplotlib \u8981\u4f7f\u7528\u7684\u540e\u7aef\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 Jupyter \u7684\u9b54\u672f\u547d\u4ee4 %matplotlib inline \u3002\u5b83\u4f1a\u544a\u8bc9 Jupyter \u8bbe\u5b9a\u597d Matplotlib\uff0c\u4ee5\u4f7f\u7528 Jupyter \u81ea\u5df1\u7684\u540e\u7aef\u3002\u7ed8\u56fe\u5c31\u4f1a\u5728 notebook \u4e2d\u6e32\u67d3\u4e86\u3002\u6ce8\u610f\u5728 Jupyter \u4e2d\u8c03\u7528 show() \u4e0d\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u4ee3\u7801\u6846\u6267\u884c\u540e Jupyter \u4f1a\u81ea\u52a8\u5c55\u793a\u56fe\u50cf\u3002 \u6ce8\u610f\u67f1\u72b6\u56fe\u4e2d\u7684\u4e00\u4e9b\u70b9\uff1a \u9996\u5148\uff0c\u6536\u5165\u4e2d\u4f4d\u6570\u8c8c\u4f3c\u4e0d\u662f\u7f8e\u5143\uff08USD\uff09\u3002\u4e0e\u6570\u636e\u91c7\u96c6\u56e2\u961f\u4ea4\u6d41\u4e4b\u540e\uff0c\u4f60\u88ab\u544a\u77e5\u6570\u636e\u662f\u7ecf\u8fc7\u7f29\u653e\u8c03\u6574\u7684\uff0c\u8fc7\u9ad8\u6536\u5165\u4e2d\u4f4d\u6570\u7684\u4f1a\u53d8\u4e3a 15\uff08\u5b9e\u9645\u4e3a 15.0001\uff09\uff0c\u8fc7\u4f4e\u7684\u4f1a\u53d8\u4e3a 5\uff08\u5b9e\u9645\u4e3a 0.4999\uff09\u3002\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\u5f88\u6b63\u5e38\uff0c\u8fd9\u4e0d\u4e00\u5b9a\u662f\u4e2a\u95ee\u9898\uff0c\u4f46\u4f60\u8981\u660e\u767d\u6570\u636e\u662f\u5982\u4f55\u8ba1\u7b97\u51fa\u6765\u7684\u3002 \u623f\u5c4b\u5e74\u9f84\u4e2d\u4f4d\u6570\u548c\u623f\u5c4b\u4ef7\u503c\u4e2d\u4f4d\u6570\u4e5f\u88ab\u8bbe\u4e86\u4e0a\u9650\u3002\u540e\u8005\u53ef\u80fd\u662f\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u662f\u4f60\u7684\u76ee\u6807\u5c5e\u6027\uff08\u4f60\u7684\u6807\u7b7e\uff09\u3002\u4f60\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u53ef\u80fd\u5b66\u4e60\u5230\u4ef7\u683c\u4e0d\u4f1a\u8d85\u51fa\u8fd9\u4e2a\u754c\u9650\u3002\u4f60\u9700\u8981\u4e0e\u4e0b\u6e38\u56e2\u961f\u6838\u5b9e\uff0c\u8fd9\u662f\u5426\u4f1a\u6210\u4e3a\u95ee\u9898\u3002\u5982\u679c\u4ed6\u4eec\u544a\u8bc9\u4f60\u4ed6\u4eec\u9700\u8981\u660e\u786e\u7684\u9884\u6d4b\u503c\uff0c\u5373\u4f7f\u8d85\u8fc7 500000 \u7f8e\u5143\uff0c\u4f60\u5219\u6709\u4e24\u4e2a\u9009\u9879\uff1a \u5bf9\u4e8e\u8bbe\u4e86\u4e0a\u9650\u7684\u6807\u7b7e\uff0c\u91cd\u65b0\u6536\u96c6\u5408\u9002\u7684\u6807\u7b7e\uff1b \u5c06\u8fd9\u4e9b\u8857\u533a\u4ece\u8bad\u7ec3\u96c6\u79fb\u9664\uff08\u4e5f\u4ece\u6d4b\u8bd5\u96c6\u79fb\u9664\uff0c\u56e0\u4e3a\u82e5\u623f\u4ef7\u8d85\u51fa 500000 \u7f8e\u5143\uff0c\u4f60\u7684\u7cfb\u7edf\u5c31\u4f1a\u88ab\u5dee\u8bc4\uff09\u3002 \u8fd9\u4e9b\u5c5e\u6027\u503c\u6709\u4e0d\u540c\u7684\u91cf\u5ea6\u3002\u6211\u4eec\u4f1a\u5728\u672c\u7ae0\u540e\u9762\u8ba8\u8bba\u7279\u5f81\u7f29\u653e\u3002 \u6700\u540e\uff0c\u8bb8\u591a\u67f1\u72b6\u56fe\u7684\u5c3e\u5df4\u5f88\u957f\uff1a\u76f8\u8f83\u4e8e\u5de6\u8fb9\uff0c\u5b83\u4eec\u5728\u4e2d\u4f4d\u6570\u7684\u53f3\u8fb9\u5ef6\u4f38\u8fc7\u8fdc\u3002\u5bf9\u4e8e\u67d0\u4e9b\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u8fd9\u4f1a\u4f7f\u68c0\u6d4b\u89c4\u5f8b\u53d8\u5f97\u66f4\u96be\u4e9b\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u5c1d\u8bd5\u53d8\u6362\u5904\u7406\u8fd9\u4e9b\u5c5e\u6027\uff0c\u4f7f\u5176\u53d8\u4e3a\u6b63\u6001\u5206\u5e03\u3002 \u5e0c\u671b\u4f60\u73b0\u5728\u5bf9\u8981\u5904\u7406\u7684\u6570\u636e\u6709\u4e00\u5b9a\u4e86\u89e3\u4e86\u3002 \u8b66\u544a\uff1a\u7a0d\u7b49\uff01\u5728\u4f60\u8fdb\u4e00\u6b65\u67e5\u770b\u6570\u636e\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u96c6\uff0c\u5c06\u5b83\u653e\u5728\u4e00\u65c1\uff0c\u5343\u4e07\u4e0d\u8981\u518d\u770b\u5b83\u3002","title":"\u5feb\u901f\u67e5\u770b\u6570\u636e\u7ed3\u6784"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_11","text":"\u5728\u8fd9\u4e2a\u9636\u6bb5\u5c31\u5206\u5272\u6570\u636e\uff0c\u542c\u8d77\u6765\u5f88\u5947\u602a\u3002\u6bd5\u7adf\uff0c\u4f60\u53ea\u662f\u7b80\u5355\u5feb\u901f\u5730\u67e5\u770b\u4e86\u6570\u636e\u800c\u5df2\uff0c\u4f60\u9700\u8981\u518d\u4ed4\u7ec6\u8c03\u67e5\u4e0b\u6570\u636e\u4ee5\u51b3\u5b9a\u4f7f\u7528\u4ec0\u4e48\u7b97\u6cd5\u3002\u8fd9\u4e48\u60f3\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u4eba\u7c7b\u7684\u5927\u8111\u662f\u4e00\u4e2a\u795e\u5947\u7684\u53d1\u73b0\u89c4\u5f8b\u7684\u7cfb\u7edf\uff0c\u8fd9\u610f\u5473\u7740\u5927\u8111\u975e\u5e38\u5bb9\u6613\u53d1\u751f\u8fc7\u62df\u5408\uff1a\u5982\u679c\u4f60\u67e5\u770b\u4e86\u6d4b\u8bd5\u96c6\uff0c\u5c31\u4f1a\u4e0d\u7ecf\u610f\u5730\u6309\u7167\u6d4b\u8bd5\u96c6\u4e2d\u7684\u89c4\u5f8b\u6765\u9009\u62e9\u67d0\u4e2a\u7279\u5b9a\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u3002\u518d\u5f53\u4f60\u4f7f\u7528\u6d4b\u8bd5\u96c6\u6765\u8bc4\u4f30\u8bef\u5dee\u7387\u65f6\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8bc4\u4f30\u8fc7\u4e8e\u4e50\u89c2\uff0c\u800c\u5b9e\u9645\u90e8\u7f72\u7684\u7cfb\u7edf\u8868\u73b0\u5c31\u4f1a\u5dee\u3002\u8fd9\u79f0\u4e3a\u6570\u636e\u900f\u89c6\u504f\u5dee\u3002 \u7406\u8bba\u4e0a\uff0c\u521b\u5efa\u6d4b\u8bd5\u96c6\u5f88\u7b80\u5355\uff1a\u53ea\u8981\u968f\u673a\u6311\u9009\u4e00\u4e9b\u5b9e\u4f8b\uff0c\u4e00\u822c\u662f\u6570\u636e\u96c6\u7684 20%\uff0c\u653e\u5230\u4e00\u8fb9\uff1a import numpy as np def split_train_test(data, test_ratio): shuffled_indices = np.random.permutation(len(data)) test_set_size = int(len(data) * test_ratio) test_indices = shuffled_indices[:test_set_size] train_indices = shuffled_indices[test_set_size:] return data.iloc[train_indices], data.iloc[test_indices] \u7136\u540e\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\uff1a >>> train_set, test_set = split_train_test(housing, 0.2) >>> print(len(train_set), \"train +\", len(test_set), \"test\") 16512 train + 4128 test \u8fd9\u4e2a\u65b9\u6cd5\u53ef\u884c\uff0c\u4f46\u662f\u5e76\u4e0d\u5b8c\u7f8e\uff1a\u5982\u679c\u518d\u6b21\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e0d\u540c\u7684\u6d4b\u8bd5\u96c6\uff01\u591a\u6b21\u8fd0\u884c\u4e4b\u540e\uff0c\u4f60\uff08\u6216\u4f60\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff09\u5c31\u4f1a\u5f97\u5230\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u8fd9\u662f\u9700\u8981\u907f\u514d\u7684\u3002 \u89e3\u51b3\u7684\u529e\u6cd5\u4e4b\u4e00\u662f\u4fdd\u5b58\u7b2c\u4e00\u6b21\u8fd0\u884c\u5f97\u5230\u7684\u6d4b\u8bd5\u96c6\uff0c\u5e76\u5728\u968f\u540e\u7684\u8fc7\u7a0b\u52a0\u8f7d\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u8c03\u7528 np.random.permutation() \u4e4b\u524d\uff0c\u8bbe\u7f6e\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u79cd\u5b50\uff08\u6bd4\u5982 np.random.seed(42) \uff09\uff0c\u4ee5\u4ea7\u751f\u603b\u662f\u76f8\u540c\u7684\u6d17\u724c\u6307\u6570\uff08shuffled indices\uff09\u3002 \u4f46\u662f\u5982\u679c\u6570\u636e\u96c6\u66f4\u65b0\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u5931\u6548\u3002\u4e00\u4e2a\u901a\u5e38\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u4f7f\u7528\u6bcf\u4e2a\u5b9e\u4f8b\u7684ID\u6765\u5224\u5b9a\u8fd9\u4e2a\u5b9e\u4f8b\u662f\u5426\u5e94\u8be5\u653e\u5165\u6d4b\u8bd5\u96c6\uff08\u5047\u8bbe\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6709\u552f\u4e00\u5e76\u4e14\u4e0d\u53d8\u7684ID\uff09\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u5b9e\u4f8bID\u7684\u54c8\u5e0c\u503c\uff0c\u53ea\u4fdd\u7559\u5176\u6700\u540e\u4e00\u4e2a\u5b57\u8282\uff0c\u5982\u679c\u8be5\u503c\u5c0f\u4e8e\u7b49\u4e8e 51\uff08\u7ea6\u4e3a 256 \u7684 20%\uff09\uff0c\u5c31\u5c06\u5176\u653e\u5165\u6d4b\u8bd5\u96c6\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5728\u591a\u6b21\u8fd0\u884c\u4e2d\uff0c\u6d4b\u8bd5\u96c6\u4fdd\u6301\u4e0d\u53d8\uff0c\u5373\u4f7f\u66f4\u65b0\u4e86\u6570\u636e\u96c6\u3002\u65b0\u7684\u6d4b\u8bd5\u96c6\u4f1a\u5305\u542b\u65b0\u5b9e\u4f8b\u4e2d\u7684 20%\uff0c\u4f46\u4e0d\u4f1a\u6709\u4e4b\u524d\u4f4d\u4e8e\u8bad\u7ec3\u96c6\u7684\u5b9e\u4f8b\u3002\u4e0b\u9762\u662f\u4e00\u79cd\u53ef\u7528\u7684\u65b9\u6cd5\uff1a import hashlib def test_set_check(identifier, test_ratio, hash): return hash(np.int64(identifier)).digest()[-1] < 256 * test_ratio def split_train_test_by_id(data, test_ratio, id_column, hash=hashlib.md5): ids = data[id_column] in_test_set = ids.apply(lambda id_: test_set_check(id_, test_ratio, hash)) return data.loc[~in_test_set], data.loc[in_test_set] \u4e0d\u8fc7\uff0c\u623f\u4ea7\u6570\u636e\u96c6\u6ca1\u6709ID\u8fd9\u4e00\u5217\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u884c\u7d22\u5f15\u4f5c\u4e3a ID\uff1a housing_with_id = housing.reset_index() # adds an `index` column train_set, test_set = split_train_test_by_id(housing_with_id, 0.2, \"index\") \u5982\u679c\u4f7f\u7528\u884c\u7d22\u5f15\u4f5c\u4e3a\u552f\u4e00\u8bc6\u522b\u7801\uff0c\u4f60\u9700\u8981\u4fdd\u8bc1\u65b0\u6570\u636e\u90fd\u653e\u5230\u73b0\u6709\u6570\u636e\u7684\u5c3e\u90e8\uff0c\u4e14\u6ca1\u6709\u884c\u88ab\u5220\u9664\u3002\u5982\u679c\u505a\u4e0d\u5230\uff0c\u5219\u53ef\u4ee5\u7528\u6700\u7a33\u5b9a\u7684\u7279\u5f81\u6765\u521b\u5efa\u552f\u4e00\u8bc6\u522b\u7801\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u533a\u7684\u7ef4\u5ea6\u548c\u7ecf\u5ea6\u5728\u51e0\u767e\u4e07\u5e74\u4e4b\u5185\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u4e24\u8005\u7ed3\u5408\u6210\u4e00\u4e2a ID\uff1a housing_with_id[\"id\"] = housing[\"longitude\"] * 1000 + housing[\"latitude\"] train_set, test_set = split_train_test_by_id(housing_with_id, 0.2, \"id\") Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e9b\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u591a\u79cd\u65b9\u5f0f\u5c06\u6570\u636e\u96c6\u5206\u5272\u6210\u591a\u4e2a\u5b50\u96c6\u3002\u6700\u7b80\u5355\u7684\u51fd\u6570\u662f train_test_split \uff0c\u5b83\u7684\u4f5c\u7528\u548c\u4e4b\u524d\u7684\u51fd\u6570 split_train_test \u5f88\u50cf\uff0c\u5e76\u5e26\u6709\u5176\u5b83\u4e00\u4e9b\u529f\u80fd\u3002\u9996\u5148\uff0c\u5b83\u6709\u4e00\u4e2a random_state \u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u524d\u9762\u8bb2\u8fc7\u7684\u968f\u673a\u751f\u6210\u5668\u79cd\u5b50\uff1b\u7b2c\u4e8c\uff0c\u4f60\u53ef\u4ee5\u5c06\u79cd\u5b50\u4f20\u9012\u7ed9\u591a\u4e2a\u884c\u6570\u76f8\u540c\u7684\u6570\u636e\u96c6\uff0c\u53ef\u4ee5\u5728\u76f8\u540c\u7684\u7d22\u5f15\u4e0a\u5206\u5272\u6570\u636e\u96c6\uff08\u8fd9\u4e2a\u529f\u80fd\u975e\u5e38\u6709\u7528\uff0c\u6bd4\u5982\u4f60\u7684\u6807\u7b7e\u503c\u662f\u653e\u5728\u53e6\u4e00\u4e2a DataFrame \u91cc\u7684\uff09\uff1a from sklearn.model_selection import train_test_split train_set, test_set = train_test_split(housing, test_size=0.2, random_state=42) \u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u91c7\u7528\u7684\u90fd\u662f\u7eaf\u968f\u673a\u7684\u53d6\u6837\u65b9\u6cd5\u3002\u5f53\u4f60\u7684\u6570\u636e\u96c6\u5f88\u5927\u65f6\uff08\u5c24\u5176\u662f\u548c\u5c5e\u6027\u6570\u76f8\u6bd4\uff09\uff0c\u8fd9\u901a\u5e38\u53ef\u884c\uff1b\u4f46\u5982\u679c\u6570\u636e\u96c6\u4e0d\u5927\uff0c\u5c31\u4f1a\u6709\u91c7\u6837\u504f\u5dee\u7684\u98ce\u9669\u3002\u5f53\u4e00\u4e2a\u8c03\u67e5\u516c\u53f8\u60f3\u8981\u5bf9 1000 \u4e2a\u4eba\u8fdb\u884c\u8c03\u67e5\uff0c\u5b83\u4eec\u4e0d\u662f\u5728\u7535\u8bdd\u4ead\u91cc\u968f\u673a\u9009 1000 \u4e2a\u4eba\u51fa\u6765\u3002\u8c03\u67e5\u516c\u53f8\u8981\u4fdd\u8bc1\u8fd9 1000 \u4e2a\u4eba\u5bf9\u4eba\u7fa4\u6574\u4f53\u6709\u4ee3\u8868\u6027\u3002\u4f8b\u5982\uff0c\u7f8e\u56fd\u4eba\u53e3\u7684 51.3% \u662f\u5973\u6027\uff0c48.7% \u662f\u7537\u6027\u3002\u6240\u4ee5\u5728\u7f8e\u56fd\uff0c\u4e25\u8c28\u7684\u8c03\u67e5\u9700\u8981\u4fdd\u8bc1\u6837\u672c\u4e5f\u662f\u8fd9\u4e2a\u6bd4\u4f8b\uff1a513 \u540d\u5973\u6027\uff0c487 \u540d\u7537\u6027\u3002\u8fd9\u79f0\u4f5c\u5206\u5c42\u91c7\u6837\uff08stratified sampling\uff09\uff1a\u5c06\u4eba\u7fa4\u5206\u6210\u5747\u5300\u7684\u5b50\u5206\u7ec4\uff0c\u79f0\u4e3a\u5206\u5c42\uff0c\u4ece\u6bcf\u4e2a\u5206\u5c42\u53bb\u53d6\u5408\u9002\u6570\u91cf\u7684\u5b9e\u4f8b\uff0c\u4ee5\u4fdd\u8bc1\u6d4b\u8bd5\u96c6\u5bf9\u603b\u4eba\u6570\u6709\u4ee3\u8868\u6027\u3002\u5982\u679c\u8c03\u67e5\u516c\u53f8\u91c7\u7528\u7eaf\u968f\u673a\u91c7\u6837\uff0c\u4f1a\u6709 12% \u7684\u6982\u7387\u5bfc\u81f4\u91c7\u6837\u504f\u5dee\uff1a\u5973\u6027\u4eba\u6570\u5c11\u4e8e 49%\uff0c\u6216\u591a\u4e8e 54%\u3002\u4e0d\u7ba1\u53d1\u751f\u90a3\u79cd\u60c5\u51b5\uff0c\u8c03\u67e5\u7ed3\u679c\u90fd\u4f1a\u4e25\u91cd\u504f\u5dee\u3002 \u5047\u8bbe\u4e13\u5bb6\u544a\u8bc9\u4f60\uff0c\u6536\u5165\u4e2d\u4f4d\u6570\u662f\u9884\u6d4b\u623f\u4ef7\u4e2d\u4f4d\u6570\u975e\u5e38\u91cd\u8981\u7684\u5c5e\u6027\u3002\u4f60\u53ef\u80fd\u60f3\u8981\u4fdd\u8bc1\u6d4b\u8bd5\u96c6\u53ef\u4ee5\u4ee3\u8868\u6574\u4f53\u6570\u636e\u96c6\u4e2d\u7684\u591a\u79cd\u6536\u5165\u5206\u7c7b\u3002\u56e0\u4e3a\u6536\u5165\u4e2d\u4f4d\u6570\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u6570\u503c\u5c5e\u6027\uff0c\u4f60\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u6536\u5165\u7c7b\u522b\u5c5e\u6027\u3002\u518d\u4ed4\u7ec6\u5730\u770b\u4e00\u4e0b\u6536\u5165\u4e2d\u4f4d\u6570\u7684\u67f1\u72b6\u56fe\uff08\u56fe 2-9\uff09\uff08\u8bd1\u6ce8\uff1a\u8be5\u56fe\u662f\u5bf9\u6536\u5165\u4e2d\u4f4d\u6570\u5904\u7406\u8fc7\u540e\u7684\u56fe\uff09\uff1a \u56fe 2-9 \u6536\u5165\u5206\u7c7b\u7684\u67f1\u72b6\u56fe \u5927\u591a\u6570\u7684\u6536\u5165\u4e2d\u4f4d\u6570\u7684\u503c\u805a\u96c6\u5728 2-5\uff08\u4e07\u7f8e\u5143\uff09\uff0c\u4f46\u662f\u4e00\u4e9b\u6536\u5165\u4e2d\u4f4d\u6570\u4f1a\u8d85\u8fc7 6\u3002\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u5206\u5c42\u90fd\u8981\u6709\u8db3\u591f\u7684\u5b9e\u4f8b\u4f4d\u4e8e\u4f60\u7684\u6570\u636e\u4e2d\uff0c\u8fd9\u70b9\u5f88\u91cd\u8981\u3002\u5426\u5219\uff0c\u5bf9\u5206\u5c42\u91cd\u8981\u6027\u7684\u8bc4\u4f30\u5c31\u4f1a\u6709\u504f\u5dee\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f60\u4e0d\u80fd\u6709\u8fc7\u591a\u7684\u5206\u5c42\uff0c\u4e14\u6bcf\u4e2a\u5206\u5c42\u90fd\u8981\u8db3\u591f\u5927\u3002\u540e\u9762\u7684\u4ee3\u7801\u901a\u8fc7\u5c06\u6536\u5165\u4e2d\u4f4d\u6570\u9664\u4ee5 1.5\uff08\u4ee5\u9650\u5236\u6536\u5165\u5206\u7c7b\u7684\u6570\u91cf\uff09\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u6536\u5165\u7c7b\u522b\u5c5e\u6027\uff0c\u7528 ceil \u5bf9\u503c\u820d\u5165\uff08\u4ee5\u4ea7\u751f\u79bb\u6563\u7684\u5206\u7c7b\uff09\uff0c\u7136\u540e\u5c06\u6240\u6709\u5927\u4e8e 5\u7684\u5206\u7c7b\u5f52\u5165\u5230\u5206\u7c7b 5\uff1a housing[\"income_cat\"] = np.ceil(housing[\"median_income\"] / 1.5) housing[\"income_cat\"].where(housing[\"income_cat\"] < 5, 5.0, inplace=True) \u73b0\u5728\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u6536\u5165\u5206\u7c7b\uff0c\u8fdb\u884c\u5206\u5c42\u91c7\u6837\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 Scikit-Learn \u7684 StratifiedShuffleSplit \u7c7b\uff1a from sklearn.model_selection import StratifiedShuffleSplit split = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42) for train_index, test_index in split.split(housing, housing[\"income_cat\"]): strat_train_set = housing.loc[train_index] strat_test_set = housing.loc[test_index] \u68c0\u67e5\u4e0b\u7ed3\u679c\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\u4f60\u53ef\u4ee5\u5728\u5b8c\u6574\u7684\u623f\u4ea7\u6570\u636e\u96c6\u4e2d\u67e5\u770b\u6536\u5165\u5206\u7c7b\u6bd4\u4f8b\uff1a >>> housing[\"income_cat\"].value_counts() / len(housing) 3.0 0.350581 2.0 0.318847 4.0 0.176308 5.0 0.114438 1.0 0.039826 Name: income_cat, dtype: float64 \u4f7f\u7528\u76f8\u4f3c\u7684\u4ee3\u7801\uff0c\u8fd8\u53ef\u4ee5\u6d4b\u91cf\u6d4b\u8bd5\u96c6\u4e2d\u6536\u5165\u5206\u7c7b\u7684\u6bd4\u4f8b\u3002\u56fe 2-10 \u5bf9\u6bd4\u4e86\u603b\u6570\u636e\u96c6\u3001\u5206\u5c42\u91c7\u6837\u7684\u6d4b\u8bd5\u96c6\u3001\u7eaf\u968f\u673a\u91c7\u6837\u6d4b\u8bd5\u96c6\u7684\u6536\u5165\u5206\u7c7b\u6bd4\u4f8b\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5206\u5c42\u91c7\u6837\u6d4b\u8bd5\u96c6\u7684\u6536\u5165\u5206\u7c7b\u6bd4\u4f8b\u4e0e\u603b\u6570\u636e\u96c6\u51e0\u4e4e\u76f8\u540c\uff0c\u800c\u968f\u673a\u91c7\u6837\u6570\u636e\u96c6\u504f\u5dee\u4e25\u91cd\u3002 \u56fe 2-10 \u5206\u5c42\u91c7\u6837\u548c\u7eaf\u968f\u673a\u91c7\u6837\u7684\u6837\u672c\u504f\u5dee\u6bd4\u8f83 \u73b0\u5728\uff0c\u4f60\u9700\u8981\u5220\u9664 income_cat \u5c5e\u6027\uff0c\u4f7f\u6570\u636e\u56de\u5230\u521d\u59cb\u72b6\u6001\uff1a for set in (strat_train_set, strat_test_set): set.drop([\"income_cat\"], axis=1, inplace=True) \u6211\u4eec\u7528\u4e86\u5927\u91cf\u65f6\u95f4\u6765\u751f\u6210\u6d4b\u8bd5\u96c6\u7684\u539f\u56e0\u662f\uff1a\u6d4b\u8bd5\u96c6\u901a\u5e38\u88ab\u5ffd\u7565\uff0c\u4f46\u5b9e\u9645\u662f\u673a\u5668\u5b66\u4e60\u975e\u5e38\u91cd\u8981\u7684\u4e00\u90e8\u5206\u3002\u8fd8\u6709\uff0c\u751f\u6210\u6d4b\u8bd5\u96c6\u8fc7\u7a0b\u4e2d\u7684\u8bb8\u591a\u601d\u8def\u5bf9\u4e8e\u540e\u9762\u7684\u4ea4\u53c9\u9a8c\u8bc1\u8ba8\u8bba\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684\u3002\u63a5\u4e0b\u6765\u8fdb\u5165\u4e0b\u4e00\u9636\u6bb5\uff1a\u6570\u636e\u63a2\u7d22\u3002","title":"\u521b\u5efa\u6d4b\u8bd5\u96c6"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_12","text":"\u76ee\u524d\u4e3a\u6b62\uff0c\u4f60\u53ea\u662f\u5feb\u901f\u67e5\u770b\u4e86\u6570\u636e\uff0c\u5bf9\u8981\u5904\u7406\u7684\u6570\u636e\u6709\u4e86\u6574\u4f53\u4e86\u89e3\u3002\u73b0\u5728\u7684\u76ee\u6807\u662f\u66f4\u6df1\u7684\u63a2\u7d22\u6570\u636e\u3002 \u9996\u5148\uff0c\u4fdd\u8bc1\u4f60\u5c06\u6d4b\u8bd5\u96c6\u653e\u5728\u4e86\u4e00\u65c1\uff0c\u53ea\u662f\u7814\u7a76\u8bad\u7ec3\u96c6\u3002\u53e6\u5916\uff0c\u5982\u679c\u8bad\u7ec3\u96c6\u975e\u5e38\u5927\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u518d\u91c7\u6837\u4e00\u4e2a\u63a2\u7d22\u96c6\uff0c\u4fdd\u8bc1\u64cd\u4f5c\u65b9\u4fbf\u5feb\u901f\u3002\u5728\u6211\u4eec\u7684\u6848\u4f8b\u4e2d\uff0c\u6570\u636e\u96c6\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5168\u96c6\u4e0a\u76f4\u63a5\u5de5\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u514d\u635f\u4f24\u8bad\u7ec3\u96c6\uff1a housing = strat_train_set.copy()","title":"\u6570\u636e\u63a2\u7d22\u548c\u53ef\u89c6\u5316\u3001\u53d1\u73b0\u89c4\u5f8b"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_13","text":"\u56e0\u4e3a\u5b58\u5728\u5730\u7406\u4fe1\u606f\uff08\u7eac\u5ea6\u548c\u7ecf\u5ea6\uff09\uff0c\u521b\u5efa\u4e00\u4e2a\u6240\u6709\u8857\u533a\u7684\u6563\u70b9\u56fe\u6765\u6570\u636e\u53ef\u89c6\u5316\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u4e3b\u610f\uff08\u56fe 2-11\uff09\uff1a housing.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\") \u56fe 2-11 \u6570\u636e\u7684\u5730\u7406\u4fe1\u606f\u6563\u70b9\u56fe \u8fd9\u5f20\u56fe\u770b\u8d77\u6765\u5f88\u50cf\u52a0\u5dde\uff0c\u4f46\u662f\u770b\u4e0d\u51fa\u4ec0\u4e48\u7279\u522b\u7684\u89c4\u5f8b\u3002\u5c06 alpha \u8bbe\u4e3a 0.1\uff0c\u53ef\u4ee5\u66f4\u5bb9\u6613\u770b\u51fa\u6570\u636e\u70b9\u7684\u5bc6\u5ea6\uff08\u56fe 2-12\uff09\uff1a housing.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", alpha=0.1) \u56fe 2-12 \u663e\u793a\u9ad8\u5bc6\u5ea6\u533a\u57df\u7684\u6563\u70b9\u56fe \u73b0\u5728\u770b\u8d77\u6765\u597d\u591a\u4e86\uff1a\u53ef\u4ee5\u975e\u5e38\u6e05\u695a\u5730\u770b\u5230\u9ad8\u5bc6\u5ea6\u533a\u57df\uff0c\u6e7e\u533a\u3001\u6d1b\u6749\u77f6\u548c\u5723\u8fed\u6208\uff0c\u4ee5\u53ca\u4e2d\u592e\u8c37\uff0c\u7279\u522b\u662f\u4ece\u8428\u514b\u62c9\u95e8\u6258\u548c\u5f17\u96f7\u65af\u8bfa\u3002 \u901a\u5e38\u6765\u8bb2\uff0c\u4eba\u7c7b\u7684\u5927\u8111\u975e\u5e38\u5584\u4e8e\u53d1\u73b0\u56fe\u7247\u4e2d\u7684\u89c4\u5f8b\uff0c\u4f46\u662f\u9700\u8981\u8c03\u6574\u53ef\u89c6\u5316\u53c2\u6570\u4f7f\u89c4\u5f8b\u663e\u73b0\u51fa\u6765\u3002 \u73b0\u5728\u6765\u770b\u623f\u4ef7\uff08\u56fe 2-13\uff09\u3002\u6bcf\u4e2a\u5708\u7684\u534a\u5f84\u8868\u793a\u8857\u533a\u7684\u4eba\u53e3\uff08\u9009\u9879 s \uff09\uff0c\u989c\u8272\u4ee3\u8868\u4ef7\u683c\uff08\u9009\u9879 c \uff09\u3002\u6211\u4eec\u7528\u9884\u5148\u5b9a\u4e49\u7684\u540d\u4e3a jet \u7684\u989c\u8272\u56fe\uff08\u9009\u9879 cmap \uff09\uff0c\u5b83\u7684\u8303\u56f4\u662f\u4ece\u84dd\u8272\uff08\u4f4e\u4ef7\uff09\u5230\u7ea2\u8272\uff08\u9ad8\u4ef7\uff09\uff1a housing.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", alpha=0.4, s=housing[\"population\"]/100, label=\"population\", c=\"median_house_value\", cmap=plt.get_cmap(\"jet\"), colorbar=True, ) plt.legend() \u56fe 2-13 \u52a0\u5dde\u623f\u4ef7 \u8fd9\u5f20\u56fe\u8bf4\u660e\u623f\u4ef7\u548c\u4f4d\u7f6e\uff08\u6bd4\u5982\uff0c\u9760\u6d77\uff09\u548c\u4eba\u53e3\u5bc6\u5ea6\u8054\u7cfb\u5bc6\u5207\uff0c\u8fd9\u70b9\u4f60\u53ef\u80fd\u65e9\u5c31\u77e5\u9053\u3002\u53ef\u4ee5\u4f7f\u7528\u805a\u7c7b\u7b97\u6cd5\u6765\u68c0\u6d4b\u4e3b\u8981\u7684\u805a\u96c6\uff0c\u7528\u4e00\u4e2a\u65b0\u7684\u7279\u5f81\u503c\u6d4b\u91cf\u805a\u96c6\u4e2d\u5fc3\u7684\u8ddd\u79bb\u3002\u5c3d\u7ba1\u5317\u52a0\u5dde\u6d77\u5cb8\u533a\u57df\u7684\u623f\u4ef7\u4e0d\u662f\u975e\u5e38\u9ad8\uff0c\u4f46\u79bb\u5927\u6d77\u8ddd\u79bb\u5c5e\u6027\u4e5f\u53ef\u80fd\u5f88\u6709\u7528\uff0c\u6240\u4ee5\u8fd9\u4e0d\u662f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\u5c31\u53ef\u4ee5\u5b9a\u4e49\u7684\u95ee\u9898\u3002","title":"\u5730\u7406\u6570\u636e\u53ef\u89c6\u5316"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_14","text":"\u56e0\u4e3a\u6570\u636e\u96c6\u5e76\u4e0d\u662f\u975e\u5e38\u5927\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4f7f\u7528 corr() \u65b9\u6cd5\u8ba1\u7b97\u51fa\u6bcf\u5bf9\u5c5e\u6027\u95f4\u7684\u6807\u51c6\u76f8\u5173\u7cfb\u6570\uff08standard correlation coefficient\uff0c\u4e5f\u79f0\u4f5c\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\uff09\uff1a corr_matrix = housing.corr() \u73b0\u5728\u6765\u770b\u4e0b\u6bcf\u4e2a\u5c5e\u6027\u548c\u623f\u4ef7\u4e2d\u4f4d\u6570\u7684\u5173\u8054\u5ea6\uff1a >>> corr_matrix[\"median_house_value\"].sort_values(ascending=False) median_house_value 1.000000 median_income 0.687170 total_rooms 0.135231 housing_median_age 0.114220 households 0.064702 total_bedrooms 0.047865 population -0.026699 longitude -0.047279 latitude -0.142826 Name: median_house_value, dtype: float64 \u76f8\u5173\u7cfb\u6570\u7684\u8303\u56f4\u662f -1 \u5230 1\u3002\u5f53\u63a5\u8fd1 1 \u65f6\uff0c\u610f\u5473\u5f3a\u6b63\u76f8\u5173\uff1b\u4f8b\u5982\uff0c\u5f53\u6536\u5165\u4e2d\u4f4d\u6570\u589e\u52a0\u65f6\uff0c\u623f\u4ef7\u4e2d\u4f4d\u6570\u4e5f\u4f1a\u589e\u52a0\u3002\u5f53\u76f8\u5173\u7cfb\u6570\u63a5\u8fd1 -1 \u65f6\uff0c\u610f\u5473\u5f3a\u8d1f\u76f8\u5173\uff1b\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u7eac\u5ea6\u548c\u623f\u4ef7\u4e2d\u4f4d\u6570\u6709\u8f7b\u5fae\u7684\u8d1f\u76f8\u5173\u6027\uff08\u5373\uff0c\u8d8a\u5f80\u5317\uff0c\u623f\u4ef7\u8d8a\u53ef\u80fd\u964d\u4f4e\uff09\u3002\u6700\u540e\uff0c\u76f8\u5173\u7cfb\u6570\u63a5\u8fd1 0\uff0c\u610f\u5473\u6ca1\u6709\u7ebf\u6027\u76f8\u5173\u6027\u3002\u56fe 2-14 \u5c55\u793a\u4e86\u76f8\u5173\u7cfb\u6570\u5728\u6a2a\u8f74\u548c\u7eb5\u8f74\u4e4b\u95f4\u7684\u4e0d\u540c\u56fe\u5f62\u3002 \u56fe 2-14 \u4e0d\u540c\u6570\u636e\u96c6\u7684\u6807\u51c6\u76f8\u5173\u7cfb\u6570\uff08\u6765\u6e90\uff1aWikipedia\uff1b\u516c\u5171\u9886\u57df\u56fe\u7247\uff09 \u8b66\u544a\uff1a\u76f8\u5173\u7cfb\u6570\u53ea\u6d4b\u91cf\u7ebf\u6027\u5173\u7cfb\uff08\u5982\u679c x \u4e0a\u5347\uff0c y \u5219\u4e0a\u5347\u6216\u4e0b\u964d\uff09\u3002\u76f8\u5173\u7cfb\u6570\u53ef\u80fd\u4f1a\u5b8c\u5168\u5ffd\u7565\u975e\u7ebf\u6027\u5173\u7cfb\uff08\u4f8b\u5982\uff0c\u5982\u679c x \u63a5\u8fd1 0\uff0c\u5219 y \u503c\u4f1a\u53d8\u9ad8\uff09\u3002\u5728\u4e0a\u9762\u56fe\u7247\u7684\u6700\u540e\u4e00\u884c\u4e2d\uff0c\u4ed6\u4eec\u7684\u76f8\u5173\u7cfb\u6570\u90fd\u63a5\u8fd1\u4e8e 0\uff0c\u5c3d\u7ba1\u5b83\u4eec\u7684\u8f74\u5e76\u4e0d\u72ec\u7acb\uff1a\u8fd9\u4e9b\u5c31\u662f\u975e\u7ebf\u6027\u5173\u7cfb\u7684\u4f8b\u5b50\u3002\u53e6\u5916\uff0c\u7b2c\u4e8c\u884c\u7684\u76f8\u5173\u7cfb\u6570\u7b49\u4e8e 1 \u6216 -1\uff1b\u8fd9\u548c\u659c\u7387\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u4f60\u7684\u8eab\u9ad8\uff08\u5355\u4f4d\u662f\u82f1\u5bf8\uff09\u4e0e\u8eab\u9ad8\uff08\u5355\u4f4d\u662f\u82f1\u5c3a\u6216\u7eb3\u7c73\uff09\u7684\u76f8\u5173\u7cfb\u6570\u5c31\u662f 1\u3002 \u53e6\u4e00\u79cd\u68c0\u6d4b\u5c5e\u6027\u95f4\u76f8\u5173\u7cfb\u6570\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 Pandas \u7684 scatter_matrix \u51fd\u6570\uff0c\u5b83\u80fd\u753b\u51fa\u6bcf\u4e2a\u6570\u503c\u5c5e\u6027\u5bf9\u6bcf\u4e2a\u5176\u5b83\u6570\u503c\u5c5e\u6027\u7684\u56fe\u3002\u56e0\u4e3a\u73b0\u5728\u5171\u6709 11 \u4e2a\u6570\u503c\u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230 11 ** 2 = 121 \u5f20\u56fe\uff0c\u5728\u4e00\u9875\u4e0a\u753b\u4e0d\u4e0b\uff0c\u6240\u4ee5\u53ea\u5173\u6ce8\u51e0\u4e2a\u548c\u623f\u4ef7\u4e2d\u4f4d\u6570\u6700\u6709\u53ef\u80fd\u76f8\u5173\u7684\u5c5e\u6027\uff08\u56fe 2-15\uff09\uff1a from pandas.tools.plotting import scatter_matrix attributes = [\"median_house_value\", \"median_income\", \"total_rooms\", \"housing_median_age\"] scatter_matrix(housing[attributes], figsize=(12, 8)) \u56fe 2-15 \u6563\u70b9\u77e9\u9635 \u5982\u679c pandas \u5c06\u6bcf\u4e2a\u53d8\u91cf\u5bf9\u81ea\u5df1\u4f5c\u56fe\uff0c\u4e3b\u5bf9\u89d2\u7ebf\uff08\u5de6\u4e0a\u5230\u53f3\u4e0b\uff09\u90fd\u4f1a\u662f\u76f4\u7ebf\u56fe\u3002\u6240\u4ee5 Pandas \u5c55\u793a\u7684\u662f\u6bcf\u4e2a\u5c5e\u6027\u7684\u67f1\u72b6\u56fe\uff08\u4e5f\u53ef\u4ee5\u662f\u5176\u5b83\u7684\uff0c\u8bf7\u53c2\u8003 Pandas \u6587\u6863\uff09\u3002 \u6700\u6709\u5e0c\u671b\u7528\u6765\u9884\u6d4b\u623f\u4ef7\u4e2d\u4f4d\u6570\u7684\u5c5e\u6027\u662f\u6536\u5165\u4e2d\u4f4d\u6570\uff0c\u56e0\u6b64\u5c06\u8fd9\u5f20\u56fe\u653e\u5927\uff08\u56fe 2-16\uff09\uff1a housing.plot(kind=\"scatter\", x=\"median_income\",y=\"median_house_value\", alpha=0.1) \u56fe 2-16 \u6536\u5165\u4e2d\u4f4d\u6570 vs \u623f\u4ef7\u4e2d\u4f4d\u6570 \u8fd9\u5f20\u56fe\u8bf4\u660e\u4e86\u51e0\u70b9\u3002\u9996\u5148\uff0c\u76f8\u5173\u6027\u975e\u5e38\u9ad8\uff1b\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\u5411\u4e0a\u7684\u8d8b\u52bf\uff0c\u5e76\u4e14\u6570\u636e\u70b9\u4e0d\u662f\u975e\u5e38\u5206\u6563\u3002\u7b2c\u4e8c\uff0c\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\u6700\u9ad8\u4ef7\uff0c\u6e05\u6670\u5730\u5448\u73b0\u4e3a\u4e00\u6761\u4f4d\u4e8e 500000 \u7f8e\u5143\u7684\u6c34\u5e73\u7ebf\u3002\u8fd9\u5f20\u56fe\u4e5f\u5448\u73b0\u4e86\u4e00\u4e9b\u4e0d\u662f\u90a3\u4e48\u660e\u663e\u7684\u76f4\u7ebf\uff1a\u4e00\u6761\u4f4d\u4e8e 450000 \u7f8e\u5143\u7684\u76f4\u7ebf\uff0c\u4e00\u6761\u4f4d\u4e8e 350000 \u7f8e\u5143\u7684\u76f4\u7ebf\uff0c\u4e00\u6761\u5728 280000 \u7f8e\u5143\u7684\u7ebf\uff0c\u548c\u4e00\u4e9b\u66f4\u9760\u4e0b\u7684\u7ebf\u3002\u4f60\u53ef\u80fd\u5e0c\u671b\u53bb\u9664\u5bf9\u5e94\u7684\u8857\u533a\uff0c\u4ee5\u9632\u6b62\u7b97\u6cd5\u91cd\u590d\u8fd9\u4e9b\u5de7\u5408\u3002","title":"\u67e5\u627e\u5173\u8054"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_15","text":"\u5e0c\u671b\u524d\u9762\u7684\u4e00\u8282\u80fd\u6559\u7ed9\u4f60\u4e00\u4e9b\u63a2\u7d22\u6570\u636e\u3001\u53d1\u73b0\u89c4\u5f8b\u7684\u65b9\u6cd5\u3002\u4f60\u53d1\u73b0\u4e86\u4e00\u4e9b\u6570\u636e\u7684\u5de7\u5408\uff0c\u9700\u8981\u5728\u7ed9\u7b97\u6cd5\u63d0\u4f9b\u6570\u636e\u4e4b\u524d\uff0c\u5c06\u5176\u53bb\u9664\u3002\u4f60\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e9b\u5c5e\u6027\u95f4\u6709\u8da3\u7684\u5173\u8054\uff0c\u7279\u522b\u662f\u76ee\u6807\u5c5e\u6027\u3002\u4f60\u8fd8\u6ce8\u610f\u5230\u4e00\u4e9b\u5c5e\u6027\u5177\u6709\u957f\u5c3e\u5206\u5e03\uff0c\u56e0\u6b64\u4f60\u53ef\u80fd\u8981\u5c06\u5176\u8fdb\u884c\u8f6c\u6362\uff08\u4f8b\u5982\uff0c\u8ba1\u7b97\u5176 log \u5bf9\u6570\uff09\u3002\u5f53\u7136\uff0c\u4e0d\u540c\u9879\u76ee\u7684\u5904\u7406\u65b9\u6cd5\u5404\u4e0d\u76f8\u540c\uff0c\u4f46\u5927\u4f53\u601d\u8def\u662f\u76f8\u4f3c\u7684\u3002 \u7ed9\u7b97\u6cd5\u51c6\u5907\u6570\u636e\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u505a\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u662f\u5c1d\u8bd5\u591a\u79cd\u5c5e\u6027\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u67d0\u4e2a\u8857\u533a\u6709\u591a\u5c11\u6237\uff0c\u8be5\u8857\u533a\u7684\u603b\u623f\u95f4\u6570\u5c31\u6ca1\u4ec0\u4e48\u7528\u3002\u4f60\u771f\u6b63\u9700\u8981\u7684\u662f\u6bcf\u6237\u6709\u51e0\u4e2a\u623f\u95f4\u3002\u76f8\u4f3c\u7684\uff0c\u603b\u5367\u5ba4\u6570\u4e5f\u4e0d\u91cd\u8981\uff1a\u4f60\u53ef\u80fd\u9700\u8981\u5c06\u5176\u4e0e\u623f\u95f4\u6570\u8fdb\u884c\u6bd4\u8f83\u3002\u6bcf\u6237\u7684\u4eba\u53e3\u6570\u4e5f\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u5c5e\u6027\u7ec4\u5408\u3002\u8ba9\u6211\u4eec\u6765\u521b\u5efa\u8fd9\u4e9b\u65b0\u7684\u5c5e\u6027\uff1a housing[\"rooms_per_household\"] = housing[\"total_rooms\"]/housing[\"households\"] housing[\"bedrooms_per_room\"] = housing[\"total_bedrooms\"]/housing[\"total_rooms\"] housing[\"population_per_household\"]=housing[\"population\"]/housing[\"households\"] \u73b0\u5728\uff0c\u518d\u6765\u770b\u76f8\u5173\u77e9\u9635\uff1a >>> corr_matrix = housing.corr() >>> corr_matrix[\"median_house_value\"].sort_values(ascending=False) median_house_value 1.000000 median_income 0.687170 rooms_per_household 0.199343 total_rooms 0.135231 housing_median_age 0.114220 households 0.064702 total_bedrooms 0.047865 population_per_household -0.021984 population -0.026699 longitude -0.047279 latitude -0.142826 bedrooms_per_room -0.260070 Name: median_house_value, dtype: float64 \u770b\u8d77\u6765\u4e0d\u9519\uff01\u4e0e\u603b\u623f\u95f4\u6570\u6216\u5367\u5ba4\u6570\u76f8\u6bd4\uff0c\u65b0\u7684 bedrooms_per_room \u5c5e\u6027\u4e0e\u623f\u4ef7\u4e2d\u4f4d\u6570\u7684\u5173\u8054\u66f4\u5f3a\u3002\u663e\u7136\uff0c\u5367\u5ba4\u6570/\u603b\u623f\u95f4\u6570\u7684\u6bd4\u4f8b\u8d8a\u4f4e\uff0c\u623f\u4ef7\u5c31\u8d8a\u9ad8\u3002\u6bcf\u6237\u7684\u623f\u95f4\u6570\u4e5f\u6bd4\u8857\u533a\u7684\u603b\u623f\u95f4\u6570\u7684\u66f4\u6709\u4fe1\u606f\uff0c\u5f88\u660e\u663e\uff0c\u623f\u5c4b\u8d8a\u5927\uff0c\u623f\u4ef7\u5c31\u8d8a\u9ad8\u3002 \u8fd9\u4e00\u6b65\u7684\u6570\u636e\u63a2\u7d22\u4e0d\u5fc5\u975e\u5e38\u5b8c\u5907\uff0c\u6b64\u5904\u7684\u76ee\u7684\u662f\u6709\u4e00\u4e2a\u6b63\u786e\u7684\u5f00\u59cb\uff0c\u5feb\u901f\u53d1\u73b0\u89c4\u5f8b\uff0c\u4ee5\u5f97\u5230\u4e00\u4e2a\u5408\u7406\u7684\u539f\u578b\u3002\u4f46\u662f\u8fd9\u662f\u4e00\u4e2a\u4ea4\u4e92\u8fc7\u7a0b\uff1a\u4e00\u65e6\u4f60\u5f97\u5230\u4e86\u4e00\u4e2a\u539f\u578b\uff0c\u5e76\u8fd0\u884c\u8d77\u6765\uff0c\u4f60\u5c31\u53ef\u4ee5\u5206\u6790\u5b83\u7684\u8f93\u51fa\uff0c\u8fdb\u800c\u53d1\u73b0\u66f4\u591a\u7684\u89c4\u5f8b\uff0c\u7136\u540e\u518d\u56de\u5230\u6570\u636e\u63a2\u7d22\u8fd9\u6b65\u3002","title":"\u5c5e\u6027\u7ec4\u5408\u8bd5\u9a8c"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_16","text":"\u73b0\u5728\u6765\u4e3a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u51c6\u5907\u6570\u636e\u3002\u4e0d\u8981\u624b\u5de5\u6765\u505a\uff0c\u4f60\u9700\u8981\u5199\u4e00\u4e9b\u51fd\u6570\uff0c\u7406\u7531\u5982\u4e0b\uff1a \u51fd\u6570\u53ef\u4ee5\u8ba9\u4f60\u5728\u4efb\u4f55\u6570\u636e\u96c6\u4e0a\uff08\u6bd4\u5982\uff0c\u4f60\u4e0b\u4e00\u6b21\u83b7\u53d6\u7684\u662f\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u96c6\uff09\u65b9\u4fbf\u5730\u8fdb\u884c\u91cd\u590d\u6570\u636e\u8f6c\u6362\u3002 \u4f60\u80fd\u6162\u6162\u5efa\u7acb\u4e00\u4e2a\u8f6c\u6362\u51fd\u6570\u5e93\uff0c\u53ef\u4ee5\u5728\u672a\u6765\u7684\u9879\u76ee\u4e2d\u590d\u7528\u3002 \u5728\u5c06\u6570\u636e\u4f20\u7ed9\u7b97\u6cd5\u4e4b\u524d\uff0c\u4f60\u53ef\u4ee5\u5728\u5b9e\u65f6\u7cfb\u7edf\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u3002 \u8fd9\u53ef\u4ee5\u8ba9\u4f60\u65b9\u4fbf\u5730\u5c1d\u8bd5\u591a\u79cd\u6570\u636e\u8f6c\u6362\uff0c\u67e5\u770b\u54ea\u4e9b\u8f6c\u6362\u65b9\u6cd5\u7ed3\u5408\u8d77\u6765\u6548\u679c\u6700\u597d\u3002 \u4f46\u662f\uff0c\u8fd8\u662f\u5148\u56de\u5230\u5e72\u51c0\u7684\u8bad\u7ec3\u96c6\uff08\u901a\u8fc7\u518d\u6b21\u590d\u5236 strat_train_set \uff09\uff0c\u5c06\u9884\u6d4b\u91cf\u548c\u6807\u7b7e\u5206\u5f00\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u60f3\u5bf9\u9884\u6d4b\u91cf\u548c\u76ee\u6807\u503c\u5e94\u7528\u76f8\u540c\u7684\u8f6c\u6362\uff08\u6ce8\u610f drop() \u521b\u5efa\u4e86\u4e00\u4efd\u6570\u636e\u7684\u5907\u4efd\uff0c\u800c\u4e0d\u5f71\u54cd strat_train_set \uff09\uff1a housing = strat_train_set.drop(\"median_house_value\", axis=1) housing_labels = strat_train_set[\"median_house_value\"].copy()","title":"\u4e3a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u51c6\u5907\u6570\u636e"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_17","text":"\u5927\u591a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e0d\u80fd\u5904\u7406\u7f3a\u5931\u7684\u7279\u5f81\uff0c\u56e0\u6b64\u5148\u521b\u5efa\u4e00\u4e9b\u51fd\u6570\u6765\u5904\u7406\u7279\u5f81\u7f3a\u5931\u7684\u95ee\u9898\u3002\u524d\u9762\uff0c\u4f60\u5e94\u8be5\u6ce8\u610f\u5230\u4e86\u5c5e\u6027 total_bedrooms \u6709\u4e00\u4e9b\u7f3a\u5931\u503c\u3002\u6709\u4e09\u4e2a\u89e3\u51b3\u9009\u9879\uff1a \u53bb\u6389\u5bf9\u5e94\u7684\u8857\u533a\uff1b \u53bb\u6389\u6574\u4e2a\u5c5e\u6027\uff1b \u8fdb\u884c\u8d4b\u503c\uff080\u3001\u5e73\u5747\u503c\u3001\u4e2d\u4f4d\u6570\u7b49\u7b49\uff09\u3002 \u7528 DataFrame \u7684 dropna() \uff0c drop() \uff0c\u548c fillna() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\uff1a housing.dropna(subset=[\"total_bedrooms\"]) # \u9009\u98791 housing.drop(\"total_bedrooms\", axis=1) # \u9009\u98792 median = housing[\"total_bedrooms\"].median() housing[\"total_bedrooms\"].fillna(median) # \u9009\u98793 \u5982\u679c\u9009\u62e9\u9009\u9879 3\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u8bad\u7ec3\u96c6\u7684\u4e2d\u4f4d\u6570\uff0c\u7528\u4e2d\u4f4d\u6570\u586b\u5145\u8bad\u7ec3\u96c6\u7684\u7f3a\u5931\u503c\uff0c\u4e0d\u8981\u5fd8\u8bb0\u4fdd\u5b58\u8be5\u4e2d\u4f4d\u6570\u3002\u540e\u9762\u7528\u6d4b\u8bd5\u96c6\u8bc4\u4f30\u7cfb\u7edf\u65f6\uff0c\u9700\u8981\u66ff\u6362\u6d4b\u8bd5\u96c6\u4e2d\u7684\u7f3a\u5931\u503c\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u5b9e\u65f6\u66ff\u6362\u65b0\u6570\u636e\u4e2d\u7684\u7f3a\u5931\u503c\u3002 Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u7c7b\u6765\u5904\u7406\u7f3a\u5931\u503c\uff1a Imputer \u3002\u4e0b\u9762\u662f\u5176\u4f7f\u7528\u65b9\u6cd5\uff1a\u9996\u5148\uff0c\u9700\u8981\u521b\u5efa\u4e00\u4e2a Imputer \u5b9e\u4f8b\uff0c\u6307\u5b9a\u7528\u67d0\u5c5e\u6027\u7684\u4e2d\u4f4d\u6570\u6765\u66ff\u6362\u8be5\u5c5e\u6027\u6240\u6709\u7684\u7f3a\u5931\u503c\uff1a from sklearn.preprocessing import Imputer imputer = Imputer(strategy=\"median\") \u56e0\u4e3a\u53ea\u6709\u6570\u503c\u5c5e\u6027\u624d\u80fd\u7b97\u51fa\u4e2d\u4f4d\u6570\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4efd\u4e0d\u5305\u62ec\u6587\u672c\u5c5e\u6027 ocean_proximity \u7684\u6570\u636e\u526f\u672c\uff1a housing_num = housing.drop(\"ocean_proximity\", axis=1) \u73b0\u5728\uff0c\u5c31\u53ef\u4ee5\u7528 fit() \u65b9\u6cd5\u5c06 imputer \u5b9e\u4f8b\u62df\u5408\u5230\u8bad\u7ec3\u6570\u636e\uff1a imputer.fit(housing_num) imputer \u8ba1\u7b97\u51fa\u4e86\u6bcf\u4e2a\u5c5e\u6027\u7684\u4e2d\u4f4d\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u4e86\u5b9e\u4f8b\u53d8\u91cf statistics_ \u4e2d\u3002\u867d\u7136\u6b64\u65f6\u53ea\u6709\u5c5e\u6027 total_bedrooms \u5b58\u5728\u7f3a\u5931\u503c\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u786e\u5b9a\u5728\u4ee5\u540e\u7684\u65b0\u7684\u6570\u636e\u4e2d\u4f1a\u4e0d\u4f1a\u6709\u5176\u4ed6\u5c5e\u6027\u4e5f\u5b58\u5728\u7f3a\u5931\u503c\uff0c\u6240\u4ee5\u5b89\u5168\u7684\u505a\u6cd5\u662f\u5c06 imputer \u5e94\u7528\u5230\u6bcf\u4e2a\u6570\u503c\uff1a >>> imputer.statistics_ array([ -118.51 , 34.26 , 29. , 2119. , 433. , 1164. , 408. , 3.5414]) >>> housing_num.median().values array([ -118.51 , 34.26 , 29. , 2119. , 433. , 1164. , 408. , 3.5414]) \u73b0\u5728\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u201c\u8bad\u7ec3\u8fc7\u7684\u201d imputer \u6765\u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884c\u8f6c\u6362\uff0c\u5c06\u7f3a\u5931\u503c\u66ff\u6362\u4e3a\u4e2d\u4f4d\u6570\uff1a X = imputer.transform(housing_num) \u7ed3\u679c\u662f\u4e00\u4e2a\u5305\u542b\u8f6c\u6362\u540e\u7279\u5f81\u7684\u666e\u901a\u7684 Numpy \u6570\u7ec4\u3002\u5982\u679c\u4f60\u60f3\u5c06\u5176\u653e\u56de\u5230 Pandas DataFrame \u4e2d\uff0c\u4e5f\u5f88\u7b80\u5355\uff1a housing_tr = pd.DataFrame(X, columns=housing_num.columns) Scikit-Learn \u8bbe\u8ba1 Scikit-Learn \u8bbe\u8ba1\u7684 API \u8bbe\u8ba1\u7684\u975e\u5e38\u597d\u3002\u5b83\u7684\u4e3b\u8981\u8bbe\u8ba1\u539f\u5219\u662f\uff1a \u4e00\u81f4\u6027\uff1a\u6240\u6709\u5bf9\u8c61\u7684\u63a5\u53e3\u4e00\u81f4\u4e14\u7b80\u5355\uff1a \u4f30\u8ba1\u5668\uff08estimator\uff09\u3002\u4efb\u4f55\u53ef\u4ee5\u57fa\u4e8e\u6570\u636e\u96c6\u5bf9\u4e00\u4e9b\u53c2\u6570\u8fdb\u884c\u4f30\u8ba1\u7684\u5bf9\u8c61\u90fd\u88ab\u79f0\u4e3a\u4f30\u8ba1\u5668\uff08\u6bd4\u5982\uff0c imputer \u5c31\u662f\u4e2a\u4f30\u8ba1\u5668\uff09\u3002\u4f30\u8ba1\u672c\u8eab\u662f\u901a\u8fc7 fit() \u65b9\u6cd5\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u6570\u636e\u96c6\u4f5c\u4e3a\u53c2\u6570\uff08\u5bf9\u4e8e\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u9700\u8981\u4e24\u4e2a\u6570\u636e\u96c6\uff1b\u7b2c\u4e8c\u4e2a\u6570\u636e\u96c6\u5305\u542b\u6807\u7b7e\uff09\u3002\u4efb\u4f55\u5176\u5b83\u7528\u6765\u6307\u5bfc\u4f30\u8ba1\u8fc7\u7a0b\u7684\u53c2\u6570\u90fd\u88ab\u5f53\u505a\u8d85\u53c2\u6570\uff08\u6bd4\u5982 imputer \u7684 strategy \uff09\uff0c\u5e76\u4e14\u8d85\u53c2\u6570\u8981\u88ab\u8bbe\u7f6e\u6210\u5b9e\u4f8b\u53d8\u91cf\uff08\u901a\u5e38\u901a\u8fc7\u6784\u9020\u5668\u53c2\u6570\u8bbe\u7f6e\uff09\u3002 \u8f6c\u6362\u5668\uff08transformer\uff09\u3002\u4e00\u4e9b\u4f30\u8ba1\u5668\uff08\u6bd4\u5982 imputer \uff09\u4e5f\u53ef\u4ee5\u8f6c\u6362\u6570\u636e\u96c6\uff0c\u8fd9\u4e9b\u4f30\u8ba1\u5668\u88ab\u79f0\u4e3a\u8f6c\u6362\u5668\u3002API\u4e5f\u662f\u76f8\u5f53\u7b80\u5355\uff1a\u8f6c\u6362\u662f\u901a\u8fc7 transform() \u65b9\u6cd5\uff0c\u88ab\u8f6c\u6362\u7684\u6570\u636e\u96c6\u4f5c\u4e3a\u53c2\u6570\u3002\u8fd4\u56de\u7684\u662f\u7ecf\u8fc7\u8f6c\u6362\u7684\u6570\u636e\u96c6\u3002\u8f6c\u6362\u8fc7\u7a0b\u4f9d\u8d56\u5b66\u4e60\u5230\u7684\u53c2\u6570\uff0c\u6bd4\u5982 imputer \u7684\u4f8b\u5b50\u3002\u6240\u6709\u7684\u8f6c\u6362\u90fd\u6709\u4e00\u4e2a\u4fbf\u6377\u7684\u65b9\u6cd5 fit_transform() \uff0c\u7b49\u540c\u4e8e\u8c03\u7528 fit() \u518d transform() \uff08\u4f46\u6709\u65f6 fit_transform() \u7ecf\u8fc7\u4f18\u5316\uff0c\u8fd0\u884c\u7684\u66f4\u5feb\uff09\u3002 \u9884\u6d4b\u5668\uff08predictor\uff09\u3002\u6700\u540e\uff0c\u4e00\u4e9b\u4f30\u8ba1\u5668\u53ef\u4ee5\u6839\u636e\u7ed9\u51fa\u7684\u6570\u636e\u96c6\u505a\u9884\u6d4b\uff0c\u8fd9\u4e9b\u4f30\u8ba1\u5668\u79f0\u4e3a\u9884\u6d4b\u5668\u3002\u4f8b\u5982\uff0c\u4e0a\u4e00\u7ae0\u7684 LinearRegression \u6a21\u578b\u5c31\u662f\u4e00\u4e2a\u9884\u6d4b\u5668\uff1a\u5b83\u6839\u636e\u4e00\u4e2a\u56fd\u5bb6\u7684\u4eba\u5747 GDP \u9884\u6d4b\u751f\u6d3b\u6ee1\u610f\u5ea6\u3002\u9884\u6d4b\u5668\u6709\u4e00\u4e2a predict() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u7528\u65b0\u5b9e\u4f8b\u7684\u6570\u636e\u96c6\u505a\u51fa\u76f8\u5e94\u7684\u9884\u6d4b\u3002\u9884\u6d4b\u5668\u8fd8\u6709\u4e00\u4e2a score() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u6839\u636e\u6d4b\u8bd5\u96c6\uff08\u548c\u76f8\u5e94\u7684\u6807\u7b7e\uff0c\u5982\u679c\u662f\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u7684\u8bdd\uff09\u5bf9\u9884\u6d4b\u8fdb\u884c\u8861\u5668\u3002 \u53ef\u68c0\u9a8c\u3002\u6240\u6709\u4f30\u8ba1\u5668\u7684\u8d85\u53c2\u6570\u90fd\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f8b\u7684public\u53d8\u91cf\u76f4\u63a5\u8bbf\u95ee\uff08\u6bd4\u5982\uff0c imputer.strategy \uff09\uff0c\u5e76\u4e14\u6240\u6709\u4f30\u8ba1\u5668\u5b66\u4e60\u5230\u7684\u53c2\u6570\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u5b9e\u4f8b\u53d8\u91cf\u540d\u540e\u52a0\u4e0b\u5212\u7ebf\u6765\u8bbf\u95ee\uff08\u6bd4\u5982\uff0c imputer.statistics_ \uff09\u3002 \u7c7b\u4e0d\u53ef\u6269\u6563\u3002\u6570\u636e\u96c6\u88ab\u8868\u793a\u6210 NumPy \u6570\u7ec4\u6216 SciPy \u7a00\u758f\u77e9\u9635\uff0c\u800c\u4e0d\u662f\u81ea\u5236\u7684\u7c7b\u3002\u8d85\u53c2\u6570\u53ea\u662f\u666e\u901a\u7684 Python \u5b57\u7b26\u4e32\u6216\u6570\u5b57\u3002 \u53ef\u7ec4\u5408\u3002\u5c3d\u53ef\u80fd\u4f7f\u7528\u73b0\u5b58\u7684\u6a21\u5757\u3002\u4f8b\u5982\uff0c\u7528\u4efb\u610f\u7684\u8f6c\u6362\u5668\u5e8f\u5217\u52a0\u4e0a\u4e00\u4e2a\u4f30\u8ba1\u5668\uff0c\u5c31\u53ef\u4ee5\u505a\u6210\u4e00\u4e2a\u6d41\u6c34\u7ebf\uff0c\u540e\u9762\u4f1a\u770b\u5230\u4f8b\u5b50\u3002 \u5408\u7406\u7684\u9ed8\u8ba4\u503c\u3002Scikit-Learn \u7ed9\u5927\u591a\u6570\u53c2\u6570\u63d0\u4f9b\u4e86\u5408\u7406\u7684\u9ed8\u8ba4\u503c\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u521b\u5efa\u4e00\u4e2a\u7cfb\u7edf\u3002","title":"\u6570\u636e\u6e05\u6d17"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_18","text":"\u524d\u9762\uff0c\u6211\u4eec\u4e22\u5f03\u4e86\u7c7b\u522b\u5c5e\u6027 ocean_proximity \uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u6587\u672c\u5c5e\u6027\uff0c\u4e0d\u80fd\u8ba1\u7b97\u51fa\u4e2d\u4f4d\u6570\u3002\u5927\u591a\u6570\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u8ddf\u559c\u6b22\u548c\u6570\u5b57\u6253\u4ea4\u9053\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u628a\u8fd9\u4e9b\u6587\u672c\u6807\u7b7e\u8f6c\u6362\u4e3a\u6570\u5b57\u3002 Scikit-Learn \u4e3a\u8fd9\u4e2a\u4efb\u52a1\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f6c\u6362\u5668 LabelEncoder \uff1a >>> from sklearn.preprocessing import LabelEncoder >>> encoder = LabelEncoder() >>> housing_cat = housing[\"ocean_proximity\"] >>> housing_cat_encoded = encoder.fit_transform(housing_cat) >>> housing_cat_encoded array([1, 1, 4, ..., 1, 0, 3]) \u8bd1\u6ce8: \u5728\u539f\u4e66\u4e2d\u4f7f\u7528 LabelEncoder \u8f6c\u6362\u5668\u6765\u8f6c\u6362\u6587\u672c\u7279\u5f81\u5217\u7684\u65b9\u5f0f\u662f\u9519\u8bef\u7684\uff0c\u8be5\u8f6c\u6362\u5668\u53ea\u80fd\u7528\u6765\u8f6c\u6362\u6807\u7b7e\uff08\u6b63\u5982\u5176\u540d\uff09\u3002\u5728\u8fd9\u91cc\u4f7f\u7528 LabelEncoder \u6ca1\u6709\u51fa\u9519\u7684\u539f\u56e0\u662f\u8be5\u6570\u636e\u53ea\u6709\u4e00\u5217\u6587\u672c\u7279\u5f81\u503c\uff0c\u5728\u6709\u591a\u4e2a\u6587\u672c\u7279\u5f81\u5217\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u9519\u3002\u5e94\u4f7f\u7528 factorize() \u65b9\u6cd5\u6765\u8fdb\u884c\u64cd\u4f5c\uff1a python housing_cat_encoded, housing_categories = housing_cat.factorize() housing_cat_encoded[:10] \u597d\u4e86\u4e00\u4e9b\uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55 ML \u7b97\u6cd5\u91cc\u7528\u8fd9\u4e2a\u6570\u503c\u6570\u636e\u4e86\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6620\u5c04\u8868\uff0c\u7f16\u7801\u5668\u662f\u901a\u8fc7\u5c5e\u6027 classes_ \u6765\u5b66\u4e60\u7684\uff08 <1H OCEAN \u88ab\u6620\u5c04\u4e3a 0\uff0c INLAND \u88ab\u6620\u5c04\u4e3a 1\uff0c\u7b49\u7b49\uff09\uff1a >>> print(encoder.classes_) ['<1H OCEAN' 'INLAND' 'ISLAND' 'NEAR BAY' 'NEAR OCEAN'] \u8fd9\u79cd\u505a\u6cd5\u7684\u95ee\u9898\u662f\uff0cML \u7b97\u6cd5\u4f1a\u8ba4\u4e3a\u4e24\u4e2a\u4e34\u8fd1\u7684\u503c\u6bd4\u4e24\u4e2a\u758f\u8fdc\u7684\u503c\u8981\u66f4\u76f8\u4f3c\u3002\u663e\u7136\u8fd9\u6837\u4e0d\u5bf9\uff08\u6bd4\u5982\uff0c\u5206\u7c7b 0 \u548c 4 \u6bd4 0 \u548c 1 \u66f4\u76f8\u4f3c\uff09\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u7ed9\u6bcf\u4e2a\u5206\u7c7b\u521b\u5efa\u4e00\u4e2a\u4e8c\u5143\u5c5e\u6027\uff1a\u5f53\u5206\u7c7b\u662f <1H OCEAN \uff0c\u8be5\u5c5e\u6027\u4e3a 1\uff08\u5426\u5219\u4e3a 0\uff09\uff0c\u5f53\u5206\u7c7b\u662f INLAND \uff0c\u53e6\u4e00\u4e2a\u5c5e\u6027\u7b49\u4e8e 1\uff08\u5426\u5219\u4e3a 0\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u79f0\u4f5c\u72ec\u70ed\u7f16\u7801\uff08One-Hot Encoding\uff09\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\u4f1a\u7b49\u4e8e 1\uff08\u70ed\uff09\uff0c\u5176\u4f59\u4f1a\u662f 0\uff08\u51b7\uff09\u3002 Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7f16\u7801\u5668 OneHotEncoder \uff0c\u7528\u4e8e\u5c06\u6574\u6570\u5206\u7c7b\u503c\u8f6c\u53d8\u4e3a\u72ec\u70ed\u5411\u91cf\u3002\u6ce8\u610f fit_transform() \u7528\u4e8e 2D \u6570\u7ec4\uff0c\u800c housing_cat_encoded \u662f\u4e00\u4e2a 1D \u6570\u7ec4\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u5176\u53d8\u5f62\uff1a >>> from sklearn.preprocessing import OneHotEncoder >>> encoder = OneHotEncoder() >>> housing_cat_1hot = encoder.fit_transform(housing_cat_encoded.reshape(-1,1)) >>> housing_cat_1hot <16513x5 sparse matrix of type '<class 'numpy.float64'>' with 16513 stored elements in Compressed Sparse Row format> \u6ce8\u610f\u8f93\u51fa\u7ed3\u679c\u662f\u4e00\u4e2a SciPy \u7a00\u758f\u77e9\u9635\uff0c\u800c\u4e0d\u662f NumPy \u6570\u7ec4\u3002\u5f53\u7c7b\u522b\u5c5e\u6027\u6709\u6570\u5343\u4e2a\u5206\u7c7b\u65f6\uff0c\u8fd9\u6837\u975e\u5e38\u6709\u7528\u3002\u7ecf\u8fc7\u72ec\u70ed\u7f16\u7801\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6709\u6570\u5343\u5217\u7684\u77e9\u9635\uff0c\u8fd9\u4e2a\u77e9\u9635\u6bcf\u884c\u53ea\u6709\u4e00\u4e2a 1\uff0c\u5176\u4f59\u90fd\u662f 0\u3002\u4f7f\u7528\u5927\u91cf\u5185\u5b58\u6765\u5b58\u50a8\u8fd9\u4e9b 0 \u975e\u5e38\u6d6a\u8d39\uff0c\u6240\u4ee5\u7a00\u758f\u77e9\u9635\u53ea\u5b58\u50a8\u975e\u96f6\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u4f60\u53ef\u4ee5\u50cf\u4e00\u4e2a 2D \u6570\u636e\u90a3\u6837\u8fdb\u884c\u4f7f\u7528\uff0c\u4f46\u662f\u5982\u679c\u4f60\u771f\u7684\u60f3\u5c06\u5176\u8f6c\u53d8\u6210\u4e00\u4e2a\uff08\u5bc6\u96c6\u7684\uff09NumPy \u6570\u7ec4\uff0c\u53ea\u9700\u8c03\u7528 toarray() \u65b9\u6cd5\uff1a >>> housing_cat_1hot.toarray() array([[ 0., 1., 0., 0., 0.], [ 0., 1., 0., 0., 0.], [ 0., 0., 0., 0., 1.], ..., [ 0., 1., 0., 0., 0.], [ 1., 0., 0., 0., 0.], [ 0., 0., 0., 1., 0.]]) \u4f7f\u7528\u7c7b LabelBinarizer \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u6b65\u6267\u884c\u8fd9\u4e24\u4e2a\u8f6c\u6362\uff08\u4ece\u6587\u672c\u5206\u7c7b\u5230\u6574\u6570\u5206\u7c7b\uff0c\u518d\u4ece\u6574\u6570\u5206\u7c7b\u5230\u72ec\u70ed\u5411\u91cf\uff09\uff1a >>> from sklearn.preprocessing import LabelBinarizer >>> encoder = LabelBinarizer() >>> housing_cat_1hot = encoder.fit_transform(housing_cat) >>> housing_cat_1hot array([[0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 1], ..., [0, 1, 0, 0, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1, 0]]) \u6ce8\u610f\u9ed8\u8ba4\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5bc6\u96c6 NumPy \u6570\u7ec4\u3002\u5411\u6784\u9020\u5668 LabelBinarizer \u4f20\u9012 sparse_output=True \uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7a00\u758f\u77e9\u9635\u3002 \u8bd1\u6ce8: \u5728\u539f\u4e66\u4e2d\u4f7f\u7528 LabelBinarizer \u7684\u65b9\u5f0f\u4e5f\u662f\u9519\u8bef\u7684\uff0c\u8be5\u7c7b\u4e5f\u5e94\u7528\u4e8e\u6807\u7b7e\u5217\u7684\u8f6c\u6362\u3002\u6b63\u786e\u505a\u6cd5\u662f\u4f7f\u7528sklearn\u5373\u5c06\u63d0\u4f9b\u7684 CategoricalEncoder \u7c7b\u3002\u5982\u679c\u5728\u4f60\u9605\u8bfb\u6b64\u6587\u65f6sklearn\u4e2d\u5c1a\u672a\u63d0\u4f9b\u6b64\u7c7b\uff0c\u7528\u5982\u4e0b\u65b9\u5f0f\u4ee3\u66ff\uff1a\uff08\u6765\u81ea Pull Request #9151\uff09 ```python","title":"\u5904\u7406\u6587\u672c\u548c\u7c7b\u522b\u5c5e\u6027"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#definition-of-the-categoricalencoder-class-copied-from-pr-9151","text":"","title":"Definition of the CategoricalEncoder class, copied from PR #9151."},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#just-run-this-cell-or-copy-it-to-your-code-do-not-try-to-understand-it-yet","text":"from sklearn.base import BaseEstimator, TransformerMixin from sklearn.utils import check_array from sklearn.preprocessing import LabelEncoder from scipy import sparse class CategoricalEncoder(BaseEstimator, TransformerMixin): \"\"\"Encode categorical features as a numeric array. The input to this transformer should be a matrix of integers or strings, denoting the values taken on by categorical (discrete) features. The features can be encoded using a one-hot aka one-of-K scheme ( encoding='onehot' , the default) or converted to ordinal integers ( encoding='ordinal' ). This encoding is needed for feeding categorical data to many scikit-learn estimators, notably linear models and SVMs with the standard kernels. Read more in the :ref: User Guide <preprocessing_categorical_features> . Parameters ---------- encoding : str, 'onehot', 'onehot-dense' or 'ordinal' The type of encoding to use (default is 'onehot'): - 'onehot': encode the features using a one-hot aka one-of-K scheme (or also called 'dummy' encoding). This creates a binary column for each category and returns a sparse matrix. - 'onehot-dense': the same as 'onehot' but returns a dense array instead of a sparse matrix. - 'ordinal': encode the features as ordinal integers. This results in a single column of integers (0 to n_categories - 1) per feature. categories : 'auto' or a list of lists/arrays of values. Categories (unique values) per feature: - 'auto' : Determine categories automatically from the training data. - list : categories[i] holds the categories expected in the ith column. The passed categories are sorted before encoding the data (used categories can be found in the categories_ attribute). dtype : number type, default np.float64 Desired dtype of output. handle_unknown : 'error' (default) or 'ignore' Whether to raise an error or ignore if a unknown categorical feature is present during transform (default is to raise). When this is parameter is set to 'ignore' and an unknown category is encountered during transform, the resulting one-hot encoded columns for this feature will be all zeros. Ignoring unknown categories is not supported for encoding='ordinal' . Attributes ---------- categories_ : list of arrays The categories of each feature determined during fitting. When categories were specified manually, this holds the sorted categories (in order corresponding with output of transform ). Examples -------- Given a dataset with three features and two samples, we let the encoder find the maximum value per feature and transform the data to a binary one-hot encoding. >>> from sklearn.preprocessing import CategoricalEncoder >>> enc = CategoricalEncoder(handle_unknown='ignore') >>> enc.fit([[0, 0, 3], [1, 1, 0], [0, 2, 1], [1, 0, 2]]) ... # doctest: +ELLIPSIS CategoricalEncoder(categories='auto', dtype=<... 'numpy.float64'>, encoding='onehot', handle_unknown='ignore') >>> enc.transform([[0, 1, 1], [1, 0, 4]]).toarray() array([[ 1., 0., 0., 1., 0., 0., 1., 0., 0.], [ 0., 1., 1., 0., 0., 0., 0., 0., 0.]]) See also -------- sklearn.preprocessing.OneHotEncoder : performs a one-hot encoding of integer ordinal features. The OneHotEncoder assumes that input features take on values in the range [0, max(feature)] instead of using the unique values. sklearn.feature_extraction.DictVectorizer : performs a one-hot encoding of dictionary items (also handles string-valued features). sklearn.feature_extraction.FeatureHasher : performs an approximate one-hot encoding of dictionary items or strings. \"\"\" def __init__(self, encoding='onehot', categories='auto', dtype=np.float64, handle_unknown='error'): self.encoding = encoding self.categories = categories self.dtype = dtype self.handle_unknown = handle_unknown def fit(self, X, y=None): \"\"\"Fit the CategoricalEncoder to X. Parameters ---------- X : array-like, shape [n_samples, n_feature] The data to determine the categories of each feature. Returns ------- self \"\"\" if self.encoding not in ['onehot', 'onehot-dense', 'ordinal']: template = (\"encoding should be either 'onehot', 'onehot-dense' \" \"or 'ordinal', got %s\") raise ValueError(template % self.handle_unknown) if self.handle_unknown not in ['error', 'ignore']: template = (\"handle_unknown should be either 'error' or \" \"'ignore', got %s\") raise ValueError(template % self.handle_unknown) if self.encoding == 'ordinal' and self.handle_unknown == 'ignore': raise ValueError(\"handle_unknown='ignore' is not supported for\" \" encoding='ordinal'\") X = check_array(X, dtype=np.object, accept_sparse='csc', copy=True) n_samples, n_features = X.shape self._label_encoders_ = [LabelEncoder() for _ in range(n_features)] for i in range(n_features): le = self._label_encoders_[i] Xi = X[:, i] if self.categories == 'auto': le.fit(Xi) else: valid_mask = np.in1d(Xi, self.categories[i]) if not np.all(valid_mask): if self.handle_unknown == 'error': diff = np.unique(Xi[~valid_mask]) msg = (\"Found unknown categories {0} in column {1}\" \" during fit\".format(diff, i)) raise ValueError(msg) le.classes_ = np.array(np.sort(self.categories[i])) self.categories_ = [le.classes_ for le in self._label_encoders_] return self def transform(self, X): \"\"\"Transform X using one-hot encoding. Parameters ---------- X : array-like, shape [n_samples, n_features] The data to encode. Returns ------- X_out : sparse matrix or a 2-d array Transformed input. \"\"\" X = check_array(X, accept_sparse='csc', dtype=np.object, copy=True) n_samples, n_features = X.shape X_int = np.zeros_like(X, dtype=np.int) X_mask = np.ones_like(X, dtype=np.bool) for i in range(n_features): valid_mask = np.in1d(X[:, i], self.categories_[i]) if not np.all(valid_mask): if self.handle_unknown == 'error': diff = np.unique(X[~valid_mask, i]) msg = (\"Found unknown categories {0} in column {1}\" \" during transform\".format(diff, i)) raise ValueError(msg) else: # Set the problematic rows to an acceptable value and # continue `The rows are marked `X_mask` and will be # removed later. X_mask[:, i] = valid_mask X[:, i][~valid_mask] = self.categories_[i][0] X_int[:, i] = self._label_encoders_[i].transform(X[:, i]) if self.encoding == 'ordinal': return X_int.astype(self.dtype, copy=False) mask = X_mask.ravel() n_values = [cats.shape[0] for cats in self.categories_] n_values = np.array([0] + n_values) indices = np.cumsum(n_values) column_indices = (X_int + indices[:-1]).ravel()[mask] row_indices = np.repeat(np.arange(n_samples, dtype=np.int32), n_features)[mask] data = np.ones(n_samples * n_features)[mask] out = sparse.csc_matrix((data, (row_indices, column_indices)), shape=(n_samples, indices[-1]), dtype=self.dtype).tocsr() if self.encoding == 'onehot-dense': return out.toarray() else: return out ``` \u8f6c\u6362\u65b9\u6cd5\uff1a ```python","title":"Just run this cell, or copy it to your code, do not try to understand it (yet)."},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#from-sklearnpreprocessing-import-categoricalencoder-in-future-versions-of-scikit-learn","text":"cat_encoder = CategoricalEncoder() housing_cat_reshaped = housing_cat.values.reshape(-1, 1) housing_cat_1hot = cat_encoder.fit_transform(housing_cat_reshaped) housing_cat_1hot ```","title":"from sklearn.preprocessing import CategoricalEncoder # in future versions of Scikit-Learn"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_19","text":"\u5c3d\u7ba1 Scikit-Learn \u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u7528\u7684\u8f6c\u6362\u5668\uff0c\u4f60\u8fd8\u662f\u9700\u8981\u81ea\u5df1\u52a8\u624b\u5199\u8f6c\u6362\u5668\u6267\u884c\u4efb\u52a1\uff0c\u6bd4\u5982\u81ea\u5b9a\u4e49\u7684\u6e05\u7406\u64cd\u4f5c\uff0c\u6216\u5c5e\u6027\u7ec4\u5408\u3002\u4f60\u9700\u8981\u8ba9\u81ea\u5236\u7684\u8f6c\u6362\u5668\u4e0e Scikit-Learn \u7ec4\u4ef6\uff08\u6bd4\u5982\u6d41\u6c34\u7ebf\uff09\u65e0\u7f1d\u8854\u63a5\u5de5\u4f5c\uff0c\u56e0\u4e3a Scikit-Learn \u662f\u4f9d\u8d56\u9e2d\u5b50\u7c7b\u578b\u7684\uff08\u800c\u4e0d\u662f\u7ee7\u627f\uff09\uff0c\u4f60\u6240\u9700\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u7c7b\u5e76\u6267\u884c\u4e09\u4e2a\u65b9\u6cd5\uff1a fit() \uff08\u8fd4\u56de self \uff09\uff0c transform() \uff0c\u548c fit_transform() \u3002\u901a\u8fc7\u6dfb\u52a0 TransformerMixin \u4f5c\u4e3a\u57fa\u7c7b\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5f97\u5230\u6700\u540e\u4e00\u4e2a\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u6dfb\u52a0 BaseEstimator \u4f5c\u4e3a\u57fa\u7c7b\uff08\u4e14\u6784\u9020\u5668\u4e2d\u907f\u514d\u4f7f\u7528 *args \u548c **kargs \uff09\uff0c\u4f60\u5c31\u80fd\u5f97\u5230\u4e24\u4e2a\u989d\u5916\u7684\u65b9\u6cd5\uff08 get_params() \u548c set_params() \uff09\uff0c\u4e8c\u8005\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u8d85\u53c2\u6570\u81ea\u52a8\u5fae\u8c03\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5c0f\u8f6c\u6362\u5668\u7c7b\u6dfb\u52a0\u4e86\u4e0a\u9762\u8ba8\u8bba\u7684\u5c5e\u6027\uff1a from sklearn.base import BaseEstimator, TransformerMixin rooms_ix, bedrooms_ix, population_ix, household_ix = 3, 4, 5, 6 class CombinedAttributesAdder(BaseEstimator, TransformerMixin): def __init__(self, add_bedrooms_per_room = True): # no *args or **kargs self.add_bedrooms_per_room = add_bedrooms_per_room def fit(self, X, y=None): return self # nothing else to do def transform(self, X, y=None): rooms_per_household = X[:, rooms_ix] / X[:, household_ix] population_per_household = X[:, population_ix] / X[:, household_ix] if self.add_bedrooms_per_room: bedrooms_per_room = X[:, bedrooms_ix] / X[:, rooms_ix] return np.c_[X, rooms_per_household, population_per_household, bedrooms_per_room] else: return np.c_[X, rooms_per_household, population_per_household] attr_adder = CombinedAttributesAdder(add_bedrooms_per_room=False) housing_extra_attribs = attr_adder.transform(housing.values) \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8f6c\u6362\u5668\u6709\u4e00\u4e2a\u8d85\u53c2\u6570 add_bedrooms_per_room \uff0c\u9ed8\u8ba4\u8bbe\u4e3a True \uff08\u63d0\u4f9b\u4e00\u4e2a\u5408\u7406\u7684\u9ed8\u8ba4\u503c\u5f88\u6709\u5e2e\u52a9\uff09\u3002\u8fd9\u4e2a\u8d85\u53c2\u6570\u53ef\u4ee5\u8ba9\u4f60\u65b9\u4fbf\u5730\u53d1\u73b0\u6dfb\u52a0\u4e86\u8fd9\u4e2a\u5c5e\u6027\u662f\u5426\u5bf9\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6709\u5e2e\u52a9\u3002\u66f4\u4e00\u822c\u5730\uff0c\u4f60\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u4e0d\u80fd\u5b8c\u5168\u786e\u4fdd\u7684\u6570\u636e\u51c6\u5907\u6b65\u9aa4\u6dfb\u52a0\u4e00\u4e2a\u8d85\u53c2\u6570\u3002\u6570\u636e\u51c6\u5907\u6b65\u9aa4\u8d8a\u81ea\u52a8\u5316\uff0c\u53ef\u4ee5\u81ea\u52a8\u5316\u7684\u64cd\u4f5c\u7ec4\u5408\u5c31\u8d8a\u591a\uff0c\u8d8a\u5bb9\u6613\u53d1\u73b0\u66f4\u597d\u7528\u7684\u7ec4\u5408\uff08\u5e76\u80fd\u8282\u7701\u5927\u91cf\u65f6\u95f4\uff09\u3002","title":"\u81ea\u5b9a\u4e49\u8f6c\u6362\u5668"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_20","text":"\u6570\u636e\u8981\u505a\u7684\u6700\u91cd\u8981\u7684\u8f6c\u6362\u4e4b\u4e00\u662f\u7279\u5f81\u7f29\u653e\u3002\u9664\u4e86\u4e2a\u522b\u60c5\u51b5\uff0c\u5f53\u8f93\u5165\u7684\u6570\u503c\u5c5e\u6027\u91cf\u5ea6\u4e0d\u540c\u65f6\uff0c\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u6027\u80fd\u90fd\u4e0d\u4f1a\u597d\u3002\u8fd9\u4e2a\u89c4\u5f8b\u4e5f\u9002\u7528\u4e8e\u623f\u4ea7\u6570\u636e\uff1a\u603b\u623f\u95f4\u6570\u5206\u5e03\u8303\u56f4\u662f 6 \u5230 39320\uff0c\u800c\u6536\u5165\u4e2d\u4f4d\u6570\u53ea\u5206\u5e03\u5728 0 \u5230 15\u3002\u6ce8\u610f\u901a\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u9700\u8981\u5bf9\u76ee\u6807\u503c\u8fdb\u884c\u7f29\u653e\u3002 \u6709\u4e24\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u6240\u6709\u7684\u5c5e\u6027\u6709\u76f8\u540c\u7684\u91cf\u5ea6\uff1a\u7ebf\u6027\u51fd\u6570\u5f52\u4e00\u5316\uff08Min-Max scaling\uff09\u548c\u6807\u51c6\u5316\uff08standardization\uff09\u3002 \u7ebf\u6027\u51fd\u6570\u5f52\u4e00\u5316\uff08\u8bb8\u591a\u4eba\u79f0\u5176\u4e3a\u5f52\u4e00\u5316\uff08normalization\uff09\uff09\u5f88\u7b80\u5355\uff1a\u503c\u88ab\u8f6c\u53d8\u3001\u91cd\u65b0\u7f29\u653e\uff0c\u76f4\u5230\u8303\u56f4\u53d8\u6210 0 \u5230 1\u3002\u6211\u4eec\u901a\u8fc7\u51cf\u53bb\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u9664\u4ee5\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u503c\uff0c\u6765\u8fdb\u884c\u5f52\u4e00\u5316\u3002Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f6c\u6362\u5668 MinMaxScaler \u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002\u5b83\u6709\u4e00\u4e2a\u8d85\u53c2\u6570 feature_range \uff0c\u53ef\u4ee5\u8ba9\u4f60\u6539\u53d8\u8303\u56f4\uff0c\u5982\u679c\u4e0d\u5e0c\u671b\u8303\u56f4\u662f 0 \u5230 1\u3002 \u6807\u51c6\u5316\u5c31\u5f88\u4e0d\u540c\uff1a\u9996\u5148\u51cf\u53bb\u5e73\u5747\u503c\uff08\u6240\u4ee5\u6807\u51c6\u5316\u503c\u7684\u5e73\u5747\u503c\u603b\u662f 0\uff09\uff0c\u7136\u540e\u9664\u4ee5\u65b9\u5dee\uff0c\u4f7f\u5f97\u5230\u7684\u5206\u5e03\u5177\u6709\u5355\u4f4d\u65b9\u5dee\u3002\u4e0e\u5f52\u4e00\u5316\u4e0d\u540c\uff0c\u6807\u51c6\u5316\u4e0d\u4f1a\u9650\u5b9a\u503c\u5230\u67d0\u4e2a\u7279\u5b9a\u7684\u8303\u56f4\uff0c\u8fd9\u5bf9\u67d0\u4e9b\u7b97\u6cd5\u53ef\u80fd\u6784\u6210\u95ee\u9898\uff08\u6bd4\u5982\uff0c\u795e\u7ecf\u7f51\u7edc\u5e38\u9700\u8981\u8f93\u5165\u503c\u5f97\u8303\u56f4\u662f 0 \u5230 1\uff09\u3002\u4f46\u662f\uff0c\u6807\u51c6\u5316\u53d7\u5230\u5f02\u5e38\u503c\u7684\u5f71\u54cd\u5f88\u5c0f\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4e00\u4e2a\u8857\u533a\u7684\u6536\u5165\u4e2d\u4f4d\u6570\u7531\u4e8e\u67d0\u79cd\u9519\u8bef\u53d8\u6210\u4e86100\uff0c\u5f52\u4e00\u5316\u4f1a\u5c06\u5176\u5b83\u8303\u56f4\u662f 0 \u5230 15 \u7684\u503c\u53d8\u4e3a 0-0.15\uff0c\u4f46\u662f\u6807\u51c6\u5316\u4e0d\u4f1a\u53d7\u4ec0\u4e48\u5f71\u54cd\u3002Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f6c\u6362\u5668 StandardScaler \u6765\u8fdb\u884c\u6807\u51c6\u5316\u3002 \u8b66\u544a\uff1a\u4e0e\u6240\u6709\u7684\u8f6c\u6362\u4e00\u6837\uff0c\u7f29\u653e\u5668\u53ea\u80fd\u5411\u8bad\u7ec3\u96c6\u62df\u5408\uff0c\u800c\u4e0d\u662f\u5411\u5b8c\u6574\u7684\u6570\u636e\u96c6\uff08\u5305\u62ec\u6d4b\u8bd5\u96c6\uff09\u3002\u53ea\u6709\u8fd9\u6837\uff0c\u4f60\u624d\u80fd\u7528\u7f29\u653e\u5668\u8f6c\u6362\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\uff08\u548c\u65b0\u6570\u636e\uff09\u3002","title":"\u7279\u5f81\u7f29\u653e"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_21","text":"\u4f60\u5df2\u7ecf\u770b\u5230\uff0c\u5b58\u5728\u8bb8\u591a\u6570\u636e\u8f6c\u6362\u6b65\u9aa4\uff0c\u9700\u8981\u6309\u4e00\u5b9a\u7684\u987a\u5e8f\u6267\u884c\u3002\u5e78\u8fd0\u7684\u662f\uff0cScikit-Learn \u63d0\u4f9b\u4e86\u7c7b Pipeline \uff0c\u6765\u8fdb\u884c\u8fd9\u4e00\u7cfb\u5217\u7684\u8f6c\u6362\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6570\u503c\u5c5e\u6027\u7684\u5c0f\u6d41\u6c34\u7ebf\uff1a from sklearn.pipeline import Pipeline from sklearn.preprocessing import StandardScaler num_pipeline = Pipeline([ ('imputer', Imputer(strategy=\"median\")), ('attribs_adder', CombinedAttributesAdder()), ('std_scaler', StandardScaler()), ]) housing_num_tr = num_pipeline.fit_transform(housing_num) Pipeline \u6784\u9020\u5668\u9700\u8981\u4e00\u4e2a\u5b9a\u4e49\u6b65\u9aa4\u987a\u5e8f\u7684\u540d\u5b57/\u4f30\u8ba1\u5668\u5bf9\u7684\u5217\u8868\u3002\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u4f30\u8ba1\u5668\uff0c\u5176\u4f59\u90fd\u8981\u662f\u8f6c\u6362\u5668\uff08\u5373\uff0c\u5b83\u4eec\u90fd\u8981\u6709 fit_transform() \u65b9\u6cd5\uff09\u3002\u540d\u5b57\u53ef\u4ee5\u968f\u610f\u8d77\u3002 \u5f53\u4f60\u8c03\u7528\u6d41\u6c34\u7ebf\u7684 fit() \u65b9\u6cd5\uff0c\u5c31\u4f1a\u5bf9\u6240\u6709\u8f6c\u6362\u5668\u987a\u5e8f\u8c03\u7528 fit_transform() \u65b9\u6cd5\uff0c\u5c06\u6bcf\u6b21\u8c03\u7528\u7684\u8f93\u51fa\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u8c03\u7528\uff0c\u4e00\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u4f30\u8ba1\u5668\uff0c\u5b83\u53ea\u6267\u884c fit() \u65b9\u6cd5\u3002 \u6d41\u6c34\u7ebf\u66b4\u9732\u76f8\u540c\u7684\u65b9\u6cd5\u4f5c\u4e3a\u6700\u7ec8\u7684\u4f30\u8ba1\u5668\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6700\u540e\u7684\u4f30\u8ba1\u5668\u662f\u4e00\u4e2a StandardScaler \uff0c\u5b83\u662f\u4e00\u4e2a\u8f6c\u6362\u5668\uff0c\u56e0\u6b64\u8fd9\u4e2a\u6d41\u6c34\u7ebf\u6709\u4e00\u4e2a transform() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u987a\u5e8f\u5bf9\u6570\u636e\u505a\u6240\u6709\u8f6c\u6362\uff08\u5b83\u8fd8\u6709\u4e00\u4e2a fit_transform \u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\uff0c\u5c31\u4e0d\u5fc5\u5148\u8c03\u7528 fit() \u518d\u8fdb\u884c transform() \uff09\u3002 \u4f60\u73b0\u5728\u5c31\u6709\u4e86\u4e00\u4e2a\u5bf9\u6570\u503c\u7684\u6d41\u6c34\u7ebf\uff0c\u4f60\u8fd8\u9700\u8981\u5bf9\u5206\u7c7b\u503c\u5e94\u7528 LabelBinarizer \uff1a\u5982\u4f55\u5c06\u8fd9\u4e9b\u8f6c\u6362\u5199\u6210\u4e00\u4e2a\u6d41\u6c34\u7ebf\u5462\uff1fScikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7c7b FeatureUnion \u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002\u4f60\u7ed9\u5b83\u4e00\u5217\u8f6c\u6362\u5668\uff08\u53ef\u4ee5\u662f\u6240\u6709\u7684\u8f6c\u6362\u5668\uff09\uff0c\u5f53\u8c03\u7528\u5b83\u7684 transform() \u65b9\u6cd5\uff0c\u6bcf\u4e2a\u8f6c\u6362\u5668\u7684 transform() \u4f1a\u88ab\u5e76\u884c\u6267\u884c\uff0c\u7b49\u5f85\u8f93\u51fa\uff0c\u7136\u540e\u5c06\u8f93\u51fa\u5408\u5e76\u8d77\u6765\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\uff08\u5f53\u7136\uff0c\u8c03\u7528\u5b83\u7684 fit() \u65b9\u6cd5\u5c31\u4f1a\u8c03\u7528\u6bcf\u4e2a\u8f6c\u6362\u5668\u7684 fit() \uff09\u3002\u4e00\u4e2a\u5b8c\u6574\u7684\u5904\u7406\u6570\u503c\u548c\u7c7b\u522b\u5c5e\u6027\u7684\u6d41\u6c34\u7ebf\u5982\u4e0b\u6240\u793a\uff1a from sklearn.pipeline import FeatureUnion num_attribs = list(housing_num) cat_attribs = [\"ocean_proximity\"] num_pipeline = Pipeline([ ('selector', DataFrameSelector(num_attribs)), ('imputer', Imputer(strategy=\"median\")), ('attribs_adder', CombinedAttributesAdder()), ('std_scaler', StandardScaler()), ]) cat_pipeline = Pipeline([ ('selector', DataFrameSelector(cat_attribs)), ('label_binarizer', LabelBinarizer()), ]) full_pipeline = FeatureUnion(transformer_list=[ (\"num_pipeline\", num_pipeline), (\"cat_pipeline\", cat_pipeline), ]) \u8bd1\u6ce8: \u5982\u679c\u4f60\u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 cat_pipeline \u6d41\u6c34\u7ebf\u4f7f\u7528 LabelBinarizer \u8f6c\u6362\u5668\u4f1a\u5bfc\u81f4\u6267\u884c\u9519\u8bef\uff0c\u89e3\u51b3\u65b9\u6848\u662f\u7528\u4e0a\u6587\u63d0\u5230\u7684 CategoricalEncoder \u8f6c\u6362\u5668\u6765\u4ee3\u66ff\uff1a python cat_pipeline = Pipeline([ ('selector', DataFrameSelector(cat_attribs)), ('cat_encoder', CategoricalEncoder(encoding=\"onehot-dense\")), ]) \u4f60\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u8fd0\u884c\u6574\u4e2a\u6d41\u6c34\u7ebf\uff1a >>> housing_prepared = full_pipeline.fit_transform(housing) >>> housing_prepared array([[ 0.73225807, -0.67331551, 0.58426443, ..., 0. , 0. , 0. ], [-0.99102923, 1.63234656, -0.92655887, ..., 0. , 0. , 0. ], [...] >>> housing_prepared.shape (16513, 17) \u6bcf\u4e2a\u5b50\u6d41\u6c34\u7ebf\u90fd\u4ee5\u4e00\u4e2a\u9009\u62e9\u8f6c\u6362\u5668\u5f00\u59cb\uff1a\u901a\u8fc7\u9009\u62e9\u5bf9\u5e94\u7684\u5c5e\u6027\uff08\u6570\u503c\u6216\u5206\u7c7b\uff09\u3001\u4e22\u5f03\u5176\u5b83\u7684\uff0c\u6765\u8f6c\u6362\u6570\u636e\uff0c\u5e76\u5c06\u8f93\u51fa DataFrame \u8f6c\u53d8\u6210\u4e00\u4e2a NumPy \u6570\u7ec4\u3002Scikit-Learn \u6ca1\u6709\u5de5\u5177\u6765\u5904\u7406 Pandas DataFrame \uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u81ea\u5b9a\u4e49\u8f6c\u6362\u5668\u6765\u505a\u8fd9\u9879\u5de5\u4f5c\uff1a from sklearn.base import BaseEstimator, TransformerMixin class DataFrameSelector(BaseEstimator, TransformerMixin): def __init__(self, attribute_names): self.attribute_names = attribute_names def fit(self, X, y=None): return self def transform(self, X): return X[self.attribute_names].values","title":"\u8f6c\u6362\u6d41\u6c34\u7ebf"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_22","text":"\u53ef\u5230\u8fd9\u4e00\u6b65\u4e86\uff01\u4f60\u5728\u524d\u9762\u9650\u5b9a\u4e86\u95ee\u9898\u3001\u83b7\u5f97\u4e86\u6570\u636e\u3001\u63a2\u7d22\u4e86\u6570\u636e\u3001\u91c7\u6837\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u96c6\u3001\u5199\u4e86\u81ea\u52a8\u5316\u7684\u8f6c\u6362\u6d41\u6c34\u7ebf\u6765\u6e05\u7406\u548c\u4e3a\u7b97\u6cd5\u51c6\u5907\u6570\u636e\u3002\u73b0\u5728\uff0c\u4f60\u5df2\u7ecf\u51c6\u5907\u597d\u9009\u62e9\u5e76\u8bad\u7ec3\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u6a21\u578b\u4e86\u3002","title":"\u9009\u62e9\u5e76\u8bad\u7ec3\u6a21\u578b"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_23","text":"\u597d\u6d88\u606f\u662f\u57fa\u4e8e\u524d\u9762\u7684\u5de5\u4f5c\uff0c\u63a5\u4e0b\u6765\u8981\u505a\u7684\u6bd4\u4f60\u60f3\u7684\u8981\u7b80\u5355\u8bb8\u591a\u3002\u50cf\u524d\u4e00\u7ae0\u90a3\u6837\uff0c\u6211\u4eec\u5148\u6765\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff1a from sklearn.linear_model import LinearRegression lin_reg = LinearRegression() lin_reg.fit(housing_prepared, housing_labels) \u5b8c\u6bd5\uff01\u4f60\u73b0\u5728\u5c31\u6709\u4e86\u4e00\u4e2a\u53ef\u7528\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3002\u7528\u4e00\u4e9b\u8bad\u7ec3\u96c6\u4e2d\u7684\u5b9e\u4f8b\u505a\u4e0b\u9a8c\u8bc1\uff1a >>> some_data = housing.iloc[:5] >>> some_labels = housing_labels.iloc[:5] >>> some_data_prepared = full_pipeline.transform(some_data) >>> print(\"Predictions:\\t\", lin_reg.predict(some_data_prepared)) Predictions: [ 303104. 44800. 308928. 294208. 368704.] >>> print(\"Labels:\\t\\t\", list(some_labels)) Labels: [359400.0, 69700.0, 302100.0, 301300.0, 351900.0] \u884c\u7684\u901a\uff0c\u5c3d\u7ba1\u9884\u6d4b\u5e76\u4e0d\u600e\u4e48\u51c6\u786e\uff08\u6bd4\u5982\uff0c\u7b2c\u4e8c\u4e2a\u9884\u6d4b\u504f\u79bb\u4e86 50%\uff01\uff09\u3002\u8ba9\u6211\u4eec\u4f7f\u7528 Scikit-Learn \u7684 mean_squared_error \u51fd\u6570\uff0c\u7528\u5168\u90e8\u8bad\u7ec3\u96c6\u6765\u8ba1\u7b97\u4e0b\u8fd9\u4e2a\u56de\u5f52\u6a21\u578b\u7684 RMSE\uff1a >>> from sklearn.metrics import mean_squared_error >>> housing_predictions = lin_reg.predict(housing_prepared) >>> lin_mse = mean_squared_error(housing_labels, housing_predictions) >>> lin_rmse = np.sqrt(lin_mse) >>> lin_rmse 68628.413493824875 OK\uff0c\u6709\u603b\u6bd4\u6ca1\u6709\u5f3a\uff0c\u4f46\u663e\u7136\u7ed3\u679c\u5e76\u4e0d\u597d\uff1a\u5927\u591a\u6570\u8857\u533a\u7684 median_housing_values \u4f4d\u4e8e 120000 \u5230 265000 \u7f8e\u5143\u4e4b\u95f4\uff0c\u56e0\u6b64\u9884\u6d4b\u8bef\u5dee 68628 \u7f8e\u5143\u4e0d\u80fd\u8ba9\u4eba\u6ee1\u610f\u3002\u8fd9\u662f\u4e00\u4e2a\u6a21\u578b\u6b20\u62df\u5408\u8bad\u7ec3\u6570\u636e\u7684\u4f8b\u5b50\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u610f\u5473\u7740\u7279\u5f81\u6ca1\u6709\u63d0\u4f9b\u8db3\u591f\u591a\u7684\u4fe1\u606f\u6765\u505a\u51fa\u4e00\u4e2a\u597d\u7684\u9884\u6d4b\uff0c\u6216\u8005\u6a21\u578b\u5e76\u4e0d\u5f3a\u5927\u3002\u5c31\u50cf\u524d\u4e00\u7ae0\u770b\u5230\u7684\uff0c\u4fee\u590d\u6b20\u62df\u5408\u7684\u4e3b\u8981\u65b9\u6cd5\u662f\u9009\u62e9\u4e00\u4e2a\u66f4\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u7ed9\u8bad\u7ec3\u7b97\u6cd5\u63d0\u4f9b\u66f4\u597d\u7684\u7279\u5f81\uff0c\u6216\u53bb\u6389\u6a21\u578b\u4e0a\u7684\u9650\u5236\u3002\u8fd9\u4e2a\u6a21\u578b\u8fd8\u6ca1\u6709\u6b63\u5219\u5316\uff0c\u6240\u4ee5\u6392\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u9009\u9879\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u6dfb\u52a0\u66f4\u591a\u7279\u5f81\uff08\u6bd4\u5982\uff0c\u4eba\u53e3\u7684\u5bf9\u6570\u503c\uff09\uff0c\u4f46\u662f\u9996\u5148\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e2a\u66f4\u4e3a\u590d\u6742\u7684\u6a21\u578b\uff0c\u770b\u770b\u6548\u679c\u3002 \u6765\u8bad\u7ec3\u4e00\u4e2a DecisionTreeRegressor \u3002\u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u53d1\u73b0\u6570\u636e\u4e2d\u590d\u6742\u7684\u975e\u7ebf\u6027\u5173\u7cfb\uff08\u51b3\u7b56\u6811\u4f1a\u5728\u7b2c 6 \u7ae0\u8be6\u7ec6\u8bb2\u89e3\uff09\u3002\u4ee3\u7801\u770b\u8d77\u6765\u5f88\u719f\u6089\uff1a from sklearn.tree import DecisionTreeRegressor tree_reg = DecisionTreeRegressor() tree_reg.fit(housing_prepared, housing_labels) \u73b0\u5728\u6a21\u578b\u5c31\u8bad\u7ec3\u597d\u4e86\uff0c\u7528\u8bad\u7ec3\u96c6\u8bc4\u4f30\u4e0b\uff1a >>> housing_predictions = tree_reg.predict(housing_prepared) >>> tree_mse = mean_squared_error(housing_labels, housing_predictions) >>> tree_rmse = np.sqrt(tree_mse) >>> tree_rmse 0.0 \u7b49\u4e00\u4e0b\uff0c\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u6ca1\u6709\u8bef\u5dee\uff1f\u8fd9\u4e2a\u6a21\u578b\u53ef\u80fd\u662f\u7edd\u5bf9\u5b8c\u7f8e\u7684\u5417\uff1f\u5f53\u7136\uff0c\u66f4\u5927\u53ef\u80fd\u6027\u662f\u8fd9\u4e2a\u6a21\u578b\u4e25\u91cd\u8fc7\u62df\u5408\u6570\u636e\u3002\u5982\u4f55\u786e\u5b9a\u5462\uff1f\u5982\u524d\u6240\u8ff0\uff0c\u76f4\u5230\u4f60\u51c6\u5907\u8fd0\u884c\u4e00\u4e2a\u5177\u5907\u8db3\u591f\u4fe1\u5fc3\u7684\u6a21\u578b\uff0c\u90fd\u4e0d\u8981\u78b0\u6d4b\u8bd5\u96c6\uff0c\u56e0\u6b64\u4f60\u9700\u8981\u4f7f\u7528\u8bad\u7ec3\u96c6\u7684\u90e8\u5206\u6570\u636e\u6765\u505a\u8bad\u7ec3\uff0c\u7528\u4e00\u90e8\u5206\u6765\u505a\u6a21\u578b\u9a8c\u8bc1\u3002","title":"\u5728\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u548c\u8bc4\u4f30"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_24","text":"\u8bc4\u4f30\u51b3\u7b56\u6811\u6a21\u578b\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u7528\u51fd\u6570 train_test_split \u6765\u5206\u5272\u8bad\u7ec3\u96c6\uff0c\u5f97\u5230\u4e00\u4e2a\u66f4\u5c0f\u7684\u8bad\u7ec3\u96c6\u548c\u4e00\u4e2a\u9a8c\u8bc1\u96c6\uff0c\u7136\u540e\u7528\u66f4\u5c0f\u7684\u8bad\u7ec3\u96c6\u6765\u8bad\u7ec3\u6a21\u578b\uff0c\u7528\u9a8c\u8bc1\u96c6\u6765\u8bc4\u4f30\u3002\u8fd9\u9700\u8981\u4e00\u5b9a\u5de5\u4f5c\u91cf\uff0c\u5e76\u4e0d\u96be\u800c\u4e14\u4e5f\u53ef\u884c\u3002 \u53e6\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 Scikit-Learn \u7684\u4ea4\u53c9\u9a8c\u8bc1\u529f\u80fd\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u91c7\u7528\u4e86 K \u6298\u4ea4\u53c9\u9a8c\u8bc1\uff08K-fold cross-validation\uff09\uff1a\u5b83\u968f\u673a\u5730\u5c06\u8bad\u7ec3\u96c6\u5206\u6210\u5341\u4e2a\u4e0d\u540c\u7684\u5b50\u96c6\uff0c\u6210\u4e3a\u201c\u6298\u201d\uff0c\u7136\u540e\u8bad\u7ec3\u8bc4\u4f30\u51b3\u7b56\u6811\u6a21\u578b 10 \u6b21\uff0c\u6bcf\u6b21\u9009\u4e00\u4e2a\u4e0d\u7528\u7684\u6298\u6765\u505a\u8bc4\u4f30\uff0c\u7528\u5176\u5b83 9 \u4e2a\u6765\u505a\u8bad\u7ec3\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5305\u542b 10 \u4e2a\u8bc4\u5206\u7684\u6570\u7ec4\uff1a from sklearn.model_selection import cross_val_score scores = cross_val_score(tree_reg, housing_prepared, housing_labels, scoring=\"neg_mean_squared_error\", cv=10) rmse_scores = np.sqrt(-scores) \u8b66\u544a\uff1aScikit-Learn \u4ea4\u53c9\u9a8c\u8bc1\u529f\u80fd\u671f\u671b\u7684\u662f\u6548\u7528\u51fd\u6570\uff08\u8d8a\u5927\u8d8a\u597d\uff09\u800c\u4e0d\u662f\u635f\u5931\u51fd\u6570\uff08\u8d8a\u4f4e\u8d8a\u597d\uff09\uff0c\u56e0\u6b64\u5f97\u5206\u51fd\u6570\u5b9e\u9645\u4e0a\u4e0e MSE \u76f8\u53cd\uff08\u5373\u8d1f\u503c\uff09\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u524d\u9762\u7684\u4ee3\u7801\u5728\u8ba1\u7b97\u5e73\u65b9\u6839\u4e4b\u524d\u5148\u8ba1\u7b97 -scores \u3002 \u6765\u770b\u4e0b\u7ed3\u679c\uff1a >>> def display_scores(scores): ... print(\"Scores:\", scores) ... print(\"Mean:\", scores.mean()) ... print(\"Standard deviation:\", scores.std()) ... >>> display_scores(tree_rmse_scores) Scores: [ 74678.4916885 64766.2398337 69632.86942005 69166.67693232 71486.76507766 73321.65695983 71860.04741226 71086.32691692 76934.2726093 69060.93319262] Mean: 71199.4280043 Standard deviation: 3202.70522793 \u73b0\u5728\u51b3\u7b56\u6811\u5c31\u4e0d\u50cf\u524d\u9762\u770b\u8d77\u6765\u90a3\u4e48\u597d\u4e86\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u770b\u8d77\u6765\u6bd4\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u8fd8\u7cdf\uff01\u6ce8\u610f\u5230\u4ea4\u53c9\u9a8c\u8bc1\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u4f60\u5f97\u5230\u6a21\u578b\u6027\u80fd\u7684\u8bc4\u4f30\uff0c\u8fd8\u80fd\u6d4b\u91cf\u8bc4\u4f30\u7684\u51c6\u786e\u6027\uff08\u5373\uff0c\u5b83\u7684\u6807\u51c6\u5dee\uff09\u3002\u51b3\u7b56\u6811\u7684\u8bc4\u5206\u5927\u7ea6\u662f 71200\uff0c\u901a\u5e38\u6ce2\u52a8\u6709 \u00b13200\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u9a8c\u8bc1\u96c6\uff0c\u5c31\u5f97\u4e0d\u5230\u8fd9\u4e9b\u4fe1\u606f\u3002\u4f46\u662f\u4ea4\u53c9\u9a8c\u8bc1\u7684\u4ee3\u4ef7\u662f\u8bad\u7ec3\u4e86\u6a21\u578b\u591a\u6b21\uff0c\u4e0d\u53ef\u80fd\u603b\u662f\u8fd9\u6837\u3002 \u8ba9\u6211\u4eec\u8ba1\u7b97\u4e0b\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u7684\u76f8\u540c\u5206\u6570\uff0c\u4ee5\u505a\u786e\u4fdd\uff1a >>> lin_scores = cross_val_score(lin_reg, housing_prepared, housing_labels, ... scoring=\"neg_mean_squared_error\", cv=10) ... >>> lin_rmse_scores = np.sqrt(-lin_scores) >>> display_scores(lin_rmse_scores) Scores: [ 70423.5893262 65804.84913139 66620.84314068 72510.11362141 66414.74423281 71958.89083606 67624.90198297 67825.36117664 72512.36533141 68028.11688067] Mean: 68972.377566 Standard deviation: 2493.98819069 \u5224\u65ad\u6ca1\u9519\uff1a\u51b3\u7b56\u6811\u6a21\u578b\u8fc7\u62df\u5408\u5f88\u4e25\u91cd\uff0c\u5b83\u7684\u6027\u80fd\u6bd4\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u8fd8\u5dee\u3002 \u73b0\u5728\u518d\u5c1d\u8bd5\u6700\u540e\u4e00\u4e2a\u6a21\u578b\uff1a RandomForestRegressor \u3002\u7b2c7\u7ae0\u6211\u4eec\u4f1a\u770b\u5230\uff0c\u968f\u673a\u68ee\u6797\u662f\u901a\u8fc7\u7528\u7279\u5f81\u7684\u968f\u673a\u5b50\u96c6\u8bad\u7ec3\u8bb8\u591a\u51b3\u7b56\u6811\u3002\u5728\u5176\u5b83\u591a\u4e2a\u6a21\u578b\u4e4b\u4e0a\u5efa\u7acb\u6a21\u578b\u79f0\u4e3a\u96c6\u6210\u5b66\u4e60\uff08Ensemble Learning\uff09\uff0c\u5b83\u662f\u63a8\u8fdb ML \u7b97\u6cd5\u7684\u4e00\u79cd\u597d\u65b9\u6cd5\u3002\u6211\u4eec\u4f1a\u8df3\u8fc7\u5927\u90e8\u5206\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u4ee3\u7801\u672c\u8d28\u4e0a\u548c\u5176\u5b83\u6a21\u578b\u4e00\u6837\uff1a >>> from sklearn.ensemble import RandomForestRegressor >>> forest_reg = RandomForestRegressor() >>> forest_reg.fit(housing_prepared, housing_labels) >>> [...] >>> forest_rmse 22542.396440343684 >>> display_scores(forest_rmse_scores) Scores: [ 53789.2879722 50256.19806622 52521.55342602 53237.44937943 52428.82176158 55854.61222549 52158.02291609 50093.66125649 53240.80406125 52761.50852822] Mean: 52634.1919593 Standard deviation: 1576.20472269 \u73b0\u5728\u597d\u591a\u4e86\uff1a\u968f\u673a\u68ee\u6797\u770b\u8d77\u6765\u5f88\u6709\u5e0c\u671b\u3002\u4f46\u662f\uff0c\u8bad\u7ec3\u96c6\u7684\u8bc4\u5206\u4ecd\u7136\u6bd4\u9a8c\u8bc1\u96c6\u7684\u8bc4\u5206\u4f4e\u5f88\u591a\u3002\u89e3\u51b3\u8fc7\u62df\u5408\u53ef\u4ee5\u901a\u8fc7\u7b80\u5316\u6a21\u578b\uff0c\u7ed9\u6a21\u578b\u52a0\u9650\u5236\uff08\u5373\uff0c\u89c4\u6574\u5316\uff09\uff0c\u6216\u7528\u66f4\u591a\u7684\u8bad\u7ec3\u6570\u636e\u3002\u5728\u6df1\u5165\u968f\u673a\u68ee\u6797\u4e4b\u524d\uff0c\u4f60\u5e94\u8be5\u5c1d\u8bd5\u4e0b\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u5176\u5b83\u7c7b\u578b\u6a21\u578b\uff08\u4e0d\u540c\u6838\u5fc3\u7684\u652f\u6301\u5411\u91cf\u673a\uff0c\u795e\u7ecf\u7f51\u7edc\uff0c\u7b49\u7b49\uff09\uff0c\u4e0d\u8981\u5728\u8c03\u8282\u8d85\u53c2\u6570\u4e0a\u82b1\u8d39\u592a\u591a\u65f6\u95f4\u3002\u76ee\u6807\u662f\u5217\u51fa\u4e00\u4e2a\u53ef\u80fd\u6a21\u578b\u7684\u5217\u8868\uff08\u4e24\u5230\u4e94\u4e2a\uff09\u3002 \u63d0\u793a\uff1a\u4f60\u8981\u4fdd\u5b58\u6bcf\u4e2a\u8bd5\u9a8c\u8fc7\u7684\u6a21\u578b\uff0c\u4ee5\u4fbf\u540e\u7eed\u53ef\u4ee5\u518d\u7528\u3002\u8981\u786e\u4fdd\u6709\u8d85\u53c2\u6570\u548c\u8bad\u7ec3\u53c2\u6570\uff0c\u4ee5\u53ca\u4ea4\u53c9\u9a8c\u8bc1\u8bc4\u5206\uff0c\u548c\u5b9e\u9645\u7684\u9884\u6d4b\u503c\u3002\u8fd9\u53ef\u4ee5\u8ba9\u4f60\u6bd4\u8f83\u4e0d\u540c\u7c7b\u578b\u6a21\u578b\u7684\u8bc4\u5206\uff0c\u8fd8\u53ef\u4ee5\u6bd4\u8f83\u8bef\u5dee\u79cd\u7c7b\u3002\u4f60\u53ef\u4ee5\u7528 Python \u7684\u6a21\u5757 pickle \uff0c\u975e\u5e38\u65b9\u4fbf\u5730\u4fdd\u5b58 Scikit-Learn \u6a21\u578b\uff0c\u6216\u4f7f\u7528 sklearn.externals.joblib \uff0c\u540e\u8005\u5e8f\u5217\u5316\u5927 NumPy \u6570\u7ec4\u66f4\u6709\u6548\u7387\uff1a ```python from sklearn.externals import joblib joblib.dump(my_model, \"my_model.pkl\")","title":"\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u505a\u66f4\u4f73\u7684\u8bc4\u4f30"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_25","text":"my_model_loaded = joblib.load(\"my_model.pkl\") ```","title":"\u7136\u540e"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_26","text":"\u5047\u8bbe\u4f60\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u91cc\u6709\u51e0\u4e2a\u6709\u5e0c\u671b\u7684\u6a21\u578b\u3002\u4f60\u73b0\u5728\u9700\u8981\u5bf9\u5b83\u4eec\u8fdb\u884c\u5fae\u8c03\u3002\u8ba9\u6211\u4eec\u6765\u770b\u51e0\u79cd\u5fae\u8c03\u7684\u65b9\u6cd5\u3002","title":"\u6a21\u578b\u5fae\u8c03"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_27","text":"\u5fae\u8c03\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u624b\u5de5\u8c03\u6574\u8d85\u53c2\u6570\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u597d\u7684\u8d85\u53c2\u6570\u7ec4\u5408\u3002\u8fd9\u4e48\u505a\u7684\u8bdd\u4f1a\u975e\u5e38\u5197\u957f\uff0c\u4f60\u4e5f\u53ef\u80fd\u6ca1\u6709\u65f6\u95f4\u63a2\u7d22\u591a\u79cd\u7ec4\u5408\u3002 \u4f60\u5e94\u8be5\u4f7f\u7528 Scikit-Learn \u7684 GridSearchCV \u6765\u505a\u8fd9\u9879\u641c\u7d22\u5de5\u4f5c\u3002\u4f60\u6240\u9700\u8981\u505a\u7684\u662f\u544a\u8bc9 GridSearchCV \u8981\u8bd5\u9a8c\u6709\u54ea\u4e9b\u8d85\u53c2\u6570\uff0c\u8981\u8bd5\u9a8c\u4ec0\u4e48\u503c\uff0c GridSearchCV \u5c31\u80fd\u7528\u4ea4\u53c9\u9a8c\u8bc1\u8bd5\u9a8c\u6240\u6709\u53ef\u80fd\u8d85\u53c2\u6570\u503c\u7684\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u641c\u7d22\u4e86 RandomForestRegressor \u8d85\u53c2\u6570\u503c\u7684\u6700\u4f73\u7ec4\u5408\uff1a from sklearn.model_selection import GridSearchCV param_grid = [ {'n_estimators': [3, 10, 30], 'max_features': [2, 4, 6, 8]}, {'bootstrap': [False], 'n_estimators': [3, 10], 'max_features': [2, 3, 4]}, ] forest_reg = RandomForestRegressor() grid_search = GridSearchCV(forest_reg, param_grid, cv=5, scoring='neg_mean_squared_error') grid_search.fit(housing_prepared, housing_labels) \u5f53\u4f60\u4e0d\u80fd\u786e\u5b9a\u8d85\u53c2\u6570\u8be5\u6709\u4ec0\u4e48\u503c\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5c1d\u8bd5\u8fde\u7eed\u7684 10 \u7684\u5e42\uff08\u5982\u679c\u60f3\u8981\u4e00\u4e2a\u7c92\u5ea6\u66f4\u5c0f\u7684\u641c\u5bfb\uff0c\u53ef\u4ee5\u7528\u66f4\u5c0f\u7684\u6570\uff0c\u5c31\u50cf\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5bf9\u8d85\u53c2\u6570 n_estimators \u505a\u7684\uff09\u3002 param_grid \u544a\u8bc9 Scikit-Learn \u9996\u5148\u8bc4\u4f30\u6240\u6709\u7684\u5217\u5728\u7b2c\u4e00\u4e2a dict \u4e2d\u7684 n_estimators \u548c max_features \u7684 3 \u00d7 4 = 12 \u79cd\u7ec4\u5408\uff08\u4e0d\u7528\u62c5\u5fc3\u8fd9\u4e9b\u8d85\u53c2\u6570\u7684\u542b\u4e49\uff0c\u4f1a\u5728\u7b2c 7 \u7ae0\u4e2d\u89e3\u91ca\uff09\u3002\u7136\u540e\u5c1d\u8bd5\u7b2c\u4e8c\u4e2a dict \u4e2d\u8d85\u53c2\u6570\u7684 2 \u00d7 3 = 6 \u79cd\u7ec4\u5408\uff0c\u8fd9\u6b21\u4f1a\u5c06\u8d85\u53c2\u6570 bootstrap \u8bbe\u4e3a False \u800c\u4e0d\u662f True \uff08\u540e\u8005\u662f\u8be5\u8d85\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\uff09\u3002 \u603b\u4e4b\uff0c\u7f51\u683c\u641c\u7d22\u4f1a\u63a2\u7d22 12 + 6 = 18 \u79cd RandomForestRegressor \u7684\u8d85\u53c2\u6570\u7ec4\u5408\uff0c\u4f1a\u8bad\u7ec3\u6bcf\u4e2a\u6a21\u578b\u4e94\u6b21\uff08\u56e0\u4e3a\u7528\u7684\u662f\u4e94\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8bad\u7ec3\u603b\u5171\u6709 18 \u00d7 5 = 90 \u8f6e\uff01K \u6298\u5c06\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u5b8c\u6210\u540e\uff0c\u4f60\u5c31\u80fd\u83b7\u5f97\u53c2\u6570\u7684\u6700\u4f73\u7ec4\u5408\uff0c\u5982\u4e0b\u6240\u793a\uff1a >>> grid_search.best_params_ {'max_features': 6, 'n_estimators': 30} \u63d0\u793a\uff1a\u56e0\u4e3a 30 \u662f n_estimators \u7684\u6700\u5927\u503c\uff0c\u4f60\u4e5f\u5e94\u8be5\u4f30\u8ba1\u66f4\u9ad8\u7684\u503c\uff0c\u56e0\u4e3a\u8bc4\u4f30\u7684\u5206\u6570\u53ef\u80fd\u4f1a\u968f n_estimators \u7684\u589e\u5927\u800c\u6301\u7eed\u63d0\u5347\u3002 \u4f60\u8fd8\u80fd\u76f4\u63a5\u5f97\u5230\u6700\u4f73\u7684\u4f30\u8ba1\u5668\uff1a >>> grid_search.best_estimator_ RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None, max_features=6, max_leaf_nodes=None, min_samples_leaf=1, min_samples_split=2, min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1, oob_score=False, random_state=None, verbose=0, warm_start=False) \u6ce8\u610f\uff1a\u5982\u679c GridSearchCV \u662f\u4ee5\uff08\u9ed8\u8ba4\u503c\uff09 refit=True \u5f00\u59cb\u8fd0\u884c\u7684\uff0c\u5219\u4e00\u65e6\u7528\u4ea4\u53c9\u9a8c\u8bc1\u627e\u5230\u4e86\u6700\u4f73\u7684\u4f30\u8ba1\u5668\uff0c\u5c31\u4f1a\u5728\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u91cd\u65b0\u8bad\u7ec3\u3002\u8fd9\u662f\u4e00\u4e2a\u597d\u65b9\u6cd5\uff0c\u56e0\u4e3a\u7528\u66f4\u591a\u6570\u636e\u8bad\u7ec3\u4f1a\u63d0\u9ad8\u6027\u80fd\u3002 \u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u8bc4\u4f30\u5f97\u5206\uff1a >>> cvres = grid_search.cv_results_ ... for mean_score, params in zip(cvres[\"mean_test_score\"], cvres[\"params\"]): ... print(np.sqrt(-mean_score), params) ... 64912.0351358 {'max_features': 2, 'n_estimators': 3} 55535.2786524 {'max_features': 2, 'n_estimators': 10} 52940.2696165 {'max_features': 2, 'n_estimators': 30} 60384.0908354 {'max_features': 4, 'n_estimators': 3} 52709.9199934 {'max_features': 4, 'n_estimators': 10} 50503.5985321 {'max_features': 4, 'n_estimators': 30} 59058.1153485 {'max_features': 6, 'n_estimators': 3} 52172.0292957 {'max_features': 6, 'n_estimators': 10} 49958.9555932 {'max_features': 6, 'n_estimators': 30} 59122.260006 {'max_features': 8, 'n_estimators': 3} 52441.5896087 {'max_features': 8, 'n_estimators': 10} 50041.4899416 {'max_features': 8, 'n_estimators': 30} 62371.1221202 {'bootstrap': False, 'max_features': 2, 'n_estimators': 3} 54572.2557534 {'bootstrap': False, 'max_features': 2, 'n_estimators': 10} 59634.0533132 {'bootstrap': False, 'max_features': 3, 'n_estimators': 3} 52456.0883904 {'bootstrap': False, 'max_features': 3, 'n_estimators': 10} 58825.665239 {'bootstrap': False, 'max_features': 4, 'n_estimators': 3} 52012.9945396 {'bootstrap': False, 'max_features': 4, 'n_estimators': 10} \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u8bbe\u5b9a\u8d85\u53c2\u6570 max_features \u4e3a 6\uff0c n_estimators \u4e3a 30\uff0c\u5f97\u5230\u4e86\u6700\u4f73\u65b9\u6848\u3002\u5bf9\u8fd9\u4e2a\u7ec4\u5408\uff0cRMSE \u7684\u503c\u662f 49959\uff0c\u8fd9\u6bd4\u4e4b\u524d\u4f7f\u7528\u9ed8\u8ba4\u7684\u8d85\u53c2\u6570\u7684\u503c\uff0852634\uff09\u8981\u7a0d\u5fae\u597d\u4e00\u4e9b\u3002\u795d\u8d3a\u4f60\uff0c\u4f60\u6210\u529f\u5730\u5fae\u8c03\u4e86\u6700\u4f73\u6a21\u578b\uff01 \u63d0\u793a\uff1a\u4e0d\u8981\u5fd8\u8bb0\uff0c\u4f60\u53ef\u4ee5\u50cf\u8d85\u53c2\u6570\u4e00\u6837\u5904\u7406\u6570\u636e\u51c6\u5907\u7684\u6b65\u9aa4\u3002\u4f8b\u5982\uff0c\u7f51\u683c\u641c\u7d22\u53ef\u4ee5\u81ea\u52a8\u5224\u65ad\u662f\u5426\u6dfb\u52a0\u4e00\u4e2a\u4f60\u4e0d\u786e\u5b9a\u7684\u7279\u5f81\uff08\u6bd4\u5982\uff0c\u4f7f\u7528\u8f6c\u6362\u5668 CombinedAttributesAdder \u7684\u8d85\u53c2\u6570 add_bedrooms_per_room \uff09\u3002\u5b83\u8fd8\u80fd\u7528\u76f8\u4f3c\u7684\u65b9\u6cd5\u6765\u81ea\u52a8\u627e\u5230\u5904\u7406\u5f02\u5e38\u503c\u3001\u7f3a\u5931\u7279\u5f81\u3001\u7279\u5f81\u9009\u62e9\u7b49\u4efb\u52a1\u7684\u6700\u4f73\u65b9\u6cd5\u3002","title":"\u7f51\u683c\u641c\u7d22"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_28","text":"\u5f53\u63a2\u7d22\u76f8\u5bf9\u8f83\u5c11\u7684\u7ec4\u5408\u65f6\uff0c\u5c31\u50cf\u524d\u9762\u7684\u4f8b\u5b50\uff0c\u7f51\u683c\u641c\u7d22\u8fd8\u53ef\u4ee5\u3002\u4f46\u662f\u5f53\u8d85\u53c2\u6570\u7684\u641c\u7d22\u7a7a\u95f4\u5f88\u5927\u65f6\uff0c\u6700\u597d\u4f7f\u7528 RandomizedSearchCV \u3002\u8fd9\u4e2a\u7c7b\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u7c7b GridSearchCV \u5f88\u76f8\u4f3c\uff0c\u4f46\u5b83\u4e0d\u662f\u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\uff0c\u800c\u662f\u901a\u8fc7\u9009\u62e9\u6bcf\u4e2a\u8d85\u53c2\u6570\u7684\u4e00\u4e2a\u968f\u673a\u503c\u7684\u7279\u5b9a\u6570\u91cf\u7684\u968f\u673a\u7ec4\u5408\u3002\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e24\u4e2a\u4f18\u70b9\uff1a \u5982\u679c\u4f60\u8ba9\u968f\u673a\u641c\u7d22\u8fd0\u884c\uff0c\u6bd4\u5982 1000 \u6b21\uff0c\u5b83\u4f1a\u63a2\u7d22\u6bcf\u4e2a\u8d85\u53c2\u6570\u7684 1000 \u4e2a\u4e0d\u540c\u7684\u503c\uff08\u800c\u4e0d\u662f\u50cf\u7f51\u683c\u641c\u7d22\u90a3\u6837\uff0c\u53ea\u641c\u7d22\u6bcf\u4e2a\u8d85\u53c2\u6570\u7684\u51e0\u4e2a\u503c\uff09\u3002 \u4f60\u53ef\u4ee5\u65b9\u4fbf\u5730\u901a\u8fc7\u8bbe\u5b9a\u641c\u7d22\u6b21\u6570\uff0c\u63a7\u5236\u8d85\u53c2\u6570\u641c\u7d22\u7684\u8ba1\u7b97\u91cf\u3002","title":"\u968f\u673a\u641c\u7d22"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_29","text":"\u53e6\u4e00\u79cd\u5fae\u8c03\u7cfb\u7edf\u7684\u65b9\u6cd5\u662f\u5c06\u8868\u73b0\u6700\u597d\u7684\u6a21\u578b\u7ec4\u5408\u8d77\u6765\u3002\u7ec4\u5408\uff08\u96c6\u6210\uff09\u4e4b\u540e\u7684\u6027\u80fd\u901a\u5e38\u8981\u6bd4\u5355\u72ec\u7684\u6a21\u578b\u8981\u597d\uff08\u5c31\u50cf\u968f\u673a\u68ee\u6797\u8981\u6bd4\u5355\u72ec\u7684\u51b3\u7b56\u6811\u8981\u597d\uff09\uff0c\u7279\u522b\u662f\u5f53\u5355\u72ec\u6a21\u578b\u7684\u8bef\u5dee\u7c7b\u578b\u4e0d\u540c\u65f6\u3002\u6211\u4eec\u4f1a\u5728\u7b2c7\u7ae0\u66f4\u6df1\u5165\u5730\u8bb2\u89e3\u8fd9\u70b9\u3002","title":"\u96c6\u6210\u65b9\u6cd5"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_30","text":"\u901a\u8fc7\u5206\u6790\u6700\u4f73\u6a21\u578b\uff0c\u5e38\u5e38\u53ef\u4ee5\u83b7\u5f97\u5bf9\u95ee\u9898\u66f4\u6df1\u7684\u4e86\u89e3\u3002\u6bd4\u5982\uff0c RandomForestRegressor \u53ef\u4ee5\u6307\u51fa\u6bcf\u4e2a\u5c5e\u6027\u5bf9\u4e8e\u505a\u51fa\u51c6\u786e\u9884\u6d4b\u7684\u76f8\u5bf9\u91cd\u8981\u6027\uff1a >>> feature_importances = grid_search.best_estimator_.feature_importances_ >>> feature_importances array([ 7.14156423e-02, 6.76139189e-02, 4.44260894e-02, 1.66308583e-02, 1.66076861e-02, 1.82402545e-02, 1.63458761e-02, 3.26497987e-01, 6.04365775e-02, 1.13055290e-01, 7.79324766e-02, 1.12166442e-02, 1.53344918e-01, 8.41308969e-05, 2.68483884e-03, 3.46681181e-03]) \u5c06\u91cd\u8981\u6027\u5206\u6570\u548c\u5c5e\u6027\u540d\u653e\u5230\u4e00\u8d77\uff1a >>> extra_attribs = [\"rooms_per_hhold\", \"pop_per_hhold\", \"bedrooms_per_room\"] >>> cat_one_hot_attribs = list(encoder.classes_) >>> attributes = num_attribs + extra_attribs + cat_one_hot_attribs >>> sorted(zip(feature_importances,attributes), reverse=True) [(0.32649798665134971, 'median_income'), (0.15334491760305854, 'INLAND'), (0.11305529021187399, 'pop_per_hhold'), (0.07793247662544775, 'bedrooms_per_room'), (0.071415642259275158, 'longitude'), (0.067613918945568688, 'latitude'), (0.060436577499703222, 'rooms_per_hhold'), (0.04442608939578685, 'housing_median_age'), (0.018240254462909437, 'population'), (0.01663085833886218, 'total_rooms'), (0.016607686091288865, 'total_bedrooms'), (0.016345876147580776, 'households'), (0.011216644219017424, '<1H OCEAN'), (0.0034668118081117387, 'NEAR OCEAN'), (0.0026848388432755429, 'NEAR BAY'), (8.4130896890070617e-05, 'ISLAND')] \u6709\u4e86\u8fd9\u4e2a\u4fe1\u606f\uff0c\u4f60\u5c31\u53ef\u4ee5\u4e22\u5f03\u4e00\u4e9b\u4e0d\u90a3\u4e48\u91cd\u8981\u7684\u7279\u5f81\uff08\u6bd4\u5982\uff0c\u663e\u7136\u53ea\u8981\u4e00\u4e2a ocean_proximity \u7684\u7c7b\u578b\uff08INLAND\uff09\u5c31\u591f\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e22\u5f03\u6389\u5176\u5b83\u7684\uff09\u3002 \u4f60\u8fd8\u5e94\u8be5\u770b\u4e00\u4e0b\u7cfb\u7edf\u72af\u7684\u8bef\u5dee\uff0c\u641e\u6e05\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4e9b\u8bef\u5dee\uff0c\u4ee5\u53ca\u5982\u4f55\u6539\u6b63\u95ee\u9898\uff08\u6dfb\u52a0\u66f4\u591a\u7684\u7279\u5f81\uff0c\u6216\u76f8\u53cd\uff0c\u53bb\u6389\u6ca1\u6709\u4ec0\u4e48\u4fe1\u606f\u7684\u7279\u5f81\uff0c\u6e05\u6d17\u5f02\u5e38\u503c\u7b49\u7b49\uff09\u3002","title":"\u5206\u6790\u6700\u4f73\u6a21\u578b\u548c\u5b83\u4eec\u7684\u8bef\u5dee"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_31","text":"\u8c03\u8282\u5b8c\u7cfb\u7edf\u4e4b\u540e\uff0c\u4f60\u7ec8\u4e8e\u6709\u4e86\u4e00\u4e2a\u6027\u80fd\u8db3\u591f\u597d\u7684\u7cfb\u7edf\u3002\u73b0\u5728\u5c31\u53ef\u4ee5\u7528\u6d4b\u8bd5\u96c6\u8bc4\u4f30\u6700\u540e\u7684\u6a21\u578b\u4e86\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u7684\uff1a\u4ece\u6d4b\u8bd5\u96c6\u5f97\u5230\u9884\u6d4b\u503c\u548c\u6807\u7b7e\uff0c\u8fd0\u884c full_pipeline \u8f6c\u6362\u6570\u636e\uff08\u8c03\u7528 transform() \uff0c\u800c\u4e0d\u662f fit_transform() \uff01\uff09\uff0c\u518d\u7528\u6d4b\u8bd5\u96c6\u8bc4\u4f30\u6700\u7ec8\u6a21\u578b\uff1a final_model = grid_search.best_estimator_ X_test = strat_test_set.drop(\"median_house_value\", axis=1) y_test = strat_test_set[\"median_house_value\"].copy() X_test_prepared = full_pipeline.transform(X_test) final_predictions = final_model.predict(X_test_prepared) final_mse = mean_squared_error(y_test, final_predictions) final_rmse = np.sqrt(final_mse) # => evaluates to 48,209.6 \u8bc4\u4f30\u7ed3\u679c\u901a\u5e38\u8981\u6bd4\u4ea4\u53c9\u9a8c\u8bc1\u7684\u6548\u679c\u5dee\u4e00\u70b9\uff0c\u5982\u679c\u4f60\u4e4b\u524d\u505a\u8fc7\u5f88\u591a\u8d85\u53c2\u6570\u5fae\u8c03\uff08\u56e0\u4e3a\u4f60\u7684\u7cfb\u7edf\u5728\u9a8c\u8bc1\u96c6\u4e0a\u5fae\u8c03\uff0c\u5f97\u5230\u4e86\u4e0d\u9519\u7684\u6027\u80fd\uff0c\u901a\u5e38\u4e0d\u4f1a\u5728\u672a\u77e5\u7684\u6570\u636e\u96c6\u4e0a\u6709\u540c\u6837\u597d\u7684\u6548\u679c\uff09\u3002\u8fd9\u4e2a\u4f8b\u5b50\u4e0d\u5c5e\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f46\u662f\u5f53\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u4f60\u4e00\u5b9a\u8981\u5fcd\u4f4f\u4e0d\u8981\u8c03\u8282\u8d85\u53c2\u6570\uff0c\u4f7f\u6d4b\u8bd5\u96c6\u7684\u6548\u679c\u53d8\u597d\uff1b\u8fd9\u6837\u7684\u63d0\u5347\u4e0d\u80fd\u63a8\u5e7f\u5230\u65b0\u6570\u636e\u4e0a\u3002 \u7136\u540e\u5c31\u662f\u9879\u76ee\u7684\u9884\u4e0a\u7ebf\u9636\u6bb5\uff1a\u4f60\u9700\u8981\u5c55\u793a\u4f60\u7684\u65b9\u6848\uff08\u91cd\u70b9\u8bf4\u660e\u5b66\u5230\u4e86\u4ec0\u4e48\u3001\u505a\u4e86\u4ec0\u4e48\u3001\u6ca1\u505a\u4ec0\u4e48\u3001\u505a\u8fc7\u4ec0\u4e48\u5047\u8bbe\u3001\u7cfb\u7edf\u7684\u9650\u5236\u662f\u4ec0\u4e48\uff0c\u7b49\u7b49\uff09\uff0c\u8bb0\u5f55\u4e0b\u6240\u6709\u4e8b\u60c5\uff0c\u7528\u6f02\u4eae\u7684\u56fe\u8868\u548c\u5bb9\u6613\u8bb0\u4f4f\u7684\u8868\u8fbe\uff08\u6bd4\u5982\uff0c\u201c\u6536\u5165\u4e2d\u4f4d\u6570\u662f\u623f\u4ef7\u6700\u91cd\u8981\u7684\u9884\u6d4b\u91cf\u201d\uff09\u505a\u4e00\u6b21\u7cbe\u5f69\u7684\u5c55\u793a\u3002","title":"\u7528\u6d4b\u8bd5\u96c6\u8bc4\u4f30\u7cfb\u7edf"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_32","text":"\u5f88\u597d\uff0c\u4f60\u88ab\u5141\u8bb8\u542f\u52a8\u7cfb\u7edf\u4e86\uff01\u4f60\u9700\u8981\u4e3a\u5b9e\u9645\u751f\u4ea7\u505a\u597d\u51c6\u5907\uff0c\u7279\u522b\u662f\u63a5\u5165\u8f93\u5165\u6570\u636e\u6e90\uff0c\u5e76\u7f16\u5199\u6d4b\u8bd5\u3002 \u4f60\u8fd8\u9700\u8981\u7f16\u5199\u76d1\u63a7\u4ee3\u7801\uff0c\u4ee5\u56fa\u5b9a\u95f4\u9694\u68c0\u6d4b\u7cfb\u7edf\u7684\u5b9e\u65f6\u8868\u73b0\uff0c\u5f53\u53d1\u751f\u4e0b\u964d\u65f6\u89e6\u53d1\u62a5\u8b66\u3002\u8fd9\u5bf9\u4e8e\u6355\u83b7\u7a81\u7136\u7684\u7cfb\u7edf\u5d29\u6e83\u548c\u6027\u80fd\u4e0b\u964d\u5341\u5206\u91cd\u8981\u3002\u505a\u76d1\u63a7\u5f88\u5e38\u89c1\uff0c\u662f\u56e0\u4e3a\u6a21\u578b\u4f1a\u968f\u7740\u6570\u636e\u7684\u6f14\u5316\u800c\u6027\u80fd\u4e0b\u964d\uff0c\u9664\u975e\u6a21\u578b\u7528\u65b0\u6570\u636e\u5b9a\u671f\u8bad\u7ec3\u3002 \u8bc4\u4f30\u7cfb\u7edf\u7684\u8868\u73b0\u9700\u8981\u5bf9\u9884\u6d4b\u503c\u91c7\u6837\u5e76\u8fdb\u884c\u8bc4\u4f30\u3002\u8fd9\u901a\u5e38\u9700\u8981\u4eba\u6765\u5206\u6790\u3002\u5206\u6790\u8005\u53ef\u80fd\u662f\u9886\u57df\u4e13\u5bb6\uff0c\u6216\u8005\u662f\u4f17\u5305\u5e73\u53f0\uff08\u6bd4\u5982 Amazon Mechanical Turk \u6216 CrowdFlower\uff09\u7684\u5de5\u4eba\u3002\u4e0d\u7ba1\u91c7\u7528\u54ea\u79cd\u65b9\u6cd5\uff0c\u4f60\u90fd\u9700\u8981\u5c06\u4eba\u5de5\u8bc4\u4f30\u7684\u6d41\u6c34\u7ebf\u690d\u5165\u7cfb\u7edf\u3002 \u4f60\u8fd8\u8981\u8bc4\u4f30\u7cfb\u7edf\u8f93\u5165\u6570\u636e\u7684\u8d28\u91cf\u3002\u6709\u65f6\u56e0\u4e3a\u4f4e\u8d28\u91cf\u7684\u4fe1\u53f7\uff08\u6bd4\u5982\u5931\u7075\u7684\u4f20\u611f\u5668\u53d1\u9001\u968f\u673a\u503c\uff0c\u6216\u53e6\u4e00\u4e2a\u56e2\u961f\u7684\u8f93\u51fa\u505c\u6ede\uff09\uff0c\u7cfb\u7edf\u7684\u8868\u73b0\u4f1a\u9010\u6e10\u53d8\u5dee\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u7cfb\u7edf\u7684\u8868\u73b0\u624d\u80fd\u4e0b\u964d\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u89e6\u53d1\u8b66\u62a5\u3002\u5982\u679c\u76d1\u6d4b\u4e86\u7cfb\u7edf\u7684\u8f93\u5165\uff0c\u4f60\u5c31\u53ef\u80fd\u5c3d\u91cf\u65e9\u7684\u53d1\u73b0\u95ee\u9898\u3002\u5bf9\u4e8e\u7ebf\u4e0a\u5b66\u4e60\u7cfb\u7edf\uff0c\u76d1\u6d4b\u8f93\u5165\u6570\u636e\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002 \u6700\u540e\uff0c\u4f60\u53ef\u80fd\u60f3\u5b9a\u671f\u7528\u65b0\u6570\u636e\u8bad\u7ec3\u6a21\u578b\u3002\u4f60\u5e94\u8be5\u5c3d\u53ef\u80fd\u81ea\u52a8\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5982\u679c\u4e0d\u8fd9\u4e48\u505a\uff0c\u975e\u5e38\u6709\u53ef\u80fd\u4f60\u9700\u8981\u6bcf\u9694\u81f3\u5c11\u516d\u4e2a\u6708\u66f4\u65b0\u6a21\u578b\uff0c\u7cfb\u7edf\u7684\u8868\u73b0\u5c31\u4f1a\u4ea7\u751f\u4e25\u91cd\u6ce2\u52a8\u3002\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u662f\u4e00\u4e2a\u7ebf\u4e0a\u5b66\u4e60\u7cfb\u7edf\uff0c\u4f60\u9700\u8981\u5b9a\u671f\u4fdd\u5b58\u7cfb\u7edf\u72b6\u6001\u5feb\u7167\uff0c\u597d\u80fd\u65b9\u4fbf\u5730\u56de\u6eda\u5230\u4e4b\u524d\u7684\u5de5\u4f5c\u72b6\u6001\u3002","title":"\u542f\u52a8\u3001\u76d1\u63a7\u3001\u7ef4\u62a4\u7cfb\u7edf"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_33","text":"\u5e0c\u671b\u8fd9\u4e00\u7ae0\u80fd\u544a\u8bc9\u4f60\u673a\u5668\u5b66\u4e60\u9879\u76ee\u662f\u4ec0\u4e48\u6837\u7684\uff0c\u4f60\u80fd\u7528\u5b66\u5230\u7684\u5de5\u5177\u8bad\u7ec3\u4e00\u4e2a\u597d\u7cfb\u7edf\u3002\u4f60\u5df2\u7ecf\u770b\u5230\uff0c\u5927\u90e8\u5206\u7684\u5de5\u4f5c\u662f\u6570\u636e\u51c6\u5907\u6b65\u9aa4\u3001\u642d\u5efa\u76d1\u6d4b\u5de5\u5177\u3001\u5efa\u7acb\u4eba\u4e3a\u8bc4\u4f30\u7684\u6d41\u6c34\u7ebf\u548c\u81ea\u52a8\u5316\u5b9a\u671f\u6a21\u578b\u8bad\u7ec3\uff0c\u5f53\u7136\uff0c\u6700\u597d\u80fd\u4e86\u89e3\u6574\u4e2a\u8fc7\u7a0b\u3001\u719f\u6089\u4e09\u6216\u56db\u79cd\u7b97\u6cd5\uff0c\u800c\u4e0d\u662f\u5728\u63a2\u7d22\u9ad8\u7ea7\u7b97\u6cd5\u4e0a\u6d6a\u8d39\u5168\u90e8\u65f6\u95f4\uff0c\u5bfc\u81f4\u5728\u5168\u5c40\u4e0a\u7684\u65f6\u95f4\u4e0d\u591f\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u8fd9\u6837\u505a\uff0c\u73b0\u5728\u6700\u597d\u62ff\u8d77\u53f0\u7535\u8111\uff0c\u9009\u62e9\u4e00\u4e2a\u611f\u5174\u8da3\u7684\u6570\u636e\u96c6\uff0c\u5c06\u6574\u4e2a\u6d41\u7a0b\u4ece\u5934\u5230\u5c3e\u5b8c\u6210\u4e00\u904d\u3002\u4e00\u4e2a\u4e0d\u9519\u7684\u7740\u624b\u5f00\u59cb\u7684\u5730\u70b9\u662f\u7ade\u8d5b\u7f51\u7ad9\uff0c\u6bd4\u5982 http://kaggle.com/ \uff1a\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u4e00\u4e2a\u76ee\u6807\uff0c\u4ee5\u53ca\u5206\u4eab\u7ecf\u9a8c\u7684\u4eba\u3002","title":"\u5b9e\u8df5\uff01"},{"location":"2.%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE/#_34","text":"\u4f7f\u7528\u672c\u7ae0\u7684\u623f\u4ea7\u6570\u636e\u96c6\uff1a \u5c1d\u8bd5\u4e00\u4e2a\u652f\u6301\u5411\u91cf\u673a\u56de\u5f52\u5668\uff08 sklearn.svm.SVR \uff09\uff0c\u4f7f\u7528\u591a\u4e2a\u8d85\u53c2\u6570\uff0c\u6bd4\u5982 kernel=\"linear\" \uff08\u591a\u4e2a\u8d85\u53c2\u6570 C \u503c\uff09\u3002\u73b0\u5728\u4e0d\u7528\u62c5\u5fc3\u8fd9\u4e9b\u8d85\u53c2\u6570\u662f\u4ec0\u4e48\u542b\u4e49\u3002\u6700\u4f73\u7684 SVR \u9884\u6d4b\u8868\u73b0\u5982\u4f55\uff1f \u5c1d\u8bd5\u7528 RandomizedSearchCV \u66ff\u6362 GridSearchCV \u3002 \u5c1d\u8bd5\u5728\u51c6\u5907\u6d41\u6c34\u7ebf\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u53ea\u9009\u62e9\u6700\u91cd\u8981\u5c5e\u6027\u7684\u8f6c\u6362\u5668\u3002 \u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u53ef\u4ee5\u5b8c\u6210\u6570\u636e\u51c6\u5907\u548c\u6700\u7ec8\u9884\u6d4b\u7684\u6d41\u6c34\u7ebf\u3002 \u4f7f\u7528 GridSearchCV \u81ea\u52a8\u63a2\u7d22\u4e00\u4e9b\u51c6\u5907\u8fc7\u7a0b\u4e2d\u7684\u5019\u9009\u9879\u3002 \u7ec3\u4e60\u9898\u7b54\u6848\u53ef\u4ee5\u5728 \u7ebf\u4e0a\u7684 Jupyter notebook \u627e\u5230\u3002","title":"\u7ec3\u4e60"},{"location":"3.%E5%88%86%E7%B1%BB/","text":"\u4e09\u3001\u5206\u7c7b \u5728\u7b2c\u4e00\u7ae0\u6211\u4eec\u63d0\u5230\u8fc7\u6700\u5e38\u7528\u7684\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\u662f\u56de\u5f52\uff08\u7528\u4e8e\u9884\u6d4b\u67d0\u4e2a\u503c\uff09\u548c\u5206\u7c7b\uff08\u9884\u6d4b\u67d0\u4e2a\u7c7b\u522b\uff09\u3002\u5728\u7b2c\u4e8c\u7ae0\u6211\u4eec\u63a2\u7d22\u4e86\u4e00\u4e2a\u56de\u5f52\u4efb\u52a1\uff1a\u9884\u6d4b\u623f\u4ef7\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u591a\u79cd\u7b97\u6cd5\uff0c\u8bf8\u5982\u7ebf\u6027\u56de\u5f52\uff0c\u51b3\u7b56\u6811\uff0c\u548c\u968f\u673a\u68ee\u6797\uff08\u8fd9\u4e2a\u5c06\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\uff09\u3002\u73b0\u5728\u6211\u4eec\u5c06\u6211\u4eec\u7684\u6ce8\u610f\u529b\u8f6c\u5230\u5206\u7c7b\u4efb\u52a1\u4e0a\u3002 MNIST \u5728\u672c\u7ae0\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528 MNIST \u8fd9\u4e2a\u6570\u636e\u96c6\uff0c\u5b83\u6709\u7740 70000 \u5f20\u89c4\u683c\u8f83\u5c0f\u7684\u624b\u5199\u6570\u5b57\u56fe\u7247\uff0c\u7531\u7f8e\u56fd\u7684\u9ad8\u4e2d\u751f\u548c\u7f8e\u56fd\u4eba\u53e3\u8c03\u67e5\u5c40\u7684\u804c\u5458\u624b\u5199\u800c\u6210\u3002\u8fd9\u76f8\u5f53\u4e8e\u673a\u5668\u5b66\u4e60\u5f53\u4e2d\u7684\u201cHello World\u201d\uff0c\u4eba\u4eec\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u63d0\u51fa\u4e00\u4e2a\u65b0\u7684\u5206\u7c7b\u7b97\u6cd5\uff0c\u90fd\u60f3\u77e5\u9053\u8be5\u7b97\u6cd5\u5728\u8fd9\u4e2a\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\u5982\u4f55\u3002\u673a\u5668\u5b66\u4e60\u7684\u521d\u5b66\u8005\u8fdf\u65e9\u4e5f\u4f1a\u5904\u7406 MNIST \u8fd9\u4e2a\u6570\u636e\u96c6\u3002 Scikit-Learn \u63d0\u4f9b\u4e86\u8bb8\u591a\u8f85\u52a9\u51fd\u6570\uff0c\u4ee5\u4fbf\u4e8e\u4e0b\u8f7d\u6d41\u884c\u7684\u6570\u636e\u96c6\u3002MNIST \u662f\u5176\u4e2d\u4e00\u4e2a\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u83b7\u53d6 MNIST >>> from sklearn.datasets import fetch_mldata >>> mnist = fetch_mldata('MNIST original') >>> mnist {'COL_NAMES': ['label', 'data'], 'DESCR': 'mldata.org dataset: mnist-original', 'data': array([[0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], ..., [0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0]], dtype=uint8), 'target': array([ 0., 0., 0., ..., 9., 9., 9.])} \u4e00\u822c\u800c\u8a00\uff0c\u7531 sklearn \u52a0\u8f7d\u7684\u6570\u636e\u96c6\u6709\u7740\u76f8\u4f3c\u7684\u5b57\u5178\u7ed3\u6784\uff0c\u8fd9\u5305\u62ec\uff1a - DESCR \u952e\u63cf\u8ff0\u6570\u636e\u96c6 - data \u952e\u5b58\u653e\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u6837\u4f8b\uff0c\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u7279\u5f81 - target \u952e\u5b58\u653e\u4e00\u4e2a\u6807\u7b7e\u6570\u7ec4 \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u8fd9\u4e9b\u6570\u7ec4 >>> X, y = mnist[\"data\"], mnist[\"target\"] >>> X.shape (70000, 784) >>> y.shape (70000,) MNIST \u6709 70000 \u5f20\u56fe\u7247\uff0c\u6bcf\u5f20\u56fe\u7247\u6709 784 \u4e2a\u7279\u5f81\u3002\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u56fe\u7247\u90fd\u662f 28*28 \u50cf\u7d20\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a\u50cf\u7d20\u7684\u503c\u4ecb\u4e8e 0~255 \u4e4b\u95f4\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u770b\u6570\u636e\u96c6\u7684\u67d0\u4e00\u4e2a\u6570\u5b57\u3002\u4f60\u53ea\u9700\u8981\u5c06\u67d0\u4e2a\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf\uff0c reshape \u4e3a 28*28 \u7684\u6570\u7ec4\uff0c\u7136\u540e\u4f7f\u7528 Matplotlib \u7684 imshow \u51fd\u6570\u5c55\u793a\u51fa\u6765\u3002 %matplotlib inline import matplotlib import matplotlib.pyplot as plt some_digit = X[36000] some_digit_image = some_digit.reshape(28, 28) plt.imshow(some_digit_image, cmap = matplotlib.cm.binary, interpolation=\"nearest\") plt.axis(\"off\") plt.show() \u8fd9\u770b\u8d77\u6765\u50cf\u4e2a 5\uff0c\u5b9e\u9645\u4e0a\u5b83\u7684\u6807\u7b7e\u544a\u8bc9\u6211\u4eec\uff1a >>> y[36000] 5.0 \u56fe3-1 \u5c55\u793a\u4e86\u4e00\u4e9b\u6765\u81ea MNIST \u6570\u636e\u96c6\u7684\u56fe\u7247\u3002\u5f53\u4f60\u5904\u7406\u66f4\u52a0\u590d\u6742\u7684\u5206\u7c7b\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u8ba9\u4f60\u66f4\u6709\u611f\u89c9\u3002 \u5148\u7b49\u4e00\u4e0b\uff01\u4f60\u603b\u662f\u5e94\u8be5\u5148\u521b\u5efa\u6d4b\u8bd5\u96c6\uff0c\u5e76\u4e14\u5728\u9a8c\u8bc1\u6570\u636e\u4e4b\u524d\u5148\u628a\u6d4b\u8bd5\u96c6\u667e\u5230\u4e00\u8fb9\u3002MNIST \u6570\u636e\u96c6\u5df2\u7ecf\u4e8b\u5148\u88ab\u5206\u6210\u4e86\u4e00\u4e2a\u8bad\u7ec3\u96c6\uff08\u524d 60000 \u5f20\u56fe\u7247\uff09\u548c\u4e00\u4e2a\u6d4b\u8bd5\u96c6\uff08\u6700\u540e 10000 \u5f20\u56fe\u7247\uff09 X_train, X_test, y_train, y_test = X[:60000], X[60000:], y[:60000], y[60000:] \u8ba9\u6211\u4eec\u6253\u4e71\u8bad\u7ec3\u96c6\u3002\u8fd9\u53ef\u4ee5\u4fdd\u8bc1\u4ea4\u53c9\u9a8c\u8bc1\u7684\u6bcf\u4e00\u6298\u90fd\u662f\u76f8\u4f3c\uff08\u4f60\u4e0d\u4f1a\u671f\u5f85\u67d0\u4e00\u6298\u7f3a\u5c11\u67d0\u7c7b\u6570\u5b57\uff09\u3002\u800c\u4e14\uff0c\u4e00\u4e9b\u5b66\u4e60\u7b97\u6cd5\u5bf9\u8bad\u7ec3\u6837\u4f8b\u7684\u987a\u5e8f\u654f\u611f\uff0c\u5f53\u5b83\u4eec\u5728\u4e00\u884c\u5f53\u4e2d\u5f97\u5230\u8bb8\u591a\u76f8\u4f3c\u7684\u6837\u4f8b\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5c06\u4f1a\u8868\u73b0\u5f97\u975e\u5e38\u5dee\u3002\u6253\u4e71\u6570\u636e\u96c6\u5c06\u4fdd\u8bc1\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u53d1\u751f\u3002 import numpy as np shuffle_index = np.random.permutation(60000) X_train, y_train = X_train[shuffle_index], y_train[shuffle_index] \u8bad\u7ec3\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668 \u73b0\u5728\u6211\u4eec\u7b80\u5316\u4e00\u4e0b\u95ee\u9898\uff0c\u53ea\u5c1d\u8bd5\u53bb\u8bc6\u522b\u4e00\u4e2a\u6570\u5b57\uff0c\u6bd4\u5982\u8bf4\uff0c\u6570\u5b57 5\u3002\u8fd9\u4e2a\u201c\u6570\u5b57 5 \u68c0\u6d4b\u5668\u201d\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\uff0c\u80fd\u591f\u8bc6\u522b\u4e24\u7c7b\u522b\uff0c\u201c\u662f 5\u201d\u548c\u201c\u975e 5\u201d\u3002\u8ba9\u6211\u4eec\u4e3a\u8fd9\u4e2a\u5206\u7c7b\u4efb\u52a1\u521b\u5efa\u76ee\u6807\u5411\u91cf\uff1a y_train_5 = (y_train == 5) # True for all 5s, False for all other digits. y_test_5 = (y_test == 5) \u73b0\u5728\u8ba9\u6211\u4eec\u6311\u9009\u4e00\u4e2a\u5206\u7c7b\u5668\u53bb\u8bad\u7ec3\u5b83\u3002\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u5206\u7c7b\u5668 SGD\uff0c\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u5f00\u59cb\u3002\u4f7f\u7528 Scikit-Learn \u7684 SGDClassifier \u7c7b\u3002\u8fd9\u4e2a\u5206\u7c7b\u5668\u6709\u4e00\u4e2a\u597d\u5904\u662f\u80fd\u591f\u9ad8\u6548\u5730\u5904\u7406\u975e\u5e38\u5927\u7684\u6570\u636e\u96c6\u3002\u8fd9\u90e8\u5206\u539f\u56e0\u5728\u4e8eSGD\u4e00\u6b21\u53ea\u5904\u7406\u4e00\u6761\u6570\u636e\uff0c\u8fd9\u4e5f\u4f7f\u5f97 SGD \u9002\u5408\u5728\u7ebf\u5b66\u4e60\uff08online learning\uff09\u3002\u6211\u4eec\u5728\u7a0d\u540e\u4f1a\u770b\u5230\u5b83\u3002\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a SGDClassifier \u548c\u5728\u6574\u4e2a\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u5b83\u3002 from sklearn.linear_model import SGDClassifier sgd_clf = SGDClassifier(random_state=42) sgd_clf.fit(X_train, y_train_5) SGDClassifier \u4f9d\u8d56\u4e8e\u8bad\u7ec3\u96c6\u7684\u968f\u673a\u7a0b\u5ea6\uff08\u6240\u4ee5\u88ab\u547d\u540d\u4e3a stochastic\uff0c\u968f\u673a\u4e4b\u4e49\uff09\u3002\u5982\u679c\u4f60\u60f3\u91cd\u73b0\u7ed3\u679c\uff0c\u4f60\u5e94\u8be5\u56fa\u5b9a\u53c2\u6570 random_state \u73b0\u5728\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u67e5\u51fa\u6570\u5b57 5 \u7684\u56fe\u7247\u3002 >>> sgd_clf.predict([some_digit]) array([ True], dtype=bool) \u5206\u7c7b\u5668\u731c\u6d4b\u8fd9\u4e2a\u6570\u5b57\u4ee3\u8868 5\uff08 True \uff09\u3002\u770b\u8d77\u6765\u5728\u8fd9\u4e2a\u4f8b\u5b50\u5f53\u4e2d\uff0c\u5b83\u731c\u5bf9\u4e86\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u8bc4\u4f30\u8fd9\u4e2a\u6a21\u578b\u7684\u6027\u80fd\u3002 \u5bf9\u6027\u80fd\u7684\u8bc4\u4f30 \u8bc4\u4f30\u4e00\u4e2a\u5206\u7c7b\u5668\uff0c\u901a\u5e38\u6bd4\u8bc4\u4f30\u4e00\u4e2a\u56de\u5f52\u5668\u66f4\u52a0\u7384\u5b66\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u4f1a\u82b1\u5927\u91cf\u7684\u7bc7\u5e45\u5728\u8fd9\u4e2a\u8bdd\u9898\u4e0a\u3002\u6709\u8bb8\u591a\u91cf\u5ea6\u6027\u80fd\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u62ff\u6765\u4e00\u676f\u5496\u5561\u548c\u51c6\u5907\u5b66\u4e60\u8bb8\u591a\u65b0\u6982\u5ff5\u548c\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\u5427\u3002 \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6d4b\u91cf\u51c6\u786e\u6027 \u8bc4\u4f30\u4e00\u4e2a\u6a21\u578b\u7684\u597d\u65b9\u6cd5\u662f\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u5c31\u50cf\u7b2c\u4e8c\u7ae0\u6240\u505a\u7684\u90a3\u6837\u3002 \u5b9e\u73b0\u4ea4\u53c9\u9a8c\u8bc1 \u5728\u4ea4\u53c9\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\uff0c\u6709\u65f6\u5019\u4f60\u4f1a\u9700\u8981\u66f4\u591a\u7684\u63a7\u5236\u6743\uff0c\u76f8\u8f83\u4e8e\u51fd\u6570 cross_val_score() \u6216\u8005\u5176\u4ed6\u76f8\u4f3c\u51fd\u6570\u6240\u63d0\u4f9b\u7684\u529f\u80fd\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u5b9e\u73b0\u4f60\u81ea\u5df1\u7248\u672c\u7684\u4ea4\u53c9\u9a8c\u8bc1\u3002\u4e8b\u5b9e\u4e0a\u5b83\u76f8\u5f53\u7b80\u5355\u3002\u4ee5\u4e0b\u4ee3\u7801\u7c97\u7565\u5730\u505a\u4e86\u548c cross_val_score() \u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u5e76\u4e14\u8f93\u51fa\u76f8\u540c\u7684\u7ed3\u679c\u3002 from sklearn.model_selection import StratifiedKFold from sklearn.base import clone skfolds = StratifiedKFold(n_splits=3, random_state=42) for train_index, test_index in skfolds.split(X_train, y_train_5): clone_clf = clone(sgd_clf) X_train_folds = X_train[train_index] y_train_folds = (y_train_5[train_index]) X_test_fold = X_train[test_index] y_test_fold = (y_train_5[test_index]) clone_clf.fit(X_train_folds, y_train_folds) y_pred = clone_clf.predict(X_test_fold) n_correct = sum(y_pred == y_test_fold) print(n_correct / len(y_pred)) # prints 0.9502, 0.96565 and 0.96495 StratifiedKFold \u7c7b\u5b9e\u73b0\u4e86\u5206\u5c42\u91c7\u6837\uff08\u8be6\u89c1\u7b2c\u4e8c\u7ae0\u7684\u89e3\u91ca\uff09\uff0c\u751f\u6210\u7684\u6298\uff08fold\uff09\u5305\u542b\u4e86\u5404\u7c7b\u76f8\u5e94\u6bd4\u4f8b\u7684\u6837\u4f8b\u3002\u5728\u6bcf\u4e00\u6b21\u8fed\u4ee3\uff0c\u4e0a\u8ff0\u4ee3\u7801\u751f\u6210\u5206\u7c7b\u5668\u7684\u4e00\u4e2a\u514b\u9686\u7248\u672c\uff0c\u5728\u8bad\u7ec3\u6298\uff08training folds\uff09\u7684\u514b\u9686\u7248\u672c\u4e0a\u8fdb\u884c\u8bad\uff0c\u5728\u6d4b\u8bd5\u6298\uff08test folds\uff09\u4e0a\u8fdb\u884c\u9884\u6d4b\u3002\u7136\u540e\u5b83\u8ba1\u7b97\u51fa\u88ab\u6b63\u786e\u9884\u6d4b\u7684\u6570\u76ee\u548c\u8f93\u51fa\u6b63\u786e\u9884\u6d4b\u7684\u6bd4\u4f8b\u3002 \u8ba9\u6211\u4eec\u4f7f\u7528 cross_val_score() \u51fd\u6570\u6765\u8bc4\u4f30 SGDClassifier \u6a21\u578b\uff0c\u540c\u65f6\u4f7f\u7528 K \u6298\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u6b64\u5904\u8ba9 k=3 \u3002\u8bb0\u4f4f\uff1aK \u6298\u4ea4\u53c9\u9a8c\u8bc1\u610f\u5473\u7740\u628a\u8bad\u7ec3\u96c6\u5206\u6210 K \u6298\uff08\u6b64\u5904 3 \u6298\uff09\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u6a21\u578b\u5bf9\u5176\u4e2d\u4e00\u6298\u8fdb\u884c\u9884\u6d4b\uff0c\u5bf9\u5176\u4ed6\u6298\u8fdb\u884c\u8bad\u7ec3\u3002 >>> from sklearn.model_selection import cross_val_score >>> cross_val_score(sgd_clf, X_train, y_train_5, cv=3, scoring=\"accuracy\") array([ 0.9502 , 0.96565, 0.96495] \u54c7\uff01\u5728\u4ea4\u53c9\u9a8c\u8bc1\u4e0a\u6709\u5927\u4e8e 95% \u7684\u7cbe\u5ea6\uff08accuracy\uff09\uff1f\u8fd9\u770b\u8d77\u6765\u5f88\u4ee4\u4eba\u5403\u60ca\u3002\u5148\u522b\u9ad8\u5174\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u975e\u5e38\u7b28\u7684\u5206\u7c7b\u5668\u53bb\u5206\u7c7b\uff0c\u770b\u770b\u5176\u5728\u201c\u975e 5\u201d\u8fd9\u4e2a\u7c7b\u4e0a\u7684\u8868\u73b0\u3002 from sklearn.base import BaseEstimator class Never5Classifier(BaseEstimator): def fit(self, X, y=None): pass def predict(self, X): return np.zeros((len(X), 1), dtype=bool) \u4f60\u80fd\u731c\u5230\u8fd9\u4e2a\u6a21\u578b\u7684\u7cbe\u5ea6\u5417\uff1f\u63ed\u6653\u8c1c\u5e95\uff1a >>> never_5_clf = Never5Classifier() >>> cross_val_score(never_5_clf, X_train, y_train_5, cv=3, scoring=\"accuracy\") array([ 0.909 , 0.90715, 0.9128 ]) \u6ca1\u9519\uff0c\u8fd9\u4e2a\u7b28\u7684\u5206\u7c7b\u5668\u4e5f\u6709 90% \u7684\u7cbe\u5ea6\u3002\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709 10% \u7684\u56fe\u7247\u662f\u6570\u5b57 5\uff0c\u6240\u4ee5\u4f60\u603b\u662f\u731c\u6d4b\u67d0\u5f20\u56fe\u7247\u4e0d\u662f 5\uff0c\u4f60\u4e5f\u4f1a\u670990%\u7684\u53ef\u80fd\u6027\u662f\u5bf9\u7684\u3002 \u8fd9\u8bc1\u660e\u4e86\u4e3a\u4ec0\u4e48\u7cbe\u5ea6\u901a\u5e38\u6765\u8bf4\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u6027\u80fd\u5ea6\u91cf\u6307\u6807\uff0c\u7279\u522b\u662f\u5f53\u4f60\u5904\u7406\u6709\u504f\u5dee\u7684\u6570\u636e\u96c6\uff0c\u6bd4\u65b9\u8bf4\u5176\u4e2d\u4e00\u4e9b\u7c7b\u6bd4\u5176\u4ed6\u7c7b\u9891\u7e41\u5f97\u591a\u3002 \u6df7\u6dc6\u77e9\u9635 \u5bf9\u5206\u7c7b\u5668\u6765\u8bf4\uff0c\u4e00\u4e2a\u597d\u5f97\u591a\u7684\u6027\u80fd\u8bc4\u4f30\u6307\u6807\u662f\u6df7\u6dc6\u77e9\u9635\u3002\u5927\u4f53\u601d\u8def\u662f\uff1a\u8f93\u51fa\u7c7b\u522bA\u88ab\u5206\u7c7b\u6210\u7c7b\u522b B \u7684\u6b21\u6570\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e3a\u4e86\u77e5\u9053\u5206\u7c7b\u5668\u5c06 5 \u8bef\u5206\u4e3a 3 \u7684\u6b21\u6570\uff0c\u4f60\u9700\u8981\u67e5\u770b\u6df7\u6dc6\u77e9\u9635\u7684\u7b2c\u4e94\u884c\u7b2c\u4e09\u5217\u3002 \u4e3a\u4e86\u8ba1\u7b97\u6df7\u6dc6\u77e9\u9635\uff0c\u9996\u5148\u4f60\u9700\u8981\u6709\u4e00\u7cfb\u5217\u7684\u9884\u6d4b\u503c\uff0c\u8fd9\u6837\u624d\u80fd\u5c06\u9884\u6d4b\u503c\u4e0e\u771f\u5b9e\u503c\u505a\u6bd4\u8f83\u3002\u4f60\u6216\u8bb8\u60f3\u5728\u6d4b\u8bd5\u96c6\u4e0a\u505a\u9884\u6d4b\u3002\u4f46\u662f\u6211\u4eec\u73b0\u5728\u5148\u4e0d\u78b0\u5b83\u3002\uff08\u8bb0\u4f4f\uff0c\u53ea\u6709\u5f53\u4f60\u5904\u4e8e\u9879\u76ee\u7684\u5c3e\u58f0\uff0c\u5f53\u4f60\u51c6\u5907\u4e0a\u7ebf\u4e00\u4e2a\u5206\u7c7b\u5668\u7684\u65f6\u5019\uff0c\u4f60\u624d\u5e94\u8be5\u4f7f\u7528\u6d4b\u8bd5\u96c6\uff09\u3002\u76f8\u53cd\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 cross_val_predict() \u51fd\u6570 from sklearn.model_selection import cross_val_predict y_train_pred = cross_val_predict(sgd_clf, X_train, y_train_5, cv=3) \u5c31\u50cf cross_val_score() \uff0c cross_val_predict() \u4e5f\u4f7f\u7528 K \u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002\u5b83\u4e0d\u662f\u8fd4\u56de\u4e00\u4e2a\u8bc4\u4f30\u5206\u6570\uff0c\u800c\u662f\u8fd4\u56de\u57fa\u4e8e\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6298\u505a\u51fa\u7684\u4e00\u4e2a\u9884\u6d4b\u503c\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8bad\u7ec3\u96c6\u7684\u6837\u4f8b\uff0c\u4f60\u5f97\u5230\u4e00\u4e2a\u5e72\u51c0\u7684\u9884\u6d4b\uff08\u201c\u5e72\u51c0\u201d\u662f\u8bf4\u4e00\u4e2a\u6a21\u578b\u5728\u8bad\u7ec3\u8fc7\u7a0b\u5f53\u4e2d\u6ca1\u6709\u7528\u5230\u6d4b\u8bd5\u96c6\u7684\u6570\u636e\uff09\u3002 \u73b0\u5728\u4f7f\u7528 confusion_matrix() \u51fd\u6570\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u6df7\u6dc6\u77e9\u9635\u3002\u4f20\u9012\u76ee\u6807\u7c7b( y_train_5 )\u548c\u9884\u6d4b\u7c7b\uff08 y_train_pred \uff09\u7ed9\u5b83\u3002 >>> from sklearn.metrics import confusion_matrix >>> confusion_matrix(y_train_5, y_train_pred) array([[53272, 1307], [ 1077, 4344]]) \u6df7\u6dc6\u77e9\u9635\u4e2d\u7684\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u5b9e\u9645\u7684\u7c7b, \u800c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u9884\u6d4b\u7684\u7c7b\u3002\u8be5\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u8ba4\u4e3a\u201c\u975e 5\u201d\uff08\u53cd\u4f8b\uff09\u4e2d\u7684 53272 \u5f20\u88ab\u6b63\u786e\u5f52\u7c7b\u4e3a \u201c\u975e 5\u201d\uff08\u4ed6\u4eec\u88ab\u79f0\u4e3a\u771f\u53cd\u4f8b\uff0ctrue negatives\uff09, \u800c\u5176\u4f59 1307 \u88ab\u9519\u8bef\u5f52\u7c7b\u4e3a\"\u662f 5\" \uff08\u5047\u6b63\u4f8b\uff0cfalse positives\uff09\u3002\u7b2c\u4e8c\u884c\u8ba4\u4e3a\u201c\u662f 5\u201d \uff08\u6b63\u4f8b\uff09\u4e2d\u7684 1077 \u88ab\u9519\u8bef\u5730\u5f52\u7c7b\u4e3a\u201c\u975e 5\u201d\uff08\u5047\u53cd\u4f8b\uff0cfalse negatives\uff09\uff0c\u5176\u4f59 4344 \u6b63\u786e\u5206\u7c7b\u4e3a \u201c\u662f 5\u201d\u7c7b\uff08\u771f\u6b63\u4f8b\uff0ctrue positives\uff09\u3002\u4e00\u4e2a\u5b8c\u7f8e\u7684\u5206\u7c7b\u5668\u5c06\u53ea\u6709\u771f\u53cd\u4f8b\u548c\u771f\u6b63\u4f8b\uff0c\u6240\u4ee5\u6df7\u6dc6\u77e9\u9635\u7684\u975e\u96f6\u503c\u4ec5\u5728\u5176\u4e3b\u5bf9\u89d2\u7ebf\uff08\u5de6\u4e0a\u81f3\u53f3\u4e0b\uff09\u3002 >>> confusion_matrix(y_train_5, y_train_perfect_predictions) array([[54579, 0], [ 0, 5421]]) \u6df7\u6dc6\u77e9\u9635\u53ef\u4ee5\u63d0\u4f9b\u5f88\u591a\u4fe1\u606f\u3002\u6709\u65f6\u5019\u4f60\u4f1a\u60f3\u8981\u66f4\u52a0\u7b80\u660e\u7684\u6307\u6807\u3002\u4e00\u4e2a\u6709\u8da3\u7684\u6307\u6807\u662f\u6b63\u4f8b\u9884\u6d4b\u7684\u7cbe\u5ea6\uff0c\u4e5f\u53eb\u505a\u5206\u7c7b\u5668\u7684\u51c6\u786e\u7387\uff08precision\uff09\u3002 \u516c\u5f0f 3-1 \u51c6\u786e\u7387 \u5176\u4e2d TP \u662f\u771f\u6b63\u4f8b\u7684\u6570\u76ee\uff0cFP \u662f\u5047\u6b63\u4f8b\u7684\u6570\u76ee\u3002 \u60f3\u8981\u4e00\u4e2a\u5b8c\u7f8e\u7684\u51c6\u786e\u7387\uff0c\u4e00\u4e2a\u5e73\u51e1\u7684\u65b9\u6cd5\u662f\u6784\u9020\u4e00\u4e2a\u5355\u4e00\u6b63\u4f8b\u7684\u9884\u6d4b\u548c\u786e\u4fdd\u8fd9\u4e2a\u9884\u6d4b\u662f\u6b63\u786e\u7684\uff08 precision = 1/1 = 100% \uff09\u3002\u4f46\u662f\u8fd9\u4ec0\u4e48\u7528\uff0c\u56e0\u4e3a\u5206\u7c7b\u5668\u4f1a\u5ffd\u7565\u6240\u6709\u6837\u4f8b\uff0c\u9664\u4e86\u90a3\u4e00\u4e2a\u6b63\u4f8b\u3002\u6240\u4ee5\u51c6\u786e\u7387\u4e00\u822c\u4f1a\u4f34\u968f\u53e6\u4e00\u4e2a\u6307\u6807\u4e00\u8d77\u4f7f\u7528\uff0c\u8fd9\u4e2a\u6307\u6807\u53eb\u505a\u53ec\u56de\u7387\uff08recall\uff09\uff0c\u4e5f\u53eb\u505a\u654f\u611f\u5ea6\uff08sensitivity\uff09\u6216\u8005\u771f\u6b63\u4f8b\u7387\uff08true positive rate\uff0c TPR\uff09\u3002\u8fd9\u662f\u6b63\u4f8b\u88ab\u5206\u7c7b\u5668\u6b63\u786e\u63a2\u6d4b\u51fa\u7684\u6bd4\u7387\u3002 \u516c\u5f0f 3-2 Recall FN \u662f\u5047\u53cd\u4f8b\u7684\u6570\u76ee\u3002 \u5982\u679c\u4f60\u5bf9\u4e8e\u6df7\u6dc6\u77e9\u9635\u611f\u5230\u56f0\u60d1\uff0c\u56fe 3-2 \u5c06\u5bf9\u4f60\u6709\u5e2e\u52a9 \u51c6\u786e\u7387\u4e0e\u53ec\u56de\u7387 Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e9b\u51fd\u6570\u53bb\u8ba1\u7b97\u5206\u7c7b\u5668\u7684\u6307\u6807\uff0c\u5305\u62ec\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u3002 >>> from sklearn.metrics import precision_score, recall_score >>> precision_score(y_train_5, y_pred) # == 4344 / (4344 + 1307) 0.76871350203503808 >>> recall_score(y_train_5, y_train_pred) # == 4344 / (4344 + 1077) 0.79136690647482011 \u5f53\u4f60\u53bb\u89c2\u5bdf\u7cbe\u5ea6\u7684\u65f6\u5019\uff0c\u4f60\u7684\u201c\u6570\u5b57 5 \u63a2\u6d4b\u5668\u201d\u770b\u8d77\u6765\u8fd8\u4e0d\u591f\u597d\u3002\u5f53\u5b83\u58f0\u660e\u67d0\u5f20\u56fe\u7247\u662f 5 \u7684\u65f6\u5019\uff0c\u5b83\u53ea\u6709 77% \u7684\u53ef\u80fd\u6027\u662f\u6b63\u786e\u7684\u3002\u800c\u4e14\uff0c\u5b83\u4e5f\u53ea\u68c0\u6d4b\u51fa\u201c\u662f 5\u201d\u7c7b\u56fe\u7247\u5f53\u4e2d\u7684 79%\u3002 \u901a\u5e38\u7ed3\u5408\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u4f1a\u66f4\u52a0\u65b9\u4fbf\uff0c\u8fd9\u4e2a\u6307\u6807\u53eb\u505a\u201cF1 \u503c\u201d\uff0c\u7279\u522b\u662f\u5f53\u4f60\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u53bb\u6bd4\u8f83\u4e24\u4e2a\u5206\u7c7b\u5668\u7684\u4f18\u52a3\u7684\u65f6\u5019\u3002F1 \u503c\u662f\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5e73\u5747\u3002\u666e\u901a\u7684\u5e73\u5747\u503c\u5e73\u7b49\u5730\u770b\u5f85\u6240\u6709\u7684\u503c\uff0c\u800c\u8c03\u548c\u5e73\u5747\u4f1a\u7ed9\u5c0f\u7684\u503c\u66f4\u5927\u7684\u6743\u91cd\u3002\u6240\u4ee5\uff0c\u8981\u60f3\u5206\u7c7b\u5668\u5f97\u5230\u4e00\u4e2a\u9ad8\u7684 F1 \u503c\uff0c\u9700\u8981\u53ec\u56de\u7387\u548c\u51c6\u786e\u7387\u540c\u65f6\u9ad8\u3002 \u516c\u5f0f 3-3 F1 \u503c \u4e3a\u4e86\u8ba1\u7b97 F1 \u503c\uff0c\u7b80\u5355\u8c03\u7528 f1_score() >>> from sklearn.metrics import f1_score >>> f1_score(y_train_5, y_pred) 0.78468208092485547 F1 \u652f\u6301\u90a3\u4e9b\u6709\u7740\u76f8\u8fd1\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u5206\u7c7b\u5668\u3002\u8fd9\u4e0d\u4f1a\u603b\u662f\u4f60\u60f3\u8981\u7684\u3002\u6709\u7684\u573a\u666f\u4f60\u4f1a\u7edd\u5927\u7a0b\u5ea6\u5730\u5173\u5fc3\u51c6\u786e\u7387\uff0c\u800c\u53e6\u5916\u4e00\u4e9b\u573a\u666f\u4f60\u4f1a\u66f4\u5173\u5fc3\u53ec\u56de\u7387\u3002\u4e3e\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668\u53bb\u68c0\u6d4b\u89c6\u9891\u662f\u5426\u9002\u5408\u513f\u7ae5\u89c2\u770b\uff0c\u4f60\u4f1a\u503e\u5411\u9009\u62e9\u90a3\u79cd\u5373\u4fbf\u62d2\u7edd\u4e86\u5f88\u591a\u597d\u89c6\u9891\u3001\u4f46\u4fdd\u8bc1\u6240\u4fdd\u7559\u7684\u89c6\u9891\u90fd\u662f\u597d\uff08\u9ad8\u51c6\u786e\u7387\uff09\u7684\u5206\u7c7b\u5668\uff0c\u800c\u4e0d\u662f\u90a3\u79cd\u9ad8\u53ec\u56de\u7387\u3001\u4f46\u8ba9\u574f\u89c6\u9891\u6df7\u5165\u7684\u5206\u7c7b\u5668\uff08\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f60\u6216\u8bb8\u60f3\u589e\u52a0\u4eba\u5de5\u53bb\u68c0\u6d4b\u5206\u7c7b\u5668\u9009\u62e9\u51fa\u6765\u7684\u89c6\u9891\uff09\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u52a0\u5165\u4f60\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668\u53bb\u68c0\u6d4b\u76d1\u63a7\u56fe\u50cf\u5f53\u4e2d\u7684\u7a83\u8d3c\uff0c\u6709\u7740 30% \u51c6\u786e\u7387\u300199% \u53ec\u56de\u7387\u7684\u5206\u7c7b\u5668\u6216\u8bb8\u662f\u5408\u9002\u7684\uff08\u5f53\u7136\uff0c\u8b66\u536b\u4f1a\u5f97\u5230\u4e00\u4e9b\u9519\u8bef\u7684\u62a5\u8b66\uff0c\u4f46\u662f\u51e0\u4e4e\u6240\u6709\u7684\u7a83\u8d3c\u90fd\u4f1a\u88ab\u6293\u5230\uff09\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u4f60\u4e0d\u80fd\u540c\u65f6\u62e5\u6709\u4e24\u8005\u3002\u589e\u52a0\u51c6\u786e\u7387\u4f1a\u964d\u4f4e\u53ec\u56de\u7387\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8fd9\u53eb\u505a\u51c6\u786e\u7387\u4e0e\u53ec\u56de\u7387\u4e4b\u95f4\u7684\u6298\u8877\u3002 \u51c6\u786e\u7387/\u53ec\u56de\u7387\u4e4b\u95f4\u7684\u6298\u8877 \u4e3a\u4e86\u5f04\u61c2\u8fd9\u4e2a\u6298\u8877\uff0c\u6211\u4eec\u770b\u4e00\u4e0b SGDClassifier \u662f\u5982\u4f55\u505a\u5206\u7c7b\u51b3\u7b56\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u4f8b\uff0c\u5b83\u6839\u636e\u51b3\u7b56\u51fd\u6570\u8ba1\u7b97\u5206\u6570,\u5982\u679c\u8fd9\u4e2a\u5206\u6570\u5927\u4e8e\u4e00\u4e2a\u9608\u503c\uff0c\u5b83\u4f1a\u5c06\u6837\u4f8b\u5206\u914d\u7ed9\u6b63\u4f8b\uff0c\u5426\u5219\u5b83\u5c06\u5206\u914d\u7ed9\u53cd\u4f8b\u3002\u56fe 3-3 \u663e\u793a\u4e86\u51e0\u4e2a\u6570\u5b57\u4ece\u5de6\u8fb9\u7684\u6700\u4f4e\u5206\u6570\u6392\u5230\u53f3\u8fb9\u7684\u6700\u9ad8\u5206\u3002\u5047\u8bbe\u51b3\u7b56\u9608\u503c\u4f4d\u4e8e\u4e2d\u95f4\u7684\u7bad\u5934\uff08\u4ecb\u4e8e\u4e24\u4e2a 5 \u4e4b\u95f4\uff09\uff1a\u60a8\u5c06\u53d1\u73b04\u4e2a\u771f\u6b63\u4f8b\uff08\u6570\u5b57 5\uff09\u548c\u4e00\u4e2a\u5047\u6b63\u4f8b\uff08\u6570\u5b57 6\uff09\u5728\u8be5\u9608\u503c\u7684\u53f3\u4fa7\u3002\u56e0\u6b64,\u4f7f\u7528\u8be5\u9608\u503c,\u51c6\u786e\u7387\u4e3a 80%\uff084/5\uff09\u3002\u4f46\u5b9e\u9645\u6709 6 \u4e2a\u6570\u5b57 5\uff0c\u5206\u7c7b\u5668\u53ea\u68c0\u6d4b 4 \u4e2a, \u6240\u4ee5\u53ec\u56de\u662f 67% \uff084/6\uff09\u3002\u73b0\u5728\uff0c\u5982\u679c\u4f60 \u63d0\u9ad8\u9608\u503c\uff08\u79fb\u52a8\u5230\u53f3\u4fa7\u7684\u7bad\u5934\uff09\uff0c\u5047\u6b63\u4f8b\uff08\u6570\u5b57 6\uff09\u6210\u4e3a\u4e00\u4e2a\u771f\u53cd\u4f8b\uff0c\u4ece\u800c\u63d0\u9ad8\u51c6\u786e\u7387\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9ad8\u8fbe 100%\uff09\uff0c\u4f46\u4e00\u4e2a\u771f\u6b63\u4f8b \u53d8\u6210\u5047\u53cd\u4f8b\uff0c\u53ec\u56de\u7387\u964d\u4f4e\u5230 50%\u3002\u76f8\u53cd\uff0c\u964d\u4f4e\u9608\u503c\u53ef\u63d0\u9ad8\u53ec\u56de\u7387\u3001\u964d\u4f4e\u51c6\u786e\u7387\u3002 ![\u56fe3-3 \u51b3\u7b56\u9608\u503c\u4e0e\u51c6\u786e\u5ea6/\u53ec\u56de\u7387\u6298\u8877][../images/chapter_3/chapter3.3.jpeg] Scikit-Learn \u4e0d\u8ba9\u4f60\u76f4\u63a5\u8bbe\u7f6e\u9608\u503c\uff0c\u4f46\u662f\u5b83\u7ed9\u4f60\u63d0\u4f9b\u4e86\u8bbe\u7f6e\u51b3\u7b56\u5206\u6570\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u51b3\u7b56\u5206\u6570\u53ef\u4ee5\u7528\u6765\u4ea7\u751f\u9884\u6d4b\u3002\u5b83\u4e0d\u662f\u8c03\u7528\u5206\u7c7b\u5668\u7684 predict() \u65b9\u6cd5\uff0c\u800c\u662f\u8c03\u7528 decision_function() \u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u6bcf\u4e00\u4e2a\u6837\u4f8b\u7684\u5206\u6570\u503c\uff0c\u7136\u540e\u57fa\u4e8e\u8fd9\u4e2a\u5206\u6570\u503c\uff0c\u4f7f\u7528\u4f60\u60f3\u8981\u7684\u4efb\u4f55\u9608\u503c\u505a\u51fa\u9884\u6d4b\u3002 >>> y_scores = sgd_clf.decision_function([some_digit]) >>> y_scores array([ 161855.74572176]) >>> threshold = 0 >>> y_some_digit_pred = (y_scores > threshold) array([ True], dtype=bool) SGDClassifier \u7528\u4e86\u4e00\u4e2a\u7b49\u4e8e 0 \u7684\u9608\u503c\uff0c\u6240\u4ee5\u524d\u9762\u7684\u4ee3\u7801\u8fd4\u56de\u4e86\u8ddf predict() \u65b9\u6cd5\u4e00\u6837\u7684\u7ed3\u679c\uff08\u90fd\u8fd4\u56de\u4e86 true \uff09\u3002\u8ba9\u6211\u4eec\u63d0\u9ad8\u8fd9\u4e2a\u9608\u503c\uff1a >>> threshold = 200000 >>> y_some_digit_pred = (y_scores > threshold) >>> y_some_digit_pred array([False], dtype=bool) \u8fd9\u8bc1\u660e\u4e86\u63d0\u9ad8\u9608\u503c\u4f1a\u964d\u8c03\u53ec\u56de\u7387\u3002\u8fd9\u4e2a\u56fe\u7247\u5b9e\u9645\u5c31\u662f\u6570\u5b57 5\uff0c\u5f53\u9608\u503c\u7b49\u4e8e 0 \u7684\u65f6\u5019\uff0c\u5206\u7c7b\u5668\u53ef\u4ee5\u63a2\u6d4b\u5230\u8fd9\u662f\u4e00\u4e2a 5\uff0c\u5f53\u9608\u503c\u63d0\u9ad8\u5230 20000 \u7684\u65f6\u5019\uff0c\u5206\u7c7b\u5668\u5c06\u4e0d\u80fd\u63a2\u6d4b\u5230\u8fd9\u662f\u6570\u5b57 5\u3002 \u90a3\u4e48\uff0c\u4f60\u5e94\u8be5\u5982\u4f55\u4f7f\u7528\u54ea\u4e2a\u9608\u503c\u5462\uff1f\u9996\u5148\uff0c\u4f60\u9700\u8981\u518d\u6b21\u4f7f\u7528 cross_val_predict() \u5f97\u5230\u6bcf\u4e00\u4e2a\u6837\u4f8b\u7684\u5206\u6570\u503c\uff0c\u4f46\u662f\u8fd9\u4e00\u6b21\u6307\u5b9a\u8fd4\u56de\u4e00\u4e2a\u51b3\u7b56\u5206\u6570\uff0c\u800c\u4e0d\u662f\u9884\u6d4b\u503c\u3002 y_scores = cross_val_predict(sgd_clf, X_train, y_train_5, cv=3, method=\"decision_function\") \u73b0\u5728\u6709\u4e86\u8fd9\u4e9b\u5206\u6570\u503c\u3002\u5bf9\u4e8e\u4efb\u4f55\u53ef\u80fd\u7684\u9608\u503c\uff0c\u4f7f\u7528 precision_recall_curve() ,\u4f60\u90fd\u53ef\u4ee5\u8ba1\u7b97\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387: from sklearn.metrics import precision_recall_curve precisions, recalls, thresholds = precision_recall_curve(y_train_5, y_scores) \u6700\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Matplotlib \u753b\u51fa\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\uff08\u56fe 3-4\uff09\uff0c\u8fd9\u91cc\u628a\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u5f53\u4f5c\u662f\u9608\u503c\u7684\u4e00\u4e2a\u51fd\u6570\u3002 def plot_precision_recall_vs_threshold(precisions, recalls, thresholds): plt.plot(thresholds, precisions[:-1], \"b--\", label=\"Precision\") plt.plot(thresholds, recalls[:-1], \"g-\", label=\"Recall\") plt.xlabel(\"Threshold\") plt.legend(loc=\"upper left\") plt.ylim([0, 1]) plot_precision_recall_vs_threshold(precisions, recalls, thresholds) plt.show() \u4f60\u4e5f\u8bb8\u4f1a\u597d\u5947\u4e3a\u4ec0\u4e48\u51c6\u786e\u7387\u66f2\u7ebf\u6bd4\u53ec\u56de\u7387\u66f2\u7ebf\u66f4\u52a0\u8d77\u4f0f\u4e0d\u5e73\u3002\u539f\u56e0\u662f\u51c6\u786e\u7387\u6709\u65f6\u5019\u4f1a\u964d\u4f4e\uff0c\u5c3d\u7ba1\u5f53\u4f60\u63d0\u9ad8\u9608\u503c\u7684\u65f6\u5019\uff0c\u901a\u5e38\u6765\u8bf4\u51c6\u786e\u7387\u4f1a\u968f\u4e4b\u63d0\u9ad8\u3002\u56de\u5934\u770b\u56fe 3-3\uff0c\u7559\u610f\u5f53\u4f60\u4ece\u4e2d\u95f4\u7bad\u5934\u5f00\u59cb\u7136\u540e\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u6570\u5b57\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a \u51c6\u786e\u7387\u4f1a\u7531 4/5\uff0880%\uff09\u964d\u5230 3/4\uff0875%\uff09\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u9608\u503c\u63d0\u9ad8\u65f6\u5019\uff0c\u53ec\u56de\u7387\u53ea\u4f1a\u964d\u4f4e\u3002\u8fd9\u4e5f\u5c31\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u53ec\u56de\u7387\u7684\u66f2\u7ebf\u66f4\u52a0\u5e73\u6ed1\u3002 \u73b0\u5728\u4f60\u53ef\u4ee5\u9009\u62e9\u9002\u5408\u4f60\u4efb\u52a1\u7684\u6700\u4f73\u9608\u503c\u3002\u53e6\u4e00\u4e2a\u9009\u51fa\u597d\u7684\u51c6\u786e\u7387/\u53ec\u56de\u7387\u6298\u8877\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u753b\u51fa\u51c6\u786e\u7387\u5bf9\u53ec\u56de\u7387\u7684\u66f2\u7ebf\uff0c\u5982\u56fe 3-5 \u6240\u793a\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u53ec\u56de\u7387\u5728 80% \u5de6\u53f3\u7684\u65f6\u5019\uff0c\u51c6\u786e\u7387\u6025\u5267\u4e0b\u964d\u3002\u4f60\u53ef\u80fd\u4f1a\u60f3\u9009\u62e9\u5728\u6025\u5267\u4e0b\u964d\u4e4b\u524d\u9009\u62e9\u51fa\u4e00\u4e2a\u51c6\u786e\u7387/\u53ec\u56de\u7387\u6298\u8877\u70b9\u3002\u6bd4\u5982\u8bf4\uff0c\u5728\u53ec\u56de\u7387 60% \u5de6\u53f3\u7684\u70b9\u3002\u5f53\u7136\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u9879\u76ee\u9700\u6c42\u3002 \u6211\u4eec\u5047\u8bbe\u4f60\u51b3\u5b9a\u8fbe\u5230 90% \u7684\u51c6\u786e\u7387\u3002\u4f60\u67e5\u9605\u7b2c\u4e00\u5e45\u56fe\uff08\u653e\u5927\u4e00\u4e9b\uff09\uff0c\u5728 70000 \u9644\u8fd1\u627e\u5230\u4e00\u4e2a\u9608\u503c\u3002\u4e3a\u4e86\u4f5c\u51fa\u9884\u6d4b\uff08\u76ee\u524d\u4e3a\u6b62\u53ea\u5728\u8bad\u7ec3\u96c6\u4e0a\u9884\u6d4b\uff09\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u5206\u7c7b\u5668\u7684 predict() \u65b9\u6cd5\u3002 y_train_pred_90 = (y_scores > 70000) \u8ba9\u6211\u4eec\u68c0\u67e5\u8fd9\u4e9b\u9884\u6d4b\u7684\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\uff1a >>> precision_score(y_train_5, y_train_pred_90) 0.8998702983138781 >>> recall_score(y_train_5, y_train_pred_90) 0.63991883416343853 \u5f88\u68d2\uff01\u4f60\u62e5\u6709\u4e86\u4e00\u4e2a\uff08\u8fd1\u4f3c\uff09 90% \u51c6\u786e\u7387\u7684\u5206\u7c7b\u5668\u3002\u5b83\u76f8\u5f53\u5bb9\u6613\u53bb\u521b\u5efa\u4e00\u4e2a\u4efb\u610f\u51c6\u786e\u7387\u7684\u5206\u7c7b\u5668\uff0c\u53ea\u8981\u5c06\u9608\u503c\u8bbe\u7f6e\u5f97\u8db3\u591f\u9ad8\u3002\u4f46\u662f\uff0c\u4e00\u4e2a\u9ad8\u51c6\u786e\u7387\u7684\u5206\u7c7b\u5668\u4e0d\u662f\u975e\u5e38\u6709\u7528\uff0c\u5982\u679c\u5b83\u7684\u53ec\u56de\u7387\u592a\u4f4e\uff01 \u5982\u679c\u6709\u4eba\u8bf4\u201c\u8ba9\u6211\u4eec\u8fbe\u5230 99% \u7684\u51c6\u786e\u7387\u201d\uff0c\u4f60\u5e94\u8be5\u95ee\u201c\u76f8\u5e94\u7684\u53ec\u56de\u7387\u662f\u591a\u5c11\uff1f\u201d ROC \u66f2\u7ebf \u53d7\u8bd5\u8005\u5de5\u4f5c\u7279\u5f81\uff08ROC\uff09\u66f2\u7ebf\u662f\u53e6\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\u5e38\u7528\u7684\u5de5\u5177\u3002\u5b83\u975e\u5e38\u7c7b\u4f3c\u4e0e\u51c6\u786e\u7387/\u53ec\u56de\u7387\u66f2\u7ebf\uff0c\u4f46\u4e0d\u662f\u753b\u51fa\u51c6\u786e\u7387\u5bf9\u53ec\u56de\u7387\u7684\u66f2\u7ebf\uff0cROC \u66f2\u7ebf\u662f\u771f\u6b63\u4f8b\u7387\uff08true positive rate\uff0c\u53e6\u4e00\u4e2a\u540d\u5b57\u53eb\u505a\u53ec\u56de\u7387\uff09\u5bf9\u5047\u6b63\u4f8b\u7387\uff08false positive rate, FPR\uff09\u7684\u66f2\u7ebf\u3002FPR \u662f\u53cd\u4f8b\u88ab\u9519\u8bef\u5206\u6210\u6b63\u4f8b\u7684\u6bd4\u7387\u3002\u5b83\u7b49\u4e8e 1 \u51cf\u53bb\u771f\u53cd\u4f8b\u7387\uff08true negative rate\uff0c TNR\uff09\u3002TNR\u662f\u53cd\u4f8b\u88ab\u6b63\u786e\u5206\u7c7b\u7684\u6bd4\u7387\u3002TNR\u4e5f\u53eb\u505a\u7279\u5f02\u6027\u3002\u6240\u4ee5 ROC \u66f2\u7ebf\u753b\u51fa\u53ec\u56de\u7387\u5bf9\uff081 \u51cf\u7279\u5f02\u6027\uff09\u7684\u66f2\u7ebf\u3002 \u4e3a\u4e86\u753b\u51fa ROC \u66f2\u7ebf\uff0c\u4f60\u9996\u5148\u9700\u8981\u8ba1\u7b97\u5404\u79cd\u4e0d\u540c\u9608\u503c\u4e0b\u7684 TPR\u3001FPR\uff0c\u4f7f\u7528 roc_curve() \u51fd\u6570\uff1a from sklearn.metrics import roc_curve fpr, tpr, thresholds = roc_curve(y_train_5, y_scores) \u7136\u540e\u4f60\u53ef\u4ee5\u4f7f\u7528 matplotlib\uff0c\u753b\u51fa FPR \u5bf9 TPR \u7684\u66f2\u7ebf\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u751f\u6210\u56fe 3-6. def plot_roc_curve(fpr, tpr, label=None): plt.plot(fpr, tpr, linewidth=2, label=label) plt.plot([0, 1], [0, 1], 'k--') plt.axis([0, 1, 0, 1]) plt.xlabel('False Positive Rate') plt.ylabel('True Positive Rate') plot_roc_curve(fpr, tpr) plt.show() \u8fd9\u91cc\u540c\u6837\u5b58\u5728\u6298\u8877\u7684\u95ee\u9898\uff1a\u53ec\u56de\u7387\uff08TPR\uff09\u8d8a\u9ad8\uff0c\u5206\u7c7b\u5668\u5c31\u4f1a\u4ea7\u751f\u8d8a\u591a\u7684\u5047\u6b63\u4f8b\uff08FPR\uff09\u3002\u56fe\u4e2d\u7684\u70b9\u7ebf\u662f\u4e00\u4e2a\u5b8c\u5168\u968f\u673a\u7684\u5206\u7c7b\u5668\u751f\u6210\u7684 ROC \u66f2\u7ebf\uff1b\u4e00\u4e2a\u597d\u7684\u5206\u7c7b\u5668\u7684 ROC \u66f2\u7ebf\u5e94\u8be5\u5c3d\u53ef\u80fd\u8fdc\u79bb\u8fd9\u6761\u7ebf\uff08\u5373\u5411\u5de6\u4e0a\u89d2\u65b9\u5411\u9760\u62e2\uff09\u3002 \u4e00\u4e2a\u6bd4\u8f83\u5206\u7c7b\u5668\u4e4b\u95f4\u4f18\u52a3\u7684\u65b9\u6cd5\u662f\uff1a\u6d4b\u91cfROC\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff08AUC\uff09\u3002\u4e00\u4e2a\u5b8c\u7f8e\u7684\u5206\u7c7b\u5668\u7684 ROC AUC \u7b49\u4e8e 1\uff0c\u800c\u4e00\u4e2a\u7eaf\u968f\u673a\u5206\u7c7b\u5668\u7684 ROC AUC \u7b49\u4e8e 0.5\u3002Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97 ROC AUC\uff1a >>> from sklearn.metrics import roc_auc_score >>> roc_auc_score(y_train_5, y_scores) 0.97061072797174941 \u56e0\u4e3a ROC \u66f2\u7ebf\u8ddf\u51c6\u786e\u7387/\u53ec\u56de\u7387\u66f2\u7ebf\uff08\u6216\u8005\u53eb PR\uff09\u5f88\u7c7b\u4f3c\uff0c\u4f60\u6216\u8bb8\u4f1a\u597d\u5947\u5982\u4f55\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e00\u4e2a\u66f2\u7ebf\u5462\uff1f\u4e00\u4e2a\u7b28\u62d9\u7684\u89c4\u5219\u662f\uff0c\u4f18\u5148\u4f7f\u7528 PR \u66f2\u7ebf\u5f53\u6b63\u4f8b\u5f88\u5c11\uff0c\u6216\u8005\u5f53\u4f60\u5173\u6ce8\u5047\u6b63\u4f8b\u591a\u4e8e\u5047\u53cd\u4f8b\u7684\u65f6\u5019\u3002\u5176\u4ed6\u60c5\u51b5\u4f7f\u7528 ROC \u66f2\u7ebf\u3002\u4e3e\u4f8b\u5b50\uff0c\u56de\u987e\u524d\u9762\u7684 ROC \u66f2\u7ebf\u548c ROC AUC \u6570\u503c\uff0c\u4f60\u6216\u8bb8\u8ba4\u4e3a\u8fd9\u4e2a\u5206\u7c7b\u5668\u5f88\u68d2\u3002\u4f46\u662f\u8fd9\u51e0\u4e4e\u5168\u662f\u56e0\u4e3a\u53ea\u6709\u5c11\u6570\u6b63\u4f8b\uff08\u201c\u662f 5\u201d\uff09\uff0c\u800c\u5927\u90e8\u5206\u662f\u53cd\u4f8b\uff08\u201c\u975e 5\u201d\uff09\u3002\u76f8\u53cd\uff0cPR \u66f2\u7ebf\u6e05\u695a\u663e\u793a\u51fa\u8fd9\u4e2a\u5206\u7c7b\u5668\u8fd8\u6709\u5f88\u5927\u7684\u6539\u5584\u7a7a\u95f4\uff08PR \u66f2\u7ebf\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u9760\u8fd1\u53f3\u4e0a\u89d2\uff09\u3002 \u8ba9\u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a RandomForestClassifier \uff0c\u7136\u540e\u62ff\u5b83\u7684\u7684ROC\u66f2\u7ebf\u548cROC AUC\u6570\u503c\u53bb\u8ddf SGDClassifier \u7684\u6bd4\u8f83\u3002\u9996\u5148\u4f60\u9700\u8981\u5f97\u5230\u8bad\u7ec3\u96c6\u6bcf\u4e2a\u6837\u4f8b\u7684\u6570\u503c\u3002\u4f46\u662f\u7531\u4e8e\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c RandomForestClassifier \u4e0d\u63d0\u4f9b decision_function() \u65b9\u6cd5\u3002\u76f8\u53cd\uff0c\u5b83\u63d0\u4f9b\u4e86 predict_proba() \u65b9\u6cd5\u3002Skikit-Learn\u5206\u7c7b\u5668\u901a\u5e38\u4e8c\u8005\u4e2d\u7684\u4e00\u4e2a\u3002 predict_proba() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u6837\u4f8b\uff0c\u6bcf\u4e00\u5217\u4ee3\u8868\u4e00\u4e2a\u7c7b\u3002\u6570\u7ec4\u5f53\u4e2d\u7684\u503c\u7684\u610f\u601d\u662f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6837\u4f8b\u5c5e\u4e8e\u7ed9\u5b9a\u7c7b\u7684\u6982\u7387\u3002\u6bd4\u5982\uff0c70%\u7684\u6982\u7387\u8fd9\u5e45\u56fe\u662f\u6570\u5b57 5\u3002 from sklearn.ensemble import RandomForestClassifier forest_clf = RandomForestClassifier(random_state=42) y_probas_forest = cross_val_predict(forest_clf, X_train, y_train_5, cv=3, method=\"predict_proba\") \u4f46\u662f\u8981\u753b ROC \u66f2\u7ebf\uff0c\u4f60\u9700\u8981\u7684\u662f\u6837\u4f8b\u7684\u5206\u6570\uff0c\u800c\u4e0d\u662f\u6982\u7387\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u6b63\u4f8b\u7684\u6982\u7387\u5f53\u4f5c\u6837\u4f8b\u7684\u5206\u6570\u3002 y_scores_forest = y_probas_forest[:, 1] # score = proba of positive class fpr_forest, tpr_forest, thresholds_forest = roc_curve(y_train_5,y_scores_forest) \u73b0\u5728\u4f60\u5373\u5c06\u5f97\u5230 ROC \u66f2\u7ebf\u3002\u5c06\u524d\u9762\u4e00\u4e2a\u5206\u7c7b\u5668\u7684 ROC \u66f2\u7ebf\u4e00\u5e76\u753b\u51fa\u6765\u662f\u5f88\u6709\u7528\u7684\uff0c\u53ef\u4ee5\u6e05\u695a\u5730\u8fdb\u884c\u6bd4\u8f83\u3002\u89c1\u56fe 3-7\u3002 plt.plot(fpr, tpr, \"b:\", label=\"SGD\") plot_roc_curve(fpr_forest, tpr_forest, \"Random Forest\") plt.legend(loc=\"bottom right\") plt.show() \u5982\u4f60\u6240\u89c1\uff0c RandomForestClassifier \u7684 ROC \u66f2\u7ebf\u6bd4 SGDClassifier \u7684\u597d\u5f97\u591a\uff1a\u5b83\u66f4\u9760\u8fd1\u5de6\u4e0a\u89d2\u3002\u6240\u4ee5\uff0c\u5b83\u7684 ROC AUC \u4e5f\u4f1a\u66f4\u5927\u3002 >>> roc_auc_score(y_train_5, y_scores_forest) 0.99312433660038291 \u8ba1\u7b97\u4e00\u4e0b\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\uff1a98.5% \u7684\u51c6\u786e\u7387\uff0c82.8% \u7684\u53ec\u56de\u7387\u3002\u8fd8\u4e0d\u9519\u3002 \u73b0\u5728\u4f60\u77e5\u9053\u5982\u4f55\u8bad\u7ec3\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\uff0c\u9009\u62e9\u5408\u9002\u7684\u6807\u51c6\uff0c\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u53bb\u8bc4\u4f30\u4f60\u7684\u5206\u7c7b\u5668\uff0c\u9009\u62e9\u6ee1\u8db3\u4f60\u9700\u8981\u7684\u51c6\u786e\u7387/\u53ec\u56de\u7387\u6298\u8877\u65b9\u6848\uff0c\u548c\u6bd4\u8f83\u4e0d\u540c\u6a21\u578b\u7684 ROC \u66f2\u7ebf\u548c ROC AUC \u6570\u503c\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u68c0\u6d4b\u66f4\u591a\u7684\u6570\u5b57\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u5b57 5\u3002 \u591a\u7c7b\u5206\u7c7b \u4e8c\u5206\u7c7b\u5668\u53ea\u80fd\u533a\u5206\u4e24\u4e2a\u7c7b\uff0c\u800c\u591a\u7c7b\u5206\u7c7b\u5668\uff08\u4e5f\u88ab\u53eb\u505a\u591a\u9879\u5f0f\u5206\u7c7b\u5668\uff09\u53ef\u4ee5\u533a\u5206\u591a\u4e8e\u4e24\u4e2a\u7c7b\u3002 \u4e00\u4e9b\u7b97\u6cd5\uff08\u6bd4\u5982\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u6216\u8005\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff09\u53ef\u4ee5\u76f4\u63a5\u5904\u7406\u591a\u7c7b\u5206\u7c7b\u95ee\u9898\u3002\u5176\u4ed6\u4e00\u4e9b\u7b97\u6cd5\uff08\u6bd4\u5982 SVM \u5206\u7c7b\u5668\u6216\u8005\u7ebf\u6027\u5206\u7c7b\u5668\uff09\u5219\u662f\u4e25\u683c\u7684\u4e8c\u5206\u7c7b\u5668\u3002\u7136\u540e\uff0c\u6709\u8bb8\u591a\u7b56\u7565\u53ef\u4ee5\u8ba9\u4f60\u7528\u4e8c\u5206\u7c7b\u5668\u53bb\u6267\u884c\u591a\u7c7b\u5206\u7c7b\u3002 \u4e3e\u4f8b\u5b50\uff0c\u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5c06\u56fe\u7247\u5206\u6210 10 \u7c7b\uff08\u4ece 0 \u5230 9\uff09\u7684\u7cfb\u7edf\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\uff1a\u8bad\u7ec310\u4e2a\u4e8c\u5206\u7c7b\u5668\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u4e00\u4e2a\u6570\u5b57\uff08\u63a2\u6d4b\u5668 0\uff0c\u63a2\u6d4b\u5668 1\uff0c\u63a2\u6d4b\u5668 2\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002\u7136\u540e\u5f53\u4f60\u60f3\u5bf9\u67d0\u5f20\u56fe\u7247\u8fdb\u884c\u5206\u7c7b\u7684\u65f6\u5019\uff0c\u8ba9\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u5bf9\u8fd9\u4e2a\u56fe\u7247\u8fdb\u884c\u5206\u7c7b\uff0c\u9009\u51fa\u51b3\u7b56\u5206\u6570\u6700\u9ad8\u7684\u90a3\u4e2a\u5206\u7c7b\u5668\u3002\u8fd9\u53eb\u505a\u201c\u4e00\u5bf9\u6240\u6709\u201d\uff08OvA\uff09\u7b56\u7565\uff08\u4e5f\u88ab\u53eb\u505a\u201c\u4e00\u5bf9\u5176\u4ed6\u201d\uff09\u3002 \u53e6\u4e00\u4e2a\u7b56\u7565\u662f\u5bf9\u6bcf\u4e00\u5bf9\u6570\u5b57\u90fd\u8bad\u7ec3\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\uff1a\u4e00\u4e2a\u5206\u7c7b\u5668\u7528\u6765\u5904\u7406\u6570\u5b57 0 \u548c\u6570\u5b57 1\uff0c\u4e00\u4e2a\u7528\u6765\u5904\u7406\u6570\u5b57 0 \u548c\u6570\u5b57 2\uff0c\u4e00\u4e2a\u7528\u6765\u5904\u7406\u6570\u5b57 1 \u548c 2\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u53eb\u505a\u201c\u4e00\u5bf9\u4e00\u201d\uff08OvO\uff09\u7b56\u7565\u3002\u5982\u679c\u6709 N \u4e2a\u7c7b\u3002\u4f60\u9700\u8981\u8bad\u7ec3 N*(N-1)/2 \u4e2a\u5206\u7c7b\u5668\u3002\u5bf9\u4e8e MNIST \u95ee\u9898\uff0c\u9700\u8981\u8bad\u7ec3 45 \u4e2a\u4e8c\u5206\u7c7b\u5668\uff01\u5f53\u4f60\u60f3\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u5206\u7c7b\uff0c\u4f60\u5fc5\u987b\u5c06\u8fd9\u5f20\u56fe\u7247\u8dd1\u5728\u5168\u90e845\u4e2a\u4e8c\u5206\u7c7b\u5668\u4e0a\u3002\u7136\u540e\u770b\u54ea\u4e2a\u7c7b\u80dc\u51fa\u3002OvO \u7b56\u7565\u7684\u4e3b\u8981\u6709\u70b9\u662f\uff1a\u6bcf\u4e2a\u5206\u7c7b\u5668\u53ea\u9700\u8981\u5728\u8bad\u7ec3\u96c6\u7684\u90e8\u5206\u6570\u636e\u4e0a\u9762\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u90e8\u5206\u6570\u636e\u662f\u5b83\u6240\u9700\u8981\u533a\u5206\u7684\u90a3\u4e24\u4e2a\u7c7b\u5bf9\u5e94\u7684\u6570\u636e\u3002 \u4e00\u4e9b\u7b97\u6cd5\uff08\u6bd4\u5982 SVM \u5206\u7c7b\u5668\uff09\u5728\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u4e0a\u5f88\u96be\u6269\u5c55\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u4e9b\u7b97\u6cd5\uff0cOvO \u662f\u6bd4\u8f83\u597d\u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5728\u5c0f\u7684\u6570\u636e\u96c6\u4e0a\u9762\u53ef\u4ee5\u66f4\u591a\u5730\u8bad\u7ec3\uff0c\u8f83\u4e4b\u4e8e\u5de8\u5927\u7684\u6570\u636e\u96c6\u800c\u8a00\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u5927\u90e8\u5206\u7684\u4e8c\u5206\u7c7b\u5668\u6765\u8bf4\uff0cOvA \u662f\u66f4\u597d\u7684\u9009\u62e9\u3002 Scikit-Learn \u53ef\u4ee5\u63a2\u6d4b\u51fa\u4f60\u60f3\u4f7f\u7528\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\u53bb\u5b8c\u6210\u591a\u5206\u7c7b\u7684\u4efb\u52a1\uff0c\u5b83\u4f1a\u81ea\u52a8\u5730\u6267\u884c OvA\uff08\u9664\u4e86 SVM \u5206\u7c7b\u5668\uff0c\u5b83\u4f7f\u7528 OvO\uff09\u3002\u8ba9\u6211\u4eec\u8bd5\u4e00\u4e0b SGDClassifier . >>> sgd_clf.fit(X_train, y_train) # y_train, not y_train_5 >>> sgd_clf.predict([some_digit]) array([ 5.]) \u5f88\u5bb9\u6613\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u5728\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u4e86\u4e00\u4e2a SGDClassifier \u3002\u8fd9\u4e2a\u5206\u7c7b\u5668\u5904\u7406\u539f\u59cb\u7684\u76ee\u6807class\uff0c\u4ece 0 \u5230 9\uff08 y_train \uff09\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u63a2\u6d4b\u662f\u5426\u4e3a 5 \uff08 y_train_5 \uff09\u3002\u7136\u540e\u5b83\u505a\u51fa\u4e00\u4e2a\u5224\u65ad\uff08\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e0b\u53ea\u6709\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57\uff09\u3002\u5728\u5e55\u540e\uff0cScikit-Learn \u5b9e\u9645\u4e0a\u8bad\u7ec3\u4e86 10 \u4e2a\u4e8c\u5206\u7c7b\u5668\uff0c\u6bcf\u4e2a\u5206\u7c7b\u5668\u90fd\u4ea7\u5230\u4e00\u5f20\u56fe\u7247\u7684\u51b3\u7b56\u6570\u503c\uff0c\u9009\u62e9\u6570\u503c\u6700\u9ad8\u7684\u90a3\u4e2a\u7c7b\u3002 \u4e3a\u4e86\u8bc1\u660e\u8fd9\u662f\u771f\u5b9e\u7684\uff0c\u4f60\u53ef\u4ee5\u8c03\u7528 decision_function() \u65b9\u6cd5\u3002\u4e0d\u662f\u8fd4\u56de\u6bcf\u4e2a\u6837\u4f8b\u7684\u4e00\u4e2a\u6570\u503c\uff0c\u800c\u662f\u8fd4\u56de 10 \u4e2a\u6570\u503c\uff0c\u4e00\u4e2a\u6570\u503c\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u7c7b\u3002 >>> some_digit_scores = sgd_clf.decision_function([some_digit]) >>> some_digit_scores array([[-311402.62954431, -363517.28355739, -446449.5306454 , -183226.61023518, -414337.15339485, 161855.74572176, -452576.39616343, -471957.14962573, -518542.33997148, -536774.63961222]]) \u6700\u9ad8\u6570\u503c\u662f\u5bf9\u5e94\u4e8e\u7c7b\u522b 5 \uff1a >>> np.argmax(some_digit_scores) 5 >>> sgd_clf.classes_ array([ 0., 1., 2., 3., 4., 5., 6., 7., 8., 9.]) >>> sgd_clf.classes_[5] 5.0 \u4e00\u4e2a\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\u597d\u4e86\u4e4b\u540e\uff0c\u5b83\u4f1a\u4fdd\u5b58\u76ee\u6807\u7c7b\u522b\u5217\u8868\u5230\u5b83\u7684\u5c5e\u6027 classes_ \u4e2d\u53bb\uff0c\u6309\u7167\u503c\u6392\u5e8f\u3002\u5728\u672c\u4f8b\u5b50\u5f53\u4e2d\uff0c\u5728 classes_ \u6570\u7ec4\u5f53\u4e2d\u7684\u6bcf\u4e2a\u7c7b\u7684\u7d22\u5f15\u65b9\u4fbf\u5730\u5339\u914d\u4e86\u7c7b\u672c\u8eab\uff0c\u6bd4\u5982\uff0c\u7d22\u5f15\u4e3a 5 \u7684\u7c7b\u6070\u597d\u662f\u7c7b\u522b 5 \u672c\u8eab\u3002\u4f46\u901a\u5e38\u4e0d\u4f1a\u8fd9\u4e48\u5e78\u8fd0\u3002 \u5982\u679c\u4f60\u60f3\u5f3a\u5236 Scikit-Learn \u4f7f\u7528 OvO \u7b56\u7565\u6216\u8005 OvA \u7b56\u7565\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 OneVsOneClassifier \u7c7b\u6216\u8005 OneVsRestClassifier \u7c7b\u3002\u521b\u5efa\u4e00\u4e2a\u6837\u4f8b\uff0c\u4f20\u9012\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\u7ed9\u5b83\u7684\u6784\u9020\u51fd\u6570\u3002\u4e3e\u4f8b\u5b50\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u521b\u5efa\u4e00\u4e2a\u591a\u7c7b\u5206\u7c7b\u5668\uff0c\u4f7f\u7528 OvO \u7b56\u7565\uff0c\u57fa\u4e8e SGDClassifier \u3002 >>> from sklearn.multiclass import OneVsOneClassifier >>> ovo_clf = OneVsOneClassifier(SGDClassifier(random_state=42)) >>> ovo_clf.fit(X_train, y_train) >>> ovo_clf.predict([some_digit]) array([ 5.]) >>> len(ovo_clf.estimators_) 45 \u8bad\u7ec3\u4e00\u4e2a RandomForestClassifier \u540c\u6837\u7b80\u5355\uff1a >>> forest_clf.fit(X_train, y_train) >>> forest_clf.predict([some_digit]) array([ 5.]) \u8fd9\u6b21 Scikit-Learn \u6ca1\u6709\u5fc5\u8981\u53bb\u8fd0\u884c OvO \u6216\u8005 OvA\uff0c\u56e0\u4e3a\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u80fd\u591f\u76f4\u63a5\u5c06\u4e00\u4e2a\u6837\u4f8b\u5206\u5230\u591a\u4e2a\u7c7b\u522b\u3002\u4f60\u53ef\u4ee5\u8c03\u7528 predict_proba() \uff0c\u5f97\u5230\u6837\u4f8b\u5bf9\u5e94\u7684\u7c7b\u522b\u7684\u6982\u7387\u503c\u7684\u5217\u8868\uff1a >>> forest_clf.predict_proba([some_digit]) array([[ 0.1, 0. , 0. , 0.1, 0. , 0.8, 0. , 0. , 0. , 0. ]]) \u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u5206\u7c7b\u5668\u76f8\u5f53\u786e\u4fe1\u5b83\u7684\u9884\u6d4b\uff1a\u5728\u6570\u7ec4\u7684\u7d22\u5f15 5 \u4e0a\u7684 0.8\uff0c\u610f\u5473\u7740\u8fd9\u4e2a\u6a21\u578b\u4ee5 80% \u7684\u6982\u7387\u4f30\u7b97\u8fd9\u5f20\u56fe\u7247\u4ee3\u8868\u6570\u5b57 5\u3002\u5b83\u4e5f\u8ba4\u4e3a\u8fd9\u4e2a\u56fe\u7247\u53ef\u80fd\u662f\u6570\u5b57 0 \u6216\u8005\u6570\u5b57 3\uff0c\u5206\u522b\u90fd\u662f 10% \u7684\u51e0\u7387\u3002 \u73b0\u5728\u5f53\u7136\u4f60\u60f3\u8bc4\u4f30\u8fd9\u4e9b\u5206\u7c7b\u5668\u3002\u50cf\u5e73\u5e38\u4e00\u6837\uff0c\u4f60\u60f3\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u3002\u8ba9\u6211\u4eec\u7528 cross_val_score() \u6765\u8bc4\u4f30 SGDClassifier \u7684\u7cbe\u5ea6\u3002 >>> cross_val_score(sgd_clf, X_train, y_train, cv=3, scoring=\"accuracy\") array([ 0.84063187, 0.84899245, 0.86652998]) \u5728\u6240\u6709\u6d4b\u8bd5\u6298\uff08test fold\uff09\u4e0a\uff0c\u5b83\u6709 84% \u7684\u7cbe\u5ea6\u3002\u5982\u679c\u4f60\u662f\u7528\u4e00\u4e2a\u968f\u673a\u7684\u5206\u7c7b\u5668\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230 10% \u7684\u6b63\u786e\u7387\u3002\u6240\u4ee5\u8fd9\u4e0d\u662f\u4e00\u4e2a\u574f\u7684\u5206\u6570\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u505a\u7684\u66f4\u597d\u3002\u4e3e\u4f8b\u5b50\uff0c\u7b80\u5355\u5c06\u8f93\u5165\u6b63\u5219\u5316\uff0c\u5c06\u4f1a\u63d0\u9ad8\u7cbe\u5ea6\u5230 90% \u4ee5\u4e0a\u3002 >>> from sklearn.preprocessing import StandardScaler >>> scaler = StandardScaler() >>> X_train_scaled = scaler.fit_transform(X_train.astype(np.float64)) >>> cross_val_score(sgd_clf, X_train_scaled, y_train, cv=3, scoring=\"accuracy\") array([ 0.91011798, 0.90874544, 0.906636 ]) \u8bef\u5dee\u5206\u6790 \u5f53\u7136\uff0c\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u5b9e\u9645\u7684\u9879\u76ee\uff0c\u4f60\u4f1a\u5728\u4f60\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u5f53\u4e2d\uff0c\u8ddf\u968f\u4ee5\u4e0b\u6b65\u9aa4\uff08\u89c1\u9644\u5f55 B\uff09\uff1a\u63a2\u7d22\u51c6\u5907\u6570\u636e\u7684\u5019\u9009\u65b9\u6848\uff0c\u5c1d\u8bd5\u591a\u79cd\u6a21\u578b\uff0c\u628a\u6700\u597d\u7684\u51e0\u4e2a\u6a21\u578b\u5217\u4e3a\u5165\u56f4\u540d\u5355\uff0c\u7528 GridSearchCV \u8c03\u8bd5\u8d85\u53c2\u6570\uff0c\u5c3d\u53ef\u80fd\u5730\u81ea\u52a8\u5316\uff0c\u50cf\u4f60\u524d\u9762\u7684\u7ae0\u8282\u505a\u7684\u90a3\u6837\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5047\u8bbe\u4f60\u5df2\u7ecf\u627e\u5230\u4e00\u4e2a\u4e0d\u9519\u7684\u6a21\u578b\uff0c\u4f60\u8bd5\u56fe\u627e\u5230\u65b9\u6cd5\u53bb\u6539\u5584\u5b83\u3002\u4e00\u4e2a\u65b9\u5f0f\u662f\u5206\u6790\u6a21\u578b\u4ea7\u751f\u7684\u8bef\u5dee\u7684\u7c7b\u578b\u3002 \u9996\u5148\uff0c\u4f60\u53ef\u4ee5\u68c0\u67e5\u6df7\u6dc6\u77e9\u9635\u3002\u4f60\u9700\u8981\u4f7f\u7528 cross_val_predict() \u505a\u51fa\u9884\u6d4b\uff0c\u7136\u540e\u8c03\u7528 confusion_matrix() \u51fd\u6570\uff0c\u50cf\u4f60\u65e9\u524d\u505a\u7684\u90a3\u6837\u3002 >>> y_train_pred = cross_val_predict(sgd_clf, X_train_scaled, y_train, cv=3) >>> conf_mx = confusion_matrix(y_train, y_train_pred) >>> conf_mx array([[5725, 3, 24, 9, 10, 49, 50, 10, 39, 4], [ 2, 6493, 43, 25, 7, 40, 5, 10, 109, 8], [ 51, 41, 5321, 104, 89, 26, 87, 60, 166, 13], [ 47, 46, 141, 5342, 1, 231, 40, 50, 141, 92], [ 19, 29, 41, 10, 5366, 9, 56, 37, 86, 189], [ 73, 45, 36, 193, 64, 4582, 111, 30, 193, 94], [ 29, 34, 44, 2, 42, 85, 5627, 10, 45, 0], [ 25, 24, 74, 32, 54, 12, 6, 5787, 15, 236], [ 52, 161, 73, 156, 10, 163, 61, 25, 5027, 123], [ 43, 35, 26, 92, 178, 28, 2, 223, 82, 5240]]) \u8fd9\u91cc\u662f\u4e00\u5bf9\u6570\u5b57\u3002\u4f7f\u7528 Matplotlib \u7684 matshow() \u51fd\u6570\uff0c\u5c06\u6df7\u6dc6\u77e9\u9635\u4ee5\u56fe\u50cf\u7684\u65b9\u5f0f\u5448\u73b0\uff0c\u5c06\u4f1a\u66f4\u52a0\u65b9\u4fbf\u3002 plt.matshow(conf_mx, cmap=plt.cm.gray) plt.show() \u8fd9\u4e2a\u6df7\u6dc6\u77e9\u9635\u770b\u8d77\u6765\u76f8\u5f53\u597d\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7684\u56fe\u7247\u5728\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u3002\u5728\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u610f\u5473\u7740\u88ab\u5206\u7c7b\u6b63\u786e\u3002\u6570\u5b57 5 \u5bf9\u5e94\u7684\u683c\u5b50\u770b\u8d77\u6765\u6bd4\u5176\u4ed6\u6570\u5b57\u8981\u6697\u6de1\u8bb8\u591a\u3002\u8fd9\u53ef\u80fd\u662f\u6570\u636e\u96c6\u5f53\u4e2d\u6570\u5b57 5 \u7684\u56fe\u7247\u6bd4\u8f83\u5c11\uff0c\u53c8\u6216\u8005\u662f\u5206\u7c7b\u5668\u5bf9\u4e8e\u6570\u5b57 5 \u7684\u8868\u73b0\u4e0d\u5982\u5176\u4ed6\u6570\u5b57\u90a3\u4e48\u597d\u3002\u4f60\u53ef\u4ee5\u9a8c\u8bc1\u4e24\u79cd\u60c5\u51b5\u3002 \u8ba9\u6211\u4eec\u5173\u6ce8\u4ec5\u5305\u542b\u8bef\u5dee\u6570\u636e\u7684\u56fe\u50cf\u5448\u73b0\u3002\u9996\u5148\u4f60\u9700\u8981\u5c06\u6df7\u6dc6\u77e9\u9635\u7684\u6bcf\u4e00\u4e2a\u503c\u9664\u4ee5\u76f8\u5e94\u7c7b\u522b\u7684\u56fe\u7247\u7684\u603b\u6570\u76ee\u3002\u8fd9\u6837\u5b50\uff0c\u4f60\u53ef\u4ee5\u6bd4\u8f83\u9519\u8bef\u7387\uff0c\u800c\u4e0d\u662f\u7edd\u5bf9\u7684\u9519\u8bef\u6570\uff08\u8fd9\u5bf9\u5927\u7684\u7c7b\u522b\u4e0d\u516c\u5e73\uff09\u3002 row_sums = conf_mx.sum(axis=1, keepdims=True) norm_conf_mx = conf_mx / row_sums \u73b0\u5728\u8ba9\u6211\u4eec\u7528 0 \u6765\u586b\u5145\u5bf9\u89d2\u7ebf\u3002\u8fd9\u6837\u5b50\u5c31\u53ea\u4fdd\u7559\u4e86\u88ab\u9519\u8bef\u5206\u7c7b\u7684\u6570\u636e\u3002\u8ba9\u6211\u4eec\u753b\u51fa\u8fd9\u4e2a\u7ed3\u679c\u3002 np.fill_diagonal(norm_conf_mx, 0) plt.matshow(norm_conf_mx, cmap=plt.cm.gray) plt.show() \u73b0\u5728\u4f60\u53ef\u4ee5\u6e05\u695a\u770b\u51fa\u5206\u7c7b\u5668\u5236\u9020\u51fa\u6765\u7684\u5404\u7c7b\u8bef\u5dee\u3002\u8bb0\u4f4f\uff1a\u884c\u4ee3\u8868\u5b9e\u9645\u7c7b\u522b\uff0c\u5217\u4ee3\u8868\u9884\u6d4b\u7684\u7c7b\u522b\u3002\u7b2c 8\u30019 \u5217\u76f8\u5f53\u4eae\uff0c\u8fd9\u544a\u8bc9\u4f60\u8bb8\u591a\u56fe\u7247\u88ab\u8bef\u5206\u6210\u6570\u5b57 8 \u6216\u8005\u6570\u5b57 9\u3002\u76f8\u4f3c\u7684\uff0c\u7b2c 8\u30019 \u884c\u4e5f\u76f8\u5f53\u4eae\uff0c\u544a\u8bc9\u4f60\u6570\u5b57 8\u3001\u6570\u5b57 9 \u7ecf\u5e38\u88ab\u8bef\u4ee5\u4e3a\u662f\u5176\u4ed6\u6570\u5b57\u3002\u76f8\u53cd\uff0c\u4e00\u4e9b\u884c\u76f8\u5f53\u9ed1\uff0c\u6bd4\u5982\u7b2c\u4e00\u884c\uff1a\u8fd9\u610f\u5473\u7740\u5927\u90e8\u5206\u7684\u6570\u5b57 1 \u88ab\u6b63\u786e\u5206\u7c7b\uff08\u4e00\u4e9b\u88ab\u8bef\u5206\u7c7b\u4e3a\u6570\u5b57 8 \uff09\u3002\u7559\u610f\u5230\u8bef\u5dee\u56fe\u4e0d\u662f\u4e25\u683c\u5bf9\u79f0\u7684\u3002\u4e3e\u4f8b\u5b50\uff0c\u6bd4\u8d77\u5c06\u6570\u5b57 8 \u8bef\u5206\u7c7b\u4e3a\u6570\u5b57 5 \u7684\u6570\u91cf\uff0c\u6709\u66f4\u591a\u7684\u6570\u5b57 5 \u88ab\u8bef\u5206\u7c7b\u4e3a\u6570\u5b57 8\u3002 \u5206\u6790\u6df7\u6dc6\u77e9\u9635\u901a\u5e38\u53ef\u4ee5\u7ed9\u4f60\u63d0\u4f9b\u6df1\u523b\u7684\u89c1\u89e3\u53bb\u6539\u5584\u4f60\u7684\u5206\u7c7b\u5668\u3002\u56de\u987e\u8fd9\u5e45\u56fe\uff0c\u770b\u6837\u5b50\u4f60\u5e94\u8be5\u52aa\u529b\u6539\u5584\u5206\u7c7b\u5668\u5728\u6570\u5b57 8 \u548c\u6570\u5b57 9 \u4e0a\u7684\u8868\u73b0\uff0c\u548c\u7ea0\u6b63 3/5 \u7684\u6df7\u6dc6\u3002\u4e3e\u4f8b\u5b50\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u53bb\u6536\u96c6\u66f4\u591a\u7684\u6570\u636e\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u6784\u9020\u65b0\u7684\u3001\u6709\u52a9\u4e8e\u5206\u7c7b\u5668\u7684\u7279\u5f81\u3002\u4e3e\u4f8b\u5b50\uff0c\u5199\u4e00\u4e2a\u7b97\u6cd5\u53bb\u6570\u95ed\u5408\u7684\u73af\uff08\u6bd4\u5982\uff0c\u6570\u5b57 8 \u6709\u4e24\u4e2a\u73af\uff0c\u6570\u5b57 6 \u6709\u4e00\u4e2a\uff0c 5 \u6ca1\u6709\uff09\u3002\u53c8\u6216\u8005\u4f60\u53ef\u4ee5\u9884\u5904\u7406\u56fe\u7247\uff08\u6bd4\u5982\uff0c\u4f7f\u7528 Scikit-Learn\uff0cPillow\uff0c OpenCV\uff09\u53bb\u6784\u9020\u4e00\u4e2a\u6a21\u5f0f\uff0c\u6bd4\u5982\u95ed\u5408\u7684\u73af\u3002 \u5206\u6790\u72ec\u7279\u7684\u8bef\u5dee\uff0c\u662f\u83b7\u5f97\u5173\u4e8e\u4f60\u7684\u5206\u7c7b\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u53ca\u5176\u4e3a\u4ec0\u4e48\u5931\u8d25\u7684\u6d1e\u89c1\u7684\u4e00\u4e2a\u597d\u9014\u5f84\u3002\u4f46\u662f\u8fd9\u76f8\u5bf9\u96be\u548c\u8017\u65f6\u3002\u4e3e\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u6570\u5b57 3 \u548c 5 \u7684\u4f8b\u5b50 cl_a, cl_b = 3, 5 X_aa = X_train[(y_train == cl_a) & (y_train_pred == cl_a)] X_ab = X_train[(y_train == cl_a) & (y_train_pred == cl_b)] X_ba = X_train[(y_train == cl_b) & (y_train_pred == cl_a)] X_bb = X_train[(y_train == cl_b) & (y_train_pred == cl_b)] plt.figure(figsize=(8,8)) plt.subplot(221); plot_digits(X_aa[:25], ../images_per_row=5) plt.subplot(222); plot_digits(X_ab[:25], ../images_per_row=5) plt.subplot(223); plot_digits(X_ba[:25], ../images_per_row=5) plt.subplot(224); plot_digits(X_bb[:25], ../images_per_row=5) plt.show() \u5de6\u8fb9\u4e24\u4e2a 5*5 \u7684\u5757\u5c06\u6570\u5b57\u8bc6\u522b\u4e3a 3\uff0c\u53f3\u8fb9\u7684\u5c06\u6570\u5b57\u8bc6\u522b\u4e3a 5\u3002\u4e00\u4e9b\u88ab\u5206\u7c7b\u5668\u9519\u8bef\u5206\u7c7b\u7684\u6570\u5b57\uff08\u6bd4\u5982\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u7684\u5757\uff09\u662f\u4e66\u5199\u5730\u76f8\u5f53\u5dee\uff0c\u751a\u81f3\u8ba9\u4eba\u7c7b\u5206\u7c7b\u90fd\u4f1a\u89c9\u5f97\u5f88\u56f0\u96be\uff08\u6bd4\u5982\u7b2c 8 \u884c\u7b2c 1 \u5217\u7684\u6570\u5b57 5\uff0c\u770b\u8d77\u6765\u975e\u5e38\u50cf\u6570\u5b57 3 \uff09\u3002\u4f46\u662f\uff0c\u5927\u90e8\u5206\u88ab\u8bef\u5206\u7c7b\u7684\u6570\u5b57\uff0c\u5728\u6211\u4eec\u770b\u6765\u90fd\u662f\u663e\u800c\u6613\u89c1\u7684\u9519\u8bef\u3002\u5f88\u96be\u660e\u767d\u4e3a\u4ec0\u4e48\u5206\u7c7b\u5668\u4f1a\u5206\u9519\u3002\u539f\u56e0\u662f\u6211\u4eec\u4f7f\u7528\u7684\u7b80\u5355\u7684 SGDClassifier \uff0c\u8fd9\u662f\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u3002\u5b83\u6240\u505a\u7684\u5168\u90e8\u5de5\u4f5c\u5c31\u662f\u5206\u914d\u4e00\u4e2a\u7c7b\u6743\u91cd\u7ed9\u6bcf\u4e00\u4e2a\u50cf\u7d20\uff0c\u7136\u540e\u5f53\u5b83\u770b\u5230\u4e00\u5f20\u65b0\u7684\u56fe\u7247\uff0c\u5b83\u5c31\u5c06\u52a0\u6743\u7684\u50cf\u7d20\u5f3a\u5ea6\u76f8\u52a0\uff0c\u6bcf\u4e2a\u7c7b\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u503c\u3002\u6240\u4ee5\uff0c\u56e0\u4e3a 3 \u548c 5 \u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u7684\u50cf\u7d20\u6709\u5dee\u5f02\uff0c\u8fd9\u4e2a\u6a21\u578b\u5f88\u5bb9\u6613\u6df7\u6dc6\u5b83\u4eec\u3002 3 \u548c 5 \u4e4b\u95f4\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u8fde\u63a5\u9876\u90e8\u7684\u7ebf\u548c\u5e95\u90e8\u7684\u7ebf\u7684\u7ec6\u7ebf\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u4f60\u753b\u4e00\u4e2a 3\uff0c\u8fde\u63a5\u5904\u7a0d\u5fae\u5411\u5de6\u504f\u79fb\uff0c\u5206\u7c7b\u5668\u5f88\u53ef\u80fd\u5c06\u5b83\u5206\u7c7b\u6210 5\u3002\u53cd\u4e4b\u4ea6\u7136\u3002\u6362\u4e00\u4e2a\u8bf4\u6cd5\uff0c\u8fd9\u4e2a\u5206\u7c7b\u5668\u5bf9\u4e8e\u56fe\u7247\u7684\u4f4d\u79fb\u548c\u65cb\u8f6c\u76f8\u5f53\u654f\u611f\u3002\u6240\u4ee5\uff0c\u51cf\u8f7b 3/5 \u6df7\u6dc6\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff0c\u786e\u4fdd\u5b83\u4eec\u90fd\u5f88\u597d\u5730\u4e2d\u5fc3\u5316\u548c\u4e0d\u8fc7\u5ea6\u65cb\u8f6c\u3002\u8fd9\u540c\u6837\u5f88\u53ef\u80fd\u5e2e\u52a9\u51cf\u8f7b\u5176\u4ed6\u7c7b\u578b\u7684\u9519\u8bef\u3002 \u591a\u6807\u7b7e\u5206\u7c7b \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u6709\u7684\u6837\u4f8b\u90fd\u603b\u662f\u88ab\u5206\u914d\u5230\u4ec5\u4e00\u4e2a\u7c7b\u3002\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e5f\u8bb8\u60f3\u8ba9\u4f60\u7684\u5206\u7c7b\u5668\u7ed9\u4e00\u4e2a\u6837\u4f8b\u8f93\u51fa\u591a\u4e2a\u7c7b\u522b\u3002\u6bd4\u5982\u8bf4\uff0c\u601d\u8003\u4e00\u4e2a\u4eba\u8138\u8bc6\u522b\u5668\u3002\u5982\u679c\u5bf9\u4e8e\u540c\u4e00\u5f20\u56fe\u7247\uff0c\u5b83\u8bc6\u522b\u51fa\u51e0\u4e2a\u4eba\uff0c\u5b83\u5e94\u8be5\u505a\u4ec0\u4e48\uff1f\u5f53\u7136\u5b83\u5e94\u8be5\u7ed9\u6bcf\u4e00\u4e2a\u5b83\u8bc6\u522b\u51fa\u7684\u4eba\u8d34\u4e0a\u4e00\u4e2a\u6807\u7b7e\u3002\u6bd4\u65b9\u8bf4\uff0c\u8fd9\u4e2a\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\u6210\u8bc6\u522b\u4e09\u4e2a\u4eba\u8138\uff0cAlice\uff0cBob\uff0cCharlie\uff1b\u7136\u540e\u5f53\u5b83\u88ab\u8f93\u5165\u4e00\u5f20\u542b\u6709 Alice \u548c Bob \u7684\u56fe\u7247\uff0c\u5b83\u5e94\u8be5\u8f93\u51fa [1, 0, 1] \uff08\u610f\u601d\u662f\uff1aAlice \u662f\uff0cBob \u4e0d\u662f\uff0cCharlie \u662f\uff09\u3002\u8fd9\u79cd\u8f93\u51fa\u591a\u4e2a\u4e8c\u503c\u6807\u7b7e\u7684\u5206\u7c7b\u7cfb\u7edf\u88ab\u53eb\u505a\u591a\u6807\u7b7e\u5206\u7c7b\u7cfb\u7edf\u3002 \u76ee\u524d\u6211\u4eec\u4e0d\u6253\u7b97\u6df1\u5165\u8138\u90e8\u8bc6\u522b\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u770b\u4e00\u4e2a\u7b80\u5355\u70b9\u7684\u4f8b\u5b50\uff0c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u9610\u660e\u7684\u76ee\u7684\u3002 from sklearn.neighbors import KNeighborsClassifier y_train_large = (y_train >= 7) y_train_odd = (y_train % 2 == 1) y_multilabel = np.c_[y_train_large, y_train_odd] knn_clf = KNeighborsClassifier() knn_clf.fit(X_train, y_multilabel) \u8fd9\u6bb5\u4ee3\u7801\u521b\u9020\u4e86\u4e00\u4e2a y_multilabel \u6570\u7ec4\uff0c\u91cc\u9762\u5305\u542b\u4e24\u4e2a\u76ee\u6807\u6807\u7b7e\u3002\u7b2c\u4e00\u4e2a\u6807\u7b7e\u6307\u51fa\u8fd9\u4e2a\u6570\u5b57\u662f\u5426\u4e3a\u5927\u6570\u5b57\uff087\uff0c8 \u6216\u8005 9\uff09\uff0c\u7b2c\u4e8c\u4e2a\u6807\u7b7e\u6307\u51fa\u8fd9\u4e2a\u6570\u5b57\u662f\u5426\u662f\u5947\u6570\u3002\u63a5\u4e0b\u6765\u51e0\u884c\u4ee3\u7801\u4f1a\u521b\u5efa\u4e00\u4e2a KNeighborsClassifier \u6837\u4f8b\uff08\u5b83\u652f\u6301\u591a\u6807\u7b7e\u5206\u7c7b\uff0c\u4f46\u4e0d\u662f\u6240\u6709\u5206\u7c7b\u5668\u90fd\u53ef\u4ee5\uff09\uff0c\u7136\u540e\u6211\u4eec\u4f7f\u7528\u591a\u76ee\u6807\u6570\u7ec4\u6765\u8bad\u7ec3\u5b83\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u9884\u6d4b\uff0c\u7136\u540e\u5b83\u8f93\u51fa\u4e24\u4e2a\u6807\u7b7e\uff1a >>> knn_clf.predict([some_digit]) array([[False, True]], dtype=bool) \u5b83\u5de5\u4f5c\u6b63\u786e\u3002\u6570\u5b57 5 \u4e0d\u662f\u5927\u6570\uff08 False \uff09\uff0c\u540c\u65f6\u662f\u4e00\u4e2a\u5947\u6570\uff08 True \uff09\u3002 \u6709\u8bb8\u591a\u65b9\u6cd5\u53bb\u8bc4\u4f30\u4e00\u4e2a\u591a\u6807\u7b7e\u5206\u7c7b\u5668\uff0c\u548c\u9009\u62e9\u6b63\u786e\u7684\u91cf\u5ea6\u6807\u51c6\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u9879\u76ee\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u4e2a\u4f53\u6807\u7b7e\u53bb\u91cf\u5ea6 F1 \u503c\uff08\u6216\u8005\u524d\u9762\u8ba8\u8bba\u8fc7\u7684\u5176\u4ed6\u4efb\u610f\u7684\u4e8c\u5206\u7c7b\u5668\u7684\u91cf\u5ea6\u6807\u51c6\uff09\uff0c\u7136\u540e\u8ba1\u7b97\u5e73\u5747\u503c\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u8ba1\u7b97\u5168\u90e8\u6807\u7b7e\u7684\u5e73\u5747 F1 \u503c\uff1a >>> y_train_knn_pred = cross_val_predict(knn_clf, X_train, y_train, cv=3) >>> f1_score(y_train, y_train_knn_pred, average=\"macro\") 0.96845540180280221 \u8fd9\u91cc\u5047\u8bbe\u6240\u6709\u6807\u7b7e\u6709\u7740\u540c\u7b49\u7684\u91cd\u8981\u6027\uff0c\u4f46\u53ef\u80fd\u4e0d\u662f\u8fd9\u6837\u3002\u7279\u522b\u662f\uff0c\u5982\u679c\u4f60\u7684 Alice \u7684\u7167\u7247\u6bd4 Bob \u6216\u8005 Charlie \u66f4\u591a\u7684\u65f6\u5019\uff0c\u4e5f\u8bb8\u4f60\u60f3\u8ba9\u5206\u7c7b\u5668\u5728 Alice \u7684\u7167\u7247\u4e0a\u5177\u6709\u66f4\u5927\u7684\u6743\u91cd\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u9009\u9879\u662f\uff1a\u7ed9\u6bcf\u4e00\u4e2a\u6807\u7b7e\u7684\u6743\u91cd\u7b49\u4e8e\u5b83\u7684\u652f\u6301\u5ea6\uff08\u6bd4\u5982\uff0c\u90a3\u4e2a\u6807\u7b7e\u7684\u6837\u4f8b\u7684\u6570\u76ee\uff09\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u70b9\uff0c\u7b80\u5355\u5730\u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\u8bbe\u7f6e average=\"weighted\" \u3002 \u591a\u8f93\u51fa\u5206\u7c7b \u6211\u4eec\u5373\u5c06\u8ba8\u8bba\u7684\u6700\u540e\u4e00\u79cd\u5206\u7c7b\u4efb\u52a1\u88ab\u53eb\u505a\u201c\u591a\u8f93\u51fa-\u591a\u7c7b\u5206\u7c7b\u201d\uff08\u6216\u8005\u7b80\u79f0\u4e3a\u591a\u8f93\u51fa\u5206\u7c7b\uff09\u3002\u5b83\u662f\u591a\u6807\u7b7e\u5206\u7c7b\u7684\u7b80\u5355\u6cdb\u5316\uff0c\u5728\u8fd9\u91cc\u6bcf\u4e00\u4e2a\u6807\u7b7e\u53ef\u4ee5\u662f\u591a\u7c7b\u522b\u7684\uff08\u6bd4\u5982\u8bf4\uff0c\u5b83\u53ef\u4ee5\u6709\u591a\u4e8e\u4e24\u4e2a\u53ef\u80fd\u503c\uff09\u3002 \u4e3a\u4e86\u8bf4\u660e\u8fd9\u70b9\uff0c\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5b83\u53ef\u4ee5\u53bb\u9664\u56fe\u7247\u5f53\u4e2d\u7684\u566a\u97f3\u3002\u5b83\u5c06\u4e00\u5f20\u6df7\u6709\u566a\u97f3\u7684\u56fe\u7247\u4f5c\u4e3a\u8f93\u5165\uff0c\u671f\u5f85\u5b83\u8f93\u51fa\u4e00\u5f20\u5e72\u51c0\u7684\u6570\u5b57\u56fe\u7247\uff0c\u7528\u4e00\u4e2a\u50cf\u7d20\u5f3a\u5ea6\u7684\u6570\u7ec4\u8868\u793a\uff0c\u5c31\u50cf MNIST \u56fe\u7247\u90a3\u6837\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u5206\u7c7b\u5668\u7684\u8f93\u51fa\u662f\u591a\u6807\u7b7e\u7684\uff08\u4e00\u4e2a\u50cf\u7d20\u4e00\u4e2a\u6807\u7b7e\uff09\u548c\u6bcf\u4e2a\u6807\u7b7e\u53ef\u4ee5\u6709\u591a\u4e2a\u503c\uff08\u50cf\u7d20\u5f3a\u5ea6\u53d6\u503c\u8303\u56f4\u4ece 0 \u5230 255\uff09\u3002\u6240\u4ee5\u5b83\u662f\u4e00\u4e2a\u591a\u8f93\u51fa\u5206\u7c7b\u7cfb\u7edf\u7684\u4f8b\u5b50\u3002 \u5206\u7c7b\u4e0e\u56de\u5f52\u4e4b\u95f4\u7684\u754c\u9650\u662f\u6a21\u7cca\u7684\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u3002\u6309\u7406\u8bf4\uff0c\u9884\u6d4b\u4e00\u4e2a\u50cf\u7d20\u7684\u5f3a\u5ea6\u66f4\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u56de\u5f52\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5206\u7c7b\u4efb\u52a1\u3002\u800c\u4e14\uff0c\u591a\u8f93\u51fa\u7cfb\u7edf\u4e0d\u9650\u4e8e\u5206\u7c7b\u4efb\u52a1\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u8ba9\u4f60\u4e00\u4e2a\u7cfb\u7edf\u7ed9\u6bcf\u4e00\u4e2a\u6837\u4f8b\u90fd\u8f93\u51fa\u591a\u4e2a\u6807\u7b7e\uff0c\u5305\u62ec\u7c7b\u6807\u7b7e\u548c\u503c\u6807\u7b7e\u3002 \u8ba9\u6211\u4eec\u4ece MNIST \u7684\u56fe\u7247\u521b\u5efa\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5f00\u59cb\uff0c\u7136\u540e\u7ed9\u56fe\u7247\u7684\u50cf\u7d20\u5f3a\u5ea6\u6dfb\u52a0\u566a\u58f0\uff0c\u8fd9\u91cc\u662f\u7528 NumPy \u7684 randint() \u51fd\u6570\u3002\u76ee\u6807\u56fe\u50cf\u662f\u539f\u59cb\u56fe\u50cf\u3002 noise = rnd.randint(0, 100, (len(X_train), 784)) noise = rnd.randint(0, 100, (len(X_test), 784)) X_train_mod = X_train + noise X_test_mod = X_test + noise y_train_mod = X_train y_test_mod = X_test \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6d4b\u8bd5\u96c6\u5f53\u4e2d\u7684\u4e00\u5f20\u56fe\u7247\uff08\u662f\u7684\uff0c\u6211\u4eec\u5728\u7aa5\u63a2\u6d4b\u8bd5\u96c6\uff0c\u6240\u4ee5\u4f60\u5e94\u8be5\u9a6c\u4e0a\u90b9\u7709\uff09\uff1a \u5de6\u8fb9\u7684\u52a0\u566a\u58f0\u7684\u8f93\u5165\u56fe\u7247\u3002\u53f3\u8fb9\u662f\u5e72\u51c0\u7684\u76ee\u6807\u56fe\u7247\u3002\u73b0\u5728\u6211\u4eec\u8bad\u7ec3\u5206\u7c7b\u5668\uff0c\u8ba9\u5b83\u6e05\u6d01\u8fd9\u5f20\u56fe\u7247\uff1a knn_clf.fit(X_train_mod, y_train_mod) clean_digit = knn_clf.predict([X_test_mod[some_index]]) plot_digit(clean_digit) \u770b\u8d77\u6765\u8db3\u591f\u63a5\u8fd1\u76ee\u6807\u56fe\u7247\u3002\u73b0\u5728\u603b\u7ed3\u6211\u4eec\u7684\u5206\u7c7b\u4e4b\u65c5\u3002\u5e0c\u671b\u4f60\u73b0\u5728\u5e94\u8be5\u77e5\u9053\u5982\u4f55\u9009\u62e9\u597d\u7684\u91cf\u5ea6\u6807\u51c6\uff0c\u6311\u9009\u51fa\u5408\u9002\u7684\u51c6\u786e\u7387/\u53ec\u56de\u7387\u7684\u6298\u8877\u65b9\u6848\uff0c\u6bd4\u8f83\u5206\u7c7b\u5668\uff0c\u66f4\u6982\u62ec\u5730\u8bf4\uff0c\u5c31\u662f\u4e3a\u4e0d\u540c\u7684\u4efb\u52a1\u5efa\u7acb\u8d77\u597d\u7684\u5206\u7c7b\u7cfb\u7edf\u3002 \u7ec3\u4e60 \u5c1d\u8bd5\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u5efa\u7acb\u4e00\u4e2a\u5206\u7c7b\u5668\uff0c\u4f7f\u5b83\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u7cbe\u5ea6\u8d85\u8fc7 97%\u3002\u63d0\u793a\uff1a KNeighborsClassifier \u975e\u5e38\u9002\u5408\u8fd9\u4e2a\u4efb\u52a1\u3002\u4f60\u53ea\u9700\u8981\u627e\u51fa\u4e00\u4e2a\u597d\u7684\u8d85\u53c2\u6570\u503c\uff08\u8bd5\u4e00\u4e0b\u5bf9\u6743\u91cd\u548c\u8d85\u53c2\u6570 n_neighbors \u8fdb\u884c\u7f51\u683c\u641c\u7d22\uff09\u3002 \u5199\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u662f MNIST \u4e2d\u7684\u56fe\u50cf\u4efb\u610f\u65b9\u5411\u79fb\u52a8\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\u4e00\u4e2a\u50cf\u7d20\u3002\u7136\u540e\uff0c\u5bf9\u8bad\u7ec3\u96c6\u4e0a\u7684\u6bcf\u5f20\u56fe\u7247\uff0c\u590d\u5236\u56db\u4e2a\u79fb\u52a8\u540e\u7684\u526f\u672c\uff08\u6bcf\u4e2a\u65b9\u5411\u4e00\u4e2a\u526f\u672c\uff09\uff0c\u628a\u5b83\u4eec\u52a0\u5230\u8bad\u7ec3\u96c6\u5f53\u4e2d\u53bb\u3002\u6700\u540e\u5728\u6269\u5c55\u540e\u7684\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u4f60\u6700\u597d\u7684\u6a21\u578b\uff0c\u5e76\u4e14\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6d4b\u91cf\u5b83\u7684\u7cbe\u5ea6\u3002\u4f60\u5e94\u8be5\u4f1a\u89c2\u5bdf\u5230\u4f60\u7684\u6a21\u578b\u4f1a\u6709\u66f4\u597d\u7684\u8868\u73b0\u3002\u8fd9\u79cd\u4eba\u5de5\u6269\u5927\u8bad\u7ec3\u96c6\u7684\u65b9\u6cd5\u53eb\u505a\u6570\u636e\u589e\u5f3a\uff0c\u6216\u8005\u8bad\u7ec3\u96c6\u6269\u5f20\u3002 \u62ff Titanic \u6570\u636e\u96c6\u53bb\u6363\u9f13\u4e00\u756a\u3002\u5f00\u59cb\u8fd9\u4e2a\u9879\u76ee\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u5e73\u53f0\uff1aKaggle\uff01 \u5efa\u7acb\u4e00\u4e2a\u5783\u573e\u90ae\u4ef6\u5206\u7c7b\u5668\uff08\u8fd9\u662f\u4e00\u4e2a\u66f4\u6709\u6311\u6218\u6027\u7684\u7ec3\u4e60\uff09\uff1a \u4e0b\u8f7d\u5783\u573e\u90ae\u4ef6\u548c\u975e\u5783\u573e\u90ae\u4ef6\u7684\u6837\u4f8b\u6570\u636e\u3002\u5730\u5740\u662f Apache SpamAssassin \u7684\u516c\u5171\u6570\u636e\u96c6 \u89e3\u538b\u8fd9\u4e9b\u6570\u636e\u96c6\uff0c\u5e76\u4e14\u719f\u6089\u5b83\u7684\u6570\u636e\u683c\u5f0f\u3002 \u5c06\u6570\u636e\u96c6\u5206\u6210\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6 \u5199\u4e00\u4e2a\u6570\u636e\u51c6\u5907\u7684\u6d41\u6c34\u7ebf\uff0c\u5c06\u6bcf\u4e00\u5c01\u90ae\u4ef6\u8f6c\u6362\u4e3a\u7279\u5f81\u5411\u91cf\u3002\u4f60\u7684\u6d41\u6c34\u7ebf\u5e94\u8be5\u5c06\u4e00\u5c01\u90ae\u4ef6\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7a00\u758f\u5411\u91cf\uff0c\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u8bcd\uff0c\u8fd9\u4e2a\u5411\u91cf\u6807\u5fd7\u54ea\u4e2a\u8bcd\u51fa\u73b0\u4e86\uff0c\u54ea\u4e2a\u8bcd\u6ca1\u6709\u51fa\u73b0\u3002\u4e3e\u4f8b\u5b50\uff0c\u5982\u679c\u6240\u6709\u90ae\u4ef6\u53ea\u5305\u542b\u4e86 \"Hello\",\"How\",\"are\", \"you\" \u8fd9\u56db\u4e2a\u8bcd\uff0c\u90a3\u4e48\u4e00\u5c01\u90ae\u4ef6\uff08\u5185\u5bb9\u662f\uff1a \"Hello you Hello Hello you\" \uff09\u5c06\u4f1a\u88ab\u8f6c\u6362\u4e3a\u5411\u91cf [1, 0, 0, 1] (\u610f\u601d\u662f\uff1a \"Hello\" \u51fa\u73b0\uff0c \"How\" \u4e0d\u51fa\u73b0\uff0c \"are\" \u4e0d\u51fa\u73b0\uff0c \"you\" \u51fa\u73b0)\uff0c\u6216\u8005 [3, 0, 0, 2] \uff0c\u5982\u679c\u4f60\u60f3\u6570\u51fa\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u4f60\u4e5f\u8bb8\u60f3\u7ed9\u4f60\u7684\u6d41\u6c34\u7ebf\u589e\u52a0\u8d85\u53c2\u6570\uff0c\u63a7\u5236\u662f\u5426\u5265\u8fc7\u90ae\u4ef6\u5934\u3001\u5c06\u90ae\u4ef6\u8f6c\u6362\u4e3a\u5c0f\u5199\u3001\u53bb\u9664\u6807\u70b9\u7b26\u53f7\u3001\u5c06\u6240\u6709 URL \u66ff\u6362\u6210 \"URL\" \uff0c\u5c06\u6240\u6709\u6570\u5b57\u66ff\u6362\u6210 \"NUMBER\" \uff0c\u6216\u8005\u751a\u81f3\u63d0\u53d6\u8bcd\u5e72\uff08\u6bd4\u5982\uff0c\u622a\u65ad\u8bcd\u5c3e\u3002\u6709\u73b0\u6210\u7684 Python \u5e93\u53ef\u4ee5\u505a\u5230\u8fd9\u70b9\uff09\u3002 \u7136\u540e \u5c1d\u8bd5\u51e0\u4e2a\u4e0d\u540c\u7684\u5206\u7c7b\u5668\uff0c\u770b\u770b\u4f60\u53ef\u5426\u5efa\u7acb\u4e00\u4e2a\u5f88\u68d2\u7684\u5783\u573e\u90ae\u4ef6\u5206\u7c7b\u5668\uff0c\u540c\u65f6\u6709\u7740\u9ad8\u53ec\u56de\u7387\u548c\u9ad8\u51c6\u786e\u7387\u3002","title":"3.\u5206\u7c7b"},{"location":"3.%E5%88%86%E7%B1%BB/#_1","text":"\u5728\u7b2c\u4e00\u7ae0\u6211\u4eec\u63d0\u5230\u8fc7\u6700\u5e38\u7528\u7684\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\u662f\u56de\u5f52\uff08\u7528\u4e8e\u9884\u6d4b\u67d0\u4e2a\u503c\uff09\u548c\u5206\u7c7b\uff08\u9884\u6d4b\u67d0\u4e2a\u7c7b\u522b\uff09\u3002\u5728\u7b2c\u4e8c\u7ae0\u6211\u4eec\u63a2\u7d22\u4e86\u4e00\u4e2a\u56de\u5f52\u4efb\u52a1\uff1a\u9884\u6d4b\u623f\u4ef7\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u591a\u79cd\u7b97\u6cd5\uff0c\u8bf8\u5982\u7ebf\u6027\u56de\u5f52\uff0c\u51b3\u7b56\u6811\uff0c\u548c\u968f\u673a\u68ee\u6797\uff08\u8fd9\u4e2a\u5c06\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\uff09\u3002\u73b0\u5728\u6211\u4eec\u5c06\u6211\u4eec\u7684\u6ce8\u610f\u529b\u8f6c\u5230\u5206\u7c7b\u4efb\u52a1\u4e0a\u3002","title":"\u4e09\u3001\u5206\u7c7b"},{"location":"3.%E5%88%86%E7%B1%BB/#mnist","text":"\u5728\u672c\u7ae0\u5f53\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528 MNIST \u8fd9\u4e2a\u6570\u636e\u96c6\uff0c\u5b83\u6709\u7740 70000 \u5f20\u89c4\u683c\u8f83\u5c0f\u7684\u624b\u5199\u6570\u5b57\u56fe\u7247\uff0c\u7531\u7f8e\u56fd\u7684\u9ad8\u4e2d\u751f\u548c\u7f8e\u56fd\u4eba\u53e3\u8c03\u67e5\u5c40\u7684\u804c\u5458\u624b\u5199\u800c\u6210\u3002\u8fd9\u76f8\u5f53\u4e8e\u673a\u5668\u5b66\u4e60\u5f53\u4e2d\u7684\u201cHello World\u201d\uff0c\u4eba\u4eec\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u63d0\u51fa\u4e00\u4e2a\u65b0\u7684\u5206\u7c7b\u7b97\u6cd5\uff0c\u90fd\u60f3\u77e5\u9053\u8be5\u7b97\u6cd5\u5728\u8fd9\u4e2a\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\u5982\u4f55\u3002\u673a\u5668\u5b66\u4e60\u7684\u521d\u5b66\u8005\u8fdf\u65e9\u4e5f\u4f1a\u5904\u7406 MNIST \u8fd9\u4e2a\u6570\u636e\u96c6\u3002 Scikit-Learn \u63d0\u4f9b\u4e86\u8bb8\u591a\u8f85\u52a9\u51fd\u6570\uff0c\u4ee5\u4fbf\u4e8e\u4e0b\u8f7d\u6d41\u884c\u7684\u6570\u636e\u96c6\u3002MNIST \u662f\u5176\u4e2d\u4e00\u4e2a\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u83b7\u53d6 MNIST >>> from sklearn.datasets import fetch_mldata >>> mnist = fetch_mldata('MNIST original') >>> mnist {'COL_NAMES': ['label', 'data'], 'DESCR': 'mldata.org dataset: mnist-original', 'data': array([[0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], ..., [0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0]], dtype=uint8), 'target': array([ 0., 0., 0., ..., 9., 9., 9.])} \u4e00\u822c\u800c\u8a00\uff0c\u7531 sklearn \u52a0\u8f7d\u7684\u6570\u636e\u96c6\u6709\u7740\u76f8\u4f3c\u7684\u5b57\u5178\u7ed3\u6784\uff0c\u8fd9\u5305\u62ec\uff1a - DESCR \u952e\u63cf\u8ff0\u6570\u636e\u96c6 - data \u952e\u5b58\u653e\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u6837\u4f8b\uff0c\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u7279\u5f81 - target \u952e\u5b58\u653e\u4e00\u4e2a\u6807\u7b7e\u6570\u7ec4 \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u8fd9\u4e9b\u6570\u7ec4 >>> X, y = mnist[\"data\"], mnist[\"target\"] >>> X.shape (70000, 784) >>> y.shape (70000,) MNIST \u6709 70000 \u5f20\u56fe\u7247\uff0c\u6bcf\u5f20\u56fe\u7247\u6709 784 \u4e2a\u7279\u5f81\u3002\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u56fe\u7247\u90fd\u662f 28*28 \u50cf\u7d20\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a\u50cf\u7d20\u7684\u503c\u4ecb\u4e8e 0~255 \u4e4b\u95f4\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u770b\u6570\u636e\u96c6\u7684\u67d0\u4e00\u4e2a\u6570\u5b57\u3002\u4f60\u53ea\u9700\u8981\u5c06\u67d0\u4e2a\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf\uff0c reshape \u4e3a 28*28 \u7684\u6570\u7ec4\uff0c\u7136\u540e\u4f7f\u7528 Matplotlib \u7684 imshow \u51fd\u6570\u5c55\u793a\u51fa\u6765\u3002 %matplotlib inline import matplotlib import matplotlib.pyplot as plt some_digit = X[36000] some_digit_image = some_digit.reshape(28, 28) plt.imshow(some_digit_image, cmap = matplotlib.cm.binary, interpolation=\"nearest\") plt.axis(\"off\") plt.show() \u8fd9\u770b\u8d77\u6765\u50cf\u4e2a 5\uff0c\u5b9e\u9645\u4e0a\u5b83\u7684\u6807\u7b7e\u544a\u8bc9\u6211\u4eec\uff1a >>> y[36000] 5.0 \u56fe3-1 \u5c55\u793a\u4e86\u4e00\u4e9b\u6765\u81ea MNIST \u6570\u636e\u96c6\u7684\u56fe\u7247\u3002\u5f53\u4f60\u5904\u7406\u66f4\u52a0\u590d\u6742\u7684\u5206\u7c7b\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u8ba9\u4f60\u66f4\u6709\u611f\u89c9\u3002 \u5148\u7b49\u4e00\u4e0b\uff01\u4f60\u603b\u662f\u5e94\u8be5\u5148\u521b\u5efa\u6d4b\u8bd5\u96c6\uff0c\u5e76\u4e14\u5728\u9a8c\u8bc1\u6570\u636e\u4e4b\u524d\u5148\u628a\u6d4b\u8bd5\u96c6\u667e\u5230\u4e00\u8fb9\u3002MNIST \u6570\u636e\u96c6\u5df2\u7ecf\u4e8b\u5148\u88ab\u5206\u6210\u4e86\u4e00\u4e2a\u8bad\u7ec3\u96c6\uff08\u524d 60000 \u5f20\u56fe\u7247\uff09\u548c\u4e00\u4e2a\u6d4b\u8bd5\u96c6\uff08\u6700\u540e 10000 \u5f20\u56fe\u7247\uff09 X_train, X_test, y_train, y_test = X[:60000], X[60000:], y[:60000], y[60000:] \u8ba9\u6211\u4eec\u6253\u4e71\u8bad\u7ec3\u96c6\u3002\u8fd9\u53ef\u4ee5\u4fdd\u8bc1\u4ea4\u53c9\u9a8c\u8bc1\u7684\u6bcf\u4e00\u6298\u90fd\u662f\u76f8\u4f3c\uff08\u4f60\u4e0d\u4f1a\u671f\u5f85\u67d0\u4e00\u6298\u7f3a\u5c11\u67d0\u7c7b\u6570\u5b57\uff09\u3002\u800c\u4e14\uff0c\u4e00\u4e9b\u5b66\u4e60\u7b97\u6cd5\u5bf9\u8bad\u7ec3\u6837\u4f8b\u7684\u987a\u5e8f\u654f\u611f\uff0c\u5f53\u5b83\u4eec\u5728\u4e00\u884c\u5f53\u4e2d\u5f97\u5230\u8bb8\u591a\u76f8\u4f3c\u7684\u6837\u4f8b\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5c06\u4f1a\u8868\u73b0\u5f97\u975e\u5e38\u5dee\u3002\u6253\u4e71\u6570\u636e\u96c6\u5c06\u4fdd\u8bc1\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u53d1\u751f\u3002 import numpy as np shuffle_index = np.random.permutation(60000) X_train, y_train = X_train[shuffle_index], y_train[shuffle_index]","title":"MNIST"},{"location":"3.%E5%88%86%E7%B1%BB/#_2","text":"\u73b0\u5728\u6211\u4eec\u7b80\u5316\u4e00\u4e0b\u95ee\u9898\uff0c\u53ea\u5c1d\u8bd5\u53bb\u8bc6\u522b\u4e00\u4e2a\u6570\u5b57\uff0c\u6bd4\u5982\u8bf4\uff0c\u6570\u5b57 5\u3002\u8fd9\u4e2a\u201c\u6570\u5b57 5 \u68c0\u6d4b\u5668\u201d\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\uff0c\u80fd\u591f\u8bc6\u522b\u4e24\u7c7b\u522b\uff0c\u201c\u662f 5\u201d\u548c\u201c\u975e 5\u201d\u3002\u8ba9\u6211\u4eec\u4e3a\u8fd9\u4e2a\u5206\u7c7b\u4efb\u52a1\u521b\u5efa\u76ee\u6807\u5411\u91cf\uff1a y_train_5 = (y_train == 5) # True for all 5s, False for all other digits. y_test_5 = (y_test == 5) \u73b0\u5728\u8ba9\u6211\u4eec\u6311\u9009\u4e00\u4e2a\u5206\u7c7b\u5668\u53bb\u8bad\u7ec3\u5b83\u3002\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u5206\u7c7b\u5668 SGD\uff0c\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u5f00\u59cb\u3002\u4f7f\u7528 Scikit-Learn \u7684 SGDClassifier \u7c7b\u3002\u8fd9\u4e2a\u5206\u7c7b\u5668\u6709\u4e00\u4e2a\u597d\u5904\u662f\u80fd\u591f\u9ad8\u6548\u5730\u5904\u7406\u975e\u5e38\u5927\u7684\u6570\u636e\u96c6\u3002\u8fd9\u90e8\u5206\u539f\u56e0\u5728\u4e8eSGD\u4e00\u6b21\u53ea\u5904\u7406\u4e00\u6761\u6570\u636e\uff0c\u8fd9\u4e5f\u4f7f\u5f97 SGD \u9002\u5408\u5728\u7ebf\u5b66\u4e60\uff08online learning\uff09\u3002\u6211\u4eec\u5728\u7a0d\u540e\u4f1a\u770b\u5230\u5b83\u3002\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a SGDClassifier \u548c\u5728\u6574\u4e2a\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u5b83\u3002 from sklearn.linear_model import SGDClassifier sgd_clf = SGDClassifier(random_state=42) sgd_clf.fit(X_train, y_train_5) SGDClassifier \u4f9d\u8d56\u4e8e\u8bad\u7ec3\u96c6\u7684\u968f\u673a\u7a0b\u5ea6\uff08\u6240\u4ee5\u88ab\u547d\u540d\u4e3a stochastic\uff0c\u968f\u673a\u4e4b\u4e49\uff09\u3002\u5982\u679c\u4f60\u60f3\u91cd\u73b0\u7ed3\u679c\uff0c\u4f60\u5e94\u8be5\u56fa\u5b9a\u53c2\u6570 random_state \u73b0\u5728\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u67e5\u51fa\u6570\u5b57 5 \u7684\u56fe\u7247\u3002 >>> sgd_clf.predict([some_digit]) array([ True], dtype=bool) \u5206\u7c7b\u5668\u731c\u6d4b\u8fd9\u4e2a\u6570\u5b57\u4ee3\u8868 5\uff08 True \uff09\u3002\u770b\u8d77\u6765\u5728\u8fd9\u4e2a\u4f8b\u5b50\u5f53\u4e2d\uff0c\u5b83\u731c\u5bf9\u4e86\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u8bc4\u4f30\u8fd9\u4e2a\u6a21\u578b\u7684\u6027\u80fd\u3002","title":"\u8bad\u7ec3\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668"},{"location":"3.%E5%88%86%E7%B1%BB/#_3","text":"\u8bc4\u4f30\u4e00\u4e2a\u5206\u7c7b\u5668\uff0c\u901a\u5e38\u6bd4\u8bc4\u4f30\u4e00\u4e2a\u56de\u5f52\u5668\u66f4\u52a0\u7384\u5b66\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u4f1a\u82b1\u5927\u91cf\u7684\u7bc7\u5e45\u5728\u8fd9\u4e2a\u8bdd\u9898\u4e0a\u3002\u6709\u8bb8\u591a\u91cf\u5ea6\u6027\u80fd\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u62ff\u6765\u4e00\u676f\u5496\u5561\u548c\u51c6\u5907\u5b66\u4e60\u8bb8\u591a\u65b0\u6982\u5ff5\u548c\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\u5427\u3002","title":"\u5bf9\u6027\u80fd\u7684\u8bc4\u4f30"},{"location":"3.%E5%88%86%E7%B1%BB/#_4","text":"\u8bc4\u4f30\u4e00\u4e2a\u6a21\u578b\u7684\u597d\u65b9\u6cd5\u662f\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u5c31\u50cf\u7b2c\u4e8c\u7ae0\u6240\u505a\u7684\u90a3\u6837\u3002 \u5b9e\u73b0\u4ea4\u53c9\u9a8c\u8bc1 \u5728\u4ea4\u53c9\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\uff0c\u6709\u65f6\u5019\u4f60\u4f1a\u9700\u8981\u66f4\u591a\u7684\u63a7\u5236\u6743\uff0c\u76f8\u8f83\u4e8e\u51fd\u6570 cross_val_score() \u6216\u8005\u5176\u4ed6\u76f8\u4f3c\u51fd\u6570\u6240\u63d0\u4f9b\u7684\u529f\u80fd\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u5b9e\u73b0\u4f60\u81ea\u5df1\u7248\u672c\u7684\u4ea4\u53c9\u9a8c\u8bc1\u3002\u4e8b\u5b9e\u4e0a\u5b83\u76f8\u5f53\u7b80\u5355\u3002\u4ee5\u4e0b\u4ee3\u7801\u7c97\u7565\u5730\u505a\u4e86\u548c cross_val_score() \u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u5e76\u4e14\u8f93\u51fa\u76f8\u540c\u7684\u7ed3\u679c\u3002 from sklearn.model_selection import StratifiedKFold from sklearn.base import clone skfolds = StratifiedKFold(n_splits=3, random_state=42) for train_index, test_index in skfolds.split(X_train, y_train_5): clone_clf = clone(sgd_clf) X_train_folds = X_train[train_index] y_train_folds = (y_train_5[train_index]) X_test_fold = X_train[test_index] y_test_fold = (y_train_5[test_index]) clone_clf.fit(X_train_folds, y_train_folds) y_pred = clone_clf.predict(X_test_fold) n_correct = sum(y_pred == y_test_fold) print(n_correct / len(y_pred)) # prints 0.9502, 0.96565 and 0.96495 StratifiedKFold \u7c7b\u5b9e\u73b0\u4e86\u5206\u5c42\u91c7\u6837\uff08\u8be6\u89c1\u7b2c\u4e8c\u7ae0\u7684\u89e3\u91ca\uff09\uff0c\u751f\u6210\u7684\u6298\uff08fold\uff09\u5305\u542b\u4e86\u5404\u7c7b\u76f8\u5e94\u6bd4\u4f8b\u7684\u6837\u4f8b\u3002\u5728\u6bcf\u4e00\u6b21\u8fed\u4ee3\uff0c\u4e0a\u8ff0\u4ee3\u7801\u751f\u6210\u5206\u7c7b\u5668\u7684\u4e00\u4e2a\u514b\u9686\u7248\u672c\uff0c\u5728\u8bad\u7ec3\u6298\uff08training folds\uff09\u7684\u514b\u9686\u7248\u672c\u4e0a\u8fdb\u884c\u8bad\uff0c\u5728\u6d4b\u8bd5\u6298\uff08test folds\uff09\u4e0a\u8fdb\u884c\u9884\u6d4b\u3002\u7136\u540e\u5b83\u8ba1\u7b97\u51fa\u88ab\u6b63\u786e\u9884\u6d4b\u7684\u6570\u76ee\u548c\u8f93\u51fa\u6b63\u786e\u9884\u6d4b\u7684\u6bd4\u4f8b\u3002 \u8ba9\u6211\u4eec\u4f7f\u7528 cross_val_score() \u51fd\u6570\u6765\u8bc4\u4f30 SGDClassifier \u6a21\u578b\uff0c\u540c\u65f6\u4f7f\u7528 K \u6298\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u6b64\u5904\u8ba9 k=3 \u3002\u8bb0\u4f4f\uff1aK \u6298\u4ea4\u53c9\u9a8c\u8bc1\u610f\u5473\u7740\u628a\u8bad\u7ec3\u96c6\u5206\u6210 K \u6298\uff08\u6b64\u5904 3 \u6298\uff09\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u6a21\u578b\u5bf9\u5176\u4e2d\u4e00\u6298\u8fdb\u884c\u9884\u6d4b\uff0c\u5bf9\u5176\u4ed6\u6298\u8fdb\u884c\u8bad\u7ec3\u3002 >>> from sklearn.model_selection import cross_val_score >>> cross_val_score(sgd_clf, X_train, y_train_5, cv=3, scoring=\"accuracy\") array([ 0.9502 , 0.96565, 0.96495] \u54c7\uff01\u5728\u4ea4\u53c9\u9a8c\u8bc1\u4e0a\u6709\u5927\u4e8e 95% \u7684\u7cbe\u5ea6\uff08accuracy\uff09\uff1f\u8fd9\u770b\u8d77\u6765\u5f88\u4ee4\u4eba\u5403\u60ca\u3002\u5148\u522b\u9ad8\u5174\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u975e\u5e38\u7b28\u7684\u5206\u7c7b\u5668\u53bb\u5206\u7c7b\uff0c\u770b\u770b\u5176\u5728\u201c\u975e 5\u201d\u8fd9\u4e2a\u7c7b\u4e0a\u7684\u8868\u73b0\u3002 from sklearn.base import BaseEstimator class Never5Classifier(BaseEstimator): def fit(self, X, y=None): pass def predict(self, X): return np.zeros((len(X), 1), dtype=bool) \u4f60\u80fd\u731c\u5230\u8fd9\u4e2a\u6a21\u578b\u7684\u7cbe\u5ea6\u5417\uff1f\u63ed\u6653\u8c1c\u5e95\uff1a >>> never_5_clf = Never5Classifier() >>> cross_val_score(never_5_clf, X_train, y_train_5, cv=3, scoring=\"accuracy\") array([ 0.909 , 0.90715, 0.9128 ]) \u6ca1\u9519\uff0c\u8fd9\u4e2a\u7b28\u7684\u5206\u7c7b\u5668\u4e5f\u6709 90% \u7684\u7cbe\u5ea6\u3002\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709 10% \u7684\u56fe\u7247\u662f\u6570\u5b57 5\uff0c\u6240\u4ee5\u4f60\u603b\u662f\u731c\u6d4b\u67d0\u5f20\u56fe\u7247\u4e0d\u662f 5\uff0c\u4f60\u4e5f\u4f1a\u670990%\u7684\u53ef\u80fd\u6027\u662f\u5bf9\u7684\u3002 \u8fd9\u8bc1\u660e\u4e86\u4e3a\u4ec0\u4e48\u7cbe\u5ea6\u901a\u5e38\u6765\u8bf4\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u6027\u80fd\u5ea6\u91cf\u6307\u6807\uff0c\u7279\u522b\u662f\u5f53\u4f60\u5904\u7406\u6709\u504f\u5dee\u7684\u6570\u636e\u96c6\uff0c\u6bd4\u65b9\u8bf4\u5176\u4e2d\u4e00\u4e9b\u7c7b\u6bd4\u5176\u4ed6\u7c7b\u9891\u7e41\u5f97\u591a\u3002","title":"\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6d4b\u91cf\u51c6\u786e\u6027"},{"location":"3.%E5%88%86%E7%B1%BB/#_5","text":"\u5bf9\u5206\u7c7b\u5668\u6765\u8bf4\uff0c\u4e00\u4e2a\u597d\u5f97\u591a\u7684\u6027\u80fd\u8bc4\u4f30\u6307\u6807\u662f\u6df7\u6dc6\u77e9\u9635\u3002\u5927\u4f53\u601d\u8def\u662f\uff1a\u8f93\u51fa\u7c7b\u522bA\u88ab\u5206\u7c7b\u6210\u7c7b\u522b B \u7684\u6b21\u6570\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e3a\u4e86\u77e5\u9053\u5206\u7c7b\u5668\u5c06 5 \u8bef\u5206\u4e3a 3 \u7684\u6b21\u6570\uff0c\u4f60\u9700\u8981\u67e5\u770b\u6df7\u6dc6\u77e9\u9635\u7684\u7b2c\u4e94\u884c\u7b2c\u4e09\u5217\u3002 \u4e3a\u4e86\u8ba1\u7b97\u6df7\u6dc6\u77e9\u9635\uff0c\u9996\u5148\u4f60\u9700\u8981\u6709\u4e00\u7cfb\u5217\u7684\u9884\u6d4b\u503c\uff0c\u8fd9\u6837\u624d\u80fd\u5c06\u9884\u6d4b\u503c\u4e0e\u771f\u5b9e\u503c\u505a\u6bd4\u8f83\u3002\u4f60\u6216\u8bb8\u60f3\u5728\u6d4b\u8bd5\u96c6\u4e0a\u505a\u9884\u6d4b\u3002\u4f46\u662f\u6211\u4eec\u73b0\u5728\u5148\u4e0d\u78b0\u5b83\u3002\uff08\u8bb0\u4f4f\uff0c\u53ea\u6709\u5f53\u4f60\u5904\u4e8e\u9879\u76ee\u7684\u5c3e\u58f0\uff0c\u5f53\u4f60\u51c6\u5907\u4e0a\u7ebf\u4e00\u4e2a\u5206\u7c7b\u5668\u7684\u65f6\u5019\uff0c\u4f60\u624d\u5e94\u8be5\u4f7f\u7528\u6d4b\u8bd5\u96c6\uff09\u3002\u76f8\u53cd\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 cross_val_predict() \u51fd\u6570 from sklearn.model_selection import cross_val_predict y_train_pred = cross_val_predict(sgd_clf, X_train, y_train_5, cv=3) \u5c31\u50cf cross_val_score() \uff0c cross_val_predict() \u4e5f\u4f7f\u7528 K \u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002\u5b83\u4e0d\u662f\u8fd4\u56de\u4e00\u4e2a\u8bc4\u4f30\u5206\u6570\uff0c\u800c\u662f\u8fd4\u56de\u57fa\u4e8e\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6298\u505a\u51fa\u7684\u4e00\u4e2a\u9884\u6d4b\u503c\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8bad\u7ec3\u96c6\u7684\u6837\u4f8b\uff0c\u4f60\u5f97\u5230\u4e00\u4e2a\u5e72\u51c0\u7684\u9884\u6d4b\uff08\u201c\u5e72\u51c0\u201d\u662f\u8bf4\u4e00\u4e2a\u6a21\u578b\u5728\u8bad\u7ec3\u8fc7\u7a0b\u5f53\u4e2d\u6ca1\u6709\u7528\u5230\u6d4b\u8bd5\u96c6\u7684\u6570\u636e\uff09\u3002 \u73b0\u5728\u4f7f\u7528 confusion_matrix() \u51fd\u6570\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u6df7\u6dc6\u77e9\u9635\u3002\u4f20\u9012\u76ee\u6807\u7c7b( y_train_5 )\u548c\u9884\u6d4b\u7c7b\uff08 y_train_pred \uff09\u7ed9\u5b83\u3002 >>> from sklearn.metrics import confusion_matrix >>> confusion_matrix(y_train_5, y_train_pred) array([[53272, 1307], [ 1077, 4344]]) \u6df7\u6dc6\u77e9\u9635\u4e2d\u7684\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u5b9e\u9645\u7684\u7c7b, \u800c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u9884\u6d4b\u7684\u7c7b\u3002\u8be5\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u8ba4\u4e3a\u201c\u975e 5\u201d\uff08\u53cd\u4f8b\uff09\u4e2d\u7684 53272 \u5f20\u88ab\u6b63\u786e\u5f52\u7c7b\u4e3a \u201c\u975e 5\u201d\uff08\u4ed6\u4eec\u88ab\u79f0\u4e3a\u771f\u53cd\u4f8b\uff0ctrue negatives\uff09, \u800c\u5176\u4f59 1307 \u88ab\u9519\u8bef\u5f52\u7c7b\u4e3a\"\u662f 5\" \uff08\u5047\u6b63\u4f8b\uff0cfalse positives\uff09\u3002\u7b2c\u4e8c\u884c\u8ba4\u4e3a\u201c\u662f 5\u201d \uff08\u6b63\u4f8b\uff09\u4e2d\u7684 1077 \u88ab\u9519\u8bef\u5730\u5f52\u7c7b\u4e3a\u201c\u975e 5\u201d\uff08\u5047\u53cd\u4f8b\uff0cfalse negatives\uff09\uff0c\u5176\u4f59 4344 \u6b63\u786e\u5206\u7c7b\u4e3a \u201c\u662f 5\u201d\u7c7b\uff08\u771f\u6b63\u4f8b\uff0ctrue positives\uff09\u3002\u4e00\u4e2a\u5b8c\u7f8e\u7684\u5206\u7c7b\u5668\u5c06\u53ea\u6709\u771f\u53cd\u4f8b\u548c\u771f\u6b63\u4f8b\uff0c\u6240\u4ee5\u6df7\u6dc6\u77e9\u9635\u7684\u975e\u96f6\u503c\u4ec5\u5728\u5176\u4e3b\u5bf9\u89d2\u7ebf\uff08\u5de6\u4e0a\u81f3\u53f3\u4e0b\uff09\u3002 >>> confusion_matrix(y_train_5, y_train_perfect_predictions) array([[54579, 0], [ 0, 5421]]) \u6df7\u6dc6\u77e9\u9635\u53ef\u4ee5\u63d0\u4f9b\u5f88\u591a\u4fe1\u606f\u3002\u6709\u65f6\u5019\u4f60\u4f1a\u60f3\u8981\u66f4\u52a0\u7b80\u660e\u7684\u6307\u6807\u3002\u4e00\u4e2a\u6709\u8da3\u7684\u6307\u6807\u662f\u6b63\u4f8b\u9884\u6d4b\u7684\u7cbe\u5ea6\uff0c\u4e5f\u53eb\u505a\u5206\u7c7b\u5668\u7684\u51c6\u786e\u7387\uff08precision\uff09\u3002 \u516c\u5f0f 3-1 \u51c6\u786e\u7387 \u5176\u4e2d TP \u662f\u771f\u6b63\u4f8b\u7684\u6570\u76ee\uff0cFP \u662f\u5047\u6b63\u4f8b\u7684\u6570\u76ee\u3002 \u60f3\u8981\u4e00\u4e2a\u5b8c\u7f8e\u7684\u51c6\u786e\u7387\uff0c\u4e00\u4e2a\u5e73\u51e1\u7684\u65b9\u6cd5\u662f\u6784\u9020\u4e00\u4e2a\u5355\u4e00\u6b63\u4f8b\u7684\u9884\u6d4b\u548c\u786e\u4fdd\u8fd9\u4e2a\u9884\u6d4b\u662f\u6b63\u786e\u7684\uff08 precision = 1/1 = 100% \uff09\u3002\u4f46\u662f\u8fd9\u4ec0\u4e48\u7528\uff0c\u56e0\u4e3a\u5206\u7c7b\u5668\u4f1a\u5ffd\u7565\u6240\u6709\u6837\u4f8b\uff0c\u9664\u4e86\u90a3\u4e00\u4e2a\u6b63\u4f8b\u3002\u6240\u4ee5\u51c6\u786e\u7387\u4e00\u822c\u4f1a\u4f34\u968f\u53e6\u4e00\u4e2a\u6307\u6807\u4e00\u8d77\u4f7f\u7528\uff0c\u8fd9\u4e2a\u6307\u6807\u53eb\u505a\u53ec\u56de\u7387\uff08recall\uff09\uff0c\u4e5f\u53eb\u505a\u654f\u611f\u5ea6\uff08sensitivity\uff09\u6216\u8005\u771f\u6b63\u4f8b\u7387\uff08true positive rate\uff0c TPR\uff09\u3002\u8fd9\u662f\u6b63\u4f8b\u88ab\u5206\u7c7b\u5668\u6b63\u786e\u63a2\u6d4b\u51fa\u7684\u6bd4\u7387\u3002 \u516c\u5f0f 3-2 Recall FN \u662f\u5047\u53cd\u4f8b\u7684\u6570\u76ee\u3002 \u5982\u679c\u4f60\u5bf9\u4e8e\u6df7\u6dc6\u77e9\u9635\u611f\u5230\u56f0\u60d1\uff0c\u56fe 3-2 \u5c06\u5bf9\u4f60\u6709\u5e2e\u52a9","title":"\u6df7\u6dc6\u77e9\u9635"},{"location":"3.%E5%88%86%E7%B1%BB/#_6","text":"Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e9b\u51fd\u6570\u53bb\u8ba1\u7b97\u5206\u7c7b\u5668\u7684\u6307\u6807\uff0c\u5305\u62ec\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u3002 >>> from sklearn.metrics import precision_score, recall_score >>> precision_score(y_train_5, y_pred) # == 4344 / (4344 + 1307) 0.76871350203503808 >>> recall_score(y_train_5, y_train_pred) # == 4344 / (4344 + 1077) 0.79136690647482011 \u5f53\u4f60\u53bb\u89c2\u5bdf\u7cbe\u5ea6\u7684\u65f6\u5019\uff0c\u4f60\u7684\u201c\u6570\u5b57 5 \u63a2\u6d4b\u5668\u201d\u770b\u8d77\u6765\u8fd8\u4e0d\u591f\u597d\u3002\u5f53\u5b83\u58f0\u660e\u67d0\u5f20\u56fe\u7247\u662f 5 \u7684\u65f6\u5019\uff0c\u5b83\u53ea\u6709 77% \u7684\u53ef\u80fd\u6027\u662f\u6b63\u786e\u7684\u3002\u800c\u4e14\uff0c\u5b83\u4e5f\u53ea\u68c0\u6d4b\u51fa\u201c\u662f 5\u201d\u7c7b\u56fe\u7247\u5f53\u4e2d\u7684 79%\u3002 \u901a\u5e38\u7ed3\u5408\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u4f1a\u66f4\u52a0\u65b9\u4fbf\uff0c\u8fd9\u4e2a\u6307\u6807\u53eb\u505a\u201cF1 \u503c\u201d\uff0c\u7279\u522b\u662f\u5f53\u4f60\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u53bb\u6bd4\u8f83\u4e24\u4e2a\u5206\u7c7b\u5668\u7684\u4f18\u52a3\u7684\u65f6\u5019\u3002F1 \u503c\u662f\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5e73\u5747\u3002\u666e\u901a\u7684\u5e73\u5747\u503c\u5e73\u7b49\u5730\u770b\u5f85\u6240\u6709\u7684\u503c\uff0c\u800c\u8c03\u548c\u5e73\u5747\u4f1a\u7ed9\u5c0f\u7684\u503c\u66f4\u5927\u7684\u6743\u91cd\u3002\u6240\u4ee5\uff0c\u8981\u60f3\u5206\u7c7b\u5668\u5f97\u5230\u4e00\u4e2a\u9ad8\u7684 F1 \u503c\uff0c\u9700\u8981\u53ec\u56de\u7387\u548c\u51c6\u786e\u7387\u540c\u65f6\u9ad8\u3002 \u516c\u5f0f 3-3 F1 \u503c \u4e3a\u4e86\u8ba1\u7b97 F1 \u503c\uff0c\u7b80\u5355\u8c03\u7528 f1_score() >>> from sklearn.metrics import f1_score >>> f1_score(y_train_5, y_pred) 0.78468208092485547 F1 \u652f\u6301\u90a3\u4e9b\u6709\u7740\u76f8\u8fd1\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u5206\u7c7b\u5668\u3002\u8fd9\u4e0d\u4f1a\u603b\u662f\u4f60\u60f3\u8981\u7684\u3002\u6709\u7684\u573a\u666f\u4f60\u4f1a\u7edd\u5927\u7a0b\u5ea6\u5730\u5173\u5fc3\u51c6\u786e\u7387\uff0c\u800c\u53e6\u5916\u4e00\u4e9b\u573a\u666f\u4f60\u4f1a\u66f4\u5173\u5fc3\u53ec\u56de\u7387\u3002\u4e3e\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668\u53bb\u68c0\u6d4b\u89c6\u9891\u662f\u5426\u9002\u5408\u513f\u7ae5\u89c2\u770b\uff0c\u4f60\u4f1a\u503e\u5411\u9009\u62e9\u90a3\u79cd\u5373\u4fbf\u62d2\u7edd\u4e86\u5f88\u591a\u597d\u89c6\u9891\u3001\u4f46\u4fdd\u8bc1\u6240\u4fdd\u7559\u7684\u89c6\u9891\u90fd\u662f\u597d\uff08\u9ad8\u51c6\u786e\u7387\uff09\u7684\u5206\u7c7b\u5668\uff0c\u800c\u4e0d\u662f\u90a3\u79cd\u9ad8\u53ec\u56de\u7387\u3001\u4f46\u8ba9\u574f\u89c6\u9891\u6df7\u5165\u7684\u5206\u7c7b\u5668\uff08\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f60\u6216\u8bb8\u60f3\u589e\u52a0\u4eba\u5de5\u53bb\u68c0\u6d4b\u5206\u7c7b\u5668\u9009\u62e9\u51fa\u6765\u7684\u89c6\u9891\uff09\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u52a0\u5165\u4f60\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668\u53bb\u68c0\u6d4b\u76d1\u63a7\u56fe\u50cf\u5f53\u4e2d\u7684\u7a83\u8d3c\uff0c\u6709\u7740 30% \u51c6\u786e\u7387\u300199% \u53ec\u56de\u7387\u7684\u5206\u7c7b\u5668\u6216\u8bb8\u662f\u5408\u9002\u7684\uff08\u5f53\u7136\uff0c\u8b66\u536b\u4f1a\u5f97\u5230\u4e00\u4e9b\u9519\u8bef\u7684\u62a5\u8b66\uff0c\u4f46\u662f\u51e0\u4e4e\u6240\u6709\u7684\u7a83\u8d3c\u90fd\u4f1a\u88ab\u6293\u5230\uff09\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u4f60\u4e0d\u80fd\u540c\u65f6\u62e5\u6709\u4e24\u8005\u3002\u589e\u52a0\u51c6\u786e\u7387\u4f1a\u964d\u4f4e\u53ec\u56de\u7387\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8fd9\u53eb\u505a\u51c6\u786e\u7387\u4e0e\u53ec\u56de\u7387\u4e4b\u95f4\u7684\u6298\u8877\u3002","title":"\u51c6\u786e\u7387\u4e0e\u53ec\u56de\u7387"},{"location":"3.%E5%88%86%E7%B1%BB/#_7","text":"\u4e3a\u4e86\u5f04\u61c2\u8fd9\u4e2a\u6298\u8877\uff0c\u6211\u4eec\u770b\u4e00\u4e0b SGDClassifier \u662f\u5982\u4f55\u505a\u5206\u7c7b\u51b3\u7b56\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u4f8b\uff0c\u5b83\u6839\u636e\u51b3\u7b56\u51fd\u6570\u8ba1\u7b97\u5206\u6570,\u5982\u679c\u8fd9\u4e2a\u5206\u6570\u5927\u4e8e\u4e00\u4e2a\u9608\u503c\uff0c\u5b83\u4f1a\u5c06\u6837\u4f8b\u5206\u914d\u7ed9\u6b63\u4f8b\uff0c\u5426\u5219\u5b83\u5c06\u5206\u914d\u7ed9\u53cd\u4f8b\u3002\u56fe 3-3 \u663e\u793a\u4e86\u51e0\u4e2a\u6570\u5b57\u4ece\u5de6\u8fb9\u7684\u6700\u4f4e\u5206\u6570\u6392\u5230\u53f3\u8fb9\u7684\u6700\u9ad8\u5206\u3002\u5047\u8bbe\u51b3\u7b56\u9608\u503c\u4f4d\u4e8e\u4e2d\u95f4\u7684\u7bad\u5934\uff08\u4ecb\u4e8e\u4e24\u4e2a 5 \u4e4b\u95f4\uff09\uff1a\u60a8\u5c06\u53d1\u73b04\u4e2a\u771f\u6b63\u4f8b\uff08\u6570\u5b57 5\uff09\u548c\u4e00\u4e2a\u5047\u6b63\u4f8b\uff08\u6570\u5b57 6\uff09\u5728\u8be5\u9608\u503c\u7684\u53f3\u4fa7\u3002\u56e0\u6b64,\u4f7f\u7528\u8be5\u9608\u503c,\u51c6\u786e\u7387\u4e3a 80%\uff084/5\uff09\u3002\u4f46\u5b9e\u9645\u6709 6 \u4e2a\u6570\u5b57 5\uff0c\u5206\u7c7b\u5668\u53ea\u68c0\u6d4b 4 \u4e2a, \u6240\u4ee5\u53ec\u56de\u662f 67% \uff084/6\uff09\u3002\u73b0\u5728\uff0c\u5982\u679c\u4f60 \u63d0\u9ad8\u9608\u503c\uff08\u79fb\u52a8\u5230\u53f3\u4fa7\u7684\u7bad\u5934\uff09\uff0c\u5047\u6b63\u4f8b\uff08\u6570\u5b57 6\uff09\u6210\u4e3a\u4e00\u4e2a\u771f\u53cd\u4f8b\uff0c\u4ece\u800c\u63d0\u9ad8\u51c6\u786e\u7387\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9ad8\u8fbe 100%\uff09\uff0c\u4f46\u4e00\u4e2a\u771f\u6b63\u4f8b \u53d8\u6210\u5047\u53cd\u4f8b\uff0c\u53ec\u56de\u7387\u964d\u4f4e\u5230 50%\u3002\u76f8\u53cd\uff0c\u964d\u4f4e\u9608\u503c\u53ef\u63d0\u9ad8\u53ec\u56de\u7387\u3001\u964d\u4f4e\u51c6\u786e\u7387\u3002 ![\u56fe3-3 \u51b3\u7b56\u9608\u503c\u4e0e\u51c6\u786e\u5ea6/\u53ec\u56de\u7387\u6298\u8877][../images/chapter_3/chapter3.3.jpeg] Scikit-Learn \u4e0d\u8ba9\u4f60\u76f4\u63a5\u8bbe\u7f6e\u9608\u503c\uff0c\u4f46\u662f\u5b83\u7ed9\u4f60\u63d0\u4f9b\u4e86\u8bbe\u7f6e\u51b3\u7b56\u5206\u6570\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u51b3\u7b56\u5206\u6570\u53ef\u4ee5\u7528\u6765\u4ea7\u751f\u9884\u6d4b\u3002\u5b83\u4e0d\u662f\u8c03\u7528\u5206\u7c7b\u5668\u7684 predict() \u65b9\u6cd5\uff0c\u800c\u662f\u8c03\u7528 decision_function() \u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u6bcf\u4e00\u4e2a\u6837\u4f8b\u7684\u5206\u6570\u503c\uff0c\u7136\u540e\u57fa\u4e8e\u8fd9\u4e2a\u5206\u6570\u503c\uff0c\u4f7f\u7528\u4f60\u60f3\u8981\u7684\u4efb\u4f55\u9608\u503c\u505a\u51fa\u9884\u6d4b\u3002 >>> y_scores = sgd_clf.decision_function([some_digit]) >>> y_scores array([ 161855.74572176]) >>> threshold = 0 >>> y_some_digit_pred = (y_scores > threshold) array([ True], dtype=bool) SGDClassifier \u7528\u4e86\u4e00\u4e2a\u7b49\u4e8e 0 \u7684\u9608\u503c\uff0c\u6240\u4ee5\u524d\u9762\u7684\u4ee3\u7801\u8fd4\u56de\u4e86\u8ddf predict() \u65b9\u6cd5\u4e00\u6837\u7684\u7ed3\u679c\uff08\u90fd\u8fd4\u56de\u4e86 true \uff09\u3002\u8ba9\u6211\u4eec\u63d0\u9ad8\u8fd9\u4e2a\u9608\u503c\uff1a >>> threshold = 200000 >>> y_some_digit_pred = (y_scores > threshold) >>> y_some_digit_pred array([False], dtype=bool) \u8fd9\u8bc1\u660e\u4e86\u63d0\u9ad8\u9608\u503c\u4f1a\u964d\u8c03\u53ec\u56de\u7387\u3002\u8fd9\u4e2a\u56fe\u7247\u5b9e\u9645\u5c31\u662f\u6570\u5b57 5\uff0c\u5f53\u9608\u503c\u7b49\u4e8e 0 \u7684\u65f6\u5019\uff0c\u5206\u7c7b\u5668\u53ef\u4ee5\u63a2\u6d4b\u5230\u8fd9\u662f\u4e00\u4e2a 5\uff0c\u5f53\u9608\u503c\u63d0\u9ad8\u5230 20000 \u7684\u65f6\u5019\uff0c\u5206\u7c7b\u5668\u5c06\u4e0d\u80fd\u63a2\u6d4b\u5230\u8fd9\u662f\u6570\u5b57 5\u3002 \u90a3\u4e48\uff0c\u4f60\u5e94\u8be5\u5982\u4f55\u4f7f\u7528\u54ea\u4e2a\u9608\u503c\u5462\uff1f\u9996\u5148\uff0c\u4f60\u9700\u8981\u518d\u6b21\u4f7f\u7528 cross_val_predict() \u5f97\u5230\u6bcf\u4e00\u4e2a\u6837\u4f8b\u7684\u5206\u6570\u503c\uff0c\u4f46\u662f\u8fd9\u4e00\u6b21\u6307\u5b9a\u8fd4\u56de\u4e00\u4e2a\u51b3\u7b56\u5206\u6570\uff0c\u800c\u4e0d\u662f\u9884\u6d4b\u503c\u3002 y_scores = cross_val_predict(sgd_clf, X_train, y_train_5, cv=3, method=\"decision_function\") \u73b0\u5728\u6709\u4e86\u8fd9\u4e9b\u5206\u6570\u503c\u3002\u5bf9\u4e8e\u4efb\u4f55\u53ef\u80fd\u7684\u9608\u503c\uff0c\u4f7f\u7528 precision_recall_curve() ,\u4f60\u90fd\u53ef\u4ee5\u8ba1\u7b97\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387: from sklearn.metrics import precision_recall_curve precisions, recalls, thresholds = precision_recall_curve(y_train_5, y_scores) \u6700\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Matplotlib \u753b\u51fa\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\uff08\u56fe 3-4\uff09\uff0c\u8fd9\u91cc\u628a\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u5f53\u4f5c\u662f\u9608\u503c\u7684\u4e00\u4e2a\u51fd\u6570\u3002 def plot_precision_recall_vs_threshold(precisions, recalls, thresholds): plt.plot(thresholds, precisions[:-1], \"b--\", label=\"Precision\") plt.plot(thresholds, recalls[:-1], \"g-\", label=\"Recall\") plt.xlabel(\"Threshold\") plt.legend(loc=\"upper left\") plt.ylim([0, 1]) plot_precision_recall_vs_threshold(precisions, recalls, thresholds) plt.show() \u4f60\u4e5f\u8bb8\u4f1a\u597d\u5947\u4e3a\u4ec0\u4e48\u51c6\u786e\u7387\u66f2\u7ebf\u6bd4\u53ec\u56de\u7387\u66f2\u7ebf\u66f4\u52a0\u8d77\u4f0f\u4e0d\u5e73\u3002\u539f\u56e0\u662f\u51c6\u786e\u7387\u6709\u65f6\u5019\u4f1a\u964d\u4f4e\uff0c\u5c3d\u7ba1\u5f53\u4f60\u63d0\u9ad8\u9608\u503c\u7684\u65f6\u5019\uff0c\u901a\u5e38\u6765\u8bf4\u51c6\u786e\u7387\u4f1a\u968f\u4e4b\u63d0\u9ad8\u3002\u56de\u5934\u770b\u56fe 3-3\uff0c\u7559\u610f\u5f53\u4f60\u4ece\u4e2d\u95f4\u7bad\u5934\u5f00\u59cb\u7136\u540e\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u6570\u5b57\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a \u51c6\u786e\u7387\u4f1a\u7531 4/5\uff0880%\uff09\u964d\u5230 3/4\uff0875%\uff09\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u9608\u503c\u63d0\u9ad8\u65f6\u5019\uff0c\u53ec\u56de\u7387\u53ea\u4f1a\u964d\u4f4e\u3002\u8fd9\u4e5f\u5c31\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u53ec\u56de\u7387\u7684\u66f2\u7ebf\u66f4\u52a0\u5e73\u6ed1\u3002 \u73b0\u5728\u4f60\u53ef\u4ee5\u9009\u62e9\u9002\u5408\u4f60\u4efb\u52a1\u7684\u6700\u4f73\u9608\u503c\u3002\u53e6\u4e00\u4e2a\u9009\u51fa\u597d\u7684\u51c6\u786e\u7387/\u53ec\u56de\u7387\u6298\u8877\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u753b\u51fa\u51c6\u786e\u7387\u5bf9\u53ec\u56de\u7387\u7684\u66f2\u7ebf\uff0c\u5982\u56fe 3-5 \u6240\u793a\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u53ec\u56de\u7387\u5728 80% \u5de6\u53f3\u7684\u65f6\u5019\uff0c\u51c6\u786e\u7387\u6025\u5267\u4e0b\u964d\u3002\u4f60\u53ef\u80fd\u4f1a\u60f3\u9009\u62e9\u5728\u6025\u5267\u4e0b\u964d\u4e4b\u524d\u9009\u62e9\u51fa\u4e00\u4e2a\u51c6\u786e\u7387/\u53ec\u56de\u7387\u6298\u8877\u70b9\u3002\u6bd4\u5982\u8bf4\uff0c\u5728\u53ec\u56de\u7387 60% \u5de6\u53f3\u7684\u70b9\u3002\u5f53\u7136\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u9879\u76ee\u9700\u6c42\u3002 \u6211\u4eec\u5047\u8bbe\u4f60\u51b3\u5b9a\u8fbe\u5230 90% \u7684\u51c6\u786e\u7387\u3002\u4f60\u67e5\u9605\u7b2c\u4e00\u5e45\u56fe\uff08\u653e\u5927\u4e00\u4e9b\uff09\uff0c\u5728 70000 \u9644\u8fd1\u627e\u5230\u4e00\u4e2a\u9608\u503c\u3002\u4e3a\u4e86\u4f5c\u51fa\u9884\u6d4b\uff08\u76ee\u524d\u4e3a\u6b62\u53ea\u5728\u8bad\u7ec3\u96c6\u4e0a\u9884\u6d4b\uff09\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u5206\u7c7b\u5668\u7684 predict() \u65b9\u6cd5\u3002 y_train_pred_90 = (y_scores > 70000) \u8ba9\u6211\u4eec\u68c0\u67e5\u8fd9\u4e9b\u9884\u6d4b\u7684\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\uff1a >>> precision_score(y_train_5, y_train_pred_90) 0.8998702983138781 >>> recall_score(y_train_5, y_train_pred_90) 0.63991883416343853 \u5f88\u68d2\uff01\u4f60\u62e5\u6709\u4e86\u4e00\u4e2a\uff08\u8fd1\u4f3c\uff09 90% \u51c6\u786e\u7387\u7684\u5206\u7c7b\u5668\u3002\u5b83\u76f8\u5f53\u5bb9\u6613\u53bb\u521b\u5efa\u4e00\u4e2a\u4efb\u610f\u51c6\u786e\u7387\u7684\u5206\u7c7b\u5668\uff0c\u53ea\u8981\u5c06\u9608\u503c\u8bbe\u7f6e\u5f97\u8db3\u591f\u9ad8\u3002\u4f46\u662f\uff0c\u4e00\u4e2a\u9ad8\u51c6\u786e\u7387\u7684\u5206\u7c7b\u5668\u4e0d\u662f\u975e\u5e38\u6709\u7528\uff0c\u5982\u679c\u5b83\u7684\u53ec\u56de\u7387\u592a\u4f4e\uff01 \u5982\u679c\u6709\u4eba\u8bf4\u201c\u8ba9\u6211\u4eec\u8fbe\u5230 99% \u7684\u51c6\u786e\u7387\u201d\uff0c\u4f60\u5e94\u8be5\u95ee\u201c\u76f8\u5e94\u7684\u53ec\u56de\u7387\u662f\u591a\u5c11\uff1f\u201d","title":"\u51c6\u786e\u7387/\u53ec\u56de\u7387\u4e4b\u95f4\u7684\u6298\u8877"},{"location":"3.%E5%88%86%E7%B1%BB/#roc","text":"\u53d7\u8bd5\u8005\u5de5\u4f5c\u7279\u5f81\uff08ROC\uff09\u66f2\u7ebf\u662f\u53e6\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\u5e38\u7528\u7684\u5de5\u5177\u3002\u5b83\u975e\u5e38\u7c7b\u4f3c\u4e0e\u51c6\u786e\u7387/\u53ec\u56de\u7387\u66f2\u7ebf\uff0c\u4f46\u4e0d\u662f\u753b\u51fa\u51c6\u786e\u7387\u5bf9\u53ec\u56de\u7387\u7684\u66f2\u7ebf\uff0cROC \u66f2\u7ebf\u662f\u771f\u6b63\u4f8b\u7387\uff08true positive rate\uff0c\u53e6\u4e00\u4e2a\u540d\u5b57\u53eb\u505a\u53ec\u56de\u7387\uff09\u5bf9\u5047\u6b63\u4f8b\u7387\uff08false positive rate, FPR\uff09\u7684\u66f2\u7ebf\u3002FPR \u662f\u53cd\u4f8b\u88ab\u9519\u8bef\u5206\u6210\u6b63\u4f8b\u7684\u6bd4\u7387\u3002\u5b83\u7b49\u4e8e 1 \u51cf\u53bb\u771f\u53cd\u4f8b\u7387\uff08true negative rate\uff0c TNR\uff09\u3002TNR\u662f\u53cd\u4f8b\u88ab\u6b63\u786e\u5206\u7c7b\u7684\u6bd4\u7387\u3002TNR\u4e5f\u53eb\u505a\u7279\u5f02\u6027\u3002\u6240\u4ee5 ROC \u66f2\u7ebf\u753b\u51fa\u53ec\u56de\u7387\u5bf9\uff081 \u51cf\u7279\u5f02\u6027\uff09\u7684\u66f2\u7ebf\u3002 \u4e3a\u4e86\u753b\u51fa ROC \u66f2\u7ebf\uff0c\u4f60\u9996\u5148\u9700\u8981\u8ba1\u7b97\u5404\u79cd\u4e0d\u540c\u9608\u503c\u4e0b\u7684 TPR\u3001FPR\uff0c\u4f7f\u7528 roc_curve() \u51fd\u6570\uff1a from sklearn.metrics import roc_curve fpr, tpr, thresholds = roc_curve(y_train_5, y_scores) \u7136\u540e\u4f60\u53ef\u4ee5\u4f7f\u7528 matplotlib\uff0c\u753b\u51fa FPR \u5bf9 TPR \u7684\u66f2\u7ebf\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u751f\u6210\u56fe 3-6. def plot_roc_curve(fpr, tpr, label=None): plt.plot(fpr, tpr, linewidth=2, label=label) plt.plot([0, 1], [0, 1], 'k--') plt.axis([0, 1, 0, 1]) plt.xlabel('False Positive Rate') plt.ylabel('True Positive Rate') plot_roc_curve(fpr, tpr) plt.show() \u8fd9\u91cc\u540c\u6837\u5b58\u5728\u6298\u8877\u7684\u95ee\u9898\uff1a\u53ec\u56de\u7387\uff08TPR\uff09\u8d8a\u9ad8\uff0c\u5206\u7c7b\u5668\u5c31\u4f1a\u4ea7\u751f\u8d8a\u591a\u7684\u5047\u6b63\u4f8b\uff08FPR\uff09\u3002\u56fe\u4e2d\u7684\u70b9\u7ebf\u662f\u4e00\u4e2a\u5b8c\u5168\u968f\u673a\u7684\u5206\u7c7b\u5668\u751f\u6210\u7684 ROC \u66f2\u7ebf\uff1b\u4e00\u4e2a\u597d\u7684\u5206\u7c7b\u5668\u7684 ROC \u66f2\u7ebf\u5e94\u8be5\u5c3d\u53ef\u80fd\u8fdc\u79bb\u8fd9\u6761\u7ebf\uff08\u5373\u5411\u5de6\u4e0a\u89d2\u65b9\u5411\u9760\u62e2\uff09\u3002 \u4e00\u4e2a\u6bd4\u8f83\u5206\u7c7b\u5668\u4e4b\u95f4\u4f18\u52a3\u7684\u65b9\u6cd5\u662f\uff1a\u6d4b\u91cfROC\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff08AUC\uff09\u3002\u4e00\u4e2a\u5b8c\u7f8e\u7684\u5206\u7c7b\u5668\u7684 ROC AUC \u7b49\u4e8e 1\uff0c\u800c\u4e00\u4e2a\u7eaf\u968f\u673a\u5206\u7c7b\u5668\u7684 ROC AUC \u7b49\u4e8e 0.5\u3002Scikit-Learn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97 ROC AUC\uff1a >>> from sklearn.metrics import roc_auc_score >>> roc_auc_score(y_train_5, y_scores) 0.97061072797174941 \u56e0\u4e3a ROC \u66f2\u7ebf\u8ddf\u51c6\u786e\u7387/\u53ec\u56de\u7387\u66f2\u7ebf\uff08\u6216\u8005\u53eb PR\uff09\u5f88\u7c7b\u4f3c\uff0c\u4f60\u6216\u8bb8\u4f1a\u597d\u5947\u5982\u4f55\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e00\u4e2a\u66f2\u7ebf\u5462\uff1f\u4e00\u4e2a\u7b28\u62d9\u7684\u89c4\u5219\u662f\uff0c\u4f18\u5148\u4f7f\u7528 PR \u66f2\u7ebf\u5f53\u6b63\u4f8b\u5f88\u5c11\uff0c\u6216\u8005\u5f53\u4f60\u5173\u6ce8\u5047\u6b63\u4f8b\u591a\u4e8e\u5047\u53cd\u4f8b\u7684\u65f6\u5019\u3002\u5176\u4ed6\u60c5\u51b5\u4f7f\u7528 ROC \u66f2\u7ebf\u3002\u4e3e\u4f8b\u5b50\uff0c\u56de\u987e\u524d\u9762\u7684 ROC \u66f2\u7ebf\u548c ROC AUC \u6570\u503c\uff0c\u4f60\u6216\u8bb8\u8ba4\u4e3a\u8fd9\u4e2a\u5206\u7c7b\u5668\u5f88\u68d2\u3002\u4f46\u662f\u8fd9\u51e0\u4e4e\u5168\u662f\u56e0\u4e3a\u53ea\u6709\u5c11\u6570\u6b63\u4f8b\uff08\u201c\u662f 5\u201d\uff09\uff0c\u800c\u5927\u90e8\u5206\u662f\u53cd\u4f8b\uff08\u201c\u975e 5\u201d\uff09\u3002\u76f8\u53cd\uff0cPR \u66f2\u7ebf\u6e05\u695a\u663e\u793a\u51fa\u8fd9\u4e2a\u5206\u7c7b\u5668\u8fd8\u6709\u5f88\u5927\u7684\u6539\u5584\u7a7a\u95f4\uff08PR \u66f2\u7ebf\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u9760\u8fd1\u53f3\u4e0a\u89d2\uff09\u3002 \u8ba9\u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a RandomForestClassifier \uff0c\u7136\u540e\u62ff\u5b83\u7684\u7684ROC\u66f2\u7ebf\u548cROC AUC\u6570\u503c\u53bb\u8ddf SGDClassifier \u7684\u6bd4\u8f83\u3002\u9996\u5148\u4f60\u9700\u8981\u5f97\u5230\u8bad\u7ec3\u96c6\u6bcf\u4e2a\u6837\u4f8b\u7684\u6570\u503c\u3002\u4f46\u662f\u7531\u4e8e\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c RandomForestClassifier \u4e0d\u63d0\u4f9b decision_function() \u65b9\u6cd5\u3002\u76f8\u53cd\uff0c\u5b83\u63d0\u4f9b\u4e86 predict_proba() \u65b9\u6cd5\u3002Skikit-Learn\u5206\u7c7b\u5668\u901a\u5e38\u4e8c\u8005\u4e2d\u7684\u4e00\u4e2a\u3002 predict_proba() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u6837\u4f8b\uff0c\u6bcf\u4e00\u5217\u4ee3\u8868\u4e00\u4e2a\u7c7b\u3002\u6570\u7ec4\u5f53\u4e2d\u7684\u503c\u7684\u610f\u601d\u662f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6837\u4f8b\u5c5e\u4e8e\u7ed9\u5b9a\u7c7b\u7684\u6982\u7387\u3002\u6bd4\u5982\uff0c70%\u7684\u6982\u7387\u8fd9\u5e45\u56fe\u662f\u6570\u5b57 5\u3002 from sklearn.ensemble import RandomForestClassifier forest_clf = RandomForestClassifier(random_state=42) y_probas_forest = cross_val_predict(forest_clf, X_train, y_train_5, cv=3, method=\"predict_proba\") \u4f46\u662f\u8981\u753b ROC \u66f2\u7ebf\uff0c\u4f60\u9700\u8981\u7684\u662f\u6837\u4f8b\u7684\u5206\u6570\uff0c\u800c\u4e0d\u662f\u6982\u7387\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u6b63\u4f8b\u7684\u6982\u7387\u5f53\u4f5c\u6837\u4f8b\u7684\u5206\u6570\u3002 y_scores_forest = y_probas_forest[:, 1] # score = proba of positive class fpr_forest, tpr_forest, thresholds_forest = roc_curve(y_train_5,y_scores_forest) \u73b0\u5728\u4f60\u5373\u5c06\u5f97\u5230 ROC \u66f2\u7ebf\u3002\u5c06\u524d\u9762\u4e00\u4e2a\u5206\u7c7b\u5668\u7684 ROC \u66f2\u7ebf\u4e00\u5e76\u753b\u51fa\u6765\u662f\u5f88\u6709\u7528\u7684\uff0c\u53ef\u4ee5\u6e05\u695a\u5730\u8fdb\u884c\u6bd4\u8f83\u3002\u89c1\u56fe 3-7\u3002 plt.plot(fpr, tpr, \"b:\", label=\"SGD\") plot_roc_curve(fpr_forest, tpr_forest, \"Random Forest\") plt.legend(loc=\"bottom right\") plt.show() \u5982\u4f60\u6240\u89c1\uff0c RandomForestClassifier \u7684 ROC \u66f2\u7ebf\u6bd4 SGDClassifier \u7684\u597d\u5f97\u591a\uff1a\u5b83\u66f4\u9760\u8fd1\u5de6\u4e0a\u89d2\u3002\u6240\u4ee5\uff0c\u5b83\u7684 ROC AUC \u4e5f\u4f1a\u66f4\u5927\u3002 >>> roc_auc_score(y_train_5, y_scores_forest) 0.99312433660038291 \u8ba1\u7b97\u4e00\u4e0b\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\uff1a98.5% \u7684\u51c6\u786e\u7387\uff0c82.8% \u7684\u53ec\u56de\u7387\u3002\u8fd8\u4e0d\u9519\u3002 \u73b0\u5728\u4f60\u77e5\u9053\u5982\u4f55\u8bad\u7ec3\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\uff0c\u9009\u62e9\u5408\u9002\u7684\u6807\u51c6\uff0c\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u53bb\u8bc4\u4f30\u4f60\u7684\u5206\u7c7b\u5668\uff0c\u9009\u62e9\u6ee1\u8db3\u4f60\u9700\u8981\u7684\u51c6\u786e\u7387/\u53ec\u56de\u7387\u6298\u8877\u65b9\u6848\uff0c\u548c\u6bd4\u8f83\u4e0d\u540c\u6a21\u578b\u7684 ROC \u66f2\u7ebf\u548c ROC AUC \u6570\u503c\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u68c0\u6d4b\u66f4\u591a\u7684\u6570\u5b57\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u5b57 5\u3002","title":"ROC \u66f2\u7ebf"},{"location":"3.%E5%88%86%E7%B1%BB/#_8","text":"\u4e8c\u5206\u7c7b\u5668\u53ea\u80fd\u533a\u5206\u4e24\u4e2a\u7c7b\uff0c\u800c\u591a\u7c7b\u5206\u7c7b\u5668\uff08\u4e5f\u88ab\u53eb\u505a\u591a\u9879\u5f0f\u5206\u7c7b\u5668\uff09\u53ef\u4ee5\u533a\u5206\u591a\u4e8e\u4e24\u4e2a\u7c7b\u3002 \u4e00\u4e9b\u7b97\u6cd5\uff08\u6bd4\u5982\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u6216\u8005\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff09\u53ef\u4ee5\u76f4\u63a5\u5904\u7406\u591a\u7c7b\u5206\u7c7b\u95ee\u9898\u3002\u5176\u4ed6\u4e00\u4e9b\u7b97\u6cd5\uff08\u6bd4\u5982 SVM \u5206\u7c7b\u5668\u6216\u8005\u7ebf\u6027\u5206\u7c7b\u5668\uff09\u5219\u662f\u4e25\u683c\u7684\u4e8c\u5206\u7c7b\u5668\u3002\u7136\u540e\uff0c\u6709\u8bb8\u591a\u7b56\u7565\u53ef\u4ee5\u8ba9\u4f60\u7528\u4e8c\u5206\u7c7b\u5668\u53bb\u6267\u884c\u591a\u7c7b\u5206\u7c7b\u3002 \u4e3e\u4f8b\u5b50\uff0c\u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5c06\u56fe\u7247\u5206\u6210 10 \u7c7b\uff08\u4ece 0 \u5230 9\uff09\u7684\u7cfb\u7edf\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\uff1a\u8bad\u7ec310\u4e2a\u4e8c\u5206\u7c7b\u5668\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u4e00\u4e2a\u6570\u5b57\uff08\u63a2\u6d4b\u5668 0\uff0c\u63a2\u6d4b\u5668 1\uff0c\u63a2\u6d4b\u5668 2\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002\u7136\u540e\u5f53\u4f60\u60f3\u5bf9\u67d0\u5f20\u56fe\u7247\u8fdb\u884c\u5206\u7c7b\u7684\u65f6\u5019\uff0c\u8ba9\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u5bf9\u8fd9\u4e2a\u56fe\u7247\u8fdb\u884c\u5206\u7c7b\uff0c\u9009\u51fa\u51b3\u7b56\u5206\u6570\u6700\u9ad8\u7684\u90a3\u4e2a\u5206\u7c7b\u5668\u3002\u8fd9\u53eb\u505a\u201c\u4e00\u5bf9\u6240\u6709\u201d\uff08OvA\uff09\u7b56\u7565\uff08\u4e5f\u88ab\u53eb\u505a\u201c\u4e00\u5bf9\u5176\u4ed6\u201d\uff09\u3002 \u53e6\u4e00\u4e2a\u7b56\u7565\u662f\u5bf9\u6bcf\u4e00\u5bf9\u6570\u5b57\u90fd\u8bad\u7ec3\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\uff1a\u4e00\u4e2a\u5206\u7c7b\u5668\u7528\u6765\u5904\u7406\u6570\u5b57 0 \u548c\u6570\u5b57 1\uff0c\u4e00\u4e2a\u7528\u6765\u5904\u7406\u6570\u5b57 0 \u548c\u6570\u5b57 2\uff0c\u4e00\u4e2a\u7528\u6765\u5904\u7406\u6570\u5b57 1 \u548c 2\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u53eb\u505a\u201c\u4e00\u5bf9\u4e00\u201d\uff08OvO\uff09\u7b56\u7565\u3002\u5982\u679c\u6709 N \u4e2a\u7c7b\u3002\u4f60\u9700\u8981\u8bad\u7ec3 N*(N-1)/2 \u4e2a\u5206\u7c7b\u5668\u3002\u5bf9\u4e8e MNIST \u95ee\u9898\uff0c\u9700\u8981\u8bad\u7ec3 45 \u4e2a\u4e8c\u5206\u7c7b\u5668\uff01\u5f53\u4f60\u60f3\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u5206\u7c7b\uff0c\u4f60\u5fc5\u987b\u5c06\u8fd9\u5f20\u56fe\u7247\u8dd1\u5728\u5168\u90e845\u4e2a\u4e8c\u5206\u7c7b\u5668\u4e0a\u3002\u7136\u540e\u770b\u54ea\u4e2a\u7c7b\u80dc\u51fa\u3002OvO \u7b56\u7565\u7684\u4e3b\u8981\u6709\u70b9\u662f\uff1a\u6bcf\u4e2a\u5206\u7c7b\u5668\u53ea\u9700\u8981\u5728\u8bad\u7ec3\u96c6\u7684\u90e8\u5206\u6570\u636e\u4e0a\u9762\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u90e8\u5206\u6570\u636e\u662f\u5b83\u6240\u9700\u8981\u533a\u5206\u7684\u90a3\u4e24\u4e2a\u7c7b\u5bf9\u5e94\u7684\u6570\u636e\u3002 \u4e00\u4e9b\u7b97\u6cd5\uff08\u6bd4\u5982 SVM \u5206\u7c7b\u5668\uff09\u5728\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u4e0a\u5f88\u96be\u6269\u5c55\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u4e9b\u7b97\u6cd5\uff0cOvO \u662f\u6bd4\u8f83\u597d\u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5728\u5c0f\u7684\u6570\u636e\u96c6\u4e0a\u9762\u53ef\u4ee5\u66f4\u591a\u5730\u8bad\u7ec3\uff0c\u8f83\u4e4b\u4e8e\u5de8\u5927\u7684\u6570\u636e\u96c6\u800c\u8a00\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u5927\u90e8\u5206\u7684\u4e8c\u5206\u7c7b\u5668\u6765\u8bf4\uff0cOvA \u662f\u66f4\u597d\u7684\u9009\u62e9\u3002 Scikit-Learn \u53ef\u4ee5\u63a2\u6d4b\u51fa\u4f60\u60f3\u4f7f\u7528\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\u53bb\u5b8c\u6210\u591a\u5206\u7c7b\u7684\u4efb\u52a1\uff0c\u5b83\u4f1a\u81ea\u52a8\u5730\u6267\u884c OvA\uff08\u9664\u4e86 SVM \u5206\u7c7b\u5668\uff0c\u5b83\u4f7f\u7528 OvO\uff09\u3002\u8ba9\u6211\u4eec\u8bd5\u4e00\u4e0b SGDClassifier . >>> sgd_clf.fit(X_train, y_train) # y_train, not y_train_5 >>> sgd_clf.predict([some_digit]) array([ 5.]) \u5f88\u5bb9\u6613\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u5728\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u4e86\u4e00\u4e2a SGDClassifier \u3002\u8fd9\u4e2a\u5206\u7c7b\u5668\u5904\u7406\u539f\u59cb\u7684\u76ee\u6807class\uff0c\u4ece 0 \u5230 9\uff08 y_train \uff09\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u63a2\u6d4b\u662f\u5426\u4e3a 5 \uff08 y_train_5 \uff09\u3002\u7136\u540e\u5b83\u505a\u51fa\u4e00\u4e2a\u5224\u65ad\uff08\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e0b\u53ea\u6709\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57\uff09\u3002\u5728\u5e55\u540e\uff0cScikit-Learn \u5b9e\u9645\u4e0a\u8bad\u7ec3\u4e86 10 \u4e2a\u4e8c\u5206\u7c7b\u5668\uff0c\u6bcf\u4e2a\u5206\u7c7b\u5668\u90fd\u4ea7\u5230\u4e00\u5f20\u56fe\u7247\u7684\u51b3\u7b56\u6570\u503c\uff0c\u9009\u62e9\u6570\u503c\u6700\u9ad8\u7684\u90a3\u4e2a\u7c7b\u3002 \u4e3a\u4e86\u8bc1\u660e\u8fd9\u662f\u771f\u5b9e\u7684\uff0c\u4f60\u53ef\u4ee5\u8c03\u7528 decision_function() \u65b9\u6cd5\u3002\u4e0d\u662f\u8fd4\u56de\u6bcf\u4e2a\u6837\u4f8b\u7684\u4e00\u4e2a\u6570\u503c\uff0c\u800c\u662f\u8fd4\u56de 10 \u4e2a\u6570\u503c\uff0c\u4e00\u4e2a\u6570\u503c\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u7c7b\u3002 >>> some_digit_scores = sgd_clf.decision_function([some_digit]) >>> some_digit_scores array([[-311402.62954431, -363517.28355739, -446449.5306454 , -183226.61023518, -414337.15339485, 161855.74572176, -452576.39616343, -471957.14962573, -518542.33997148, -536774.63961222]]) \u6700\u9ad8\u6570\u503c\u662f\u5bf9\u5e94\u4e8e\u7c7b\u522b 5 \uff1a >>> np.argmax(some_digit_scores) 5 >>> sgd_clf.classes_ array([ 0., 1., 2., 3., 4., 5., 6., 7., 8., 9.]) >>> sgd_clf.classes_[5] 5.0 \u4e00\u4e2a\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\u597d\u4e86\u4e4b\u540e\uff0c\u5b83\u4f1a\u4fdd\u5b58\u76ee\u6807\u7c7b\u522b\u5217\u8868\u5230\u5b83\u7684\u5c5e\u6027 classes_ \u4e2d\u53bb\uff0c\u6309\u7167\u503c\u6392\u5e8f\u3002\u5728\u672c\u4f8b\u5b50\u5f53\u4e2d\uff0c\u5728 classes_ \u6570\u7ec4\u5f53\u4e2d\u7684\u6bcf\u4e2a\u7c7b\u7684\u7d22\u5f15\u65b9\u4fbf\u5730\u5339\u914d\u4e86\u7c7b\u672c\u8eab\uff0c\u6bd4\u5982\uff0c\u7d22\u5f15\u4e3a 5 \u7684\u7c7b\u6070\u597d\u662f\u7c7b\u522b 5 \u672c\u8eab\u3002\u4f46\u901a\u5e38\u4e0d\u4f1a\u8fd9\u4e48\u5e78\u8fd0\u3002 \u5982\u679c\u4f60\u60f3\u5f3a\u5236 Scikit-Learn \u4f7f\u7528 OvO \u7b56\u7565\u6216\u8005 OvA \u7b56\u7565\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 OneVsOneClassifier \u7c7b\u6216\u8005 OneVsRestClassifier \u7c7b\u3002\u521b\u5efa\u4e00\u4e2a\u6837\u4f8b\uff0c\u4f20\u9012\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668\u7ed9\u5b83\u7684\u6784\u9020\u51fd\u6570\u3002\u4e3e\u4f8b\u5b50\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u521b\u5efa\u4e00\u4e2a\u591a\u7c7b\u5206\u7c7b\u5668\uff0c\u4f7f\u7528 OvO \u7b56\u7565\uff0c\u57fa\u4e8e SGDClassifier \u3002 >>> from sklearn.multiclass import OneVsOneClassifier >>> ovo_clf = OneVsOneClassifier(SGDClassifier(random_state=42)) >>> ovo_clf.fit(X_train, y_train) >>> ovo_clf.predict([some_digit]) array([ 5.]) >>> len(ovo_clf.estimators_) 45 \u8bad\u7ec3\u4e00\u4e2a RandomForestClassifier \u540c\u6837\u7b80\u5355\uff1a >>> forest_clf.fit(X_train, y_train) >>> forest_clf.predict([some_digit]) array([ 5.]) \u8fd9\u6b21 Scikit-Learn \u6ca1\u6709\u5fc5\u8981\u53bb\u8fd0\u884c OvO \u6216\u8005 OvA\uff0c\u56e0\u4e3a\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u80fd\u591f\u76f4\u63a5\u5c06\u4e00\u4e2a\u6837\u4f8b\u5206\u5230\u591a\u4e2a\u7c7b\u522b\u3002\u4f60\u53ef\u4ee5\u8c03\u7528 predict_proba() \uff0c\u5f97\u5230\u6837\u4f8b\u5bf9\u5e94\u7684\u7c7b\u522b\u7684\u6982\u7387\u503c\u7684\u5217\u8868\uff1a >>> forest_clf.predict_proba([some_digit]) array([[ 0.1, 0. , 0. , 0.1, 0. , 0.8, 0. , 0. , 0. , 0. ]]) \u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u5206\u7c7b\u5668\u76f8\u5f53\u786e\u4fe1\u5b83\u7684\u9884\u6d4b\uff1a\u5728\u6570\u7ec4\u7684\u7d22\u5f15 5 \u4e0a\u7684 0.8\uff0c\u610f\u5473\u7740\u8fd9\u4e2a\u6a21\u578b\u4ee5 80% \u7684\u6982\u7387\u4f30\u7b97\u8fd9\u5f20\u56fe\u7247\u4ee3\u8868\u6570\u5b57 5\u3002\u5b83\u4e5f\u8ba4\u4e3a\u8fd9\u4e2a\u56fe\u7247\u53ef\u80fd\u662f\u6570\u5b57 0 \u6216\u8005\u6570\u5b57 3\uff0c\u5206\u522b\u90fd\u662f 10% \u7684\u51e0\u7387\u3002 \u73b0\u5728\u5f53\u7136\u4f60\u60f3\u8bc4\u4f30\u8fd9\u4e9b\u5206\u7c7b\u5668\u3002\u50cf\u5e73\u5e38\u4e00\u6837\uff0c\u4f60\u60f3\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u3002\u8ba9\u6211\u4eec\u7528 cross_val_score() \u6765\u8bc4\u4f30 SGDClassifier \u7684\u7cbe\u5ea6\u3002 >>> cross_val_score(sgd_clf, X_train, y_train, cv=3, scoring=\"accuracy\") array([ 0.84063187, 0.84899245, 0.86652998]) \u5728\u6240\u6709\u6d4b\u8bd5\u6298\uff08test fold\uff09\u4e0a\uff0c\u5b83\u6709 84% \u7684\u7cbe\u5ea6\u3002\u5982\u679c\u4f60\u662f\u7528\u4e00\u4e2a\u968f\u673a\u7684\u5206\u7c7b\u5668\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230 10% \u7684\u6b63\u786e\u7387\u3002\u6240\u4ee5\u8fd9\u4e0d\u662f\u4e00\u4e2a\u574f\u7684\u5206\u6570\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u505a\u7684\u66f4\u597d\u3002\u4e3e\u4f8b\u5b50\uff0c\u7b80\u5355\u5c06\u8f93\u5165\u6b63\u5219\u5316\uff0c\u5c06\u4f1a\u63d0\u9ad8\u7cbe\u5ea6\u5230 90% \u4ee5\u4e0a\u3002 >>> from sklearn.preprocessing import StandardScaler >>> scaler = StandardScaler() >>> X_train_scaled = scaler.fit_transform(X_train.astype(np.float64)) >>> cross_val_score(sgd_clf, X_train_scaled, y_train, cv=3, scoring=\"accuracy\") array([ 0.91011798, 0.90874544, 0.906636 ])","title":"\u591a\u7c7b\u5206\u7c7b"},{"location":"3.%E5%88%86%E7%B1%BB/#_9","text":"\u5f53\u7136\uff0c\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u5b9e\u9645\u7684\u9879\u76ee\uff0c\u4f60\u4f1a\u5728\u4f60\u7684\u673a\u5668\u5b66\u4e60\u9879\u76ee\u5f53\u4e2d\uff0c\u8ddf\u968f\u4ee5\u4e0b\u6b65\u9aa4\uff08\u89c1\u9644\u5f55 B\uff09\uff1a\u63a2\u7d22\u51c6\u5907\u6570\u636e\u7684\u5019\u9009\u65b9\u6848\uff0c\u5c1d\u8bd5\u591a\u79cd\u6a21\u578b\uff0c\u628a\u6700\u597d\u7684\u51e0\u4e2a\u6a21\u578b\u5217\u4e3a\u5165\u56f4\u540d\u5355\uff0c\u7528 GridSearchCV \u8c03\u8bd5\u8d85\u53c2\u6570\uff0c\u5c3d\u53ef\u80fd\u5730\u81ea\u52a8\u5316\uff0c\u50cf\u4f60\u524d\u9762\u7684\u7ae0\u8282\u505a\u7684\u90a3\u6837\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5047\u8bbe\u4f60\u5df2\u7ecf\u627e\u5230\u4e00\u4e2a\u4e0d\u9519\u7684\u6a21\u578b\uff0c\u4f60\u8bd5\u56fe\u627e\u5230\u65b9\u6cd5\u53bb\u6539\u5584\u5b83\u3002\u4e00\u4e2a\u65b9\u5f0f\u662f\u5206\u6790\u6a21\u578b\u4ea7\u751f\u7684\u8bef\u5dee\u7684\u7c7b\u578b\u3002 \u9996\u5148\uff0c\u4f60\u53ef\u4ee5\u68c0\u67e5\u6df7\u6dc6\u77e9\u9635\u3002\u4f60\u9700\u8981\u4f7f\u7528 cross_val_predict() \u505a\u51fa\u9884\u6d4b\uff0c\u7136\u540e\u8c03\u7528 confusion_matrix() \u51fd\u6570\uff0c\u50cf\u4f60\u65e9\u524d\u505a\u7684\u90a3\u6837\u3002 >>> y_train_pred = cross_val_predict(sgd_clf, X_train_scaled, y_train, cv=3) >>> conf_mx = confusion_matrix(y_train, y_train_pred) >>> conf_mx array([[5725, 3, 24, 9, 10, 49, 50, 10, 39, 4], [ 2, 6493, 43, 25, 7, 40, 5, 10, 109, 8], [ 51, 41, 5321, 104, 89, 26, 87, 60, 166, 13], [ 47, 46, 141, 5342, 1, 231, 40, 50, 141, 92], [ 19, 29, 41, 10, 5366, 9, 56, 37, 86, 189], [ 73, 45, 36, 193, 64, 4582, 111, 30, 193, 94], [ 29, 34, 44, 2, 42, 85, 5627, 10, 45, 0], [ 25, 24, 74, 32, 54, 12, 6, 5787, 15, 236], [ 52, 161, 73, 156, 10, 163, 61, 25, 5027, 123], [ 43, 35, 26, 92, 178, 28, 2, 223, 82, 5240]]) \u8fd9\u91cc\u662f\u4e00\u5bf9\u6570\u5b57\u3002\u4f7f\u7528 Matplotlib \u7684 matshow() \u51fd\u6570\uff0c\u5c06\u6df7\u6dc6\u77e9\u9635\u4ee5\u56fe\u50cf\u7684\u65b9\u5f0f\u5448\u73b0\uff0c\u5c06\u4f1a\u66f4\u52a0\u65b9\u4fbf\u3002 plt.matshow(conf_mx, cmap=plt.cm.gray) plt.show() \u8fd9\u4e2a\u6df7\u6dc6\u77e9\u9635\u770b\u8d77\u6765\u76f8\u5f53\u597d\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7684\u56fe\u7247\u5728\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u3002\u5728\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u610f\u5473\u7740\u88ab\u5206\u7c7b\u6b63\u786e\u3002\u6570\u5b57 5 \u5bf9\u5e94\u7684\u683c\u5b50\u770b\u8d77\u6765\u6bd4\u5176\u4ed6\u6570\u5b57\u8981\u6697\u6de1\u8bb8\u591a\u3002\u8fd9\u53ef\u80fd\u662f\u6570\u636e\u96c6\u5f53\u4e2d\u6570\u5b57 5 \u7684\u56fe\u7247\u6bd4\u8f83\u5c11\uff0c\u53c8\u6216\u8005\u662f\u5206\u7c7b\u5668\u5bf9\u4e8e\u6570\u5b57 5 \u7684\u8868\u73b0\u4e0d\u5982\u5176\u4ed6\u6570\u5b57\u90a3\u4e48\u597d\u3002\u4f60\u53ef\u4ee5\u9a8c\u8bc1\u4e24\u79cd\u60c5\u51b5\u3002 \u8ba9\u6211\u4eec\u5173\u6ce8\u4ec5\u5305\u542b\u8bef\u5dee\u6570\u636e\u7684\u56fe\u50cf\u5448\u73b0\u3002\u9996\u5148\u4f60\u9700\u8981\u5c06\u6df7\u6dc6\u77e9\u9635\u7684\u6bcf\u4e00\u4e2a\u503c\u9664\u4ee5\u76f8\u5e94\u7c7b\u522b\u7684\u56fe\u7247\u7684\u603b\u6570\u76ee\u3002\u8fd9\u6837\u5b50\uff0c\u4f60\u53ef\u4ee5\u6bd4\u8f83\u9519\u8bef\u7387\uff0c\u800c\u4e0d\u662f\u7edd\u5bf9\u7684\u9519\u8bef\u6570\uff08\u8fd9\u5bf9\u5927\u7684\u7c7b\u522b\u4e0d\u516c\u5e73\uff09\u3002 row_sums = conf_mx.sum(axis=1, keepdims=True) norm_conf_mx = conf_mx / row_sums \u73b0\u5728\u8ba9\u6211\u4eec\u7528 0 \u6765\u586b\u5145\u5bf9\u89d2\u7ebf\u3002\u8fd9\u6837\u5b50\u5c31\u53ea\u4fdd\u7559\u4e86\u88ab\u9519\u8bef\u5206\u7c7b\u7684\u6570\u636e\u3002\u8ba9\u6211\u4eec\u753b\u51fa\u8fd9\u4e2a\u7ed3\u679c\u3002 np.fill_diagonal(norm_conf_mx, 0) plt.matshow(norm_conf_mx, cmap=plt.cm.gray) plt.show() \u73b0\u5728\u4f60\u53ef\u4ee5\u6e05\u695a\u770b\u51fa\u5206\u7c7b\u5668\u5236\u9020\u51fa\u6765\u7684\u5404\u7c7b\u8bef\u5dee\u3002\u8bb0\u4f4f\uff1a\u884c\u4ee3\u8868\u5b9e\u9645\u7c7b\u522b\uff0c\u5217\u4ee3\u8868\u9884\u6d4b\u7684\u7c7b\u522b\u3002\u7b2c 8\u30019 \u5217\u76f8\u5f53\u4eae\uff0c\u8fd9\u544a\u8bc9\u4f60\u8bb8\u591a\u56fe\u7247\u88ab\u8bef\u5206\u6210\u6570\u5b57 8 \u6216\u8005\u6570\u5b57 9\u3002\u76f8\u4f3c\u7684\uff0c\u7b2c 8\u30019 \u884c\u4e5f\u76f8\u5f53\u4eae\uff0c\u544a\u8bc9\u4f60\u6570\u5b57 8\u3001\u6570\u5b57 9 \u7ecf\u5e38\u88ab\u8bef\u4ee5\u4e3a\u662f\u5176\u4ed6\u6570\u5b57\u3002\u76f8\u53cd\uff0c\u4e00\u4e9b\u884c\u76f8\u5f53\u9ed1\uff0c\u6bd4\u5982\u7b2c\u4e00\u884c\uff1a\u8fd9\u610f\u5473\u7740\u5927\u90e8\u5206\u7684\u6570\u5b57 1 \u88ab\u6b63\u786e\u5206\u7c7b\uff08\u4e00\u4e9b\u88ab\u8bef\u5206\u7c7b\u4e3a\u6570\u5b57 8 \uff09\u3002\u7559\u610f\u5230\u8bef\u5dee\u56fe\u4e0d\u662f\u4e25\u683c\u5bf9\u79f0\u7684\u3002\u4e3e\u4f8b\u5b50\uff0c\u6bd4\u8d77\u5c06\u6570\u5b57 8 \u8bef\u5206\u7c7b\u4e3a\u6570\u5b57 5 \u7684\u6570\u91cf\uff0c\u6709\u66f4\u591a\u7684\u6570\u5b57 5 \u88ab\u8bef\u5206\u7c7b\u4e3a\u6570\u5b57 8\u3002 \u5206\u6790\u6df7\u6dc6\u77e9\u9635\u901a\u5e38\u53ef\u4ee5\u7ed9\u4f60\u63d0\u4f9b\u6df1\u523b\u7684\u89c1\u89e3\u53bb\u6539\u5584\u4f60\u7684\u5206\u7c7b\u5668\u3002\u56de\u987e\u8fd9\u5e45\u56fe\uff0c\u770b\u6837\u5b50\u4f60\u5e94\u8be5\u52aa\u529b\u6539\u5584\u5206\u7c7b\u5668\u5728\u6570\u5b57 8 \u548c\u6570\u5b57 9 \u4e0a\u7684\u8868\u73b0\uff0c\u548c\u7ea0\u6b63 3/5 \u7684\u6df7\u6dc6\u3002\u4e3e\u4f8b\u5b50\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u53bb\u6536\u96c6\u66f4\u591a\u7684\u6570\u636e\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u6784\u9020\u65b0\u7684\u3001\u6709\u52a9\u4e8e\u5206\u7c7b\u5668\u7684\u7279\u5f81\u3002\u4e3e\u4f8b\u5b50\uff0c\u5199\u4e00\u4e2a\u7b97\u6cd5\u53bb\u6570\u95ed\u5408\u7684\u73af\uff08\u6bd4\u5982\uff0c\u6570\u5b57 8 \u6709\u4e24\u4e2a\u73af\uff0c\u6570\u5b57 6 \u6709\u4e00\u4e2a\uff0c 5 \u6ca1\u6709\uff09\u3002\u53c8\u6216\u8005\u4f60\u53ef\u4ee5\u9884\u5904\u7406\u56fe\u7247\uff08\u6bd4\u5982\uff0c\u4f7f\u7528 Scikit-Learn\uff0cPillow\uff0c OpenCV\uff09\u53bb\u6784\u9020\u4e00\u4e2a\u6a21\u5f0f\uff0c\u6bd4\u5982\u95ed\u5408\u7684\u73af\u3002 \u5206\u6790\u72ec\u7279\u7684\u8bef\u5dee\uff0c\u662f\u83b7\u5f97\u5173\u4e8e\u4f60\u7684\u5206\u7c7b\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u53ca\u5176\u4e3a\u4ec0\u4e48\u5931\u8d25\u7684\u6d1e\u89c1\u7684\u4e00\u4e2a\u597d\u9014\u5f84\u3002\u4f46\u662f\u8fd9\u76f8\u5bf9\u96be\u548c\u8017\u65f6\u3002\u4e3e\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u6570\u5b57 3 \u548c 5 \u7684\u4f8b\u5b50 cl_a, cl_b = 3, 5 X_aa = X_train[(y_train == cl_a) & (y_train_pred == cl_a)] X_ab = X_train[(y_train == cl_a) & (y_train_pred == cl_b)] X_ba = X_train[(y_train == cl_b) & (y_train_pred == cl_a)] X_bb = X_train[(y_train == cl_b) & (y_train_pred == cl_b)] plt.figure(figsize=(8,8)) plt.subplot(221); plot_digits(X_aa[:25], ../images_per_row=5) plt.subplot(222); plot_digits(X_ab[:25], ../images_per_row=5) plt.subplot(223); plot_digits(X_ba[:25], ../images_per_row=5) plt.subplot(224); plot_digits(X_bb[:25], ../images_per_row=5) plt.show() \u5de6\u8fb9\u4e24\u4e2a 5*5 \u7684\u5757\u5c06\u6570\u5b57\u8bc6\u522b\u4e3a 3\uff0c\u53f3\u8fb9\u7684\u5c06\u6570\u5b57\u8bc6\u522b\u4e3a 5\u3002\u4e00\u4e9b\u88ab\u5206\u7c7b\u5668\u9519\u8bef\u5206\u7c7b\u7684\u6570\u5b57\uff08\u6bd4\u5982\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u7684\u5757\uff09\u662f\u4e66\u5199\u5730\u76f8\u5f53\u5dee\uff0c\u751a\u81f3\u8ba9\u4eba\u7c7b\u5206\u7c7b\u90fd\u4f1a\u89c9\u5f97\u5f88\u56f0\u96be\uff08\u6bd4\u5982\u7b2c 8 \u884c\u7b2c 1 \u5217\u7684\u6570\u5b57 5\uff0c\u770b\u8d77\u6765\u975e\u5e38\u50cf\u6570\u5b57 3 \uff09\u3002\u4f46\u662f\uff0c\u5927\u90e8\u5206\u88ab\u8bef\u5206\u7c7b\u7684\u6570\u5b57\uff0c\u5728\u6211\u4eec\u770b\u6765\u90fd\u662f\u663e\u800c\u6613\u89c1\u7684\u9519\u8bef\u3002\u5f88\u96be\u660e\u767d\u4e3a\u4ec0\u4e48\u5206\u7c7b\u5668\u4f1a\u5206\u9519\u3002\u539f\u56e0\u662f\u6211\u4eec\u4f7f\u7528\u7684\u7b80\u5355\u7684 SGDClassifier \uff0c\u8fd9\u662f\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u3002\u5b83\u6240\u505a\u7684\u5168\u90e8\u5de5\u4f5c\u5c31\u662f\u5206\u914d\u4e00\u4e2a\u7c7b\u6743\u91cd\u7ed9\u6bcf\u4e00\u4e2a\u50cf\u7d20\uff0c\u7136\u540e\u5f53\u5b83\u770b\u5230\u4e00\u5f20\u65b0\u7684\u56fe\u7247\uff0c\u5b83\u5c31\u5c06\u52a0\u6743\u7684\u50cf\u7d20\u5f3a\u5ea6\u76f8\u52a0\uff0c\u6bcf\u4e2a\u7c7b\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u503c\u3002\u6240\u4ee5\uff0c\u56e0\u4e3a 3 \u548c 5 \u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u7684\u50cf\u7d20\u6709\u5dee\u5f02\uff0c\u8fd9\u4e2a\u6a21\u578b\u5f88\u5bb9\u6613\u6df7\u6dc6\u5b83\u4eec\u3002 3 \u548c 5 \u4e4b\u95f4\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u8fde\u63a5\u9876\u90e8\u7684\u7ebf\u548c\u5e95\u90e8\u7684\u7ebf\u7684\u7ec6\u7ebf\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u4f60\u753b\u4e00\u4e2a 3\uff0c\u8fde\u63a5\u5904\u7a0d\u5fae\u5411\u5de6\u504f\u79fb\uff0c\u5206\u7c7b\u5668\u5f88\u53ef\u80fd\u5c06\u5b83\u5206\u7c7b\u6210 5\u3002\u53cd\u4e4b\u4ea6\u7136\u3002\u6362\u4e00\u4e2a\u8bf4\u6cd5\uff0c\u8fd9\u4e2a\u5206\u7c7b\u5668\u5bf9\u4e8e\u56fe\u7247\u7684\u4f4d\u79fb\u548c\u65cb\u8f6c\u76f8\u5f53\u654f\u611f\u3002\u6240\u4ee5\uff0c\u51cf\u8f7b 3/5 \u6df7\u6dc6\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\u5bf9\u56fe\u7247\u8fdb\u884c\u9884\u5904\u7406\uff0c\u786e\u4fdd\u5b83\u4eec\u90fd\u5f88\u597d\u5730\u4e2d\u5fc3\u5316\u548c\u4e0d\u8fc7\u5ea6\u65cb\u8f6c\u3002\u8fd9\u540c\u6837\u5f88\u53ef\u80fd\u5e2e\u52a9\u51cf\u8f7b\u5176\u4ed6\u7c7b\u578b\u7684\u9519\u8bef\u3002","title":"\u8bef\u5dee\u5206\u6790"},{"location":"3.%E5%88%86%E7%B1%BB/#_10","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u6709\u7684\u6837\u4f8b\u90fd\u603b\u662f\u88ab\u5206\u914d\u5230\u4ec5\u4e00\u4e2a\u7c7b\u3002\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e5f\u8bb8\u60f3\u8ba9\u4f60\u7684\u5206\u7c7b\u5668\u7ed9\u4e00\u4e2a\u6837\u4f8b\u8f93\u51fa\u591a\u4e2a\u7c7b\u522b\u3002\u6bd4\u5982\u8bf4\uff0c\u601d\u8003\u4e00\u4e2a\u4eba\u8138\u8bc6\u522b\u5668\u3002\u5982\u679c\u5bf9\u4e8e\u540c\u4e00\u5f20\u56fe\u7247\uff0c\u5b83\u8bc6\u522b\u51fa\u51e0\u4e2a\u4eba\uff0c\u5b83\u5e94\u8be5\u505a\u4ec0\u4e48\uff1f\u5f53\u7136\u5b83\u5e94\u8be5\u7ed9\u6bcf\u4e00\u4e2a\u5b83\u8bc6\u522b\u51fa\u7684\u4eba\u8d34\u4e0a\u4e00\u4e2a\u6807\u7b7e\u3002\u6bd4\u65b9\u8bf4\uff0c\u8fd9\u4e2a\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\u6210\u8bc6\u522b\u4e09\u4e2a\u4eba\u8138\uff0cAlice\uff0cBob\uff0cCharlie\uff1b\u7136\u540e\u5f53\u5b83\u88ab\u8f93\u5165\u4e00\u5f20\u542b\u6709 Alice \u548c Bob \u7684\u56fe\u7247\uff0c\u5b83\u5e94\u8be5\u8f93\u51fa [1, 0, 1] \uff08\u610f\u601d\u662f\uff1aAlice \u662f\uff0cBob \u4e0d\u662f\uff0cCharlie \u662f\uff09\u3002\u8fd9\u79cd\u8f93\u51fa\u591a\u4e2a\u4e8c\u503c\u6807\u7b7e\u7684\u5206\u7c7b\u7cfb\u7edf\u88ab\u53eb\u505a\u591a\u6807\u7b7e\u5206\u7c7b\u7cfb\u7edf\u3002 \u76ee\u524d\u6211\u4eec\u4e0d\u6253\u7b97\u6df1\u5165\u8138\u90e8\u8bc6\u522b\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u770b\u4e00\u4e2a\u7b80\u5355\u70b9\u7684\u4f8b\u5b50\uff0c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u9610\u660e\u7684\u76ee\u7684\u3002 from sklearn.neighbors import KNeighborsClassifier y_train_large = (y_train >= 7) y_train_odd = (y_train % 2 == 1) y_multilabel = np.c_[y_train_large, y_train_odd] knn_clf = KNeighborsClassifier() knn_clf.fit(X_train, y_multilabel) \u8fd9\u6bb5\u4ee3\u7801\u521b\u9020\u4e86\u4e00\u4e2a y_multilabel \u6570\u7ec4\uff0c\u91cc\u9762\u5305\u542b\u4e24\u4e2a\u76ee\u6807\u6807\u7b7e\u3002\u7b2c\u4e00\u4e2a\u6807\u7b7e\u6307\u51fa\u8fd9\u4e2a\u6570\u5b57\u662f\u5426\u4e3a\u5927\u6570\u5b57\uff087\uff0c8 \u6216\u8005 9\uff09\uff0c\u7b2c\u4e8c\u4e2a\u6807\u7b7e\u6307\u51fa\u8fd9\u4e2a\u6570\u5b57\u662f\u5426\u662f\u5947\u6570\u3002\u63a5\u4e0b\u6765\u51e0\u884c\u4ee3\u7801\u4f1a\u521b\u5efa\u4e00\u4e2a KNeighborsClassifier \u6837\u4f8b\uff08\u5b83\u652f\u6301\u591a\u6807\u7b7e\u5206\u7c7b\uff0c\u4f46\u4e0d\u662f\u6240\u6709\u5206\u7c7b\u5668\u90fd\u53ef\u4ee5\uff09\uff0c\u7136\u540e\u6211\u4eec\u4f7f\u7528\u591a\u76ee\u6807\u6570\u7ec4\u6765\u8bad\u7ec3\u5b83\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u9884\u6d4b\uff0c\u7136\u540e\u5b83\u8f93\u51fa\u4e24\u4e2a\u6807\u7b7e\uff1a >>> knn_clf.predict([some_digit]) array([[False, True]], dtype=bool) \u5b83\u5de5\u4f5c\u6b63\u786e\u3002\u6570\u5b57 5 \u4e0d\u662f\u5927\u6570\uff08 False \uff09\uff0c\u540c\u65f6\u662f\u4e00\u4e2a\u5947\u6570\uff08 True \uff09\u3002 \u6709\u8bb8\u591a\u65b9\u6cd5\u53bb\u8bc4\u4f30\u4e00\u4e2a\u591a\u6807\u7b7e\u5206\u7c7b\u5668\uff0c\u548c\u9009\u62e9\u6b63\u786e\u7684\u91cf\u5ea6\u6807\u51c6\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u7684\u9879\u76ee\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u4e2a\u4f53\u6807\u7b7e\u53bb\u91cf\u5ea6 F1 \u503c\uff08\u6216\u8005\u524d\u9762\u8ba8\u8bba\u8fc7\u7684\u5176\u4ed6\u4efb\u610f\u7684\u4e8c\u5206\u7c7b\u5668\u7684\u91cf\u5ea6\u6807\u51c6\uff09\uff0c\u7136\u540e\u8ba1\u7b97\u5e73\u5747\u503c\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u8ba1\u7b97\u5168\u90e8\u6807\u7b7e\u7684\u5e73\u5747 F1 \u503c\uff1a >>> y_train_knn_pred = cross_val_predict(knn_clf, X_train, y_train, cv=3) >>> f1_score(y_train, y_train_knn_pred, average=\"macro\") 0.96845540180280221 \u8fd9\u91cc\u5047\u8bbe\u6240\u6709\u6807\u7b7e\u6709\u7740\u540c\u7b49\u7684\u91cd\u8981\u6027\uff0c\u4f46\u53ef\u80fd\u4e0d\u662f\u8fd9\u6837\u3002\u7279\u522b\u662f\uff0c\u5982\u679c\u4f60\u7684 Alice \u7684\u7167\u7247\u6bd4 Bob \u6216\u8005 Charlie \u66f4\u591a\u7684\u65f6\u5019\uff0c\u4e5f\u8bb8\u4f60\u60f3\u8ba9\u5206\u7c7b\u5668\u5728 Alice \u7684\u7167\u7247\u4e0a\u5177\u6709\u66f4\u5927\u7684\u6743\u91cd\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u9009\u9879\u662f\uff1a\u7ed9\u6bcf\u4e00\u4e2a\u6807\u7b7e\u7684\u6743\u91cd\u7b49\u4e8e\u5b83\u7684\u652f\u6301\u5ea6\uff08\u6bd4\u5982\uff0c\u90a3\u4e2a\u6807\u7b7e\u7684\u6837\u4f8b\u7684\u6570\u76ee\uff09\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u70b9\uff0c\u7b80\u5355\u5730\u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\u8bbe\u7f6e average=\"weighted\" \u3002","title":"\u591a\u6807\u7b7e\u5206\u7c7b"},{"location":"3.%E5%88%86%E7%B1%BB/#_11","text":"\u6211\u4eec\u5373\u5c06\u8ba8\u8bba\u7684\u6700\u540e\u4e00\u79cd\u5206\u7c7b\u4efb\u52a1\u88ab\u53eb\u505a\u201c\u591a\u8f93\u51fa-\u591a\u7c7b\u5206\u7c7b\u201d\uff08\u6216\u8005\u7b80\u79f0\u4e3a\u591a\u8f93\u51fa\u5206\u7c7b\uff09\u3002\u5b83\u662f\u591a\u6807\u7b7e\u5206\u7c7b\u7684\u7b80\u5355\u6cdb\u5316\uff0c\u5728\u8fd9\u91cc\u6bcf\u4e00\u4e2a\u6807\u7b7e\u53ef\u4ee5\u662f\u591a\u7c7b\u522b\u7684\uff08\u6bd4\u5982\u8bf4\uff0c\u5b83\u53ef\u4ee5\u6709\u591a\u4e8e\u4e24\u4e2a\u53ef\u80fd\u503c\uff09\u3002 \u4e3a\u4e86\u8bf4\u660e\u8fd9\u70b9\uff0c\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5b83\u53ef\u4ee5\u53bb\u9664\u56fe\u7247\u5f53\u4e2d\u7684\u566a\u97f3\u3002\u5b83\u5c06\u4e00\u5f20\u6df7\u6709\u566a\u97f3\u7684\u56fe\u7247\u4f5c\u4e3a\u8f93\u5165\uff0c\u671f\u5f85\u5b83\u8f93\u51fa\u4e00\u5f20\u5e72\u51c0\u7684\u6570\u5b57\u56fe\u7247\uff0c\u7528\u4e00\u4e2a\u50cf\u7d20\u5f3a\u5ea6\u7684\u6570\u7ec4\u8868\u793a\uff0c\u5c31\u50cf MNIST \u56fe\u7247\u90a3\u6837\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u5206\u7c7b\u5668\u7684\u8f93\u51fa\u662f\u591a\u6807\u7b7e\u7684\uff08\u4e00\u4e2a\u50cf\u7d20\u4e00\u4e2a\u6807\u7b7e\uff09\u548c\u6bcf\u4e2a\u6807\u7b7e\u53ef\u4ee5\u6709\u591a\u4e2a\u503c\uff08\u50cf\u7d20\u5f3a\u5ea6\u53d6\u503c\u8303\u56f4\u4ece 0 \u5230 255\uff09\u3002\u6240\u4ee5\u5b83\u662f\u4e00\u4e2a\u591a\u8f93\u51fa\u5206\u7c7b\u7cfb\u7edf\u7684\u4f8b\u5b50\u3002 \u5206\u7c7b\u4e0e\u56de\u5f52\u4e4b\u95f4\u7684\u754c\u9650\u662f\u6a21\u7cca\u7684\uff0c\u6bd4\u5982\u8fd9\u4e2a\u4f8b\u5b50\u3002\u6309\u7406\u8bf4\uff0c\u9884\u6d4b\u4e00\u4e2a\u50cf\u7d20\u7684\u5f3a\u5ea6\u66f4\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u56de\u5f52\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5206\u7c7b\u4efb\u52a1\u3002\u800c\u4e14\uff0c\u591a\u8f93\u51fa\u7cfb\u7edf\u4e0d\u9650\u4e8e\u5206\u7c7b\u4efb\u52a1\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u8ba9\u4f60\u4e00\u4e2a\u7cfb\u7edf\u7ed9\u6bcf\u4e00\u4e2a\u6837\u4f8b\u90fd\u8f93\u51fa\u591a\u4e2a\u6807\u7b7e\uff0c\u5305\u62ec\u7c7b\u6807\u7b7e\u548c\u503c\u6807\u7b7e\u3002 \u8ba9\u6211\u4eec\u4ece MNIST \u7684\u56fe\u7247\u521b\u5efa\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5f00\u59cb\uff0c\u7136\u540e\u7ed9\u56fe\u7247\u7684\u50cf\u7d20\u5f3a\u5ea6\u6dfb\u52a0\u566a\u58f0\uff0c\u8fd9\u91cc\u662f\u7528 NumPy \u7684 randint() \u51fd\u6570\u3002\u76ee\u6807\u56fe\u50cf\u662f\u539f\u59cb\u56fe\u50cf\u3002 noise = rnd.randint(0, 100, (len(X_train), 784)) noise = rnd.randint(0, 100, (len(X_test), 784)) X_train_mod = X_train + noise X_test_mod = X_test + noise y_train_mod = X_train y_test_mod = X_test \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6d4b\u8bd5\u96c6\u5f53\u4e2d\u7684\u4e00\u5f20\u56fe\u7247\uff08\u662f\u7684\uff0c\u6211\u4eec\u5728\u7aa5\u63a2\u6d4b\u8bd5\u96c6\uff0c\u6240\u4ee5\u4f60\u5e94\u8be5\u9a6c\u4e0a\u90b9\u7709\uff09\uff1a \u5de6\u8fb9\u7684\u52a0\u566a\u58f0\u7684\u8f93\u5165\u56fe\u7247\u3002\u53f3\u8fb9\u662f\u5e72\u51c0\u7684\u76ee\u6807\u56fe\u7247\u3002\u73b0\u5728\u6211\u4eec\u8bad\u7ec3\u5206\u7c7b\u5668\uff0c\u8ba9\u5b83\u6e05\u6d01\u8fd9\u5f20\u56fe\u7247\uff1a knn_clf.fit(X_train_mod, y_train_mod) clean_digit = knn_clf.predict([X_test_mod[some_index]]) plot_digit(clean_digit) \u770b\u8d77\u6765\u8db3\u591f\u63a5\u8fd1\u76ee\u6807\u56fe\u7247\u3002\u73b0\u5728\u603b\u7ed3\u6211\u4eec\u7684\u5206\u7c7b\u4e4b\u65c5\u3002\u5e0c\u671b\u4f60\u73b0\u5728\u5e94\u8be5\u77e5\u9053\u5982\u4f55\u9009\u62e9\u597d\u7684\u91cf\u5ea6\u6807\u51c6\uff0c\u6311\u9009\u51fa\u5408\u9002\u7684\u51c6\u786e\u7387/\u53ec\u56de\u7387\u7684\u6298\u8877\u65b9\u6848\uff0c\u6bd4\u8f83\u5206\u7c7b\u5668\uff0c\u66f4\u6982\u62ec\u5730\u8bf4\uff0c\u5c31\u662f\u4e3a\u4e0d\u540c\u7684\u4efb\u52a1\u5efa\u7acb\u8d77\u597d\u7684\u5206\u7c7b\u7cfb\u7edf\u3002","title":"\u591a\u8f93\u51fa\u5206\u7c7b"},{"location":"3.%E5%88%86%E7%B1%BB/#_12","text":"\u5c1d\u8bd5\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u5efa\u7acb\u4e00\u4e2a\u5206\u7c7b\u5668\uff0c\u4f7f\u5b83\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u7cbe\u5ea6\u8d85\u8fc7 97%\u3002\u63d0\u793a\uff1a KNeighborsClassifier \u975e\u5e38\u9002\u5408\u8fd9\u4e2a\u4efb\u52a1\u3002\u4f60\u53ea\u9700\u8981\u627e\u51fa\u4e00\u4e2a\u597d\u7684\u8d85\u53c2\u6570\u503c\uff08\u8bd5\u4e00\u4e0b\u5bf9\u6743\u91cd\u548c\u8d85\u53c2\u6570 n_neighbors \u8fdb\u884c\u7f51\u683c\u641c\u7d22\uff09\u3002 \u5199\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u662f MNIST \u4e2d\u7684\u56fe\u50cf\u4efb\u610f\u65b9\u5411\u79fb\u52a8\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\u4e00\u4e2a\u50cf\u7d20\u3002\u7136\u540e\uff0c\u5bf9\u8bad\u7ec3\u96c6\u4e0a\u7684\u6bcf\u5f20\u56fe\u7247\uff0c\u590d\u5236\u56db\u4e2a\u79fb\u52a8\u540e\u7684\u526f\u672c\uff08\u6bcf\u4e2a\u65b9\u5411\u4e00\u4e2a\u526f\u672c\uff09\uff0c\u628a\u5b83\u4eec\u52a0\u5230\u8bad\u7ec3\u96c6\u5f53\u4e2d\u53bb\u3002\u6700\u540e\u5728\u6269\u5c55\u540e\u7684\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u4f60\u6700\u597d\u7684\u6a21\u578b\uff0c\u5e76\u4e14\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6d4b\u91cf\u5b83\u7684\u7cbe\u5ea6\u3002\u4f60\u5e94\u8be5\u4f1a\u89c2\u5bdf\u5230\u4f60\u7684\u6a21\u578b\u4f1a\u6709\u66f4\u597d\u7684\u8868\u73b0\u3002\u8fd9\u79cd\u4eba\u5de5\u6269\u5927\u8bad\u7ec3\u96c6\u7684\u65b9\u6cd5\u53eb\u505a\u6570\u636e\u589e\u5f3a\uff0c\u6216\u8005\u8bad\u7ec3\u96c6\u6269\u5f20\u3002 \u62ff Titanic \u6570\u636e\u96c6\u53bb\u6363\u9f13\u4e00\u756a\u3002\u5f00\u59cb\u8fd9\u4e2a\u9879\u76ee\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u5e73\u53f0\uff1aKaggle\uff01 \u5efa\u7acb\u4e00\u4e2a\u5783\u573e\u90ae\u4ef6\u5206\u7c7b\u5668\uff08\u8fd9\u662f\u4e00\u4e2a\u66f4\u6709\u6311\u6218\u6027\u7684\u7ec3\u4e60\uff09\uff1a \u4e0b\u8f7d\u5783\u573e\u90ae\u4ef6\u548c\u975e\u5783\u573e\u90ae\u4ef6\u7684\u6837\u4f8b\u6570\u636e\u3002\u5730\u5740\u662f Apache SpamAssassin \u7684\u516c\u5171\u6570\u636e\u96c6 \u89e3\u538b\u8fd9\u4e9b\u6570\u636e\u96c6\uff0c\u5e76\u4e14\u719f\u6089\u5b83\u7684\u6570\u636e\u683c\u5f0f\u3002 \u5c06\u6570\u636e\u96c6\u5206\u6210\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6 \u5199\u4e00\u4e2a\u6570\u636e\u51c6\u5907\u7684\u6d41\u6c34\u7ebf\uff0c\u5c06\u6bcf\u4e00\u5c01\u90ae\u4ef6\u8f6c\u6362\u4e3a\u7279\u5f81\u5411\u91cf\u3002\u4f60\u7684\u6d41\u6c34\u7ebf\u5e94\u8be5\u5c06\u4e00\u5c01\u90ae\u4ef6\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7a00\u758f\u5411\u91cf\uff0c\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u8bcd\uff0c\u8fd9\u4e2a\u5411\u91cf\u6807\u5fd7\u54ea\u4e2a\u8bcd\u51fa\u73b0\u4e86\uff0c\u54ea\u4e2a\u8bcd\u6ca1\u6709\u51fa\u73b0\u3002\u4e3e\u4f8b\u5b50\uff0c\u5982\u679c\u6240\u6709\u90ae\u4ef6\u53ea\u5305\u542b\u4e86 \"Hello\",\"How\",\"are\", \"you\" \u8fd9\u56db\u4e2a\u8bcd\uff0c\u90a3\u4e48\u4e00\u5c01\u90ae\u4ef6\uff08\u5185\u5bb9\u662f\uff1a \"Hello you Hello Hello you\" \uff09\u5c06\u4f1a\u88ab\u8f6c\u6362\u4e3a\u5411\u91cf [1, 0, 0, 1] (\u610f\u601d\u662f\uff1a \"Hello\" \u51fa\u73b0\uff0c \"How\" \u4e0d\u51fa\u73b0\uff0c \"are\" \u4e0d\u51fa\u73b0\uff0c \"you\" \u51fa\u73b0)\uff0c\u6216\u8005 [3, 0, 0, 2] \uff0c\u5982\u679c\u4f60\u60f3\u6570\u51fa\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u4f60\u4e5f\u8bb8\u60f3\u7ed9\u4f60\u7684\u6d41\u6c34\u7ebf\u589e\u52a0\u8d85\u53c2\u6570\uff0c\u63a7\u5236\u662f\u5426\u5265\u8fc7\u90ae\u4ef6\u5934\u3001\u5c06\u90ae\u4ef6\u8f6c\u6362\u4e3a\u5c0f\u5199\u3001\u53bb\u9664\u6807\u70b9\u7b26\u53f7\u3001\u5c06\u6240\u6709 URL \u66ff\u6362\u6210 \"URL\" \uff0c\u5c06\u6240\u6709\u6570\u5b57\u66ff\u6362\u6210 \"NUMBER\" \uff0c\u6216\u8005\u751a\u81f3\u63d0\u53d6\u8bcd\u5e72\uff08\u6bd4\u5982\uff0c\u622a\u65ad\u8bcd\u5c3e\u3002\u6709\u73b0\u6210\u7684 Python \u5e93\u53ef\u4ee5\u505a\u5230\u8fd9\u70b9\uff09\u3002 \u7136\u540e \u5c1d\u8bd5\u51e0\u4e2a\u4e0d\u540c\u7684\u5206\u7c7b\u5668\uff0c\u770b\u770b\u4f60\u53ef\u5426\u5efa\u7acb\u4e00\u4e2a\u5f88\u68d2\u7684\u5783\u573e\u90ae\u4ef6\u5206\u7c7b\u5668\uff0c\u540c\u65f6\u6709\u7740\u9ad8\u53ec\u56de\u7387\u548c\u9ad8\u51c6\u786e\u7387\u3002","title":"\u7ec3\u4e60"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/","text":"\u56db\u3001\u8bad\u7ec3\u6a21\u578b \u5728\u4e4b\u524d\u7684\u63cf\u8ff0\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u628a\u673a\u5668\u5b66\u4e60\u6a21\u578b\u548c\u8bad\u7ec3\u7b97\u6cd5\u5f53\u4f5c\u9ed1\u7bb1\u5b50\u6765\u5904\u7406\u3002\u5982\u679c\u4f60\u5b9e\u8df5\u8fc7\u524d\u51e0\u7ae0\u7684\u4e00\u4e9b\u793a\u4f8b\uff0c\u4f60\u60ca\u5947\u7684\u53d1\u73b0\u4f60\u53ef\u4ee5\u4f18\u5316\u56de\u5f52\u7cfb\u7edf\uff0c\u6539\u8fdb\u6570\u5b57\u56fe\u50cf\u7684\u5206\u7c7b\u5668\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u96f6\u57fa\u7840\u642d\u5efa\u4e00\u4e2a\u5783\u573e\u90ae\u4ef6\u7684\u5206\u7c7b\u5668\uff0c\u4f46\u662f\u4f60\u5374\u5bf9\u5b83\u4eec\u5185\u90e8\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e00\u65e0\u6240\u77e5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8bb8\u591a\u573a\u5408\u4f60\u90fd\u4e0d\u9700\u8981\u77e5\u9053\u8fd9\u4e9b\u9ed1\u7bb1\u5b50\u7684\u5185\u90e8\u6709\u4ec0\u4e48\uff0c\u5e72\u4e86\u4ec0\u4e48\u3002 \u7136\u800c\uff0c\u5982\u679c\u4f60\u5bf9\u5176\u5185\u90e8\u7684\u5de5\u4f5c\u6d41\u7a0b\u6709\u4e00\u5b9a\u4e86\u89e3\u7684\u8bdd\uff0c\u5f53\u9762\u5bf9\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u65f6\u5019\uff0c\u8fd9\u4e9b\u7406\u8bba\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u7684\u627e\u5230\u6070\u5f53\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u5408\u9002\u7684\u8bad\u7ec3\u7b97\u6cd5\uff0c\u4ee5\u53ca\u4e00\u4e2a\u597d\u7684\u5047\u8bbe\u96c6\u3002\u540c\u65f6\uff0c\u4e86\u89e3\u9ed1\u7bb1\u5b50\u5185\u90e8\u7684\u6784\u6210\uff0c\u6709\u52a9\u4e8e\u4f60\u66f4\u597d\u5730\u8c03\u8bd5\u53c2\u6570\u4ee5\u53ca\u66f4\u6709\u6548\u7684\u8bef\u5dee\u5206\u6790\u3002\u672c\u7ae0\u8ba8\u8bba\u7684\u5927\u90e8\u5206\u8bdd\u9898\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u7406\u89e3\uff0c\u6784\u5efa\uff0c\u4ee5\u53ca\u795e\u7ecf\u7f51\u7edc\uff08\u8be6\u7ec6\u53c2\u8003\u672c\u4e66\u7684\u7b2c\u4e8c\u90e8\u5206\uff09\u7684\u8bad\u7ec3\u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002 \u9996\u5148\u6211\u4eec\u5c06\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e3a\u4f8b\uff0c\u8ba8\u8bba\u4e24\u79cd\u4e0d\u540c\u7684\u8bad\u7ec3\u65b9\u6cd5\u6765\u5f97\u5230\u6a21\u578b\u7684\u6700\u4f18\u89e3\uff1a \u76f4\u63a5\u4f7f\u7528\u5c01\u95ed\u65b9\u7a0b\u8fdb\u884c\u6c42\u6839\u8fd0\u7b97\uff0c\u5f97\u5230\u6a21\u578b\u5728\u5f53\u524d\u8bad\u7ec3\u96c6\u4e0a\u7684\u6700\u4f18\u53c2\u6570\uff08\u5373\u5728\u8bad\u7ec3\u96c6\u4e0a\u4f7f\u635f\u5931\u51fd\u6570\u8fbe\u5230\u6700\u5c0f\u503c\u7684\u6a21\u578b\u53c2\u6570\uff09 \u4f7f\u7528\u8fed\u4ee3\u4f18\u5316\u65b9\u6cd5\uff1a\u68af\u5ea6\u4e0b\u964d\uff08GD\uff09\uff0c\u5728\u8bad\u7ec3\u96c6\u4e0a\uff0c\u5b83\u53ef\u4ee5\u9010\u6e10\u8c03\u6574\u6a21\u578b\u53c2\u6570\u4ee5\u83b7\u5f97\u6700\u5c0f\u7684\u635f\u5931\u51fd\u6570\uff0c\u6700\u7ec8\uff0c\u53c2\u6570\u4f1a\u6536\u655b\u5230\u548c\u7b2c\u4e00\u79cd\u65b9\u6cd5\u76f8\u540c\u7684\u7684\u503c\u3002\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u68af\u5ea6\u4e0b\u964d\u7684\u53d8\u4f53\u5f62\u5f0f\uff1a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08Batch GD\uff09\u3001\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08Mini-batch GD\uff09\u3001\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08Stochastic GD\uff09\uff0c\u5728\u7b2c\u4e8c\u90e8\u5206\u7684\u795e\u7ecf\u7f51\u7edc\u90e8\u5206\uff0c\u6211\u4eec\u4f1a\u591a\u6b21\u4f7f\u7528\u5b83\u4eec\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u6a21\u578b\uff1a\u591a\u9879\u5f0f\u56de\u5f52\uff0c\u5b83\u53ef\u4ee5\u62df\u5408\u975e\u7ebf\u6027\u6570\u636e\u96c6\uff0c\u7531\u4e8e\u5b83\u6bd4\u7ebf\u6027\u6a21\u578b\u62e5\u6709\u66f4\u591a\u7684\u53c2\u6570\uff0c\u4e8e\u662f\u5b83\u66f4\u5bb9\u6613\u51fa\u73b0\u6a21\u578b\u7684\u8fc7\u62df\u5408\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7\u5b66\u4e60\u66f2\u7ebf\u53bb\u5224\u65ad\u6a21\u578b\u662f\u5426\u51fa\u73b0\u4e86\u8fc7\u62df\u5408\uff0c\u5e76\u4ecb\u7ecd\u51e0\u79cd\u6b63\u5219\u5316\u65b9\u6cd5\u4ee5\u51cf\u5c11\u6a21\u578b\u51fa\u73b0\u8fc7\u62df\u5408\u7684\u98ce\u9669\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e24\u4e2a\u5e38\u7528\u4e8e\u5206\u7c7b\u7684\u6a21\u578b\uff1aLogistic\u56de\u5f52\u548cSoftmax\u56de\u5f52 \u63d0\u793a \u5728\u672c\u7ae0\u4e2d\u5305\u542b\u8bb8\u591a\u6570\u5b66\u516c\u5f0f\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u548c\u5fae\u79ef\u5206\u57fa\u672c\u6982\u5ff5\u3002\u4e3a\u4e86\u7406\u89e3\u8fd9\u4e9b\u516c\u5f0f\uff0c\u4f60\u9700\u8981\u77e5\u9053\u4ec0\u4e48\u662f\u5411\u91cf\uff0c\u4ec0\u4e48\u662f\u77e9\u9635\uff0c\u4ee5\u53ca\u5b83\u4eec\u76f4\u63a5\u662f\u5982\u4f55\u8f6c\u5316\u7684\uff0c\u4ee5\u53ca\u4ec0\u4e48\u662f\u70b9\u79ef\uff0c\u4ec0\u4e48\u662f\u77e9\u9635\u7684\u9006\uff0c\u4ec0\u4e48\u662f\u504f\u5bfc\u6570\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e9b\u4e0d\u662f\u5f88\u719f\u6089\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u9605\u8bfb\u672c\u4e66\u63d0\u4f9b\u7684 Jupyter \u5728\u7ebf\u7b14\u8bb0\uff0c\u5b83\u5305\u62ec\u4e86\u7ebf\u6027\u4ee3\u6570\u548c\u5fae\u79ef\u5206\u7684\u5165\u95e8\u6307\u5bfc\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u559c\u6b22\u6570\u5b66\u7684\u4eba\uff0c\u4f60\u4e5f\u5e94\u8be5\u5feb\u901f\u7b80\u5355\u7684\u6d4f\u89c8\u8fd9\u4e9b\u516c\u5f0f\u3002\u5e0c\u671b\u5b83\u8db3\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u5927\u591a\u6570\u7684\u6982\u5ff5\u3002 \u7ebf\u6027\u56de\u5f52 \u5728\u7b2c\u4e00\u7ae0\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u56de\u5f52\u6a21\u578b: \u8fd9\u4e2a\u6a21\u578b\u4ec5\u4ec5\u662f\u8f93\u5165\u91cf GDP_per_capita \u7684\u7ebf\u6027\u51fd\u6570\uff0c \u548c \u662f\u8fd9\u4e2a\u6a21\u578b\u7684\u53c2\u6570\uff0c\u7ebf\u6027\u6a21\u578b\u66f4\u4e00\u822c\u5316\u7684\u63cf\u8ff0\u6307\u901a\u8fc7\u8ba1\u7b97\u8f93\u5165\u53d8\u91cf\u7684\u52a0\u6743\u548c\uff0c\u5e76\u52a0\u4e0a\u4e00\u4e2a\u5e38\u6570\u504f\u7f6e\u9879\uff08\u622a\u8ddd\u9879\uff09\u6765\u5f97\u5230\u4e00\u4e2a\u9884\u6d4b\u503c\u3002\u5982\u516c\u5f0f 4-1\uff1a \u516c\u5f0f 4-1\uff1a\u7ebf\u6027\u56de\u5f52\u9884\u6d4b\u6a21\u578b \u8868\u793a\u9884\u6d4b\u7ed3\u679c \u8868\u793a\u7279\u5f81\u7684\u4e2a\u6570 \u8868\u793a\u7b2c i \u4e2a\u7279\u5f81\u7684\u503c \u8868\u793a\u7b2c j \u4e2a\u53c2\u6570\uff08\u5305\u62ec\u504f\u7f6e\u9879 \u548c\u7279\u5f81\u6743\u91cd\u503c \uff09 \u4e0a\u8ff0\u516c\u5f0f\u53ef\u4ee5\u5199\u6210\u66f4\u4e3a\u7b80\u6d01\u7684\u5411\u91cf\u5f62\u5f0f\uff0c\u5982\u516c\u5f0f 4-2\uff1a \u516c\u5f0f 4-2\uff1a\u7ebf\u6027\u56de\u5f52\u9884\u6d4b\u6a21\u578b\uff08\u5411\u91cf\u5f62\u5f0f\uff09 \u8868\u793a\u6a21\u578b\u7684\u53c2\u6570\u5411\u91cf\u5305\u62ec\u504f\u7f6e\u9879 \u548c\u7279\u5f81\u6743\u91cd\u503c \u5230 \u8868\u793a\u5411\u91cf \u7684\u8f6c\u7f6e\uff08\u884c\u5411\u91cf\u53d8\u4e3a\u4e86\u5217\u5411\u91cf\uff09 \u4e3a\u6bcf\u4e2a\u6837\u672c\u4e2d\u7279\u5f81\u503c\u7684\u5411\u91cf\u5f62\u5f0f\uff0c\u5305\u62ec \u5230 \uff0c\u800c\u4e14 \u6052\u4e3a 1 \u8868\u793a \u548c \u7684\u70b9\u79ef \u8868\u793a\u53c2\u6570\u4e3a \u7684\u5047\u8bbe\u51fd\u6570 \u600e\u4e48\u6837\u53bb\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u5462\uff1f\u597d\u5427\uff0c\u56de\u60f3\u4e00\u4e0b\uff0c\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6307\u7684\u662f\u8bbe\u7f6e\u6a21\u578b\u7684\u53c2\u6570\u4f7f\u5f97\u8fd9\u4e2a\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u7684\u8868\u73b0\u8f83\u597d\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u627e\u5230\u4e00\u4e2a\u8861\u91cf\u6a21\u578b\u597d\u574f\u7684\u8bc4\u5b9a\u65b9\u6cd5\u3002\u5728\u7b2c\u4e8c\u7ae0\uff0c\u6211\u4eec\u4ecb\u7ecd\u5230\u5728\u56de\u5f52\u6a21\u578b\u4e0a\uff0c\u6700\u5e38\u89c1\u7684\u8bc4\u5b9a\u6807\u51c6\u662f\u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff0c\u8be6\u89c1\u516c\u5f0f 2-1\uff09\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff0c\u4f60\u9700\u8981\u627e\u5230\u4e00\u4e2a \u503c\uff0c\u5b83\u4f7f\u5f97\u5747\u65b9\u6839\u8bef\u5dee\uff08\u6807\u51c6\u8bef\u5dee\uff09\u8fbe\u5230\u6700\u5c0f\u503c\u3002\u5b9e\u8df5\u8fc7\u7a0b\u4e2d\uff0c\u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee\u6bd4\u6700\u5c0f\u5316\u5747\u65b9\u6839\u8bef\u5dee\u66f4\u52a0\u7684\u7b80\u5355\uff0c\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u4f1a\u5f97\u5230\u76f8\u540c\u7684 \uff0c\u56e0\u4e3a\u51fd\u6570\u5728\u6700\u5c0f\u503c\u65f6\u5019\u7684\u81ea\u53d8\u91cf\uff0c\u540c\u6837\u80fd\u4f7f\u51fd\u6570\u7684\u65b9\u6839\u8fd0\u7b97\u5f97\u5230\u6700\u5c0f\u503c\u3002 \u5728\u8bad\u7ec3\u96c6 \u4e0a\u4f7f\u7528\u516c\u5f0f 4-3 \u6765\u8ba1\u7b97\u7ebf\u6027\u56de\u5f52\u5047\u8bbe \u7684\u5747\u65b9\u5dee\uff08 \uff09\u3002 \u516c\u5f0f 4-3\uff1a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684 MSE \u635f\u5931\u51fd\u6570 \u516c\u5f0f\u4e2d\u7b26\u53f7\u7684\u542b\u4e49\u5927\u591a\u6570\u90fd\u5728\u7b2c\u4e8c\u7ae0\uff08\u8be6\u89c1\u201c\u7b26\u53f7\u201d\uff09\u8fdb\u884c\u4e86\u8bf4\u660e\uff0c\u4e0d\u540c\u7684\u662f\uff1a\u4e3a\u4e86\u7a81\u51fa\u6a21\u578b\u7684\u53c2\u6570\u5411\u91cf \uff0c\u4f7f\u7528 \u6765\u4ee3\u66ff \u3002\u4ee5\u540e\u7684\u4f7f\u7528\u4e2d\u4e3a\u4e86\u516c\u5f0f\u7684\u7b80\u6d01\uff0c\u4f7f\u7528 \u6765\u4ee3\u66ff \u3002 \u6b63\u6001\u65b9\u7a0b \u4e3a\u4e86\u627e\u5230\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u7684 \u503c\uff0c\u53ef\u4ee5\u91c7\u7528\u516c\u5f0f\u89e3\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7\u89e3\u6b63\u6001\u65b9\u7a0b\u76f4\u63a5\u5f97\u5230\u6700\u540e\u7684\u7ed3\u679c\u3002 \u516c\u5f0f 4-4\uff1a\u6b63\u6001\u65b9\u7a0b \u6307\u6700\u5c0f\u5316\u635f\u5931 \u7684\u503c \u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5176\u5305\u542b\u4e86 \u5230 \u7684\u503c \u8ba9\u6211\u4eec\u751f\u6210\u4e00\u4e9b\u8fd1\u4f3c\u7ebf\u6027\u7684\u6570\u636e\uff08\u5982\u56fe 4-1\uff09\u6765\u6d4b\u8bd5\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u7a0b\u3002 import numpy as np X = 2 * np.random.rand(100, 1) y = 4 + 3 * X + np.random.randn(100, 1) \u56fe 4-1\uff1a\u968f\u673a\u7ebf\u6027\u6570\u636e\u96c6 \u73b0\u5728\u8ba9\u6211\u4eec\u4f7f\u7528\u6b63\u6001\u65b9\u7a0b\u6765\u8ba1\u7b97 \uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Numpy \u7684\u7ebf\u6027\u4ee3\u6570\u6a21\u5757\uff08 np.linalg \uff09\u4e2d\u7684 inv() \u51fd\u6570\u6765\u8ba1\u7b97\u77e9\u9635\u7684\u9006\uff0c\u4ee5\u53ca dot() \u65b9\u6cd5\u6765\u8ba1\u7b97\u77e9\u9635\u7684\u4e58\u6cd5\u3002 X_b = np.c_[np.ones((100, 1)), X] theta_best = np.linalg.inv(X_b.T.dot(X_b)).dot(X_b.T).dot(y) \u6211\u4eec\u751f\u4ea7\u6570\u636e\u7684\u51fd\u6570\u5b9e\u9645\u4e0a\u662f \u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6700\u540e\u7684\u8ba1\u7b97\u7ed3\u679c\u3002 >>> theta_best array([[4.21509616],[2.77011339]]) \u6211\u4eec\u5e0c\u671b\u6700\u540e\u5f97\u5230\u7684\u53c2\u6570\u4e3a \u800c\u4e0d\u662f \uff08\u8bd1\u8005\u6ce8\uff1a\u6211\u8ba4\u4e3a\u5e94\u8be5\u662f \uff09\u3002\u8fd9\u5df2\u7ecf\u8db3\u591f\u4e86\uff0c\u7531\u4e8e\u5b58\u5728\u566a\u58f0\uff0c\u53c2\u6570\u4e0d\u53ef\u80fd\u8fbe\u5230\u5230\u539f\u59cb\u51fd\u6570\u7684\u503c\u3002 \u73b0\u5728\u6211\u4eec\u80fd\u591f\u4f7f\u7528 \u6765\u8fdb\u884c\u9884\u6d4b\uff1a >>> X_new = np.array([[0],[2]]) >>> X_new_b = np.c_[np.ones((2, 1)), X_new] >>> y_predict = X_new_b.dot(theta_best) >>> y_predict array([[4.21509616],[9.75532293]]) \u753b\u51fa\u8fd9\u4e2a\u6a21\u578b\u7684\u56fe\u50cf\uff0c\u5982\u56fe 4-2 plt.plot(X_new,y_predict,\"r-\") plt.plot(X,y,\"b.\") plt.axis([0,2,0,15]) plt.show() \u56fe4-2\uff1a\u7ebf\u6027\u56de\u5f52\u9884\u6d4b \u4f7f\u7528\u4e0b\u9762\u7684 Scikit-Learn \u4ee3\u7801\u53ef\u4ee5\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\uff1a >>> from sklearn.linear_model import LinearRegression >>> lin_reg = LinearRegression() >>> lin_reg.fit(X,y) >>> lin_reg.intercept_, lin_reg.coef_ (array([4.21509616]),array([2.77011339])) >>> lin_reg.predict(X_new) array([[4.21509616],[9.75532293]]) \u8ba1\u7b97\u590d\u6742\u5ea6 \u6b63\u6001\u65b9\u7a0b\u9700\u8981\u8ba1\u7b97\u77e9\u9635 \u7684\u9006\uff0c\u5b83\u662f\u4e00\u4e2a \u7684\u77e9\u9635\uff08 \u662f\u7279\u5f81\u7684\u4e2a\u6570\uff09\u3002\u8fd9\u6837\u4e00\u4e2a\u77e9\u9635\u6c42\u9006\u7684\u8fd0\u7b97\u590d\u6742\u5ea6\u5927\u7ea6\u5728 \u5230 \u4e4b\u95f4\uff0c\u5177\u4f53\u503c\u53d6\u51b3\u4e8e\u8ba1\u7b97\u65b9\u5f0f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5c06\u4f60\u7684\u7279\u5f81\u4e2a\u6570\u7ffb\u500d\u7684\u8bdd\uff0c\u5176\u8ba1\u7b97\u65f6\u95f4\u5927\u6982\u4f1a\u53d8\u4e3a\u539f\u6765\u7684 5.3\uff08 \uff09\u5230 8\uff08 \uff09\u500d\u3002 \u63d0\u793a \u5f53\u7279\u5f81\u7684\u4e2a\u6570\u8f83\u5927\u7684\u65f6\u5019\uff08\u4f8b\u5982\uff1a\u7279\u5f81\u6570\u91cf\u4e3a 100000\uff09\uff0c\u6b63\u6001\u65b9\u7a0b\u6c42\u89e3\u5c06\u4f1a\u975e\u5e38\u6162\u3002 \u6709\u5229\u7684\u4e00\u9762\u662f\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u5728\u8bad\u7ec3\u96c6\u4e0a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u6765\u8bf4\u662f\u7ebf\u6027\u7684\uff0c\u5176\u590d\u6742\u5ea6\u4e3a \uff0c\u56e0\u6b64\u53ea\u8981\u6709\u80fd\u653e\u5f97\u4e0b\u5b83\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5b83\u5c31\u53ef\u4ee5\u5bf9\u5927\u89c4\u6a21\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002\u540c\u65f6\uff0c\u4e00\u65e6\u4f60\u5f97\u5230\u4e86\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff08\u901a\u8fc7\u89e3\u6b63\u6001\u65b9\u7a0b\u6216\u8005\u5176\u4ed6\u7684\u7b97\u6cd5\uff09\uff0c\u8fdb\u884c\u9884\u6d4b\u662f\u975e\u5e38\u5feb\u7684\u3002\u56e0\u4e3a\u6a21\u578b\u4e2d\u8ba1\u7b97\u590d\u6742\u5ea6\u5bf9\u4e8e\u8981\u8fdb\u884c\u9884\u6d4b\u7684\u5b9e\u4f8b\u6570\u91cf\u548c\u7279\u5f81\u4e2a\u6570\u90fd\u662f\u7ebf\u6027\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u5b9e\u4f8b\u4e2a\u6570\u53d8\u4e3a\u539f\u6765\u7684\u4e24\u500d\u591a\u7684\u65f6\u5019\uff08\u6216\u7279\u5f81\u4e2a\u6570\u53d8\u4e3a\u539f\u6765\u7684\u4e24\u500d\u591a\uff09\uff0c\u9884\u6d4b\u65f6\u95f4\u4e5f\u4ec5\u4ec5\u662f\u539f\u6765\u7684\u4e24\u500d\u591a\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u53e6\u4e00\u79cd\u65b9\u6cd5\u53bb\u8bad\u7ec3\u6a21\u578b\u3002\u8fd9\u79cd\u65b9\u6cd5\u9002\u5408\u5728\u7279\u5f81\u4e2a\u6570\u975e\u5e38\u591a\uff0c\u8bad\u7ec3\u5b9e\u4f8b\u975e\u5e38\u591a\uff0c\u5185\u5b58\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\u7684\u65f6\u5019\u4f7f\u7528\u3002 \u68af\u5ea6\u4e0b\u964d \u68af\u5ea6\u4e0b\u964d\u662f\u4e00\u79cd\u975e\u5e38\u901a\u7528\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u5b83\u80fd\u591f\u5f88\u597d\u5730\u89e3\u51b3\u4e00\u7cfb\u5217\u95ee\u9898\u3002\u68af\u5ea6\u4e0b\u964d\u7684\u6574\u4f53\u601d\u8def\u662f\u901a\u8fc7\u7684\u8fed\u4ee3\u6765\u9010\u6e10\u8c03\u6574\u53c2\u6570\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u8fbe\u5230\u6700\u5c0f\u503c\u3002 \u5047\u8bbe\u6d53\u96fe\u4e0b\uff0c\u4f60\u8ff7\u5931\u5728\u4e86\u5927\u5c71\u4e2d\uff0c\u4f60\u53ea\u80fd\u611f\u53d7\u5230\u81ea\u5df1\u811a\u4e0b\u7684\u5761\u5ea6\u3002\u4e3a\u4e86\u6700\u5feb\u5230\u8fbe\u5c71\u5e95\uff0c\u4e00\u4e2a\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u6cbf\u7740\u5761\u5ea6\u6700\u9661\u7684\u5730\u65b9\u4e0b\u5c71\u3002\u8fd9\u5176\u5b9e\u5c31\u662f\u68af\u5ea6\u4e0b\u964d\u6240\u505a\u7684\uff1a\u5b83\u8ba1\u7b97\u8bef\u5dee\u51fd\u6570\u5173\u4e8e\u53c2\u6570\u5411\u91cf \u7684\u5c40\u90e8\u68af\u5ea6\uff0c\u540c\u65f6\u5b83\u6cbf\u7740\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u5411\u8fdb\u884c\u4e0b\u4e00\u6b21\u8fed\u4ee3\u3002\u5f53\u68af\u5ea6\u503c\u4e3a\u96f6\u7684\u65f6\u5019\uff0c\u5c31\u8fbe\u5230\u4e86\u8bef\u5dee\u51fd\u6570\u6700\u5c0f\u503c \u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5f00\u59cb\u65f6\uff0c\u9700\u8981\u9009\u5b9a\u4e00\u4e2a\u968f\u673a\u7684 \uff08\u8fd9\u4e2a\u503c\u79f0\u4e3a\u968f\u673a\u521d\u59cb\u503c\uff09\uff0c\u7136\u540e\u9010\u6e10\u53bb\u6539\u8fdb\u5b83\uff0c\u6bcf\u4e00\u6b21\u53d8\u5316\u4e00\u5c0f\u6b65\uff0c\u6bcf\u4e00\u6b65\u90fd\u8bd5\u7740\u964d\u4f4e\u635f\u5931\u51fd\u6570\uff08\u4f8b\u5982\uff1a\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\uff09\uff0c\u76f4\u5230\u7b97\u6cd5\u6536\u655b\u5230\u4e00\u4e2a\u6700\u5c0f\u503c\uff08\u5982\u56fe\uff1a4-3\uff09\u3002 \u56fe 4-3\uff1a\u68af\u5ea6\u4e0b\u964d \u5728\u68af\u5ea6\u4e0b\u964d\u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570\u662f\u6b65\u957f\uff0c\u8d85\u53c2\u6570\u5b66\u4e60\u7387\u7684\u503c\u51b3\u5b9a\u4e86\u6b65\u957f\u7684\u5927\u5c0f\u3002\u5982\u679c\u5b66\u4e60\u7387\u592a\u5c0f\uff0c\u5fc5\u987b\u7ecf\u8fc7\u591a\u6b21\u8fed\u4ee3\uff0c\u7b97\u6cd5\u624d\u80fd\u6536\u655b\uff0c\u8fd9\u662f\u975e\u5e38\u8017\u65f6\u7684\uff08\u5982\u56fe 4-4\uff09\u3002 \u56fe 4-4:\u5b66\u4e60\u7387\u8fc7\u5c0f \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5b66\u4e60\u7387\u592a\u5927\uff0c\u4f60\u5c06\u8df3\u8fc7\u6700\u4f4e\u70b9\uff0c\u5230\u8fbe\u5c71\u8c37\u7684\u53e6\u4e00\u9762\uff0c\u53ef\u80fd\u4e0b\u4e00\u6b21\u7684\u503c\u6bd4\u4e0a\u4e00\u6b21\u8fd8\u8981\u5927\u3002\u8fd9\u53ef\u80fd\u4f7f\u7684\u7b97\u6cd5\u662f\u53d1\u6563\u7684\uff0c\u51fd\u6570\u503c\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\uff0c\u6c38\u8fdc\u4e0d\u53ef\u80fd\u627e\u5230\u4e00\u4e2a\u597d\u7684\u7b54\u6848\uff08\u5982\u56fe 4-5\uff09\u3002 \u56fe 4-5\uff1a\u5b66\u4e60\u7387\u8fc7\u5927 \u6700\u540e\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u635f\u5931\u51fd\u6570\u770b\u8d77\u6765\u90fd\u50cf\u4e00\u4e2a\u89c4\u5219\u7684\u7897\u3002\u5b83\u4eec\u53ef\u80fd\u662f\u6d1e\uff0c\u5c71\u810a\uff0c\u9ad8\u539f\u548c\u5404\u79cd\u4e0d\u89c4\u5219\u7684\u5730\u5f62\uff0c\u4f7f\u5b83\u4eec\u6536\u655b\u5230\u6700\u5c0f\u503c\u975e\u5e38\u7684\u56f0\u96be\u3002 \u56fe 4-6 \u663e\u793a\u4e86\u68af\u5ea6\u4e0b\u964d\u7684\u4e24\u4e2a\u4e3b\u8981\u6311\u6218\uff1a\u5982\u679c\u968f\u673a\u521d\u59cb\u503c\u9009\u5728\u4e86\u56fe\u50cf\u7684\u5de6\u4fa7\uff0c\u5219\u5b83\u5c06\u6536\u655b\u5230\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u8fd9\u4e2a\u503c\u8981\u6bd4\u5168\u5c40\u6700\u5c0f\u503c\u8981\u5927\u3002 \u5982\u679c\u5b83\u4ece\u53f3\u4fa7\u5f00\u59cb\uff0c\u90a3\u4e48\u8de8\u8d8a\u9ad8\u539f\u5c06\u9700\u8981\u5f88\u957f\u65f6\u95f4\uff0c\u5982\u679c\u4f60\u65e9\u65e9\u5730\u7ed3\u675f\u8bad\u7ec3\uff0c\u4f60\u5c06\u6c38\u8fdc\u5230\u4e0d\u4e86\u5168\u5c40\u6700\u5c0f\u503c\u3002 \u56fe 4-6\uff1a\u68af\u5ea6\u4e0b\u964d\u7684\u9677\u9631 \u5e78\u8fd0\u7684\u662f\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\u662f\u4e00\u4e2a\u51f8\u51fd\u6570\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u9009\u62e9\u66f2\u7ebf\u4e0a\u7684\u4efb\u610f\u4e24\u70b9\uff0c\u5b83\u4eec\u7684\u8fde\u7ebf\u6bb5\u4e0d\u4f1a\u4e0e\u66f2\u7ebf\u53d1\u751f\u4ea4\u53c9\uff08\u8bd1\u8005\u6ce8\uff1a\u8be5\u7ebf\u6bb5\u4e0d\u4f1a\u4e0e\u66f2\u7ebf\u6709\u7b2c\u4e09\u4e2a\u4ea4\u70b9\uff09\u3002\u8fd9\u610f\u5473\u7740\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u6ca1\u6709\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u4ec5\u4ec5\u53ea\u6709\u4e00\u4e2a\u5168\u5c40\u6700\u5c0f\u503c\u3002\u540c\u65f6\u5b83\u4e5f\u662f\u4e00\u4e2a\u659c\u7387\u4e0d\u80fd\u7a81\u53d8\u7684\u8fde\u7eed\u51fd\u6570\u3002\u8fd9\u4e24\u4e2a\u56e0\u7d20\u5bfc\u81f4\u4e86\u4e00\u4e2a\u597d\u7684\u7ed3\u679c\uff1a\u68af\u5ea6\u4e0b\u964d\u53ef\u4ee5\u65e0\u9650\u63a5\u8fd1\u5168\u5c40\u6700\u5c0f\u503c\u3002\uff08\u53ea\u8981\u4f60\u8bad\u7ec3\u65f6\u95f4\u8db3\u591f\u957f\uff0c\u540c\u65f6\u5b66\u4e60\u7387\u4e0d\u662f\u592a\u5927 \uff09\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u635f\u5931\u51fd\u6570\u7684\u56fe\u50cf\u5448\u73b0\u7897\u72b6\uff0c\u4f46\u662f\u4e0d\u540c\u7279\u5f81\u7684\u53d6\u503c\u8303\u56f4\u76f8\u5dee\u8f83\u5927\u7684\u65f6\uff0c\u8fd9\u4e2a\u7897\u53ef\u80fd\u662f\u7ec6\u957f\u7684\u3002\u56fe 4-7 \u5c55\u793a\u4e86\u68af\u5ea6\u4e0b\u964d\u5728\u4e0d\u540c\u8bad\u7ec3\u96c6\u4e0a\u7684\u8868\u73b0\u3002\u5728\u5de6\u56fe\u4e2d\uff0c\u7279\u5f81 1 \u548c\u7279\u5f81 2 \u6709\u7740\u76f8\u540c\u7684\u6570\u503c\u5c3a\u5ea6\u3002\u5728\u53f3\u56fe\u4e2d\uff0c\u7279\u5f81 1 \u6bd4\u7279\u5f812\u7684\u53d6\u503c\u8981\u5c0f\u7684\u591a\uff0c\u7531\u4e8e\u7279\u5f81 1 \u8f83\u5c0f\uff0c\u56e0\u6b64\u635f\u5931\u51fd\u6570\u6539\u53d8\u65f6\uff0c \u4f1a\u6709\u8f83\u5927\u7684\u53d8\u5316\uff0c\u4e8e\u662f\u8fd9\u4e2a\u56fe\u50cf\u4f1a\u5728 \u8f74\u65b9\u5411\u53d8\u5f97\u7ec6\u957f\u3002 \u56fe 4-7\uff1a\u6709\u65e0\u7279\u5f81\u7f29\u653e\u7684\u68af\u5ea6\u4e0b\u964d \u6b63\u5982\u4f60\u770b\u5230\u7684\uff0c\u5de6\u9762\u7684\u68af\u5ea6\u4e0b\u964d\u53ef\u4ee5\u76f4\u63a5\u5feb\u901f\u5730\u5230\u8fbe\u6700\u5c0f\u503c\uff0c\u7136\u800c\u5728\u53f3\u9762\u7684\u68af\u5ea6\u4e0b\u964d\u7b2c\u4e00\u6b21\u524d\u8fdb\u7684\u65b9\u5411\u51e0\u4e4e\u548c\u5168\u5c40\u6700\u5c0f\u503c\u7684\u65b9\u5411\u5782\u76f4\uff0c\u5e76\u4e14\u6700\u540e\u5230\u8fbe\u4e00\u4e2a\u51e0\u4e4e\u5e73\u5766\u7684\u5c71\u8c37\uff0c\u5728\u5e73\u5766\u7684\u5c71\u8c37\u8d70\u4e86\u5f88\u957f\u65f6\u95f4\u3002\u5b83\u6700\u7ec8\u4f1a\u8fbe\u5230\u6700\u5c0f\u503c\uff0c\u4f46\u5b83\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002 \u63d0\u793a \u5f53\u6211\u4eec\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u786e\u4fdd\u6240\u6709\u7684\u7279\u5f81\u6709\u7740\u76f8\u8fd1\u7684\u5c3a\u5ea6\u8303\u56f4\uff08\u4f8b\u5982\uff1a\u4f7f\u7528 Scikit Learn \u7684 StandardScaler \u7c7b\uff09\uff0c\u5426\u5219\u5b83\u5c06\u9700\u8981\u5f88\u957f\u7684\u65f6\u95f4\u624d\u80fd\u591f\u6536\u655b\u3002 \u8fd9\u5e45\u56fe\u4e5f\u8868\u660e\u4e86\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u8bad\u7ec3\u6a21\u578b\u610f\u5473\u7740\u627e\u5230\u4e00\u7ec4\u6a21\u578b\u53c2\u6570\uff0c\u8fd9\u7ec4\u53c2\u6570\u53ef\u4ee5\u5728\u8bad\u7ec3\u96c6\u4e0a\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\u3002\u8fd9\u662f\u5bf9\u4e8e\u6a21\u578b\u53c2\u6570\u7a7a\u95f4\u7684\u641c\u7d22\uff0c\u6a21\u578b\u7684\u53c2\u6570\u8d8a\u591a\uff0c\u53c2\u6570\u7a7a\u95f4\u7684\u7ef4\u5ea6\u8d8a\u591a\uff0c\u627e\u5230\u5408\u9002\u7684\u53c2\u6570\u8d8a\u56f0\u96be\u3002\u4f8b\u5982\u5728300\u7ef4\u7684\u7a7a\u95f4\u627e\u5230\u4e00\u679a\u9488\u8981\u6bd4\u5728\u4e09\u7ef4\u7a7a\u95f4\u91cc\u627e\u5230\u4e00\u679a\u9488\u590d\u6742\u7684\u591a\u3002\u5e78\u8fd0\u7684\u662f\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u8fd9\u4e2a\u6700\u4f18\u53c2\u6570\u4e00\u5b9a\u5728\u7897\u7684\u5e95\u90e8\u3002 \u6279\u91cf\u68af\u5ea6\u4e0b\u964d \u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u6bcf\u4e00\u4e2a \u4e0b\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53 \u53d8\u5316\u4e00\u70b9\u70b9\u65f6\uff0c\u635f\u5931\u51fd\u6570\u6539\u53d8\u4e86\u591a\u5c11\u3002\u8fd9\u79f0\u4e3a\u504f\u5bfc\u6570\uff0c\u5b83\u5c31\u50cf\u5f53\u4f60\u9762\u5bf9\u4e1c\u65b9\u7684\u65f6\u5019\u95ee\uff1a\"\u6211\u811a\u4e0b\u7684\u5761\u5ea6\u662f\u591a\u5c11\uff1f\"\u3002\u7136\u540e\u9762\u5411\u5317\u65b9\u7684\u65f6\u5019\u95ee\u540c\u6837\u7684\u95ee\u9898\uff08\u5982\u679c\u4f60\u80fd\u60f3\u8c61\u4e00\u4e2a\u8d85\u8fc7\u4e09\u7ef4\u7684\u5b87\u5b99\uff0c\u53ef\u4ee5\u5bf9\u6240\u6709\u7684\u65b9\u5411\u90fd\u8fd9\u6837\u505a\uff09\u3002\u516c\u5f0f 4-5 \u8ba1\u7b97\u5173\u4e8e \u7684\u635f\u5931\u51fd\u6570\u7684\u504f\u5bfc\u6570\uff0c\u8bb0\u4e3a \u3002 \u516c\u5f0f 4-5\uff1a \u635f\u5931\u51fd\u6570\u7684\u504f\u5bfc\u6570 \u4e3a\u4e86\u907f\u514d\u5355\u72ec\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u68af\u5ea6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u516c\u5f0f 4-6 \u6765\u4e00\u8d77\u8ba1\u7b97\u5b83\u4eec\u3002\u68af\u5ea6\u5411\u91cf\u8bb0\u4e3a \uff0c\u5176\u5305\u542b\u4e86\u635f\u5931\u51fd\u6570\u6240\u6709\u7684\u504f\u5bfc\u6570\uff08\u6bcf\u4e2a\u6a21\u578b\u53c2\u6570\u53ea\u51fa\u73b0\u4e00\u6b21\uff09\u3002 \u516c\u5f0f 4-6\uff1a\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u5411\u91cf \u63d0\u793a \u5728\u8fd9\u4e2a\u65b9\u7a0b\u4e2d\u6bcf\u4e00\u6b65\u8ba1\u7b97\u65f6\u90fd\u5305\u542b\u4e86\u6574\u4e2a\u8bad\u7ec3\u96c6 \uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u79f0\u4e3a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1a\u6bcf\u4e00\u6b21\u8bad\u7ec3\u8fc7\u7a0b\u90fd\u4f7f\u7528\u6240\u6709\u7684\u7684\u8bad\u7ec3\u6570\u636e\u3002\u56e0\u6b64\uff0c\u5728\u5927\u6570\u636e\u96c6\u4e0a\uff0c\u5176\u4f1a\u53d8\u5f97\u76f8\u5f53\u7684\u6162\uff08\u4f46\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u5c06\u4f1a\u4ecb\u7ecd\u66f4\u5feb\u7684\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff09\u3002\u7136\u800c\uff0c\u68af\u5ea6\u4e0b\u964d\u7684\u8fd0\u7b97\u89c4\u6a21\u548c\u7279\u5f81\u7684\u6570\u91cf\u6210\u6b63\u6bd4\u3002\u8bad\u7ec3\u4e00\u4e2a\u6570\u5343\u6570\u91cf\u7279\u5f81\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4f7f\u7528*\u68af\u5ea6\u4e0b\u964d\u8981\u6bd4\u4f7f\u7528\u6b63\u6001\u65b9\u7a0b\u5feb\u7684\u591a\u3002 \u4e00\u65e6\u6c42\u5f97\u4e86\u65b9\u5411\u662f\u4e0a\u5c71\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u4f60\u5c31\u53ef\u4ee5\u5411\u7740\u76f8\u53cd\u7684\u65b9\u5411\u53bb\u4e0b\u5c71\u3002\u8fd9\u610f\u5473\u7740\u4ece \u4e2d\u51cf\u53bb \u3002\u5b66\u4e60\u7387 \u548c\u68af\u5ea6\u5411\u91cf\u7684\u79ef\u51b3\u5b9a\u4e86\u4e0b\u5c71\u65f6\u6bcf\u4e00\u6b65\u7684\u5927\u5c0f\uff0c\u5982\u516c\u5f0f 4-7\u3002 \u516c\u5f0f 4-7\uff1a\u68af\u5ea6\u4e0b\u964d\u6b65\u957f \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5e94\u7528\uff1a eta = 0.1 # \u5b66\u4e60\u7387 n_iterations = 1000 m = 100 theta = np.random.randn(2,1) # \u968f\u673a\u521d\u59cb\u503c for iteration in range(n_iterations): gradients = 2/m * X_b.T.dot(X_b.dot(theta) - y) theta = theta - eta * gradients \u8fd9\u4e0d\u662f\u592a\u96be\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6700\u540e\u7684\u7ed3\u679c \uff1a >>> theta array([[4.21509616],[2.77011339]]) \u770b\uff01\u6b63\u6001\u65b9\u7a0b\u7684\u8868\u73b0\u975e\u5e38\u597d\u3002\u5b8c\u7f8e\u5730\u6c42\u51fa\u4e86\u68af\u5ea6\u4e0b\u964d\u7684\u53c2\u6570\u3002\u4f46\u662f\u5f53\u4f60\u6362\u4e00\u4e2a\u5b66\u4e60\u7387\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u56fe 4-8 \u5c55\u793a\u4e86\u4f7f\u7528\u4e86\u4e09\u4e2a\u4e0d\u540c\u7684\u5b66\u4e60\u7387\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u7684\u524d 10 \u6b65\u8fd0\u7b97\uff08\u865a\u7ebf\u4ee3\u8868\u8d77\u59cb\u4f4d\u7f6e\uff09\u3002 \u56fe 4-8\uff1a\u4e0d\u540c\u5b66\u4e60\u7387\u7684\u68af\u5ea6\u4e0b\u964d \u5728\u5de6\u9762\u7684\u90a3\u526f\u56fe\u4e2d\uff0c\u5b66\u4e60\u7387\u662f\u6700\u5c0f\u7684\uff0c\u7b97\u6cd5\u51e0\u4e4e\u4e0d\u80fd\u6c42\u51fa\u6700\u540e\u7684\u7ed3\u679c\uff0c\u800c\u4e14\u8fd8\u4f1a\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002\u5728\u4e2d\u95f4\u7684\u8fd9\u5e45\u56fe\u4e2d\uff0c\u5b66\u4e60\u7387\u7684\u8868\u73b0\u770b\u8d77\u6765\u4e0d\u9519\uff0c\u4ec5\u4ec5\u51e0\u6b21\u8fed\u4ee3\u540e\uff0c\u5b83\u5c31\u6536\u655b\u5230\u4e86\u6700\u540e\u7684\u7ed3\u679c\u3002\u5728\u53f3\u9762\u7684\u90a3\u526f\u56fe\u4e2d\uff0c\u5b66\u4e60\u7387\u592a\u5927\u4e86\uff0c\u7b97\u6cd5\u662f\u53d1\u6563\u7684\uff0c\u8df3\u8fc7\u4e86\u6240\u6709\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u540c\u65f6\u6bcf\u4e00\u6b65\u90fd\u79bb\u6b63\u786e\u7684\u7ed3\u679c\u8d8a\u6765\u8d8a\u8fdc\u3002 \u4e3a\u4e86\u627e\u5230\u4e00\u4e2a\u597d\u7684\u5b66\u4e60\u7387\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u7f51\u683c\u641c\u7d22\uff08\u8be6\u89c1\u7b2c\u4e8c\u7ae0\uff09\u3002\u5f53\u7136\uff0c\u4f60\u4e00\u822c\u4f1a\u9650\u5236\u8fed\u4ee3\u7684\u6b21\u6570\uff0c\u4ee5\u4fbf\u7f51\u683c\u641c\u7d22\u53ef\u4ee5\u6d88\u9664\u6a21\u578b\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u6536\u655b\u8fd9\u4e00\u4e2a\u95ee\u9898\u3002 \u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u5982\u4f55\u9009\u53d6\u8fed\u4ee3\u7684\u6b21\u6570\u3002\u5982\u679c\u5b83\u592a\u5c0f\u4e86\uff0c\u5f53\u7b97\u6cd5\u505c\u6b62\u7684\u65f6\u5019\uff0c\u4f60\u4f9d\u7136\u6ca1\u6709\u627e\u5230\u6700\u4f18\u89e3\u3002\u5982\u679c\u5b83\u592a\u5927\u4e86\uff0c\u7b97\u6cd5\u4f1a\u975e\u5e38\u7684\u8017\u65f6\u540c\u65f6\u540e\u6765\u7684\u8fed\u4ee3\u53c2\u6570\u4e5f\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff1a\u8bbe\u7f6e\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u8fed\u4ee3\u6b21\u6570\uff0c\u4f46\u662f\u5f53\u68af\u5ea6\u5411\u91cf\u53d8\u5f97\u975e\u5e38\u5c0f\u7684\u65f6\u5019\uff0c\u7ed3\u675f\u8fed\u4ee3\u3002\u975e\u5e38\u5c0f\u6307\u7684\u662f\uff1a\u68af\u5ea6\u5411\u91cf\u5c0f\u4e8e\u4e00\u4e2a\u503c \uff08\u79f0\u4e3a\u5bb9\u5dee\uff09\u3002\u8fd9\u65f6\u5019\u53ef\u4ee5\u8ba4\u4e3a\u68af\u5ea6\u4e0b\u964d\u51e0\u4e4e\u5df2\u7ecf\u8fbe\u5230\u4e86\u6700\u5c0f\u503c\u3002 \u6536\u655b\u901f\u7387\uff1a \u5f53\u635f\u5931\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u540c\u65f6\u5b83\u7684\u659c\u7387\u4e0d\u80fd\u7a81\u53d8\uff08\u5c31\u50cf\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\u90a3\u6837\uff09\uff0c\u90a3\u4e48\u5b83\u7684\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u56fa\u5b9a\u5b66\u4e60\u7387\u4e4b\u540e\uff0c\u5b83\u7684\u6536\u655b\u901f\u7387\u662f \u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5c06\u5bb9\u5dee \u7f29\u5c0f 10 \u500d\u540e\uff08\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u7cbe\u786e\u7684\u7ed3\u679c\uff09\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8fed\u4ee3\u6b21\u6570\u5927\u7ea6\u4f1a\u53d8\u6210\u539f\u6765\u7684 10 \u500d\u3002 \u968f\u673a\u68af\u5ea6\u4e0b\u964d \u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u6700\u8981\u95ee\u9898\u662f\u8ba1\u7b97\u6bcf\u4e00\u6b65\u7684\u68af\u5ea6\u65f6\u90fd\u9700\u8981\u4f7f\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\uff0c\u8fd9\u5bfc\u81f4\u5728\u89c4\u6a21\u8f83\u5927\u7684\u6570\u636e\u96c6\u4e0a\uff0c\u5176\u4f1a\u53d8\u5f97\u975e\u5e38\u7684\u6162\u3002\u4e0e\u5176\u5b8c\u5168\u76f8\u53cd\u7684\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u5728\u6bcf\u4e00\u6b65\u7684\u68af\u5ea6\u8ba1\u7b97\u4e0a\u53ea\u968f\u673a\u9009\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u4e00\u4e2a\u6837\u672c\u3002\u5f88\u660e\u663e\uff0c\u7531\u4e8e\u6bcf\u4e00\u6b21\u7684\u64cd\u4f5c\u90fd\u4f7f\u7528\u4e86\u975e\u5e38\u5c11\u7684\u6570\u636e\uff0c\u8fd9\u6837\u4f7f\u5f97\u7b97\u6cd5\u53d8\u5f97\u975e\u5e38\u5feb\u3002\u7531\u4e8e\u6bcf\u4e00\u6b21\u8fed\u4ee3\uff0c\u53ea\u9700\u8981\u5728\u5185\u5b58\u4e2d\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4f7f\u968f\u673a\u68af\u5ea6\u7b97\u6cd5\u53ef\u4ee5\u5728\u5927\u89c4\u6a21\u8bad\u7ec3\u96c6\u4e0a\u4f7f\u7528\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u7531\u4e8e\u5b83\u7684\u968f\u673a\u6027\uff0c\u4e0e\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u76f8\u6bd4\uff0c\u5176\u5448\u73b0\u51fa\u66f4\u591a\u7684\u4e0d\u89c4\u5f8b\u6027\uff1a\u5b83\u5230\u8fbe\u6700\u5c0f\u503c\u4e0d\u662f\u5e73\u7f13\u7684\u4e0b\u964d\uff0c\u635f\u5931\u51fd\u6570\u4f1a\u5ffd\u9ad8\u5ffd\u4f4e\uff0c\u53ea\u662f\u5728\u5927\u4f53\u4e0a\u5448\u4e0b\u964d\u8d8b\u52bf\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b83\u4f1a\u975e\u5e38\u7684\u9760\u8fd1\u6700\u5c0f\u503c\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u505c\u6b62\u5728\u4e00\u4e2a\u503c\u4e0a\uff0c\u5b83\u4f1a\u4e00\u76f4\u5728\u8fd9\u4e2a\u503c\u9644\u8fd1\u6446\u52a8\uff08\u5982\u56fe 4-9\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u7b97\u6cd5\u505c\u6b62\u7684\u65f6\u5019\uff0c\u6700\u540e\u7684\u53c2\u6570\u8fd8\u4e0d\u9519\uff0c\u4f46\u4e0d\u662f\u6700\u4f18\u503c\u3002 \u56fe4-9\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d \u5f53\u635f\u5931\u51fd\u6570\u5f88\u4e0d\u89c4\u5219\u65f6\uff08\u5982\u56fe 4-6\uff09\uff0c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u80fd\u591f\u8df3\u8fc7\u5c40\u90e8\u6700\u5c0f\u503c\u3002\u56e0\u6b64\uff0c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u5728\u5bfb\u627e\u5168\u5c40\u6700\u5c0f\u503c\u4e0a\u6bd4\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u8868\u73b0\u8981\u597d\u3002 \u867d\u7136\u968f\u673a\u6027\u53ef\u4ee5\u5f88\u597d\u7684\u8df3\u8fc7\u5c40\u90e8\u6700\u4f18\u503c\uff0c\u4f46\u540c\u65f6\u5b83\u5374\u4e0d\u80fd\u8fbe\u5230\u6700\u5c0f\u503c\u3002\u89e3\u51b3\u8fd9\u4e2a\u96be\u9898\u7684\u4e00\u4e2a\u529e\u6cd5\u662f\u9010\u6e10\u964d\u4f4e\u5b66\u4e60\u7387\u3002 \u5f00\u59cb\u65f6\uff0c\u8d70\u7684\u6bcf\u4e00\u6b65\u8f83\u5927\uff08\u8fd9\u6709\u52a9\u4e8e\u5feb\u901f\u524d\u8fdb\u540c\u65f6\u8df3\u8fc7\u5c40\u90e8\u6700\u5c0f\u503c\uff09\uff0c\u7136\u540e\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4ece\u800c\u4f7f\u7b97\u6cd5\u5230\u8fbe\u5168\u5c40\u6700\u5c0f\u503c\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u6a21\u62df\u9000\u706b\uff0c\u56e0\u4e3a\u5b83\u7c7b\u4f3c\u4e8e\u7194\u878d\u91d1\u5c5e\u6162\u6162\u51b7\u5374\u7684\u51b6\u91d1\u5b66\u9000\u706b\u8fc7\u7a0b\u3002 \u51b3\u5b9a\u6bcf\u6b21\u8fed\u4ee3\u7684\u5b66\u4e60\u7387\u7684\u51fd\u6570\u79f0\u4e3a learning schedule \u3002 \u5982\u679c\u5b66\u4e60\u901f\u5ea6\u964d\u4f4e\u5f97\u8fc7\u5feb\uff0c\u4f60\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u751a\u81f3\u5728\u5230\u8fbe\u6700\u5c0f\u503c\u7684\u534a\u8def\u5c31\u505c\u6b62\u4e86\u3002 \u5982\u679c\u5b66\u4e60\u901f\u5ea6\u964d\u4f4e\u5f97\u592a\u6162\uff0c\u4f60\u53ef\u80fd\u5728\u6700\u5c0f\u503c\u7684\u9644\u8fd1\u957f\u65f6\u95f4\u6446\u52a8\uff0c\u540c\u65f6\u5982\u679c\u8fc7\u65e9\u505c\u6b62\u8bad\u7ec3\uff0c\u6700\u7ec8\u53ea\u4f1a\u51fa\u73b0\u6b21\u4f18\u89e3\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684 learning schedule \u6765\u5b9e\u73b0\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff1a n_epochs = 50 t0, t1 = 5, 50 #learning_schedule\u7684\u8d85\u53c2\u6570 def learning_schedule(t): return t0 / (t + t1) theta = np.random.randn(2,1) for epoch in range(n_epochs): for i in range(m): random_index = np.random.randint(m) xi = X_b[random_index:random_index+1] yi = y[random_index:random_index+1] gradients = 2 * xi.T.dot(xi.dot(theta)-yi) eta = learning_schedule(epoch * m + i) theta = theta - eta * gradients \u6309\u4e60\u60ef\u6765\u8bb2\uff0c\u6211\u4eec\u8fdb\u884c \u8f6e\u7684\u8fed\u4ee3\uff0c\u6bcf\u4e00\u8f6e\u8fed\u4ee3\u88ab\u79f0\u4e3a\u4e00\u4ee3\u3002\u5728\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\uff0c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u8fed\u4ee3\u4e86 1000 \u6b21\u65f6\uff0c\u4e00\u822c\u5728\u7b2c 50 \u6b21\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u8fbe\u5230\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u7ed3\u679c\u3002 >>> theta array([[4.21076011],[2.748560791]]) \u56fe 4-10 \u5c55\u793a\u4e86\u524d 10 \u6b21\u7684\u8bad\u7ec3\u8fc7\u7a0b\uff08\u6ce8\u610f\u6bcf\u4e00\u6b65\u7684\u4e0d\u89c4\u5219\u7a0b\u5ea6\uff09\u3002 \u56fe 4-10\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7684\u524d10\u6b21\u8fed\u4ee3 \u7531\u4e8e\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u9009\u62e9\u662f\u968f\u673a\u7684\uff0c\u6709\u7684\u5b9e\u4f8b\u53ef\u80fd\u5728\u6bcf\u4e00\u4ee3\u4e2d\u90fd\u88ab\u9009\u5230\uff0c\u8fd9\u6837\u5176\u4ed6\u7684\u5b9e\u4f8b\u4e5f\u53ef\u80fd\u4e00\u76f4\u4e0d\u88ab\u9009\u5230\u3002\u5982\u679c\u4f60\u60f3\u4fdd\u8bc1\u6bcf\u4e00\u4ee3\u8fed\u4ee3\u8fc7\u7a0b\uff0c\u7b97\u6cd5\u53ef\u4ee5\u904d\u5386\u6240\u6709\u5b9e\u4f8b\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u8bad\u7ec3\u96c6\u6253\u4e71\u91cd\u6392\uff0c\u7136\u540e\u9009\u62e9\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u4e4b\u540e\u518d\u7ee7\u7eed\u6253\u4e71\u91cd\u6392\uff0c\u4ee5\u6b64\u7c7b\u63a8\u4e00\u76f4\u8fdb\u884c\u4e0b\u53bb\u3002\u4f46\u662f\u8fd9\u6837\u6536\u655b\u901f\u5ea6\u4f1a\u975e\u5e38\u7684\u6162\u3002 \u901a\u8fc7\u4f7f\u7528 Scikit-Learn \u5b8c\u6210\u7ebf\u6027\u56de\u5f52\u7684\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u4f60\u9700\u8981\u4f7f\u7528 SGDRegressor \u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u9ed8\u8ba4\u4f18\u5316\u7684\u662f\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u8fed\u4ee3\u4e86 50 \u4ee3\uff0c\u5176\u5b66\u4e60\u7387 \u4e3a0.1\uff08 eta0=0.1 \uff09\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684 learning schedule \uff08\u4e0e\u524d\u9762\u7684\u4e0d\u4e00\u6837\uff09\uff0c\u540c\u65f6\u4e5f\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u6b63\u5219\u9879\uff08 penalty = None \uff09\uff1a from sklearn.linear_model import SGDRegressor sgd_reg = SGDRegressor(n_iter=50, penalty=None, eta0=0.1) sgd_reg.fit(X,y.ravel()) \u4f60\u53ef\u4ee5\u518d\u4e00\u6b21\u53d1\u73b0\uff0c\u8fd9\u4e2a\u7ed3\u679c\u975e\u5e38\u7684\u63a5\u8fd1\u6b63\u6001\u65b9\u7a0b\u7684\u89e3\uff1a >>> sgd_reg.intercept_, sgd_reg.coef_ (array([4.18380366]),array([2.74205299])) \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d \u6700\u540e\u4e00\u4e2a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u3002\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u548c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u518d\u53bb\u7406\u89e3\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u5728\u8fed\u4ee3\u7684\u6bcf\u4e00\u6b65\uff0c\u6279\u91cf\u68af\u5ea6\u4f7f\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\uff0c\u968f\u673a\u68af\u5ea6\u65f6\u5019\u7528\u4ec5\u4ec5\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5728\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u4e2d\uff0c\u5b83\u5219\u4f7f\u7528\u4e00\u4e2a\u968f\u673a\u7684\u5c0f\u578b\u5b9e\u4f8b\u96c6\u3002\u5b83\u6bd4\u968f\u673a\u68af\u5ea6\u7684\u4e3b\u8981\u4f18\u70b9\u5728\u4e8e\u4f60\u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u8fd0\u7b97\u7684\u786c\u4ef6\u4f18\u5316\u5f97\u5230\u4e00\u4e2a\u8f83\u597d\u7684\u8bad\u7ec3\u8868\u73b0\uff0c\u5c24\u5176\u5f53\u4f60\u4f7f\u7528 GPU \u8fdb\u884c\u8fd0\u7b97\u7684\u65f6\u5019\u3002 \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u5728\u53c2\u6570\u7a7a\u95f4\u4e0a\u7684\u8868\u73b0\u6bd4\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u8981\u597d\u7684\u591a\uff0c\u5c24\u5176\u5728\u6709\u5927\u91cf\u7684\u5c0f\u578b\u5b9e\u4f8b\u96c6\u65f6\u3002\u4f5c\u4e3a\u7ed3\u679c\uff0c\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u4f1a\u6bd4\u968f\u673a\u68af\u5ea6\u66f4\u9760\u8fd1\u6700\u5c0f\u503c\u3002\u4f46\u662f\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u6709\u53ef\u80fd\u9677\u5728\u5c40\u90e8\u6700\u5c0f\u503c\u4e2d\uff08\u5728\u9047\u5230\u5c40\u90e8\u6700\u5c0f\u503c\u95ee\u9898\u7684\u60c5\u51b5\u4e0b\uff0c\u548c\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\u7ebf\u6027\u56de\u5f52\u4e0d\u4e00\u6837\uff09\u3002 \u56fe4-11\u663e\u793a\u4e86\u8bad\u7ec3\u671f\u95f4\u4e09\u79cd\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u6240\u91c7\u7528\u7684\u8def\u5f84\u3002 \u4ed6\u4eec\u90fd\u63a5\u8fd1\u6700\u5c0f\u503c\uff0c\u4f46\u6279\u91cf\u68af\u5ea6\u7684\u8def\u5f84\u6700\u540e\u505c\u5728\u4e86\u6700\u5c0f\u503c\uff0c\u800c\u968f\u673a\u68af\u5ea6\u548c\u5c0f\u6279\u91cf\u68af\u5ea6\u6700\u540e\u90fd\u5728\u6700\u5c0f\u503c\u9644\u8fd1\u6446\u52a8\u3002 \u4f46\u662f\uff0c\u4e0d\u8981\u5fd8\u8bb0\uff0c\u6279\u6b21\u68af\u5ea6\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6765\u5b8c\u6210\u6bcf\u4e00\u6b65\uff0c\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u4e00\u4e2a\u8f83\u597d\u7684 learning schedule \uff0c\u968f\u673a\u68af\u5ea6\u548c\u5c0f\u6279\u91cf\u68af\u5ea6\u4e5f\u53ef\u4ee5\u5f97\u5230\u6700\u5c0f\u503c\u3002 \u56fe 4-11\uff1a\u53c2\u6570\u7a7a\u95f4\u7684\u68af\u5ea6\u4e0b\u964d\u8def\u5f84 \u8ba9\u6211\u6bd4\u8f83\u4e00\u4e0b\u76ee\u524d\u6211\u4eec\u5df2\u7ecf\u63a2\u8ba8\u8fc7\u7684\u5bf9\u7ebf\u6027\u56de\u5f52\u7684\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u3002\u5982\u8868 4-1 \u6240\u793a\uff0c\u5176\u4e2d \u8868\u793a\u8bad\u7ec3\u6837\u672c\u7684\u4e2a\u6570\uff0c \u8868\u793a\u7279\u5f81\u7684\u4e2a\u6570\u3002 \u8868 4-1\uff1a\u6bd4\u8f83\u7ebf\u6027\u56de\u5f52\u7684\u4e0d\u540c\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5 \u63d0\u793a \u4e0a\u8ff0\u7b97\u6cd5\u5728\u5b8c\u6210\u8bad\u7ec3\u540e\uff0c\u5f97\u5230\u7684\u53c2\u6570\u57fa\u672c\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u5b83\u4eec\u4f1a\u5f97\u5230\u975e\u5e38\u76f8\u4f3c\u7684\u6a21\u578b\uff0c\u6700\u540e\u4f1a\u4ee5\u4e00\u6837\u7684\u65b9\u5f0f\u53bb\u8fdb\u884c\u9884\u6d4b\u3002 \u591a\u9879\u5f0f\u56de\u5f52 \u5982\u679c\u4f60\u7684\u6570\u636e\u5b9e\u9645\u4e0a\u6bd4\u7b80\u5355\u7684\u76f4\u7ebf\u66f4\u590d\u6742\u5462\uff1f \u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u4f60\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\u6765\u62df\u5408\u975e\u7ebf\u6027\u6570\u636e\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u7279\u5f81\u8fdb\u884c\u52a0\u6743\u540e\u4f5c\u4e3a\u65b0\u7684\u7279\u5f81\uff0c\u7136\u540e\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u5728\u8fd9\u4e2a\u6269\u5c55\u7684\u7279\u5f81\u96c6\u3002 \u8fd9\u79cd\u65b9\u6cd5\u79f0\u4e3a\u591a\u9879\u5f0f\u56de\u5f52\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002 \u9996\u5148\uff0c\u6211\u4eec\u6839\u636e\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u6b21\u65b9\u7a0b\uff08\u5e76\u52a0\u4e0a\u4e00\u4e9b\u566a\u58f0\uff0c\u5982\u56fe 4-12\uff09\u6765\u751f\u6210\u4e00\u4e9b\u975e\u7ebf\u6027\u6570\u636e\uff1a m = 100 X = 6 * np.random.rand(m, 1) - 3 y = 0.5 * X**2 + X + 2 + np.random.randn(m, 1) \u56fe 4-12\uff1a\u751f\u4ea7\u52a0\u5165\u566a\u58f0\u7684\u975e\u7ebf\u6027\u6570\u636e \u5f88\u6e05\u695a\u7684\u770b\u51fa\uff0c\u76f4\u7ebf\u4e0d\u80fd\u6070\u5f53\u7684\u62df\u5408\u8fd9\u4e9b\u6570\u636e\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u4f7f\u7528 Scikit-Learning \u7684 PolynomialFeatures \u7c7b\u8fdb\u884c\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u8f6c\u6362\uff0c\u8ba9\u8bad\u7ec3\u96c6\u4e2d\u6bcf\u4e2a\u7279\u5f81\u7684\u5e73\u65b9\uff082 \u6b21\u591a\u9879\u5f0f\uff09\u4f5c\u4e3a\u65b0\u7279\u5f81\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ec5\u5b58\u5728\u4e00\u4e2a\u7279\u5f81\uff09\uff1a >>> from sklearn.preprocessing import PolynomialFeatures >>> poly_features = PolynomialFeatures(degree=2,include_bias=False) >>> X_poly = poly_features.fit_transform(X) >>> X[0] array([-0.75275929]) >>> X_poly[0] array([-0.75275929, 0.56664654]) X_poly \u73b0\u5728\u5305\u542b\u539f\u59cb\u7279\u5f81 \u5e76\u52a0\u4e0a\u4e86\u8fd9\u4e2a\u7279\u5f81\u7684\u5e73\u65b9 \u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6269\u5c55\u8bad\u7ec3\u96c6\u4e0a\u4f7f\u7528 LinearRegression \u6a21\u578b\u8fdb\u884c\u62df\u5408\uff0c\u5982\u56fe 4-13\uff1a >>> lin_reg = LinearRegression() >>> lin_reg.fit(X_poly, y) >>> lin_reg.intercept_, lin_reg.coef_ (array([ 1.78134581]), array([[ 0.93366893, 0.56456263]])) \u56fe 4-13\uff1a\u591a\u9879\u5f0f\u56de\u5f52\u6a21\u578b\u9884\u6d4b \u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u6a21\u578b\u9884\u6d4b\u51fd\u6570 \uff0c\u4e8b\u5b9e\u4e0a\u539f\u59cb\u51fd\u6570\u4e3a \u518d\u52a0\u4e0a\u4e00\u4e9b\u9ad8\u65af\u566a\u58f0\u3002 \u8bf7\u6ce8\u610f\uff0c\u5f53\u5b58\u5728\u591a\u4e2a\u7279\u5f81\u65f6\uff0c\u591a\u9879\u5f0f\u56de\u5f52\u80fd\u591f\u627e\u51fa\u7279\u5f81\u4e4b\u95f4\u7684\u5173\u7cfb\uff08\u8fd9\u662f\u666e\u901a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u65e0\u6cd5\u505a\u5230\u7684\uff09\u3002 \u8fd9\u662f\u56e0\u4e3a LinearRegression \u4f1a\u81ea\u52a8\u6dfb\u52a0\u5f53\u524d\u9636\u6570\u4e0b\u7279\u5f81\u7684\u6240\u6709\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u7279\u5f81 \uff0c\u4f7f\u7528 3 \u9636\uff08 degree=3 \uff09\u7684 LinearRegression \u65f6\uff0c\u4e0d\u4ec5\u6709 \u4ee5\u53ca \uff0c\u540c\u65f6\u4e5f\u4f1a\u6709\u5b83\u4eec\u7684\u5176\u4ed6\u7ec4\u5408\u9879 \u3002 \u63d0\u793a PolynomialFeatures(degree=d) \u628a\u4e00\u4e2a\u5305\u542b \u4e2a\u7279\u5f81\u7684\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5305\u542b \u7279\u5f81\u7684\u6570\u7ec4\uff0c \u8868\u793a \u7684\u9636\u4e58\uff0c\u7b49\u4e8e \u3002\u5c0f\u5fc3\u5927\u91cf\u7279\u5f81\u7684\u7ec4\u5408\u7206\u70b8\uff01 \u5b66\u4e60\u66f2\u7ebf \u5982\u679c\u4f60\u4f7f\u7528\u4e00\u4e2a\u9ad8\u9636\u7684\u591a\u9879\u5f0f\u56de\u5f52\uff0c\u4f60\u53ef\u80fd\u53d1\u73b0\u5b83\u7684\u62df\u5408\u7a0b\u5ea6\u8981\u6bd4\u666e\u901a\u7684\u7ebf\u6027\u56de\u5f52\u8981\u597d\u7684\u591a\u3002\u4f8b\u5982\uff0c\u56fe 4-14 \u4f7f\u7528\u4e00\u4e2a 300 \u9636\u7684\u591a\u9879\u5f0f\u6a21\u578b\u53bb\u62df\u5408\u4e4b\u524d\u7684\u6570\u636e\u96c6\uff0c\u5e76\u540c\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u30012 \u9636\u7684\u591a\u9879\u5f0f\u56de\u5f52\u8fdb\u884c\u6bd4\u8f83\u3002\u6ce8\u610f 300 \u9636\u7684\u591a\u9879\u5f0f\u6a21\u578b\u5982\u4f55\u6446\u52a8\u4ee5\u5c3d\u53ef\u80fd\u63a5\u8fd1\u8bad\u7ec3\u5b9e\u4f8b\u3002 \u56fe 4-14\uff1a\u9ad8\u9636\u591a\u9879\u5f0f\u56de\u5f52 \u5f53\u7136\uff0c\u8fd9\u79cd\u9ad8\u9636\u591a\u9879\u5f0f\u56de\u5f52\u6a21\u578b\u5728\u8fd9\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u4e25\u91cd\u8fc7\u62df\u5408\u4e86\uff0c\u7ebf\u6027\u6a21\u578b\u5219\u6b20\u62df\u5408\u3002\u5728\u8fd9\u4e2a\u8bad\u7ec3\u96c6\u4e0a\uff0c\u4e8c\u6b21\u6a21\u578b\u6709\u7740\u8f83\u597d\u7684\u6cdb\u5316\u80fd\u529b\u3002\u90a3\u662f\u56e0\u4e3a\u5728\u751f\u6210\u6570\u636e\u65f6\u4f7f\u7528\u4e86\u4e8c\u6b21\u6a21\u578b\uff0c\u4f46\u662f\u4e00\u822c\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6570\u636e\u751f\u6210\u51fd\u6570\u662f\u4ec0\u4e48\uff0c\u90a3\u6211\u4eec\u8be5\u5982\u4f55\u51b3\u5b9a\u6211\u4eec\u6a21\u578b\u7684\u590d\u6742\u5ea6\u5462\uff1f\u4f60\u5982\u4f55\u544a\u8bc9\u6211\u4f60\u7684\u6a21\u578b\u662f\u8fc7\u62df\u5408\u8fd8\u662f\u6b20\u62df\u5408\uff1f \u5728\u7b2c\u4e8c\u7ae0\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u4f30\u8ba1\u4e00\u4e2a\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u5982\u679c\u4e00\u4e2a\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u826f\u597d\uff0c\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6307\u6807\u5374\u5f97\u51fa\u5176\u6cdb\u5316\u80fd\u529b\u5f88\u5dee\uff0c\u90a3\u4e48\u4f60\u7684\u6a21\u578b\u5c31\u662f\u8fc7\u62df\u5408\u4e86\u3002\u5982\u679c\u5728\u8fd9\u4e24\u65b9\u9762\u90fd\u8868\u73b0\u4e0d\u597d\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u6b20\u62df\u5408\u4e86\u3002\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u544a\u8bc9\u6211\u4eec\uff0c\u4f60\u7684\u6a21\u578b\u662f\u592a\u590d\u6742\u8fd8\u662f\u592a\u7b80\u5355\u4e86\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u89c2\u5bdf\u5b66\u4e60\u66f2\u7ebf\uff1a\u753b\u51fa\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u8868\u73b0\uff0c\u540c\u65f6\u753b\u51fa\u4ee5\u8bad\u7ec3\u96c6\u89c4\u6a21\u4e3a\u81ea\u53d8\u91cf\u7684\u8bad\u7ec3\u96c6\u51fd\u6570\u3002\u4e3a\u4e86\u5f97\u5230\u56fe\u50cf\uff0c\u9700\u8981\u5728\u8bad\u7ec3\u96c6\u7684\u4e0d\u540c\u89c4\u6a21\u5b50\u96c6\u4e0a\u8fdb\u884c\u591a\u6b21\u8bad\u7ec3\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u753b\u51fa\u7ed9\u5b9a\u8bad\u7ec3\u96c6\u540e\u7684\u6a21\u578b\u5b66\u4e60\u66f2\u7ebf\uff1a from sklearn.metrics import mean_squared_error from sklearn.model_selection import train_test_split def plot_learning_curves(model, X, y): X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2) train_errors, val_errors = [], [] for m in range(1, len(X_train)): model.fit(X_train[:m], y_train[:m]) y_train_predict = model.predict(X_train[:m]) y_val_predict = model.predict(X_val) train_errors.append(mean_squared_error(y_train_predict, y_train[:m])) val_errors.append(mean_squared_error(y_val_predict, y_val)) plt.plot(np.sqrt(train_errors), \"r-+\", linewidth=2, label=\"train\") plt.plot(np.sqrt(val_errors), \"b-\", linewidth=3, label=\"val\") \u6211\u4eec\u4e00\u8d77\u770b\u4e00\u4e0b\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u5b66\u4e60\u66f2\u7ebf\uff08\u56fe 4-15\uff09\uff1a lin_reg = LinearRegression() plot_learning_curves(lin_reg, X, y) \u56fe 4-15\uff1a\u5b66\u4e60\u66f2\u7ebf \u8fd9\u5e45\u56fe\u503c\u5f97\u6211\u4eec\u6df1\u7a76\u3002\u9996\u5148\uff0c\u6211\u4eec\u89c2\u5bdf\u8bad\u7ec3\u96c6\u7684\u8868\u73b0\uff1a\u5f53\u8bad\u7ec3\u96c6\u53ea\u6709\u4e00\u4e24\u4e2a\u6837\u672c\u7684\u65f6\u5019\uff0c\u6a21\u578b\u80fd\u591f\u975e\u5e38\u597d\u7684\u62df\u5408\u5b83\u4eec\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u66f2\u7ebf\u662f\u4ece\u96f6\u5f00\u59cb\u7684\u539f\u56e0\u3002\u4f46\u662f\u5f53\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684\u6837\u672c\u7684\u65f6\u5019\uff0c\u8bad\u7ec3\u96c6\u4e0a\u7684\u62df\u5408\u7a0b\u5ea6\u53d8\u5f97\u96be\u4ee5\u63a5\u53d7\uff0c\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u6709\u4e24\u4e2a\u539f\u56e0\uff0c\u4e00\u662f\u56e0\u4e3a\u6570\u636e\u4e2d\u542b\u6709\u566a\u58f0\uff0c\u53e6\u4e00\u4e2a\u662f\u6570\u636e\u6839\u672c\u4e0d\u662f\u7ebf\u6027\u7684\u3002\u56e0\u6b64\u968f\u7740\u6570\u636e\u89c4\u6a21\u7684\u589e\u5927\uff0c\u8bef\u5dee\u4e5f\u4f1a\u4e00\u76f4\u589e\u5927\uff0c\u76f4\u5230\u8fbe\u5230\u9ad8\u539f\u5730\u5e26\u5e76\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u5728\u4e4b\u540e\uff0c\u7ee7\u7eed\u52a0\u5165\u65b0\u7684\u6837\u672c\uff0c\u6a21\u578b\u7684\u5e73\u5747\u8bef\u5dee\u4e0d\u4f1a\u53d8\u5f97\u66f4\u597d\u6216\u8005\u66f4\u5dee\u3002\u6211\u4eec\u7ee7\u7eed\u6765\u770b\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u8868\u73b0\uff0c\u5f53\u4ee5\u975e\u5e38\u5c11\u7684\u6837\u672c\u53bb\u8bad\u7ec3\u65f6\uff0c\u6a21\u578b\u4e0d\u80fd\u6070\u5f53\u7684\u6cdb\u5316\uff0c\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u9a8c\u8bc1\u8bef\u5dee\u4e00\u5f00\u59cb\u662f\u975e\u5e38\u5927\u7684\u3002\u5f53\u8bad\u7ec3\u6837\u672c\u53d8\u591a\u7684\u5230\u65f6\u5019\uff0c\u6a21\u578b\u5b66\u4e60\u7684\u4e1c\u897f\u53d8\u591a\uff0c\u9a8c\u8bc1\u8bef\u5dee\u5f00\u59cb\u7f13\u6162\u7684\u4e0b\u964d\u3002\u4f46\u662f\u4e00\u6761\u76f4\u7ebf\u4e0d\u53ef\u80fd\u5f88\u597d\u7684\u62df\u5408\u8fd9\u4e9b\u6570\u636e\uff0c\u56e0\u6b64\u6700\u540e\u8bef\u5dee\u4f1a\u5230\u8fbe\u5728\u4e00\u4e2a\u9ad8\u539f\u5730\u5e26\u5e76\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u6700\u540e\u548c\u8bad\u7ec3\u96c6\u7684\u66f2\u7ebf\u975e\u5e38\u63a5\u8fd1\u3002 \u4e0a\u9762\u7684\u66f2\u7ebf\u8868\u73b0\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u6b20\u62df\u5408\u6a21\u578b\uff0c\u4e24\u6761\u66f2\u7ebf\u90fd\u5230\u8fbe\u9ad8\u539f\u5730\u5e26\u5e76\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u5e76\u4e14\u6700\u540e\u4e24\u6761\u66f2\u7ebf\u975e\u5e38\u63a5\u8fd1\uff0c\u540c\u65f6\u8bef\u5dee\u503c\u975e\u5e38\u5927\u3002 \u63d0\u793a \u5982\u679c\u4f60\u7684\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u662f\u6b20\u62df\u5408\u7684\uff0c\u6dfb\u52a0\u66f4\u591a\u7684\u6837\u672c\u662f\u6ca1\u7528\u7684\u3002\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u6a21\u578b\u6216\u8005\u627e\u5230\u66f4\u597d\u7684\u7279\u5f81\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u5728\u76f8\u540c\u6570\u636e\u4e0a10\u9636\u591a\u9879\u5f0f\u6a21\u578b\u62df\u5408\u7684\u5b66\u4e60\u66f2\u7ebf\uff08\u56fe 4-16\uff09\uff1a from sklearn.pipeline import Pipeline polynomial_regression = Pipeline(( (\"poly_features\", PolynomialFeatures(degree=10, include_bias=False)), (\"sgd_reg\", LinearRegression()), )) plot_learning_curves(polynomial_regression, X, y) \u8fd9\u5e45\u56fe\u50cf\u548c\u4e4b\u524d\u7684\u6709\u4e00\u70b9\u70b9\u50cf\uff0c\u4f46\u662f\u5176\u6709\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4e0d\u540c\u70b9\uff1a \u5728\u8bad\u7ec3\u96c6\u4e0a\uff0c\u8bef\u5dee\u8981\u6bd4\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4f4e\u7684\u591a\u3002 \u56fe\u4e2d\u7684\u4e24\u6761\u66f2\u7ebf\u4e4b\u95f4\u6709\u95f4\u9694\uff0c\u8fd9\u610f\u5473\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u8868\u73b0\u8981\u6bd4\u9a8c\u8bc1\u96c6\u4e0a\u597d\u7684\u591a\uff0c\u8fd9\u4e5f\u662f\u6a21\u578b\u8fc7\u62df\u5408\u7684\u663e\u8457\u7279\u70b9\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u66f4\u5927\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u8fd9\u4e24\u6761\u66f2\u7ebf\u6700\u540e\u4f1a\u975e\u5e38\u7684\u63a5\u8fd1\u3002 \u56fe4-16\uff1a\u591a\u9879\u5f0f\u6a21\u578b\u7684\u5b66\u4e60\u66f2\u7ebf \u63d0\u793a \u6539\u5584\u6a21\u578b\u8fc7\u62df\u5408\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u63d0\u4f9b\u66f4\u591a\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u76f4\u5230\u8bad\u7ec3\u8bef\u5dee\u548c\u9a8c\u8bc1\u8bef\u5dee\u76f8\u7b49\u3002 \u504f\u5dee\u548c\u65b9\u5dee\u7684\u6743\u8861 \u5728\u7edf\u8ba1\u548c\u673a\u5668\u5b66\u4e60\u9886\u57df\u6709\u4e2a\u91cd\u8981\u7684\u7406\u8bba\uff1a\u4e00\u4e2a\u6a21\u578b\u7684\u6cdb\u5316\u8bef\u5dee\u7531\u4e09\u4e2a\u4e0d\u540c\u8bef\u5dee\u7684\u548c\u51b3\u5b9a\uff1a \u504f\u5dee\uff1a\u6cdb\u5316\u8bef\u5dee\u7684\u8fd9\u90e8\u5206\u8bef\u5dee\u662f\u7531\u4e8e\u9519\u8bef\u7684\u5047\u8bbe\u51b3\u5b9a\u7684\u3002\u4f8b\u5982\u5b9e\u9645\u662f\u4e00\u4e2a\u4e8c\u6b21\u6a21\u578b\uff0c\u4f60\u5374\u5047\u8bbe\u4e86\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u3002\u4e00\u4e2a\u9ad8\u504f\u5dee\u7684\u6a21\u578b\u6700\u5bb9\u6613\u51fa\u73b0\u6b20\u62df\u5408\u3002 \u65b9\u5dee\uff1a\u8fd9\u90e8\u5206\u8bef\u5dee\u662f\u7531\u4e8e\u6a21\u578b\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u5fae\u5c0f\u53d8\u5316\u8f83\u4e3a\u654f\u611f\uff0c\u4e00\u4e2a\u591a\u81ea\u7531\u5ea6\u7684\u6a21\u578b\u66f4\u5bb9\u6613\u6709\u9ad8\u7684\u65b9\u5dee\uff08\u4f8b\u5982\u4e00\u4e2a\u9ad8\u9636\u591a\u9879\u5f0f\u6a21\u578b\uff09\uff0c\u56e0\u6b64\u4f1a\u5bfc\u81f4\u6a21\u578b\u8fc7\u62df\u5408\u3002 \u4e0d\u53ef\u7ea6\u8bef\u5dee\uff1a\u8fd9\u90e8\u5206\u8bef\u5dee\u662f\u7531\u4e8e\u6570\u636e\u672c\u8eab\u7684\u566a\u58f0\u51b3\u5b9a\u7684\u3002\u964d\u4f4e\u8fd9\u90e8\u5206\u8bef\u5dee\u7684\u552f\u4e00\u65b9\u6cd5\u5c31\u662f\u8fdb\u884c\u6570\u636e\u6e05\u6d17\uff08\u4f8b\u5982\uff1a\u4fee\u590d\u6570\u636e\u6e90\uff0c\u4fee\u590d\u574f\u7684\u4f20\u611f\u5668\uff0c\u8bc6\u522b\u548c\u5254\u9664\u5f02\u5e38\u503c\uff09\u3002 \u7ebf\u6027\u6a21\u578b\u7684\u6b63\u5219\u5316 \u6b63\u5982\u6211\u4eec\u5728\u7b2c\u4e00\u548c\u7b2c\u4e8c\u7ae0\u770b\u5230\u7684\u90a3\u6837\uff0c\u964d\u4f4e\u6a21\u578b\u7684\u8fc7\u62df\u5408\u7684\u597d\u65b9\u6cd5\u662f\u6b63\u5219\u5316\u8fd9\u4e2a\u6a21\u578b\uff08\u5373\u9650\u5236\u5b83\uff09\uff1a\u6a21\u578b\u6709\u8d8a\u5c11\u7684\u81ea\u7531\u5ea6\uff0c\u5c31\u8d8a\u96be\u4ee5\u62df\u5408\u6570\u636e\u3002\u4f8b\u5982\uff0c\u6b63\u5219\u5316\u4e00\u4e2a\u591a\u9879\u5f0f\u6a21\u578b\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u51cf\u5c11\u591a\u9879\u5f0f\u7684\u9636\u6570\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff0c\u6b63\u5219\u5316\u7684\u5178\u578b\u5b9e\u73b0\u5c31\u662f\u7ea6\u675f\u6a21\u578b\u4e2d\u53c2\u6570\u7684\u6743\u91cd\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e09\u79cd\u4e0d\u540c\u7ea6\u675f\u6743\u91cd\u7684\u65b9\u6cd5\uff1aRidge \u56de\u5f52\uff0cLasso \u56de\u5f52\u548c Elastic Net\u3002 \u5cad\uff08Ridge\uff09\u56de\u5f52 \u5cad\u56de\u5f52\uff08\u4e5f\u79f0\u4e3a Tikhonov \u6b63\u5219\u5316\uff09\u662f\u7ebf\u6027\u56de\u5f52\u7684\u6b63\u5219\u5316\u7248\uff1a\u5728\u635f\u5931\u51fd\u6570\u4e0a\u76f4\u63a5\u52a0\u4e0a\u4e00\u4e2a\u6b63\u5219\u9879 \u3002\u8fd9\u4f7f\u5f97\u5b66\u4e60\u7b97\u6cd5\u4e0d\u4ec5\u80fd\u591f\u62df\u5408\u6570\u636e\uff0c\u800c\u4e14\u80fd\u591f\u4f7f\u6a21\u578b\u7684\u53c2\u6570\u6743\u91cd\u5c3d\u91cf\u7684\u5c0f\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u6b63\u5219\u9879\u53ea\u6709\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u624d\u4f1a\u88ab\u52a0\u5230\u635f\u5931\u51fd\u6570\u3002\u5f53\u5f97\u5230\u5b8c\u6210\u8bad\u7ec3\u7684\u6a21\u578b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u6ca1\u6709\u6b63\u5219\u5316\u7684\u6d4b\u91cf\u65b9\u6cd5\u53bb\u8bc4\u4ef7\u6a21\u578b\u7684\u8868\u73b0\u3002 \u63d0\u793a \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u4f7f\u7528\u7684\u635f\u5931\u51fd\u6570\u548c\u6d4b\u8bd5\u8fc7\u7a0b\u4f7f\u7528\u7684\u8bc4\u4ef7\u51fd\u6570\u662f\u4e0d\u4e00\u6837\u7684\u3002\u9664\u4e86\u6b63\u5219\u5316\uff0c\u8fd8\u6709\u4e00\u4e2a\u4e0d\u540c\uff1a\u8bad\u7ec3\u65f6\u7684\u635f\u5931\u51fd\u6570\u5e94\u8be5\u5728\u4f18\u5316\u8fc7\u7a0b\u4e2d\u6613\u4e8e\u6c42\u5bfc\uff0c\u800c\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u8bc4\u4ef7\u51fd\u6570\u66f4\u5e94\u8be5\u63a5\u8fd1\u6700\u540e\u7684\u5ba2\u89c2\u8868\u73b0\u3002\u4e00\u4e2a\u597d\u7684\u4f8b\u5b50\uff1a\u5728\u5206\u7c7b\u8bad\u7ec3\u4e2d\u6211\u4eec\u4f7f\u7528\u5bf9\u6570\u635f\u5931\uff08\u9a6c\u4e0a\u6211\u4eec\u4f1a\u8ba8\u8bba\u5b83\uff09\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u4f46\u662f\u6211\u4eec\u5374\u4f7f\u7528\u7cbe\u786e\u7387/\u53ec\u56de\u7387\u6765\u4f5c\u4e3a\u5b83\u7684\u8bc4\u4ef7\u51fd\u6570\u3002 \u8d85\u53c2\u6570 \u51b3\u5b9a\u4e86\u4f60\u60f3\u6b63\u5219\u5316\u8fd9\u4e2a\u6a21\u578b\u7684\u5f3a\u5ea6\u3002\u5982\u679c \u90a3\u6b64\u65f6\u7684\u5cad\u56de\u5f52\u4fbf\u53d8\u4e3a\u4e86\u7ebf\u6027\u56de\u5f52\u3002\u5982\u679c \u975e\u5e38\u7684\u5927\uff0c\u6240\u6709\u7684\u6743\u91cd\u6700\u540e\u90fd\u63a5\u8fd1\u4e8e\u96f6\uff0c\u6700\u540e\u7ed3\u679c\u5c06\u662f\u4e00\u6761\u7a7f\u8fc7\u6570\u636e\u5e73\u5747\u503c\u7684\u6c34\u5e73\u76f4\u7ebf\u3002\u516c\u5f0f 4-8 \u662f\u5cad\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\uff1a \u516c\u5f0f 4-8\uff1a\u5cad\u56de\u5f52\u635f\u5931\u51fd\u6570 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u504f\u5dee \u662f\u6ca1\u6709\u88ab\u6b63\u5219\u5316\u7684\uff08\u7d2f\u52a0\u8fd0\u7b97\u7684\u5f00\u59cb\u662f \u800c\u4e0d\u662f \uff09\u3002\u5982\u6211\u5b9a\u4e49 \u4f5c\u4e3a\u7279\u5f81\u7684\u6743\u91cd\u5411\u91cf\uff08 \u5230 \uff09\uff0c\u90a3\u4e48\u6b63\u5219\u9879\u53ef\u4ee5\u7b80\u5199\u6210 \uff0c\u5176\u4e2d \u8868\u793a\u6743\u91cd\u5411\u91cf\u7684 \u8303\u6570\u3002\u5bf9\u4e8e\u68af\u5ea6\u4e0b\u964d\u6765\u8bf4\u4ec5\u4ec5\u5728\u5747\u65b9\u5dee\u68af\u5ea6\u5411\u91cf\uff08\u516c\u5f0f 4-6\uff09\u52a0\u4e0a\u4e00\u9879 \u3002 \u63d0\u793a \u5728\u4f7f\u7528\u5cad\u56de\u5f52\u524d\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u653e\u7f29\uff08\u53ef\u4ee5\u4f7f\u7528 StandardScaler \uff09\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u7b97\u6cd5\u5bf9\u4e8e\u8f93\u5165\u7279\u5f81\u7684\u6570\u503c\u5c3a\u5ea6\uff08scale\uff09\u975e\u5e38\u654f\u611f\u3002\u5927\u591a\u6570\u7684\u6b63\u5219\u5316\u6a21\u578b\u90fd\u662f\u8fd9\u6837\u7684\u3002 \u56fe 4-17 \u5c55\u793a\u4e86\u5728\u76f8\u540c\u7ebf\u6027\u6570\u636e\u4e0a\u4f7f\u7528\u4e0d\u540c \u503c\u7684\u5cad\u56de\u5f52\u6a21\u578b\u6700\u540e\u7684\u8868\u73b0\u3002\u5de6\u56fe\u4e2d\uff0c\u4f7f\u7528\u7b80\u5355\u7684\u5cad\u56de\u5f52\u6a21\u578b\uff0c\u6700\u540e\u5f97\u5230\u4e86\u7ebf\u6027\u7684\u9884\u6d4b\u3002\u53f3\u56fe\u4e2d\u7684\u6570\u636e\u9996\u5148\u4f7f\u7528 10 \u9636\u7684 PolynomialFearures \u8fdb\u884c\u6269\u5c55\uff0c\u7136\u540e\u4f7f\u7528 StandardScaler \u8fdb\u884c\u7f29\u653e\uff0c\u6700\u540e\u5c06\u5cad\u6a21\u578b\u5e94\u7528\u5728\u5904\u7406\u8fc7\u540e\u7684\u7279\u5f81\u4e0a\u3002\u8fd9\u5c31\u662f\u5e26\u6709\u5cad\u6b63\u5219\u9879\u7684\u591a\u9879\u5f0f\u56de\u5f52\u3002\u6ce8\u610f\u5f53 \u589e\u5927\u7684\u65f6\u5019\uff0c\u5bfc\u81f4\u9884\u6d4b\u66f2\u7ebf\u53d8\u5f97\u6241\u5e73\uff08\u5373\u5c11\u4e86\u6781\u7aef\u503c\uff0c\u591a\u4e86\u4e00\u822c\u503c\uff09\uff0c\u8fd9\u6837\u51cf\u5c11\u4e86\u6a21\u578b\u7684\u65b9\u5dee\uff0c\u5374\u589e\u52a0\u4e86\u6a21\u578b\u7684\u504f\u5dee\u3002 \u5bf9\u7ebf\u6027\u56de\u5f52\u6765\u8bf4\uff0c\u5bf9\u4e8e\u5cad\u56de\u5f52\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5c01\u95ed\u65b9\u7a0b\u53bb\u8ba1\u7b97\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u53bb\u5904\u7406\u3002\u5b83\u4eec\u7684\u7f3a\u70b9\u548c\u4f18\u70b9\u662f\u4e00\u6837\u7684\u3002\u516c\u5f0f 4-9 \u8868\u793a\u5c01\u95ed\u65b9\u7a0b\u7684\u89e3\uff08\u77e9\u9635 \u662f\u4e00\u4e2a\u9664\u4e86\u5de6\u4e0a\u89d2\u6709\u4e00\u4e2a \u7684 \u7684\u5355\u4f4d\u77e9\uff0c\u8fd9\u4e2a \u4ee3\u8868\u504f\u5dee\u9879\u3002\u8bd1\u8005\u6ce8\uff1a\u504f\u5dee \u4e0d\u88ab\u6b63\u5219\u5316\u7684\uff09\u3002 \u56fe 4-17\uff1a\u5cad\u56de\u5f52 \u516c\u5f0f 4-9\uff1a\u5cad\u56de\u5f52\u7684\u5c01\u95ed\u65b9\u7a0b\u7684\u89e3 \u4e0b\u9762\u662f\u5982\u4f55\u4f7f\u7528 Scikit-Learn \u6765\u8fdb\u884c\u5c01\u95ed\u65b9\u7a0b\u7684\u6c42\u89e3\uff08\u4f7f\u7528 Cholesky \u6cd5\u8fdb\u884c\u77e9\u9635\u5206\u89e3\u5bf9\u516c\u5f0f 4-9 \u8fdb\u884c\u53d8\u5f62\uff09: >>> from sklearn.linear_model import Ridge >>> ridge_reg = Ridge(alpha=1, solver=\"cholesky\") >>> ridge_reg.fit(X, y) >>> ridge_reg.predict([[1.5]]) array([[ 1.55071465]] \u4f7f\u7528\u968f\u673a\u68af\u5ea6\u6cd5\u8fdb\u884c\u6c42\u89e3\uff1a >>> sgd_reg = SGDRegressor(penalty=\"l2\") >>> sgd_reg.fit(X, y.ravel()) >>> sgd_reg.predict([[1.5]]) array([[ 1.13500145]]) penalty \u53c2\u6570\u6307\u7684\u662f\u6b63\u5219\u9879\u7684\u60e9\u7f5a\u7c7b\u578b\u3002\u6307\u5b9a\u201cl2\u201d\u8868\u660e\u4f60\u8981\u5728\u635f\u5931\u51fd\u6570\u4e0a\u6dfb\u52a0\u4e00\u9879\uff1a\u6743\u91cd\u5411\u91cf \u8303\u6570\u5e73\u65b9\u7684\u4e00\u534a\uff0c\u8fd9\u5c31\u662f\u7b80\u5355\u7684\u5cad\u56de\u5f52\u3002 Lasso \u56de\u5f52 Lasso \u56de\u5f52\uff08\u4e5f\u79f0 Least Absolute Shrinkage\uff0c\u6216\u8005 Selection Operator Regression\uff09\u662f\u53e6\u4e00\u79cd\u6b63\u5219\u5316\u7248\u7684\u7ebf\u6027\u56de\u5f52\uff1a\u5c31\u50cf\u5cad\u56de\u5f52\u90a3\u6837\uff0c\u5b83\u4e5f\u5728\u635f\u5931\u51fd\u6570\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6b63\u5219\u5316\u9879\uff0c\u4f46\u662f\u5b83\u4f7f\u7528\u6743\u91cd\u5411\u91cf\u7684 \u8303\u6570\u800c\u4e0d\u662f\u6743\u91cd\u5411\u91cf \u8303\u6570\u5e73\u65b9\u7684\u4e00\u534a\u3002\uff08\u5982\u516c\u5f0f 4-10\uff09 \u516c\u5f0f 4-10\uff1aLasso \u56de\u5f52\u7684\u635f\u5931\u51fd\u6570 \u56fe 4-18 \u5c55\u793a\u4e86\u548c\u56fe 4-17 \u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u4ec5\u4ec5\u662f\u7528 Lasso \u6a21\u578b\u4ee3\u66ff\u4e86 Ridge \u6a21\u578b\uff0c\u540c\u65f6\u8c03\u5c0f\u4e86 \u7684\u503c\u3002 \u56fe 4-18\uff1aLasso\u56de\u5f52 Lasso \u56de\u5f52\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u5f81\u662f\u5b83\u503e\u5411\u4e8e\u5b8c\u5168\u6d88\u9664\u6700\u4e0d\u91cd\u8981\u7684\u7279\u5f81\u7684\u6743\u91cd\uff08\u5373\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a\u96f6\uff09\u3002\u4f8b\u5982\uff0c\u53f3\u56fe\u4e2d\u7684\u865a\u7ebf\u6240\u793a\uff08 \uff09\uff0c\u66f2\u7ebf\u770b\u8d77\u6765\u50cf\u4e00\u6761\u4e8c\u6b21\u66f2\u7ebf\uff0c\u800c\u4e14\u51e0\u4e4e\u662f\u7ebf\u6027\u7684\uff0c\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u7684\u9ad8\u9636\u591a\u9879\u7279\u5f81\u90fd\u88ab\u8bbe\u7f6e\u4e3a\u96f6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cLasso\u56de\u5f52\u81ea\u52a8\u7684\u8fdb\u884c\u7279\u5f81\u9009\u62e9\u540c\u65f6\u8f93\u51fa\u4e00\u4e2a\u7a00\u758f\u6a21\u578b\uff08\u5373\uff0c\u5177\u6709\u5f88\u5c11\u7684\u975e\u96f6\u6743\u91cd\uff09\u3002 \u4f60\u53ef\u4ee5\u4ece\u56fe 4-19 \u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff1a\u5728\u5de6\u4e0a\u89d2\u56fe\u4e2d\uff0c\u540e\u80cc\u666f\u7684\u7b49\u9ad8\u7ebf\uff08\u692d\u5706\uff09\u8868\u793a\u4e86\u6ca1\u6709\u6b63\u5219\u5316\u7684\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\uff08 \uff09\uff0c\u767d\u8272\u7684\u5c0f\u5706\u5708\u8868\u793a\u5728\u5f53\u524d\u635f\u5931\u51fd\u6570\u4e0a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u8def\u5f84\u3002\u524d\u80cc\u666f\u7684\u7b49\u9ad8\u7ebf\uff08\u83f1\u5f62\uff09\u8868\u793a \u60e9\u7f5a\uff0c\u9ec4\u8272\u7684\u4e09\u89d2\u5f62\u8868\u793a\u4e86\u4ec5\u5728\u8fd9\u4e2a\u60e9\u7f5a\u4e0b\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u8def\u5f84\uff08 \uff09\u3002\u6ce8\u610f\u8def\u5f84\u7b2c\u4e00\u6b21\u662f\u5982\u4f55\u5230\u8fbe \uff0c\u7136\u540e\u5411\u4e0b\u6eda\u52a8\u76f4\u5230\u5b83\u5230\u8fbe \u3002\u5728\u53f3\u4e0a\u89d2\u56fe\u4e2d\uff0c\u7b49\u9ad8\u7ebf\u8868\u793a\u7684\u662f\u76f8\u540c\u635f\u5931\u51fd\u6570\u518d\u52a0\u4e0a\u4e00\u4e2a \u7684 \u60e9\u7f5a\u3002\u8fd9\u5e45\u56fe\u4e2d\uff0c\u5b83\u7684\u5168\u5c40\u6700\u5c0f\u503c\u5728 \u8fd9\u6839\u8f74\u4e0a\u3002\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u9996\u5148\u5230\u8fbe \uff0c\u7136\u540e\u5411\u4e0b\u6eda\u52a8\u76f4\u5230\u8fbe\u5230\u5168\u5c40\u6700\u5c0f\u503c\u3002 \u4e24\u4e2a\u5e95\u90e8\u56fe\u663e\u793a\u4e86\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u53ea\u662f\u4f7f\u7528\u4e86 \u60e9\u7f5a\u3002 \u89c4\u5219\u5316\u7684\u6700\u5c0f\u503c\u6bd4\u975e\u89c4\u8303\u5316\u7684\u6700\u5c0f\u503c\u66f4\u63a5\u8fd1\u4e8e \uff0c\u4f46\u6743\u91cd\u4e0d\u80fd\u5b8c\u5168\u6d88\u9664\u3002 \u56fe 4-19\uff1aRidge \u56de\u5f52\u548c Lasso \u56de\u5f52\u5bf9\u6bd4 \u63d0\u793a \u5728 Lasso \u635f\u5931\u51fd\u6570\u4e2d\uff0c\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u8def\u5f84\u8d8b\u5411\u4e0e\u5728\u4f4e\u8c37\u6709\u4e00\u4e2a\u53cd\u5f39\u3002\u8fd9\u662f\u56e0\u4e3a\u5728 \u65f6\u659c\u7387\u4f1a\u6709\u4e00\u4e2a\u7a81\u53d8\u3002\u4e3a\u4e86\u6700\u540e\u771f\u6b63\u6536\u655b\u5230\u5168\u5c40\u6700\u5c0f\u503c\uff0c\u4f60\u9700\u8981\u9010\u6e10\u7684\u964d\u4f4e\u5b66\u4e60\u7387\u3002 Lasso \u635f\u5931\u51fd\u6570\u5728 \u5904\u65e0\u6cd5\u8fdb\u884c\u5fae\u5206\u8fd0\u7b97\uff0c\u4f46\u662f\u68af\u5ea6\u4e0b\u964d\u5982\u679c\u4f60\u4f7f\u7528\u5b50\u68af\u5ea6\u5411\u91cf \u540e\u5b83\u53ef\u4ee5\u5728\u4efb\u4f55 \u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u8ba1\u7b97\u3002\u516c\u5f0f 4-11 \u662f\u5728 Lasso \u635f\u5931\u51fd\u6570\u4e0a\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u7684\u5b50\u68af\u5ea6\u5411\u91cf\u516c\u5f0f\u3002 \u516c\u5f0f 4-11\uff1aLasso \u56de\u5f52\u5b50\u68af\u5ea6\u5411\u91cf \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 Scikit-Learn \u7684 Lasso \u7c7b\u7684\u5c0f\u4f8b\u5b50\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 SGDRegressor(penalty=\"l1\") \u6765\u4ee3\u66ff\u5b83\u3002 >>> from sklearn.linear_model import Lasso >>> lasso_reg = Lasso(alpha=0.1) >>> lasso_reg.fit(X, y) >>> lasso_reg.predict([[1.5]]) array([ 1.53788174] \u5f39\u6027\u7f51\u7edc\uff08ElasticNet\uff09 \u5f39\u6027\u7f51\u7edc\u4ecb\u4e8e Ridge \u56de\u5f52\u548c Lasso \u56de\u5f52\u4e4b\u95f4\u3002\u5b83\u7684\u6b63\u5219\u9879\u662f Ridge \u56de\u5f52\u548c Lasso \u56de\u5f52\u6b63\u5219\u9879\u7684\u7b80\u5355\u6df7\u5408\uff0c\u540c\u65f6\u4f60\u53ef\u4ee5\u63a7\u5236\u5b83\u4eec\u7684\u6df7\u5408\u7387 \uff0c\u5f53 \u65f6\uff0c\u5f39\u6027\u7f51\u7edc\u5c31\u662f Ridge \u56de\u5f52\uff0c\u5f53 \u65f6\uff0c\u5176\u5c31\u662f Lasso \u56de\u5f52\u3002\u5177\u4f53\u8868\u793a\u5982\u516c\u5f0f 4-12\u3002 \u516c\u5f0f 4-12\uff1a\u5f39\u6027\u7f51\u7edc\u635f\u5931\u51fd\u6570 \u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u9009\u62e9\u7ebf\u6027\u56de\u5f52\uff0c\u5cad\u56de\u5f52\uff0cLasso \u56de\u5f52\uff0c\u5f39\u6027\u7f51\u7edc\u5462\uff1f\u4e00\u822c\u6765\u8bf4\u6709\u4e00\u70b9\u6b63\u5219\u9879\u7684\u8868\u73b0\u66f4\u597d\uff0c\u56e0\u6b64\u901a\u5e38\u4f60\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u3002\u5cad\u56de\u5f52\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9996\u9009\u9879\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u7279\u5f81\u4ec5\u6709\u5c11\u6570\u662f\u771f\u6b63\u6709\u7528\u7684\uff0c\u4f60\u5e94\u8be5\u9009\u62e9 Lasso \u548c\u5f39\u6027\u7f51\u7edc\u3002\u5c31\u50cf\u6211\u4eec\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u5b83\u4e24\u80fd\u591f\u5c06\u65e0\u7528\u7279\u5f81\u7684\u6743\u91cd\u964d\u4e3a\u96f6\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5f39\u6027\u7f51\u7edc\u7684\u8868\u73b0\u8981\u6bd4 Lasso \u597d\uff0c\u56e0\u4e3a\u5f53\u7279\u5f81\u6570\u91cf\u6bd4\u6837\u672c\u7684\u6570\u91cf\u5927\u7684\u65f6\u5019\uff0c\u6216\u8005\u7279\u5f81\u4e4b\u95f4\u6709\u5f88\u5f3a\u7684\u76f8\u5173\u6027\u65f6\uff0cLasso \u53ef\u80fd\u4f1a\u8868\u73b0\u7684\u4e0d\u89c4\u5f8b\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 Scikit-Learn ElasticNet \uff08 l1_ratio \u6307\u7684\u5c31\u662f\u6df7\u5408\u7387 \uff09\u7684\u7b80\u5355\u6837\u672c\uff1a >>> from sklearn.linear_model import ElasticNet >>> elastic_net = ElasticNet(alpha=0.1, l1_ratio=0.5) >>> elastic_net.fit(X, y) >>> elastic_net.predict([[1.5]]) array([ 1.54333232]) \u65e9\u671f\u505c\u6b62\u6cd5\uff08Early Stopping\uff09 \u5bf9\u4e8e\u8fed\u4ee3\u5b66\u4e60\u7b97\u6cd5\uff0c\u6709\u4e00\u79cd\u975e\u5e38\u7279\u6b8a\u7684\u6b63\u5219\u5316\u65b9\u6cd5\uff0c\u5c31\u50cf\u68af\u5ea6\u4e0b\u964d\u5728\u9a8c\u8bc1\u9519\u8bef\u8fbe\u5230\u6700\u5c0f\u503c\u65f6\u7acb\u5373\u505c\u6b62\u8bad\u7ec3\u90a3\u6837\u3002\u6211\u4eec\u79f0\u4e3a\u65e9\u671f\u505c\u6b62\u6cd5\u3002\u56fe 4-20 \u8868\u793a\u4f7f\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u6765\u8bad\u7ec3\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u6a21\u578b\uff08\u4e00\u4e2a\u9ad8\u9636\u591a\u9879\u5f0f\u56de\u5f52\u6a21\u578b\uff09\u3002\u968f\u7740\u8bad\u7ec3\u7684\u8fdb\u884c\uff0c\u7b97\u6cd5\u4e00\u76f4\u5b66\u4e60\uff0c\u5b83\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u9884\u6d4b\u8bef\u5dee\uff08RMSE\uff09\u81ea\u7136\u800c\u7136\u7684\u4e0b\u964d\u3002\u7136\u800c\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u9a8c\u8bc1\u8bef\u5dee\u505c\u6b62\u4e0b\u964d\uff0c\u5e76\u5f00\u59cb\u4e0a\u5347\u3002\u8fd9\u610f\u5473\u7740\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u5f00\u59cb\u51fa\u73b0\u8fc7\u62df\u5408\u3002\u4e00\u65e6\u9a8c\u8bc1\u9519\u8bef\u8fbe\u5230\u6700\u5c0f\u503c\uff0c\u4fbf\u63d0\u65e9\u505c\u6b62\u8bad\u7ec3\u3002\u8fd9\u79cd\u7b80\u5355\u6709\u6548\u7684\u6b63\u5219\u5316\u65b9\u6cd5\u88ab Geoffrey Hinton \u79f0\u4e3a\u201c\u5b8c\u7f8e\u7684\u514d\u8d39\u5348\u9910\u201d \u56fe 4-20\uff1a\u65e9\u671f\u505c\u6b62\u6cd5 \u63d0\u793a \u968f\u673a\u68af\u5ea6\u548c\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u4e0d\u662f\u5e73\u6ed1\u66f2\u7ebf\uff0c\u4f60\u53ef\u80fd\u5f88\u96be\u77e5\u9053\u5b83\u662f\u5426\u8fbe\u5230\u6700\u5c0f\u503c\u3002 \u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u53ea\u6709\u5728\u9a8c\u8bc1\u8bef\u5dee\u9ad8\u4e8e\u6700\u5c0f\u503c\u4e00\u6bb5\u65f6\u95f4\u540e\uff08\u4f60\u786e\u4fe1\u8be5\u6a21\u578b\u4e0d\u4f1a\u53d8\u5f97\u66f4\u597d\u4e86\uff09\uff0c\u624d\u505c\u6b62\uff0c\u4e4b\u540e\u5c06\u6a21\u578b\u53c2\u6570\u56de\u6eda\u5230\u9a8c\u8bc1\u8bef\u5dee\u6700\u5c0f\u503c\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u65e9\u671f\u505c\u6b62\u6cd5\u7684\u57fa\u7840\u5e94\u7528\uff1a from sklearn.base import clone sgd_reg = SGDRegressor(n_iter=1, warm_start=True, penalty=None,learning_rate=\"constant\", eta0=0.0005) minimum_val_error = float(\"inf\") best_epoch = None best_model = None for epoch in range(1000): sgd_reg.fit(X_train_poly_scaled, y_train) y_val_predict = sgd_reg.predict(X_val_poly_scaled) val_error = mean_squared_error(y_val_predict, y_val) if val_error < minimum_val_error: minimum_val_error = val_error best_epoch = epoch best_model = clone(sgd_reg) \u6ce8\u610f\uff1a\u5f53 warm_start=True \u65f6\uff0c\u8c03\u7528 fit() \u65b9\u6cd5\u540e\uff0c\u8bad\u7ec3\u4f1a\u4ece\u505c\u4e0b\u6765\u7684\u5730\u65b9\u7ee7\u7eed\uff0c\u800c\u4e0d\u662f\u4ece\u5934\u91cd\u65b0\u5f00\u59cb\u3002 \u903b\u8f91\u56de\u5f52 \u6b63\u5982\u6211\u4eec\u5728\u7b2c1\u7ae0\u4e2d\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u4e00\u4e9b\u56de\u5f52\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5206\u7c7b\uff08\u53cd\u4e4b\u4ea6\u7136\uff09\u3002 Logistic \u56de\u5f52\uff08\u4e5f\u79f0\u4e3a Logit \u56de\u5f52\uff09\u901a\u5e38\u7528\u4e8e\u4f30\u8ba1\u4e00\u4e2a\u5b9e\u4f8b\u5c5e\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7c7b\u522b\u7684\u6982\u7387\uff08\u4f8b\u5982\uff0c\u8fd9\u7535\u5b50\u90ae\u4ef6\u662f\u5783\u573e\u90ae\u4ef6\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\uff09\u3002 \u5982\u679c\u4f30\u8ba1\u7684\u6982\u7387\u5927\u4e8e 50%\uff0c\u90a3\u4e48\u6a21\u578b\u9884\u6d4b\u8fd9\u4e2a\u5b9e\u4f8b\u5c5e\u4e8e\u5f53\u524d\u7c7b\uff08\u79f0\u4e3a\u6b63\u7c7b\uff0c\u6807\u8bb0\u4e3a\u201c1\u201d\uff09\uff0c\u53cd\u4e4b\u9884\u6d4b\u5b83\u4e0d\u5c5e\u4e8e\u5f53\u524d\u7c7b\uff08\u5373\u5b83\u5c5e\u4e8e\u8d1f\u7c7b \uff0c\u6807\u8bb0\u4e3a\u201c0\u201d\uff09\u3002 \u8fd9\u6837\u4fbf\u6210\u4e3a\u4e86\u4e00\u4e2a\u4e8c\u5143\u5206\u7c7b\u5668\u3002 \u6982\u7387\u4f30\u8ba1 \u90a3\u4e48\u5b83\u662f\u600e\u6837\u5de5\u4f5c\u7684\uff1f \u5c31\u50cf\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e00\u6837\uff0cLogistic \u56de\u5f52\u6a21\u578b\u8ba1\u7b97\u8f93\u5165\u7279\u5f81\u7684\u52a0\u6743\u548c\uff08\u52a0\u4e0a\u504f\u5dee\u9879\uff09\uff0c\u4f46\u5b83\u4e0d\u50cf\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u90a3\u6837\u76f4\u63a5\u8f93\u51fa\u7ed3\u679c\uff0c\u800c\u662f\u628a\u7ed3\u679c\u8f93\u5165 logistic() \u51fd\u6570\u8fdb\u884c\u4e8c\u6b21\u52a0\u5de5\u540e\u8fdb\u884c\u8f93\u51fa\uff08\u8be6\u89c1\u516c\u5f0f 4-13\uff09\u3002 \u516c\u5f0f 4-13\uff1a\u903b\u8f91\u56de\u5f52\u6a21\u578b\u7684\u6982\u7387\u4f30\u8ba1\uff08\u5411\u91cf\u5f62\u5f0f\uff09 Logistic \u51fd\u6570\uff08\u4e5f\u79f0\u4e3a logit\uff09\uff0c\u7528 \u8868\u793a\uff0c\u5176\u662f\u4e00\u4e2a sigmoid \u51fd\u6570\uff08\u56fe\u50cf\u5448 S \u578b\uff09\uff0c\u5b83\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u4ecb\u4e8e 0 \u548c 1 \u4e4b\u95f4\u7684\u6570\u5b57\u3002\u5176\u5b9a\u4e49\u5982\u516c\u5f0f 4-14 \u548c\u56fe 4-21 \u6240\u793a\u3002 \u516c\u5f0f 4-14\uff1a\u903b\u8f91\u51fd\u6570 \u56fe4-21\uff1a\u903b\u8f91\u51fd\u6570 \u4e00\u65e6 Logistic \u56de\u5f52\u6a21\u578b\u4f30\u8ba1\u5f97\u5230\u4e86 \u5c5e\u4e8e\u6b63\u7c7b\u7684\u6982\u7387 \uff0c\u90a3\u5b83\u5f88\u5bb9\u6613\u5f97\u5230\u9884\u6d4b\u7ed3\u679c \uff08\u89c1\u516c\u5f0f 4-15\uff09\u3002 \u516c\u5f0f 4-15\uff1a\u903b\u8f91\u56de\u5f52\u9884\u6d4b\u6a21\u578b \u6ce8\u610f\u5f53 \u65f6 \uff0c\u5f53 \u65f6 \uff0c\u56e0\u6b64\u5f53 \u662f\u6b63\u6570\u7684\u8bdd\uff0c\u903b\u8f91\u56de\u5f52\u6a21\u578b\u8f93\u51fa 1\uff0c\u5982\u679c\u5b83\u662f\u8d1f\u6570\u7684\u8bdd\uff0c\u5219\u8f93\u51fa 0\u3002 \u8bad\u7ec3\u548c\u635f\u5931\u51fd\u6570 \u597d\uff0c\u73b0\u5728\u4f60\u77e5\u9053\u4e86 Logistic \u56de\u5f52\u6a21\u578b\u5982\u4f55\u4f30\u8ba1\u6982\u7387\u5e76\u8fdb\u884c\u9884\u6d4b\u3002 \u4f46\u662f\u5b83\u662f\u5982\u4f55\u8bad\u7ec3\u7684\uff1f \u8bad\u7ec3\u7684\u76ee\u7684\u662f\u8bbe\u7f6e\u53c2\u6570\u5411\u91cf \uff0c\u4f7f\u5f97\u6b63\u4f8b\uff08 \uff09\u6982\u7387\u589e\u5927\uff0c\u8d1f\u4f8b\uff08 \uff09\u7684\u6982\u7387\u51cf\u5c0f\uff0c\u5176\u901a\u8fc7\u5728\u5355\u4e2a\u8bad\u7ec3\u5b9e\u4f8b \u7684\u635f\u5931\u51fd\u6570\u6765\u5b9e\u73b0\uff08\u516c\u5f0f 4-16\uff09\u3002 \u516c\u5f0f 4-16\uff1a\u5355\u4e2a\u6837\u672c\u7684\u635f\u5931\u51fd\u6570 \u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u662f\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u5f53 \u63a5\u8fd1 0 \u65f6\uff0c \u53d8\u5f97\u975e\u5e38\u5927\uff0c\u6240\u4ee5\u5982\u679c\u6a21\u578b\u4f30\u8ba1\u4e00\u4e2a\u6b63\u4f8b\u6982\u7387\u63a5\u8fd1\u4e8e 0\uff0c\u90a3\u4e48\u635f\u5931\u51fd\u6570\u5c06\u4f1a\u5f88\u5927\uff0c\u540c\u65f6\u5982\u679c\u6a21\u578b\u4f30\u8ba1\u4e00\u4e2a\u8d1f\u4f8b\u7684\u6982\u7387\u63a5\u8fd1 1\uff0c\u90a3\u4e48\u635f\u5931\u51fd\u6570\u540c\u6837\u4f1a\u5f88\u5927\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5f53 \u63a5\u8fd1\u4e8e 1 \u65f6\uff0c \u63a5\u8fd1 0\uff0c\u6240\u4ee5\u5982\u679c\u6a21\u578b\u4f30\u8ba1\u4e00\u4e2a\u6b63\u4f8b\u6982\u7387\u63a5\u8fd1\u4e8e 0\uff0c\u90a3\u4e48\u635f\u5931\u51fd\u6570\u63a5\u8fd1\u4e8e 0\uff0c\u540c\u65f6\u5982\u679c\u6a21\u578b\u4f30\u8ba1\u4e00\u4e2a\u8d1f\u4f8b\u7684\u6982\u7387\u63a5\u8fd1 0\uff0c\u90a3\u4e48\u635f\u5931\u51fd\u6570\u540c\u6837\u4f1a\u63a5\u8fd1\u4e8e 0\uff0c \u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u7684\u3002 \u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u635f\u5931\u51fd\u6570\u53ea\u662f\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u7684\u5e73\u5747\u503c\u3002\u53ef\u4ee5\u7528\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u8bc1\u660e\uff09\u6765\u7edf\u4e00\u8868\u793a\uff0c\u79f0\u4e3a\u5bf9\u6570\u635f\u5931\uff0c\u5982\u516c\u5f0f 4-17 \u6240\u793a\u3002 \u516c\u5f0f 4-17\uff1a\u903b\u8f91\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\uff08\u5bf9\u6570\u635f\u5931\uff09 \u4f46\u662f\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u6c42\u89e3\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u7684 \u662f\u6ca1\u6709\u516c\u5f0f\u89e3\u7684\uff08\u6ca1\u6709\u7b49\u4ef7\u7684\u6b63\u6001\u65b9\u7a0b\uff09\u3002 \u4f46\u597d\u6d88\u606f\u662f\uff0c\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u662f\u51f8\u7684\uff0c\u6240\u4ee5\u68af\u5ea6\u4e0b\u964d\uff08\u6216\u4efb\u4f55\u5176\u4ed6\u4f18\u5316\u7b97\u6cd5\uff09\u4e00\u5b9a\u80fd\u591f\u627e\u5230\u5168\u5c40\u6700\u5c0f\u503c\uff08\u5982\u679c\u5b66\u4e60\u901f\u7387\u4e0d\u662f\u592a\u5927\uff0c\u5e76\u4e14\u4f60\u7b49\u5f85\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff09\u3002\u516c\u5f0f 4-18 \u7ed9\u51fa\u4e86\u635f\u5931\u51fd\u6570\u5173\u4e8e\u7b2c \u4e2a\u6a21\u578b\u53c2\u6570 \u7684\u504f\u5bfc\u6570\u3002 \u516c\u5f0f 4-18\uff1a\u903b\u8f91\u56de\u5f52\u635f\u5931\u51fd\u6570\u7684\u504f\u5bfc\u6570 \u8fd9\u4e2a\u516c\u5f0f\u770b\u8d77\u6765\u975e\u5e38\u50cf\u516c\u5f0f 4-5\uff1a\u9996\u5148\u8ba1\u7b97\u6bcf\u4e2a\u6837\u672c\u7684\u9884\u6d4b\u8bef\u5dee\uff0c\u7136\u540e\u8bef\u5dee\u9879\u4e58\u4ee5\u7b2c \u9879\u7279\u5f81\u503c\uff0c\u6700\u540e\u6c42\u51fa\u6240\u6709\u8bad\u7ec3\u6837\u672c\u7684\u5e73\u5747\u503c\u3002 \u4e00\u65e6\u4f60\u6709\u4e86\u5305\u542b\u6240\u6709\u7684\u504f\u5bfc\u6570\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u4f60\u4fbf\u53ef\u4ee5\u5728\u68af\u5ea6\u5411\u91cf\u4e0a\u4f7f\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u3002 \u4e5f\u5c31\u662f\u8bf4\uff1a\u4f60\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u8bad\u7ec3 Logistic \u56de\u5f52\u6a21\u578b\u3002 \u5bf9\u4e8e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u4f60\u5f53\u7136\u53ea\u9700\u8981\u6bcf\u4e00\u6b21\u4f7f\u7528\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5bf9\u4e8e\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff0c\u4f60\u5c06\u6bcf\u4e00\u6b21\u4f7f\u7528\u4e00\u4e2a\u5c0f\u578b\u5b9e\u4f8b\u96c6\u3002 \u51b3\u7b56\u8fb9\u754c \u6211\u4eec\u4f7f\u7528\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u6765\u5206\u6790 Logistic \u56de\u5f52\u3002 \u8fd9\u662f\u4e00\u4e2a\u8457\u540d\u7684\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u5305\u542b 150 \u6735\u4e09\u79cd\u4e0d\u540c\u7684\u9e22\u5c3e\u82b1\u7684\u843c\u7247\u548c\u82b1\u74e3\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u3002\u8fd9\u4e09\u79cd\u9e22\u5c3e\u82b1\u4e3a\uff1aSetosa\uff0cVersicolor\uff0cVirginica\uff08\u5982\u56fe 4-22\uff09\u3002 \u56fe4-22\uff1a\u4e09\u79cd\u4e0d\u540c\u7684\u9e22\u5c3e\u82b1 \u8ba9\u6211\u4eec\u5c1d\u8bd5\u5efa\u7acb\u4e00\u4e2a\u5206\u7c7b\u5668\uff0c\u4ec5\u4ec5\u4f7f\u7528\u82b1\u74e3\u7684\u5bbd\u5ea6\u7279\u5f81\u6765\u8bc6\u522b Virginica\uff0c\u9996\u5148\u8ba9\u6211\u4eec\u52a0\u8f7d\u6570\u636e\uff1a >>> from sklearn import datasets >>> iris = datasets.load_iris() >>> list(iris.keys()) ['data', 'target_names', 'feature_names', 'target', 'DESCR'] >>> X = iris[\"data\"][:, 3:] # petal width >>> y = (iris[\"target\"] == 2).astype(np.int) \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a\u903b\u8f91\u56de\u5f52\u6a21\u578b\uff1a from sklearn.linear_model import LogisticRegression log_reg = LogisticRegression() log_reg.fit(X, y) \u6211\u4eec\u6765\u770b\u770b\u6a21\u578b\u4f30\u8ba1\u7684\u82b1\u74e3\u5bbd\u5ea6\u4ece 0 \u5230 3 \u5398\u7c73\u7684\u6982\u7387\u4f30\u8ba1\uff08\u5982\u56fe 4-23\uff09\uff1a X_new = np.linspace(0, 3, 1000).reshape(-1, 1) y_proba = log_reg.predict_proba(X_new) plt.plot(X_new, y_proba[:, 1], \"g-\", label=\"Iris-Virginica\") plt.plot(X_new, y_proba[:, 0], \"b--\", label=\"Not Iris-Virginica\") \u56fe 4-23\uff1a\u6982\u7387\u4f30\u8ba1\u548c\u51b3\u7b56\u8fb9\u754c Virginica \u82b1\u7684\u82b1\u74e3\u5bbd\u5ea6\uff08\u7528\u4e09\u89d2\u5f62\u8868\u793a\uff09\u5728 1.4 \u5398\u7c73\u5230 2.5 \u5398\u7c73\u4e4b\u95f4\uff0c\u800c\u5176\u4ed6\u79cd\u7c7b\u7684\u82b1\uff08\u7531\u6b63\u65b9\u5f62\u8868\u793a\uff09\u901a\u5e38\u5177\u6709\u8f83\u5c0f\u7684\u82b1\u74e3\u5bbd\u5ea6\uff0c\u8303\u56f4\u4ece 0.1 \u5398\u7c73\u5230 1.8 \u5398\u7c73\u3002\u6ce8\u610f\uff0c\u5b83\u4eec\u4e4b\u95f4\u4f1a\u6709\u4e00\u4e9b\u91cd\u53e0\u3002\u5728\u5927\u7ea6 2 \u5398\u7c73\u4ee5\u4e0a\u65f6\uff0c\u5206\u7c7b\u5668\u975e\u5e38\u80af\u5b9a\u8fd9\u6735\u82b1\u662fVirginica\u82b1\uff08\u5206\u7c7b\u5668\u6b64\u65f6\u8f93\u51fa\u4e00\u4e2a\u975e\u5e38\u9ad8\u7684\u6982\u7387\u503c\uff09\uff0c\u800c\u57281\u5398\u7c73\u4ee5\u4e0b\u65f6\uff0c\u5b83\u975e\u5e38\u80af\u5b9a\u8fd9\u6735\u82b1\u4e0d\u662f Virginica \u82b1\uff08\u4e0d\u662f Virginica \u82b1\u6709\u975e\u5e38\u9ad8\u7684\u6982\u7387\uff09\u3002\u5728\u8fd9\u4e24\u4e2a\u6781\u7aef\u4e4b\u95f4\uff0c\u5206\u7c7b\u5668\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u5b83\u8fdb\u884c\u9884\u6d4b\uff08\u4f7f\u7528 predict() \u65b9\u6cd5\u800c\u4e0d\u662f predict_proba() \u65b9\u6cd5\uff09\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u6700\u53ef\u80fd\u7684\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u5728 1.6 \u5398\u7c73\u5de6\u53f3\u5b58\u5728\u4e00\u4e2a\u51b3\u7b56\u8fb9\u754c\uff0c\u8fd9\u65f6\u4e24\u7c7b\u60c5\u51b5\u51fa\u73b0\u7684\u6982\u7387\u90fd\u7b49\u4e8e 50%\uff1a\u5982\u679c\u82b1\u74e3\u5bbd\u5ea6\u5927\u4e8e 1.6 \u5398\u7c73\uff0c\u5219\u5206\u7c7b\u5668\u5c06\u9884\u6d4b\u8be5\u82b1\u662f Virginica\uff0c\u5426\u5219\u9884\u6d4b\u5b83\u4e0d\u662f\uff08\u5373\u4f7f\u5b83\u6709\u53ef\u80fd\u9519\u4e86\uff09\uff1a >>> log_reg.predict([[1.7], [1.5]]) array([1, 0]) \u56fe 4-24 \u8868\u793a\u76f8\u540c\u7684\u6570\u636e\u96c6\uff0c\u4f46\u662f\u8fd9\u6b21\u4f7f\u7528\u4e86\u4e24\u4e2a\u7279\u5f81\u8fdb\u884c\u5224\u65ad\uff1a\u82b1\u74e3\u7684\u5bbd\u5ea6\u548c\u957f\u5ea6\u3002 \u4e00\u65e6\u8bad\u7ec3\u5b8c\u6bd5\uff0cLogistic \u56de\u5f52\u5206\u7c7b\u5668\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e24\u4e2a\u7279\u5f81\u6765\u4f30\u8ba1\u4e00\u6735\u82b1\u662f Virginica \u7684\u53ef\u80fd\u6027\u3002 \u865a\u7ebf\u8868\u793a\u8fd9\u65f6\u4e24\u7c7b\u60c5\u51b5\u51fa\u73b0\u7684\u6982\u7387\u90fd\u7b49\u4e8e 50%\uff1a\u8fd9\u662f\u6a21\u578b\u7684\u51b3\u7b56\u8fb9\u754c\u3002 \u8bf7\u6ce8\u610f\uff0c\u5b83\u662f\u4e00\u4e2a\u7ebf\u6027\u8fb9\u754c\u3002\u6bcf\u6761\u5e73\u884c\u7ebf\u90fd\u4ee3\u8868\u4e00\u4e2a\u5206\u7c7b\u6807\u51c6\u4e0b\u7684\u4e24\u4e24\u4e2a\u4e0d\u540c\u7c7b\u7684\u6982\u7387\uff0c\u4ece 15%\uff08\u5de6\u4e0b\u89d2\uff09\u5230 90%\uff08\u53f3\u4e0a\u89d2\uff09\u3002\u8d8a\u8fc7\u53f3\u4e0a\u89d2\u5206\u754c\u7ebf\u7684\u70b9\u90fd\u6709\u8d85\u8fc7 90% \u7684\u6982\u7387\u662f Virginica \u82b1\u3002 \u56fe 4-24\uff1a\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c \u5c31\u50cf\u5176\u4ed6\u7ebf\u6027\u6a21\u578b\uff0c\u903b\u8f91\u56de\u5f52\u6a21\u578b\u4e5f\u53ef\u4ee5 \u6216\u8005 \u60e9\u7f5a\u4f7f\u7528\u8fdb\u884c\u6b63\u5219\u5316\u3002Scikit-Learn \u9ed8\u8ba4\u6dfb\u52a0\u4e86 \u60e9\u7f5a\u3002 \u6ce8\u610f \u5728 Scikit-Learn \u7684 LogisticRegression \u6a21\u578b\u4e2d\u63a7\u5236\u6b63\u5219\u5316\u5f3a\u5ea6\u7684\u8d85\u53c2\u6570\u4e0d\u662f \uff08\u4e0e\u5176\u4ed6\u7ebf\u6027\u6a21\u578b\u4e00\u6837\uff09\uff0c\u800c\u662f\u5b83\u7684\u9006\uff1a \u3002 \u7684\u503c\u8d8a\u5927\uff0c\u6a21\u578b\u6b63\u5219\u5316\u5f3a\u5ea6\u8d8a\u4f4e\u3002 Softmax \u56de\u5f52 Logistic \u56de\u5f52\u6a21\u578b\u53ef\u4ee5\u76f4\u63a5\u63a8\u5e7f\u5230\u652f\u6301\u591a\u7c7b\u522b\u5206\u7c7b\uff0c\u4e0d\u5fc5\u7ec4\u5408\u548c\u8bad\u7ec3\u591a\u4e2a\u4e8c\u5206\u7c7b\u5668\uff08\u5982\u7b2c 3 \u7ae0\u6240\u8ff0\uff09\uff0c \u5176\u79f0\u4e3a Softmax \u56de\u5f52\u6216\u591a\u7c7b\u522b Logistic \u56de\u5f52\u3002 \u8fd9\u4e2a\u60f3\u6cd5\u5f88\u7b80\u5355\uff1a\u5f53\u7ed9\u5b9a\u4e00\u4e2a\u5b9e\u4f8b \u65f6\uff0cSoftmax \u56de\u5f52\u6a21\u578b\u9996\u5148\u8ba1\u7b97 \u7c7b\u7684\u5206\u6570 \uff0c\u7136\u540e\u5c06\u5206\u6570\u5e94\u7528\u5728 Softmax \u51fd\u6570\uff08\u4e5f\u79f0\u4e3a\u5f52\u4e00\u5316\u6307\u6570\uff09\u4e0a\uff0c\u4f30\u8ba1\u51fa\u6bcf\u7c7b\u7684\u6982\u7387\u3002 \u8ba1\u7b97 \u7684\u516c\u5f0f\u770b\u8d77\u6765\u5f88\u719f\u6089\uff0c\u56e0\u4e3a\u5b83\u5c31\u50cf\u7ebf\u6027\u56de\u5f52\u9884\u6d4b\u7684\u516c\u5f0f\u4e00\u6837\uff08\u89c1\u516c\u5f0f 4-19\uff09\u3002 \u516c\u5f0f 4-19\uff1a k \u7c7b\u7684 Softmax \u5f97\u5206 \u6ce8\u610f\uff0c\u6bcf\u4e2a\u7c7b\u90fd\u6709\u81ea\u5df1\u72ec\u4e00\u65e0\u4e8c\u7684\u53c2\u6570\u5411\u91cf \u3002 \u6240\u6709\u8fd9\u4e9b\u5411\u91cf\u901a\u5e38\u4f5c\u4e3a\u884c\u653e\u5728\u53c2\u6570\u77e9\u9635 \u4e2d\u3002 \u4e00\u65e6\u4f60\u8ba1\u7b97\u4e86\u6837\u672c \u7684\u6bcf\u4e00\u7c7b\u7684\u5f97\u5206\uff0c\u4f60\u4fbf\u53ef\u4ee5\u901a\u8fc7 Softmax \u51fd\u6570\uff08\u516c\u5f0f 4-20\uff09\u4f30\u8ba1\u51fa\u6837\u672c\u5c5e\u4e8e\u7b2c \u7c7b\u7684\u6982\u7387 \uff1a\u901a\u8fc7\u8ba1\u7b97 \u7684 \u6b21\u65b9\uff0c\u7136\u540e\u5bf9\u5b83\u4eec\u8fdb\u884c\u5f52\u4e00\u5316\uff08\u9664\u4ee5\u6240\u6709\u5206\u5b50\u7684\u603b\u548c\uff09\u3002 \u516c\u5f0f 4-20\uff1aSoftmax \u51fd\u6570 \u8868\u793a\u6709\u591a\u5c11\u7c7b \u8868\u793a\u5305\u542b\u6837\u672c \u6bcf\u4e00\u7c7b\u5f97\u5206\u7684\u5411\u91cf \u8868\u793a\u7ed9\u5b9a\u6bcf\u4e00\u7c7b\u5206\u6570\u4e4b\u540e\uff0c\u5b9e\u4f8b \u5c5e\u4e8e\u7b2c \u7c7b\u7684\u6982\u7387 \u548c Logistic \u56de\u5f52\u5206\u7c7b\u5668\u4e00\u6837\uff0cSoftmax \u56de\u5f52\u5206\u7c7b\u5668\u5c06\u4f30\u8ba1\u6982\u7387\u6700\u9ad8\uff08\u5b83\u53ea\u662f\u5f97\u5206\u6700\u9ad8\u7684\u7c7b\uff09\u7684\u90a3\u7c7b\u4f5c\u4e3a\u9884\u6d4b\u7ed3\u679c\uff0c\u5982\u516c\u5f0f 4-21 \u6240\u793a\u3002 \u516c\u5f0f 4-21\uff1aSoftmax \u56de\u5f52\u6a21\u578b\u5206\u7c7b\u5668\u9884\u6d4b\u7ed3\u679c argmax \u8fd0\u7b97\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u53d6\u5230\u6700\u5927\u503c\u7684\u53d8\u91cf\u503c\u3002 \u5728\u8fd9\u4e2a\u7b49\u5f0f\uff0c\u5b83\u8fd4\u56de\u4f7f \u6700\u5927\u65f6\u7684 \u7684\u503c \u6ce8\u610f Softmax \u56de\u5f52\u5206\u7c7b\u5668\u4e00\u6b21\u53ea\u80fd\u9884\u6d4b\u4e00\u4e2a\u7c7b\uff08\u5373\u5b83\u662f\u591a\u7c7b\u7684\uff0c\u4f46\u4e0d\u662f\u591a\u8f93\u51fa\u7684\uff09\uff0c\u56e0\u6b64\u5b83\u53ea\u80fd\u7528\u4e8e\u5224\u65ad\u4e92\u65a5\u7684\u7c7b\u522b\uff0c\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u690d\u7269\u3002 \u4f60\u4e0d\u80fd\u7528\u5b83\u6765\u8bc6\u522b\u4e00\u5f20\u7167\u7247\u4e2d\u7684\u591a\u4e2a\u4eba\u3002 \u73b0\u5728\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u6a21\u578b\u5982\u4f55\u4f30\u8ba1\u6982\u7387\u5e76\u8fdb\u884c\u9884\u6d4b\uff0c\u63a5\u4e0b\u6765\u5c06\u4ecb\u7ecd\u5982\u4f55\u8bad\u7ec3\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u5efa\u7acb\u4e00\u4e2a\u6a21\u578b\u5728\u76ee\u6807\u7c7b\u522b\u4e0a\u6709\u7740\u8f83\u9ad8\u7684\u6982\u7387\uff08\u56e0\u6b64\u5176\u4ed6\u7c7b\u522b\u7684\u6982\u7387\u8f83\u4f4e\uff09\uff0c\u6700\u5c0f\u5316\u516c\u5f0f 4-22 \u53ef\u4ee5\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\uff0c\u5176\u8868\u793a\u4e86\u5f53\u524d\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\uff0c\u79f0\u4e3a\u4ea4\u53c9\u71b5\uff0c\u5f53\u6a21\u578b\u5bf9\u76ee\u6807\u7c7b\u5f97\u51fa\u4e86\u4e00\u4e2a\u8f83\u4f4e\u7684\u6982\u7387\uff0c\u5176\u4f1a\u60e9\u7f5a\u8fd9\u4e2a\u6a21\u578b\u3002 \u4ea4\u53c9\u71b5\u901a\u5e38\u7528\u4e8e\u8861\u91cf\u5f85\u6d4b\u7c7b\u522b\u4e0e\u76ee\u6807\u7c7b\u522b\u7684\u5339\u914d\u7a0b\u5ea6\uff08\u6211\u4eec\u5c06\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u591a\u6b21\u4f7f\u7528\u5b83\uff09 \u516c\u5f0f 4-22\uff1a\u4ea4\u53c9\u71b5 \u5982\u679c\u5bf9\u4e8e\u7b2c \u4e2a\u5b9e\u4f8b\u7684\u76ee\u6807\u7c7b\u662f \uff0c\u90a3\u4e48 \uff0c\u53cd\u4e4b \u3002 \u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u53ea\u6709\u4e24\u4e2a\u7c7b\uff08 \uff09\u65f6\uff0c\u6b64\u635f\u5931\u51fd\u6570\u7b49\u540c\u4e8e Logistic \u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\uff08\u5bf9\u6570\u635f\u5931\uff1b\u8bf7\u53c2\u9605\u516c\u5f0f 4-17\uff09\u3002 \u4ea4\u53c9\u71b5 \u4ea4\u53c9\u71b5\u6e90\u4e8e\u4fe1\u606f\u8bba\u3002\u5047\u8bbe\u4f60\u60f3\u8981\u9ad8\u6548\u5730\u4f20\u8f93\u6bcf\u5929\u7684\u5929\u6c14\u4fe1\u606f\u3002\u5982\u679c\u6709\u516b\u4e2a\u9009\u9879\uff08\u6674\u5929\uff0c\u96e8\u5929\u7b49\uff09\uff0c\u5219\u53ef\u4ee5\u4f7f\u75283\u4f4d\u5bf9\u6bcf\u4e2a\u9009\u9879\u8fdb\u884c\u7f16\u7801\uff0c\u56e0\u4e3a \u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u51e0\u4e4e\u6bcf\u5929\u90fd\u662f\u6674\u5929\uff0c\u66f4\u9ad8\u6548\u7684\u7f16\u7801\u201c\u6674\u5929\u201d\u7684\u65b9\u5f0f\u662f\uff1a\u53ea\u7528\u4e00\u4f4d\uff080\uff09\u3002\u5269\u4e0b\u7684\u4e03\u9879\u4f7f\u7528\u56db\u4f4d\uff08\u4ece 1 \u5f00\u59cb\uff09\u3002\u4ea4\u53c9\u71b5\u5ea6\u91cf\u6bcf\u4e2a\u9009\u9879\u5b9e\u9645\u53d1\u9001\u7684\u5e73\u5747\u6bd4\u7279\u6570\u3002 \u5982\u679c\u4f60\u5bf9\u5929\u6c14\u7684\u5047\u8bbe\u662f\u5b8c\u7f8e\u7684\uff0c\u4ea4\u53c9\u71b5\u5c31\u7b49\u4e8e\u5929\u6c14\u672c\u8eab\u7684\u71b5\uff08\u5373\u5176\u5185\u90e8\u7684\u4e0d\u786e\u5b9a\u6027\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4f60\u7684\u5047\u8bbe\u662f\u9519\u8bef\u7684\uff08\u4f8b\u5982\uff0c\u5982\u679c\u7ecf\u5e38\u4e0b\u96e8\uff09\u4ea4\u53c9\u71b5\u5c06\u4f1a\u66f4\u5927\uff0c\u79f0\u4e3a Kullback-Leibler \u6563\u5ea6\uff08KL \u6563\u5ea6\uff09\u3002 \u4e24\u4e2a\u6982\u7387\u5206\u5e03 \u548c \u4e4b\u95f4\u7684\u4ea4\u53c9\u71b5\u5b9a\u4e49\u4e3a\uff1a \uff08\u5206\u5e03\u81f3\u5c11\u662f\u79bb\u6563\u7684\uff09 \u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u5173\u4e8e \u7684\u68af\u5ea6\u5411\u91cf\u4e3a\u516c\u5f0f 4-23\uff1a \u516c\u5f0f 4-23\uff1a k \u7c7b\u4ea4\u53c9\u71b5\u7684\u68af\u5ea6\u5411\u91cf \u73b0\u5728\u4f60\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e00\u7c7b\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u7136\u540e\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\uff08\u6216\u8005\u5176\u4ed6\u7684\u4f18\u5316\u7b97\u6cd5\uff09\u627e\u5230\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u8fbe\u5230\u6700\u5c0f\u503c\u7684\u53c2\u6570\u77e9\u9635 \u3002 \u8ba9\u6211\u4eec\u4f7f\u7528 Softmax \u56de\u5f52\u5bf9\u4e09\u79cd\u9e22\u5c3e\u82b1\u8fdb\u884c\u5206\u7c7b\u3002\u5f53\u4f60\u4f7f\u7528 LogisticRregression \u5bf9\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\u65f6\uff0cScikit Learn \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f\u4e00\u5bf9\u591a\u6a21\u578b\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u8bbe\u7f6e multi_class \u53c2\u6570\u4e3a\u201cmultinomial\u201d\u6765\u628a\u5b83\u6539\u53d8\u4e3a Softmax \u56de\u5f52\u3002\u4f60\u8fd8\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a\u652f\u6301 Softmax \u56de\u5f52\u7684\u6c42\u89e3\u5668\uff0c\u4f8b\u5982\u201clbfgs\u201d\u6c42\u89e3\u5668\uff08\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Scikit-Learn \u7684\u6587\u6863\uff09\u3002\u5176\u9ed8\u8ba4\u4f7f\u7528 \u6b63\u5219\u5316\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8d85\u53c2\u6570 \u63a7\u5236\u5b83\u3002 X = iris[\"data\"][:, (2, 3)] # petal length, petal width y = iris[\"target\"] softmax_reg = LogisticRegression(multi_class=\"multinomial\",solver=\"lbfgs\", C=10) softmax_reg.fit(X, y) \u6240\u4ee5\u4e0b\u6b21\u4f60\u53d1\u73b0\u4e00\u4e2a\u82b1\u74e3\u957f\u4e3a 5 \u5398\u7c73\uff0c\u5bbd\u4e3a 2 \u5398\u7c73\u7684\u9e22\u5c3e\u82b1\u65f6\uff0c\u4f60\u53ef\u4ee5\u95ee\u4f60\u7684\u6a21\u578b\u4f60\u5b83\u662f\u54ea\u4e00\u7c7b\u9e22\u5c3e\u82b1\uff0c\u5b83\u4f1a\u56de\u7b54 94.2% \u662f Virginica \u82b1\uff08\u7b2c\u4e8c\u7c7b\uff09\uff0c\u6216\u8005 5.8% \u662f\u5176\u4ed6\u9e22\u5c3e\u82b1\u3002 >>> softmax_reg.predict([[5, 2]]) array([2]) >>> softmax_reg.predict_proba([[5, 2]]) array([[ 6.33134078e-07, 5.75276067e-02, 9.42471760e-01]])\u662f \u56fe 4-25\uff1aSoftmax \u56de\u5f52\u7684\u51b3\u7b56\u8fb9\u754c \u56fe 4-25 \u7528\u4e0d\u540c\u80cc\u666f\u8272\u8868\u793a\u4e86\u7ed3\u679c\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u6ce8\u610f\uff0c\u4efb\u4f55\u4e24\u4e2a\u7c7b\u4e4b\u95f4\u7684\u51b3\u7b56\u8fb9\u754c\u662f\u7ebf\u6027\u7684\u3002 \u8be5\u56fe\u7684\u66f2\u7ebf\u8868\u793a Versicolor \u7c7b\u7684\u6982\u7387\uff08\u4f8b\u5982\uff0c\u7528 0.450 \u6807\u8bb0\u7684\u66f2\u7ebf\u8868\u793a 45% \u7684\u6982\u7387\u8fb9\u754c\uff09\u3002\u6ce8\u610f\u6a21\u578b\u4e5f\u53ef\u4ee5\u9884\u6d4b\u4e00\u4e2a\u6982\u7387\u4f4e\u4e8e 50% \u7684\u7c7b\u3002 \u4f8b\u5982\uff0c\u5728\u6240\u6709\u51b3\u7b56\u8fb9\u754c\u76f8\u9047\u7684\u5730\u65b9\uff0c\u6240\u6709\u7c7b\u7684\u4f30\u8ba1\u6982\u7387\u76f8\u7b49\uff0c\u5206\u522b\u4e3a 33%\u3002 \u7ec3\u4e60 \u5982\u679c\u4f60\u6709\u4e00\u4e2a\u6570\u767e\u4e07\u7279\u5f81\u7684\u8bad\u7ec3\u96c6\uff0c\u4f60\u5e94\u8be5\u9009\u62e9\u54ea\u79cd\u7ebf\u6027\u56de\u5f52\u8bad\u7ec3\u7b97\u6cd5\uff1f \u5047\u8bbe\u4f60\u8bad\u7ec3\u96c6\u4e2d\u7279\u5f81\u7684\u6570\u503c\u5c3a\u5ea6\uff08scale\uff09\u6709\u7740\u975e\u5e38\u5927\u7684\u5dee\u5f02\uff0c\u54ea\u79cd\u7b97\u6cd5\u4f1a\u53d7\u5230\u5f71\u54cd\uff1f\u6709\u591a\u5927\u7684\u5f71\u54cd\uff1f\u5bf9\u4e8e\u8fd9\u4e9b\u5f71\u54cd\u4f60\u53ef\u4ee5\u505a\u4ec0\u4e48\uff1f \u8bad\u7ec3 Logistic \u56de\u5f52\u6a21\u578b\u65f6\uff0c\u68af\u5ea6\u4e0b\u964d\u662f\u5426\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u4f4e\u70b9\uff1f \u5728\u6709\u8db3\u591f\u7684\u8bad\u7ec3\u65f6\u95f4\u4e0b\uff0c\u662f\u5426\u6240\u6709\u7684\u68af\u5ea6\u4e0b\u964d\u90fd\u4f1a\u5f97\u5230\u76f8\u540c\u7684\u6a21\u578b\u53c2\u6570\uff1f \u5047\u8bbe\u4f60\u4f7f\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u6cd5\uff0c\u753b\u51fa\u6bcf\u4e00\u4ee3\u7684\u9a8c\u8bc1\u8bef\u5dee\u3002\u5f53\u4f60\u53d1\u73b0\u9a8c\u8bc1\u8bef\u5dee\u4e00\u76f4\u589e\u5927\uff0c\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f60\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f \u5f53\u9a8c\u8bc1\u8bef\u5dee\u5347\u9ad8\u65f6\uff0c\u7acb\u5373\u505c\u6b62\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u662f\u5426\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1f \u54ea\u4e2a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff08\u5728\u6211\u4eec\u8ba8\u8bba\u7684\u90a3\u4e9b\u7b97\u6cd5\u4e2d\uff09\u53ef\u4ee5\u6700\u5feb\u5230\u8fbe\u89e3\u7684\u9644\u8fd1\uff1f\u54ea\u4e2a\u7684\u786e\u5b9e\u4f1a\u6536\u655b\uff1f\u600e\u4e48\u4f7f\u5176\u4ed6\u7b97\u6cd5\u4e5f\u6536\u655b\uff1f \u5047\u8bbe\u4f60\u4f7f\u7528\u591a\u9879\u5f0f\u56de\u5f52\uff0c\u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u5728\u56fe\u4e0a\u53d1\u73b0\u5b66\u4e60\u8bef\u5dee\u548c\u9a8c\u8bc1\u8bef\u5dee\u4e4b\u95f4\u6709\u7740\u5f88\u5927\u7684\u95f4\u9699\u3002\u8fd9\u8868\u793a\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u6709\u54ea\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f \u5047\u8bbe\u4f60\u4f7f\u7528\u5cad\u56de\u5f52\uff0c\u5e76\u53d1\u73b0\u8bad\u7ec3\u8bef\u5dee\u548c\u9a8c\u8bc1\u8bef\u5dee\u90fd\u5f88\u9ad8\uff0c\u5e76\u4e14\u51e0\u4e4e\u76f8\u7b49\u3002\u4f60\u7684\u6a21\u578b\u8868\u73b0\u662f\u9ad8\u504f\u5dee\u8fd8\u662f\u9ad8\u65b9\u5dee\uff1f\u8fd9\u65f6\u4f60\u5e94\u8be5\u589e\u5927\u6b63\u5219\u5316\u53c2\u6570 \uff0c\u8fd8\u662f\u964d\u4f4e\u5b83\uff1f \u4f60\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\uff1a \u4f7f\u7528\u5cad\u56de\u5f52\u4ee3\u66ff\u7ebf\u6027\u56de\u5f52\uff1f Lasso \u56de\u5f52\u4ee3\u66ff\u5cad\u56de\u5f52\uff1f \u5f39\u6027\u7f51\u7edc\u4ee3\u66ff Lasso \u56de\u5f52\uff1f \u5047\u8bbe\u4f60\u60f3\u5224\u65ad\u4e00\u526f\u56fe\u7247\u662f\u5ba4\u5185\u8fd8\u662f\u5ba4\u5916\uff0c\u767d\u5929\u8fd8\u662f\u665a\u4e0a\u3002\u4f60\u5e94\u8be5\u9009\u62e9\u4e8c\u4e2a\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\uff0c\u8fd8\u662f\u4e00\u4e2a Softmax \u5206\u7c7b\u5668\uff1f \u5728 Softmax \u56de\u5f52\u4e0a\u5e94\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u65e9\u671f\u505c\u6b62\u6cd5\uff08\u4e0d\u4f7f\u7528 Scikit-Learn\uff09\u3002 \u9644\u5f55 A \u63d0\u4f9b\u4e86\u8fd9\u4e9b\u7ec3\u4e60\u7684\u7b54\u6848\u3002","title":"4.\u8bad\u7ec3\u6a21\u578b"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_1","text":"\u5728\u4e4b\u524d\u7684\u63cf\u8ff0\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u628a\u673a\u5668\u5b66\u4e60\u6a21\u578b\u548c\u8bad\u7ec3\u7b97\u6cd5\u5f53\u4f5c\u9ed1\u7bb1\u5b50\u6765\u5904\u7406\u3002\u5982\u679c\u4f60\u5b9e\u8df5\u8fc7\u524d\u51e0\u7ae0\u7684\u4e00\u4e9b\u793a\u4f8b\uff0c\u4f60\u60ca\u5947\u7684\u53d1\u73b0\u4f60\u53ef\u4ee5\u4f18\u5316\u56de\u5f52\u7cfb\u7edf\uff0c\u6539\u8fdb\u6570\u5b57\u56fe\u50cf\u7684\u5206\u7c7b\u5668\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u96f6\u57fa\u7840\u642d\u5efa\u4e00\u4e2a\u5783\u573e\u90ae\u4ef6\u7684\u5206\u7c7b\u5668\uff0c\u4f46\u662f\u4f60\u5374\u5bf9\u5b83\u4eec\u5185\u90e8\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e00\u65e0\u6240\u77e5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8bb8\u591a\u573a\u5408\u4f60\u90fd\u4e0d\u9700\u8981\u77e5\u9053\u8fd9\u4e9b\u9ed1\u7bb1\u5b50\u7684\u5185\u90e8\u6709\u4ec0\u4e48\uff0c\u5e72\u4e86\u4ec0\u4e48\u3002 \u7136\u800c\uff0c\u5982\u679c\u4f60\u5bf9\u5176\u5185\u90e8\u7684\u5de5\u4f5c\u6d41\u7a0b\u6709\u4e00\u5b9a\u4e86\u89e3\u7684\u8bdd\uff0c\u5f53\u9762\u5bf9\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u65f6\u5019\uff0c\u8fd9\u4e9b\u7406\u8bba\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u7684\u627e\u5230\u6070\u5f53\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u5408\u9002\u7684\u8bad\u7ec3\u7b97\u6cd5\uff0c\u4ee5\u53ca\u4e00\u4e2a\u597d\u7684\u5047\u8bbe\u96c6\u3002\u540c\u65f6\uff0c\u4e86\u89e3\u9ed1\u7bb1\u5b50\u5185\u90e8\u7684\u6784\u6210\uff0c\u6709\u52a9\u4e8e\u4f60\u66f4\u597d\u5730\u8c03\u8bd5\u53c2\u6570\u4ee5\u53ca\u66f4\u6709\u6548\u7684\u8bef\u5dee\u5206\u6790\u3002\u672c\u7ae0\u8ba8\u8bba\u7684\u5927\u90e8\u5206\u8bdd\u9898\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u7406\u89e3\uff0c\u6784\u5efa\uff0c\u4ee5\u53ca\u795e\u7ecf\u7f51\u7edc\uff08\u8be6\u7ec6\u53c2\u8003\u672c\u4e66\u7684\u7b2c\u4e8c\u90e8\u5206\uff09\u7684\u8bad\u7ec3\u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002 \u9996\u5148\u6211\u4eec\u5c06\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e3a\u4f8b\uff0c\u8ba8\u8bba\u4e24\u79cd\u4e0d\u540c\u7684\u8bad\u7ec3\u65b9\u6cd5\u6765\u5f97\u5230\u6a21\u578b\u7684\u6700\u4f18\u89e3\uff1a \u76f4\u63a5\u4f7f\u7528\u5c01\u95ed\u65b9\u7a0b\u8fdb\u884c\u6c42\u6839\u8fd0\u7b97\uff0c\u5f97\u5230\u6a21\u578b\u5728\u5f53\u524d\u8bad\u7ec3\u96c6\u4e0a\u7684\u6700\u4f18\u53c2\u6570\uff08\u5373\u5728\u8bad\u7ec3\u96c6\u4e0a\u4f7f\u635f\u5931\u51fd\u6570\u8fbe\u5230\u6700\u5c0f\u503c\u7684\u6a21\u578b\u53c2\u6570\uff09 \u4f7f\u7528\u8fed\u4ee3\u4f18\u5316\u65b9\u6cd5\uff1a\u68af\u5ea6\u4e0b\u964d\uff08GD\uff09\uff0c\u5728\u8bad\u7ec3\u96c6\u4e0a\uff0c\u5b83\u53ef\u4ee5\u9010\u6e10\u8c03\u6574\u6a21\u578b\u53c2\u6570\u4ee5\u83b7\u5f97\u6700\u5c0f\u7684\u635f\u5931\u51fd\u6570\uff0c\u6700\u7ec8\uff0c\u53c2\u6570\u4f1a\u6536\u655b\u5230\u548c\u7b2c\u4e00\u79cd\u65b9\u6cd5\u76f8\u540c\u7684\u7684\u503c\u3002\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u68af\u5ea6\u4e0b\u964d\u7684\u53d8\u4f53\u5f62\u5f0f\uff1a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08Batch GD\uff09\u3001\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08Mini-batch GD\uff09\u3001\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08Stochastic GD\uff09\uff0c\u5728\u7b2c\u4e8c\u90e8\u5206\u7684\u795e\u7ecf\u7f51\u7edc\u90e8\u5206\uff0c\u6211\u4eec\u4f1a\u591a\u6b21\u4f7f\u7528\u5b83\u4eec\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u6a21\u578b\uff1a\u591a\u9879\u5f0f\u56de\u5f52\uff0c\u5b83\u53ef\u4ee5\u62df\u5408\u975e\u7ebf\u6027\u6570\u636e\u96c6\uff0c\u7531\u4e8e\u5b83\u6bd4\u7ebf\u6027\u6a21\u578b\u62e5\u6709\u66f4\u591a\u7684\u53c2\u6570\uff0c\u4e8e\u662f\u5b83\u66f4\u5bb9\u6613\u51fa\u73b0\u6a21\u578b\u7684\u8fc7\u62df\u5408\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7\u5b66\u4e60\u66f2\u7ebf\u53bb\u5224\u65ad\u6a21\u578b\u662f\u5426\u51fa\u73b0\u4e86\u8fc7\u62df\u5408\uff0c\u5e76\u4ecb\u7ecd\u51e0\u79cd\u6b63\u5219\u5316\u65b9\u6cd5\u4ee5\u51cf\u5c11\u6a21\u578b\u51fa\u73b0\u8fc7\u62df\u5408\u7684\u98ce\u9669\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e24\u4e2a\u5e38\u7528\u4e8e\u5206\u7c7b\u7684\u6a21\u578b\uff1aLogistic\u56de\u5f52\u548cSoftmax\u56de\u5f52 \u63d0\u793a \u5728\u672c\u7ae0\u4e2d\u5305\u542b\u8bb8\u591a\u6570\u5b66\u516c\u5f0f\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u548c\u5fae\u79ef\u5206\u57fa\u672c\u6982\u5ff5\u3002\u4e3a\u4e86\u7406\u89e3\u8fd9\u4e9b\u516c\u5f0f\uff0c\u4f60\u9700\u8981\u77e5\u9053\u4ec0\u4e48\u662f\u5411\u91cf\uff0c\u4ec0\u4e48\u662f\u77e9\u9635\uff0c\u4ee5\u53ca\u5b83\u4eec\u76f4\u63a5\u662f\u5982\u4f55\u8f6c\u5316\u7684\uff0c\u4ee5\u53ca\u4ec0\u4e48\u662f\u70b9\u79ef\uff0c\u4ec0\u4e48\u662f\u77e9\u9635\u7684\u9006\uff0c\u4ec0\u4e48\u662f\u504f\u5bfc\u6570\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e9b\u4e0d\u662f\u5f88\u719f\u6089\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u9605\u8bfb\u672c\u4e66\u63d0\u4f9b\u7684 Jupyter \u5728\u7ebf\u7b14\u8bb0\uff0c\u5b83\u5305\u62ec\u4e86\u7ebf\u6027\u4ee3\u6570\u548c\u5fae\u79ef\u5206\u7684\u5165\u95e8\u6307\u5bfc\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u559c\u6b22\u6570\u5b66\u7684\u4eba\uff0c\u4f60\u4e5f\u5e94\u8be5\u5feb\u901f\u7b80\u5355\u7684\u6d4f\u89c8\u8fd9\u4e9b\u516c\u5f0f\u3002\u5e0c\u671b\u5b83\u8db3\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u5927\u591a\u6570\u7684\u6982\u5ff5\u3002","title":"\u56db\u3001\u8bad\u7ec3\u6a21\u578b"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_2","text":"\u5728\u7b2c\u4e00\u7ae0\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u751f\u6d3b\u6ee1\u610f\u5ea6\u56de\u5f52\u6a21\u578b: \u8fd9\u4e2a\u6a21\u578b\u4ec5\u4ec5\u662f\u8f93\u5165\u91cf GDP_per_capita \u7684\u7ebf\u6027\u51fd\u6570\uff0c \u548c \u662f\u8fd9\u4e2a\u6a21\u578b\u7684\u53c2\u6570\uff0c\u7ebf\u6027\u6a21\u578b\u66f4\u4e00\u822c\u5316\u7684\u63cf\u8ff0\u6307\u901a\u8fc7\u8ba1\u7b97\u8f93\u5165\u53d8\u91cf\u7684\u52a0\u6743\u548c\uff0c\u5e76\u52a0\u4e0a\u4e00\u4e2a\u5e38\u6570\u504f\u7f6e\u9879\uff08\u622a\u8ddd\u9879\uff09\u6765\u5f97\u5230\u4e00\u4e2a\u9884\u6d4b\u503c\u3002\u5982\u516c\u5f0f 4-1\uff1a \u516c\u5f0f 4-1\uff1a\u7ebf\u6027\u56de\u5f52\u9884\u6d4b\u6a21\u578b \u8868\u793a\u9884\u6d4b\u7ed3\u679c \u8868\u793a\u7279\u5f81\u7684\u4e2a\u6570 \u8868\u793a\u7b2c i \u4e2a\u7279\u5f81\u7684\u503c \u8868\u793a\u7b2c j \u4e2a\u53c2\u6570\uff08\u5305\u62ec\u504f\u7f6e\u9879 \u548c\u7279\u5f81\u6743\u91cd\u503c \uff09 \u4e0a\u8ff0\u516c\u5f0f\u53ef\u4ee5\u5199\u6210\u66f4\u4e3a\u7b80\u6d01\u7684\u5411\u91cf\u5f62\u5f0f\uff0c\u5982\u516c\u5f0f 4-2\uff1a \u516c\u5f0f 4-2\uff1a\u7ebf\u6027\u56de\u5f52\u9884\u6d4b\u6a21\u578b\uff08\u5411\u91cf\u5f62\u5f0f\uff09 \u8868\u793a\u6a21\u578b\u7684\u53c2\u6570\u5411\u91cf\u5305\u62ec\u504f\u7f6e\u9879 \u548c\u7279\u5f81\u6743\u91cd\u503c \u5230 \u8868\u793a\u5411\u91cf \u7684\u8f6c\u7f6e\uff08\u884c\u5411\u91cf\u53d8\u4e3a\u4e86\u5217\u5411\u91cf\uff09 \u4e3a\u6bcf\u4e2a\u6837\u672c\u4e2d\u7279\u5f81\u503c\u7684\u5411\u91cf\u5f62\u5f0f\uff0c\u5305\u62ec \u5230 \uff0c\u800c\u4e14 \u6052\u4e3a 1 \u8868\u793a \u548c \u7684\u70b9\u79ef \u8868\u793a\u53c2\u6570\u4e3a \u7684\u5047\u8bbe\u51fd\u6570 \u600e\u4e48\u6837\u53bb\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u5462\uff1f\u597d\u5427\uff0c\u56de\u60f3\u4e00\u4e0b\uff0c\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6307\u7684\u662f\u8bbe\u7f6e\u6a21\u578b\u7684\u53c2\u6570\u4f7f\u5f97\u8fd9\u4e2a\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u7684\u8868\u73b0\u8f83\u597d\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u627e\u5230\u4e00\u4e2a\u8861\u91cf\u6a21\u578b\u597d\u574f\u7684\u8bc4\u5b9a\u65b9\u6cd5\u3002\u5728\u7b2c\u4e8c\u7ae0\uff0c\u6211\u4eec\u4ecb\u7ecd\u5230\u5728\u56de\u5f52\u6a21\u578b\u4e0a\uff0c\u6700\u5e38\u89c1\u7684\u8bc4\u5b9a\u6807\u51c6\u662f\u5747\u65b9\u6839\u8bef\u5dee\uff08RMSE\uff0c\u8be6\u89c1\u516c\u5f0f 2-1\uff09\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff0c\u4f60\u9700\u8981\u627e\u5230\u4e00\u4e2a \u503c\uff0c\u5b83\u4f7f\u5f97\u5747\u65b9\u6839\u8bef\u5dee\uff08\u6807\u51c6\u8bef\u5dee\uff09\u8fbe\u5230\u6700\u5c0f\u503c\u3002\u5b9e\u8df5\u8fc7\u7a0b\u4e2d\uff0c\u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee\u6bd4\u6700\u5c0f\u5316\u5747\u65b9\u6839\u8bef\u5dee\u66f4\u52a0\u7684\u7b80\u5355\uff0c\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u4f1a\u5f97\u5230\u76f8\u540c\u7684 \uff0c\u56e0\u4e3a\u51fd\u6570\u5728\u6700\u5c0f\u503c\u65f6\u5019\u7684\u81ea\u53d8\u91cf\uff0c\u540c\u6837\u80fd\u4f7f\u51fd\u6570\u7684\u65b9\u6839\u8fd0\u7b97\u5f97\u5230\u6700\u5c0f\u503c\u3002 \u5728\u8bad\u7ec3\u96c6 \u4e0a\u4f7f\u7528\u516c\u5f0f 4-3 \u6765\u8ba1\u7b97\u7ebf\u6027\u56de\u5f52\u5047\u8bbe \u7684\u5747\u65b9\u5dee\uff08 \uff09\u3002 \u516c\u5f0f 4-3\uff1a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684 MSE \u635f\u5931\u51fd\u6570 \u516c\u5f0f\u4e2d\u7b26\u53f7\u7684\u542b\u4e49\u5927\u591a\u6570\u90fd\u5728\u7b2c\u4e8c\u7ae0\uff08\u8be6\u89c1\u201c\u7b26\u53f7\u201d\uff09\u8fdb\u884c\u4e86\u8bf4\u660e\uff0c\u4e0d\u540c\u7684\u662f\uff1a\u4e3a\u4e86\u7a81\u51fa\u6a21\u578b\u7684\u53c2\u6570\u5411\u91cf \uff0c\u4f7f\u7528 \u6765\u4ee3\u66ff \u3002\u4ee5\u540e\u7684\u4f7f\u7528\u4e2d\u4e3a\u4e86\u516c\u5f0f\u7684\u7b80\u6d01\uff0c\u4f7f\u7528 \u6765\u4ee3\u66ff \u3002","title":"\u7ebf\u6027\u56de\u5f52"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_3","text":"\u4e3a\u4e86\u627e\u5230\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u7684 \u503c\uff0c\u53ef\u4ee5\u91c7\u7528\u516c\u5f0f\u89e3\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7\u89e3\u6b63\u6001\u65b9\u7a0b\u76f4\u63a5\u5f97\u5230\u6700\u540e\u7684\u7ed3\u679c\u3002 \u516c\u5f0f 4-4\uff1a\u6b63\u6001\u65b9\u7a0b \u6307\u6700\u5c0f\u5316\u635f\u5931 \u7684\u503c \u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5176\u5305\u542b\u4e86 \u5230 \u7684\u503c \u8ba9\u6211\u4eec\u751f\u6210\u4e00\u4e9b\u8fd1\u4f3c\u7ebf\u6027\u7684\u6570\u636e\uff08\u5982\u56fe 4-1\uff09\u6765\u6d4b\u8bd5\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u7a0b\u3002 import numpy as np X = 2 * np.random.rand(100, 1) y = 4 + 3 * X + np.random.randn(100, 1) \u56fe 4-1\uff1a\u968f\u673a\u7ebf\u6027\u6570\u636e\u96c6 \u73b0\u5728\u8ba9\u6211\u4eec\u4f7f\u7528\u6b63\u6001\u65b9\u7a0b\u6765\u8ba1\u7b97 \uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Numpy \u7684\u7ebf\u6027\u4ee3\u6570\u6a21\u5757\uff08 np.linalg \uff09\u4e2d\u7684 inv() \u51fd\u6570\u6765\u8ba1\u7b97\u77e9\u9635\u7684\u9006\uff0c\u4ee5\u53ca dot() \u65b9\u6cd5\u6765\u8ba1\u7b97\u77e9\u9635\u7684\u4e58\u6cd5\u3002 X_b = np.c_[np.ones((100, 1)), X] theta_best = np.linalg.inv(X_b.T.dot(X_b)).dot(X_b.T).dot(y) \u6211\u4eec\u751f\u4ea7\u6570\u636e\u7684\u51fd\u6570\u5b9e\u9645\u4e0a\u662f \u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6700\u540e\u7684\u8ba1\u7b97\u7ed3\u679c\u3002 >>> theta_best array([[4.21509616],[2.77011339]]) \u6211\u4eec\u5e0c\u671b\u6700\u540e\u5f97\u5230\u7684\u53c2\u6570\u4e3a \u800c\u4e0d\u662f \uff08\u8bd1\u8005\u6ce8\uff1a\u6211\u8ba4\u4e3a\u5e94\u8be5\u662f \uff09\u3002\u8fd9\u5df2\u7ecf\u8db3\u591f\u4e86\uff0c\u7531\u4e8e\u5b58\u5728\u566a\u58f0\uff0c\u53c2\u6570\u4e0d\u53ef\u80fd\u8fbe\u5230\u5230\u539f\u59cb\u51fd\u6570\u7684\u503c\u3002 \u73b0\u5728\u6211\u4eec\u80fd\u591f\u4f7f\u7528 \u6765\u8fdb\u884c\u9884\u6d4b\uff1a >>> X_new = np.array([[0],[2]]) >>> X_new_b = np.c_[np.ones((2, 1)), X_new] >>> y_predict = X_new_b.dot(theta_best) >>> y_predict array([[4.21509616],[9.75532293]]) \u753b\u51fa\u8fd9\u4e2a\u6a21\u578b\u7684\u56fe\u50cf\uff0c\u5982\u56fe 4-2 plt.plot(X_new,y_predict,\"r-\") plt.plot(X,y,\"b.\") plt.axis([0,2,0,15]) plt.show() \u56fe4-2\uff1a\u7ebf\u6027\u56de\u5f52\u9884\u6d4b \u4f7f\u7528\u4e0b\u9762\u7684 Scikit-Learn \u4ee3\u7801\u53ef\u4ee5\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\uff1a >>> from sklearn.linear_model import LinearRegression >>> lin_reg = LinearRegression() >>> lin_reg.fit(X,y) >>> lin_reg.intercept_, lin_reg.coef_ (array([4.21509616]),array([2.77011339])) >>> lin_reg.predict(X_new) array([[4.21509616],[9.75532293]])","title":"\u6b63\u6001\u65b9\u7a0b"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_4","text":"\u6b63\u6001\u65b9\u7a0b\u9700\u8981\u8ba1\u7b97\u77e9\u9635 \u7684\u9006\uff0c\u5b83\u662f\u4e00\u4e2a \u7684\u77e9\u9635\uff08 \u662f\u7279\u5f81\u7684\u4e2a\u6570\uff09\u3002\u8fd9\u6837\u4e00\u4e2a\u77e9\u9635\u6c42\u9006\u7684\u8fd0\u7b97\u590d\u6742\u5ea6\u5927\u7ea6\u5728 \u5230 \u4e4b\u95f4\uff0c\u5177\u4f53\u503c\u53d6\u51b3\u4e8e\u8ba1\u7b97\u65b9\u5f0f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5c06\u4f60\u7684\u7279\u5f81\u4e2a\u6570\u7ffb\u500d\u7684\u8bdd\uff0c\u5176\u8ba1\u7b97\u65f6\u95f4\u5927\u6982\u4f1a\u53d8\u4e3a\u539f\u6765\u7684 5.3\uff08 \uff09\u5230 8\uff08 \uff09\u500d\u3002 \u63d0\u793a \u5f53\u7279\u5f81\u7684\u4e2a\u6570\u8f83\u5927\u7684\u65f6\u5019\uff08\u4f8b\u5982\uff1a\u7279\u5f81\u6570\u91cf\u4e3a 100000\uff09\uff0c\u6b63\u6001\u65b9\u7a0b\u6c42\u89e3\u5c06\u4f1a\u975e\u5e38\u6162\u3002 \u6709\u5229\u7684\u4e00\u9762\u662f\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u5728\u8bad\u7ec3\u96c6\u4e0a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u6765\u8bf4\u662f\u7ebf\u6027\u7684\uff0c\u5176\u590d\u6742\u5ea6\u4e3a \uff0c\u56e0\u6b64\u53ea\u8981\u6709\u80fd\u653e\u5f97\u4e0b\u5b83\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5b83\u5c31\u53ef\u4ee5\u5bf9\u5927\u89c4\u6a21\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002\u540c\u65f6\uff0c\u4e00\u65e6\u4f60\u5f97\u5230\u4e86\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff08\u901a\u8fc7\u89e3\u6b63\u6001\u65b9\u7a0b\u6216\u8005\u5176\u4ed6\u7684\u7b97\u6cd5\uff09\uff0c\u8fdb\u884c\u9884\u6d4b\u662f\u975e\u5e38\u5feb\u7684\u3002\u56e0\u4e3a\u6a21\u578b\u4e2d\u8ba1\u7b97\u590d\u6742\u5ea6\u5bf9\u4e8e\u8981\u8fdb\u884c\u9884\u6d4b\u7684\u5b9e\u4f8b\u6570\u91cf\u548c\u7279\u5f81\u4e2a\u6570\u90fd\u662f\u7ebf\u6027\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u5b9e\u4f8b\u4e2a\u6570\u53d8\u4e3a\u539f\u6765\u7684\u4e24\u500d\u591a\u7684\u65f6\u5019\uff08\u6216\u7279\u5f81\u4e2a\u6570\u53d8\u4e3a\u539f\u6765\u7684\u4e24\u500d\u591a\uff09\uff0c\u9884\u6d4b\u65f6\u95f4\u4e5f\u4ec5\u4ec5\u662f\u539f\u6765\u7684\u4e24\u500d\u591a\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u53e6\u4e00\u79cd\u65b9\u6cd5\u53bb\u8bad\u7ec3\u6a21\u578b\u3002\u8fd9\u79cd\u65b9\u6cd5\u9002\u5408\u5728\u7279\u5f81\u4e2a\u6570\u975e\u5e38\u591a\uff0c\u8bad\u7ec3\u5b9e\u4f8b\u975e\u5e38\u591a\uff0c\u5185\u5b58\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\u7684\u65f6\u5019\u4f7f\u7528\u3002","title":"\u8ba1\u7b97\u590d\u6742\u5ea6"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_5","text":"\u68af\u5ea6\u4e0b\u964d\u662f\u4e00\u79cd\u975e\u5e38\u901a\u7528\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u5b83\u80fd\u591f\u5f88\u597d\u5730\u89e3\u51b3\u4e00\u7cfb\u5217\u95ee\u9898\u3002\u68af\u5ea6\u4e0b\u964d\u7684\u6574\u4f53\u601d\u8def\u662f\u901a\u8fc7\u7684\u8fed\u4ee3\u6765\u9010\u6e10\u8c03\u6574\u53c2\u6570\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u8fbe\u5230\u6700\u5c0f\u503c\u3002 \u5047\u8bbe\u6d53\u96fe\u4e0b\uff0c\u4f60\u8ff7\u5931\u5728\u4e86\u5927\u5c71\u4e2d\uff0c\u4f60\u53ea\u80fd\u611f\u53d7\u5230\u81ea\u5df1\u811a\u4e0b\u7684\u5761\u5ea6\u3002\u4e3a\u4e86\u6700\u5feb\u5230\u8fbe\u5c71\u5e95\uff0c\u4e00\u4e2a\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u6cbf\u7740\u5761\u5ea6\u6700\u9661\u7684\u5730\u65b9\u4e0b\u5c71\u3002\u8fd9\u5176\u5b9e\u5c31\u662f\u68af\u5ea6\u4e0b\u964d\u6240\u505a\u7684\uff1a\u5b83\u8ba1\u7b97\u8bef\u5dee\u51fd\u6570\u5173\u4e8e\u53c2\u6570\u5411\u91cf \u7684\u5c40\u90e8\u68af\u5ea6\uff0c\u540c\u65f6\u5b83\u6cbf\u7740\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u5411\u8fdb\u884c\u4e0b\u4e00\u6b21\u8fed\u4ee3\u3002\u5f53\u68af\u5ea6\u503c\u4e3a\u96f6\u7684\u65f6\u5019\uff0c\u5c31\u8fbe\u5230\u4e86\u8bef\u5dee\u51fd\u6570\u6700\u5c0f\u503c \u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5f00\u59cb\u65f6\uff0c\u9700\u8981\u9009\u5b9a\u4e00\u4e2a\u968f\u673a\u7684 \uff08\u8fd9\u4e2a\u503c\u79f0\u4e3a\u968f\u673a\u521d\u59cb\u503c\uff09\uff0c\u7136\u540e\u9010\u6e10\u53bb\u6539\u8fdb\u5b83\uff0c\u6bcf\u4e00\u6b21\u53d8\u5316\u4e00\u5c0f\u6b65\uff0c\u6bcf\u4e00\u6b65\u90fd\u8bd5\u7740\u964d\u4f4e\u635f\u5931\u51fd\u6570\uff08\u4f8b\u5982\uff1a\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\uff09\uff0c\u76f4\u5230\u7b97\u6cd5\u6536\u655b\u5230\u4e00\u4e2a\u6700\u5c0f\u503c\uff08\u5982\u56fe\uff1a4-3\uff09\u3002 \u56fe 4-3\uff1a\u68af\u5ea6\u4e0b\u964d \u5728\u68af\u5ea6\u4e0b\u964d\u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570\u662f\u6b65\u957f\uff0c\u8d85\u53c2\u6570\u5b66\u4e60\u7387\u7684\u503c\u51b3\u5b9a\u4e86\u6b65\u957f\u7684\u5927\u5c0f\u3002\u5982\u679c\u5b66\u4e60\u7387\u592a\u5c0f\uff0c\u5fc5\u987b\u7ecf\u8fc7\u591a\u6b21\u8fed\u4ee3\uff0c\u7b97\u6cd5\u624d\u80fd\u6536\u655b\uff0c\u8fd9\u662f\u975e\u5e38\u8017\u65f6\u7684\uff08\u5982\u56fe 4-4\uff09\u3002 \u56fe 4-4:\u5b66\u4e60\u7387\u8fc7\u5c0f \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5b66\u4e60\u7387\u592a\u5927\uff0c\u4f60\u5c06\u8df3\u8fc7\u6700\u4f4e\u70b9\uff0c\u5230\u8fbe\u5c71\u8c37\u7684\u53e6\u4e00\u9762\uff0c\u53ef\u80fd\u4e0b\u4e00\u6b21\u7684\u503c\u6bd4\u4e0a\u4e00\u6b21\u8fd8\u8981\u5927\u3002\u8fd9\u53ef\u80fd\u4f7f\u7684\u7b97\u6cd5\u662f\u53d1\u6563\u7684\uff0c\u51fd\u6570\u503c\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\uff0c\u6c38\u8fdc\u4e0d\u53ef\u80fd\u627e\u5230\u4e00\u4e2a\u597d\u7684\u7b54\u6848\uff08\u5982\u56fe 4-5\uff09\u3002 \u56fe 4-5\uff1a\u5b66\u4e60\u7387\u8fc7\u5927 \u6700\u540e\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u635f\u5931\u51fd\u6570\u770b\u8d77\u6765\u90fd\u50cf\u4e00\u4e2a\u89c4\u5219\u7684\u7897\u3002\u5b83\u4eec\u53ef\u80fd\u662f\u6d1e\uff0c\u5c71\u810a\uff0c\u9ad8\u539f\u548c\u5404\u79cd\u4e0d\u89c4\u5219\u7684\u5730\u5f62\uff0c\u4f7f\u5b83\u4eec\u6536\u655b\u5230\u6700\u5c0f\u503c\u975e\u5e38\u7684\u56f0\u96be\u3002 \u56fe 4-6 \u663e\u793a\u4e86\u68af\u5ea6\u4e0b\u964d\u7684\u4e24\u4e2a\u4e3b\u8981\u6311\u6218\uff1a\u5982\u679c\u968f\u673a\u521d\u59cb\u503c\u9009\u5728\u4e86\u56fe\u50cf\u7684\u5de6\u4fa7\uff0c\u5219\u5b83\u5c06\u6536\u655b\u5230\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u8fd9\u4e2a\u503c\u8981\u6bd4\u5168\u5c40\u6700\u5c0f\u503c\u8981\u5927\u3002 \u5982\u679c\u5b83\u4ece\u53f3\u4fa7\u5f00\u59cb\uff0c\u90a3\u4e48\u8de8\u8d8a\u9ad8\u539f\u5c06\u9700\u8981\u5f88\u957f\u65f6\u95f4\uff0c\u5982\u679c\u4f60\u65e9\u65e9\u5730\u7ed3\u675f\u8bad\u7ec3\uff0c\u4f60\u5c06\u6c38\u8fdc\u5230\u4e0d\u4e86\u5168\u5c40\u6700\u5c0f\u503c\u3002 \u56fe 4-6\uff1a\u68af\u5ea6\u4e0b\u964d\u7684\u9677\u9631 \u5e78\u8fd0\u7684\u662f\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\u662f\u4e00\u4e2a\u51f8\u51fd\u6570\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u9009\u62e9\u66f2\u7ebf\u4e0a\u7684\u4efb\u610f\u4e24\u70b9\uff0c\u5b83\u4eec\u7684\u8fde\u7ebf\u6bb5\u4e0d\u4f1a\u4e0e\u66f2\u7ebf\u53d1\u751f\u4ea4\u53c9\uff08\u8bd1\u8005\u6ce8\uff1a\u8be5\u7ebf\u6bb5\u4e0d\u4f1a\u4e0e\u66f2\u7ebf\u6709\u7b2c\u4e09\u4e2a\u4ea4\u70b9\uff09\u3002\u8fd9\u610f\u5473\u7740\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u6ca1\u6709\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u4ec5\u4ec5\u53ea\u6709\u4e00\u4e2a\u5168\u5c40\u6700\u5c0f\u503c\u3002\u540c\u65f6\u5b83\u4e5f\u662f\u4e00\u4e2a\u659c\u7387\u4e0d\u80fd\u7a81\u53d8\u7684\u8fde\u7eed\u51fd\u6570\u3002\u8fd9\u4e24\u4e2a\u56e0\u7d20\u5bfc\u81f4\u4e86\u4e00\u4e2a\u597d\u7684\u7ed3\u679c\uff1a\u68af\u5ea6\u4e0b\u964d\u53ef\u4ee5\u65e0\u9650\u63a5\u8fd1\u5168\u5c40\u6700\u5c0f\u503c\u3002\uff08\u53ea\u8981\u4f60\u8bad\u7ec3\u65f6\u95f4\u8db3\u591f\u957f\uff0c\u540c\u65f6\u5b66\u4e60\u7387\u4e0d\u662f\u592a\u5927 \uff09\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u635f\u5931\u51fd\u6570\u7684\u56fe\u50cf\u5448\u73b0\u7897\u72b6\uff0c\u4f46\u662f\u4e0d\u540c\u7279\u5f81\u7684\u53d6\u503c\u8303\u56f4\u76f8\u5dee\u8f83\u5927\u7684\u65f6\uff0c\u8fd9\u4e2a\u7897\u53ef\u80fd\u662f\u7ec6\u957f\u7684\u3002\u56fe 4-7 \u5c55\u793a\u4e86\u68af\u5ea6\u4e0b\u964d\u5728\u4e0d\u540c\u8bad\u7ec3\u96c6\u4e0a\u7684\u8868\u73b0\u3002\u5728\u5de6\u56fe\u4e2d\uff0c\u7279\u5f81 1 \u548c\u7279\u5f81 2 \u6709\u7740\u76f8\u540c\u7684\u6570\u503c\u5c3a\u5ea6\u3002\u5728\u53f3\u56fe\u4e2d\uff0c\u7279\u5f81 1 \u6bd4\u7279\u5f812\u7684\u53d6\u503c\u8981\u5c0f\u7684\u591a\uff0c\u7531\u4e8e\u7279\u5f81 1 \u8f83\u5c0f\uff0c\u56e0\u6b64\u635f\u5931\u51fd\u6570\u6539\u53d8\u65f6\uff0c \u4f1a\u6709\u8f83\u5927\u7684\u53d8\u5316\uff0c\u4e8e\u662f\u8fd9\u4e2a\u56fe\u50cf\u4f1a\u5728 \u8f74\u65b9\u5411\u53d8\u5f97\u7ec6\u957f\u3002 \u56fe 4-7\uff1a\u6709\u65e0\u7279\u5f81\u7f29\u653e\u7684\u68af\u5ea6\u4e0b\u964d \u6b63\u5982\u4f60\u770b\u5230\u7684\uff0c\u5de6\u9762\u7684\u68af\u5ea6\u4e0b\u964d\u53ef\u4ee5\u76f4\u63a5\u5feb\u901f\u5730\u5230\u8fbe\u6700\u5c0f\u503c\uff0c\u7136\u800c\u5728\u53f3\u9762\u7684\u68af\u5ea6\u4e0b\u964d\u7b2c\u4e00\u6b21\u524d\u8fdb\u7684\u65b9\u5411\u51e0\u4e4e\u548c\u5168\u5c40\u6700\u5c0f\u503c\u7684\u65b9\u5411\u5782\u76f4\uff0c\u5e76\u4e14\u6700\u540e\u5230\u8fbe\u4e00\u4e2a\u51e0\u4e4e\u5e73\u5766\u7684\u5c71\u8c37\uff0c\u5728\u5e73\u5766\u7684\u5c71\u8c37\u8d70\u4e86\u5f88\u957f\u65f6\u95f4\u3002\u5b83\u6700\u7ec8\u4f1a\u8fbe\u5230\u6700\u5c0f\u503c\uff0c\u4f46\u5b83\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002 \u63d0\u793a \u5f53\u6211\u4eec\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u786e\u4fdd\u6240\u6709\u7684\u7279\u5f81\u6709\u7740\u76f8\u8fd1\u7684\u5c3a\u5ea6\u8303\u56f4\uff08\u4f8b\u5982\uff1a\u4f7f\u7528 Scikit Learn \u7684 StandardScaler \u7c7b\uff09\uff0c\u5426\u5219\u5b83\u5c06\u9700\u8981\u5f88\u957f\u7684\u65f6\u95f4\u624d\u80fd\u591f\u6536\u655b\u3002 \u8fd9\u5e45\u56fe\u4e5f\u8868\u660e\u4e86\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u8bad\u7ec3\u6a21\u578b\u610f\u5473\u7740\u627e\u5230\u4e00\u7ec4\u6a21\u578b\u53c2\u6570\uff0c\u8fd9\u7ec4\u53c2\u6570\u53ef\u4ee5\u5728\u8bad\u7ec3\u96c6\u4e0a\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\u3002\u8fd9\u662f\u5bf9\u4e8e\u6a21\u578b\u53c2\u6570\u7a7a\u95f4\u7684\u641c\u7d22\uff0c\u6a21\u578b\u7684\u53c2\u6570\u8d8a\u591a\uff0c\u53c2\u6570\u7a7a\u95f4\u7684\u7ef4\u5ea6\u8d8a\u591a\uff0c\u627e\u5230\u5408\u9002\u7684\u53c2\u6570\u8d8a\u56f0\u96be\u3002\u4f8b\u5982\u5728300\u7ef4\u7684\u7a7a\u95f4\u627e\u5230\u4e00\u679a\u9488\u8981\u6bd4\u5728\u4e09\u7ef4\u7a7a\u95f4\u91cc\u627e\u5230\u4e00\u679a\u9488\u590d\u6742\u7684\u591a\u3002\u5e78\u8fd0\u7684\u662f\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u8fd9\u4e2a\u6700\u4f18\u53c2\u6570\u4e00\u5b9a\u5728\u7897\u7684\u5e95\u90e8\u3002","title":"\u68af\u5ea6\u4e0b\u964d"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_6","text":"\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u6bcf\u4e00\u4e2a \u4e0b\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53 \u53d8\u5316\u4e00\u70b9\u70b9\u65f6\uff0c\u635f\u5931\u51fd\u6570\u6539\u53d8\u4e86\u591a\u5c11\u3002\u8fd9\u79f0\u4e3a\u504f\u5bfc\u6570\uff0c\u5b83\u5c31\u50cf\u5f53\u4f60\u9762\u5bf9\u4e1c\u65b9\u7684\u65f6\u5019\u95ee\uff1a\"\u6211\u811a\u4e0b\u7684\u5761\u5ea6\u662f\u591a\u5c11\uff1f\"\u3002\u7136\u540e\u9762\u5411\u5317\u65b9\u7684\u65f6\u5019\u95ee\u540c\u6837\u7684\u95ee\u9898\uff08\u5982\u679c\u4f60\u80fd\u60f3\u8c61\u4e00\u4e2a\u8d85\u8fc7\u4e09\u7ef4\u7684\u5b87\u5b99\uff0c\u53ef\u4ee5\u5bf9\u6240\u6709\u7684\u65b9\u5411\u90fd\u8fd9\u6837\u505a\uff09\u3002\u516c\u5f0f 4-5 \u8ba1\u7b97\u5173\u4e8e \u7684\u635f\u5931\u51fd\u6570\u7684\u504f\u5bfc\u6570\uff0c\u8bb0\u4e3a \u3002 \u516c\u5f0f 4-5\uff1a \u635f\u5931\u51fd\u6570\u7684\u504f\u5bfc\u6570 \u4e3a\u4e86\u907f\u514d\u5355\u72ec\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u68af\u5ea6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u516c\u5f0f 4-6 \u6765\u4e00\u8d77\u8ba1\u7b97\u5b83\u4eec\u3002\u68af\u5ea6\u5411\u91cf\u8bb0\u4e3a \uff0c\u5176\u5305\u542b\u4e86\u635f\u5931\u51fd\u6570\u6240\u6709\u7684\u504f\u5bfc\u6570\uff08\u6bcf\u4e2a\u6a21\u578b\u53c2\u6570\u53ea\u51fa\u73b0\u4e00\u6b21\uff09\u3002 \u516c\u5f0f 4-6\uff1a\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u5411\u91cf \u63d0\u793a \u5728\u8fd9\u4e2a\u65b9\u7a0b\u4e2d\u6bcf\u4e00\u6b65\u8ba1\u7b97\u65f6\u90fd\u5305\u542b\u4e86\u6574\u4e2a\u8bad\u7ec3\u96c6 \uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u79f0\u4e3a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1a\u6bcf\u4e00\u6b21\u8bad\u7ec3\u8fc7\u7a0b\u90fd\u4f7f\u7528\u6240\u6709\u7684\u7684\u8bad\u7ec3\u6570\u636e\u3002\u56e0\u6b64\uff0c\u5728\u5927\u6570\u636e\u96c6\u4e0a\uff0c\u5176\u4f1a\u53d8\u5f97\u76f8\u5f53\u7684\u6162\uff08\u4f46\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u5c06\u4f1a\u4ecb\u7ecd\u66f4\u5feb\u7684\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff09\u3002\u7136\u800c\uff0c\u68af\u5ea6\u4e0b\u964d\u7684\u8fd0\u7b97\u89c4\u6a21\u548c\u7279\u5f81\u7684\u6570\u91cf\u6210\u6b63\u6bd4\u3002\u8bad\u7ec3\u4e00\u4e2a\u6570\u5343\u6570\u91cf\u7279\u5f81\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4f7f\u7528*\u68af\u5ea6\u4e0b\u964d\u8981\u6bd4\u4f7f\u7528\u6b63\u6001\u65b9\u7a0b\u5feb\u7684\u591a\u3002 \u4e00\u65e6\u6c42\u5f97\u4e86\u65b9\u5411\u662f\u4e0a\u5c71\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u4f60\u5c31\u53ef\u4ee5\u5411\u7740\u76f8\u53cd\u7684\u65b9\u5411\u53bb\u4e0b\u5c71\u3002\u8fd9\u610f\u5473\u7740\u4ece \u4e2d\u51cf\u53bb \u3002\u5b66\u4e60\u7387 \u548c\u68af\u5ea6\u5411\u91cf\u7684\u79ef\u51b3\u5b9a\u4e86\u4e0b\u5c71\u65f6\u6bcf\u4e00\u6b65\u7684\u5927\u5c0f\uff0c\u5982\u516c\u5f0f 4-7\u3002 \u516c\u5f0f 4-7\uff1a\u68af\u5ea6\u4e0b\u964d\u6b65\u957f \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5e94\u7528\uff1a eta = 0.1 # \u5b66\u4e60\u7387 n_iterations = 1000 m = 100 theta = np.random.randn(2,1) # \u968f\u673a\u521d\u59cb\u503c for iteration in range(n_iterations): gradients = 2/m * X_b.T.dot(X_b.dot(theta) - y) theta = theta - eta * gradients \u8fd9\u4e0d\u662f\u592a\u96be\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6700\u540e\u7684\u7ed3\u679c \uff1a >>> theta array([[4.21509616],[2.77011339]]) \u770b\uff01\u6b63\u6001\u65b9\u7a0b\u7684\u8868\u73b0\u975e\u5e38\u597d\u3002\u5b8c\u7f8e\u5730\u6c42\u51fa\u4e86\u68af\u5ea6\u4e0b\u964d\u7684\u53c2\u6570\u3002\u4f46\u662f\u5f53\u4f60\u6362\u4e00\u4e2a\u5b66\u4e60\u7387\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u56fe 4-8 \u5c55\u793a\u4e86\u4f7f\u7528\u4e86\u4e09\u4e2a\u4e0d\u540c\u7684\u5b66\u4e60\u7387\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u7684\u524d 10 \u6b65\u8fd0\u7b97\uff08\u865a\u7ebf\u4ee3\u8868\u8d77\u59cb\u4f4d\u7f6e\uff09\u3002 \u56fe 4-8\uff1a\u4e0d\u540c\u5b66\u4e60\u7387\u7684\u68af\u5ea6\u4e0b\u964d \u5728\u5de6\u9762\u7684\u90a3\u526f\u56fe\u4e2d\uff0c\u5b66\u4e60\u7387\u662f\u6700\u5c0f\u7684\uff0c\u7b97\u6cd5\u51e0\u4e4e\u4e0d\u80fd\u6c42\u51fa\u6700\u540e\u7684\u7ed3\u679c\uff0c\u800c\u4e14\u8fd8\u4f1a\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002\u5728\u4e2d\u95f4\u7684\u8fd9\u5e45\u56fe\u4e2d\uff0c\u5b66\u4e60\u7387\u7684\u8868\u73b0\u770b\u8d77\u6765\u4e0d\u9519\uff0c\u4ec5\u4ec5\u51e0\u6b21\u8fed\u4ee3\u540e\uff0c\u5b83\u5c31\u6536\u655b\u5230\u4e86\u6700\u540e\u7684\u7ed3\u679c\u3002\u5728\u53f3\u9762\u7684\u90a3\u526f\u56fe\u4e2d\uff0c\u5b66\u4e60\u7387\u592a\u5927\u4e86\uff0c\u7b97\u6cd5\u662f\u53d1\u6563\u7684\uff0c\u8df3\u8fc7\u4e86\u6240\u6709\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u540c\u65f6\u6bcf\u4e00\u6b65\u90fd\u79bb\u6b63\u786e\u7684\u7ed3\u679c\u8d8a\u6765\u8d8a\u8fdc\u3002 \u4e3a\u4e86\u627e\u5230\u4e00\u4e2a\u597d\u7684\u5b66\u4e60\u7387\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u7f51\u683c\u641c\u7d22\uff08\u8be6\u89c1\u7b2c\u4e8c\u7ae0\uff09\u3002\u5f53\u7136\uff0c\u4f60\u4e00\u822c\u4f1a\u9650\u5236\u8fed\u4ee3\u7684\u6b21\u6570\uff0c\u4ee5\u4fbf\u7f51\u683c\u641c\u7d22\u53ef\u4ee5\u6d88\u9664\u6a21\u578b\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u6536\u655b\u8fd9\u4e00\u4e2a\u95ee\u9898\u3002 \u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u5982\u4f55\u9009\u53d6\u8fed\u4ee3\u7684\u6b21\u6570\u3002\u5982\u679c\u5b83\u592a\u5c0f\u4e86\uff0c\u5f53\u7b97\u6cd5\u505c\u6b62\u7684\u65f6\u5019\uff0c\u4f60\u4f9d\u7136\u6ca1\u6709\u627e\u5230\u6700\u4f18\u89e3\u3002\u5982\u679c\u5b83\u592a\u5927\u4e86\uff0c\u7b97\u6cd5\u4f1a\u975e\u5e38\u7684\u8017\u65f6\u540c\u65f6\u540e\u6765\u7684\u8fed\u4ee3\u53c2\u6570\u4e5f\u4e0d\u4f1a\u53d1\u751f\u6539\u53d8\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff1a\u8bbe\u7f6e\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u8fed\u4ee3\u6b21\u6570\uff0c\u4f46\u662f\u5f53\u68af\u5ea6\u5411\u91cf\u53d8\u5f97\u975e\u5e38\u5c0f\u7684\u65f6\u5019\uff0c\u7ed3\u675f\u8fed\u4ee3\u3002\u975e\u5e38\u5c0f\u6307\u7684\u662f\uff1a\u68af\u5ea6\u5411\u91cf\u5c0f\u4e8e\u4e00\u4e2a\u503c \uff08\u79f0\u4e3a\u5bb9\u5dee\uff09\u3002\u8fd9\u65f6\u5019\u53ef\u4ee5\u8ba4\u4e3a\u68af\u5ea6\u4e0b\u964d\u51e0\u4e4e\u5df2\u7ecf\u8fbe\u5230\u4e86\u6700\u5c0f\u503c\u3002 \u6536\u655b\u901f\u7387\uff1a \u5f53\u635f\u5931\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u540c\u65f6\u5b83\u7684\u659c\u7387\u4e0d\u80fd\u7a81\u53d8\uff08\u5c31\u50cf\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\u90a3\u6837\uff09\uff0c\u90a3\u4e48\u5b83\u7684\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u56fa\u5b9a\u5b66\u4e60\u7387\u4e4b\u540e\uff0c\u5b83\u7684\u6536\u655b\u901f\u7387\u662f \u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5c06\u5bb9\u5dee \u7f29\u5c0f 10 \u500d\u540e\uff08\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u7cbe\u786e\u7684\u7ed3\u679c\uff09\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8fed\u4ee3\u6b21\u6570\u5927\u7ea6\u4f1a\u53d8\u6210\u539f\u6765\u7684 10 \u500d\u3002","title":"\u6279\u91cf\u68af\u5ea6\u4e0b\u964d"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_7","text":"\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u6700\u8981\u95ee\u9898\u662f\u8ba1\u7b97\u6bcf\u4e00\u6b65\u7684\u68af\u5ea6\u65f6\u90fd\u9700\u8981\u4f7f\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\uff0c\u8fd9\u5bfc\u81f4\u5728\u89c4\u6a21\u8f83\u5927\u7684\u6570\u636e\u96c6\u4e0a\uff0c\u5176\u4f1a\u53d8\u5f97\u975e\u5e38\u7684\u6162\u3002\u4e0e\u5176\u5b8c\u5168\u76f8\u53cd\u7684\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u5728\u6bcf\u4e00\u6b65\u7684\u68af\u5ea6\u8ba1\u7b97\u4e0a\u53ea\u968f\u673a\u9009\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u4e00\u4e2a\u6837\u672c\u3002\u5f88\u660e\u663e\uff0c\u7531\u4e8e\u6bcf\u4e00\u6b21\u7684\u64cd\u4f5c\u90fd\u4f7f\u7528\u4e86\u975e\u5e38\u5c11\u7684\u6570\u636e\uff0c\u8fd9\u6837\u4f7f\u5f97\u7b97\u6cd5\u53d8\u5f97\u975e\u5e38\u5feb\u3002\u7531\u4e8e\u6bcf\u4e00\u6b21\u8fed\u4ee3\uff0c\u53ea\u9700\u8981\u5728\u5185\u5b58\u4e2d\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4f7f\u968f\u673a\u68af\u5ea6\u7b97\u6cd5\u53ef\u4ee5\u5728\u5927\u89c4\u6a21\u8bad\u7ec3\u96c6\u4e0a\u4f7f\u7528\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u7531\u4e8e\u5b83\u7684\u968f\u673a\u6027\uff0c\u4e0e\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u76f8\u6bd4\uff0c\u5176\u5448\u73b0\u51fa\u66f4\u591a\u7684\u4e0d\u89c4\u5f8b\u6027\uff1a\u5b83\u5230\u8fbe\u6700\u5c0f\u503c\u4e0d\u662f\u5e73\u7f13\u7684\u4e0b\u964d\uff0c\u635f\u5931\u51fd\u6570\u4f1a\u5ffd\u9ad8\u5ffd\u4f4e\uff0c\u53ea\u662f\u5728\u5927\u4f53\u4e0a\u5448\u4e0b\u964d\u8d8b\u52bf\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b83\u4f1a\u975e\u5e38\u7684\u9760\u8fd1\u6700\u5c0f\u503c\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u505c\u6b62\u5728\u4e00\u4e2a\u503c\u4e0a\uff0c\u5b83\u4f1a\u4e00\u76f4\u5728\u8fd9\u4e2a\u503c\u9644\u8fd1\u6446\u52a8\uff08\u5982\u56fe 4-9\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u7b97\u6cd5\u505c\u6b62\u7684\u65f6\u5019\uff0c\u6700\u540e\u7684\u53c2\u6570\u8fd8\u4e0d\u9519\uff0c\u4f46\u4e0d\u662f\u6700\u4f18\u503c\u3002 \u56fe4-9\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d \u5f53\u635f\u5931\u51fd\u6570\u5f88\u4e0d\u89c4\u5219\u65f6\uff08\u5982\u56fe 4-6\uff09\uff0c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u80fd\u591f\u8df3\u8fc7\u5c40\u90e8\u6700\u5c0f\u503c\u3002\u56e0\u6b64\uff0c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u5728\u5bfb\u627e\u5168\u5c40\u6700\u5c0f\u503c\u4e0a\u6bd4\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u8868\u73b0\u8981\u597d\u3002 \u867d\u7136\u968f\u673a\u6027\u53ef\u4ee5\u5f88\u597d\u7684\u8df3\u8fc7\u5c40\u90e8\u6700\u4f18\u503c\uff0c\u4f46\u540c\u65f6\u5b83\u5374\u4e0d\u80fd\u8fbe\u5230\u6700\u5c0f\u503c\u3002\u89e3\u51b3\u8fd9\u4e2a\u96be\u9898\u7684\u4e00\u4e2a\u529e\u6cd5\u662f\u9010\u6e10\u964d\u4f4e\u5b66\u4e60\u7387\u3002 \u5f00\u59cb\u65f6\uff0c\u8d70\u7684\u6bcf\u4e00\u6b65\u8f83\u5927\uff08\u8fd9\u6709\u52a9\u4e8e\u5feb\u901f\u524d\u8fdb\u540c\u65f6\u8df3\u8fc7\u5c40\u90e8\u6700\u5c0f\u503c\uff09\uff0c\u7136\u540e\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4ece\u800c\u4f7f\u7b97\u6cd5\u5230\u8fbe\u5168\u5c40\u6700\u5c0f\u503c\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u6a21\u62df\u9000\u706b\uff0c\u56e0\u4e3a\u5b83\u7c7b\u4f3c\u4e8e\u7194\u878d\u91d1\u5c5e\u6162\u6162\u51b7\u5374\u7684\u51b6\u91d1\u5b66\u9000\u706b\u8fc7\u7a0b\u3002 \u51b3\u5b9a\u6bcf\u6b21\u8fed\u4ee3\u7684\u5b66\u4e60\u7387\u7684\u51fd\u6570\u79f0\u4e3a learning schedule \u3002 \u5982\u679c\u5b66\u4e60\u901f\u5ea6\u964d\u4f4e\u5f97\u8fc7\u5feb\uff0c\u4f60\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u751a\u81f3\u5728\u5230\u8fbe\u6700\u5c0f\u503c\u7684\u534a\u8def\u5c31\u505c\u6b62\u4e86\u3002 \u5982\u679c\u5b66\u4e60\u901f\u5ea6\u964d\u4f4e\u5f97\u592a\u6162\uff0c\u4f60\u53ef\u80fd\u5728\u6700\u5c0f\u503c\u7684\u9644\u8fd1\u957f\u65f6\u95f4\u6446\u52a8\uff0c\u540c\u65f6\u5982\u679c\u8fc7\u65e9\u505c\u6b62\u8bad\u7ec3\uff0c\u6700\u7ec8\u53ea\u4f1a\u51fa\u73b0\u6b21\u4f18\u89e3\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684 learning schedule \u6765\u5b9e\u73b0\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff1a n_epochs = 50 t0, t1 = 5, 50 #learning_schedule\u7684\u8d85\u53c2\u6570 def learning_schedule(t): return t0 / (t + t1) theta = np.random.randn(2,1) for epoch in range(n_epochs): for i in range(m): random_index = np.random.randint(m) xi = X_b[random_index:random_index+1] yi = y[random_index:random_index+1] gradients = 2 * xi.T.dot(xi.dot(theta)-yi) eta = learning_schedule(epoch * m + i) theta = theta - eta * gradients \u6309\u4e60\u60ef\u6765\u8bb2\uff0c\u6211\u4eec\u8fdb\u884c \u8f6e\u7684\u8fed\u4ee3\uff0c\u6bcf\u4e00\u8f6e\u8fed\u4ee3\u88ab\u79f0\u4e3a\u4e00\u4ee3\u3002\u5728\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\uff0c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u8fed\u4ee3\u4e86 1000 \u6b21\u65f6\uff0c\u4e00\u822c\u5728\u7b2c 50 \u6b21\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u8fbe\u5230\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u7ed3\u679c\u3002 >>> theta array([[4.21076011],[2.748560791]]) \u56fe 4-10 \u5c55\u793a\u4e86\u524d 10 \u6b21\u7684\u8bad\u7ec3\u8fc7\u7a0b\uff08\u6ce8\u610f\u6bcf\u4e00\u6b65\u7684\u4e0d\u89c4\u5219\u7a0b\u5ea6\uff09\u3002 \u56fe 4-10\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7684\u524d10\u6b21\u8fed\u4ee3 \u7531\u4e8e\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u9009\u62e9\u662f\u968f\u673a\u7684\uff0c\u6709\u7684\u5b9e\u4f8b\u53ef\u80fd\u5728\u6bcf\u4e00\u4ee3\u4e2d\u90fd\u88ab\u9009\u5230\uff0c\u8fd9\u6837\u5176\u4ed6\u7684\u5b9e\u4f8b\u4e5f\u53ef\u80fd\u4e00\u76f4\u4e0d\u88ab\u9009\u5230\u3002\u5982\u679c\u4f60\u60f3\u4fdd\u8bc1\u6bcf\u4e00\u4ee3\u8fed\u4ee3\u8fc7\u7a0b\uff0c\u7b97\u6cd5\u53ef\u4ee5\u904d\u5386\u6240\u6709\u5b9e\u4f8b\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u8bad\u7ec3\u96c6\u6253\u4e71\u91cd\u6392\uff0c\u7136\u540e\u9009\u62e9\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u4e4b\u540e\u518d\u7ee7\u7eed\u6253\u4e71\u91cd\u6392\uff0c\u4ee5\u6b64\u7c7b\u63a8\u4e00\u76f4\u8fdb\u884c\u4e0b\u53bb\u3002\u4f46\u662f\u8fd9\u6837\u6536\u655b\u901f\u5ea6\u4f1a\u975e\u5e38\u7684\u6162\u3002 \u901a\u8fc7\u4f7f\u7528 Scikit-Learn \u5b8c\u6210\u7ebf\u6027\u56de\u5f52\u7684\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u4f60\u9700\u8981\u4f7f\u7528 SGDRegressor \u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u9ed8\u8ba4\u4f18\u5316\u7684\u662f\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u8fed\u4ee3\u4e86 50 \u4ee3\uff0c\u5176\u5b66\u4e60\u7387 \u4e3a0.1\uff08 eta0=0.1 \uff09\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684 learning schedule \uff08\u4e0e\u524d\u9762\u7684\u4e0d\u4e00\u6837\uff09\uff0c\u540c\u65f6\u4e5f\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u6b63\u5219\u9879\uff08 penalty = None \uff09\uff1a from sklearn.linear_model import SGDRegressor sgd_reg = SGDRegressor(n_iter=50, penalty=None, eta0=0.1) sgd_reg.fit(X,y.ravel()) \u4f60\u53ef\u4ee5\u518d\u4e00\u6b21\u53d1\u73b0\uff0c\u8fd9\u4e2a\u7ed3\u679c\u975e\u5e38\u7684\u63a5\u8fd1\u6b63\u6001\u65b9\u7a0b\u7684\u89e3\uff1a >>> sgd_reg.intercept_, sgd_reg.coef_ (array([4.18380366]),array([2.74205299]))","title":"\u968f\u673a\u68af\u5ea6\u4e0b\u964d"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_8","text":"\u6700\u540e\u4e00\u4e2a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u3002\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u548c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u518d\u53bb\u7406\u89e3\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u5728\u8fed\u4ee3\u7684\u6bcf\u4e00\u6b65\uff0c\u6279\u91cf\u68af\u5ea6\u4f7f\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\uff0c\u968f\u673a\u68af\u5ea6\u65f6\u5019\u7528\u4ec5\u4ec5\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5728\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u4e2d\uff0c\u5b83\u5219\u4f7f\u7528\u4e00\u4e2a\u968f\u673a\u7684\u5c0f\u578b\u5b9e\u4f8b\u96c6\u3002\u5b83\u6bd4\u968f\u673a\u68af\u5ea6\u7684\u4e3b\u8981\u4f18\u70b9\u5728\u4e8e\u4f60\u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u8fd0\u7b97\u7684\u786c\u4ef6\u4f18\u5316\u5f97\u5230\u4e00\u4e2a\u8f83\u597d\u7684\u8bad\u7ec3\u8868\u73b0\uff0c\u5c24\u5176\u5f53\u4f60\u4f7f\u7528 GPU \u8fdb\u884c\u8fd0\u7b97\u7684\u65f6\u5019\u3002 \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u5728\u53c2\u6570\u7a7a\u95f4\u4e0a\u7684\u8868\u73b0\u6bd4\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u8981\u597d\u7684\u591a\uff0c\u5c24\u5176\u5728\u6709\u5927\u91cf\u7684\u5c0f\u578b\u5b9e\u4f8b\u96c6\u65f6\u3002\u4f5c\u4e3a\u7ed3\u679c\uff0c\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u4f1a\u6bd4\u968f\u673a\u68af\u5ea6\u66f4\u9760\u8fd1\u6700\u5c0f\u503c\u3002\u4f46\u662f\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u6709\u53ef\u80fd\u9677\u5728\u5c40\u90e8\u6700\u5c0f\u503c\u4e2d\uff08\u5728\u9047\u5230\u5c40\u90e8\u6700\u5c0f\u503c\u95ee\u9898\u7684\u60c5\u51b5\u4e0b\uff0c\u548c\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\u7ebf\u6027\u56de\u5f52\u4e0d\u4e00\u6837\uff09\u3002 \u56fe4-11\u663e\u793a\u4e86\u8bad\u7ec3\u671f\u95f4\u4e09\u79cd\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u6240\u91c7\u7528\u7684\u8def\u5f84\u3002 \u4ed6\u4eec\u90fd\u63a5\u8fd1\u6700\u5c0f\u503c\uff0c\u4f46\u6279\u91cf\u68af\u5ea6\u7684\u8def\u5f84\u6700\u540e\u505c\u5728\u4e86\u6700\u5c0f\u503c\uff0c\u800c\u968f\u673a\u68af\u5ea6\u548c\u5c0f\u6279\u91cf\u68af\u5ea6\u6700\u540e\u90fd\u5728\u6700\u5c0f\u503c\u9644\u8fd1\u6446\u52a8\u3002 \u4f46\u662f\uff0c\u4e0d\u8981\u5fd8\u8bb0\uff0c\u6279\u6b21\u68af\u5ea6\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6765\u5b8c\u6210\u6bcf\u4e00\u6b65\uff0c\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u4e00\u4e2a\u8f83\u597d\u7684 learning schedule \uff0c\u968f\u673a\u68af\u5ea6\u548c\u5c0f\u6279\u91cf\u68af\u5ea6\u4e5f\u53ef\u4ee5\u5f97\u5230\u6700\u5c0f\u503c\u3002 \u56fe 4-11\uff1a\u53c2\u6570\u7a7a\u95f4\u7684\u68af\u5ea6\u4e0b\u964d\u8def\u5f84 \u8ba9\u6211\u6bd4\u8f83\u4e00\u4e0b\u76ee\u524d\u6211\u4eec\u5df2\u7ecf\u63a2\u8ba8\u8fc7\u7684\u5bf9\u7ebf\u6027\u56de\u5f52\u7684\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u3002\u5982\u8868 4-1 \u6240\u793a\uff0c\u5176\u4e2d \u8868\u793a\u8bad\u7ec3\u6837\u672c\u7684\u4e2a\u6570\uff0c \u8868\u793a\u7279\u5f81\u7684\u4e2a\u6570\u3002 \u8868 4-1\uff1a\u6bd4\u8f83\u7ebf\u6027\u56de\u5f52\u7684\u4e0d\u540c\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5 \u63d0\u793a \u4e0a\u8ff0\u7b97\u6cd5\u5728\u5b8c\u6210\u8bad\u7ec3\u540e\uff0c\u5f97\u5230\u7684\u53c2\u6570\u57fa\u672c\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u5b83\u4eec\u4f1a\u5f97\u5230\u975e\u5e38\u76f8\u4f3c\u7684\u6a21\u578b\uff0c\u6700\u540e\u4f1a\u4ee5\u4e00\u6837\u7684\u65b9\u5f0f\u53bb\u8fdb\u884c\u9884\u6d4b\u3002","title":"\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_9","text":"\u5982\u679c\u4f60\u7684\u6570\u636e\u5b9e\u9645\u4e0a\u6bd4\u7b80\u5355\u7684\u76f4\u7ebf\u66f4\u590d\u6742\u5462\uff1f \u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u4f60\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\u6765\u62df\u5408\u975e\u7ebf\u6027\u6570\u636e\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u7279\u5f81\u8fdb\u884c\u52a0\u6743\u540e\u4f5c\u4e3a\u65b0\u7684\u7279\u5f81\uff0c\u7136\u540e\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u5728\u8fd9\u4e2a\u6269\u5c55\u7684\u7279\u5f81\u96c6\u3002 \u8fd9\u79cd\u65b9\u6cd5\u79f0\u4e3a\u591a\u9879\u5f0f\u56de\u5f52\u3002 \u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002 \u9996\u5148\uff0c\u6211\u4eec\u6839\u636e\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u6b21\u65b9\u7a0b\uff08\u5e76\u52a0\u4e0a\u4e00\u4e9b\u566a\u58f0\uff0c\u5982\u56fe 4-12\uff09\u6765\u751f\u6210\u4e00\u4e9b\u975e\u7ebf\u6027\u6570\u636e\uff1a m = 100 X = 6 * np.random.rand(m, 1) - 3 y = 0.5 * X**2 + X + 2 + np.random.randn(m, 1) \u56fe 4-12\uff1a\u751f\u4ea7\u52a0\u5165\u566a\u58f0\u7684\u975e\u7ebf\u6027\u6570\u636e \u5f88\u6e05\u695a\u7684\u770b\u51fa\uff0c\u76f4\u7ebf\u4e0d\u80fd\u6070\u5f53\u7684\u62df\u5408\u8fd9\u4e9b\u6570\u636e\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u4f7f\u7528 Scikit-Learning \u7684 PolynomialFeatures \u7c7b\u8fdb\u884c\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u8f6c\u6362\uff0c\u8ba9\u8bad\u7ec3\u96c6\u4e2d\u6bcf\u4e2a\u7279\u5f81\u7684\u5e73\u65b9\uff082 \u6b21\u591a\u9879\u5f0f\uff09\u4f5c\u4e3a\u65b0\u7279\u5f81\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ec5\u5b58\u5728\u4e00\u4e2a\u7279\u5f81\uff09\uff1a >>> from sklearn.preprocessing import PolynomialFeatures >>> poly_features = PolynomialFeatures(degree=2,include_bias=False) >>> X_poly = poly_features.fit_transform(X) >>> X[0] array([-0.75275929]) >>> X_poly[0] array([-0.75275929, 0.56664654]) X_poly \u73b0\u5728\u5305\u542b\u539f\u59cb\u7279\u5f81 \u5e76\u52a0\u4e0a\u4e86\u8fd9\u4e2a\u7279\u5f81\u7684\u5e73\u65b9 \u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6269\u5c55\u8bad\u7ec3\u96c6\u4e0a\u4f7f\u7528 LinearRegression \u6a21\u578b\u8fdb\u884c\u62df\u5408\uff0c\u5982\u56fe 4-13\uff1a >>> lin_reg = LinearRegression() >>> lin_reg.fit(X_poly, y) >>> lin_reg.intercept_, lin_reg.coef_ (array([ 1.78134581]), array([[ 0.93366893, 0.56456263]])) \u56fe 4-13\uff1a\u591a\u9879\u5f0f\u56de\u5f52\u6a21\u578b\u9884\u6d4b \u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u6a21\u578b\u9884\u6d4b\u51fd\u6570 \uff0c\u4e8b\u5b9e\u4e0a\u539f\u59cb\u51fd\u6570\u4e3a \u518d\u52a0\u4e0a\u4e00\u4e9b\u9ad8\u65af\u566a\u58f0\u3002 \u8bf7\u6ce8\u610f\uff0c\u5f53\u5b58\u5728\u591a\u4e2a\u7279\u5f81\u65f6\uff0c\u591a\u9879\u5f0f\u56de\u5f52\u80fd\u591f\u627e\u51fa\u7279\u5f81\u4e4b\u95f4\u7684\u5173\u7cfb\uff08\u8fd9\u662f\u666e\u901a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u65e0\u6cd5\u505a\u5230\u7684\uff09\u3002 \u8fd9\u662f\u56e0\u4e3a LinearRegression \u4f1a\u81ea\u52a8\u6dfb\u52a0\u5f53\u524d\u9636\u6570\u4e0b\u7279\u5f81\u7684\u6240\u6709\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u7279\u5f81 \uff0c\u4f7f\u7528 3 \u9636\uff08 degree=3 \uff09\u7684 LinearRegression \u65f6\uff0c\u4e0d\u4ec5\u6709 \u4ee5\u53ca \uff0c\u540c\u65f6\u4e5f\u4f1a\u6709\u5b83\u4eec\u7684\u5176\u4ed6\u7ec4\u5408\u9879 \u3002 \u63d0\u793a PolynomialFeatures(degree=d) \u628a\u4e00\u4e2a\u5305\u542b \u4e2a\u7279\u5f81\u7684\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5305\u542b \u7279\u5f81\u7684\u6570\u7ec4\uff0c \u8868\u793a \u7684\u9636\u4e58\uff0c\u7b49\u4e8e \u3002\u5c0f\u5fc3\u5927\u91cf\u7279\u5f81\u7684\u7ec4\u5408\u7206\u70b8\uff01","title":"\u591a\u9879\u5f0f\u56de\u5f52"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_10","text":"\u5982\u679c\u4f60\u4f7f\u7528\u4e00\u4e2a\u9ad8\u9636\u7684\u591a\u9879\u5f0f\u56de\u5f52\uff0c\u4f60\u53ef\u80fd\u53d1\u73b0\u5b83\u7684\u62df\u5408\u7a0b\u5ea6\u8981\u6bd4\u666e\u901a\u7684\u7ebf\u6027\u56de\u5f52\u8981\u597d\u7684\u591a\u3002\u4f8b\u5982\uff0c\u56fe 4-14 \u4f7f\u7528\u4e00\u4e2a 300 \u9636\u7684\u591a\u9879\u5f0f\u6a21\u578b\u53bb\u62df\u5408\u4e4b\u524d\u7684\u6570\u636e\u96c6\uff0c\u5e76\u540c\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u30012 \u9636\u7684\u591a\u9879\u5f0f\u56de\u5f52\u8fdb\u884c\u6bd4\u8f83\u3002\u6ce8\u610f 300 \u9636\u7684\u591a\u9879\u5f0f\u6a21\u578b\u5982\u4f55\u6446\u52a8\u4ee5\u5c3d\u53ef\u80fd\u63a5\u8fd1\u8bad\u7ec3\u5b9e\u4f8b\u3002 \u56fe 4-14\uff1a\u9ad8\u9636\u591a\u9879\u5f0f\u56de\u5f52 \u5f53\u7136\uff0c\u8fd9\u79cd\u9ad8\u9636\u591a\u9879\u5f0f\u56de\u5f52\u6a21\u578b\u5728\u8fd9\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u4e25\u91cd\u8fc7\u62df\u5408\u4e86\uff0c\u7ebf\u6027\u6a21\u578b\u5219\u6b20\u62df\u5408\u3002\u5728\u8fd9\u4e2a\u8bad\u7ec3\u96c6\u4e0a\uff0c\u4e8c\u6b21\u6a21\u578b\u6709\u7740\u8f83\u597d\u7684\u6cdb\u5316\u80fd\u529b\u3002\u90a3\u662f\u56e0\u4e3a\u5728\u751f\u6210\u6570\u636e\u65f6\u4f7f\u7528\u4e86\u4e8c\u6b21\u6a21\u578b\uff0c\u4f46\u662f\u4e00\u822c\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6570\u636e\u751f\u6210\u51fd\u6570\u662f\u4ec0\u4e48\uff0c\u90a3\u6211\u4eec\u8be5\u5982\u4f55\u51b3\u5b9a\u6211\u4eec\u6a21\u578b\u7684\u590d\u6742\u5ea6\u5462\uff1f\u4f60\u5982\u4f55\u544a\u8bc9\u6211\u4f60\u7684\u6a21\u578b\u662f\u8fc7\u62df\u5408\u8fd8\u662f\u6b20\u62df\u5408\uff1f \u5728\u7b2c\u4e8c\u7ae0\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u4f30\u8ba1\u4e00\u4e2a\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u5982\u679c\u4e00\u4e2a\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u826f\u597d\uff0c\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6307\u6807\u5374\u5f97\u51fa\u5176\u6cdb\u5316\u80fd\u529b\u5f88\u5dee\uff0c\u90a3\u4e48\u4f60\u7684\u6a21\u578b\u5c31\u662f\u8fc7\u62df\u5408\u4e86\u3002\u5982\u679c\u5728\u8fd9\u4e24\u65b9\u9762\u90fd\u8868\u73b0\u4e0d\u597d\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u6b20\u62df\u5408\u4e86\u3002\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u544a\u8bc9\u6211\u4eec\uff0c\u4f60\u7684\u6a21\u578b\u662f\u592a\u590d\u6742\u8fd8\u662f\u592a\u7b80\u5355\u4e86\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u89c2\u5bdf\u5b66\u4e60\u66f2\u7ebf\uff1a\u753b\u51fa\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u8868\u73b0\uff0c\u540c\u65f6\u753b\u51fa\u4ee5\u8bad\u7ec3\u96c6\u89c4\u6a21\u4e3a\u81ea\u53d8\u91cf\u7684\u8bad\u7ec3\u96c6\u51fd\u6570\u3002\u4e3a\u4e86\u5f97\u5230\u56fe\u50cf\uff0c\u9700\u8981\u5728\u8bad\u7ec3\u96c6\u7684\u4e0d\u540c\u89c4\u6a21\u5b50\u96c6\u4e0a\u8fdb\u884c\u591a\u6b21\u8bad\u7ec3\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u753b\u51fa\u7ed9\u5b9a\u8bad\u7ec3\u96c6\u540e\u7684\u6a21\u578b\u5b66\u4e60\u66f2\u7ebf\uff1a from sklearn.metrics import mean_squared_error from sklearn.model_selection import train_test_split def plot_learning_curves(model, X, y): X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2) train_errors, val_errors = [], [] for m in range(1, len(X_train)): model.fit(X_train[:m], y_train[:m]) y_train_predict = model.predict(X_train[:m]) y_val_predict = model.predict(X_val) train_errors.append(mean_squared_error(y_train_predict, y_train[:m])) val_errors.append(mean_squared_error(y_val_predict, y_val)) plt.plot(np.sqrt(train_errors), \"r-+\", linewidth=2, label=\"train\") plt.plot(np.sqrt(val_errors), \"b-\", linewidth=3, label=\"val\") \u6211\u4eec\u4e00\u8d77\u770b\u4e00\u4e0b\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u5b66\u4e60\u66f2\u7ebf\uff08\u56fe 4-15\uff09\uff1a lin_reg = LinearRegression() plot_learning_curves(lin_reg, X, y) \u56fe 4-15\uff1a\u5b66\u4e60\u66f2\u7ebf \u8fd9\u5e45\u56fe\u503c\u5f97\u6211\u4eec\u6df1\u7a76\u3002\u9996\u5148\uff0c\u6211\u4eec\u89c2\u5bdf\u8bad\u7ec3\u96c6\u7684\u8868\u73b0\uff1a\u5f53\u8bad\u7ec3\u96c6\u53ea\u6709\u4e00\u4e24\u4e2a\u6837\u672c\u7684\u65f6\u5019\uff0c\u6a21\u578b\u80fd\u591f\u975e\u5e38\u597d\u7684\u62df\u5408\u5b83\u4eec\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u66f2\u7ebf\u662f\u4ece\u96f6\u5f00\u59cb\u7684\u539f\u56e0\u3002\u4f46\u662f\u5f53\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684\u6837\u672c\u7684\u65f6\u5019\uff0c\u8bad\u7ec3\u96c6\u4e0a\u7684\u62df\u5408\u7a0b\u5ea6\u53d8\u5f97\u96be\u4ee5\u63a5\u53d7\uff0c\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u6709\u4e24\u4e2a\u539f\u56e0\uff0c\u4e00\u662f\u56e0\u4e3a\u6570\u636e\u4e2d\u542b\u6709\u566a\u58f0\uff0c\u53e6\u4e00\u4e2a\u662f\u6570\u636e\u6839\u672c\u4e0d\u662f\u7ebf\u6027\u7684\u3002\u56e0\u6b64\u968f\u7740\u6570\u636e\u89c4\u6a21\u7684\u589e\u5927\uff0c\u8bef\u5dee\u4e5f\u4f1a\u4e00\u76f4\u589e\u5927\uff0c\u76f4\u5230\u8fbe\u5230\u9ad8\u539f\u5730\u5e26\u5e76\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u5728\u4e4b\u540e\uff0c\u7ee7\u7eed\u52a0\u5165\u65b0\u7684\u6837\u672c\uff0c\u6a21\u578b\u7684\u5e73\u5747\u8bef\u5dee\u4e0d\u4f1a\u53d8\u5f97\u66f4\u597d\u6216\u8005\u66f4\u5dee\u3002\u6211\u4eec\u7ee7\u7eed\u6765\u770b\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u8868\u73b0\uff0c\u5f53\u4ee5\u975e\u5e38\u5c11\u7684\u6837\u672c\u53bb\u8bad\u7ec3\u65f6\uff0c\u6a21\u578b\u4e0d\u80fd\u6070\u5f53\u7684\u6cdb\u5316\uff0c\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u9a8c\u8bc1\u8bef\u5dee\u4e00\u5f00\u59cb\u662f\u975e\u5e38\u5927\u7684\u3002\u5f53\u8bad\u7ec3\u6837\u672c\u53d8\u591a\u7684\u5230\u65f6\u5019\uff0c\u6a21\u578b\u5b66\u4e60\u7684\u4e1c\u897f\u53d8\u591a\uff0c\u9a8c\u8bc1\u8bef\u5dee\u5f00\u59cb\u7f13\u6162\u7684\u4e0b\u964d\u3002\u4f46\u662f\u4e00\u6761\u76f4\u7ebf\u4e0d\u53ef\u80fd\u5f88\u597d\u7684\u62df\u5408\u8fd9\u4e9b\u6570\u636e\uff0c\u56e0\u6b64\u6700\u540e\u8bef\u5dee\u4f1a\u5230\u8fbe\u5728\u4e00\u4e2a\u9ad8\u539f\u5730\u5e26\u5e76\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u6700\u540e\u548c\u8bad\u7ec3\u96c6\u7684\u66f2\u7ebf\u975e\u5e38\u63a5\u8fd1\u3002 \u4e0a\u9762\u7684\u66f2\u7ebf\u8868\u73b0\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u6b20\u62df\u5408\u6a21\u578b\uff0c\u4e24\u6761\u66f2\u7ebf\u90fd\u5230\u8fbe\u9ad8\u539f\u5730\u5e26\u5e76\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u5e76\u4e14\u6700\u540e\u4e24\u6761\u66f2\u7ebf\u975e\u5e38\u63a5\u8fd1\uff0c\u540c\u65f6\u8bef\u5dee\u503c\u975e\u5e38\u5927\u3002 \u63d0\u793a \u5982\u679c\u4f60\u7684\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u662f\u6b20\u62df\u5408\u7684\uff0c\u6dfb\u52a0\u66f4\u591a\u7684\u6837\u672c\u662f\u6ca1\u7528\u7684\u3002\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u6a21\u578b\u6216\u8005\u627e\u5230\u66f4\u597d\u7684\u7279\u5f81\u3002 \u73b0\u5728\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u5728\u76f8\u540c\u6570\u636e\u4e0a10\u9636\u591a\u9879\u5f0f\u6a21\u578b\u62df\u5408\u7684\u5b66\u4e60\u66f2\u7ebf\uff08\u56fe 4-16\uff09\uff1a from sklearn.pipeline import Pipeline polynomial_regression = Pipeline(( (\"poly_features\", PolynomialFeatures(degree=10, include_bias=False)), (\"sgd_reg\", LinearRegression()), )) plot_learning_curves(polynomial_regression, X, y) \u8fd9\u5e45\u56fe\u50cf\u548c\u4e4b\u524d\u7684\u6709\u4e00\u70b9\u70b9\u50cf\uff0c\u4f46\u662f\u5176\u6709\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4e0d\u540c\u70b9\uff1a \u5728\u8bad\u7ec3\u96c6\u4e0a\uff0c\u8bef\u5dee\u8981\u6bd4\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4f4e\u7684\u591a\u3002 \u56fe\u4e2d\u7684\u4e24\u6761\u66f2\u7ebf\u4e4b\u95f4\u6709\u95f4\u9694\uff0c\u8fd9\u610f\u5473\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u8868\u73b0\u8981\u6bd4\u9a8c\u8bc1\u96c6\u4e0a\u597d\u7684\u591a\uff0c\u8fd9\u4e5f\u662f\u6a21\u578b\u8fc7\u62df\u5408\u7684\u663e\u8457\u7279\u70b9\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u66f4\u5927\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u8fd9\u4e24\u6761\u66f2\u7ebf\u6700\u540e\u4f1a\u975e\u5e38\u7684\u63a5\u8fd1\u3002 \u56fe4-16\uff1a\u591a\u9879\u5f0f\u6a21\u578b\u7684\u5b66\u4e60\u66f2\u7ebf \u63d0\u793a \u6539\u5584\u6a21\u578b\u8fc7\u62df\u5408\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u63d0\u4f9b\u66f4\u591a\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u76f4\u5230\u8bad\u7ec3\u8bef\u5dee\u548c\u9a8c\u8bc1\u8bef\u5dee\u76f8\u7b49\u3002 \u504f\u5dee\u548c\u65b9\u5dee\u7684\u6743\u8861 \u5728\u7edf\u8ba1\u548c\u673a\u5668\u5b66\u4e60\u9886\u57df\u6709\u4e2a\u91cd\u8981\u7684\u7406\u8bba\uff1a\u4e00\u4e2a\u6a21\u578b\u7684\u6cdb\u5316\u8bef\u5dee\u7531\u4e09\u4e2a\u4e0d\u540c\u8bef\u5dee\u7684\u548c\u51b3\u5b9a\uff1a \u504f\u5dee\uff1a\u6cdb\u5316\u8bef\u5dee\u7684\u8fd9\u90e8\u5206\u8bef\u5dee\u662f\u7531\u4e8e\u9519\u8bef\u7684\u5047\u8bbe\u51b3\u5b9a\u7684\u3002\u4f8b\u5982\u5b9e\u9645\u662f\u4e00\u4e2a\u4e8c\u6b21\u6a21\u578b\uff0c\u4f60\u5374\u5047\u8bbe\u4e86\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u3002\u4e00\u4e2a\u9ad8\u504f\u5dee\u7684\u6a21\u578b\u6700\u5bb9\u6613\u51fa\u73b0\u6b20\u62df\u5408\u3002 \u65b9\u5dee\uff1a\u8fd9\u90e8\u5206\u8bef\u5dee\u662f\u7531\u4e8e\u6a21\u578b\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u5fae\u5c0f\u53d8\u5316\u8f83\u4e3a\u654f\u611f\uff0c\u4e00\u4e2a\u591a\u81ea\u7531\u5ea6\u7684\u6a21\u578b\u66f4\u5bb9\u6613\u6709\u9ad8\u7684\u65b9\u5dee\uff08\u4f8b\u5982\u4e00\u4e2a\u9ad8\u9636\u591a\u9879\u5f0f\u6a21\u578b\uff09\uff0c\u56e0\u6b64\u4f1a\u5bfc\u81f4\u6a21\u578b\u8fc7\u62df\u5408\u3002 \u4e0d\u53ef\u7ea6\u8bef\u5dee\uff1a\u8fd9\u90e8\u5206\u8bef\u5dee\u662f\u7531\u4e8e\u6570\u636e\u672c\u8eab\u7684\u566a\u58f0\u51b3\u5b9a\u7684\u3002\u964d\u4f4e\u8fd9\u90e8\u5206\u8bef\u5dee\u7684\u552f\u4e00\u65b9\u6cd5\u5c31\u662f\u8fdb\u884c\u6570\u636e\u6e05\u6d17\uff08\u4f8b\u5982\uff1a\u4fee\u590d\u6570\u636e\u6e90\uff0c\u4fee\u590d\u574f\u7684\u4f20\u611f\u5668\uff0c\u8bc6\u522b\u548c\u5254\u9664\u5f02\u5e38\u503c\uff09\u3002","title":"\u5b66\u4e60\u66f2\u7ebf"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_11","text":"\u6b63\u5982\u6211\u4eec\u5728\u7b2c\u4e00\u548c\u7b2c\u4e8c\u7ae0\u770b\u5230\u7684\u90a3\u6837\uff0c\u964d\u4f4e\u6a21\u578b\u7684\u8fc7\u62df\u5408\u7684\u597d\u65b9\u6cd5\u662f\u6b63\u5219\u5316\u8fd9\u4e2a\u6a21\u578b\uff08\u5373\u9650\u5236\u5b83\uff09\uff1a\u6a21\u578b\u6709\u8d8a\u5c11\u7684\u81ea\u7531\u5ea6\uff0c\u5c31\u8d8a\u96be\u4ee5\u62df\u5408\u6570\u636e\u3002\u4f8b\u5982\uff0c\u6b63\u5219\u5316\u4e00\u4e2a\u591a\u9879\u5f0f\u6a21\u578b\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u51cf\u5c11\u591a\u9879\u5f0f\u7684\u9636\u6570\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff0c\u6b63\u5219\u5316\u7684\u5178\u578b\u5b9e\u73b0\u5c31\u662f\u7ea6\u675f\u6a21\u578b\u4e2d\u53c2\u6570\u7684\u6743\u91cd\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e09\u79cd\u4e0d\u540c\u7ea6\u675f\u6743\u91cd\u7684\u65b9\u6cd5\uff1aRidge \u56de\u5f52\uff0cLasso \u56de\u5f52\u548c Elastic Net\u3002","title":"\u7ebf\u6027\u6a21\u578b\u7684\u6b63\u5219\u5316"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#ridge","text":"\u5cad\u56de\u5f52\uff08\u4e5f\u79f0\u4e3a Tikhonov \u6b63\u5219\u5316\uff09\u662f\u7ebf\u6027\u56de\u5f52\u7684\u6b63\u5219\u5316\u7248\uff1a\u5728\u635f\u5931\u51fd\u6570\u4e0a\u76f4\u63a5\u52a0\u4e0a\u4e00\u4e2a\u6b63\u5219\u9879 \u3002\u8fd9\u4f7f\u5f97\u5b66\u4e60\u7b97\u6cd5\u4e0d\u4ec5\u80fd\u591f\u62df\u5408\u6570\u636e\uff0c\u800c\u4e14\u80fd\u591f\u4f7f\u6a21\u578b\u7684\u53c2\u6570\u6743\u91cd\u5c3d\u91cf\u7684\u5c0f\u3002\u6ce8\u610f\u5230\u8fd9\u4e2a\u6b63\u5219\u9879\u53ea\u6709\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u624d\u4f1a\u88ab\u52a0\u5230\u635f\u5931\u51fd\u6570\u3002\u5f53\u5f97\u5230\u5b8c\u6210\u8bad\u7ec3\u7684\u6a21\u578b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u6ca1\u6709\u6b63\u5219\u5316\u7684\u6d4b\u91cf\u65b9\u6cd5\u53bb\u8bc4\u4ef7\u6a21\u578b\u7684\u8868\u73b0\u3002 \u63d0\u793a \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u4f7f\u7528\u7684\u635f\u5931\u51fd\u6570\u548c\u6d4b\u8bd5\u8fc7\u7a0b\u4f7f\u7528\u7684\u8bc4\u4ef7\u51fd\u6570\u662f\u4e0d\u4e00\u6837\u7684\u3002\u9664\u4e86\u6b63\u5219\u5316\uff0c\u8fd8\u6709\u4e00\u4e2a\u4e0d\u540c\uff1a\u8bad\u7ec3\u65f6\u7684\u635f\u5931\u51fd\u6570\u5e94\u8be5\u5728\u4f18\u5316\u8fc7\u7a0b\u4e2d\u6613\u4e8e\u6c42\u5bfc\uff0c\u800c\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u8bc4\u4ef7\u51fd\u6570\u66f4\u5e94\u8be5\u63a5\u8fd1\u6700\u540e\u7684\u5ba2\u89c2\u8868\u73b0\u3002\u4e00\u4e2a\u597d\u7684\u4f8b\u5b50\uff1a\u5728\u5206\u7c7b\u8bad\u7ec3\u4e2d\u6211\u4eec\u4f7f\u7528\u5bf9\u6570\u635f\u5931\uff08\u9a6c\u4e0a\u6211\u4eec\u4f1a\u8ba8\u8bba\u5b83\uff09\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u4f46\u662f\u6211\u4eec\u5374\u4f7f\u7528\u7cbe\u786e\u7387/\u53ec\u56de\u7387\u6765\u4f5c\u4e3a\u5b83\u7684\u8bc4\u4ef7\u51fd\u6570\u3002 \u8d85\u53c2\u6570 \u51b3\u5b9a\u4e86\u4f60\u60f3\u6b63\u5219\u5316\u8fd9\u4e2a\u6a21\u578b\u7684\u5f3a\u5ea6\u3002\u5982\u679c \u90a3\u6b64\u65f6\u7684\u5cad\u56de\u5f52\u4fbf\u53d8\u4e3a\u4e86\u7ebf\u6027\u56de\u5f52\u3002\u5982\u679c \u975e\u5e38\u7684\u5927\uff0c\u6240\u6709\u7684\u6743\u91cd\u6700\u540e\u90fd\u63a5\u8fd1\u4e8e\u96f6\uff0c\u6700\u540e\u7ed3\u679c\u5c06\u662f\u4e00\u6761\u7a7f\u8fc7\u6570\u636e\u5e73\u5747\u503c\u7684\u6c34\u5e73\u76f4\u7ebf\u3002\u516c\u5f0f 4-8 \u662f\u5cad\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\uff1a \u516c\u5f0f 4-8\uff1a\u5cad\u56de\u5f52\u635f\u5931\u51fd\u6570 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u504f\u5dee \u662f\u6ca1\u6709\u88ab\u6b63\u5219\u5316\u7684\uff08\u7d2f\u52a0\u8fd0\u7b97\u7684\u5f00\u59cb\u662f \u800c\u4e0d\u662f \uff09\u3002\u5982\u6211\u5b9a\u4e49 \u4f5c\u4e3a\u7279\u5f81\u7684\u6743\u91cd\u5411\u91cf\uff08 \u5230 \uff09\uff0c\u90a3\u4e48\u6b63\u5219\u9879\u53ef\u4ee5\u7b80\u5199\u6210 \uff0c\u5176\u4e2d \u8868\u793a\u6743\u91cd\u5411\u91cf\u7684 \u8303\u6570\u3002\u5bf9\u4e8e\u68af\u5ea6\u4e0b\u964d\u6765\u8bf4\u4ec5\u4ec5\u5728\u5747\u65b9\u5dee\u68af\u5ea6\u5411\u91cf\uff08\u516c\u5f0f 4-6\uff09\u52a0\u4e0a\u4e00\u9879 \u3002 \u63d0\u793a \u5728\u4f7f\u7528\u5cad\u56de\u5f52\u524d\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u653e\u7f29\uff08\u53ef\u4ee5\u4f7f\u7528 StandardScaler \uff09\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u7b97\u6cd5\u5bf9\u4e8e\u8f93\u5165\u7279\u5f81\u7684\u6570\u503c\u5c3a\u5ea6\uff08scale\uff09\u975e\u5e38\u654f\u611f\u3002\u5927\u591a\u6570\u7684\u6b63\u5219\u5316\u6a21\u578b\u90fd\u662f\u8fd9\u6837\u7684\u3002 \u56fe 4-17 \u5c55\u793a\u4e86\u5728\u76f8\u540c\u7ebf\u6027\u6570\u636e\u4e0a\u4f7f\u7528\u4e0d\u540c \u503c\u7684\u5cad\u56de\u5f52\u6a21\u578b\u6700\u540e\u7684\u8868\u73b0\u3002\u5de6\u56fe\u4e2d\uff0c\u4f7f\u7528\u7b80\u5355\u7684\u5cad\u56de\u5f52\u6a21\u578b\uff0c\u6700\u540e\u5f97\u5230\u4e86\u7ebf\u6027\u7684\u9884\u6d4b\u3002\u53f3\u56fe\u4e2d\u7684\u6570\u636e\u9996\u5148\u4f7f\u7528 10 \u9636\u7684 PolynomialFearures \u8fdb\u884c\u6269\u5c55\uff0c\u7136\u540e\u4f7f\u7528 StandardScaler \u8fdb\u884c\u7f29\u653e\uff0c\u6700\u540e\u5c06\u5cad\u6a21\u578b\u5e94\u7528\u5728\u5904\u7406\u8fc7\u540e\u7684\u7279\u5f81\u4e0a\u3002\u8fd9\u5c31\u662f\u5e26\u6709\u5cad\u6b63\u5219\u9879\u7684\u591a\u9879\u5f0f\u56de\u5f52\u3002\u6ce8\u610f\u5f53 \u589e\u5927\u7684\u65f6\u5019\uff0c\u5bfc\u81f4\u9884\u6d4b\u66f2\u7ebf\u53d8\u5f97\u6241\u5e73\uff08\u5373\u5c11\u4e86\u6781\u7aef\u503c\uff0c\u591a\u4e86\u4e00\u822c\u503c\uff09\uff0c\u8fd9\u6837\u51cf\u5c11\u4e86\u6a21\u578b\u7684\u65b9\u5dee\uff0c\u5374\u589e\u52a0\u4e86\u6a21\u578b\u7684\u504f\u5dee\u3002 \u5bf9\u7ebf\u6027\u56de\u5f52\u6765\u8bf4\uff0c\u5bf9\u4e8e\u5cad\u56de\u5f52\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5c01\u95ed\u65b9\u7a0b\u53bb\u8ba1\u7b97\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u53bb\u5904\u7406\u3002\u5b83\u4eec\u7684\u7f3a\u70b9\u548c\u4f18\u70b9\u662f\u4e00\u6837\u7684\u3002\u516c\u5f0f 4-9 \u8868\u793a\u5c01\u95ed\u65b9\u7a0b\u7684\u89e3\uff08\u77e9\u9635 \u662f\u4e00\u4e2a\u9664\u4e86\u5de6\u4e0a\u89d2\u6709\u4e00\u4e2a \u7684 \u7684\u5355\u4f4d\u77e9\uff0c\u8fd9\u4e2a \u4ee3\u8868\u504f\u5dee\u9879\u3002\u8bd1\u8005\u6ce8\uff1a\u504f\u5dee \u4e0d\u88ab\u6b63\u5219\u5316\u7684\uff09\u3002 \u56fe 4-17\uff1a\u5cad\u56de\u5f52 \u516c\u5f0f 4-9\uff1a\u5cad\u56de\u5f52\u7684\u5c01\u95ed\u65b9\u7a0b\u7684\u89e3 \u4e0b\u9762\u662f\u5982\u4f55\u4f7f\u7528 Scikit-Learn \u6765\u8fdb\u884c\u5c01\u95ed\u65b9\u7a0b\u7684\u6c42\u89e3\uff08\u4f7f\u7528 Cholesky \u6cd5\u8fdb\u884c\u77e9\u9635\u5206\u89e3\u5bf9\u516c\u5f0f 4-9 \u8fdb\u884c\u53d8\u5f62\uff09: >>> from sklearn.linear_model import Ridge >>> ridge_reg = Ridge(alpha=1, solver=\"cholesky\") >>> ridge_reg.fit(X, y) >>> ridge_reg.predict([[1.5]]) array([[ 1.55071465]] \u4f7f\u7528\u968f\u673a\u68af\u5ea6\u6cd5\u8fdb\u884c\u6c42\u89e3\uff1a >>> sgd_reg = SGDRegressor(penalty=\"l2\") >>> sgd_reg.fit(X, y.ravel()) >>> sgd_reg.predict([[1.5]]) array([[ 1.13500145]]) penalty \u53c2\u6570\u6307\u7684\u662f\u6b63\u5219\u9879\u7684\u60e9\u7f5a\u7c7b\u578b\u3002\u6307\u5b9a\u201cl2\u201d\u8868\u660e\u4f60\u8981\u5728\u635f\u5931\u51fd\u6570\u4e0a\u6dfb\u52a0\u4e00\u9879\uff1a\u6743\u91cd\u5411\u91cf \u8303\u6570\u5e73\u65b9\u7684\u4e00\u534a\uff0c\u8fd9\u5c31\u662f\u7b80\u5355\u7684\u5cad\u56de\u5f52\u3002","title":"\u5cad\uff08Ridge\uff09\u56de\u5f52"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#lasso","text":"Lasso \u56de\u5f52\uff08\u4e5f\u79f0 Least Absolute Shrinkage\uff0c\u6216\u8005 Selection Operator Regression\uff09\u662f\u53e6\u4e00\u79cd\u6b63\u5219\u5316\u7248\u7684\u7ebf\u6027\u56de\u5f52\uff1a\u5c31\u50cf\u5cad\u56de\u5f52\u90a3\u6837\uff0c\u5b83\u4e5f\u5728\u635f\u5931\u51fd\u6570\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6b63\u5219\u5316\u9879\uff0c\u4f46\u662f\u5b83\u4f7f\u7528\u6743\u91cd\u5411\u91cf\u7684 \u8303\u6570\u800c\u4e0d\u662f\u6743\u91cd\u5411\u91cf \u8303\u6570\u5e73\u65b9\u7684\u4e00\u534a\u3002\uff08\u5982\u516c\u5f0f 4-10\uff09 \u516c\u5f0f 4-10\uff1aLasso \u56de\u5f52\u7684\u635f\u5931\u51fd\u6570 \u56fe 4-18 \u5c55\u793a\u4e86\u548c\u56fe 4-17 \u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u4ec5\u4ec5\u662f\u7528 Lasso \u6a21\u578b\u4ee3\u66ff\u4e86 Ridge \u6a21\u578b\uff0c\u540c\u65f6\u8c03\u5c0f\u4e86 \u7684\u503c\u3002 \u56fe 4-18\uff1aLasso\u56de\u5f52 Lasso \u56de\u5f52\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u5f81\u662f\u5b83\u503e\u5411\u4e8e\u5b8c\u5168\u6d88\u9664\u6700\u4e0d\u91cd\u8981\u7684\u7279\u5f81\u7684\u6743\u91cd\uff08\u5373\u5c06\u5b83\u4eec\u8bbe\u7f6e\u4e3a\u96f6\uff09\u3002\u4f8b\u5982\uff0c\u53f3\u56fe\u4e2d\u7684\u865a\u7ebf\u6240\u793a\uff08 \uff09\uff0c\u66f2\u7ebf\u770b\u8d77\u6765\u50cf\u4e00\u6761\u4e8c\u6b21\u66f2\u7ebf\uff0c\u800c\u4e14\u51e0\u4e4e\u662f\u7ebf\u6027\u7684\uff0c\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u7684\u9ad8\u9636\u591a\u9879\u7279\u5f81\u90fd\u88ab\u8bbe\u7f6e\u4e3a\u96f6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cLasso\u56de\u5f52\u81ea\u52a8\u7684\u8fdb\u884c\u7279\u5f81\u9009\u62e9\u540c\u65f6\u8f93\u51fa\u4e00\u4e2a\u7a00\u758f\u6a21\u578b\uff08\u5373\uff0c\u5177\u6709\u5f88\u5c11\u7684\u975e\u96f6\u6743\u91cd\uff09\u3002 \u4f60\u53ef\u4ee5\u4ece\u56fe 4-19 \u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff1a\u5728\u5de6\u4e0a\u89d2\u56fe\u4e2d\uff0c\u540e\u80cc\u666f\u7684\u7b49\u9ad8\u7ebf\uff08\u692d\u5706\uff09\u8868\u793a\u4e86\u6ca1\u6709\u6b63\u5219\u5316\u7684\u5747\u65b9\u5dee\u635f\u5931\u51fd\u6570\uff08 \uff09\uff0c\u767d\u8272\u7684\u5c0f\u5706\u5708\u8868\u793a\u5728\u5f53\u524d\u635f\u5931\u51fd\u6570\u4e0a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u8def\u5f84\u3002\u524d\u80cc\u666f\u7684\u7b49\u9ad8\u7ebf\uff08\u83f1\u5f62\uff09\u8868\u793a \u60e9\u7f5a\uff0c\u9ec4\u8272\u7684\u4e09\u89d2\u5f62\u8868\u793a\u4e86\u4ec5\u5728\u8fd9\u4e2a\u60e9\u7f5a\u4e0b\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u8def\u5f84\uff08 \uff09\u3002\u6ce8\u610f\u8def\u5f84\u7b2c\u4e00\u6b21\u662f\u5982\u4f55\u5230\u8fbe \uff0c\u7136\u540e\u5411\u4e0b\u6eda\u52a8\u76f4\u5230\u5b83\u5230\u8fbe \u3002\u5728\u53f3\u4e0a\u89d2\u56fe\u4e2d\uff0c\u7b49\u9ad8\u7ebf\u8868\u793a\u7684\u662f\u76f8\u540c\u635f\u5931\u51fd\u6570\u518d\u52a0\u4e0a\u4e00\u4e2a \u7684 \u60e9\u7f5a\u3002\u8fd9\u5e45\u56fe\u4e2d\uff0c\u5b83\u7684\u5168\u5c40\u6700\u5c0f\u503c\u5728 \u8fd9\u6839\u8f74\u4e0a\u3002\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u9996\u5148\u5230\u8fbe \uff0c\u7136\u540e\u5411\u4e0b\u6eda\u52a8\u76f4\u5230\u8fbe\u5230\u5168\u5c40\u6700\u5c0f\u503c\u3002 \u4e24\u4e2a\u5e95\u90e8\u56fe\u663e\u793a\u4e86\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u53ea\u662f\u4f7f\u7528\u4e86 \u60e9\u7f5a\u3002 \u89c4\u5219\u5316\u7684\u6700\u5c0f\u503c\u6bd4\u975e\u89c4\u8303\u5316\u7684\u6700\u5c0f\u503c\u66f4\u63a5\u8fd1\u4e8e \uff0c\u4f46\u6743\u91cd\u4e0d\u80fd\u5b8c\u5168\u6d88\u9664\u3002 \u56fe 4-19\uff1aRidge \u56de\u5f52\u548c Lasso \u56de\u5f52\u5bf9\u6bd4 \u63d0\u793a \u5728 Lasso \u635f\u5931\u51fd\u6570\u4e2d\uff0c\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u8def\u5f84\u8d8b\u5411\u4e0e\u5728\u4f4e\u8c37\u6709\u4e00\u4e2a\u53cd\u5f39\u3002\u8fd9\u662f\u56e0\u4e3a\u5728 \u65f6\u659c\u7387\u4f1a\u6709\u4e00\u4e2a\u7a81\u53d8\u3002\u4e3a\u4e86\u6700\u540e\u771f\u6b63\u6536\u655b\u5230\u5168\u5c40\u6700\u5c0f\u503c\uff0c\u4f60\u9700\u8981\u9010\u6e10\u7684\u964d\u4f4e\u5b66\u4e60\u7387\u3002 Lasso \u635f\u5931\u51fd\u6570\u5728 \u5904\u65e0\u6cd5\u8fdb\u884c\u5fae\u5206\u8fd0\u7b97\uff0c\u4f46\u662f\u68af\u5ea6\u4e0b\u964d\u5982\u679c\u4f60\u4f7f\u7528\u5b50\u68af\u5ea6\u5411\u91cf \u540e\u5b83\u53ef\u4ee5\u5728\u4efb\u4f55 \u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u8ba1\u7b97\u3002\u516c\u5f0f 4-11 \u662f\u5728 Lasso \u635f\u5931\u51fd\u6570\u4e0a\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u7684\u5b50\u68af\u5ea6\u5411\u91cf\u516c\u5f0f\u3002 \u516c\u5f0f 4-11\uff1aLasso \u56de\u5f52\u5b50\u68af\u5ea6\u5411\u91cf \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 Scikit-Learn \u7684 Lasso \u7c7b\u7684\u5c0f\u4f8b\u5b50\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 SGDRegressor(penalty=\"l1\") \u6765\u4ee3\u66ff\u5b83\u3002 >>> from sklearn.linear_model import Lasso >>> lasso_reg = Lasso(alpha=0.1) >>> lasso_reg.fit(X, y) >>> lasso_reg.predict([[1.5]]) array([ 1.53788174]","title":"Lasso \u56de\u5f52"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#elasticnet","text":"\u5f39\u6027\u7f51\u7edc\u4ecb\u4e8e Ridge \u56de\u5f52\u548c Lasso \u56de\u5f52\u4e4b\u95f4\u3002\u5b83\u7684\u6b63\u5219\u9879\u662f Ridge \u56de\u5f52\u548c Lasso \u56de\u5f52\u6b63\u5219\u9879\u7684\u7b80\u5355\u6df7\u5408\uff0c\u540c\u65f6\u4f60\u53ef\u4ee5\u63a7\u5236\u5b83\u4eec\u7684\u6df7\u5408\u7387 \uff0c\u5f53 \u65f6\uff0c\u5f39\u6027\u7f51\u7edc\u5c31\u662f Ridge \u56de\u5f52\uff0c\u5f53 \u65f6\uff0c\u5176\u5c31\u662f Lasso \u56de\u5f52\u3002\u5177\u4f53\u8868\u793a\u5982\u516c\u5f0f 4-12\u3002 \u516c\u5f0f 4-12\uff1a\u5f39\u6027\u7f51\u7edc\u635f\u5931\u51fd\u6570 \u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u9009\u62e9\u7ebf\u6027\u56de\u5f52\uff0c\u5cad\u56de\u5f52\uff0cLasso \u56de\u5f52\uff0c\u5f39\u6027\u7f51\u7edc\u5462\uff1f\u4e00\u822c\u6765\u8bf4\u6709\u4e00\u70b9\u6b63\u5219\u9879\u7684\u8868\u73b0\u66f4\u597d\uff0c\u56e0\u6b64\u901a\u5e38\u4f60\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u3002\u5cad\u56de\u5f52\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9996\u9009\u9879\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u7279\u5f81\u4ec5\u6709\u5c11\u6570\u662f\u771f\u6b63\u6709\u7528\u7684\uff0c\u4f60\u5e94\u8be5\u9009\u62e9 Lasso \u548c\u5f39\u6027\u7f51\u7edc\u3002\u5c31\u50cf\u6211\u4eec\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u5b83\u4e24\u80fd\u591f\u5c06\u65e0\u7528\u7279\u5f81\u7684\u6743\u91cd\u964d\u4e3a\u96f6\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5f39\u6027\u7f51\u7edc\u7684\u8868\u73b0\u8981\u6bd4 Lasso \u597d\uff0c\u56e0\u4e3a\u5f53\u7279\u5f81\u6570\u91cf\u6bd4\u6837\u672c\u7684\u6570\u91cf\u5927\u7684\u65f6\u5019\uff0c\u6216\u8005\u7279\u5f81\u4e4b\u95f4\u6709\u5f88\u5f3a\u7684\u76f8\u5173\u6027\u65f6\uff0cLasso \u53ef\u80fd\u4f1a\u8868\u73b0\u7684\u4e0d\u89c4\u5f8b\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 Scikit-Learn ElasticNet \uff08 l1_ratio \u6307\u7684\u5c31\u662f\u6df7\u5408\u7387 \uff09\u7684\u7b80\u5355\u6837\u672c\uff1a >>> from sklearn.linear_model import ElasticNet >>> elastic_net = ElasticNet(alpha=0.1, l1_ratio=0.5) >>> elastic_net.fit(X, y) >>> elastic_net.predict([[1.5]]) array([ 1.54333232])","title":"\u5f39\u6027\u7f51\u7edc\uff08ElasticNet\uff09"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#early-stopping","text":"\u5bf9\u4e8e\u8fed\u4ee3\u5b66\u4e60\u7b97\u6cd5\uff0c\u6709\u4e00\u79cd\u975e\u5e38\u7279\u6b8a\u7684\u6b63\u5219\u5316\u65b9\u6cd5\uff0c\u5c31\u50cf\u68af\u5ea6\u4e0b\u964d\u5728\u9a8c\u8bc1\u9519\u8bef\u8fbe\u5230\u6700\u5c0f\u503c\u65f6\u7acb\u5373\u505c\u6b62\u8bad\u7ec3\u90a3\u6837\u3002\u6211\u4eec\u79f0\u4e3a\u65e9\u671f\u505c\u6b62\u6cd5\u3002\u56fe 4-20 \u8868\u793a\u4f7f\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u6765\u8bad\u7ec3\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u6a21\u578b\uff08\u4e00\u4e2a\u9ad8\u9636\u591a\u9879\u5f0f\u56de\u5f52\u6a21\u578b\uff09\u3002\u968f\u7740\u8bad\u7ec3\u7684\u8fdb\u884c\uff0c\u7b97\u6cd5\u4e00\u76f4\u5b66\u4e60\uff0c\u5b83\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u9884\u6d4b\u8bef\u5dee\uff08RMSE\uff09\u81ea\u7136\u800c\u7136\u7684\u4e0b\u964d\u3002\u7136\u800c\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u9a8c\u8bc1\u8bef\u5dee\u505c\u6b62\u4e0b\u964d\uff0c\u5e76\u5f00\u59cb\u4e0a\u5347\u3002\u8fd9\u610f\u5473\u7740\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u5f00\u59cb\u51fa\u73b0\u8fc7\u62df\u5408\u3002\u4e00\u65e6\u9a8c\u8bc1\u9519\u8bef\u8fbe\u5230\u6700\u5c0f\u503c\uff0c\u4fbf\u63d0\u65e9\u505c\u6b62\u8bad\u7ec3\u3002\u8fd9\u79cd\u7b80\u5355\u6709\u6548\u7684\u6b63\u5219\u5316\u65b9\u6cd5\u88ab Geoffrey Hinton \u79f0\u4e3a\u201c\u5b8c\u7f8e\u7684\u514d\u8d39\u5348\u9910\u201d \u56fe 4-20\uff1a\u65e9\u671f\u505c\u6b62\u6cd5 \u63d0\u793a \u968f\u673a\u68af\u5ea6\u548c\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u4e0d\u662f\u5e73\u6ed1\u66f2\u7ebf\uff0c\u4f60\u53ef\u80fd\u5f88\u96be\u77e5\u9053\u5b83\u662f\u5426\u8fbe\u5230\u6700\u5c0f\u503c\u3002 \u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u53ea\u6709\u5728\u9a8c\u8bc1\u8bef\u5dee\u9ad8\u4e8e\u6700\u5c0f\u503c\u4e00\u6bb5\u65f6\u95f4\u540e\uff08\u4f60\u786e\u4fe1\u8be5\u6a21\u578b\u4e0d\u4f1a\u53d8\u5f97\u66f4\u597d\u4e86\uff09\uff0c\u624d\u505c\u6b62\uff0c\u4e4b\u540e\u5c06\u6a21\u578b\u53c2\u6570\u56de\u6eda\u5230\u9a8c\u8bc1\u8bef\u5dee\u6700\u5c0f\u503c\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u65e9\u671f\u505c\u6b62\u6cd5\u7684\u57fa\u7840\u5e94\u7528\uff1a from sklearn.base import clone sgd_reg = SGDRegressor(n_iter=1, warm_start=True, penalty=None,learning_rate=\"constant\", eta0=0.0005) minimum_val_error = float(\"inf\") best_epoch = None best_model = None for epoch in range(1000): sgd_reg.fit(X_train_poly_scaled, y_train) y_val_predict = sgd_reg.predict(X_val_poly_scaled) val_error = mean_squared_error(y_val_predict, y_val) if val_error < minimum_val_error: minimum_val_error = val_error best_epoch = epoch best_model = clone(sgd_reg) \u6ce8\u610f\uff1a\u5f53 warm_start=True \u65f6\uff0c\u8c03\u7528 fit() \u65b9\u6cd5\u540e\uff0c\u8bad\u7ec3\u4f1a\u4ece\u505c\u4e0b\u6765\u7684\u5730\u65b9\u7ee7\u7eed\uff0c\u800c\u4e0d\u662f\u4ece\u5934\u91cd\u65b0\u5f00\u59cb\u3002","title":"\u65e9\u671f\u505c\u6b62\u6cd5\uff08Early Stopping\uff09"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_12","text":"\u6b63\u5982\u6211\u4eec\u5728\u7b2c1\u7ae0\u4e2d\u8ba8\u8bba\u7684\u90a3\u6837\uff0c\u4e00\u4e9b\u56de\u5f52\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5206\u7c7b\uff08\u53cd\u4e4b\u4ea6\u7136\uff09\u3002 Logistic \u56de\u5f52\uff08\u4e5f\u79f0\u4e3a Logit \u56de\u5f52\uff09\u901a\u5e38\u7528\u4e8e\u4f30\u8ba1\u4e00\u4e2a\u5b9e\u4f8b\u5c5e\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7c7b\u522b\u7684\u6982\u7387\uff08\u4f8b\u5982\uff0c\u8fd9\u7535\u5b50\u90ae\u4ef6\u662f\u5783\u573e\u90ae\u4ef6\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\uff09\u3002 \u5982\u679c\u4f30\u8ba1\u7684\u6982\u7387\u5927\u4e8e 50%\uff0c\u90a3\u4e48\u6a21\u578b\u9884\u6d4b\u8fd9\u4e2a\u5b9e\u4f8b\u5c5e\u4e8e\u5f53\u524d\u7c7b\uff08\u79f0\u4e3a\u6b63\u7c7b\uff0c\u6807\u8bb0\u4e3a\u201c1\u201d\uff09\uff0c\u53cd\u4e4b\u9884\u6d4b\u5b83\u4e0d\u5c5e\u4e8e\u5f53\u524d\u7c7b\uff08\u5373\u5b83\u5c5e\u4e8e\u8d1f\u7c7b \uff0c\u6807\u8bb0\u4e3a\u201c0\u201d\uff09\u3002 \u8fd9\u6837\u4fbf\u6210\u4e3a\u4e86\u4e00\u4e2a\u4e8c\u5143\u5206\u7c7b\u5668\u3002","title":"\u903b\u8f91\u56de\u5f52"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_13","text":"\u90a3\u4e48\u5b83\u662f\u600e\u6837\u5de5\u4f5c\u7684\uff1f \u5c31\u50cf\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u4e00\u6837\uff0cLogistic \u56de\u5f52\u6a21\u578b\u8ba1\u7b97\u8f93\u5165\u7279\u5f81\u7684\u52a0\u6743\u548c\uff08\u52a0\u4e0a\u504f\u5dee\u9879\uff09\uff0c\u4f46\u5b83\u4e0d\u50cf\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u90a3\u6837\u76f4\u63a5\u8f93\u51fa\u7ed3\u679c\uff0c\u800c\u662f\u628a\u7ed3\u679c\u8f93\u5165 logistic() \u51fd\u6570\u8fdb\u884c\u4e8c\u6b21\u52a0\u5de5\u540e\u8fdb\u884c\u8f93\u51fa\uff08\u8be6\u89c1\u516c\u5f0f 4-13\uff09\u3002 \u516c\u5f0f 4-13\uff1a\u903b\u8f91\u56de\u5f52\u6a21\u578b\u7684\u6982\u7387\u4f30\u8ba1\uff08\u5411\u91cf\u5f62\u5f0f\uff09 Logistic \u51fd\u6570\uff08\u4e5f\u79f0\u4e3a logit\uff09\uff0c\u7528 \u8868\u793a\uff0c\u5176\u662f\u4e00\u4e2a sigmoid \u51fd\u6570\uff08\u56fe\u50cf\u5448 S \u578b\uff09\uff0c\u5b83\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u4ecb\u4e8e 0 \u548c 1 \u4e4b\u95f4\u7684\u6570\u5b57\u3002\u5176\u5b9a\u4e49\u5982\u516c\u5f0f 4-14 \u548c\u56fe 4-21 \u6240\u793a\u3002 \u516c\u5f0f 4-14\uff1a\u903b\u8f91\u51fd\u6570 \u56fe4-21\uff1a\u903b\u8f91\u51fd\u6570 \u4e00\u65e6 Logistic \u56de\u5f52\u6a21\u578b\u4f30\u8ba1\u5f97\u5230\u4e86 \u5c5e\u4e8e\u6b63\u7c7b\u7684\u6982\u7387 \uff0c\u90a3\u5b83\u5f88\u5bb9\u6613\u5f97\u5230\u9884\u6d4b\u7ed3\u679c \uff08\u89c1\u516c\u5f0f 4-15\uff09\u3002 \u516c\u5f0f 4-15\uff1a\u903b\u8f91\u56de\u5f52\u9884\u6d4b\u6a21\u578b \u6ce8\u610f\u5f53 \u65f6 \uff0c\u5f53 \u65f6 \uff0c\u56e0\u6b64\u5f53 \u662f\u6b63\u6570\u7684\u8bdd\uff0c\u903b\u8f91\u56de\u5f52\u6a21\u578b\u8f93\u51fa 1\uff0c\u5982\u679c\u5b83\u662f\u8d1f\u6570\u7684\u8bdd\uff0c\u5219\u8f93\u51fa 0\u3002","title":"\u6982\u7387\u4f30\u8ba1"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_14","text":"\u597d\uff0c\u73b0\u5728\u4f60\u77e5\u9053\u4e86 Logistic \u56de\u5f52\u6a21\u578b\u5982\u4f55\u4f30\u8ba1\u6982\u7387\u5e76\u8fdb\u884c\u9884\u6d4b\u3002 \u4f46\u662f\u5b83\u662f\u5982\u4f55\u8bad\u7ec3\u7684\uff1f \u8bad\u7ec3\u7684\u76ee\u7684\u662f\u8bbe\u7f6e\u53c2\u6570\u5411\u91cf \uff0c\u4f7f\u5f97\u6b63\u4f8b\uff08 \uff09\u6982\u7387\u589e\u5927\uff0c\u8d1f\u4f8b\uff08 \uff09\u7684\u6982\u7387\u51cf\u5c0f\uff0c\u5176\u901a\u8fc7\u5728\u5355\u4e2a\u8bad\u7ec3\u5b9e\u4f8b \u7684\u635f\u5931\u51fd\u6570\u6765\u5b9e\u73b0\uff08\u516c\u5f0f 4-16\uff09\u3002 \u516c\u5f0f 4-16\uff1a\u5355\u4e2a\u6837\u672c\u7684\u635f\u5931\u51fd\u6570 \u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u662f\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u5f53 \u63a5\u8fd1 0 \u65f6\uff0c \u53d8\u5f97\u975e\u5e38\u5927\uff0c\u6240\u4ee5\u5982\u679c\u6a21\u578b\u4f30\u8ba1\u4e00\u4e2a\u6b63\u4f8b\u6982\u7387\u63a5\u8fd1\u4e8e 0\uff0c\u90a3\u4e48\u635f\u5931\u51fd\u6570\u5c06\u4f1a\u5f88\u5927\uff0c\u540c\u65f6\u5982\u679c\u6a21\u578b\u4f30\u8ba1\u4e00\u4e2a\u8d1f\u4f8b\u7684\u6982\u7387\u63a5\u8fd1 1\uff0c\u90a3\u4e48\u635f\u5931\u51fd\u6570\u540c\u6837\u4f1a\u5f88\u5927\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5f53 \u63a5\u8fd1\u4e8e 1 \u65f6\uff0c \u63a5\u8fd1 0\uff0c\u6240\u4ee5\u5982\u679c\u6a21\u578b\u4f30\u8ba1\u4e00\u4e2a\u6b63\u4f8b\u6982\u7387\u63a5\u8fd1\u4e8e 0\uff0c\u90a3\u4e48\u635f\u5931\u51fd\u6570\u63a5\u8fd1\u4e8e 0\uff0c\u540c\u65f6\u5982\u679c\u6a21\u578b\u4f30\u8ba1\u4e00\u4e2a\u8d1f\u4f8b\u7684\u6982\u7387\u63a5\u8fd1 0\uff0c\u90a3\u4e48\u635f\u5931\u51fd\u6570\u540c\u6837\u4f1a\u63a5\u8fd1\u4e8e 0\uff0c \u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u7684\u3002 \u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u635f\u5931\u51fd\u6570\u53ea\u662f\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u7684\u5e73\u5747\u503c\u3002\u53ef\u4ee5\u7528\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u8bc1\u660e\uff09\u6765\u7edf\u4e00\u8868\u793a\uff0c\u79f0\u4e3a\u5bf9\u6570\u635f\u5931\uff0c\u5982\u516c\u5f0f 4-17 \u6240\u793a\u3002 \u516c\u5f0f 4-17\uff1a\u903b\u8f91\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\uff08\u5bf9\u6570\u635f\u5931\uff09 \u4f46\u662f\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u6c42\u89e3\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u7684 \u662f\u6ca1\u6709\u516c\u5f0f\u89e3\u7684\uff08\u6ca1\u6709\u7b49\u4ef7\u7684\u6b63\u6001\u65b9\u7a0b\uff09\u3002 \u4f46\u597d\u6d88\u606f\u662f\uff0c\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u662f\u51f8\u7684\uff0c\u6240\u4ee5\u68af\u5ea6\u4e0b\u964d\uff08\u6216\u4efb\u4f55\u5176\u4ed6\u4f18\u5316\u7b97\u6cd5\uff09\u4e00\u5b9a\u80fd\u591f\u627e\u5230\u5168\u5c40\u6700\u5c0f\u503c\uff08\u5982\u679c\u5b66\u4e60\u901f\u7387\u4e0d\u662f\u592a\u5927\uff0c\u5e76\u4e14\u4f60\u7b49\u5f85\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff09\u3002\u516c\u5f0f 4-18 \u7ed9\u51fa\u4e86\u635f\u5931\u51fd\u6570\u5173\u4e8e\u7b2c \u4e2a\u6a21\u578b\u53c2\u6570 \u7684\u504f\u5bfc\u6570\u3002 \u516c\u5f0f 4-18\uff1a\u903b\u8f91\u56de\u5f52\u635f\u5931\u51fd\u6570\u7684\u504f\u5bfc\u6570 \u8fd9\u4e2a\u516c\u5f0f\u770b\u8d77\u6765\u975e\u5e38\u50cf\u516c\u5f0f 4-5\uff1a\u9996\u5148\u8ba1\u7b97\u6bcf\u4e2a\u6837\u672c\u7684\u9884\u6d4b\u8bef\u5dee\uff0c\u7136\u540e\u8bef\u5dee\u9879\u4e58\u4ee5\u7b2c \u9879\u7279\u5f81\u503c\uff0c\u6700\u540e\u6c42\u51fa\u6240\u6709\u8bad\u7ec3\u6837\u672c\u7684\u5e73\u5747\u503c\u3002 \u4e00\u65e6\u4f60\u6709\u4e86\u5305\u542b\u6240\u6709\u7684\u504f\u5bfc\u6570\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u4f60\u4fbf\u53ef\u4ee5\u5728\u68af\u5ea6\u5411\u91cf\u4e0a\u4f7f\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u3002 \u4e5f\u5c31\u662f\u8bf4\uff1a\u4f60\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u8bad\u7ec3 Logistic \u56de\u5f52\u6a21\u578b\u3002 \u5bf9\u4e8e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u4f60\u5f53\u7136\u53ea\u9700\u8981\u6bcf\u4e00\u6b21\u4f7f\u7528\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5bf9\u4e8e\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff0c\u4f60\u5c06\u6bcf\u4e00\u6b21\u4f7f\u7528\u4e00\u4e2a\u5c0f\u578b\u5b9e\u4f8b\u96c6\u3002","title":"\u8bad\u7ec3\u548c\u635f\u5931\u51fd\u6570"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_15","text":"\u6211\u4eec\u4f7f\u7528\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u6765\u5206\u6790 Logistic \u56de\u5f52\u3002 \u8fd9\u662f\u4e00\u4e2a\u8457\u540d\u7684\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u5305\u542b 150 \u6735\u4e09\u79cd\u4e0d\u540c\u7684\u9e22\u5c3e\u82b1\u7684\u843c\u7247\u548c\u82b1\u74e3\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u3002\u8fd9\u4e09\u79cd\u9e22\u5c3e\u82b1\u4e3a\uff1aSetosa\uff0cVersicolor\uff0cVirginica\uff08\u5982\u56fe 4-22\uff09\u3002 \u56fe4-22\uff1a\u4e09\u79cd\u4e0d\u540c\u7684\u9e22\u5c3e\u82b1 \u8ba9\u6211\u4eec\u5c1d\u8bd5\u5efa\u7acb\u4e00\u4e2a\u5206\u7c7b\u5668\uff0c\u4ec5\u4ec5\u4f7f\u7528\u82b1\u74e3\u7684\u5bbd\u5ea6\u7279\u5f81\u6765\u8bc6\u522b Virginica\uff0c\u9996\u5148\u8ba9\u6211\u4eec\u52a0\u8f7d\u6570\u636e\uff1a >>> from sklearn import datasets >>> iris = datasets.load_iris() >>> list(iris.keys()) ['data', 'target_names', 'feature_names', 'target', 'DESCR'] >>> X = iris[\"data\"][:, 3:] # petal width >>> y = (iris[\"target\"] == 2).astype(np.int) \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a\u903b\u8f91\u56de\u5f52\u6a21\u578b\uff1a from sklearn.linear_model import LogisticRegression log_reg = LogisticRegression() log_reg.fit(X, y) \u6211\u4eec\u6765\u770b\u770b\u6a21\u578b\u4f30\u8ba1\u7684\u82b1\u74e3\u5bbd\u5ea6\u4ece 0 \u5230 3 \u5398\u7c73\u7684\u6982\u7387\u4f30\u8ba1\uff08\u5982\u56fe 4-23\uff09\uff1a X_new = np.linspace(0, 3, 1000).reshape(-1, 1) y_proba = log_reg.predict_proba(X_new) plt.plot(X_new, y_proba[:, 1], \"g-\", label=\"Iris-Virginica\") plt.plot(X_new, y_proba[:, 0], \"b--\", label=\"Not Iris-Virginica\") \u56fe 4-23\uff1a\u6982\u7387\u4f30\u8ba1\u548c\u51b3\u7b56\u8fb9\u754c Virginica \u82b1\u7684\u82b1\u74e3\u5bbd\u5ea6\uff08\u7528\u4e09\u89d2\u5f62\u8868\u793a\uff09\u5728 1.4 \u5398\u7c73\u5230 2.5 \u5398\u7c73\u4e4b\u95f4\uff0c\u800c\u5176\u4ed6\u79cd\u7c7b\u7684\u82b1\uff08\u7531\u6b63\u65b9\u5f62\u8868\u793a\uff09\u901a\u5e38\u5177\u6709\u8f83\u5c0f\u7684\u82b1\u74e3\u5bbd\u5ea6\uff0c\u8303\u56f4\u4ece 0.1 \u5398\u7c73\u5230 1.8 \u5398\u7c73\u3002\u6ce8\u610f\uff0c\u5b83\u4eec\u4e4b\u95f4\u4f1a\u6709\u4e00\u4e9b\u91cd\u53e0\u3002\u5728\u5927\u7ea6 2 \u5398\u7c73\u4ee5\u4e0a\u65f6\uff0c\u5206\u7c7b\u5668\u975e\u5e38\u80af\u5b9a\u8fd9\u6735\u82b1\u662fVirginica\u82b1\uff08\u5206\u7c7b\u5668\u6b64\u65f6\u8f93\u51fa\u4e00\u4e2a\u975e\u5e38\u9ad8\u7684\u6982\u7387\u503c\uff09\uff0c\u800c\u57281\u5398\u7c73\u4ee5\u4e0b\u65f6\uff0c\u5b83\u975e\u5e38\u80af\u5b9a\u8fd9\u6735\u82b1\u4e0d\u662f Virginica \u82b1\uff08\u4e0d\u662f Virginica \u82b1\u6709\u975e\u5e38\u9ad8\u7684\u6982\u7387\uff09\u3002\u5728\u8fd9\u4e24\u4e2a\u6781\u7aef\u4e4b\u95f4\uff0c\u5206\u7c7b\u5668\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u5b83\u8fdb\u884c\u9884\u6d4b\uff08\u4f7f\u7528 predict() \u65b9\u6cd5\u800c\u4e0d\u662f predict_proba() \u65b9\u6cd5\uff09\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u6700\u53ef\u80fd\u7684\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u5728 1.6 \u5398\u7c73\u5de6\u53f3\u5b58\u5728\u4e00\u4e2a\u51b3\u7b56\u8fb9\u754c\uff0c\u8fd9\u65f6\u4e24\u7c7b\u60c5\u51b5\u51fa\u73b0\u7684\u6982\u7387\u90fd\u7b49\u4e8e 50%\uff1a\u5982\u679c\u82b1\u74e3\u5bbd\u5ea6\u5927\u4e8e 1.6 \u5398\u7c73\uff0c\u5219\u5206\u7c7b\u5668\u5c06\u9884\u6d4b\u8be5\u82b1\u662f Virginica\uff0c\u5426\u5219\u9884\u6d4b\u5b83\u4e0d\u662f\uff08\u5373\u4f7f\u5b83\u6709\u53ef\u80fd\u9519\u4e86\uff09\uff1a >>> log_reg.predict([[1.7], [1.5]]) array([1, 0]) \u56fe 4-24 \u8868\u793a\u76f8\u540c\u7684\u6570\u636e\u96c6\uff0c\u4f46\u662f\u8fd9\u6b21\u4f7f\u7528\u4e86\u4e24\u4e2a\u7279\u5f81\u8fdb\u884c\u5224\u65ad\uff1a\u82b1\u74e3\u7684\u5bbd\u5ea6\u548c\u957f\u5ea6\u3002 \u4e00\u65e6\u8bad\u7ec3\u5b8c\u6bd5\uff0cLogistic \u56de\u5f52\u5206\u7c7b\u5668\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e24\u4e2a\u7279\u5f81\u6765\u4f30\u8ba1\u4e00\u6735\u82b1\u662f Virginica \u7684\u53ef\u80fd\u6027\u3002 \u865a\u7ebf\u8868\u793a\u8fd9\u65f6\u4e24\u7c7b\u60c5\u51b5\u51fa\u73b0\u7684\u6982\u7387\u90fd\u7b49\u4e8e 50%\uff1a\u8fd9\u662f\u6a21\u578b\u7684\u51b3\u7b56\u8fb9\u754c\u3002 \u8bf7\u6ce8\u610f\uff0c\u5b83\u662f\u4e00\u4e2a\u7ebf\u6027\u8fb9\u754c\u3002\u6bcf\u6761\u5e73\u884c\u7ebf\u90fd\u4ee3\u8868\u4e00\u4e2a\u5206\u7c7b\u6807\u51c6\u4e0b\u7684\u4e24\u4e24\u4e2a\u4e0d\u540c\u7c7b\u7684\u6982\u7387\uff0c\u4ece 15%\uff08\u5de6\u4e0b\u89d2\uff09\u5230 90%\uff08\u53f3\u4e0a\u89d2\uff09\u3002\u8d8a\u8fc7\u53f3\u4e0a\u89d2\u5206\u754c\u7ebf\u7684\u70b9\u90fd\u6709\u8d85\u8fc7 90% \u7684\u6982\u7387\u662f Virginica \u82b1\u3002 \u56fe 4-24\uff1a\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c \u5c31\u50cf\u5176\u4ed6\u7ebf\u6027\u6a21\u578b\uff0c\u903b\u8f91\u56de\u5f52\u6a21\u578b\u4e5f\u53ef\u4ee5 \u6216\u8005 \u60e9\u7f5a\u4f7f\u7528\u8fdb\u884c\u6b63\u5219\u5316\u3002Scikit-Learn \u9ed8\u8ba4\u6dfb\u52a0\u4e86 \u60e9\u7f5a\u3002 \u6ce8\u610f \u5728 Scikit-Learn \u7684 LogisticRegression \u6a21\u578b\u4e2d\u63a7\u5236\u6b63\u5219\u5316\u5f3a\u5ea6\u7684\u8d85\u53c2\u6570\u4e0d\u662f \uff08\u4e0e\u5176\u4ed6\u7ebf\u6027\u6a21\u578b\u4e00\u6837\uff09\uff0c\u800c\u662f\u5b83\u7684\u9006\uff1a \u3002 \u7684\u503c\u8d8a\u5927\uff0c\u6a21\u578b\u6b63\u5219\u5316\u5f3a\u5ea6\u8d8a\u4f4e\u3002","title":"\u51b3\u7b56\u8fb9\u754c"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#softmax","text":"Logistic \u56de\u5f52\u6a21\u578b\u53ef\u4ee5\u76f4\u63a5\u63a8\u5e7f\u5230\u652f\u6301\u591a\u7c7b\u522b\u5206\u7c7b\uff0c\u4e0d\u5fc5\u7ec4\u5408\u548c\u8bad\u7ec3\u591a\u4e2a\u4e8c\u5206\u7c7b\u5668\uff08\u5982\u7b2c 3 \u7ae0\u6240\u8ff0\uff09\uff0c \u5176\u79f0\u4e3a Softmax \u56de\u5f52\u6216\u591a\u7c7b\u522b Logistic \u56de\u5f52\u3002 \u8fd9\u4e2a\u60f3\u6cd5\u5f88\u7b80\u5355\uff1a\u5f53\u7ed9\u5b9a\u4e00\u4e2a\u5b9e\u4f8b \u65f6\uff0cSoftmax \u56de\u5f52\u6a21\u578b\u9996\u5148\u8ba1\u7b97 \u7c7b\u7684\u5206\u6570 \uff0c\u7136\u540e\u5c06\u5206\u6570\u5e94\u7528\u5728 Softmax \u51fd\u6570\uff08\u4e5f\u79f0\u4e3a\u5f52\u4e00\u5316\u6307\u6570\uff09\u4e0a\uff0c\u4f30\u8ba1\u51fa\u6bcf\u7c7b\u7684\u6982\u7387\u3002 \u8ba1\u7b97 \u7684\u516c\u5f0f\u770b\u8d77\u6765\u5f88\u719f\u6089\uff0c\u56e0\u4e3a\u5b83\u5c31\u50cf\u7ebf\u6027\u56de\u5f52\u9884\u6d4b\u7684\u516c\u5f0f\u4e00\u6837\uff08\u89c1\u516c\u5f0f 4-19\uff09\u3002 \u516c\u5f0f 4-19\uff1a k \u7c7b\u7684 Softmax \u5f97\u5206 \u6ce8\u610f\uff0c\u6bcf\u4e2a\u7c7b\u90fd\u6709\u81ea\u5df1\u72ec\u4e00\u65e0\u4e8c\u7684\u53c2\u6570\u5411\u91cf \u3002 \u6240\u6709\u8fd9\u4e9b\u5411\u91cf\u901a\u5e38\u4f5c\u4e3a\u884c\u653e\u5728\u53c2\u6570\u77e9\u9635 \u4e2d\u3002 \u4e00\u65e6\u4f60\u8ba1\u7b97\u4e86\u6837\u672c \u7684\u6bcf\u4e00\u7c7b\u7684\u5f97\u5206\uff0c\u4f60\u4fbf\u53ef\u4ee5\u901a\u8fc7 Softmax \u51fd\u6570\uff08\u516c\u5f0f 4-20\uff09\u4f30\u8ba1\u51fa\u6837\u672c\u5c5e\u4e8e\u7b2c \u7c7b\u7684\u6982\u7387 \uff1a\u901a\u8fc7\u8ba1\u7b97 \u7684 \u6b21\u65b9\uff0c\u7136\u540e\u5bf9\u5b83\u4eec\u8fdb\u884c\u5f52\u4e00\u5316\uff08\u9664\u4ee5\u6240\u6709\u5206\u5b50\u7684\u603b\u548c\uff09\u3002 \u516c\u5f0f 4-20\uff1aSoftmax \u51fd\u6570 \u8868\u793a\u6709\u591a\u5c11\u7c7b \u8868\u793a\u5305\u542b\u6837\u672c \u6bcf\u4e00\u7c7b\u5f97\u5206\u7684\u5411\u91cf \u8868\u793a\u7ed9\u5b9a\u6bcf\u4e00\u7c7b\u5206\u6570\u4e4b\u540e\uff0c\u5b9e\u4f8b \u5c5e\u4e8e\u7b2c \u7c7b\u7684\u6982\u7387 \u548c Logistic \u56de\u5f52\u5206\u7c7b\u5668\u4e00\u6837\uff0cSoftmax \u56de\u5f52\u5206\u7c7b\u5668\u5c06\u4f30\u8ba1\u6982\u7387\u6700\u9ad8\uff08\u5b83\u53ea\u662f\u5f97\u5206\u6700\u9ad8\u7684\u7c7b\uff09\u7684\u90a3\u7c7b\u4f5c\u4e3a\u9884\u6d4b\u7ed3\u679c\uff0c\u5982\u516c\u5f0f 4-21 \u6240\u793a\u3002 \u516c\u5f0f 4-21\uff1aSoftmax \u56de\u5f52\u6a21\u578b\u5206\u7c7b\u5668\u9884\u6d4b\u7ed3\u679c argmax \u8fd0\u7b97\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u53d6\u5230\u6700\u5927\u503c\u7684\u53d8\u91cf\u503c\u3002 \u5728\u8fd9\u4e2a\u7b49\u5f0f\uff0c\u5b83\u8fd4\u56de\u4f7f \u6700\u5927\u65f6\u7684 \u7684\u503c \u6ce8\u610f Softmax \u56de\u5f52\u5206\u7c7b\u5668\u4e00\u6b21\u53ea\u80fd\u9884\u6d4b\u4e00\u4e2a\u7c7b\uff08\u5373\u5b83\u662f\u591a\u7c7b\u7684\uff0c\u4f46\u4e0d\u662f\u591a\u8f93\u51fa\u7684\uff09\uff0c\u56e0\u6b64\u5b83\u53ea\u80fd\u7528\u4e8e\u5224\u65ad\u4e92\u65a5\u7684\u7c7b\u522b\uff0c\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u690d\u7269\u3002 \u4f60\u4e0d\u80fd\u7528\u5b83\u6765\u8bc6\u522b\u4e00\u5f20\u7167\u7247\u4e2d\u7684\u591a\u4e2a\u4eba\u3002 \u73b0\u5728\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u6a21\u578b\u5982\u4f55\u4f30\u8ba1\u6982\u7387\u5e76\u8fdb\u884c\u9884\u6d4b\uff0c\u63a5\u4e0b\u6765\u5c06\u4ecb\u7ecd\u5982\u4f55\u8bad\u7ec3\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u5efa\u7acb\u4e00\u4e2a\u6a21\u578b\u5728\u76ee\u6807\u7c7b\u522b\u4e0a\u6709\u7740\u8f83\u9ad8\u7684\u6982\u7387\uff08\u56e0\u6b64\u5176\u4ed6\u7c7b\u522b\u7684\u6982\u7387\u8f83\u4f4e\uff09\uff0c\u6700\u5c0f\u5316\u516c\u5f0f 4-22 \u53ef\u4ee5\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\uff0c\u5176\u8868\u793a\u4e86\u5f53\u524d\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\uff0c\u79f0\u4e3a\u4ea4\u53c9\u71b5\uff0c\u5f53\u6a21\u578b\u5bf9\u76ee\u6807\u7c7b\u5f97\u51fa\u4e86\u4e00\u4e2a\u8f83\u4f4e\u7684\u6982\u7387\uff0c\u5176\u4f1a\u60e9\u7f5a\u8fd9\u4e2a\u6a21\u578b\u3002 \u4ea4\u53c9\u71b5\u901a\u5e38\u7528\u4e8e\u8861\u91cf\u5f85\u6d4b\u7c7b\u522b\u4e0e\u76ee\u6807\u7c7b\u522b\u7684\u5339\u914d\u7a0b\u5ea6\uff08\u6211\u4eec\u5c06\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u591a\u6b21\u4f7f\u7528\u5b83\uff09 \u516c\u5f0f 4-22\uff1a\u4ea4\u53c9\u71b5 \u5982\u679c\u5bf9\u4e8e\u7b2c \u4e2a\u5b9e\u4f8b\u7684\u76ee\u6807\u7c7b\u662f \uff0c\u90a3\u4e48 \uff0c\u53cd\u4e4b \u3002 \u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u53ea\u6709\u4e24\u4e2a\u7c7b\uff08 \uff09\u65f6\uff0c\u6b64\u635f\u5931\u51fd\u6570\u7b49\u540c\u4e8e Logistic \u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\uff08\u5bf9\u6570\u635f\u5931\uff1b\u8bf7\u53c2\u9605\u516c\u5f0f 4-17\uff09\u3002 \u4ea4\u53c9\u71b5 \u4ea4\u53c9\u71b5\u6e90\u4e8e\u4fe1\u606f\u8bba\u3002\u5047\u8bbe\u4f60\u60f3\u8981\u9ad8\u6548\u5730\u4f20\u8f93\u6bcf\u5929\u7684\u5929\u6c14\u4fe1\u606f\u3002\u5982\u679c\u6709\u516b\u4e2a\u9009\u9879\uff08\u6674\u5929\uff0c\u96e8\u5929\u7b49\uff09\uff0c\u5219\u53ef\u4ee5\u4f7f\u75283\u4f4d\u5bf9\u6bcf\u4e2a\u9009\u9879\u8fdb\u884c\u7f16\u7801\uff0c\u56e0\u4e3a \u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u51e0\u4e4e\u6bcf\u5929\u90fd\u662f\u6674\u5929\uff0c\u66f4\u9ad8\u6548\u7684\u7f16\u7801\u201c\u6674\u5929\u201d\u7684\u65b9\u5f0f\u662f\uff1a\u53ea\u7528\u4e00\u4f4d\uff080\uff09\u3002\u5269\u4e0b\u7684\u4e03\u9879\u4f7f\u7528\u56db\u4f4d\uff08\u4ece 1 \u5f00\u59cb\uff09\u3002\u4ea4\u53c9\u71b5\u5ea6\u91cf\u6bcf\u4e2a\u9009\u9879\u5b9e\u9645\u53d1\u9001\u7684\u5e73\u5747\u6bd4\u7279\u6570\u3002 \u5982\u679c\u4f60\u5bf9\u5929\u6c14\u7684\u5047\u8bbe\u662f\u5b8c\u7f8e\u7684\uff0c\u4ea4\u53c9\u71b5\u5c31\u7b49\u4e8e\u5929\u6c14\u672c\u8eab\u7684\u71b5\uff08\u5373\u5176\u5185\u90e8\u7684\u4e0d\u786e\u5b9a\u6027\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4f60\u7684\u5047\u8bbe\u662f\u9519\u8bef\u7684\uff08\u4f8b\u5982\uff0c\u5982\u679c\u7ecf\u5e38\u4e0b\u96e8\uff09\u4ea4\u53c9\u71b5\u5c06\u4f1a\u66f4\u5927\uff0c\u79f0\u4e3a Kullback-Leibler \u6563\u5ea6\uff08KL \u6563\u5ea6\uff09\u3002 \u4e24\u4e2a\u6982\u7387\u5206\u5e03 \u548c \u4e4b\u95f4\u7684\u4ea4\u53c9\u71b5\u5b9a\u4e49\u4e3a\uff1a \uff08\u5206\u5e03\u81f3\u5c11\u662f\u79bb\u6563\u7684\uff09 \u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u5173\u4e8e \u7684\u68af\u5ea6\u5411\u91cf\u4e3a\u516c\u5f0f 4-23\uff1a \u516c\u5f0f 4-23\uff1a k \u7c7b\u4ea4\u53c9\u71b5\u7684\u68af\u5ea6\u5411\u91cf \u73b0\u5728\u4f60\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e00\u7c7b\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u7136\u540e\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\uff08\u6216\u8005\u5176\u4ed6\u7684\u4f18\u5316\u7b97\u6cd5\uff09\u627e\u5230\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u8fbe\u5230\u6700\u5c0f\u503c\u7684\u53c2\u6570\u77e9\u9635 \u3002 \u8ba9\u6211\u4eec\u4f7f\u7528 Softmax \u56de\u5f52\u5bf9\u4e09\u79cd\u9e22\u5c3e\u82b1\u8fdb\u884c\u5206\u7c7b\u3002\u5f53\u4f60\u4f7f\u7528 LogisticRregression \u5bf9\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\u65f6\uff0cScikit Learn \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f\u4e00\u5bf9\u591a\u6a21\u578b\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u8bbe\u7f6e multi_class \u53c2\u6570\u4e3a\u201cmultinomial\u201d\u6765\u628a\u5b83\u6539\u53d8\u4e3a Softmax \u56de\u5f52\u3002\u4f60\u8fd8\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a\u652f\u6301 Softmax \u56de\u5f52\u7684\u6c42\u89e3\u5668\uff0c\u4f8b\u5982\u201clbfgs\u201d\u6c42\u89e3\u5668\uff08\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Scikit-Learn \u7684\u6587\u6863\uff09\u3002\u5176\u9ed8\u8ba4\u4f7f\u7528 \u6b63\u5219\u5316\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8d85\u53c2\u6570 \u63a7\u5236\u5b83\u3002 X = iris[\"data\"][:, (2, 3)] # petal length, petal width y = iris[\"target\"] softmax_reg = LogisticRegression(multi_class=\"multinomial\",solver=\"lbfgs\", C=10) softmax_reg.fit(X, y) \u6240\u4ee5\u4e0b\u6b21\u4f60\u53d1\u73b0\u4e00\u4e2a\u82b1\u74e3\u957f\u4e3a 5 \u5398\u7c73\uff0c\u5bbd\u4e3a 2 \u5398\u7c73\u7684\u9e22\u5c3e\u82b1\u65f6\uff0c\u4f60\u53ef\u4ee5\u95ee\u4f60\u7684\u6a21\u578b\u4f60\u5b83\u662f\u54ea\u4e00\u7c7b\u9e22\u5c3e\u82b1\uff0c\u5b83\u4f1a\u56de\u7b54 94.2% \u662f Virginica \u82b1\uff08\u7b2c\u4e8c\u7c7b\uff09\uff0c\u6216\u8005 5.8% \u662f\u5176\u4ed6\u9e22\u5c3e\u82b1\u3002 >>> softmax_reg.predict([[5, 2]]) array([2]) >>> softmax_reg.predict_proba([[5, 2]]) array([[ 6.33134078e-07, 5.75276067e-02, 9.42471760e-01]])\u662f \u56fe 4-25\uff1aSoftmax \u56de\u5f52\u7684\u51b3\u7b56\u8fb9\u754c \u56fe 4-25 \u7528\u4e0d\u540c\u80cc\u666f\u8272\u8868\u793a\u4e86\u7ed3\u679c\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u6ce8\u610f\uff0c\u4efb\u4f55\u4e24\u4e2a\u7c7b\u4e4b\u95f4\u7684\u51b3\u7b56\u8fb9\u754c\u662f\u7ebf\u6027\u7684\u3002 \u8be5\u56fe\u7684\u66f2\u7ebf\u8868\u793a Versicolor \u7c7b\u7684\u6982\u7387\uff08\u4f8b\u5982\uff0c\u7528 0.450 \u6807\u8bb0\u7684\u66f2\u7ebf\u8868\u793a 45% \u7684\u6982\u7387\u8fb9\u754c\uff09\u3002\u6ce8\u610f\u6a21\u578b\u4e5f\u53ef\u4ee5\u9884\u6d4b\u4e00\u4e2a\u6982\u7387\u4f4e\u4e8e 50% \u7684\u7c7b\u3002 \u4f8b\u5982\uff0c\u5728\u6240\u6709\u51b3\u7b56\u8fb9\u754c\u76f8\u9047\u7684\u5730\u65b9\uff0c\u6240\u6709\u7c7b\u7684\u4f30\u8ba1\u6982\u7387\u76f8\u7b49\uff0c\u5206\u522b\u4e3a 33%\u3002","title":"Softmax \u56de\u5f52"},{"location":"4.%E8%AE%AD%E7%BB%83%E6%A8%A1%E5%9E%8B/#_16","text":"\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u6570\u767e\u4e07\u7279\u5f81\u7684\u8bad\u7ec3\u96c6\uff0c\u4f60\u5e94\u8be5\u9009\u62e9\u54ea\u79cd\u7ebf\u6027\u56de\u5f52\u8bad\u7ec3\u7b97\u6cd5\uff1f \u5047\u8bbe\u4f60\u8bad\u7ec3\u96c6\u4e2d\u7279\u5f81\u7684\u6570\u503c\u5c3a\u5ea6\uff08scale\uff09\u6709\u7740\u975e\u5e38\u5927\u7684\u5dee\u5f02\uff0c\u54ea\u79cd\u7b97\u6cd5\u4f1a\u53d7\u5230\u5f71\u54cd\uff1f\u6709\u591a\u5927\u7684\u5f71\u54cd\uff1f\u5bf9\u4e8e\u8fd9\u4e9b\u5f71\u54cd\u4f60\u53ef\u4ee5\u505a\u4ec0\u4e48\uff1f \u8bad\u7ec3 Logistic \u56de\u5f52\u6a21\u578b\u65f6\uff0c\u68af\u5ea6\u4e0b\u964d\u662f\u5426\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u4f4e\u70b9\uff1f \u5728\u6709\u8db3\u591f\u7684\u8bad\u7ec3\u65f6\u95f4\u4e0b\uff0c\u662f\u5426\u6240\u6709\u7684\u68af\u5ea6\u4e0b\u964d\u90fd\u4f1a\u5f97\u5230\u76f8\u540c\u7684\u6a21\u578b\u53c2\u6570\uff1f \u5047\u8bbe\u4f60\u4f7f\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u6cd5\uff0c\u753b\u51fa\u6bcf\u4e00\u4ee3\u7684\u9a8c\u8bc1\u8bef\u5dee\u3002\u5f53\u4f60\u53d1\u73b0\u9a8c\u8bc1\u8bef\u5dee\u4e00\u76f4\u589e\u5927\uff0c\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f60\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f \u5f53\u9a8c\u8bc1\u8bef\u5dee\u5347\u9ad8\u65f6\uff0c\u7acb\u5373\u505c\u6b62\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u662f\u5426\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1f \u54ea\u4e2a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff08\u5728\u6211\u4eec\u8ba8\u8bba\u7684\u90a3\u4e9b\u7b97\u6cd5\u4e2d\uff09\u53ef\u4ee5\u6700\u5feb\u5230\u8fbe\u89e3\u7684\u9644\u8fd1\uff1f\u54ea\u4e2a\u7684\u786e\u5b9e\u4f1a\u6536\u655b\uff1f\u600e\u4e48\u4f7f\u5176\u4ed6\u7b97\u6cd5\u4e5f\u6536\u655b\uff1f \u5047\u8bbe\u4f60\u4f7f\u7528\u591a\u9879\u5f0f\u56de\u5f52\uff0c\u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u5728\u56fe\u4e0a\u53d1\u73b0\u5b66\u4e60\u8bef\u5dee\u548c\u9a8c\u8bc1\u8bef\u5dee\u4e4b\u95f4\u6709\u7740\u5f88\u5927\u7684\u95f4\u9699\u3002\u8fd9\u8868\u793a\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u6709\u54ea\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f \u5047\u8bbe\u4f60\u4f7f\u7528\u5cad\u56de\u5f52\uff0c\u5e76\u53d1\u73b0\u8bad\u7ec3\u8bef\u5dee\u548c\u9a8c\u8bc1\u8bef\u5dee\u90fd\u5f88\u9ad8\uff0c\u5e76\u4e14\u51e0\u4e4e\u76f8\u7b49\u3002\u4f60\u7684\u6a21\u578b\u8868\u73b0\u662f\u9ad8\u504f\u5dee\u8fd8\u662f\u9ad8\u65b9\u5dee\uff1f\u8fd9\u65f6\u4f60\u5e94\u8be5\u589e\u5927\u6b63\u5219\u5316\u53c2\u6570 \uff0c\u8fd8\u662f\u964d\u4f4e\u5b83\uff1f \u4f60\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\uff1a \u4f7f\u7528\u5cad\u56de\u5f52\u4ee3\u66ff\u7ebf\u6027\u56de\u5f52\uff1f Lasso \u56de\u5f52\u4ee3\u66ff\u5cad\u56de\u5f52\uff1f \u5f39\u6027\u7f51\u7edc\u4ee3\u66ff Lasso \u56de\u5f52\uff1f \u5047\u8bbe\u4f60\u60f3\u5224\u65ad\u4e00\u526f\u56fe\u7247\u662f\u5ba4\u5185\u8fd8\u662f\u5ba4\u5916\uff0c\u767d\u5929\u8fd8\u662f\u665a\u4e0a\u3002\u4f60\u5e94\u8be5\u9009\u62e9\u4e8c\u4e2a\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\uff0c\u8fd8\u662f\u4e00\u4e2a Softmax \u5206\u7c7b\u5668\uff1f \u5728 Softmax \u56de\u5f52\u4e0a\u5e94\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7684\u65e9\u671f\u505c\u6b62\u6cd5\uff08\u4e0d\u4f7f\u7528 Scikit-Learn\uff09\u3002 \u9644\u5f55 A \u63d0\u4f9b\u4e86\u8fd9\u4e9b\u7ec3\u4e60\u7684\u7b54\u6848\u3002","title":"\u7ec3\u4e60"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/","text":"\u4e94\u3001\u652f\u6301\u5411\u91cf\u673a \u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u662f\u4e2a\u975e\u5e38\u5f3a\u5927\u5e76\u4e14\u6709\u591a\u79cd\u529f\u80fd\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u80fd\u591f\u505a\u7ebf\u6027\u6216\u8005\u975e\u7ebf\u6027\u7684\u5206\u7c7b\uff0c\u56de\u5f52\uff0c\u751a\u81f3\u5f02\u5e38\u503c\u68c0\u6d4b\u3002\u673a\u5668\u5b66\u4e60\u9886\u57df\u4e2d\u6700\u4e3a\u6d41\u884c\u7684\u6a21\u578b\u4e4b\u4e00\uff0c\u662f\u4efb\u4f55\u5b66\u4e60\u673a\u5668\u5b66\u4e60\u7684\u4eba\u5fc5\u5907\u7684\u5de5\u5177\u3002SVM \u7279\u522b\u9002\u5408\u5e94\u7528\u4e8e\u590d\u6742\u4f46\u4e2d\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u7684\u5206\u7c7b\u95ee\u9898\u3002 \u672c\u7ae0\u8282\u5c06\u9610\u8ff0\u652f\u6301\u5411\u91cf\u673a\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u600e\u4e48\u4f7f\u7528\u8fd9\u4e2a\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b SVM \u7684\u57fa\u672c\u601d\u60f3\u80fd\u591f\u7528\u4e00\u4e9b\u56fe\u7247\u6765\u89e3\u91ca\u5f97\u5f88\u597d\uff0c\u56fe 5-1 \u5c55\u793a\u4e86\u6211\u4eec\u5728\u7b2c4\u7ae0\u7ed3\u5c3e\u5904\u4ecb\u7ecd\u7684\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e24\u4e2a\u79cd\u7c7b\u80fd\u591f\u88ab\u975e\u5e38\u6e05\u6670\uff0c\u975e\u5e38\u5bb9\u6613\u7684\u7528\u4e00\u6761\u76f4\u7ebf\u5206\u5f00\uff08\u5373\u7ebf\u6027\u53ef\u5206\u7684\uff09\u3002\u5de6\u8fb9\u7684\u56fe\u663e\u793a\u4e86\u4e09\u79cd\u53ef\u80fd\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u5224\u5b9a\u8fb9\u754c\u3002\u5176\u4e2d\u7528\u865a\u7ebf\u8868\u793a\u7684\u7ebf\u6027\u6a21\u578b\u5224\u5b9a\u8fb9\u754c\u5f88\u5dee\uff0c\u751a\u81f3\u4e0d\u80fd\u6b63\u786e\u5730\u5212\u5206\u7c7b\u522b\u3002\u53e6\u5916\u4e24\u4e2a\u7ebf\u6027\u6a21\u578b\u5728\u8fd9\u4e2a\u6570\u636e\u96c6\u8868\u73b0\u7684\u5f88\u597d\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u5224\u5b9a\u8fb9\u754c\u5f88\u9760\u8fd1\u6837\u672c\u70b9\uff0c\u5728\u65b0\u7684\u6570\u636e\u4e0a\u53ef\u80fd\u4e0d\u4f1a\u8868\u73b0\u7684\u5f88\u597d\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u53f3\u8fb9\u56fe\u4e2d SVM \u5206\u7c7b\u5668\u7684\u5224\u5b9a\u8fb9\u754c\u5b9e\u7ebf\uff0c\u4e0d\u4ec5\u5206\u5f00\u4e86\u4e24\u79cd\u7c7b\u522b\uff0c\u800c\u4e14\u8fd8\u5c3d\u53ef\u80fd\u5730\u8fdc\u79bb\u4e86\u6700\u9760\u8fd1\u7684\u8bad\u7ec3\u6570\u636e\u70b9\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a SVM \u5206\u7c7b\u5668\u5728\u4e24\u79cd\u7c7b\u522b\u4e4b\u95f4\u4fdd\u6301\u4e86\u4e00\u6761\u5c3d\u53ef\u80fd\u5bbd\u655e\u7684\u8857\u9053\uff08\u56fe\u4e2d\u5e73\u884c\u7684\u865a\u7ebf\uff09\uff0c\u5176\u88ab\u79f0\u4e3a\u6700\u5927\u95f4\u9694\u5206\u7c7b\u3002 \u6211\u4eec\u6ce8\u610f\u5230\u6dfb\u52a0\u66f4\u591a\u7684\u6837\u672c\u70b9\u5728\u201c\u8857\u9053\u201d\u5916\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u5224\u5b9a\u8fb9\u754c\uff0c\u56e0\u4e3a\u5224\u5b9a\u8fb9\u754c\u662f\u7531\u4f4d\u4e8e\u201c\u8857\u9053\u201d\u8fb9\u7f18\u7684\u6837\u672c\u70b9\u786e\u5b9a\u7684\uff0c\u8fd9\u4e9b\u6837\u672c\u70b9\u88ab\u79f0\u4e3a\u201c\u652f\u6301\u5411\u91cf\u201d\uff08\u56fe 5-1 \u4e2d\u88ab\u5706\u5708\u5708\u8d77\u6765\u7684\u70b9\uff09 \u8b66\u544a SVM \u5bf9\u7279\u5f81\u7f29\u653e\u6bd4\u8f83\u654f\u611f\uff0c\u53ef\u4ee5\u770b\u5230\u56fe 5-2\uff1a\u5de6\u8fb9\u7684\u56fe\u4e2d\uff0c\u5782\u76f4\u7684\u6bd4\u4f8b\u8981\u66f4\u5927\u4e8e\u6c34\u5e73\u7684\u6bd4\u4f8b\uff0c\u6240\u4ee5\u6700\u5bbd\u7684\u201c\u8857\u9053\u201d\u63a5\u8fd1\u6c34\u5e73\u3002\u4f46\u5bf9\u7279\u5f81\u7f29\u653e\u540e\uff08\u4f8b\u5982\u4f7f\u7528Scikit-Learn\u7684StandardScaler\uff09\uff0c\u5224\u5b9a\u8fb9\u754c\u770b\u8d77\u6765\u8981\u597d\u5f97\u591a\uff0c\u5982\u53f3\u56fe\u3002 \u8f6f\u95f4\u9694\u5206\u7c7b \u5982\u679c\u6211\u4eec\u4e25\u683c\u5730\u89c4\u5b9a\u6240\u6709\u7684\u6570\u636e\u90fd\u4e0d\u5728\u201c\u8857\u9053\u201d\u4e0a\uff0c\u90fd\u5728\u6b63\u786e\u5730\u4e24\u8fb9\uff0c\u79f0\u4e3a\u786c\u95f4\u9694\u5206\u7c7b\uff0c\u786c\u95f4\u9694\u5206\u7c7b\u6709\u4e24\u4e2a\u95ee\u9898\uff0c\u7b2c\u4e00\uff0c\u53ea\u5bf9\u7ebf\u6027\u53ef\u5206\u7684\u6570\u636e\u8d77\u4f5c\u7528\uff0c\u7b2c\u4e8c\uff0c\u5bf9\u5f02\u5e38\u70b9\u654f\u611f\u3002\u56fe 5-3 \u663e\u793a\u4e86\u53ea\u6709\u4e00\u4e2a\u5f02\u5e38\u70b9\u7684\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\uff1a\u5de6\u8fb9\u7684\u56fe\u4e2d\u5f88\u96be\u627e\u5230\u786c\u95f4\u9694\uff0c\u53f3\u8fb9\u7684\u56fe\u4e2d\u5224\u5b9a\u8fb9\u754c\u548c\u6211\u4eec\u4e4b\u524d\u5728\u56fe 5-1 \u4e2d\u6ca1\u6709\u5f02\u5e38\u70b9\u7684\u5224\u5b9a\u8fb9\u754c\u975e\u5e38\u4e0d\u4e00\u6837\uff0c\u5b83\u5f88\u96be\u4e00\u822c\u5316\u3002 \u4e3a\u4e86\u907f\u514d\u4e0a\u8ff0\u7684\u95ee\u9898\uff0c\u6211\u4eec\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u66f4\u52a0\u8f6f\u6027\u7684\u6a21\u578b\u3002\u76ee\u7684\u5728\u4fdd\u6301\u201c\u8857\u9053\u201d\u5c3d\u53ef\u80fd\u5927\u548c\u907f\u514d\u95f4\u9694\u8fdd\u89c4\uff08\u4f8b\u5982\uff1a\u6570\u636e\u70b9\u51fa\u73b0\u5728\u201c\u8857\u9053\u201d\u4e2d\u592e\u6216\u8005\u751a\u81f3\u5728\u9519\u8bef\u7684\u4e00\u8fb9\uff09\u4e4b\u95f4\u627e\u5230\u4e00\u4e2a\u826f\u597d\u7684\u5e73\u8861\u3002\u8fd9\u5c31\u662f\u8f6f\u95f4\u9694\u5206\u7c7b\u3002 \u5728 Scikit-Learn \u5e93\u7684 SVM \u7c7b\uff0c\u4f60\u53ef\u4ee5\u7528 C \u8d85\u53c2\u6570\uff08\u60e9\u7f5a\u7cfb\u6570\uff09\u6765\u63a7\u5236\u8fd9\u79cd\u5e73\u8861\uff1a\u8f83\u5c0f\u7684 C \u4f1a\u5bfc\u81f4\u66f4\u5bbd\u7684\u201c\u8857\u9053\u201d\uff0c\u4f46\u66f4\u591a\u7684\u95f4\u9694\u8fdd\u89c4\u3002\u56fe 5-4 \u663e\u793a\u4e86\u5728\u975e\u7ebf\u6027\u53ef\u5206\u9694\u7684\u6570\u636e\u96c6\u4e0a\uff0c\u4e24\u4e2a\u8f6f\u95f4\u9694SVM\u5206\u7c7b\u5668\u7684\u5224\u5b9a\u8fb9\u754c\u3002\u5de6\u8fb9\u56fe\u4e2d\uff0c\u4f7f\u7528\u4e86\u8f83\u5927\u7684 C \u503c\uff0c\u5bfc\u81f4\u66f4\u5c11\u7684\u95f4\u9694\u8fdd\u89c4\uff0c\u4f46\u662f\u95f4\u9694\u8f83\u5c0f\u3002\u53f3\u8fb9\u7684\u56fe\uff0c\u4f7f\u7528\u4e86\u8f83\u5c0f\u7684 C \u503c\uff0c\u95f4\u9694\u53d8\u5927\u4e86\uff0c\u4f46\u662f\u8bb8\u591a\u6570\u636e\u70b9\u51fa\u73b0\u5728\u4e86\u201c\u8857\u9053\u201d\u4e0a\u3002\u7136\u800c\uff0c\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u5668\u4f3c\u4e4e\u6cdb\u5316\u5730\u66f4\u597d\uff1a\u4e8b\u5b9e\u4e0a\uff0c\u5728\u8fd9\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u51cf\u5c11\u4e86\u9884\u6d4b\u9519\u8bef\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\u5927\u90e8\u5206\u7684\u95f4\u9694\u8fdd\u89c4\u70b9\u51fa\u73b0\u5728\u4e86\u5224\u5b9a\u8fb9\u754c\u6b63\u786e\u7684\u4e00\u4fa7\u3002 \u63d0\u793a \u5982\u679c\u4f60\u7684 SVM \u6a21\u578b\u8fc7\u62df\u5408\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u51cf\u5c0f\u8d85\u53c2\u6570 C \u53bb\u8c03\u6574\u3002 \u4ee5\u4e0b\u7684 Scikit-Learn \u4ee3\u7801\u52a0\u8f7d\u4e86\u5185\u7f6e\u7684\u9e22\u5c3e\u82b1\uff08Iris\uff09\u6570\u636e\u96c6\uff0c\u7f29\u653e\u7279\u5f81\uff0c\u5e76\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027 SVM \u6a21\u578b\uff08\u4f7f\u7528 LinearSVC \u7c7b\uff0c\u8d85\u53c2\u6570 C=1 \uff0chinge \u635f\u5931\u51fd\u6570\uff09\u6765\u68c0\u6d4b Virginica \u9e22\u5c3e\u82b1\uff0c\u751f\u6210\u7684\u6a21\u578b\u5728\u56fe 5-4 \u7684\u53f3\u56fe\u3002 import numpy as np from sklearn import datasets from sklearn.pipeline import Pipeline from sklearn.preprocessing import StandardScaler from sklearn.svm import LinearSVC iris = datasets.load_iris() X = iris[\"data\"][:, (2, 3)] # petal length, petal width y = (iris[\"target\"] == 2).astype(np.float64) # Iris-Virginica svm_clf = Pipeline(( (\"scaler\", StandardScaler()), (\"linear_svc\", LinearSVC(C=1, loss=\"hinge\")), )) svm_clf.fit(X, y) Then, as usual, you can use the model to make predictions: >>> svm_clf.predict([[5.5, 1.7]]) array([ 1.]) \u6ce8 \u4e0d\u540c\u4e8e Logistic \u56de\u5f52\u5206\u7c7b\u5668\uff0cSVM \u5206\u7c7b\u5668\u4e0d\u4f1a\u8f93\u51fa\u6bcf\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u3002 \u4f5c\u4e3a\u4e00\u79cd\u9009\u62e9\uff0c\u4f60\u53ef\u4ee5\u5728 SVC \u7c7b\uff0c\u4f7f\u7528 SVC(kernel=\"linear\", C=1) \uff0c\u4f46\u662f\u5b83\u6bd4\u8f83\u6162\uff0c\u5c24\u5176\u5728\u8f83\u5927\u7684\u8bad\u7ec3\u96c6\u4e0a\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u88ab\u63a8\u8350\u3002\u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u4f7f\u7528 SGDClassifier \u7c7b\uff0c\u5373 SGDClassifier(loss=\"hinge\", alpha=1/(m*C)) \u3002\u5b83\u5e94\u7528\u4e86\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD \u89c1\u7b2c\u56db\u7ae0\uff09\u6765\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u3002\u5c3d\u7ba1\u5b83\u4e0d\u4f1a\u548c LinearSVC \u4e00\u6837\u5feb\u901f\u6536\u655b\uff0c\u4f46\u662f\u5bf9\u4e8e\u5904\u7406\u90a3\u4e9b\u4e0d\u9002\u5408\u653e\u5728\u5185\u5b58\u7684\u5927\u6570\u636e\u96c6\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u6216\u8005\u5904\u7406\u5728\u7ebf\u5206\u7c7b\u4efb\u52a1\u540c\u6837\u6709\u7528\u3002 \u63d0\u793a LinearSVC \u8981\u4f7f\u504f\u7f6e\u9879\u89c4\u8303\u5316\uff0c\u9996\u5148\u4f60\u5e94\u8be5\u96c6\u4e2d\u8bad\u7ec3\u96c6\u51cf\u53bb\u5b83\u7684\u5e73\u5747\u6570\u3002\u5982\u679c\u4f60\u4f7f\u7528\u4e86 StandardScaler \uff0c\u90a3\u4e48\u5b83\u4f1a\u81ea\u52a8\u5904\u7406\u3002\u6b64\u5916\uff0c\u786e\u4fdd\u4f60\u8bbe\u7f6e loss \u53c2\u6570\u4e3a hinge \uff0c\u56e0\u4e3a\u5b83\u4e0d\u662f\u9ed8\u8ba4\u503c\u3002\u6700\u540e\uff0c\u4e3a\u4e86\u5f97\u5230\u66f4\u597d\u7684\u6548\u679c\uff0c\u4f60\u9700\u8981\u5c06 dual \u53c2\u6570\u8bbe\u7f6e\u4e3a False \uff0c\u9664\u975e\u7279\u5f81\u6570\u6bd4\u6837\u672c\u91cf\u591a\uff08\u6211\u4eec\u5c06\u5728\u672c\u7ae0\u540e\u9762\u8ba8\u8bba\u4e8c\u5143\u6027\uff09 \u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b \u5c3d\u7ba1\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u5728\u8bb8\u591a\u6848\u4f8b\u4e0a\u8868\u73b0\u5f97\u51fa\u4e4e\u610f\u6599\u7684\u597d\uff0c\u4f46\u662f\u5f88\u591a\u6570\u636e\u96c6\u5e76\u4e0d\u662f\u7ebf\u6027\u53ef\u5206\u7684\u3002\u4e00\u79cd\u5904\u7406\u975e\u7ebf\u6027\u6570\u636e\u96c6\u65b9\u6cd5\u662f\u589e\u52a0\u66f4\u591a\u7684\u7279\u5f81\uff0c\u4f8b\u5982\u591a\u9879\u5f0f\u7279\u5f81\uff08\u6b63\u5982\u4f60\u5728\u7b2c4\u7ae0\u6240\u505a\u7684\u90a3\u6837\uff09\uff1b\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u53d8\u6210\u7ebf\u6027\u53ef\u5206\u7684\u6570\u636e\u3002\u5728\u56fe 5-5\u7684\u5de6\u56fe\u4e2d\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u7279\u5f81 x1 \u7684\u7b80\u5355\u7684\u6570\u636e\u96c6\uff0c\u6b63\u5982\u4f60\u770b\u5230\u7684\uff0c\u8be5\u6570\u636e\u96c6\u4e0d\u662f\u7ebf\u6027\u53ef\u5206\u7684\u3002\u4f46\u662f\u5982\u679c\u4f60\u589e\u52a0\u4e86\u7b2c\u4e8c\u4e2a\u7279\u5f81 x2=(x1)^2 \uff0c\u4ea7\u751f\u7684 2D \u6570\u636e\u96c6\u5c31\u80fd\u5f88\u597d\u7684\u7ebf\u6027\u53ef\u5206\u3002 \u4e3a\u4e86\u5b9e\u65bd\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u901a\u8fc7 Scikit-Learn\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6d41\u6c34\u7ebf\uff08Pipeline\uff09\u53bb\u5305\u542b\u591a\u9879\u5f0f\u7279\u5f81\uff08PolynomialFeatures\uff09\u53d8\u6362\uff08\u5728 121 \u9875\u7684\u201cPolynomial Regression\u201d\u4e2d\u8ba8\u8bba\uff09\uff0c\u7136\u540e\u4e00\u4e2a StandardScaler \u548c LinearSVC \u3002\u8ba9\u6211\u4eec\u5728\u536b\u661f\u6570\u636e\u96c6\uff08moons datasets\uff09\u6d4b\u8bd5\u4e00\u4e0b\u6548\u679c\u3002 from sklearn.datasets import make_moons from sklearn.pipeline import Pipeline from sklearn.preprocessing import PolynomialFeatures polynomial_svm_clf = Pipeline(( (\"poly_features\", PolynomialFeatures(degree=3)), (\"scaler\", StandardScaler()), (\"svm_clf\", LinearSVC(C=10, loss=\"hinge\")) )) polynomial_svm_clf.fit(X, y) \u591a\u9879\u5f0f\u6838 \u6dfb\u52a0\u591a\u9879\u5f0f\u7279\u5f81\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u4e0d\u4ec5\u4ec5\u5728 SVM\uff0c\u5728\u5404\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u90fd\u6709\u4e0d\u9519\u7684\u8868\u73b0\uff0c\u4f46\u662f\u4f4e\u6b21\u6570\u7684\u591a\u9879\u5f0f\u4e0d\u80fd\u5904\u7406\u975e\u5e38\u590d\u6742\u7684\u6570\u636e\u96c6\uff0c\u800c\u9ad8\u6b21\u6570\u7684\u591a\u9879\u5f0f\u5374\u4ea7\u751f\u4e86\u5927\u91cf\u7684\u7279\u5f81\uff0c\u4f1a\u4f7f\u6a21\u578b\u53d8\u5f97\u6162\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5f53\u4f60\u4f7f\u7528 SVM \u65f6\uff0c\u4f60\u53ef\u4ee5\u8fd0\u7528\u4e00\u4e2a\u88ab\u79f0\u4e3a\u201c\u6838\u6280\u5de7\u201d\uff08kernel trick\uff09\u7684\u795e\u5947\u6570\u5b66\u6280\u5de7\u3002\u5b83\u53ef\u4ee5\u53d6\u5f97\u5c31\u50cf\u4f60\u6dfb\u52a0\u4e86\u8bb8\u591a\u591a\u9879\u5f0f\uff0c\u751a\u81f3\u6709\u9ad8\u6b21\u6570\u7684\u591a\u9879\u5f0f\uff0c\u4e00\u6837\u597d\u7684\u7ed3\u679c\u3002\u6240\u4ee5\u4e0d\u4f1a\u5927\u91cf\u7279\u5f81\u5bfc\u81f4\u7684\u7ec4\u5408\u7206\u70b8\uff0c\u56e0\u4e3a\u4f60\u5e76\u6ca1\u6709\u589e\u52a0\u4efb\u4f55\u7279\u5f81\u3002\u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u7528 SVC \u7c7b\u6765\u5b9e\u73b0\u3002\u8ba9\u6211\u4eec\u5728\u536b\u661f\u6570\u636e\u96c6\u6d4b\u8bd5\u4e00\u4e0b\u6548\u679c\u3002 from sklearn.svm import SVC poly_kernel_svm_clf = Pipeline(( (\"scaler\", StandardScaler()), (\"svm_clf\", SVC(kernel=\"poly\", degree=3, coef0=1, C=5)) )) poly_kernel_svm_clf.fit(X, y) \u8fd9\u6bb5\u4ee3\u7801\u75283\u9636\u7684\u591a\u9879\u5f0f\u6838\u8bad\u7ec3\u4e86\u4e00\u4e2a SVM \u5206\u7c7b\u5668\uff0c\u5373\u56fe 5-7 \u7684\u5de6\u56fe\u3002\u53f3\u56fe\u662f\u4f7f\u7528\u4e8610\u9636\u7684\u591a\u9879\u5f0f\u6838 SVM \u5206\u7c7b\u5668\u3002\u5f88\u660e\u663e\uff0c\u5982\u679c\u4f60\u7684\u6a21\u578b\u8fc7\u62df\u5408\uff0c\u4f60\u53ef\u4ee5\u51cf\u5c0f\u591a\u9879\u5f0f\u6838\u7684\u9636\u6570\u3002\u76f8\u53cd\u7684\uff0c\u5982\u679c\u662f\u6b20\u62df\u5408\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u589e\u5927\u5b83\u3002\u8d85\u53c2\u6570 coef0 \u63a7\u5236\u4e86\u9ad8\u9636\u591a\u9879\u5f0f\u4e0e\u4f4e\u9636\u591a\u9879\u5f0f\u5bf9\u6a21\u578b\u7684\u5f71\u54cd\u3002 \u901a\u7528\u7684\u65b9\u6cd5\u662f\u7528\u7f51\u683c\u641c\u7d22\uff08grid search \u89c1\u7b2c 2 \u7ae0\uff09\u53bb\u627e\u5230\u6700\u4f18\u8d85\u53c2\u6570\u3002\u9996\u5148\u8fdb\u884c\u975e\u5e38\u7c97\u7565\u7684\u7f51\u683c\u641c\u7d22\u4e00\u822c\u4f1a\u5f88\u5feb\uff0c\u7136\u540e\u5728\u627e\u5230\u7684\u6700\u4f73\u503c\u8fdb\u884c\u66f4\u7ec6\u7684\u7f51\u683c\u641c\u7d22\u3002\u5bf9\u6bcf\u4e2a\u8d85\u53c2\u6570\u7684\u4f5c\u7528\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u89e3\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728\u6b63\u786e\u7684\u8d85\u53c2\u6570\u7a7a\u95f4\u627e\u5230\u5408\u9002\u7684\u503c\u3002 \u589e\u52a0\u76f8\u4f3c\u7279\u5f81 \u53e6\u4e00\u79cd\u89e3\u51b3\u975e\u7ebf\u6027\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u76f8\u4f3c\u51fd\u6570\uff08similarity funtion\uff09\u8ba1\u7b97\u6bcf\u4e2a\u6837\u672c\u4e0e\u7279\u5b9a\u5730\u6807\uff08landmark\uff09\u7684\u76f8\u4f3c\u5ea6\u3002\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u524d\u9762\u8ba8\u8bba\u8fc7\u7684\u4e00\u7ef4\u6570\u636e\u96c6\uff0c\u5e76\u5728 x1=-2 \u548c x1=1 \u4e4b\u95f4\u589e\u52a0\u4e24\u4e2a\u5730\u6807\uff08\u56fe 5-8 \u5de6\u56fe\uff09\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u76f8\u4f3c\u51fd\u6570\uff0c\u5373\u9ad8\u65af\u5f84\u5411\u57fa\u51fd\u6570\uff08Gaussian Radial Basis Function\uff0cRBF\uff09\uff0c\u8bbe\u7f6e \u03b3 = 0.3 \uff08\u89c1\u516c\u5f0f 5-1\uff09 \u516c\u5f0f 5-1 RBF \u5b83\u662f\u4e2a\u4ece 0 \u5230 1 \u7684\u949f\u578b\u51fd\u6570\uff0c\u503c\u4e3a 0 \u7684\u79bb\u5730\u6807\u5f88\u8fdc\uff0c\u503c\u4e3a 1 \u7684\u5728\u5730\u6807\u4e0a\u3002\u73b0\u5728\u6211\u4eec\u51c6\u5907\u8ba1\u7b97\u65b0\u7279\u5f81\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u6837\u672c x1=-1 \uff1a\u5b83\u8ddd\u79bb\u7b2c\u4e00\u4e2a\u5730\u6807\u8ddd\u79bb\u662f 1\uff0c\u8ddd\u79bb\u7b2c\u4e8c\u4e2a\u5730\u6807\u662f 2\u3002\u56e0\u6b64\u5b83\u7684\u65b0\u7279\u5f81\u4e3a x2=exp(-0.3 \u00d7 (1^2))\u22480.74 \u548c x3=exp(-0.3 \u00d7 (2^2))\u22480.30 \u3002\u56fe 5-8 \u53f3\u8fb9\u7684\u56fe\u663e\u793a\u4e86\u7279\u5f81\u8f6c\u6362\u540e\u7684\u6570\u636e\u96c6\uff08\u5220\u9664\u4e86\u539f\u59cb\u7279\u5f81\uff09\uff0c\u6b63\u5982\u4f60\u770b\u5230\u7684\uff0c\u5b83\u73b0\u5728\u662f\u7ebf\u6027\u53ef\u5206\u4e86\u3002 \u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u5982\u4f55\u9009\u62e9\u5730\u6807\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5728\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6837\u672c\u7684\u4f4d\u7f6e\u521b\u5efa\u5730\u6807\u3002\u8fd9\u5c06\u4ea7\u751f\u66f4\u591a\u7684\u7ef4\u5ea6\u4ece\u800c\u589e\u52a0\u4e86\u8f6c\u6362\u540e\u6570\u636e\u96c6\u662f\u7ebf\u6027\u53ef\u5206\u7684\u53ef\u80fd\u6027\u3002\u4f46\u7f3a\u70b9\u662f\uff0c m \u4e2a\u6837\u672c\uff0c n \u4e2a\u7279\u5f81\u7684\u8bad\u7ec3\u96c6\u88ab\u8f6c\u6362\u6210\u4e86 m \u4e2a\u5b9e\u4f8b\uff0c m \u4e2a\u7279\u5f81\u7684\u8bad\u7ec3\u96c6\uff08\u5047\u8bbe\u4f60\u5220\u9664\u4e86\u539f\u59cb\u7279\u5f81\uff09\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5982\u679c\u4f60\u7684\u8bad\u7ec3\u96c6\u975e\u5e38\u5927\uff0c\u4f60\u6700\u7ec8\u4f1a\u5f97\u5230\u540c\u6837\u5927\u7684\u7279\u5f81\u3002 \u9ad8\u65af RBF \u6838 \u5c31\u50cf\u591a\u9879\u5f0f\u7279\u5f81\u6cd5\u4e00\u6837\uff0c\u76f8\u4f3c\u7279\u5f81\u6cd5\u5bf9\u5404\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u540c\u6837\u4e5f\u6709\u4e0d\u9519\u7684\u8868\u73b0\u3002\u4f46\u662f\u5728\u6240\u6709\u989d\u5916\u7279\u5f81\u4e0a\u7684\u8ba1\u7b97\u6210\u672c\u53ef\u80fd\u5f88\u9ad8\uff0c\u7279\u522b\u662f\u5728\u5927\u89c4\u6a21\u7684\u8bad\u7ec3\u96c6\u4e0a\u3002\u7136\u800c\uff0c\u201c\u6838\u201d \u6280\u5de7\u518d\u4e00\u6b21\u663e\u73b0\u4e86\u5b83\u5728 SVM \u4e0a\u7684\u795e\u5947\u4e4b\u5904\uff1a\u9ad8\u65af\u6838\u8ba9\u4f60\u53ef\u4ee5\u83b7\u5f97\u540c\u6837\u597d\u7684\u7ed3\u679c\u6210\u4e3a\u53ef\u80fd\uff0c\u5c31\u50cf\u4f60\u5728\u76f8\u4f3c\u7279\u5f81\u6cd5\u6dfb\u52a0\u4e86\u8bb8\u591a\u76f8\u4f3c\u7279\u5f81\u4e00\u6837\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u4f60\u5e76\u4e0d\u9700\u8981\u5728RBF\u6dfb\u52a0\u5b83\u4eec\u3002\u6211\u4eec\u4f7f\u7528 SVC \u7c7b\u7684\u9ad8\u65af RBF \u6838\u6765\u68c0\u9a8c\u4e00\u4e0b\u3002 rbf_kernel_svm_clf = Pipeline(( (\"scaler\", StandardScaler()), (\"svm_clf\", SVC(kernel=\"rbf\", gamma=5, C=0.001)) )) rbf_kernel_svm_clf.fit(X, y) \u8fd9\u4e2a\u6a21\u578b\u5728\u56fe 5-9 \u7684\u5de6\u4e0b\u89d2\u8868\u793a\u3002\u5176\u4ed6\u7684\u56fe\u663e\u793a\u4e86\u7528\u4e0d\u540c\u7684\u8d85\u53c2\u6570 gamma (\u03b3) \u548c C \u8bad\u7ec3\u7684\u6a21\u578b\u3002\u589e\u5927 \u03b3 \u4f7f\u949f\u578b\u66f2\u7ebf\u66f4\u7a84\uff08\u56fe 5-8 \u5de6\u56fe\uff09\uff0c\u5bfc\u81f4\u6bcf\u4e2a\u6837\u672c\u7684\u5f71\u54cd\u8303\u56f4\u53d8\u5f97\u66f4\u5c0f\uff1a\u5373\u5224\u5b9a\u8fb9\u754c\u6700\u7ec8\u53d8\u5f97\u66f4\u4e0d\u89c4\u5219\uff0c\u5728\u5355\u4e2a\u6837\u672c\u5468\u56f4\u73af\u7ed5\u3002\u76f8\u53cd\u7684\uff0c\u8f83\u5c0f\u7684 \u03b3 \u503c\u4f7f\u949f\u578b\u66f2\u7ebf\u66f4\u5bbd\uff0c\u6837\u672c\u6709\u66f4\u5927\u7684\u5f71\u54cd\u8303\u56f4\uff0c\u5224\u5b9a\u8fb9\u754c\u6700\u7ec8\u5219\u66f4\u52a0\u5e73\u6ed1\u3002\u6240\u4ee5\u03b3\u662f\u53ef\u8c03\u6574\u7684\u8d85\u53c2\u6570\uff1a\u5982\u679c\u4f60\u7684\u6a21\u578b\u8fc7\u62df\u5408\uff0c\u4f60\u5e94\u8be5\u51cf\u5c0f \u03b3 \u503c\uff0c\u82e5\u6b20\u62df\u5408\uff0c\u5219\u589e\u5927 \u03b3 \uff08\u4e0e\u8d85\u53c2\u6570 C \u76f8\u4f3c\uff09\u3002 \u8fd8\u6709\u5176\u4ed6\u7684\u6838\u51fd\u6570\uff0c\u4f46\u5f88\u5c11\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u4e00\u4e9b\u6838\u51fd\u6570\u662f\u4e13\u95e8\u7528\u4e8e\u7279\u5b9a\u7684\u6570\u636e\u7ed3\u6784\u3002\u5728\u5bf9\u6587\u672c\u6587\u6863\u6216\u8005 DNA \u5e8f\u5217\u8fdb\u884c\u5206\u7c7b\u65f6\uff0c\u6709\u65f6\u4f1a\u4f7f\u7528\u5b57\u7b26\u4e32\u6838\uff08String kernels\uff09\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 SSK \u6838\uff08string subsequence kernel\uff09\u6216\u8005\u57fa\u4e8e\u7f16\u8f91\u8ddd\u79bb\uff08Levenshtein distance\uff09\u7684\u6838\u51fd\u6570\uff09\u3002 \u63d0\u793a \u8fd9\u4e48\u591a\u53ef\u4f9b\u9009\u62e9\u7684\u6838\u51fd\u6570\uff0c\u4f60\u5982\u4f55\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e00\u4e2a\uff1f\u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u5e94\u8be5\u5148\u5c1d\u8bd5\u7ebf\u6027\u6838\u51fd\u6570\uff08\u8bb0\u4f4f LinearSVC \u6bd4 SVC(kernel=\"linear\") \u8981\u5feb\u5f97\u591a\uff09\uff0c\u5c24\u5176\u662f\u5f53\u8bad\u7ec3\u96c6\u5f88\u5927\u6216\u8005\u6709\u5927\u91cf\u7684\u7279\u5f81\u7684\u60c5\u51b5\u4e0b\u3002\u5982\u679c\u8bad\u7ec3\u96c6\u4e0d\u592a\u5927\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u9ad8\u65af\u5f84\u5411\u57fa\u6838\uff08Gaussian RBF Kernel\uff09\uff0c\u5b83\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u5f88\u6709\u6548\u3002\u5982\u679c\u4f60\u6709\u7a7a\u95f2\u7684\u65f6\u95f4\u548c\u8ba1\u7b97\u80fd\u529b\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u548c\u7f51\u683c\u641c\u7d22\u6765\u8bd5\u9a8c\u5176\u4ed6\u7684\u6838\u51fd\u6570\uff0c\u7279\u522b\u662f\u6709\u4e13\u95e8\u7528\u4e8e\u4f60\u7684\u8bad\u7ec3\u96c6\u6570\u636e\u7ed3\u6784\u7684\u6838\u51fd\u6570\u3002 \u8ba1\u7b97\u590d\u6742\u6027 LinearSVC \u7c7b\u57fa\u4e8e liblinear \u5e93\uff0c\u5b83\u5b9e\u73b0\u4e86\u7ebf\u6027 SVM \u7684\u4f18\u5316\u7b97\u6cd5\u3002\u5b83\u5e76\u4e0d\u652f\u6301\u6838\u6280\u5de7\uff0c\u4f46\u662f\u5b83\u6837\u672c\u548c\u7279\u5f81\u7684\u6570\u91cf\u51e0\u4e4e\u662f\u7ebf\u6027\u7684\uff1a\u8bad\u7ec3\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u4e3a O(m \u00d7 n) \u3002 \u5982\u679c\u4f60\u8981\u975e\u5e38\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u9700\u8981\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\u3002\u8fd9\u662f\u7531\u5bb9\u5dee\u503c\u8d85\u53c2\u6570 \u03f5 \uff08\u5728 Scikit-learn \u79f0\u4e3a tol \uff09\u63a7\u5236\u7684\u3002\u5927\u591a\u6570\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0c\u4f7f\u7528\u9ed8\u8ba4\u5bb9\u5dee\u503c\u7684\u6548\u679c\u662f\u5df2\u7ecf\u53ef\u4ee5\u6ee1\u8db3\u4e00\u822c\u8981\u6c42\u3002 SVC \u7c7b\u57fa\u4e8e libsvm \u5e93\uff0c\u5b83\u5b9e\u73b0\u4e86\u652f\u6301\u6838\u6280\u5de7\u7684\u7b97\u6cd5\u3002\u8bad\u7ec3\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u4ecb \u4e8eO(m^2 \u00d7 n) \u548c O(m^3 \u00d7 n) \u4e4b\u95f4\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u8bad\u7ec3\u6837\u672c\u53d8\u5927\u65f6\uff0c\u5b83\u5c06\u53d8\u5f97\u6781\u5176\u6162\uff08\u4f8b\u5982\uff0c\u6210\u5343\u4e0a\u4e07\u4e2a\u6837\u672c\uff09\u3002\u8fd9\u4e2a\u7b97\u6cd5\u5bf9\u4e8e\u590d\u6742\u4f46\u5c0f\u578b\u6216\u4e2d\u7b49\u6570\u91cf\u7684\u6570\u636e\u96c6\u8868\u73b0\u662f\u5b8c\u7f8e\u7684\u3002\u7136\u800c\uff0c\u5b83\u80fd\u5bf9\u7279\u5f81\u6570\u91cf\u5f88\u597d\u7684\u7f29\u653e\uff0c\u5c24\u5176\u5bf9\u7a00\u758f\u7279\u5f81\u6765\u8bf4\uff08sparse features\uff09\uff08\u5373\u6bcf\u4e2a\u6837\u672c\u90fd\u6709\u4e00\u4e9b\u975e\u96f6\u7279\u5f81\uff09\u3002\u5728\u8fd9\u4e2a\u60c5\u51b5\u4e0b\uff0c\u7b97\u6cd5\u5bf9\u6bcf\u4e2a\u6837\u672c\u7684\u975e\u96f6\u7279\u5f81\u7684\u5e73\u5747\u6570\u91cf\u8fdb\u884c\u5927\u6982\u7684\u7f29\u653e\u3002\u8868 5-1 \u5bf9 Scikit-learn \u7684 SVM \u5206\u7c7b\u6a21\u578b\u8fdb\u884c\u6bd4\u8f83\u3002 SVM \u56de\u5f52 \u6b63\u5982\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\uff0cSVM \u7b97\u6cd5\u5e94\u7528\u5e7f\u6cdb\uff1a\u4e0d\u4ec5\u4ec5\u652f\u6301\u7ebf\u6027\u548c\u975e\u7ebf\u6027\u7684\u5206\u7c7b\u4efb\u52a1\uff0c\u8fd8\u652f\u6301\u7ebf\u6027\u548c\u975e\u7ebf\u6027\u7684\u56de\u5f52\u4efb\u52a1\u3002\u6280\u5de7\u5728\u4e8e\u9006\u8f6c\u6211\u4eec\u7684\u76ee\u6807\uff1a\u9650\u5236\u95f4\u9694\u8fdd\u89c4\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u662f\u8bd5\u56fe\u5728\u4e24\u4e2a\u7c7b\u522b\u4e4b\u95f4\u627e\u5230\u5c3d\u53ef\u80fd\u5927\u7684\u201c\u8857\u9053\u201d\uff08\u5373\u95f4\u9694\uff09\u3002SVM \u56de\u5f52\u4efb\u52a1\u662f\u9650\u5236\u95f4\u9694\u8fdd\u89c4\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u653e\u7f6e\u66f4\u591a\u7684\u6837\u672c\u5728\u201c\u8857\u9053\u201d\u4e0a\u3002\u201c\u8857\u9053\u201d\u7684\u5bbd\u5ea6\u7531\u8d85\u53c2\u6570 \u03f5 \u63a7\u5236\u3002\u56fe 5-10 \u663e\u793a\u4e86\u5728\u4e00\u4e9b\u968f\u673a\u751f\u6210\u7684\u7ebf\u6027\u6570\u636e\u4e0a\uff0c\u4e24\u4e2a\u7ebf\u6027 SVM \u56de\u5f52\u6a21\u578b\u7684\u8bad\u7ec3\u60c5\u51b5\u3002\u4e00\u4e2a\u6709\u8f83\u5927\u7684\u95f4\u9694\uff08 \u03f5=1.5 \uff09\uff0c\u53e6\u4e00\u4e2a\u95f4\u9694\u8f83\u5c0f\uff08 \u03f5=0.5 \uff09\u3002 \u6dfb\u52a0\u66f4\u591a\u7684\u6570\u636e\u6837\u672c\u5728\u95f4\u9694\u4e4b\u5185\u5e76\u4e0d\u4f1a\u5f71\u54cd\u6a21\u578b\u7684\u9884\u6d4b\uff0c\u56e0\u6b64\uff0c\u8fd9\u4e2a\u6a21\u578b\u8ba4\u4e3a\u662f\u4e0d\u654f\u611f\u7684\uff08\u03f5-insensitive\uff09\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 Scikit-Learn \u7684 LinearSVR \u7c7b\u53bb\u5b9e\u73b0\u7ebf\u6027 SVM \u56de\u5f52\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4ea7\u751f\u7684\u6a21\u578b\u5728\u56fe 5-10 \u5de6\u56fe\uff08\u8bad\u7ec3\u6570\u636e\u9700\u8981\u88ab\u4e2d\u5fc3\u5316\u548c\u6807\u51c6\u5316\uff09 from sklearn.svm import LinearSVR svm_reg = LinearSVR(epsilon=1.5) svm_reg.fit(X, y) \u5904\u7406\u975e\u7ebf\u6027\u56de\u5f52\u4efb\u52a1\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6838\u5316\u7684 SVM \u6a21\u578b\u3002\u6bd4\u5982\uff0c\u56fe 5-11 \u663e\u793a\u4e86\u5728\u968f\u673a\u4e8c\u6b21\u65b9\u7684\u8bad\u7ec3\u96c6\uff0c\u4f7f\u7528\u4e8c\u6b21\u65b9\u591a\u9879\u5f0f\u6838\u51fd\u6570\u7684 SVM \u56de\u5f52\u3002\u5de6\u56fe\u662f\u8f83\u5c0f\u7684\u6b63\u5219\u5316\uff08\u5373\u66f4\u5927\u7684 C \u503c\uff09\uff0c\u53f3\u56fe\u5219\u662f\u66f4\u5927\u7684\u6b63\u5219\u5316\uff08\u5373\u5c0f\u7684 C \u503c\uff09 \u4e0b\u9762\u7684\u4ee3\u7801\u7684\u6a21\u578b\u5728\u56fe 5-11\uff0c\u5176\u4f7f\u7528\u4e86 Scikit-Learn \u7684 SVR \u7c7b\uff08\u652f\u6301\u6838\u6280\u5de7\uff09\u3002\u5728\u56de\u5f52\u4efb\u52a1\u4e0a\uff0c SVR \u7c7b\u548c SVC \u7c7b\u662f\u4e00\u6837\u7684\uff0c\u5e76\u4e14 LinearSVR \u662f\u548c LinearSVC \u7b49\u4ef7\u3002 LinearSVR \u7c7b\u548c\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u6210\u7ebf\u6027\uff08\u5c31\u50cf LinearSVC \u7c7b\uff09\uff0c\u5f53\u8bad\u7ec3\u96c6\u53d8\u5927\uff0c SVR \u4f1a\u53d8\u7684\u5f88\u6162\uff08\u5c31\u50cf SVC \u7c7b\uff09 from sklearn.svm import SVR svm_poly_reg = SVR(kernel=\"poly\", degree=2, C=100, epsilon=0.1) svm_poly_reg.fit(X, y) \u6ce8 SVM \u4e5f\u53ef\u4ee5\u7528\u6765\u505a\u5f02\u5e38\u503c\u68c0\u6d4b\uff0c\u8be6\u60c5\u89c1 Scikit-Learn \u6587\u6863 \u80cc\u540e\u673a\u5236 \u8fd9\u4e2a\u7ae0\u8282\u4ece\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u5f00\u59cb\uff0c\u5c06\u89e3\u91ca SVM \u662f\u5982\u4f55\u505a\u9884\u6d4b\u7684\u5e76\u4e14\u7b97\u6cd5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u5982\u679c\u4f60\u662f\u521a\u63a5\u89e6\u673a\u5668\u5b66\u4e60\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e2a\u7ae0\u8282\uff0c\u76f4\u63a5\u8fdb\u5165\u672c\u7ae0\u672b\u5c3e\u7684\u7ec3\u4e60\u3002\u7b49\u5230\u4f60\u60f3\u6df1\u5165\u4e86\u89e3 SVM\uff0c\u518d\u56de\u5934\u7814\u7a76\u8fd9\u90e8\u5206\u5185\u5bb9\u3002 \u9996\u5148\uff0c\u5173\u4e8e\u7b26\u53f7\u7684\u7ea6\u5b9a\uff1a\u5728\u7b2c 4 \u7ae0\uff0c\u6211\u4eec\u5c06\u6240\u6709\u6a21\u578b\u53c2\u6570\u653e\u5728\u4e00\u4e2a\u77e2\u91cf \u03b8 \u91cc\uff0c\u5305\u62ec\u504f\u7f6e\u9879 \u03b80 \uff0c \u03b81 \u5230 \u03b8n \u7684\u8f93\u5165\u7279\u5f81\u6743\u91cd\uff0c\u548c\u589e\u52a0\u4e00\u4e2a\u504f\u5dee\u8f93\u5165 x0 = 1 \u5230\u6240\u6709\u6837\u672c\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7b26\u53f7\u7ea6\u5b9a\uff0c\u5728\u5904\u7406 SVM \u4e0a\uff0c\u8fd9\u66f4\u65b9\u4fbf\uff0c\u4e5f\u66f4\u5e38\u89c1\uff1a\u504f\u7f6e\u9879\u88ab\u547d\u540d\u4e3a b \uff0c\u7279\u5f81\u6743\u91cd\u5411\u91cf\u88ab\u79f0\u4e3a w \uff0c\u5728\u8f93\u5165\u7279\u5f81\u5411\u91cf\u4e2d\u4e0d\u518d\u6dfb\u52a0\u504f\u7f6e\u7279\u5f81\u3002 \u51b3\u7b56\u51fd\u6570\u548c\u9884\u6d4b \u7ebf\u6027 SVM \u5206\u7c7b\u5668\u901a\u8fc7\u7b80\u5355\u5730\u8ba1\u7b97\u51b3\u7b56\u51fd\u6570 \u6765\u9884\u6d4b\u65b0\u6837\u672c\u7684\u7c7b\u522b\uff1a\u5982\u679c\u7ed3\u679c\u662f\u6b63\u7684\uff0c\u9884\u6d4b\u7c7b\u522b \u0177 \u662f\u6b63\u7c7b\uff0c\u4e3a 1\uff0c\u5426\u5219\u4ed6\u5c31\u662f\u8d1f\u7c7b\uff0c\u4e3a 0\u3002\u89c1\u516c\u5f0f 5-2 \u56fe 5-12 \u663e\u793a\u4e86\u548c\u56fe 5-4 \u53f3\u8fb9\u56fe\u6a21\u578b\u76f8\u5bf9\u5e94\u7684\u51b3\u7b56\u51fd\u6570\uff1a\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u96c6\u6709\u4e24\u4e2a\u7279\u5f81\uff08\u82b1\u74e3\u7684\u5bbd\u5ea6\u548c\u82b1\u74e3\u7684\u957f\u5ea6\uff09\uff0c\u6240\u4ee5\u662f\u4e2a\u4e8c\u7ef4\u7684\u5e73\u9762\u3002\u51b3\u7b56\u8fb9\u754c\u662f\u51b3\u7b56\u51fd\u6570\u7b49\u4e8e 0 \u7684\u70b9\u7684\u96c6\u5408\uff0c\u56fe\u4e2d\u4e24\u4e2a\u5e73\u9762\u7684\u4ea4\u53c9\u5904\uff0c\u5373\u4e00\u6761\u76f4\u7ebf\uff08\u56fe\u4e2d\u7684\u5b9e\u7ebf\uff09 \u865a\u7ebf\u8868\u793a\u7684\u662f\u90a3\u4e9b\u51b3\u7b56\u51fd\u6570\u7b49\u4e8e 1 \u6216 -1 \u7684\u70b9\uff1a\u5b83\u4eec\u5e73\u884c\uff0c\u4e14\u5230\u51b3\u7b56\u8fb9\u754c\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u5f62\u6210\u4e00\u4e2a\u95f4\u9694\u3002\u8bad\u7ec3\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u610f\u5473\u7740\u627e\u5230 w \u503c\u548c b \u503c\u4f7f\u5f97\u8fd9\u4e00\u4e2a\u95f4\u9694\u5c3d\u53ef\u80fd\u5927\uff0c\u540c\u65f6\u907f\u514d\u95f4\u9694\u8fdd\u89c4\uff08\u786c\u95f4\u9694\uff09\u6216\u9650\u5236\u5b83\u4eec\uff08\u8f6f\u95f4\u9694\uff09 \u8bad\u7ec3\u76ee\u6807 \u770b\u4e0b\u51b3\u7b56\u51fd\u6570\u7684\u659c\u7387\uff1a\u5b83\u7b49\u4e8e\u6743\u91cd\u5411\u91cf\u7684\u8303\u6570 \u3002\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e2a\u659c\u7387\u9664\u4e8e 2\uff0c\u51b3\u7b56\u51fd\u6570\u7b49\u4e8e \u00b11 \u7684\u70b9\u5c06\u4f1a\u79bb\u51b3\u7b56\u8fb9\u754c\u539f\u6765\u7684\u4e24\u500d\u5927\u3002\u6362\u53e5\u8bdd\uff0c\u5373\u659c\u7387\u9664\u4e8e 2\uff0c\u90a3\u4e48\u95f4\u9694\u5c06\u589e\u52a0\u4e24\u500d\u3002\u5728\u56fe 5-13 \u4e2d\uff0c2D \u5f62\u5f0f\u6bd4\u8f83\u5bb9\u6613\u53ef\u89c6\u5316\u3002\u6743\u91cd\u5411\u91cf w \u8d8a\u5c0f\uff0c\u95f4\u9694\u8d8a\u5927\u3002 \u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316 \uff0c\u4ece\u800c\u83b7\u5f97\u5927\u7684\u95f4\u9694\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u907f\u514d\u95f4\u9694\u8fdd\u89c4\uff08\u786c\u95f4\u9694\uff09\uff0c\u5bf9\u4e8e\u6b63\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u6211\u4eec\u9700\u8981\u51b3\u7b56\u51fd\u6570\u5927\u4e8e 1\uff0c\u5bf9\u4e8e\u8d1f\u8bad\u7ec3\u6837\u672c\uff0c\u5c0f\u4e8e -1\u3002\u82e5\u6211\u4eec\u5bf9\u8d1f\u6837\u672c\uff08\u5373 \uff09\u5b9a\u4e49 \uff0c\u5bf9\u6b63\u6837\u672c\uff08\u5373 \uff09\u5b9a\u4e49 \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u6240\u6709\u7684\u6837\u672c\u8868\u793a\u4e3a \u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u786c\u95f4\u9694\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u8868\u793a\u4e3a\u516c\u5f0f 5-3 \u4e2d\u7684\u7ea6\u675f\u4f18\u5316\u95ee\u9898 \u6ce8 \u7b49\u4e8e \uff0c\u6211\u4eec\u6700\u5c0f\u5316 \uff0c\u800c\u4e0d\u662f\u6700\u5c0f\u5316 \u3002\u8fd9\u4f1a\u7ed9\u6211\u4eec\u76f8\u540c\u7684\u7ed3\u679c\uff08\u56e0\u4e3a\u6700\u5c0f\u5316 w \u503c\u548c b \u503c\uff0c\u4e5f\u662f\u6700\u5c0f\u5316\u8be5\u503c\u4e00\u534a\u7684\u5e73\u65b9\uff09\uff0c\u4f46\u662f \u6709\u5f88\u597d\u53c8\u7b80\u5355\u7684\u5bfc\u6570\uff08\u53ea\u6709 w \uff09\uff0c \u5728 w=0 \u5904\u662f\u4e0d\u53ef\u5fae\u7684\u3002\u4f18\u5316\u7b97\u6cd5\u5728\u53ef\u5fae\u51fd\u6570\u8868\u73b0\u5f97\u66f4\u597d\u3002 \u4e3a\u4e86\u83b7\u5f97\u8f6f\u95f4\u9694\u7684\u76ee\u6807\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u6837\u672c\u5e94\u7528\u4e00\u4e2a\u677e\u5f1b\u53d8\u91cf\uff08slack variable\uff09 \u3002 \u8868\u793a\u4e86\u7b2c i \u4e2a\u6837\u672c\u5141\u8bb8\u8fdd\u89c4\u95f4\u9694\u7684\u7a0b\u5ea6\u3002\u6211\u4eec\u73b0\u5728\u6709\u4e24\u4e2a\u4e0d\u4e00\u81f4\u7684\u76ee\u6807\uff1a\u4e00\u4e2a\u662f\u4f7f\u677e\u5f1b\u53d8\u91cf\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u4ece\u800c\u51cf\u5c0f\u95f4\u9694\u8fdd\u89c4\uff0c\u53e6\u4e00\u4e2a\u662f\u4f7f 1/2 w\u00b7w \u5c3d\u91cf\u5c0f\uff0c\u4ece\u800c\u589e\u5927\u95f4\u9694\u3002\u8fd9\u65f6 C \u8d85\u53c2\u6570\u53d1\u6325\u4f5c\u7528\uff1a\u5b83\u5141\u8bb8\u6211\u4eec\u5728\u4e24\u4e2a\u76ee\u6807\u4e4b\u95f4\u6743\u8861\u3002\u6211\u4eec\u5f97\u5230\u4e86\u516c\u5f0f 5-4 \u7684\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u3002 \u4e8c\u6b21\u89c4\u5212 \u786c\u95f4\u9694\u548c\u8f6f\u95f4\u9694\u90fd\u662f\u7ebf\u6027\u7ea6\u675f\u7684\u51f8\u4e8c\u6b21\u89c4\u5212\u4f18\u5316\u95ee\u9898\u3002\u8fd9\u4e9b\u95ee\u9898\u88ab\u79f0\u4e4b\u4e3a\u4e8c\u6b21\u89c4\u5212\uff08QP\uff09\u95ee\u9898\u3002\u73b0\u5728\u6709\u8bb8\u591a\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u6280\u672f\u6765\u5904\u7406 QP \u95ee\u9898\uff0c\u4f46\u8fd9\u8d85\u51fa\u4e86\u672c\u4e66\u7684\u8303\u56f4\u3002\u4e00\u822c\u95ee\u9898\u7684\u516c\u5f0f\u5728\u516c\u5f0f 5-5 \u7ed9\u51fa\u3002 \u6ce8\u610f\u5230\u8868\u8fbe\u5f0f Ap \u2264 b \u5b9e\u9645\u4e0a\u5b9a\u4e49\u4e86 \u7ea6\u675f\uff1a \uff0c \u662f\u4e2a\u5305\u542b\u4e86 A \u7684\u7b2c i \u884c\u5143\u7d20\u7684\u5411\u91cf\uff0c \u662f b \u7684\u7b2c i \u4e2a\u5143\u7d20\u3002 \u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u5230\uff0c\u5982\u679c\u4f60\u7528\u4ee5\u4e0b\u7684\u65b9\u5f0f\u8bbe\u7f6e QP \u7684\u53c2\u6570\uff0c\u4f60\u5c06\u83b7\u5f97\u786c\u95f4\u9694\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u7684\u76ee\u6807\uff1a \uff0c n \u8868\u793a\u7279\u5f81\u7684\u6570\u91cf\uff08+1 \u662f\u504f\u7f6e\u9879\uff09 \uff0c m \u8868\u793a\u8bad\u7ec3\u6837\u672c\u6570\u91cf H \u662f \u5355\u4f4d\u77e9\u9635\uff0c\u9664\u4e86\u5de6\u4e0a\u89d2\u4e3a 0\uff08\u5ffd\u7565\u504f\u7f6e\u9879\uff09 f = 0 \uff0c\u4e00\u4e2a\u5168\u4e3a 0 \u7684 \u7ef4\u5411\u91cf \uff0c\u4e00\u4e2a\u5168\u4e3a 1 \u7684 \u7ef4\u5411\u91cf \uff0c \u7b49\u4e8e \u5e26\u4e00\u4e2a\u989d\u5916\u7684\u504f\u7f6e\u7279\u5f81 \uff01 \u6240\u4ee5\u8bad\u7ec3\u786c\u95f4\u9694\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u73b0\u6709\u7684 QP \u89e3\u51b3\u65b9\u6848\uff0c\u5373\u4e0a\u8ff0\u7684\u53c2\u6570\u3002\u7531\u6b64\u4ea7\u751f\u7684\u5411\u91cf p \u5c06\u5305\u542b\u504f\u7f6e\u9879 \u548c\u7279\u5f81\u6743\u91cd \u3002\u540c\u6837\u7684\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 QP \u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u8f6f\u95f4\u9694\u95ee\u9898\uff08\u89c1\u672c\u7ae0\u6700\u540e\u7684\u7ec3\u4e60\uff09 \u7136\u800c\uff0c\u4f7f\u7528\u6838\u6280\u5de7\u6211\u4eec\u5c06\u4f1a\u770b\u5230\u4e00\u4e2a\u4e0d\u540c\u7684\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u3002 \u5bf9\u5076\u95ee\u9898 \u7ed9\u51fa\u4e00\u4e2a\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff0c\u5373\u539f\u59cb\u95ee\u9898\uff08primal problem\uff09\uff0c\u5b83\u53ef\u80fd\u8868\u793a\u4e0d\u540c\u4f46\u662f\u548c\u53e6\u4e00\u4e2a\u95ee\u9898\u7d27\u5bc6\u76f8\u8fde\uff0c\u79f0\u4e3a\u5bf9\u5076\u95ee\u9898\uff08Dual Problem\uff09\u3002\u5bf9\u5076\u95ee\u9898\u7684\u89e3\u901a\u5e38\u662f\u5bf9\u539f\u59cb\u95ee\u9898\u7684\u89e3\u7ed9\u51fa\u4e00\u4e2a\u4e0b\u754c\u7ea6\u675f\uff0c\u4f46\u5728\u67d0\u4e9b\u6761\u4ef6\u4e0b\uff0c\u5b83\u4eec\u53ef\u4ee5\u83b7\u5f97\u76f8\u540c\u89e3\u3002\u5e78\u8fd0\u7684\u662f\uff0cSVM \u95ee\u9898\u6070\u597d\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u9009\u62e9\u89e3\u51b3\u539f\u59cb\u95ee\u9898\u6216\u8005\u5bf9\u5076\u95ee\u9898\uff0c\u4e24\u8005\u5c06\u4f1a\u6709\u76f8\u540c\u89e3\u3002\u516c\u5f0f 5-6 \u8868\u793a\u4e86\u7ebf\u6027 SVM \u7684\u5bf9\u5076\u5f62\u5f0f\uff08\u5982\u679c\u4f60\u5bf9\u600e\u4e48\u4ece\u539f\u59cb\u95ee\u9898\u83b7\u5f97\u5bf9\u5076\u95ee\u9898\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u770b\u4e0b\u9644\u5f55 C\uff09 \u4e00\u65e6\u4f60\u627e\u5230\u6700\u5c0f\u5316\u516c\u5f0f\u7684\u5411\u91cf \u03b1 \uff08\u4f7f\u7528 QP \u89e3\u51b3\u65b9\u6848\uff09\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u516c\u5f0f 5-7 \u7684\u65b9\u6cd5\u8ba1\u7b97 w \u548c b \uff0c\u4ece\u800c\u4f7f\u539f\u59cb\u95ee\u9898\u6700\u5c0f\u5316\u3002 \u5f53\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\u6bd4\u7279\u5f81\u6570\u91cf\u5c0f\u7684\u65f6\u5019\uff0c\u5bf9\u5076\u95ee\u9898\u6bd4\u539f\u59cb\u95ee\u9898\u8981\u5feb\u5f97\u591a\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u8ba9\u6838\u6280\u5de7\u6210\u4e3a\u53ef\u80fd\uff0c\u800c\u539f\u59cb\u95ee\u9898\u5219\u4e0d\u7136\u3002\u90a3\u4e48\u8fd9\u4e2a\u6838\u6280\u5de7\u662f\u600e\u4e48\u6837\u7684\u5462\uff1f \u6838\u5316\u652f\u6301\u5411\u91cf\u673a \u5047\u8bbe\u4f60\u60f3\u628a\u4e00\u4e2a 2 \u6b21\u591a\u9879\u5f0f\u53d8\u6362\u5e94\u7528\u5230\u4e8c\u7ef4\u7a7a\u95f4\u7684\u8bad\u7ec3\u96c6\uff08\u4f8b\u5982\u536b\u661f\u6570\u636e\u96c6\uff09\uff0c\u7136\u540e\u5728\u53d8\u6362\u540e\u7684\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027SVM\u5206\u7c7b\u5668\u3002\u516c\u5f0f 5-8 \u663e\u793a\u4e86\u4f60\u60f3\u5e94\u7528\u7684 2 \u6b21\u591a\u9879\u5f0f\u6620\u5c04\u51fd\u6570 \u03d5 \u3002 \u6ce8\u610f\u5230\u8f6c\u6362\u540e\u7684\u5411\u91cf\u662f 3 \u7ef4\u7684\u800c\u4e0d\u662f 2 \u7ef4\u3002\u5982\u679c\u6211\u4eec\u5e94\u7528\u8fd9\u4e2a 2 \u6b21\u591a\u9879\u5f0f\u6620\u5c04\uff0c\u7136\u540e\u8ba1\u7b97\u8f6c\u6362\u540e\u5411\u91cf\u7684\u70b9\u79ef\uff08\u89c1\u516c\u5f0f 5-9\uff09\uff0c\u8ba9\u6211\u4eec\u770b\u4e0b\u4e24\u4e2a 2 \u7ef4\u5411\u91cf a \u548c b \u4f1a\u53d1\u751f\u4ec0\u4e48\u3002 \u8f6c\u6362\u540e\u5411\u91cf\u7684\u70b9\u79ef\u7b49\u4e8e\u539f\u59cb\u5411\u91cf\u70b9\u79ef\u7684\u5e73\u65b9\uff1a \u5173\u952e\u70b9\u662f\uff1a\u5982\u679c\u4f60\u5e94\u7528\u8f6c\u6362 \u03d5 \u5230\u6240\u6709\u8bad\u7ec3\u6837\u672c\uff0c\u90a3\u4e48\u5bf9\u5076\u95ee\u9898\uff08\u89c1\u516c\u5f0f 5-6\uff09\u5c06\u4f1a\u5305\u542b\u70b9\u79ef \u3002\u4f46\u5982\u679c \u03d5 \u50cf\u5728\u516c\u5f0f 5-8 \u5b9a\u4e49\u7684 2 \u6b21\u591a\u9879\u5f0f\u8f6c\u6362\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u8f6c\u6362\u540e\u7684\u5411\u91cf\u70b9\u79ef\u66ff\u6362\u6210 \u3002\u6240\u4ee5\u5b9e\u9645\u4e0a\u4f60\u6839\u672c\u4e0d\u9700\u8981\u5bf9\u8bad\u7ec3\u6837\u672c\u8fdb\u884c\u8f6c\u6362\uff1a\u4ec5\u4ec5\u9700\u8981\u5728\u516c\u5f0f 5-6 \u4e2d\uff0c\u5c06\u70b9\u79ef\u66ff\u6362\u6210\u5b83\u70b9\u79ef\u7684\u5e73\u65b9\u3002\u7ed3\u679c\u5c06\u4f1a\u548c\u4f60\u7ecf\u8fc7\u9ebb\u70e6\u7684\u8bad\u7ec3\u96c6\u8f6c\u6362\u5e76\u62df\u5408\u51fa\u7ebf\u6027 SVM \u7b97\u6cd5\u5f97\u51fa\u7684\u7ed3\u679c\u4e00\u6837\uff0c\u4f46\u662f\u8fd9\u4e2a\u6280\u5de7\u4f7f\u5f97\u6574\u4e2a\u8fc7\u7a0b\u5728\u8ba1\u7b97\u4e0a\u9762\u66f4\u6709\u6548\u7387\u3002\u8fd9\u5c31\u662f\u6838\u6280\u5de7\u7684\u7cbe\u9ad3\u3002 \u51fd\u6570 \u88ab\u79f0\u4e3a\u4e8c\u6b21\u591a\u9879\u5f0f\u6838\uff08polynomial kernel\uff09\u3002\u5728\u673a\u5668\u5b66\u4e60\uff0c\u6838\u51fd\u6570\u662f\u4e00\u4e2a\u80fd\u8ba1\u7b97\u70b9\u79ef\u7684\u51fd\u6570\uff0c\u5e76\u53ea\u57fa\u4e8e\u539f\u59cb\u5411\u91cf a \u548c b \uff0c\u4e0d\u9700\u8981\u8ba1\u7b97\uff08\u751a\u81f3\u77e5\u9053\uff09\u8f6c\u6362 \u03d5 \u3002\u516c\u5f0f 5-10 \u5217\u4e3e\u4e86\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u6838\u51fd\u6570\u3002 Mercer \u5b9a\u7406 \u6839\u636e Mercer \u5b9a\u7406\uff0c\u5982\u679c\u51fd\u6570 K(a, b) \u6ee1\u8db3\u4e00\u4e9b Mercer \u6761\u4ef6\u7684\u6570\u5b66\u6761\u4ef6( K \u51fd\u6570\u5728\u53c2\u6570\u5185\u5fc5\u987b\u662f\u8fde\u7eed\uff0c\u5bf9\u79f0\uff0c\u5373 K(a, b)=K(b, a) \uff0c\u7b49)\uff0c\u90a3\u4e48\u5b58\u5728\u51fd\u6570 \u03d5 \uff0c\u5c06 a \u548c b \u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u7a7a\u95f4\uff08\u53ef\u80fd\u6709\u66f4\u9ad8\u7684\u7ef4\u5ea6\uff09\uff0c\u6709 \u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u7528 K \u4f5c\u4e3a\u6838\u51fd\u6570\uff0c\u5373\u4f7f\u4f60\u4e0d\u77e5\u9053 \u03d5 \u662f\u4ec0\u4e48\u3002\u4f7f\u7528\u9ad8\u65af\u6838\uff08Gaussian RBF kernel\uff09\u60c5\u51b5\u4e0b\uff0c\u5b83\u5b9e\u9645\u662f\u5c06\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u6620\u5c04\u5230\u65e0\u9650\u7ef4\u7a7a\u95f4\uff0c\u6240\u4ee5\u4f60\u4e0d\u9700\u8981\u77e5\u9053\u662f\u600e\u4e48\u6267\u884c\u6620\u5c04\u7684\u4e5f\u662f\u4e00\u4ef6\u597d\u4e8b\u3002 \u6ce8\u610f\u4e00\u4e9b\u5e38\u7528\u6838\u51fd\u6570\uff08\u4f8b\u5982 Sigmoid \u6838\u51fd\u6570\uff09\u5e76\u4e0d\u6ee1\u8db3\u6240\u6709\u7684 Mercer \u6761\u4ef6\uff0c\u7136\u800c\u5728\u5b9e\u8df5\u4e2d\u901a\u5e38\u8868\u73b0\u5f97\u5f88\u597d\u3002 \u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u8981\u89e3\u51b3\u3002\u516c\u5f0f 5-7 \u5c55\u793a\u4e86\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u5982\u4f55\u4ece\u5bf9\u5076\u89e3\u5230\u539f\u59cb\u89e3\uff0c\u5982\u679c\u4f60\u5e94\u7528\u4e86\u6838\u6280\u5de7\u90a3\u4e48\u5f97\u5230\u7684\u516c\u5f0f\u4f1a\u5305\u542b \u3002\u4e8b\u5b9e\u4e0a\uff0c w \u5fc5\u987b\u548c \u6709\u540c\u6837\u7684\u7ef4\u5ea6\uff0c\u53ef\u80fd\u662f\u5de8\u5927\u7684\u7ef4\u5ea6\u6216\u8005\u65e0\u9650\u7684\u7ef4\u5ea6\uff0c\u6240\u4ee5\u4f60\u5f88\u96be\u8ba1\u7b97\u5b83\u3002\u4f46\u600e\u4e48\u5728\u4e0d\u77e5\u9053 w \u7684\u60c5\u51b5\u4e0b\u505a\u51fa\u9884\u6d4b\uff1f\u597d\u6d88\u606f\u662f\u4f60\u53ef\u4ee5\u5c06\u516c\u5f0f 5-7 \u7684 w \u4ee3\u5165\u5230\u65b0\u7684\u6837\u672c \u7684\u51b3\u7b56\u51fd\u6570\u4e2d\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u5728\u8f93\u5165\u5411\u91cf\u4e4b\u95f4\u53ea\u6709\u70b9\u79ef\u7684\u65b9\u7a0b\u5f0f\u3002\u8fd9\u65f6\uff0c\u6838\u6280\u5de7\u5c06\u6d3e\u4e0a\u7528\u573a\uff0c\u89c1\u516c\u5f0f 5-11 \u6ce8\u610f\u5230\u652f\u6301\u5411\u91cf\u624d\u6ee1\u8db3 \u03b1(i)\u22600 \uff0c\u505a\u51fa\u9884\u6d4b\u53ea\u6d89\u53ca\u8ba1\u7b97\u4e3a\u652f\u6301\u5411\u91cf\u90e8\u5206\u7684\u8f93\u5165\u6837\u672c \u7684\u70b9\u79ef\uff0c\u800c\u4e0d\u662f\u5168\u90e8\u7684\u8bad\u7ec3\u6837\u672c\u3002\u5f53\u7136\uff0c\u4f60\u540c\u6837\u4e5f\u9700\u8981\u4f7f\u7528\u540c\u6837\u7684\u6280\u5de7\u6765\u8ba1\u7b97\u504f\u7f6e\u9879 b \uff0c\u89c1\u516c\u5f0f 5-12 \u5982\u679c\u4f60\u5f00\u59cb\u611f\u5230\u5934\u75db\uff0c\u8fd9\u5f88\u6b63\u5e38\uff1a\u56e0\u4e3a\u8fd9\u662f\u6838\u6280\u5de7\u4e00\u4e2a\u4e0d\u5e78\u7684\u526f\u4f5c\u7528 \u5728\u7ebf\u652f\u6301\u5411\u91cf\u673a \u5728\u7ed3\u675f\u8fd9\u4e00\u7ae0\u4e4b\u524d\uff0c\u6211\u4eec\u5feb\u901f\u5730\u4e86\u89e3\u4e00\u4e0b\u5728\u7ebf SVM \u5206\u7c7b\u5668\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u5728\u7ebf\u5b66\u4e60\u610f\u5473\u7740\u589e\u91cf\u5730\u5b66\u4e60\uff0c\u4e0d\u65ad\u6709\u65b0\u5b9e\u4f8b\uff09\u3002\u5bf9\u4e8e\u7ebf\u6027SVM\u5206\u7c7b\u5668\uff0c\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\uff08\u4f8b\u5982\u4f7f\u7528 SGDClassifire \uff09\u6700\u5c0f\u5316\u4ee3\u4ef7\u51fd\u6570\uff0c\u5982\u4ece\u539f\u59cb\u95ee\u9898\u63a8\u5bfc\u51fa\u7684\u516c\u5f0f 5-13\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u6bd4\u57fa\u4e8e QP \u65b9\u5f0f\u6536\u655b\u6162\u5f97\u591a\u3002 \u4ee3\u4ef7\u51fd\u6570\u7b2c\u4e00\u4e2a\u548c\u4f1a\u4f7f\u6a21\u578b\u6709\u4e00\u4e2a\u5c0f\u7684\u6743\u91cd\u5411\u91cf w \uff0c\u4ece\u800c\u83b7\u5f97\u4e00\u4e2a\u66f4\u5927\u7684\u95f4\u9694\u3002\u7b2c\u4e8c\u4e2a\u548c\u8ba1\u7b97\u6240\u6709\u95f4\u9694\u8fdd\u89c4\u7684\u603b\u6570\u3002\u5982\u679c\u6837\u672c\u4f4d\u4e8e\u201c\u8857\u9053\u201d\u4e0a\u548c\u6b63\u786e\u7684\u4e00\u8fb9\uff0c\u6216\u5b83\u4e0e\u201c\u8857\u9053\u201d\u6b63\u786e\u4e00\u8fb9\u7684\u8ddd\u79bb\u6210\u6bd4\u4f8b\uff0c\u5219\u95f4\u9694\u8fdd\u89c4\u7b49\u4e8e 0\u3002\u6700\u5c0f\u5316\u4fdd\u8bc1\u4e86\u6a21\u578b\u7684\u95f4\u9694\u8fdd\u89c4\u5c3d\u53ef\u80fd\u5c0f\u5e76\u4e14\u5c11\u3002 Hinge \u635f\u5931 \u51fd\u6570 max(0, 1\u2013t) \u88ab\u79f0\u4e3a Hinge \u635f\u5931\u51fd\u6570\uff08\u5982\u4e0b\uff09\u3002\u5f53 t\u22651 \u65f6\uff0cHinge \u503c\u4e3a 0\u3002\u5982\u679c t<1 ,\u5b83\u7684\u5bfc\u6570\uff08\u659c\u7387\uff09\u4e3a -1\uff0c\u82e5 t>1 \uff0c\u5219\u7b49\u4e8e0\u3002\u5728 t=1 \u5904\uff0c\u5b83\u662f\u4e0d\u53ef\u5fae\u7684\uff0c\u4f46\u5c31\u50cf\u5957\u7d22\u56de\u5f52\uff08Lasso Regression\uff09\uff08\u53c2\u89c1 130 \u9875\u5957\u7d22\u56de\u5f52\uff09\u4e00\u6837\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u5728 t=0 \u65f6\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08\u5373 -1 \u5230 0 \u4e4b\u95f4\u4efb\u4f55\u503c\uff09 \u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5728\u7ebf\u6838\u5316\u7684 SVM\u3002\u4f8b\u5982\u4f7f\u7528\u201c\u589e\u91cf\u548c\u9012\u51cf SVM \u5b66\u4e60\u201d\u6216\u8005\u201c\u5728\u7ebf\u548c\u4e3b\u52a8\u7684\u5feb\u901f\u6838\u5206\u7c7b\u5668\u201d\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u90fd\u662f\u7528 Matlab \u548c C++ \u5b9e\u73b0\u7684\u3002\u5bf9\u4e8e\u5927\u89c4\u6a21\u7684\u975e\u7ebf\u6027\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u8003\u8651\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\uff08\u89c1\u7b2c\u4e8c\u90e8\u5206\uff09 \u7ec3\u4e60 \u652f\u6301\u5411\u91cf\u673a\u80cc\u540e\u7684\u57fa\u672c\u601d\u60f3\u662f\u4ec0\u4e48 \u4ec0\u4e48\u662f\u652f\u6301\u5411\u91cf \u5f53\u4f7f\u7528 SVM \u65f6\uff0c\u4e3a\u4ec0\u4e48\u6807\u51c6\u5316\u8f93\u5165\u5f88\u91cd\u8981\uff1f \u5206\u7c7b\u4e00\u4e2a\u6837\u672c\u65f6\uff0cSVM \u5206\u7c7b\u5668\u80fd\u591f\u8f93\u51fa\u4e00\u4e2a\u7f6e\u4fe1\u503c\u5417\uff1f\u6982\u7387\u5462\uff1f \u5728\u4e00\u4e2a\u6709\u6570\u767e\u4e07\u8bad\u7ec3\u6837\u672c\u548c\u6570\u767e\u7279\u5f81\u7684\u8bad\u7ec3\u96c6\u4e0a\uff0c\u4f60\u662f\u5426\u5e94\u8be5\u4f7f\u7528 SVM \u539f\u59cb\u5f62\u5f0f\u6216\u5bf9\u5076\u5f62\u5f0f\u6765\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\uff1f \u5047\u8bbe\u4f60\u7528 RBF \u6838\u6765\u8bad\u7ec3\u4e00\u4e2a SVM \u5206\u7c7b\u5668\uff0c\u5982\u679c\u5bf9\u8bad\u7ec3\u96c6\u6b20\u62df\u5408\uff1a\u4f60\u5e94\u8be5\u589e\u5927\u6216\u8005\u51cf\u5c0f \u03b3 \u5417\uff1f\u8c03\u6574\u53c2\u6570 C \u5462\uff1f \u4f7f\u7528\u73b0\u6709\u7684 QP \u89e3\u51b3\u65b9\u6848\uff0c\u4f60\u5e94\u8be5\u600e\u4e48\u6837\u8bbe\u7f6e QP \u53c2\u6570\uff08 H \uff0c f \uff0c A \uff0c\u548c b \uff09\u53bb\u89e3\u51b3\u4e00\u4e2a\u8f6f\u95f4\u9694\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u95ee\u9898\uff1f \u5728\u4e00\u4e2a\u7ebf\u6027\u53ef\u5206\u7684\u6570\u636e\u96c6\u8bad\u7ec3\u4e00\u4e2a LinearSVC \uff0c\u5e76\u5728\u540c\u4e00\u4e2a\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a SVC \u548c SGDClassifier \uff0c\u770b\u5b83\u4eec\u662f\u5426\u4ea7\u751f\u4e86\u5927\u81f4\u76f8\u540c\u6548\u679c\u7684\u6a21\u578b\u3002 \u5728 MNIST \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a SVM \u5206\u7c7b\u5668\u3002\u56e0\u4e3a SVM \u5206\u7c7b\u5668\u662f\u4e8c\u5143\u7684\u5206\u7c7b\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u5bf9\u591a\uff08one-versus-all\uff09\u6765\u5bf9 10 \u4e2a\u6570\u5b57\u8fdb\u884c\u5206\u7c7b\u3002\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u5c0f\u7684\u9a8c\u8bc1\u96c6\u6765\u8c03\u6574\u8d85\u53c2\u6570\uff0c\u4ee5\u52a0\u5feb\u8fdb\u7a0b\u3002\u6700\u540e\u4f60\u80fd\u8fbe\u5230\u591a\u5c11\u51c6\u786e\u5ea6\uff1f \u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u4f4f\u5b85\uff08California housing\uff09\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a SVM \u56de\u5f52\u6a21\u578b \u8fd9\u4e9b\u7ec3\u4e60\u7684\u7b54\u6848\u5728\u9644\u5f55 A\u3002","title":"5.\u652f\u6301\u5411\u91cf\u673a"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_1","text":"\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u662f\u4e2a\u975e\u5e38\u5f3a\u5927\u5e76\u4e14\u6709\u591a\u79cd\u529f\u80fd\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u80fd\u591f\u505a\u7ebf\u6027\u6216\u8005\u975e\u7ebf\u6027\u7684\u5206\u7c7b\uff0c\u56de\u5f52\uff0c\u751a\u81f3\u5f02\u5e38\u503c\u68c0\u6d4b\u3002\u673a\u5668\u5b66\u4e60\u9886\u57df\u4e2d\u6700\u4e3a\u6d41\u884c\u7684\u6a21\u578b\u4e4b\u4e00\uff0c\u662f\u4efb\u4f55\u5b66\u4e60\u673a\u5668\u5b66\u4e60\u7684\u4eba\u5fc5\u5907\u7684\u5de5\u5177\u3002SVM \u7279\u522b\u9002\u5408\u5e94\u7528\u4e8e\u590d\u6742\u4f46\u4e2d\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u7684\u5206\u7c7b\u95ee\u9898\u3002 \u672c\u7ae0\u8282\u5c06\u9610\u8ff0\u652f\u6301\u5411\u91cf\u673a\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u600e\u4e48\u4f7f\u7528\u8fd9\u4e2a\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002","title":"\u4e94\u3001\u652f\u6301\u5411\u91cf\u673a"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_2","text":"SVM \u7684\u57fa\u672c\u601d\u60f3\u80fd\u591f\u7528\u4e00\u4e9b\u56fe\u7247\u6765\u89e3\u91ca\u5f97\u5f88\u597d\uff0c\u56fe 5-1 \u5c55\u793a\u4e86\u6211\u4eec\u5728\u7b2c4\u7ae0\u7ed3\u5c3e\u5904\u4ecb\u7ecd\u7684\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e24\u4e2a\u79cd\u7c7b\u80fd\u591f\u88ab\u975e\u5e38\u6e05\u6670\uff0c\u975e\u5e38\u5bb9\u6613\u7684\u7528\u4e00\u6761\u76f4\u7ebf\u5206\u5f00\uff08\u5373\u7ebf\u6027\u53ef\u5206\u7684\uff09\u3002\u5de6\u8fb9\u7684\u56fe\u663e\u793a\u4e86\u4e09\u79cd\u53ef\u80fd\u7684\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u5224\u5b9a\u8fb9\u754c\u3002\u5176\u4e2d\u7528\u865a\u7ebf\u8868\u793a\u7684\u7ebf\u6027\u6a21\u578b\u5224\u5b9a\u8fb9\u754c\u5f88\u5dee\uff0c\u751a\u81f3\u4e0d\u80fd\u6b63\u786e\u5730\u5212\u5206\u7c7b\u522b\u3002\u53e6\u5916\u4e24\u4e2a\u7ebf\u6027\u6a21\u578b\u5728\u8fd9\u4e2a\u6570\u636e\u96c6\u8868\u73b0\u7684\u5f88\u597d\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u5224\u5b9a\u8fb9\u754c\u5f88\u9760\u8fd1\u6837\u672c\u70b9\uff0c\u5728\u65b0\u7684\u6570\u636e\u4e0a\u53ef\u80fd\u4e0d\u4f1a\u8868\u73b0\u7684\u5f88\u597d\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u53f3\u8fb9\u56fe\u4e2d SVM \u5206\u7c7b\u5668\u7684\u5224\u5b9a\u8fb9\u754c\u5b9e\u7ebf\uff0c\u4e0d\u4ec5\u5206\u5f00\u4e86\u4e24\u79cd\u7c7b\u522b\uff0c\u800c\u4e14\u8fd8\u5c3d\u53ef\u80fd\u5730\u8fdc\u79bb\u4e86\u6700\u9760\u8fd1\u7684\u8bad\u7ec3\u6570\u636e\u70b9\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a SVM \u5206\u7c7b\u5668\u5728\u4e24\u79cd\u7c7b\u522b\u4e4b\u95f4\u4fdd\u6301\u4e86\u4e00\u6761\u5c3d\u53ef\u80fd\u5bbd\u655e\u7684\u8857\u9053\uff08\u56fe\u4e2d\u5e73\u884c\u7684\u865a\u7ebf\uff09\uff0c\u5176\u88ab\u79f0\u4e3a\u6700\u5927\u95f4\u9694\u5206\u7c7b\u3002 \u6211\u4eec\u6ce8\u610f\u5230\u6dfb\u52a0\u66f4\u591a\u7684\u6837\u672c\u70b9\u5728\u201c\u8857\u9053\u201d\u5916\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u5224\u5b9a\u8fb9\u754c\uff0c\u56e0\u4e3a\u5224\u5b9a\u8fb9\u754c\u662f\u7531\u4f4d\u4e8e\u201c\u8857\u9053\u201d\u8fb9\u7f18\u7684\u6837\u672c\u70b9\u786e\u5b9a\u7684\uff0c\u8fd9\u4e9b\u6837\u672c\u70b9\u88ab\u79f0\u4e3a\u201c\u652f\u6301\u5411\u91cf\u201d\uff08\u56fe 5-1 \u4e2d\u88ab\u5706\u5708\u5708\u8d77\u6765\u7684\u70b9\uff09 \u8b66\u544a SVM \u5bf9\u7279\u5f81\u7f29\u653e\u6bd4\u8f83\u654f\u611f\uff0c\u53ef\u4ee5\u770b\u5230\u56fe 5-2\uff1a\u5de6\u8fb9\u7684\u56fe\u4e2d\uff0c\u5782\u76f4\u7684\u6bd4\u4f8b\u8981\u66f4\u5927\u4e8e\u6c34\u5e73\u7684\u6bd4\u4f8b\uff0c\u6240\u4ee5\u6700\u5bbd\u7684\u201c\u8857\u9053\u201d\u63a5\u8fd1\u6c34\u5e73\u3002\u4f46\u5bf9\u7279\u5f81\u7f29\u653e\u540e\uff08\u4f8b\u5982\u4f7f\u7528Scikit-Learn\u7684StandardScaler\uff09\uff0c\u5224\u5b9a\u8fb9\u754c\u770b\u8d77\u6765\u8981\u597d\u5f97\u591a\uff0c\u5982\u53f3\u56fe\u3002","title":"\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_3","text":"\u5982\u679c\u6211\u4eec\u4e25\u683c\u5730\u89c4\u5b9a\u6240\u6709\u7684\u6570\u636e\u90fd\u4e0d\u5728\u201c\u8857\u9053\u201d\u4e0a\uff0c\u90fd\u5728\u6b63\u786e\u5730\u4e24\u8fb9\uff0c\u79f0\u4e3a\u786c\u95f4\u9694\u5206\u7c7b\uff0c\u786c\u95f4\u9694\u5206\u7c7b\u6709\u4e24\u4e2a\u95ee\u9898\uff0c\u7b2c\u4e00\uff0c\u53ea\u5bf9\u7ebf\u6027\u53ef\u5206\u7684\u6570\u636e\u8d77\u4f5c\u7528\uff0c\u7b2c\u4e8c\uff0c\u5bf9\u5f02\u5e38\u70b9\u654f\u611f\u3002\u56fe 5-3 \u663e\u793a\u4e86\u53ea\u6709\u4e00\u4e2a\u5f02\u5e38\u70b9\u7684\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\uff1a\u5de6\u8fb9\u7684\u56fe\u4e2d\u5f88\u96be\u627e\u5230\u786c\u95f4\u9694\uff0c\u53f3\u8fb9\u7684\u56fe\u4e2d\u5224\u5b9a\u8fb9\u754c\u548c\u6211\u4eec\u4e4b\u524d\u5728\u56fe 5-1 \u4e2d\u6ca1\u6709\u5f02\u5e38\u70b9\u7684\u5224\u5b9a\u8fb9\u754c\u975e\u5e38\u4e0d\u4e00\u6837\uff0c\u5b83\u5f88\u96be\u4e00\u822c\u5316\u3002 \u4e3a\u4e86\u907f\u514d\u4e0a\u8ff0\u7684\u95ee\u9898\uff0c\u6211\u4eec\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u66f4\u52a0\u8f6f\u6027\u7684\u6a21\u578b\u3002\u76ee\u7684\u5728\u4fdd\u6301\u201c\u8857\u9053\u201d\u5c3d\u53ef\u80fd\u5927\u548c\u907f\u514d\u95f4\u9694\u8fdd\u89c4\uff08\u4f8b\u5982\uff1a\u6570\u636e\u70b9\u51fa\u73b0\u5728\u201c\u8857\u9053\u201d\u4e2d\u592e\u6216\u8005\u751a\u81f3\u5728\u9519\u8bef\u7684\u4e00\u8fb9\uff09\u4e4b\u95f4\u627e\u5230\u4e00\u4e2a\u826f\u597d\u7684\u5e73\u8861\u3002\u8fd9\u5c31\u662f\u8f6f\u95f4\u9694\u5206\u7c7b\u3002 \u5728 Scikit-Learn \u5e93\u7684 SVM \u7c7b\uff0c\u4f60\u53ef\u4ee5\u7528 C \u8d85\u53c2\u6570\uff08\u60e9\u7f5a\u7cfb\u6570\uff09\u6765\u63a7\u5236\u8fd9\u79cd\u5e73\u8861\uff1a\u8f83\u5c0f\u7684 C \u4f1a\u5bfc\u81f4\u66f4\u5bbd\u7684\u201c\u8857\u9053\u201d\uff0c\u4f46\u66f4\u591a\u7684\u95f4\u9694\u8fdd\u89c4\u3002\u56fe 5-4 \u663e\u793a\u4e86\u5728\u975e\u7ebf\u6027\u53ef\u5206\u9694\u7684\u6570\u636e\u96c6\u4e0a\uff0c\u4e24\u4e2a\u8f6f\u95f4\u9694SVM\u5206\u7c7b\u5668\u7684\u5224\u5b9a\u8fb9\u754c\u3002\u5de6\u8fb9\u56fe\u4e2d\uff0c\u4f7f\u7528\u4e86\u8f83\u5927\u7684 C \u503c\uff0c\u5bfc\u81f4\u66f4\u5c11\u7684\u95f4\u9694\u8fdd\u89c4\uff0c\u4f46\u662f\u95f4\u9694\u8f83\u5c0f\u3002\u53f3\u8fb9\u7684\u56fe\uff0c\u4f7f\u7528\u4e86\u8f83\u5c0f\u7684 C \u503c\uff0c\u95f4\u9694\u53d8\u5927\u4e86\uff0c\u4f46\u662f\u8bb8\u591a\u6570\u636e\u70b9\u51fa\u73b0\u5728\u4e86\u201c\u8857\u9053\u201d\u4e0a\u3002\u7136\u800c\uff0c\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u5668\u4f3c\u4e4e\u6cdb\u5316\u5730\u66f4\u597d\uff1a\u4e8b\u5b9e\u4e0a\uff0c\u5728\u8fd9\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u51cf\u5c11\u4e86\u9884\u6d4b\u9519\u8bef\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\u5927\u90e8\u5206\u7684\u95f4\u9694\u8fdd\u89c4\u70b9\u51fa\u73b0\u5728\u4e86\u5224\u5b9a\u8fb9\u754c\u6b63\u786e\u7684\u4e00\u4fa7\u3002 \u63d0\u793a \u5982\u679c\u4f60\u7684 SVM \u6a21\u578b\u8fc7\u62df\u5408\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u51cf\u5c0f\u8d85\u53c2\u6570 C \u53bb\u8c03\u6574\u3002 \u4ee5\u4e0b\u7684 Scikit-Learn \u4ee3\u7801\u52a0\u8f7d\u4e86\u5185\u7f6e\u7684\u9e22\u5c3e\u82b1\uff08Iris\uff09\u6570\u636e\u96c6\uff0c\u7f29\u653e\u7279\u5f81\uff0c\u5e76\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027 SVM \u6a21\u578b\uff08\u4f7f\u7528 LinearSVC \u7c7b\uff0c\u8d85\u53c2\u6570 C=1 \uff0chinge \u635f\u5931\u51fd\u6570\uff09\u6765\u68c0\u6d4b Virginica \u9e22\u5c3e\u82b1\uff0c\u751f\u6210\u7684\u6a21\u578b\u5728\u56fe 5-4 \u7684\u53f3\u56fe\u3002 import numpy as np from sklearn import datasets from sklearn.pipeline import Pipeline from sklearn.preprocessing import StandardScaler from sklearn.svm import LinearSVC iris = datasets.load_iris() X = iris[\"data\"][:, (2, 3)] # petal length, petal width y = (iris[\"target\"] == 2).astype(np.float64) # Iris-Virginica svm_clf = Pipeline(( (\"scaler\", StandardScaler()), (\"linear_svc\", LinearSVC(C=1, loss=\"hinge\")), )) svm_clf.fit(X, y) Then, as usual, you can use the model to make predictions: >>> svm_clf.predict([[5.5, 1.7]]) array([ 1.]) \u6ce8 \u4e0d\u540c\u4e8e Logistic \u56de\u5f52\u5206\u7c7b\u5668\uff0cSVM \u5206\u7c7b\u5668\u4e0d\u4f1a\u8f93\u51fa\u6bcf\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u3002 \u4f5c\u4e3a\u4e00\u79cd\u9009\u62e9\uff0c\u4f60\u53ef\u4ee5\u5728 SVC \u7c7b\uff0c\u4f7f\u7528 SVC(kernel=\"linear\", C=1) \uff0c\u4f46\u662f\u5b83\u6bd4\u8f83\u6162\uff0c\u5c24\u5176\u5728\u8f83\u5927\u7684\u8bad\u7ec3\u96c6\u4e0a\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u88ab\u63a8\u8350\u3002\u53e6\u4e00\u4e2a\u9009\u62e9\u662f\u4f7f\u7528 SGDClassifier \u7c7b\uff0c\u5373 SGDClassifier(loss=\"hinge\", alpha=1/(m*C)) \u3002\u5b83\u5e94\u7528\u4e86\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD \u89c1\u7b2c\u56db\u7ae0\uff09\u6765\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u3002\u5c3d\u7ba1\u5b83\u4e0d\u4f1a\u548c LinearSVC \u4e00\u6837\u5feb\u901f\u6536\u655b\uff0c\u4f46\u662f\u5bf9\u4e8e\u5904\u7406\u90a3\u4e9b\u4e0d\u9002\u5408\u653e\u5728\u5185\u5b58\u7684\u5927\u6570\u636e\u96c6\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u6216\u8005\u5904\u7406\u5728\u7ebf\u5206\u7c7b\u4efb\u52a1\u540c\u6837\u6709\u7528\u3002 \u63d0\u793a LinearSVC \u8981\u4f7f\u504f\u7f6e\u9879\u89c4\u8303\u5316\uff0c\u9996\u5148\u4f60\u5e94\u8be5\u96c6\u4e2d\u8bad\u7ec3\u96c6\u51cf\u53bb\u5b83\u7684\u5e73\u5747\u6570\u3002\u5982\u679c\u4f60\u4f7f\u7528\u4e86 StandardScaler \uff0c\u90a3\u4e48\u5b83\u4f1a\u81ea\u52a8\u5904\u7406\u3002\u6b64\u5916\uff0c\u786e\u4fdd\u4f60\u8bbe\u7f6e loss \u53c2\u6570\u4e3a hinge \uff0c\u56e0\u4e3a\u5b83\u4e0d\u662f\u9ed8\u8ba4\u503c\u3002\u6700\u540e\uff0c\u4e3a\u4e86\u5f97\u5230\u66f4\u597d\u7684\u6548\u679c\uff0c\u4f60\u9700\u8981\u5c06 dual \u53c2\u6570\u8bbe\u7f6e\u4e3a False \uff0c\u9664\u975e\u7279\u5f81\u6570\u6bd4\u6837\u672c\u91cf\u591a\uff08\u6211\u4eec\u5c06\u5728\u672c\u7ae0\u540e\u9762\u8ba8\u8bba\u4e8c\u5143\u6027\uff09","title":"\u8f6f\u95f4\u9694\u5206\u7c7b"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_4","text":"\u5c3d\u7ba1\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u5728\u8bb8\u591a\u6848\u4f8b\u4e0a\u8868\u73b0\u5f97\u51fa\u4e4e\u610f\u6599\u7684\u597d\uff0c\u4f46\u662f\u5f88\u591a\u6570\u636e\u96c6\u5e76\u4e0d\u662f\u7ebf\u6027\u53ef\u5206\u7684\u3002\u4e00\u79cd\u5904\u7406\u975e\u7ebf\u6027\u6570\u636e\u96c6\u65b9\u6cd5\u662f\u589e\u52a0\u66f4\u591a\u7684\u7279\u5f81\uff0c\u4f8b\u5982\u591a\u9879\u5f0f\u7279\u5f81\uff08\u6b63\u5982\u4f60\u5728\u7b2c4\u7ae0\u6240\u505a\u7684\u90a3\u6837\uff09\uff1b\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u53d8\u6210\u7ebf\u6027\u53ef\u5206\u7684\u6570\u636e\u3002\u5728\u56fe 5-5\u7684\u5de6\u56fe\u4e2d\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u7279\u5f81 x1 \u7684\u7b80\u5355\u7684\u6570\u636e\u96c6\uff0c\u6b63\u5982\u4f60\u770b\u5230\u7684\uff0c\u8be5\u6570\u636e\u96c6\u4e0d\u662f\u7ebf\u6027\u53ef\u5206\u7684\u3002\u4f46\u662f\u5982\u679c\u4f60\u589e\u52a0\u4e86\u7b2c\u4e8c\u4e2a\u7279\u5f81 x2=(x1)^2 \uff0c\u4ea7\u751f\u7684 2D \u6570\u636e\u96c6\u5c31\u80fd\u5f88\u597d\u7684\u7ebf\u6027\u53ef\u5206\u3002 \u4e3a\u4e86\u5b9e\u65bd\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u901a\u8fc7 Scikit-Learn\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6d41\u6c34\u7ebf\uff08Pipeline\uff09\u53bb\u5305\u542b\u591a\u9879\u5f0f\u7279\u5f81\uff08PolynomialFeatures\uff09\u53d8\u6362\uff08\u5728 121 \u9875\u7684\u201cPolynomial Regression\u201d\u4e2d\u8ba8\u8bba\uff09\uff0c\u7136\u540e\u4e00\u4e2a StandardScaler \u548c LinearSVC \u3002\u8ba9\u6211\u4eec\u5728\u536b\u661f\u6570\u636e\u96c6\uff08moons datasets\uff09\u6d4b\u8bd5\u4e00\u4e0b\u6548\u679c\u3002 from sklearn.datasets import make_moons from sklearn.pipeline import Pipeline from sklearn.preprocessing import PolynomialFeatures polynomial_svm_clf = Pipeline(( (\"poly_features\", PolynomialFeatures(degree=3)), (\"scaler\", StandardScaler()), (\"svm_clf\", LinearSVC(C=10, loss=\"hinge\")) )) polynomial_svm_clf.fit(X, y)","title":"\u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_5","text":"\u6dfb\u52a0\u591a\u9879\u5f0f\u7279\u5f81\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u4e0d\u4ec5\u4ec5\u5728 SVM\uff0c\u5728\u5404\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u90fd\u6709\u4e0d\u9519\u7684\u8868\u73b0\uff0c\u4f46\u662f\u4f4e\u6b21\u6570\u7684\u591a\u9879\u5f0f\u4e0d\u80fd\u5904\u7406\u975e\u5e38\u590d\u6742\u7684\u6570\u636e\u96c6\uff0c\u800c\u9ad8\u6b21\u6570\u7684\u591a\u9879\u5f0f\u5374\u4ea7\u751f\u4e86\u5927\u91cf\u7684\u7279\u5f81\uff0c\u4f1a\u4f7f\u6a21\u578b\u53d8\u5f97\u6162\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5f53\u4f60\u4f7f\u7528 SVM \u65f6\uff0c\u4f60\u53ef\u4ee5\u8fd0\u7528\u4e00\u4e2a\u88ab\u79f0\u4e3a\u201c\u6838\u6280\u5de7\u201d\uff08kernel trick\uff09\u7684\u795e\u5947\u6570\u5b66\u6280\u5de7\u3002\u5b83\u53ef\u4ee5\u53d6\u5f97\u5c31\u50cf\u4f60\u6dfb\u52a0\u4e86\u8bb8\u591a\u591a\u9879\u5f0f\uff0c\u751a\u81f3\u6709\u9ad8\u6b21\u6570\u7684\u591a\u9879\u5f0f\uff0c\u4e00\u6837\u597d\u7684\u7ed3\u679c\u3002\u6240\u4ee5\u4e0d\u4f1a\u5927\u91cf\u7279\u5f81\u5bfc\u81f4\u7684\u7ec4\u5408\u7206\u70b8\uff0c\u56e0\u4e3a\u4f60\u5e76\u6ca1\u6709\u589e\u52a0\u4efb\u4f55\u7279\u5f81\u3002\u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u7528 SVC \u7c7b\u6765\u5b9e\u73b0\u3002\u8ba9\u6211\u4eec\u5728\u536b\u661f\u6570\u636e\u96c6\u6d4b\u8bd5\u4e00\u4e0b\u6548\u679c\u3002 from sklearn.svm import SVC poly_kernel_svm_clf = Pipeline(( (\"scaler\", StandardScaler()), (\"svm_clf\", SVC(kernel=\"poly\", degree=3, coef0=1, C=5)) )) poly_kernel_svm_clf.fit(X, y) \u8fd9\u6bb5\u4ee3\u7801\u75283\u9636\u7684\u591a\u9879\u5f0f\u6838\u8bad\u7ec3\u4e86\u4e00\u4e2a SVM \u5206\u7c7b\u5668\uff0c\u5373\u56fe 5-7 \u7684\u5de6\u56fe\u3002\u53f3\u56fe\u662f\u4f7f\u7528\u4e8610\u9636\u7684\u591a\u9879\u5f0f\u6838 SVM \u5206\u7c7b\u5668\u3002\u5f88\u660e\u663e\uff0c\u5982\u679c\u4f60\u7684\u6a21\u578b\u8fc7\u62df\u5408\uff0c\u4f60\u53ef\u4ee5\u51cf\u5c0f\u591a\u9879\u5f0f\u6838\u7684\u9636\u6570\u3002\u76f8\u53cd\u7684\uff0c\u5982\u679c\u662f\u6b20\u62df\u5408\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u589e\u5927\u5b83\u3002\u8d85\u53c2\u6570 coef0 \u63a7\u5236\u4e86\u9ad8\u9636\u591a\u9879\u5f0f\u4e0e\u4f4e\u9636\u591a\u9879\u5f0f\u5bf9\u6a21\u578b\u7684\u5f71\u54cd\u3002 \u901a\u7528\u7684\u65b9\u6cd5\u662f\u7528\u7f51\u683c\u641c\u7d22\uff08grid search \u89c1\u7b2c 2 \u7ae0\uff09\u53bb\u627e\u5230\u6700\u4f18\u8d85\u53c2\u6570\u3002\u9996\u5148\u8fdb\u884c\u975e\u5e38\u7c97\u7565\u7684\u7f51\u683c\u641c\u7d22\u4e00\u822c\u4f1a\u5f88\u5feb\uff0c\u7136\u540e\u5728\u627e\u5230\u7684\u6700\u4f73\u503c\u8fdb\u884c\u66f4\u7ec6\u7684\u7f51\u683c\u641c\u7d22\u3002\u5bf9\u6bcf\u4e2a\u8d85\u53c2\u6570\u7684\u4f5c\u7528\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u89e3\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728\u6b63\u786e\u7684\u8d85\u53c2\u6570\u7a7a\u95f4\u627e\u5230\u5408\u9002\u7684\u503c\u3002","title":"\u591a\u9879\u5f0f\u6838"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_6","text":"\u53e6\u4e00\u79cd\u89e3\u51b3\u975e\u7ebf\u6027\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u76f8\u4f3c\u51fd\u6570\uff08similarity funtion\uff09\u8ba1\u7b97\u6bcf\u4e2a\u6837\u672c\u4e0e\u7279\u5b9a\u5730\u6807\uff08landmark\uff09\u7684\u76f8\u4f3c\u5ea6\u3002\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u524d\u9762\u8ba8\u8bba\u8fc7\u7684\u4e00\u7ef4\u6570\u636e\u96c6\uff0c\u5e76\u5728 x1=-2 \u548c x1=1 \u4e4b\u95f4\u589e\u52a0\u4e24\u4e2a\u5730\u6807\uff08\u56fe 5-8 \u5de6\u56fe\uff09\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u76f8\u4f3c\u51fd\u6570\uff0c\u5373\u9ad8\u65af\u5f84\u5411\u57fa\u51fd\u6570\uff08Gaussian Radial Basis Function\uff0cRBF\uff09\uff0c\u8bbe\u7f6e \u03b3 = 0.3 \uff08\u89c1\u516c\u5f0f 5-1\uff09 \u516c\u5f0f 5-1 RBF \u5b83\u662f\u4e2a\u4ece 0 \u5230 1 \u7684\u949f\u578b\u51fd\u6570\uff0c\u503c\u4e3a 0 \u7684\u79bb\u5730\u6807\u5f88\u8fdc\uff0c\u503c\u4e3a 1 \u7684\u5728\u5730\u6807\u4e0a\u3002\u73b0\u5728\u6211\u4eec\u51c6\u5907\u8ba1\u7b97\u65b0\u7279\u5f81\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u6837\u672c x1=-1 \uff1a\u5b83\u8ddd\u79bb\u7b2c\u4e00\u4e2a\u5730\u6807\u8ddd\u79bb\u662f 1\uff0c\u8ddd\u79bb\u7b2c\u4e8c\u4e2a\u5730\u6807\u662f 2\u3002\u56e0\u6b64\u5b83\u7684\u65b0\u7279\u5f81\u4e3a x2=exp(-0.3 \u00d7 (1^2))\u22480.74 \u548c x3=exp(-0.3 \u00d7 (2^2))\u22480.30 \u3002\u56fe 5-8 \u53f3\u8fb9\u7684\u56fe\u663e\u793a\u4e86\u7279\u5f81\u8f6c\u6362\u540e\u7684\u6570\u636e\u96c6\uff08\u5220\u9664\u4e86\u539f\u59cb\u7279\u5f81\uff09\uff0c\u6b63\u5982\u4f60\u770b\u5230\u7684\uff0c\u5b83\u73b0\u5728\u662f\u7ebf\u6027\u53ef\u5206\u4e86\u3002 \u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u5982\u4f55\u9009\u62e9\u5730\u6807\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5728\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6837\u672c\u7684\u4f4d\u7f6e\u521b\u5efa\u5730\u6807\u3002\u8fd9\u5c06\u4ea7\u751f\u66f4\u591a\u7684\u7ef4\u5ea6\u4ece\u800c\u589e\u52a0\u4e86\u8f6c\u6362\u540e\u6570\u636e\u96c6\u662f\u7ebf\u6027\u53ef\u5206\u7684\u53ef\u80fd\u6027\u3002\u4f46\u7f3a\u70b9\u662f\uff0c m \u4e2a\u6837\u672c\uff0c n \u4e2a\u7279\u5f81\u7684\u8bad\u7ec3\u96c6\u88ab\u8f6c\u6362\u6210\u4e86 m \u4e2a\u5b9e\u4f8b\uff0c m \u4e2a\u7279\u5f81\u7684\u8bad\u7ec3\u96c6\uff08\u5047\u8bbe\u4f60\u5220\u9664\u4e86\u539f\u59cb\u7279\u5f81\uff09\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5982\u679c\u4f60\u7684\u8bad\u7ec3\u96c6\u975e\u5e38\u5927\uff0c\u4f60\u6700\u7ec8\u4f1a\u5f97\u5230\u540c\u6837\u5927\u7684\u7279\u5f81\u3002","title":"\u589e\u52a0\u76f8\u4f3c\u7279\u5f81"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#rbf","text":"\u5c31\u50cf\u591a\u9879\u5f0f\u7279\u5f81\u6cd5\u4e00\u6837\uff0c\u76f8\u4f3c\u7279\u5f81\u6cd5\u5bf9\u5404\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u540c\u6837\u4e5f\u6709\u4e0d\u9519\u7684\u8868\u73b0\u3002\u4f46\u662f\u5728\u6240\u6709\u989d\u5916\u7279\u5f81\u4e0a\u7684\u8ba1\u7b97\u6210\u672c\u53ef\u80fd\u5f88\u9ad8\uff0c\u7279\u522b\u662f\u5728\u5927\u89c4\u6a21\u7684\u8bad\u7ec3\u96c6\u4e0a\u3002\u7136\u800c\uff0c\u201c\u6838\u201d \u6280\u5de7\u518d\u4e00\u6b21\u663e\u73b0\u4e86\u5b83\u5728 SVM \u4e0a\u7684\u795e\u5947\u4e4b\u5904\uff1a\u9ad8\u65af\u6838\u8ba9\u4f60\u53ef\u4ee5\u83b7\u5f97\u540c\u6837\u597d\u7684\u7ed3\u679c\u6210\u4e3a\u53ef\u80fd\uff0c\u5c31\u50cf\u4f60\u5728\u76f8\u4f3c\u7279\u5f81\u6cd5\u6dfb\u52a0\u4e86\u8bb8\u591a\u76f8\u4f3c\u7279\u5f81\u4e00\u6837\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u4f60\u5e76\u4e0d\u9700\u8981\u5728RBF\u6dfb\u52a0\u5b83\u4eec\u3002\u6211\u4eec\u4f7f\u7528 SVC \u7c7b\u7684\u9ad8\u65af RBF \u6838\u6765\u68c0\u9a8c\u4e00\u4e0b\u3002 rbf_kernel_svm_clf = Pipeline(( (\"scaler\", StandardScaler()), (\"svm_clf\", SVC(kernel=\"rbf\", gamma=5, C=0.001)) )) rbf_kernel_svm_clf.fit(X, y) \u8fd9\u4e2a\u6a21\u578b\u5728\u56fe 5-9 \u7684\u5de6\u4e0b\u89d2\u8868\u793a\u3002\u5176\u4ed6\u7684\u56fe\u663e\u793a\u4e86\u7528\u4e0d\u540c\u7684\u8d85\u53c2\u6570 gamma (\u03b3) \u548c C \u8bad\u7ec3\u7684\u6a21\u578b\u3002\u589e\u5927 \u03b3 \u4f7f\u949f\u578b\u66f2\u7ebf\u66f4\u7a84\uff08\u56fe 5-8 \u5de6\u56fe\uff09\uff0c\u5bfc\u81f4\u6bcf\u4e2a\u6837\u672c\u7684\u5f71\u54cd\u8303\u56f4\u53d8\u5f97\u66f4\u5c0f\uff1a\u5373\u5224\u5b9a\u8fb9\u754c\u6700\u7ec8\u53d8\u5f97\u66f4\u4e0d\u89c4\u5219\uff0c\u5728\u5355\u4e2a\u6837\u672c\u5468\u56f4\u73af\u7ed5\u3002\u76f8\u53cd\u7684\uff0c\u8f83\u5c0f\u7684 \u03b3 \u503c\u4f7f\u949f\u578b\u66f2\u7ebf\u66f4\u5bbd\uff0c\u6837\u672c\u6709\u66f4\u5927\u7684\u5f71\u54cd\u8303\u56f4\uff0c\u5224\u5b9a\u8fb9\u754c\u6700\u7ec8\u5219\u66f4\u52a0\u5e73\u6ed1\u3002\u6240\u4ee5\u03b3\u662f\u53ef\u8c03\u6574\u7684\u8d85\u53c2\u6570\uff1a\u5982\u679c\u4f60\u7684\u6a21\u578b\u8fc7\u62df\u5408\uff0c\u4f60\u5e94\u8be5\u51cf\u5c0f \u03b3 \u503c\uff0c\u82e5\u6b20\u62df\u5408\uff0c\u5219\u589e\u5927 \u03b3 \uff08\u4e0e\u8d85\u53c2\u6570 C \u76f8\u4f3c\uff09\u3002 \u8fd8\u6709\u5176\u4ed6\u7684\u6838\u51fd\u6570\uff0c\u4f46\u5f88\u5c11\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u4e00\u4e9b\u6838\u51fd\u6570\u662f\u4e13\u95e8\u7528\u4e8e\u7279\u5b9a\u7684\u6570\u636e\u7ed3\u6784\u3002\u5728\u5bf9\u6587\u672c\u6587\u6863\u6216\u8005 DNA \u5e8f\u5217\u8fdb\u884c\u5206\u7c7b\u65f6\uff0c\u6709\u65f6\u4f1a\u4f7f\u7528\u5b57\u7b26\u4e32\u6838\uff08String kernels\uff09\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 SSK \u6838\uff08string subsequence kernel\uff09\u6216\u8005\u57fa\u4e8e\u7f16\u8f91\u8ddd\u79bb\uff08Levenshtein distance\uff09\u7684\u6838\u51fd\u6570\uff09\u3002 \u63d0\u793a \u8fd9\u4e48\u591a\u53ef\u4f9b\u9009\u62e9\u7684\u6838\u51fd\u6570\uff0c\u4f60\u5982\u4f55\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e00\u4e2a\uff1f\u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u5e94\u8be5\u5148\u5c1d\u8bd5\u7ebf\u6027\u6838\u51fd\u6570\uff08\u8bb0\u4f4f LinearSVC \u6bd4 SVC(kernel=\"linear\") \u8981\u5feb\u5f97\u591a\uff09\uff0c\u5c24\u5176\u662f\u5f53\u8bad\u7ec3\u96c6\u5f88\u5927\u6216\u8005\u6709\u5927\u91cf\u7684\u7279\u5f81\u7684\u60c5\u51b5\u4e0b\u3002\u5982\u679c\u8bad\u7ec3\u96c6\u4e0d\u592a\u5927\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u9ad8\u65af\u5f84\u5411\u57fa\u6838\uff08Gaussian RBF Kernel\uff09\uff0c\u5b83\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u5f88\u6709\u6548\u3002\u5982\u679c\u4f60\u6709\u7a7a\u95f2\u7684\u65f6\u95f4\u548c\u8ba1\u7b97\u80fd\u529b\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u548c\u7f51\u683c\u641c\u7d22\u6765\u8bd5\u9a8c\u5176\u4ed6\u7684\u6838\u51fd\u6570\uff0c\u7279\u522b\u662f\u6709\u4e13\u95e8\u7528\u4e8e\u4f60\u7684\u8bad\u7ec3\u96c6\u6570\u636e\u7ed3\u6784\u7684\u6838\u51fd\u6570\u3002","title":"\u9ad8\u65af RBF \u6838"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_7","text":"LinearSVC \u7c7b\u57fa\u4e8e liblinear \u5e93\uff0c\u5b83\u5b9e\u73b0\u4e86\u7ebf\u6027 SVM \u7684\u4f18\u5316\u7b97\u6cd5\u3002\u5b83\u5e76\u4e0d\u652f\u6301\u6838\u6280\u5de7\uff0c\u4f46\u662f\u5b83\u6837\u672c\u548c\u7279\u5f81\u7684\u6570\u91cf\u51e0\u4e4e\u662f\u7ebf\u6027\u7684\uff1a\u8bad\u7ec3\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u4e3a O(m \u00d7 n) \u3002 \u5982\u679c\u4f60\u8981\u975e\u5e38\u9ad8\u7684\u7cbe\u5ea6\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u9700\u8981\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\u3002\u8fd9\u662f\u7531\u5bb9\u5dee\u503c\u8d85\u53c2\u6570 \u03f5 \uff08\u5728 Scikit-learn \u79f0\u4e3a tol \uff09\u63a7\u5236\u7684\u3002\u5927\u591a\u6570\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0c\u4f7f\u7528\u9ed8\u8ba4\u5bb9\u5dee\u503c\u7684\u6548\u679c\u662f\u5df2\u7ecf\u53ef\u4ee5\u6ee1\u8db3\u4e00\u822c\u8981\u6c42\u3002 SVC \u7c7b\u57fa\u4e8e libsvm \u5e93\uff0c\u5b83\u5b9e\u73b0\u4e86\u652f\u6301\u6838\u6280\u5de7\u7684\u7b97\u6cd5\u3002\u8bad\u7ec3\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u4ecb \u4e8eO(m^2 \u00d7 n) \u548c O(m^3 \u00d7 n) \u4e4b\u95f4\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u8bad\u7ec3\u6837\u672c\u53d8\u5927\u65f6\uff0c\u5b83\u5c06\u53d8\u5f97\u6781\u5176\u6162\uff08\u4f8b\u5982\uff0c\u6210\u5343\u4e0a\u4e07\u4e2a\u6837\u672c\uff09\u3002\u8fd9\u4e2a\u7b97\u6cd5\u5bf9\u4e8e\u590d\u6742\u4f46\u5c0f\u578b\u6216\u4e2d\u7b49\u6570\u91cf\u7684\u6570\u636e\u96c6\u8868\u73b0\u662f\u5b8c\u7f8e\u7684\u3002\u7136\u800c\uff0c\u5b83\u80fd\u5bf9\u7279\u5f81\u6570\u91cf\u5f88\u597d\u7684\u7f29\u653e\uff0c\u5c24\u5176\u5bf9\u7a00\u758f\u7279\u5f81\u6765\u8bf4\uff08sparse features\uff09\uff08\u5373\u6bcf\u4e2a\u6837\u672c\u90fd\u6709\u4e00\u4e9b\u975e\u96f6\u7279\u5f81\uff09\u3002\u5728\u8fd9\u4e2a\u60c5\u51b5\u4e0b\uff0c\u7b97\u6cd5\u5bf9\u6bcf\u4e2a\u6837\u672c\u7684\u975e\u96f6\u7279\u5f81\u7684\u5e73\u5747\u6570\u91cf\u8fdb\u884c\u5927\u6982\u7684\u7f29\u653e\u3002\u8868 5-1 \u5bf9 Scikit-learn \u7684 SVM \u5206\u7c7b\u6a21\u578b\u8fdb\u884c\u6bd4\u8f83\u3002","title":"\u8ba1\u7b97\u590d\u6742\u6027"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#svm","text":"\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\uff0cSVM \u7b97\u6cd5\u5e94\u7528\u5e7f\u6cdb\uff1a\u4e0d\u4ec5\u4ec5\u652f\u6301\u7ebf\u6027\u548c\u975e\u7ebf\u6027\u7684\u5206\u7c7b\u4efb\u52a1\uff0c\u8fd8\u652f\u6301\u7ebf\u6027\u548c\u975e\u7ebf\u6027\u7684\u56de\u5f52\u4efb\u52a1\u3002\u6280\u5de7\u5728\u4e8e\u9006\u8f6c\u6211\u4eec\u7684\u76ee\u6807\uff1a\u9650\u5236\u95f4\u9694\u8fdd\u89c4\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u662f\u8bd5\u56fe\u5728\u4e24\u4e2a\u7c7b\u522b\u4e4b\u95f4\u627e\u5230\u5c3d\u53ef\u80fd\u5927\u7684\u201c\u8857\u9053\u201d\uff08\u5373\u95f4\u9694\uff09\u3002SVM \u56de\u5f52\u4efb\u52a1\u662f\u9650\u5236\u95f4\u9694\u8fdd\u89c4\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u653e\u7f6e\u66f4\u591a\u7684\u6837\u672c\u5728\u201c\u8857\u9053\u201d\u4e0a\u3002\u201c\u8857\u9053\u201d\u7684\u5bbd\u5ea6\u7531\u8d85\u53c2\u6570 \u03f5 \u63a7\u5236\u3002\u56fe 5-10 \u663e\u793a\u4e86\u5728\u4e00\u4e9b\u968f\u673a\u751f\u6210\u7684\u7ebf\u6027\u6570\u636e\u4e0a\uff0c\u4e24\u4e2a\u7ebf\u6027 SVM \u56de\u5f52\u6a21\u578b\u7684\u8bad\u7ec3\u60c5\u51b5\u3002\u4e00\u4e2a\u6709\u8f83\u5927\u7684\u95f4\u9694\uff08 \u03f5=1.5 \uff09\uff0c\u53e6\u4e00\u4e2a\u95f4\u9694\u8f83\u5c0f\uff08 \u03f5=0.5 \uff09\u3002 \u6dfb\u52a0\u66f4\u591a\u7684\u6570\u636e\u6837\u672c\u5728\u95f4\u9694\u4e4b\u5185\u5e76\u4e0d\u4f1a\u5f71\u54cd\u6a21\u578b\u7684\u9884\u6d4b\uff0c\u56e0\u6b64\uff0c\u8fd9\u4e2a\u6a21\u578b\u8ba4\u4e3a\u662f\u4e0d\u654f\u611f\u7684\uff08\u03f5-insensitive\uff09\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 Scikit-Learn \u7684 LinearSVR \u7c7b\u53bb\u5b9e\u73b0\u7ebf\u6027 SVM \u56de\u5f52\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4ea7\u751f\u7684\u6a21\u578b\u5728\u56fe 5-10 \u5de6\u56fe\uff08\u8bad\u7ec3\u6570\u636e\u9700\u8981\u88ab\u4e2d\u5fc3\u5316\u548c\u6807\u51c6\u5316\uff09 from sklearn.svm import LinearSVR svm_reg = LinearSVR(epsilon=1.5) svm_reg.fit(X, y) \u5904\u7406\u975e\u7ebf\u6027\u56de\u5f52\u4efb\u52a1\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6838\u5316\u7684 SVM \u6a21\u578b\u3002\u6bd4\u5982\uff0c\u56fe 5-11 \u663e\u793a\u4e86\u5728\u968f\u673a\u4e8c\u6b21\u65b9\u7684\u8bad\u7ec3\u96c6\uff0c\u4f7f\u7528\u4e8c\u6b21\u65b9\u591a\u9879\u5f0f\u6838\u51fd\u6570\u7684 SVM \u56de\u5f52\u3002\u5de6\u56fe\u662f\u8f83\u5c0f\u7684\u6b63\u5219\u5316\uff08\u5373\u66f4\u5927\u7684 C \u503c\uff09\uff0c\u53f3\u56fe\u5219\u662f\u66f4\u5927\u7684\u6b63\u5219\u5316\uff08\u5373\u5c0f\u7684 C \u503c\uff09 \u4e0b\u9762\u7684\u4ee3\u7801\u7684\u6a21\u578b\u5728\u56fe 5-11\uff0c\u5176\u4f7f\u7528\u4e86 Scikit-Learn \u7684 SVR \u7c7b\uff08\u652f\u6301\u6838\u6280\u5de7\uff09\u3002\u5728\u56de\u5f52\u4efb\u52a1\u4e0a\uff0c SVR \u7c7b\u548c SVC \u7c7b\u662f\u4e00\u6837\u7684\uff0c\u5e76\u4e14 LinearSVR \u662f\u548c LinearSVC \u7b49\u4ef7\u3002 LinearSVR \u7c7b\u548c\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u6210\u7ebf\u6027\uff08\u5c31\u50cf LinearSVC \u7c7b\uff09\uff0c\u5f53\u8bad\u7ec3\u96c6\u53d8\u5927\uff0c SVR \u4f1a\u53d8\u7684\u5f88\u6162\uff08\u5c31\u50cf SVC \u7c7b\uff09 from sklearn.svm import SVR svm_poly_reg = SVR(kernel=\"poly\", degree=2, C=100, epsilon=0.1) svm_poly_reg.fit(X, y) \u6ce8 SVM \u4e5f\u53ef\u4ee5\u7528\u6765\u505a\u5f02\u5e38\u503c\u68c0\u6d4b\uff0c\u8be6\u60c5\u89c1 Scikit-Learn \u6587\u6863","title":"SVM \u56de\u5f52"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_8","text":"\u8fd9\u4e2a\u7ae0\u8282\u4ece\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u5f00\u59cb\uff0c\u5c06\u89e3\u91ca SVM \u662f\u5982\u4f55\u505a\u9884\u6d4b\u7684\u5e76\u4e14\u7b97\u6cd5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u5982\u679c\u4f60\u662f\u521a\u63a5\u89e6\u673a\u5668\u5b66\u4e60\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e2a\u7ae0\u8282\uff0c\u76f4\u63a5\u8fdb\u5165\u672c\u7ae0\u672b\u5c3e\u7684\u7ec3\u4e60\u3002\u7b49\u5230\u4f60\u60f3\u6df1\u5165\u4e86\u89e3 SVM\uff0c\u518d\u56de\u5934\u7814\u7a76\u8fd9\u90e8\u5206\u5185\u5bb9\u3002 \u9996\u5148\uff0c\u5173\u4e8e\u7b26\u53f7\u7684\u7ea6\u5b9a\uff1a\u5728\u7b2c 4 \u7ae0\uff0c\u6211\u4eec\u5c06\u6240\u6709\u6a21\u578b\u53c2\u6570\u653e\u5728\u4e00\u4e2a\u77e2\u91cf \u03b8 \u91cc\uff0c\u5305\u62ec\u504f\u7f6e\u9879 \u03b80 \uff0c \u03b81 \u5230 \u03b8n \u7684\u8f93\u5165\u7279\u5f81\u6743\u91cd\uff0c\u548c\u589e\u52a0\u4e00\u4e2a\u504f\u5dee\u8f93\u5165 x0 = 1 \u5230\u6240\u6709\u6837\u672c\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u7b26\u53f7\u7ea6\u5b9a\uff0c\u5728\u5904\u7406 SVM \u4e0a\uff0c\u8fd9\u66f4\u65b9\u4fbf\uff0c\u4e5f\u66f4\u5e38\u89c1\uff1a\u504f\u7f6e\u9879\u88ab\u547d\u540d\u4e3a b \uff0c\u7279\u5f81\u6743\u91cd\u5411\u91cf\u88ab\u79f0\u4e3a w \uff0c\u5728\u8f93\u5165\u7279\u5f81\u5411\u91cf\u4e2d\u4e0d\u518d\u6dfb\u52a0\u504f\u7f6e\u7279\u5f81\u3002","title":"\u80cc\u540e\u673a\u5236"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_9","text":"\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u901a\u8fc7\u7b80\u5355\u5730\u8ba1\u7b97\u51b3\u7b56\u51fd\u6570 \u6765\u9884\u6d4b\u65b0\u6837\u672c\u7684\u7c7b\u522b\uff1a\u5982\u679c\u7ed3\u679c\u662f\u6b63\u7684\uff0c\u9884\u6d4b\u7c7b\u522b \u0177 \u662f\u6b63\u7c7b\uff0c\u4e3a 1\uff0c\u5426\u5219\u4ed6\u5c31\u662f\u8d1f\u7c7b\uff0c\u4e3a 0\u3002\u89c1\u516c\u5f0f 5-2 \u56fe 5-12 \u663e\u793a\u4e86\u548c\u56fe 5-4 \u53f3\u8fb9\u56fe\u6a21\u578b\u76f8\u5bf9\u5e94\u7684\u51b3\u7b56\u51fd\u6570\uff1a\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u96c6\u6709\u4e24\u4e2a\u7279\u5f81\uff08\u82b1\u74e3\u7684\u5bbd\u5ea6\u548c\u82b1\u74e3\u7684\u957f\u5ea6\uff09\uff0c\u6240\u4ee5\u662f\u4e2a\u4e8c\u7ef4\u7684\u5e73\u9762\u3002\u51b3\u7b56\u8fb9\u754c\u662f\u51b3\u7b56\u51fd\u6570\u7b49\u4e8e 0 \u7684\u70b9\u7684\u96c6\u5408\uff0c\u56fe\u4e2d\u4e24\u4e2a\u5e73\u9762\u7684\u4ea4\u53c9\u5904\uff0c\u5373\u4e00\u6761\u76f4\u7ebf\uff08\u56fe\u4e2d\u7684\u5b9e\u7ebf\uff09 \u865a\u7ebf\u8868\u793a\u7684\u662f\u90a3\u4e9b\u51b3\u7b56\u51fd\u6570\u7b49\u4e8e 1 \u6216 -1 \u7684\u70b9\uff1a\u5b83\u4eec\u5e73\u884c\uff0c\u4e14\u5230\u51b3\u7b56\u8fb9\u754c\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u5f62\u6210\u4e00\u4e2a\u95f4\u9694\u3002\u8bad\u7ec3\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u610f\u5473\u7740\u627e\u5230 w \u503c\u548c b \u503c\u4f7f\u5f97\u8fd9\u4e00\u4e2a\u95f4\u9694\u5c3d\u53ef\u80fd\u5927\uff0c\u540c\u65f6\u907f\u514d\u95f4\u9694\u8fdd\u89c4\uff08\u786c\u95f4\u9694\uff09\u6216\u9650\u5236\u5b83\u4eec\uff08\u8f6f\u95f4\u9694\uff09","title":"\u51b3\u7b56\u51fd\u6570\u548c\u9884\u6d4b"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_10","text":"\u770b\u4e0b\u51b3\u7b56\u51fd\u6570\u7684\u659c\u7387\uff1a\u5b83\u7b49\u4e8e\u6743\u91cd\u5411\u91cf\u7684\u8303\u6570 \u3002\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e2a\u659c\u7387\u9664\u4e8e 2\uff0c\u51b3\u7b56\u51fd\u6570\u7b49\u4e8e \u00b11 \u7684\u70b9\u5c06\u4f1a\u79bb\u51b3\u7b56\u8fb9\u754c\u539f\u6765\u7684\u4e24\u500d\u5927\u3002\u6362\u53e5\u8bdd\uff0c\u5373\u659c\u7387\u9664\u4e8e 2\uff0c\u90a3\u4e48\u95f4\u9694\u5c06\u589e\u52a0\u4e24\u500d\u3002\u5728\u56fe 5-13 \u4e2d\uff0c2D \u5f62\u5f0f\u6bd4\u8f83\u5bb9\u6613\u53ef\u89c6\u5316\u3002\u6743\u91cd\u5411\u91cf w \u8d8a\u5c0f\uff0c\u95f4\u9694\u8d8a\u5927\u3002 \u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316 \uff0c\u4ece\u800c\u83b7\u5f97\u5927\u7684\u95f4\u9694\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u907f\u514d\u95f4\u9694\u8fdd\u89c4\uff08\u786c\u95f4\u9694\uff09\uff0c\u5bf9\u4e8e\u6b63\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u6211\u4eec\u9700\u8981\u51b3\u7b56\u51fd\u6570\u5927\u4e8e 1\uff0c\u5bf9\u4e8e\u8d1f\u8bad\u7ec3\u6837\u672c\uff0c\u5c0f\u4e8e -1\u3002\u82e5\u6211\u4eec\u5bf9\u8d1f\u6837\u672c\uff08\u5373 \uff09\u5b9a\u4e49 \uff0c\u5bf9\u6b63\u6837\u672c\uff08\u5373 \uff09\u5b9a\u4e49 \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u6240\u6709\u7684\u6837\u672c\u8868\u793a\u4e3a \u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u786c\u95f4\u9694\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u8868\u793a\u4e3a\u516c\u5f0f 5-3 \u4e2d\u7684\u7ea6\u675f\u4f18\u5316\u95ee\u9898 \u6ce8 \u7b49\u4e8e \uff0c\u6211\u4eec\u6700\u5c0f\u5316 \uff0c\u800c\u4e0d\u662f\u6700\u5c0f\u5316 \u3002\u8fd9\u4f1a\u7ed9\u6211\u4eec\u76f8\u540c\u7684\u7ed3\u679c\uff08\u56e0\u4e3a\u6700\u5c0f\u5316 w \u503c\u548c b \u503c\uff0c\u4e5f\u662f\u6700\u5c0f\u5316\u8be5\u503c\u4e00\u534a\u7684\u5e73\u65b9\uff09\uff0c\u4f46\u662f \u6709\u5f88\u597d\u53c8\u7b80\u5355\u7684\u5bfc\u6570\uff08\u53ea\u6709 w \uff09\uff0c \u5728 w=0 \u5904\u662f\u4e0d\u53ef\u5fae\u7684\u3002\u4f18\u5316\u7b97\u6cd5\u5728\u53ef\u5fae\u51fd\u6570\u8868\u73b0\u5f97\u66f4\u597d\u3002 \u4e3a\u4e86\u83b7\u5f97\u8f6f\u95f4\u9694\u7684\u76ee\u6807\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u6837\u672c\u5e94\u7528\u4e00\u4e2a\u677e\u5f1b\u53d8\u91cf\uff08slack variable\uff09 \u3002 \u8868\u793a\u4e86\u7b2c i \u4e2a\u6837\u672c\u5141\u8bb8\u8fdd\u89c4\u95f4\u9694\u7684\u7a0b\u5ea6\u3002\u6211\u4eec\u73b0\u5728\u6709\u4e24\u4e2a\u4e0d\u4e00\u81f4\u7684\u76ee\u6807\uff1a\u4e00\u4e2a\u662f\u4f7f\u677e\u5f1b\u53d8\u91cf\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u4ece\u800c\u51cf\u5c0f\u95f4\u9694\u8fdd\u89c4\uff0c\u53e6\u4e00\u4e2a\u662f\u4f7f 1/2 w\u00b7w \u5c3d\u91cf\u5c0f\uff0c\u4ece\u800c\u589e\u5927\u95f4\u9694\u3002\u8fd9\u65f6 C \u8d85\u53c2\u6570\u53d1\u6325\u4f5c\u7528\uff1a\u5b83\u5141\u8bb8\u6211\u4eec\u5728\u4e24\u4e2a\u76ee\u6807\u4e4b\u95f4\u6743\u8861\u3002\u6211\u4eec\u5f97\u5230\u4e86\u516c\u5f0f 5-4 \u7684\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u3002","title":"\u8bad\u7ec3\u76ee\u6807"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_11","text":"\u786c\u95f4\u9694\u548c\u8f6f\u95f4\u9694\u90fd\u662f\u7ebf\u6027\u7ea6\u675f\u7684\u51f8\u4e8c\u6b21\u89c4\u5212\u4f18\u5316\u95ee\u9898\u3002\u8fd9\u4e9b\u95ee\u9898\u88ab\u79f0\u4e4b\u4e3a\u4e8c\u6b21\u89c4\u5212\uff08QP\uff09\u95ee\u9898\u3002\u73b0\u5728\u6709\u8bb8\u591a\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u6280\u672f\u6765\u5904\u7406 QP \u95ee\u9898\uff0c\u4f46\u8fd9\u8d85\u51fa\u4e86\u672c\u4e66\u7684\u8303\u56f4\u3002\u4e00\u822c\u95ee\u9898\u7684\u516c\u5f0f\u5728\u516c\u5f0f 5-5 \u7ed9\u51fa\u3002 \u6ce8\u610f\u5230\u8868\u8fbe\u5f0f Ap \u2264 b \u5b9e\u9645\u4e0a\u5b9a\u4e49\u4e86 \u7ea6\u675f\uff1a \uff0c \u662f\u4e2a\u5305\u542b\u4e86 A \u7684\u7b2c i \u884c\u5143\u7d20\u7684\u5411\u91cf\uff0c \u662f b \u7684\u7b2c i \u4e2a\u5143\u7d20\u3002 \u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u5230\uff0c\u5982\u679c\u4f60\u7528\u4ee5\u4e0b\u7684\u65b9\u5f0f\u8bbe\u7f6e QP \u7684\u53c2\u6570\uff0c\u4f60\u5c06\u83b7\u5f97\u786c\u95f4\u9694\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u7684\u76ee\u6807\uff1a \uff0c n \u8868\u793a\u7279\u5f81\u7684\u6570\u91cf\uff08+1 \u662f\u504f\u7f6e\u9879\uff09 \uff0c m \u8868\u793a\u8bad\u7ec3\u6837\u672c\u6570\u91cf H \u662f \u5355\u4f4d\u77e9\u9635\uff0c\u9664\u4e86\u5de6\u4e0a\u89d2\u4e3a 0\uff08\u5ffd\u7565\u504f\u7f6e\u9879\uff09 f = 0 \uff0c\u4e00\u4e2a\u5168\u4e3a 0 \u7684 \u7ef4\u5411\u91cf \uff0c\u4e00\u4e2a\u5168\u4e3a 1 \u7684 \u7ef4\u5411\u91cf \uff0c \u7b49\u4e8e \u5e26\u4e00\u4e2a\u989d\u5916\u7684\u504f\u7f6e\u7279\u5f81 \uff01 \u6240\u4ee5\u8bad\u7ec3\u786c\u95f4\u9694\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u73b0\u6709\u7684 QP \u89e3\u51b3\u65b9\u6848\uff0c\u5373\u4e0a\u8ff0\u7684\u53c2\u6570\u3002\u7531\u6b64\u4ea7\u751f\u7684\u5411\u91cf p \u5c06\u5305\u542b\u504f\u7f6e\u9879 \u548c\u7279\u5f81\u6743\u91cd \u3002\u540c\u6837\u7684\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 QP \u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u8f6f\u95f4\u9694\u95ee\u9898\uff08\u89c1\u672c\u7ae0\u6700\u540e\u7684\u7ec3\u4e60\uff09 \u7136\u800c\uff0c\u4f7f\u7528\u6838\u6280\u5de7\u6211\u4eec\u5c06\u4f1a\u770b\u5230\u4e00\u4e2a\u4e0d\u540c\u7684\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u3002","title":"\u4e8c\u6b21\u89c4\u5212"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_12","text":"\u7ed9\u51fa\u4e00\u4e2a\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff0c\u5373\u539f\u59cb\u95ee\u9898\uff08primal problem\uff09\uff0c\u5b83\u53ef\u80fd\u8868\u793a\u4e0d\u540c\u4f46\u662f\u548c\u53e6\u4e00\u4e2a\u95ee\u9898\u7d27\u5bc6\u76f8\u8fde\uff0c\u79f0\u4e3a\u5bf9\u5076\u95ee\u9898\uff08Dual Problem\uff09\u3002\u5bf9\u5076\u95ee\u9898\u7684\u89e3\u901a\u5e38\u662f\u5bf9\u539f\u59cb\u95ee\u9898\u7684\u89e3\u7ed9\u51fa\u4e00\u4e2a\u4e0b\u754c\u7ea6\u675f\uff0c\u4f46\u5728\u67d0\u4e9b\u6761\u4ef6\u4e0b\uff0c\u5b83\u4eec\u53ef\u4ee5\u83b7\u5f97\u76f8\u540c\u89e3\u3002\u5e78\u8fd0\u7684\u662f\uff0cSVM \u95ee\u9898\u6070\u597d\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u9009\u62e9\u89e3\u51b3\u539f\u59cb\u95ee\u9898\u6216\u8005\u5bf9\u5076\u95ee\u9898\uff0c\u4e24\u8005\u5c06\u4f1a\u6709\u76f8\u540c\u89e3\u3002\u516c\u5f0f 5-6 \u8868\u793a\u4e86\u7ebf\u6027 SVM \u7684\u5bf9\u5076\u5f62\u5f0f\uff08\u5982\u679c\u4f60\u5bf9\u600e\u4e48\u4ece\u539f\u59cb\u95ee\u9898\u83b7\u5f97\u5bf9\u5076\u95ee\u9898\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u770b\u4e0b\u9644\u5f55 C\uff09 \u4e00\u65e6\u4f60\u627e\u5230\u6700\u5c0f\u5316\u516c\u5f0f\u7684\u5411\u91cf \u03b1 \uff08\u4f7f\u7528 QP \u89e3\u51b3\u65b9\u6848\uff09\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u516c\u5f0f 5-7 \u7684\u65b9\u6cd5\u8ba1\u7b97 w \u548c b \uff0c\u4ece\u800c\u4f7f\u539f\u59cb\u95ee\u9898\u6700\u5c0f\u5316\u3002 \u5f53\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\u6bd4\u7279\u5f81\u6570\u91cf\u5c0f\u7684\u65f6\u5019\uff0c\u5bf9\u5076\u95ee\u9898\u6bd4\u539f\u59cb\u95ee\u9898\u8981\u5feb\u5f97\u591a\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u8ba9\u6838\u6280\u5de7\u6210\u4e3a\u53ef\u80fd\uff0c\u800c\u539f\u59cb\u95ee\u9898\u5219\u4e0d\u7136\u3002\u90a3\u4e48\u8fd9\u4e2a\u6838\u6280\u5de7\u662f\u600e\u4e48\u6837\u7684\u5462\uff1f","title":"\u5bf9\u5076\u95ee\u9898"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_13","text":"\u5047\u8bbe\u4f60\u60f3\u628a\u4e00\u4e2a 2 \u6b21\u591a\u9879\u5f0f\u53d8\u6362\u5e94\u7528\u5230\u4e8c\u7ef4\u7a7a\u95f4\u7684\u8bad\u7ec3\u96c6\uff08\u4f8b\u5982\u536b\u661f\u6570\u636e\u96c6\uff09\uff0c\u7136\u540e\u5728\u53d8\u6362\u540e\u7684\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027SVM\u5206\u7c7b\u5668\u3002\u516c\u5f0f 5-8 \u663e\u793a\u4e86\u4f60\u60f3\u5e94\u7528\u7684 2 \u6b21\u591a\u9879\u5f0f\u6620\u5c04\u51fd\u6570 \u03d5 \u3002 \u6ce8\u610f\u5230\u8f6c\u6362\u540e\u7684\u5411\u91cf\u662f 3 \u7ef4\u7684\u800c\u4e0d\u662f 2 \u7ef4\u3002\u5982\u679c\u6211\u4eec\u5e94\u7528\u8fd9\u4e2a 2 \u6b21\u591a\u9879\u5f0f\u6620\u5c04\uff0c\u7136\u540e\u8ba1\u7b97\u8f6c\u6362\u540e\u5411\u91cf\u7684\u70b9\u79ef\uff08\u89c1\u516c\u5f0f 5-9\uff09\uff0c\u8ba9\u6211\u4eec\u770b\u4e0b\u4e24\u4e2a 2 \u7ef4\u5411\u91cf a \u548c b \u4f1a\u53d1\u751f\u4ec0\u4e48\u3002 \u8f6c\u6362\u540e\u5411\u91cf\u7684\u70b9\u79ef\u7b49\u4e8e\u539f\u59cb\u5411\u91cf\u70b9\u79ef\u7684\u5e73\u65b9\uff1a \u5173\u952e\u70b9\u662f\uff1a\u5982\u679c\u4f60\u5e94\u7528\u8f6c\u6362 \u03d5 \u5230\u6240\u6709\u8bad\u7ec3\u6837\u672c\uff0c\u90a3\u4e48\u5bf9\u5076\u95ee\u9898\uff08\u89c1\u516c\u5f0f 5-6\uff09\u5c06\u4f1a\u5305\u542b\u70b9\u79ef \u3002\u4f46\u5982\u679c \u03d5 \u50cf\u5728\u516c\u5f0f 5-8 \u5b9a\u4e49\u7684 2 \u6b21\u591a\u9879\u5f0f\u8f6c\u6362\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u8f6c\u6362\u540e\u7684\u5411\u91cf\u70b9\u79ef\u66ff\u6362\u6210 \u3002\u6240\u4ee5\u5b9e\u9645\u4e0a\u4f60\u6839\u672c\u4e0d\u9700\u8981\u5bf9\u8bad\u7ec3\u6837\u672c\u8fdb\u884c\u8f6c\u6362\uff1a\u4ec5\u4ec5\u9700\u8981\u5728\u516c\u5f0f 5-6 \u4e2d\uff0c\u5c06\u70b9\u79ef\u66ff\u6362\u6210\u5b83\u70b9\u79ef\u7684\u5e73\u65b9\u3002\u7ed3\u679c\u5c06\u4f1a\u548c\u4f60\u7ecf\u8fc7\u9ebb\u70e6\u7684\u8bad\u7ec3\u96c6\u8f6c\u6362\u5e76\u62df\u5408\u51fa\u7ebf\u6027 SVM \u7b97\u6cd5\u5f97\u51fa\u7684\u7ed3\u679c\u4e00\u6837\uff0c\u4f46\u662f\u8fd9\u4e2a\u6280\u5de7\u4f7f\u5f97\u6574\u4e2a\u8fc7\u7a0b\u5728\u8ba1\u7b97\u4e0a\u9762\u66f4\u6709\u6548\u7387\u3002\u8fd9\u5c31\u662f\u6838\u6280\u5de7\u7684\u7cbe\u9ad3\u3002 \u51fd\u6570 \u88ab\u79f0\u4e3a\u4e8c\u6b21\u591a\u9879\u5f0f\u6838\uff08polynomial kernel\uff09\u3002\u5728\u673a\u5668\u5b66\u4e60\uff0c\u6838\u51fd\u6570\u662f\u4e00\u4e2a\u80fd\u8ba1\u7b97\u70b9\u79ef\u7684\u51fd\u6570\uff0c\u5e76\u53ea\u57fa\u4e8e\u539f\u59cb\u5411\u91cf a \u548c b \uff0c\u4e0d\u9700\u8981\u8ba1\u7b97\uff08\u751a\u81f3\u77e5\u9053\uff09\u8f6c\u6362 \u03d5 \u3002\u516c\u5f0f 5-10 \u5217\u4e3e\u4e86\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u6838\u51fd\u6570\u3002 Mercer \u5b9a\u7406 \u6839\u636e Mercer \u5b9a\u7406\uff0c\u5982\u679c\u51fd\u6570 K(a, b) \u6ee1\u8db3\u4e00\u4e9b Mercer \u6761\u4ef6\u7684\u6570\u5b66\u6761\u4ef6( K \u51fd\u6570\u5728\u53c2\u6570\u5185\u5fc5\u987b\u662f\u8fde\u7eed\uff0c\u5bf9\u79f0\uff0c\u5373 K(a, b)=K(b, a) \uff0c\u7b49)\uff0c\u90a3\u4e48\u5b58\u5728\u51fd\u6570 \u03d5 \uff0c\u5c06 a \u548c b \u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u7a7a\u95f4\uff08\u53ef\u80fd\u6709\u66f4\u9ad8\u7684\u7ef4\u5ea6\uff09\uff0c\u6709 \u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u7528 K \u4f5c\u4e3a\u6838\u51fd\u6570\uff0c\u5373\u4f7f\u4f60\u4e0d\u77e5\u9053 \u03d5 \u662f\u4ec0\u4e48\u3002\u4f7f\u7528\u9ad8\u65af\u6838\uff08Gaussian RBF kernel\uff09\u60c5\u51b5\u4e0b\uff0c\u5b83\u5b9e\u9645\u662f\u5c06\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u6620\u5c04\u5230\u65e0\u9650\u7ef4\u7a7a\u95f4\uff0c\u6240\u4ee5\u4f60\u4e0d\u9700\u8981\u77e5\u9053\u662f\u600e\u4e48\u6267\u884c\u6620\u5c04\u7684\u4e5f\u662f\u4e00\u4ef6\u597d\u4e8b\u3002 \u6ce8\u610f\u4e00\u4e9b\u5e38\u7528\u6838\u51fd\u6570\uff08\u4f8b\u5982 Sigmoid \u6838\u51fd\u6570\uff09\u5e76\u4e0d\u6ee1\u8db3\u6240\u6709\u7684 Mercer \u6761\u4ef6\uff0c\u7136\u800c\u5728\u5b9e\u8df5\u4e2d\u901a\u5e38\u8868\u73b0\u5f97\u5f88\u597d\u3002 \u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u8981\u89e3\u51b3\u3002\u516c\u5f0f 5-7 \u5c55\u793a\u4e86\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u5982\u4f55\u4ece\u5bf9\u5076\u89e3\u5230\u539f\u59cb\u89e3\uff0c\u5982\u679c\u4f60\u5e94\u7528\u4e86\u6838\u6280\u5de7\u90a3\u4e48\u5f97\u5230\u7684\u516c\u5f0f\u4f1a\u5305\u542b \u3002\u4e8b\u5b9e\u4e0a\uff0c w \u5fc5\u987b\u548c \u6709\u540c\u6837\u7684\u7ef4\u5ea6\uff0c\u53ef\u80fd\u662f\u5de8\u5927\u7684\u7ef4\u5ea6\u6216\u8005\u65e0\u9650\u7684\u7ef4\u5ea6\uff0c\u6240\u4ee5\u4f60\u5f88\u96be\u8ba1\u7b97\u5b83\u3002\u4f46\u600e\u4e48\u5728\u4e0d\u77e5\u9053 w \u7684\u60c5\u51b5\u4e0b\u505a\u51fa\u9884\u6d4b\uff1f\u597d\u6d88\u606f\u662f\u4f60\u53ef\u4ee5\u5c06\u516c\u5f0f 5-7 \u7684 w \u4ee3\u5165\u5230\u65b0\u7684\u6837\u672c \u7684\u51b3\u7b56\u51fd\u6570\u4e2d\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u5728\u8f93\u5165\u5411\u91cf\u4e4b\u95f4\u53ea\u6709\u70b9\u79ef\u7684\u65b9\u7a0b\u5f0f\u3002\u8fd9\u65f6\uff0c\u6838\u6280\u5de7\u5c06\u6d3e\u4e0a\u7528\u573a\uff0c\u89c1\u516c\u5f0f 5-11 \u6ce8\u610f\u5230\u652f\u6301\u5411\u91cf\u624d\u6ee1\u8db3 \u03b1(i)\u22600 \uff0c\u505a\u51fa\u9884\u6d4b\u53ea\u6d89\u53ca\u8ba1\u7b97\u4e3a\u652f\u6301\u5411\u91cf\u90e8\u5206\u7684\u8f93\u5165\u6837\u672c \u7684\u70b9\u79ef\uff0c\u800c\u4e0d\u662f\u5168\u90e8\u7684\u8bad\u7ec3\u6837\u672c\u3002\u5f53\u7136\uff0c\u4f60\u540c\u6837\u4e5f\u9700\u8981\u4f7f\u7528\u540c\u6837\u7684\u6280\u5de7\u6765\u8ba1\u7b97\u504f\u7f6e\u9879 b \uff0c\u89c1\u516c\u5f0f 5-12 \u5982\u679c\u4f60\u5f00\u59cb\u611f\u5230\u5934\u75db\uff0c\u8fd9\u5f88\u6b63\u5e38\uff1a\u56e0\u4e3a\u8fd9\u662f\u6838\u6280\u5de7\u4e00\u4e2a\u4e0d\u5e78\u7684\u526f\u4f5c\u7528","title":"\u6838\u5316\u652f\u6301\u5411\u91cf\u673a"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_14","text":"\u5728\u7ed3\u675f\u8fd9\u4e00\u7ae0\u4e4b\u524d\uff0c\u6211\u4eec\u5feb\u901f\u5730\u4e86\u89e3\u4e00\u4e0b\u5728\u7ebf SVM \u5206\u7c7b\u5668\uff08\u56de\u60f3\u4e00\u4e0b\uff0c\u5728\u7ebf\u5b66\u4e60\u610f\u5473\u7740\u589e\u91cf\u5730\u5b66\u4e60\uff0c\u4e0d\u65ad\u6709\u65b0\u5b9e\u4f8b\uff09\u3002\u5bf9\u4e8e\u7ebf\u6027SVM\u5206\u7c7b\u5668\uff0c\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\uff08\u4f8b\u5982\u4f7f\u7528 SGDClassifire \uff09\u6700\u5c0f\u5316\u4ee3\u4ef7\u51fd\u6570\uff0c\u5982\u4ece\u539f\u59cb\u95ee\u9898\u63a8\u5bfc\u51fa\u7684\u516c\u5f0f 5-13\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u6bd4\u57fa\u4e8e QP \u65b9\u5f0f\u6536\u655b\u6162\u5f97\u591a\u3002 \u4ee3\u4ef7\u51fd\u6570\u7b2c\u4e00\u4e2a\u548c\u4f1a\u4f7f\u6a21\u578b\u6709\u4e00\u4e2a\u5c0f\u7684\u6743\u91cd\u5411\u91cf w \uff0c\u4ece\u800c\u83b7\u5f97\u4e00\u4e2a\u66f4\u5927\u7684\u95f4\u9694\u3002\u7b2c\u4e8c\u4e2a\u548c\u8ba1\u7b97\u6240\u6709\u95f4\u9694\u8fdd\u89c4\u7684\u603b\u6570\u3002\u5982\u679c\u6837\u672c\u4f4d\u4e8e\u201c\u8857\u9053\u201d\u4e0a\u548c\u6b63\u786e\u7684\u4e00\u8fb9\uff0c\u6216\u5b83\u4e0e\u201c\u8857\u9053\u201d\u6b63\u786e\u4e00\u8fb9\u7684\u8ddd\u79bb\u6210\u6bd4\u4f8b\uff0c\u5219\u95f4\u9694\u8fdd\u89c4\u7b49\u4e8e 0\u3002\u6700\u5c0f\u5316\u4fdd\u8bc1\u4e86\u6a21\u578b\u7684\u95f4\u9694\u8fdd\u89c4\u5c3d\u53ef\u80fd\u5c0f\u5e76\u4e14\u5c11\u3002 Hinge \u635f\u5931 \u51fd\u6570 max(0, 1\u2013t) \u88ab\u79f0\u4e3a Hinge \u635f\u5931\u51fd\u6570\uff08\u5982\u4e0b\uff09\u3002\u5f53 t\u22651 \u65f6\uff0cHinge \u503c\u4e3a 0\u3002\u5982\u679c t<1 ,\u5b83\u7684\u5bfc\u6570\uff08\u659c\u7387\uff09\u4e3a -1\uff0c\u82e5 t>1 \uff0c\u5219\u7b49\u4e8e0\u3002\u5728 t=1 \u5904\uff0c\u5b83\u662f\u4e0d\u53ef\u5fae\u7684\uff0c\u4f46\u5c31\u50cf\u5957\u7d22\u56de\u5f52\uff08Lasso Regression\uff09\uff08\u53c2\u89c1 130 \u9875\u5957\u7d22\u56de\u5f52\uff09\u4e00\u6837\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u5728 t=0 \u65f6\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08\u5373 -1 \u5230 0 \u4e4b\u95f4\u4efb\u4f55\u503c\uff09 \u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5728\u7ebf\u6838\u5316\u7684 SVM\u3002\u4f8b\u5982\u4f7f\u7528\u201c\u589e\u91cf\u548c\u9012\u51cf SVM \u5b66\u4e60\u201d\u6216\u8005\u201c\u5728\u7ebf\u548c\u4e3b\u52a8\u7684\u5feb\u901f\u6838\u5206\u7c7b\u5668\u201d\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u90fd\u662f\u7528 Matlab \u548c C++ \u5b9e\u73b0\u7684\u3002\u5bf9\u4e8e\u5927\u89c4\u6a21\u7684\u975e\u7ebf\u6027\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u8003\u8651\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\uff08\u89c1\u7b2c\u4e8c\u90e8\u5206\uff09","title":"\u5728\u7ebf\u652f\u6301\u5411\u91cf\u673a"},{"location":"5.%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/#_15","text":"\u652f\u6301\u5411\u91cf\u673a\u80cc\u540e\u7684\u57fa\u672c\u601d\u60f3\u662f\u4ec0\u4e48 \u4ec0\u4e48\u662f\u652f\u6301\u5411\u91cf \u5f53\u4f7f\u7528 SVM \u65f6\uff0c\u4e3a\u4ec0\u4e48\u6807\u51c6\u5316\u8f93\u5165\u5f88\u91cd\u8981\uff1f \u5206\u7c7b\u4e00\u4e2a\u6837\u672c\u65f6\uff0cSVM \u5206\u7c7b\u5668\u80fd\u591f\u8f93\u51fa\u4e00\u4e2a\u7f6e\u4fe1\u503c\u5417\uff1f\u6982\u7387\u5462\uff1f \u5728\u4e00\u4e2a\u6709\u6570\u767e\u4e07\u8bad\u7ec3\u6837\u672c\u548c\u6570\u767e\u7279\u5f81\u7684\u8bad\u7ec3\u96c6\u4e0a\uff0c\u4f60\u662f\u5426\u5e94\u8be5\u4f7f\u7528 SVM \u539f\u59cb\u5f62\u5f0f\u6216\u5bf9\u5076\u5f62\u5f0f\u6765\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\uff1f \u5047\u8bbe\u4f60\u7528 RBF \u6838\u6765\u8bad\u7ec3\u4e00\u4e2a SVM \u5206\u7c7b\u5668\uff0c\u5982\u679c\u5bf9\u8bad\u7ec3\u96c6\u6b20\u62df\u5408\uff1a\u4f60\u5e94\u8be5\u589e\u5927\u6216\u8005\u51cf\u5c0f \u03b3 \u5417\uff1f\u8c03\u6574\u53c2\u6570 C \u5462\uff1f \u4f7f\u7528\u73b0\u6709\u7684 QP \u89e3\u51b3\u65b9\u6848\uff0c\u4f60\u5e94\u8be5\u600e\u4e48\u6837\u8bbe\u7f6e QP \u53c2\u6570\uff08 H \uff0c f \uff0c A \uff0c\u548c b \uff09\u53bb\u89e3\u51b3\u4e00\u4e2a\u8f6f\u95f4\u9694\u7ebf\u6027 SVM \u5206\u7c7b\u5668\u95ee\u9898\uff1f \u5728\u4e00\u4e2a\u7ebf\u6027\u53ef\u5206\u7684\u6570\u636e\u96c6\u8bad\u7ec3\u4e00\u4e2a LinearSVC \uff0c\u5e76\u5728\u540c\u4e00\u4e2a\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a SVC \u548c SGDClassifier \uff0c\u770b\u5b83\u4eec\u662f\u5426\u4ea7\u751f\u4e86\u5927\u81f4\u76f8\u540c\u6548\u679c\u7684\u6a21\u578b\u3002 \u5728 MNIST \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a SVM \u5206\u7c7b\u5668\u3002\u56e0\u4e3a SVM \u5206\u7c7b\u5668\u662f\u4e8c\u5143\u7684\u5206\u7c7b\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u5bf9\u591a\uff08one-versus-all\uff09\u6765\u5bf9 10 \u4e2a\u6570\u5b57\u8fdb\u884c\u5206\u7c7b\u3002\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u5c0f\u7684\u9a8c\u8bc1\u96c6\u6765\u8c03\u6574\u8d85\u53c2\u6570\uff0c\u4ee5\u52a0\u5feb\u8fdb\u7a0b\u3002\u6700\u540e\u4f60\u80fd\u8fbe\u5230\u591a\u5c11\u51c6\u786e\u5ea6\uff1f \u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u4f4f\u5b85\uff08California housing\uff09\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a SVM \u56de\u5f52\u6a21\u578b \u8fd9\u4e9b\u7ec3\u4e60\u7684\u7b54\u6848\u5728\u9644\u5f55 A\u3002","title":"\u7ec3\u4e60"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/","text":"{% raw %} \u516d\u3001\u51b3\u7b56\u6811 \u548c\u652f\u6301\u5411\u91cf\u673a\u4e00\u6837\uff0c \u51b3\u7b56\u6811\u662f\u4e00\u79cd\u591a\u529f\u80fd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c \u5373\u53ef\u4ee5\u6267\u884c\u5206\u7c7b\u4efb\u52a1\u4e5f\u53ef\u4ee5\u6267\u884c\u56de\u5f52\u4efb\u52a1\uff0c \u751a\u81f3\u5305\u62ec\u591a\u8f93\u51fa\uff08multioutput\uff09\u4efb\u52a1. \u5b83\u662f\u4e00\u79cd\u529f\u80fd\u5f88\u5f3a\u5927\u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5bf9\u5f88\u590d\u6742\u7684\u6570\u636e\u96c6\u8fdb\u884c\u62df\u5408\u3002\u4f8b\u5982\uff0c\u5728\u7b2c\u4e8c\u7ae0\u4e2d\u6211\u4eec\u5bf9\u52a0\u5229\u798f\u5c3c\u4e9a\u4f4f\u623f\u6570\u636e\u96c6\u4f7f\u7528\u51b3\u7b56\u6811\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\uff0c\u5c31\u5f88\u597d\u7684\u62df\u5408\u4e86\u6570\u636e\u96c6\uff08\u5b9e\u9645\u4e0a\u662f\u8fc7\u62df\u5408\uff09\u3002 \u51b3\u7b56\u6811\u4e5f\u662f\u968f\u673a\u68ee\u6797\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff08\u89c1\u7b2c 7 \u7ae0\uff09\uff0c\u800c\u968f\u673a\u68ee\u6797\u662f\u5f53\u4eca\u6700\u5f3a\u5927\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e4b\u4e00\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u9996\u5148\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528\u51b3\u7b56\u6811\u8fdb\u884c\u8bad\u7ec3\uff0c\u53ef\u89c6\u5316\u548c\u9884\u6d4b\u3002 \u7136\u540e\u6211\u4eec\u4f1a\u5b66\u4e60\u5728 Scikit-learn \u4e0a\u9762\u4f7f\u7528 CART \u7b97\u6cd5\uff0c\u5e76\u4e14\u63a2\u8ba8\u5982\u4f55\u8c03\u6574\u51b3\u7b56\u6811\u8ba9\u5b83\u53ef\u4ee5\u7528\u4e8e\u6267\u884c\u56de\u5f52\u4efb\u52a1\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5f53\u7136\u4e5f\u9700\u8981\u8ba8\u8bba\u4e00\u4e0b\u51b3\u7b56\u6811\u76ee\u524d\u5b58\u5728\u7684\u4e00\u4e9b\u5c40\u9650\u6027\u3002 \u51b3\u7b56\u6811\u7684\u8bad\u7ec3\u548c\u53ef\u89c6\u5316 \u4e3a\u4e86\u7406\u89e3\u51b3\u7b56\u6811\uff0c\u6211\u4eec\u9700\u8981\u5148\u6784\u5efa\u4e00\u4e2a\u51b3\u7b56\u6811\u5e76\u4eb2\u8eab\u4f53\u9a8c\u5b83\u5230\u5e95\u5982\u4f55\u8fdb\u884c\u9884\u6d4b\u3002 \u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5c31\u662f\u5728\u6211\u4eec\u719f\u77e5\u7684\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e00\u4e2a\u51b3\u7b56\u6811\u5206\u7c7b\u5668\u7684\u8bad\u7ec3\u3002 from sklearn.datasets import load_iris from sklearn.tree import DecisionTreeClassifier iris = load_iris() X = iris.data[:, 2:] # petal length and width y = iris.target tree_clf = DecisionTreeClassifier(max_depth=2) tree_clf.fit(X, y) \u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 export_graphviz() \u65b9\u6cd5\uff0c\u901a\u8fc7\u751f\u6210\u4e00\u4e2a\u53eb\u505a iris_tree.dot \u7684\u56fe\u5f62\u5b9a\u4e49\u6587\u4ef6\u5c06\u4e00\u4e2a\u8bad\u7ec3\u597d\u7684\u51b3\u7b56\u6811\u6a21\u578b\u53ef\u89c6\u5316\u3002 from sklearn.tree import export_graphviz export_graphviz( tree_clf, out_file=image_path(\"iris_tree.dot\"), feature_names=iris.feature_names[2:], class_names=iris.target_names, rounded=True, filled=True ) \u8bd1\u8005\u6ce8\uff1a\u539f\u6587\u4e2d\u7684image_path\u7528\u4e8e\u83b7\u5f97\u793a\u4f8b\u7a0b\u5e8f\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u8fd9\u91cc\u76f4\u63a5\u53bb\u6389\u6539\u6210 out_file=\"iris_tree.dot\" \u5373\u53ef \u53c2\u89c1https://github.com/ageron/handson-ml/blob/master/06_decision_trees.ipynb \u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 graphviz package [1] \u4e2d\u7684 dot \u547d\u4ee4\u884c\uff0c\u5c06 .dot \u6587\u4ef6\u8f6c\u6362\u6210 PDF \u6216 PNG \u7b49\u591a\u79cd\u6570\u636e\u683c\u5f0f\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u5c06 .dot \u6587\u4ef6\u8f6c\u6362\u6210 .png \u6587\u4ef6\u7684\u547d\u4ee4\u5982\u4e0b\uff1a [1] Graphviz\u662f\u4e00\u6b3e\u5f00\u6e90\u56fe\u5f62\u53ef\u89c6\u5316\u8f6f\u4ef6\u5305\uff0c http://www.graphviz.org/ \u3002 $ dot -Tpng iris_tree.dot -o iris_tree.png \u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u51b3\u7b56\u6811\u5982\u56fe 6-1\u3002 \u5f00\u59cb\u9884\u6d4b \u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5728\u56fe 6-1 \u4e2d\u7684\u6811\u662f\u5982\u4f55\u8fdb\u884c\u9884\u6d4b\u7684\u3002\u5047\u8bbe\u4f60\u627e\u5230\u4e86\u4e00\u6735\u9e22\u5c3e\u82b1\u5e76\u4e14\u60f3\u5bf9\u5b83\u8fdb\u884c\u5206\u7c7b\uff0c\u4f60\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff08\u6df1\u5ea6\u4e3a 0\uff0c\u9876\u90e8\uff09\uff1a\u8be5\u8282\u70b9\u8be2\u95ee\u82b1\u6735\u7684\u82b1\u74e3\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e 2.45 \u5398\u7c73\u3002\u5982\u679c\u662f\uff0c\u60a8\u5c06\u5411\u4e0b\u79fb\u52a8\u5230\u6839\u7684\u5de6\u4fa7\u5b50\u8282\u70b9\uff08\u6df1\u5ea6\u4e3a 1\uff0c\u5de6\u4fa7\uff09\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u4e00\u7247\u53f6\u5b50\u8282\u70b9\uff08\u5373\u5b83\u6ca1\u6709\u4efb\u4f55\u5b50\u8282\u70b9\uff09\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u95ee\u4efb\u4f55\u95ee\u9898\uff1a\u4f60\u53ef\u4ee5\u65b9\u4fbf\u5730\u67e5\u770b\u8be5\u8282\u70b9\u7684\u9884\u6d4b\u7c7b\u522b\uff0c\u51b3\u7b56\u6811\u9884\u6d4b\u4f60\u7684\u82b1\u662f Iris-Setosa\uff08 class = setosa \uff09\u3002 \u73b0\u5728\u5047\u8bbe\u4f60\u627e\u5230\u4e86\u53e6\u4e00\u6735\u82b1\uff0c\u4f46\u8fd9\u6b21\u7684\u82b1\u74e3\u957f\u5ea6\u662f\u5927\u4e8e 2.45 \u5398\u7c73\u7684\u3002\u4f60\u5fc5\u987b\u5411\u4e0b\u79fb\u52a8\u5230\u6839\u7684\u53f3\u4fa7\u5b50\u8282\u70b9\uff08\u6df1\u5ea6\u4e3a 1\uff0c\u53f3\u4fa7\uff09\uff0c\u800c\u8fd9\u4e2a\u8282\u70b9\u4e0d\u662f\u53f6\u8282\u70b9\uff0c\u6240\u4ee5\u5b83\u4f1a\u95ee\u53e6\u4e00\u4e2a\u95ee\u9898\uff1a\u82b1\u74e3\u5bbd\u5ea6\u662f\u5426\u5c0f\u4e8e 1.75 \u5398\u7c73\uff1f \u5982\u679c\u662f\uff0c\u90a3\u4e48\u4f60\u7684\u82b1\u5f88\u53ef\u80fd\u662f\u4e00\u4e2a Iris-Versicolor\uff08\u6df1\u5ea6\u4e3a 2\uff0c\u5de6\uff09\u3002 \u5982\u679c\u4e0d\u662f\uff0c\u90a3\u5f88\u53ef\u80fd\u4e00\u4e2a Iris-Virginica\uff08\u6df1\u5ea6\u4e3a 2\uff0c\u53f3\uff09\uff0c\u771f\u7684\u662f\u592a\u7b80\u5355\u4e86\uff0c\u5bf9\u5427\uff01 \u51b3\u7b56\u6811\u7684\u4f17\u591a\u7279\u6027\u4e4b\u4e00\u5c31\u662f\uff0c \u5b83\u4e0d\u9700\u8981\u592a\u591a\u7684\u6570\u636e\u9884\u5904\u7406\uff0c \u5c24\u5176\u662f\u4e0d\u9700\u8981\u8fdb\u884c\u7279\u5f81\u7684\u7f29\u653e\u6216\u8005\u5f52\u4e00\u5316\u3002 \u8282\u70b9\u7684 samples \u5c5e\u6027\u7edf\u8ba1\u51fa\u5b83\u5e94\u7528\u4e8e\u591a\u5c11\u4e2a\u8bad\u7ec3\u6837\u672c\u5b9e\u4f8b\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u6709\u4e00\u767e\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u662f\u82b1\u74e3\u957f\u5ea6\u5927\u4e8e 2.45 \u91cc\u9762\u7684\uff08\u6df1\u5ea6\u4e3a 1\uff0c \u53f3\u4fa7\uff09\uff0c\u5728\u8fd9 100 \u4e2a\u6837\u4f8b\u4e2d\u53c8\u6709 54 \u4e2a\u82b1\u74e3\u5bbd\u5ea6\u5c0f\u4e8e 1.75cm\uff08\u6df1\u5ea6\u4e3a 2\uff0c\u5de6\u4fa7\uff09\u3002 \u8282\u70b9\u7684 value \u5c5e\u6027\u544a\u8bc9\u4f60\u8fd9\u4e2a\u8282\u70b9\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7c7b\u522b\u7684\u6837\u4f8b\u6709\u591a\u5c11\u4e2a\u3002 \u4f8b\u5982\uff1a\u53f3\u4e0b\u89d2\u7684\u8282\u70b9\u4e2d\u5305\u542b 0 \u4e2a Iris-Setosa\uff0c1 \u4e2a Iris-Versicolor \u548c 45 \u4e2a Iris-Virginica\u3002 \u6700\u540e\uff0c\u8282\u70b9\u7684 Gini \u5c5e\u6027\u7528\u4e8e\u6d4b\u91cf\u5b83\u7684\u7eaf\u5ea6\uff1a\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5305\u542b\u7684\u6240\u6709\u8bad\u7ec3\u6837\u4f8b\u5168\u90fd\u662f\u540c\u4e00\u7c7b\u522b\u7684\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u4e2a\u8282\u70b9\u662f\u7eaf\u7684\uff08 Gini=0 \uff09\u3002 \u4f8b\u5982\uff0c\u6df1\u5ea6\u4e3a 1 \u7684\u5de6\u4fa7\u8282\u70b9\u53ea\u5305\u542b Iris-Setosa \u8bad\u7ec3\u5b9e\u4f8b\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u7eaf\u8282\u70b9\uff0cGini \u6307\u6570\u4e3a 0\u3002 \u516c\u5f0f 6-1 \u663e\u793a\u4e86\u8bad\u7ec3\u7b97\u6cd5\u5982\u4f55\u8ba1\u7b97\u7b2c i \u4e2a\u8282\u70b9\u7684 gini \u5206\u6570 \u3002\u4f8b\u5982\uff0c \u6df1\u5ea6\u4e3a 2 \u7684\u5de6\u4fa7\u8282\u70b9\u57fa\u5c3c\u6307\u6570\u4e3a\uff1a \u3002\u53e6\u5916\u4e00\u4e2a\u7eaf\u5ea6\u6307\u6570\u4e5f\u5c06\u5728\u540e\u6587\u5f88\u5feb\u63d0\u5230\u3002 \u662f\u7b2c i \u4e2a\u8282\u70b9\u4e2d\u8bad\u7ec3\u5b9e\u4f8b\u4e3a\u7684 k \u7c7b\u5b9e\u4f8b\u7684\u6bd4\u4f8b Scikit-Learn \u7528\u7684\u662f CART \u7b97\u6cd5\uff0c CART \u7b97\u6cd5\u4ec5\u4ea7\u751f\u4e8c\u53c9\u6811\uff1a\u6bcf\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u603b\u662f\u53ea\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff08\u53ea\u6709\u662f\u6216\u5426\u4e24\u4e2a\u7ed3\u679c\uff09\u3002\u7136\u800c\uff0c\u50cf ID3 \u8fd9\u6837\u7684\u7b97\u6cd5\u53ef\u4ee5\u4ea7\u751f\u8d85\u8fc7\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u51b3\u7b56\u6811\u6a21\u578b\u3002 \u56fe 6-2 \u663e\u793a\u4e86\u51b3\u7b56\u6811\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u7c97\u7684\u5782\u76f4\u7ebf\u4ee3\u8868\u6839\u8282\u70b9\uff08\u6df1\u5ea6\u4e3a 0\uff09\u7684\u51b3\u5b9a\u8fb9\u754c\uff1a\u82b1\u74e3\u957f\u5ea6\u4e3a 2.45 \u5398\u7c73\u3002\u7531\u4e8e\u5de6\u4fa7\u533a\u57df\u662f\u7eaf\u7684\uff08\u53ea\u6709 Iris-Setosa\uff09\uff0c\u6240\u4ee5\u4e0d\u80fd\u518d\u8fdb\u4e00\u6b65\u5206\u88c2\u3002\u7136\u800c\uff0c\u53f3\u8fb9\u7684\u533a\u57df\u662f\u4e0d\u7eaf\u7684\uff0c\u6240\u4ee5\u6df1\u5ea6\u4e3a 1 \u7684\u53f3\u8fb9\u8282\u70b9\u5728\u82b1\u74e3\u5bbd\u5ea6\u4e3a 1.75 \u5398\u7c73\u5904\u5206\u88c2\uff08\u7528\u865a\u7ebf\u8868\u793a\uff09\u3002\u53c8\u7531\u4e8e max_depth \u8bbe\u7f6e\u4e3a 2\uff0c\u51b3\u7b56\u6811\u5728\u90a3\u91cc\u505c\u4e86\u4e0b\u6765\u3002\u4f46\u662f\uff0c\u5982\u679c\u5c06 max_depth \u8bbe\u7f6e\u4e3a 3\uff0c\u4e24\u4e2a\u6df1\u5ea6\u4e3a 2 \u7684\u8282\u70b9\uff0c\u6bcf\u4e2a\u90fd\u5c06\u4f1a\u6dfb\u52a0\u53e6\u4e00\u4e2a\u51b3\u7b56\u8fb9\u754c\uff08\u7528\u865a\u7ebf\u8868\u793a\uff09\u3002 \u6a21\u578b\u5c0f\u77e5\u8bc6\uff1a\u767d\u76d2\u4e0e\u9ed1\u76d2 \u6b63\u5982\u6211\u4eec\u770b\u5230\u7684\u4e00\u6837\uff0c\u51b3\u7b56\u6811\u975e\u5e38\u76f4\u89c2\uff0c\u4ed6\u4eec\u7684\u51b3\u5b9a\u5f88\u5bb9\u6613\u88ab\u89e3\u91ca\u3002\u8fd9\u79cd\u6a21\u578b\u901a\u5e38\u88ab\u79f0\u4e3a\u767d\u76d2\u6a21\u578b\u3002\u76f8\u53cd\uff0c\u968f\u673a\u68ee\u6797\u6216\u795e\u7ecf\u7f51\u7edc\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u9ed1\u76d2\u6a21\u578b\u3002\u4ed6\u4eec\u80fd\u505a\u51fa\u5f88\u597d\u7684\u9884\u6d4b\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u8f7b\u677e\u68c0\u67e5\u5b83\u4eec\u505a\u51fa\u8fd9\u4e9b\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u7684\u6267\u884c\u8fc7\u7a0b\u3002\u7136\u800c\uff0c\u4eba\u4eec\u901a\u5e38\u5f88\u96be\u7528\u7b80\u5355\u7684\u672f\u8bed\u6765\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6a21\u578b\u4f1a\u505a\u51fa\u8fd9\u6837\u7684\u9884\u6d4b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u8bf4\u4e00\u4e2a\u7279\u5b9a\u7684\u4eba\u51fa\u73b0\u5728\u56fe\u7247\u4e0a\uff0c\u6211\u4eec\u5f88\u96be\u77e5\u9053\u7a76\u7adf\u662f\u4ec0\u4e48\u5bfc\u81f4\u4e86\u8fd9\u4e00\u4e2a\u9884\u6d4b\u7684\u51fa\u73b0\uff1a \u6a21\u578b\u662f\u5426\u8ba4\u51fa\u4e86\u90a3\u4e2a\u4eba\u7684\u773c\u775b\uff1f \u5979\u7684\u5634\uff1f \u5979\u7684\u9f3b\u5b50\uff1f\u5979\u7684\u978b\uff1f\u6216\u8005\u662f\u5426\u5750\u5728\u6c99\u53d1\u4e0a\uff1f \u76f8\u53cd\uff0c\u51b3\u7b56\u6811\u63d0\u4f9b\u826f\u597d\u7684\u3001\u7b80\u5355\u7684\u5206\u7c7b\u89c4\u5219\uff0c\u751a\u81f3\u53ef\u4ee5\u6839\u636e\u9700\u8981\u624b\u52a8\u64cd\u4f5c\uff08\u4f8b\u5982\u9e22\u5c3e\u82b1\u5206\u7c7b\uff09\u3002 \u4f30\u8ba1\u5206\u7c7b\u6982\u7387 \u51b3\u7b56\u6811\u8fd8\u53ef\u4ee5\u4f30\u8ba1\u67d0\u4e2a\u5b9e\u4f8b\u5c5e\u4e8e\u7279\u5b9a\u7c7b k \u7684\u6982\u7387\uff1a\u9996\u5148\u904d\u5386\u6811\u6765\u67e5\u627e\u6b64\u5b9e\u4f8b\u7684\u53f6\u8282\u70b9\uff0c\u7136\u540e\u5b83\u8fd4\u56de\u6b64\u8282\u70b9\u4e2d\u7c7b k \u7684\u8bad\u7ec3\u5b9e\u4f8b\u7684\u6bd4\u4f8b\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u53d1\u73b0\u4e86\u4e00\u4e2a\u82b1\u74e3\u957f 5 \u5398\u7c73\uff0c\u5bbd 1.5 \u5398\u7c73\u7684\u82b1\u6735\u3002\u76f8\u5e94\u7684\u53f6\u8282\u70b9\u662f\u6df1\u5ea6\u4e3a 2 \u7684\u5de6\u8282\u70b9\uff0c\u56e0\u6b64\u51b3\u7b56\u6811\u5e94\u8be5\u8f93\u51fa\u4ee5\u4e0b\u6982\u7387\uff1aIris-Setosa \u4e3a 0%\uff080/54\uff09\uff0cIris-Versicolor \u4e3a 90.7%\uff0849/54\uff09\uff0cIris-Virginica \u4e3a 9.3%\uff085/54\uff09\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u8981\u6c42\u5b83\u9884\u6d4b\u5177\u4f53\u7684\u7c7b\uff0c\u5b83\u5e94\u8be5\u8f93\u51fa Iris-Versicolor\uff08\u7c7b\u522b 1\uff09\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u6700\u9ad8\u7684\u6982\u7387\u3002\u6211\u4eec\u4e86\u6d4b\u8bd5\u4e00\u4e0b\uff1a >>> tree_clf.predict_proba([[5, 1.5]]) array([[ 0. , 0.90740741, 0.09259259]]) >>> tree_clf.predict([[5, 1.5]]) array([1]) \u5b8c\u7f8e\uff01\u8bf7\u6ce8\u610f\uff0c\u4f30\u8ba1\u6982\u7387\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u662f\u76f8\u540c\u7684\uff0c \u9664\u4e86\u56fe 6-2 \u4e2d\u53f3\u4e0b\u89d2\u7684\u77e9\u5f62\u90e8\u5206\uff0c\u4f8b\u5982\u82b1\u74e3\u957f 6 \u5398\u7c73\u548c\u5bbd 1.5 \u5398\u7c73\uff08\u5c3d\u7ba1\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b83\u770b\u8d77\u6765\u5f88\u53ef\u80fd\u662f Iris-Virginica\uff09\u3002 CART \u8bad\u7ec3\u7b97\u6cd5 Scikit-Learn \u7528\u5206\u88c2\u56de\u5f52\u6811\uff08Classification And Regression Tree\uff0c\u7b80\u79f0 CART\uff09\u7b97\u6cd5\u8bad\u7ec3\u51b3\u7b56\u6811\uff08\u4e5f\u53eb\u201c\u589e\u957f\u6811\u201d\uff09\u3002\u8fd9\u79cd\u7b97\u6cd5\u601d\u60f3\u771f\u7684\u975e\u5e38\u7b80\u5355\uff1a \u9996\u5148\u4f7f\u7528\u5355\u4e2a\u7279\u5f81 k \u548c\u9608\u503c \uff08\u4f8b\u5982\uff0c\u201c\u82b1\u74e3\u957f\u5ea6 \u22642.45cm \u201d\uff09\u5c06\u8bad\u7ec3\u96c6\u5206\u6210\u4e24\u4e2a\u5b50\u96c6\u3002\u5b83\u5982\u4f55\u9009\u62e9 k \u548c \u5462\uff1f\u5b83\u5bfb\u627e\u5230\u80fd\u591f\u4ea7\u751f\u6700\u7eaf\u7cb9\u7684\u5b50\u96c6\u4e00\u5bf9 \uff0c\u7136\u540e\u901a\u8fc7\u5b50\u96c6\u5927\u5c0f\u52a0\u6743\u8ba1\u7b97\u3002 \u7b97\u6cd5\u4f1a\u5c1d\u8bd5\u6700\u5c0f\u5316\u6210\u672c\u51fd\u6570\u3002\u65b9\u6cd5\u5982\u516c\u5f0f 6-2 \u5f53\u5b83\u6210\u529f\u7684\u5c06\u8bad\u7ec3\u96c6\u5206\u6210\u4e24\u90e8\u5206\u4e4b\u540e\uff0c \u5b83\u5c06\u4f1a\u7ee7\u7eed\u4f7f\u7528\u76f8\u540c\u7684\u9012\u5f52\u5f0f\u903b\u8f91\u7ee7\u7eed\u7684\u5206\u5272\u5b50\u96c6\uff0c\u7136\u540e\u662f\u5b50\u96c6\u7684\u5b50\u96c6\u3002\u5f53\u8fbe\u5230\u9884\u5b9a\u7684\u6700\u5927\u6df1\u5ea6\u4e4b\u540e\u5c06\u4f1a\u505c\u6b62\u5206\u88c2\uff08\u7531 max_depth \u8d85\u53c2\u6570\u51b3\u5b9a\uff09\uff0c\u6216\u8005\u662f\u5b83\u627e\u4e0d\u5230\u53ef\u4ee5\u7ee7\u7eed\u964d\u4f4e\u4e0d\u7eaf\u5ea6\u7684\u5206\u88c2\u65b9\u6cd5\u7684\u65f6\u5019\u3002\u51e0\u4e2a\u5176\u4ed6\u8d85\u53c2\u6570\uff08\u4e4b\u540e\u4ecb\u7ecd\uff09\u63a7\u5236\u4e86\u5176\u4ed6\u7684\u505c\u6b62\u751f\u957f\u6761\u4ef6\uff08 min_samples_split \uff0c min_samples_leaf \uff0c min_weight_fraction_leaf \uff0c max_leaf_nodes \uff09\u3002 \u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0cCART \u7b97\u6cd5\u662f\u4e00\u79cd\u8d2a\u5a6a\u7b97\u6cd5\uff1a\u5b83\u8d2a\u5a6a\u5730\u641c\u7d22\u6700\u9ad8\u7ea7\u522b\u7684\u6700\u4f73\u5206\u5272\u65b9\u5f0f\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u6df1\u5ea6\u91cd\u590d\u8be5\u8fc7\u7a0b\u3002 \u5b83\u4e0d\u68c0\u67e5\u5206\u5272\u662f\u5426\u80fd\u591f\u5728\u51e0\u4e2a\u7ea7\u522b\u4e2d\u7684\u5168\u90e8\u5206\u5272\u53ef\u80fd\u4e2d\u627e\u5230\u6700\u4f73\u65b9\u6cd5\u3002\u8d2a\u5a6a\u7b97\u6cd5\u901a\u5e38\u4f1a\u4ea7\u751f\u4e00\u4e2a\u76f8\u5f53\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f46\u5b83\u4e0d\u4fdd\u8bc1\u8fd9\u662f\u5168\u5c40\u4e2d\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u627e\u5230\u6700\u4f18\u6811\u662f\u4e00\u4e2a NP \u5b8c\u5168\u95ee\u9898\uff08\u81ea\u884c\u767e\u5ea6\uff09\uff1a\u5b83\u9700\u8981 \u65f6\u95f4\uff0c\u5373\u4f7f\u5bf9\u4e8e\u76f8\u5f53\u5c0f\u7684\u8bad\u7ec3\u96c6\u4e5f\u4f1a\u4f7f\u95ee\u9898\u53d8\u5f97\u68d8\u624b\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2a\u201c\u5408\u7406\u7684\u201d\uff08\u800c\u4e0d\u662f\u6700\u4f73\u7684\uff09\u89e3\u51b3\u65b9\u6848\u3002 \u8ba1\u7b97\u590d\u6742\u5ea6 \u5728\u5efa\u7acb\u597d\u51b3\u7b56\u6811\u6a21\u578b\u540e\uff0c \u505a\u51fa\u9884\u6d4b\u9700\u8981\u904d\u5386\u51b3\u7b56\u6811\uff0c \u4ece\u6839\u8282\u70b9\u4e00\u76f4\u5230\u53f6\u8282\u70b9\u3002\u51b3\u7b56\u6811\u901a\u5e38\u8fd1\u4f3c\u5de6\u53f3\u5e73\u8861\uff0c\u56e0\u6b64\u904d\u5386\u51b3\u7b56\u6811\u9700\u8981\u7ecf\u5386\u5927\u81f4 [2] \u4e2a\u8282\u70b9\u3002\u7531\u4e8e\u6bcf\u4e2a\u8282\u70b9\u53ea\u9700\u8981\u68c0\u67e5\u4e00\u4e2a\u7279\u5f81\u7684\u503c\uff0c\u56e0\u6b64\u603b\u4f53\u9884\u6d4b\u590d\u6742\u5ea6\u4ec5\u4e3a \uff0c\u4e0e\u7279\u5f81\u7684\u6570\u91cf\u65e0\u5173\u3002 \u6240\u4ee5\u5373\u4f7f\u5728\u5904\u7406\u5927\u578b\u8bad\u7ec3\u96c6\u65f6\uff0c\u9884\u6d4b\u901f\u5ea6\u4e5f\u975e\u5e38\u5feb\u3002 [2] \u662f\u4e8c\u8fdb\u5236\u5bf9\u6570\uff0c\u5b83\u7b49\u4e8e \u3002 \u7136\u800c\uff0c\u8bad\u7ec3\u7b97\u6cd5\u7684\u65f6\u5019\uff08\u8bad\u7ec3\u548c\u9884\u6d4b\u4e0d\u540c\uff09\u9700\u8981\u6bd4\u8f83\u6240\u6709\u7279\u5f81\uff08\u5982\u679c\u8bbe\u7f6e\u4e86 max_features \u4f1a\u66f4\u5c11\u4e00\u4e9b\uff09 \u5728\u6bcf\u4e2a\u8282\u70b9\u7684\u6240\u6709\u6837\u672c\u4e0a\u3002\u5c31\u6709\u4e86 \u7684\u8bad\u7ec3\u590d\u6742\u5ea6\u3002\u5bf9\u4e8e\u5c0f\u578b\u8bad\u7ec3\u96c6\uff08\u5c11\u4e8e\u51e0\u5343\u4f8b\uff09\uff0cScikit-Learn \u53ef\u4ee5\u901a\u8fc7\u9884\u5148\u8bbe\u7f6e\u6570\u636e\uff08 presort = True \uff09\u6765\u52a0\u901f\u8bad\u7ec3\uff0c\u4f46\u662f\u8fd9\u5bf9\u4e8e\u8f83\u5927\u8bad\u7ec3\u96c6\u6765\u8bf4\u4f1a\u663e\u7740\u51cf\u6162\u8bad\u7ec3\u901f\u5ea6\u3002 \u57fa\u5c3c\u4e0d\u7eaf\u5ea6\u6216\u662f\u4fe1\u606f\u71b5 \u901a\u5e38\uff0c\u7b97\u6cd5\u4f7f\u7528 Gini \u4e0d\u7eaf\u5ea6\u6765\u8fdb\u884c\u68c0\u6d4b\uff0c \u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5c06\u6807\u51c6\u8d85\u53c2\u6570\u8bbe\u7f6e\u4e3a \"entropy\" \u6765\u4f7f\u7528\u71b5\u4e0d\u7eaf\u5ea6\u8fdb\u884c\u68c0\u6d4b\u3002\u8fd9\u91cc\u71b5\u7684\u6982\u5ff5\u662f\u6e90\u4e8e\u70ed\u529b\u5b66\u4e2d\u5206\u5b50\u6df7\u4e71\u7a0b\u5ea6\u7684\u6982\u5ff5\uff0c\u5f53\u5206\u5b50\u4e95\u7136\u6709\u5e8f\u7684\u65f6\u5019\uff0c\u71b5\u503c\u63a5\u8fd1\u4e8e 0\u3002 \u71b5\u8fd9\u4e2a\u6982\u5ff5\u540e\u6765\u9010\u6e10\u88ab\u6269\u5c55\u5230\u4e86\u5404\u4e2a\u9886\u57df\uff0c\u5176\u4e2d\u5305\u62ec\u9999\u519c\u7684\u4fe1\u606f\u7406\u8bba\uff0c\u8fd9\u4e2a\u7406\u8bba\u88ab\u7528\u4e8e\u6d4b\u7b97\u4e00\u6bb5\u4fe1\u606f\u4e2d\u7684\u5e73\u5747\u4fe1\u606f\u5bc6\u5ea6 [3]\u3002\u5f53\u6240\u6709\u4fe1\u606f\u76f8\u540c\u7684\u65f6\u5019\u71b5\u88ab\u5b9a\u4e49\u4e3a\u96f6\u3002 \u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u71b5\u7ecf\u5e38\u88ab\u7528\u4f5c\u4e0d\u7eaf\u5ea6\u7684\u8861\u91cf\u65b9\u5f0f\uff0c\u5f53\u4e00\u4e2a\u96c6\u5408\u5185\u53ea\u5305\u542b\u4e00\u7c7b\u5b9e\u4f8b\u65f6\uff0c \u6211\u4eec\u79f0\u4e3a\u6570\u636e\u96c6\u7684\u71b5\u4e3a 0\u3002 [3] \u71b5\u7684\u51cf\u5c11\u901a\u5e38\u79f0\u4e3a\u4fe1\u606f\u589e\u76ca\u3002 \u516c\u5f0f 6-3 \u663e\u793a\u4e86\u7b2c i \u4e2a\u8282\u70b9\u7684\u71b5\u7684\u5b9a\u4e49\uff0c\u4f8b\u5982\uff0c\u5728\u56fe 6-1 \u4e2d\uff0c \u6df1\u5ea6\u4e3a 2 \u5de6\u8282\u70b9\u7684\u71b5\u4e3a \u3002 \u90a3\u4e48\u6211\u4eec\u5230\u5e95\u5e94\u8be5\u4f7f\u7528 Gini \u6307\u6570\u8fd8\u662f\u71b5\u5462\uff1f \u4e8b\u5b9e\u4e0a\u5927\u90e8\u5206\u60c5\u51b5\u90fd\u6ca1\u6709\u591a\u5927\u7684\u5dee\u522b\uff1a\u4ed6\u4eec\u4f1a\u751f\u6210\u7c7b\u4f3c\u7684\u51b3\u7b56\u6811\u3002 \u57fa\u5c3c\u6307\u6570\u8ba1\u7b97\u7a0d\u5fae\u5feb\u4e00\u70b9\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9ed8\u8ba4\u503c\u3002\u4f46\u662f\uff0c\u4e5f\u6709\u7684\u65f6\u5019\u5b83\u4eec\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u6811\uff0c\u57fa\u5c3c\u6307\u6570\u4f1a\u8d8b\u4e8e\u5728\u6811\u7684\u5206\u652f\u4e2d\u5c06\u6700\u591a\u7684\u7c7b\u9694\u79bb\u51fa\u6765\uff0c\u800c\u71b5\u6307\u6570\u8d8b\u5411\u4e8e\u4ea7\u751f\u7565\u5fae\u5e73\u8861\u4e00\u4e9b\u7684\u51b3\u7b56\u6811\u6a21\u578b\u3002 \u6b63\u5219\u5316\u8d85\u53c2\u6570 \u51b3\u7b56\u6811\u51e0\u4e4e\u4e0d\u5bf9\u8bad\u7ec3\u6570\u636e\u505a\u4efb\u4f55\u5047\u8bbe\uff08\u4e8e\u6b64\u76f8\u53cd\u7684\u662f\u7ebf\u6027\u56de\u5f52\u7b49\u6a21\u578b\uff0c\u8fd9\u7c7b\u6a21\u578b\u901a\u5e38\u4f1a\u5047\u8bbe\u6570\u636e\u662f\u7b26\u5408\u7ebf\u6027\u5173\u7cfb\u7684\uff09\u3002 \u5982\u679c\u4e0d\u6dfb\u52a0\u7ea6\u675f\uff0c\u6811\u7ed3\u6784\u6a21\u578b\u901a\u5e38\u5c06\u6839\u636e\u8bad\u7ec3\u6570\u636e\u8c03\u6574\u81ea\u5df1\uff0c\u4f7f\u81ea\u8eab\u80fd\u591f\u5f88\u597d\u7684\u62df\u5408\u6570\u636e\uff0c\u800c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5927\u591a\u6570\u4f1a\u5bfc\u81f4\u6a21\u578b\u8fc7\u62df\u5408\u3002 \u8fd9\u4e00\u7c7b\u7684\u6a21\u578b\u901a\u5e38\u4f1a\u88ab\u79f0\u4e3a\u975e\u53c2\u6570\u6a21\u578b\uff0c\u8fd9\u4e0d\u662f\u56e0\u4e3a\u5b83\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\uff08\u901a\u5e38\u4e5f\u6709\u5f88\u591a\uff09\uff0c\u800c\u662f\u56e0\u4e3a\u5728\u8bad\u7ec3\u4e4b\u524d\u6ca1\u6709\u786e\u5b9a\u53c2\u6570\u7684\u5177\u4f53\u6570\u91cf\uff0c\u6240\u4ee5\u6a21\u578b\u7ed3\u6784\u53ef\u4ee5\u6839\u636e\u6570\u636e\u7684\u7279\u6027\u81ea\u7531\u751f\u957f\u3002 \u4e8e\u6b64\u76f8\u53cd\u7684\u662f\uff0c\u50cf\u7ebf\u6027\u56de\u5f52\u8fd9\u6837\u7684\u53c2\u6570\u6a21\u578b\u6709\u4e8b\u5148\u8bbe\u5b9a\u597d\u7684\u53c2\u6570\u6570\u91cf\uff0c\u6240\u4ee5\u81ea\u7531\u5ea6\u662f\u53d7\u9650\u7684\uff0c\u8fd9\u5c31\u51cf\u5c11\u4e86\u8fc7\u62df\u5408\u7684\u98ce\u9669\uff08\u4f46\u662f\u589e\u52a0\u4e86\u6b20\u62df\u5408\u7684\u98ce\u9669\uff09\u3002 DecisionTreeClassifier \u7c7b\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u53c2\u6570\u7528\u4e8e\u9650\u5236\u6811\u6a21\u578b\u7684\u5f62\u72b6: min_samples_split \uff08\u8282\u70b9\u5728\u88ab\u5206\u88c2\u4e4b\u524d\u5fc5\u987b\u5177\u6709\u7684\u6700\u5c0f\u6837\u672c\u6570\uff09\uff0c min_samples_leaf \uff08\u53f6\u8282\u70b9\u5fc5\u987b\u5177\u6709\u7684\u6700\u5c0f\u6837\u672c\u6570\uff09\uff0c min_weight_fraction_leaf \uff08\u548c min_samples_leaf \u76f8\u540c\uff0c\u4f46\u8868\u793a\u4e3a\u52a0\u6743\u603b\u6570\u7684\u4e00\u5c0f\u90e8\u5206\u5b9e\u4f8b\uff09\uff0c max_leaf_nodes \uff08\u53f6\u8282\u70b9\u7684\u6700\u5927\u6570\u91cf\uff09 \u548cmax_features \uff08\u5728\u6bcf\u4e2a\u8282\u70b9\u88ab\u8bc4\u4f30\u662f\u5426\u5206\u88c2\u7684\u65f6\u5019\uff0c\u5177\u6709\u7684\u6700\u5927\u7279\u5f81\u6570\u91cf\uff09\u3002\u589e\u52a0 min_* hyperparameters \u6216\u8005\u51cf\u5c11 max_* hyperparameters \u4f1a\u4f7f\u6a21\u578b\u6b63\u5219\u5316\u3002 \u4e00\u4e9b\u5176\u4ed6\u7b97\u6cd5\u7684\u5de5\u4f5c\u539f\u7406\u662f\u5728\u6ca1\u6709\u4efb\u4f55\u7ea6\u675f\u6761\u4ef6\u4e0b\u8bad\u7ec3\u51b3\u7b56\u6811\u6a21\u578b\uff0c\u8ba9\u6a21\u578b\u81ea\u7531\u751f\u957f\uff0c\u7136\u540e\u518d\u5bf9\u4e0d\u9700\u8981\u7684\u8282\u70b9\u8fdb\u884c\u526a\u679d\u3002 \u5f53\u4e00\u4e2a\u8282\u70b9\u7684\u5168\u90e8\u5b50\u8282\u70b9\u90fd\u662f\u53f6\u8282\u70b9\u65f6\uff0c\u5982\u679c\u5b83\u5bf9\u7eaf\u5ea6\u7684\u63d0\u5347\u4e0d\u5177\u6709\u7edf\u8ba1\u5b66\u610f\u4e49\uff0c\u6211\u4eec\u5c31\u8ba4\u4e3a\u8fd9\u4e2a\u5206\u652f\u662f\u4e0d\u5fc5\u8981\u7684\u3002 \u6807\u51c6\u7684\u5047\u8bbe\u68c0\u9a8c\uff0c\u4f8b\u5982\u5361\u65b9\u68c0\u6d4b\uff0c\u901a\u5e38\u4f1a\u88ab\u7528\u4e8e\u8bc4\u4f30\u4e00\u4e2a\u6982\u7387\u503c -- \u5373\u6539\u8fdb\u662f\u5426\u7eaf\u7cb9\u662f\u5076\u7136\u6027\u7684\u7ed3\u679c\uff08\u4e5f\u53eb\u539f\u5047\u8bbe\uff09 \u5982\u679c p \u503c\u6bd4\u7ed9\u5b9a\u7684\u9608\u503c\u66f4\u9ad8\uff08\u901a\u5e38\u8bbe\u5b9a\u4e3a 5%\uff0c\u4e5f\u5c31\u662f 95% \u7f6e\u4fe1\u5ea6\uff0c\u901a\u8fc7\u8d85\u53c2\u6570\u8bbe\u7f6e\uff09\uff0c\u90a3\u4e48\u8282\u70b9\u5c31\u88ab\u8ba4\u4e3a\u662f\u975e\u5fc5\u8981\u7684\uff0c\u5b83\u7684\u5b50\u8282\u70b9\u4f1a\u88ab\u5220\u9664\u3002 \u8fd9\u79cd\u526a\u679d\u65b9\u5f0f\u5c06\u4f1a\u4e00\u76f4\u8fdb\u884c\uff0c\u76f4\u5230\u6240\u6709\u7684\u975e\u5fc5\u8981\u8282\u70b9\u90fd\u88ab\u5220\u5149\u3002 \u56fe 6-3 \u663e\u793a\u4e86\u5bf9 moons \u6570\u636e\u96c6\uff08\u5728\u7b2c 5 \u7ae0\u4ecb\u7ecd\u8fc7\uff09\u8fdb\u884c\u8bad\u7ec3\u751f\u6210\u7684\u4e24\u4e2a\u51b3\u7b56\u6811\u6a21\u578b\uff0c\u5de6\u4fa7\u7684\u56fe\u5f62\u5bf9\u5e94\u7684\u51b3\u7b56\u6811\u4f7f\u7528\u9ed8\u8ba4\u8d85\u53c2\u6570\u751f\u6210\uff08\u6ca1\u6709\u9650\u5236\u751f\u957f\u6761\u4ef6\uff09\uff0c\u53f3\u8fb9\u7684\u51b3\u7b56\u6811\u6a21\u578b\u8bbe\u7f6e\u4e3a min_samples_leaf=4 \u3002\u5f88\u660e\u663e\uff0c\u5de6\u8fb9\u7684\u6a21\u578b\u8fc7\u62df\u5408\u4e86\uff0c\u800c\u53f3\u8fb9\u7684\u6a21\u578b\u6cdb\u7528\u6027\u66f4\u597d\u3002 \u56de\u5f52 \u51b3\u7b56\u6811\u4e5f\u80fd\u591f\u6267\u884c\u56de\u5f52\u4efb\u52a1\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528 Scikit-Learn \u7684 DecisionTreeRegressor \u7c7b\u6784\u5efa\u4e00\u4e2a\u56de\u5f52\u6811\uff0c\u8ba9\u6211\u4eec\u7528 max_depth = 2 \u5728\u5177\u6709\u566a\u58f0\u7684\u4e8c\u6b21\u9879\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\u3002 from sklearn.tree import DecisionTreeRegressor tree_reg = DecisionTreeRegressor(max_depth=2) tree_reg.fit(X, y) \u7ed3\u679c\u5982\u56fe 6-4 \u6240\u793a \u8fd9\u68f5\u6811\u770b\u8d77\u6765\u975e\u5e38\u7c7b\u4f3c\u4e8e\u4f60\u4e4b\u524d\u5efa\u7acb\u7684\u5206\u7c7b\u6811\uff0c\u5b83\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u5b83\u4e0d\u662f\u9884\u6d4b\u6bcf\u4e2a\u8282\u70b9\u4e2d\u7684\u6837\u672c\u6240\u5c5e\u7684\u5206\u7c7b\uff0c\u800c\u662f\u9884\u6d4b\u4e00\u4e2a\u5177\u4f53\u7684\u6570\u503c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u60f3\u5bf9 \u7684\u65b0\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\u3002\u4ece\u6839\u5f00\u59cb\u904d\u5386\u6811\uff0c\u6700\u7ec8\u5230\u8fbe\u9884\u6d4b\u503c\u7b49\u4e8e 0.1106 \u7684\u53f6\u8282\u70b9\u3002\u8be5\u9884\u6d4b\u4ec5\u4ec5\u662f\u4e0e\u8be5\u53f6\u8282\u70b9\u76f8\u5173\u7684 110 \u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7684\u5e73\u5747\u76ee\u6807\u503c\u3002\u800c\u8fd9\u4e2a\u9884\u6d4b\u7ed3\u679c\u5728\u5bf9\u5e94\u7684 110 \u4e2a\u5b9e\u4f8b\u4e0a\u7684\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\u7b49\u4e8e 0.0151\u3002 \u5728\u56fe 6-5 \u7684\u5de6\u4fa7\u663e\u793a\u7684\u662f\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u5982\u679c\u4f60\u5c06 max_depth=3 \u8bbe\u7f6e\u4e3a 3\uff0c\u6a21\u578b\u5c31\u4f1a\u5982 6-5 \u56fe\u53f3\u4fa7\u663e\u793a\u7684\u90a3\u6837.\u6ce8\u610f\u6bcf\u4e2a\u533a\u57df\u7684\u9884\u6d4b\u503c\u603b\u662f\u8be5\u533a\u57df\u4e2d\u5b9e\u4f8b\u7684\u5e73\u5747\u76ee\u6807\u503c\u3002\u7b97\u6cd5\u4ee5\u4e00\u79cd\u4f7f\u5927\u591a\u6570\u8bad\u7ec3\u5b9e\u4f8b\u5c3d\u53ef\u80fd\u63a5\u8fd1\u8be5\u9884\u6d4b\u503c\u7684\u65b9\u5f0f\u5206\u5272\u6bcf\u4e2a\u533a\u57df\u3002 \u8bd1\u8005\u6ce8\uff1a\u56fe\u91cc\u9762\u7684\u7ea2\u7ebf\u5c31\u662f\u8bad\u7ec3\u5b9e\u4f8b\u7684\u5e73\u5747\u76ee\u6807\u503c\uff0c\u5bf9\u5e94\u4e0a\u56fe\u4e2d\u7684 value CART \u7b97\u6cd5\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u4e4b\u524d\u5904\u7406\u5206\u7c7b\u6a21\u578b\u57fa\u672c\u4e00\u6837\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u73b0\u5728\u4e0d\u518d\u4ee5\u6700\u5c0f\u5316\u4e0d\u7eaf\u5ea6\u7684\u65b9\u5f0f\u5206\u5272\u8bad\u7ec3\u96c6\uff0c\u800c\u662f\u8bd5\u56fe\u4ee5\u6700\u5c0f\u5316 MSE \u7684\u65b9\u5f0f\u5206\u5272\u8bad\u7ec3\u96c6\u3002 \u516c\u5f0f 6-4 \u663e\u793a\u4e86\u6210\u672c\u51fd\u6570\uff0c\u8be5\u7b97\u6cd5\u8bd5\u56fe\u6700\u5c0f\u5316\u8fd9\u4e2a\u6210\u672c\u51fd\u6570\u3002 \u548c\u5904\u7406\u5206\u7c7b\u4efb\u52a1\u65f6\u4e00\u6837\uff0c\u51b3\u7b56\u6811\u5728\u5904\u7406\u56de\u5f52\u95ee\u9898\u7684\u65f6\u5019\u4e5f\u5bb9\u6613\u8fc7\u62df\u5408\u3002\u5982\u679c\u4e0d\u6dfb\u52a0\u4efb\u4f55\u6b63\u5219\u5316\uff08\u9ed8\u8ba4\u7684\u8d85\u53c2\u6570\uff09\uff0c\u4f60\u5c31\u4f1a\u5f97\u5230\u56fe 6-6 \u5de6\u4fa7\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u663e\u7136\uff0c\u8fc7\u5ea6\u62df\u5408\u7684\u7a0b\u5ea6\u975e\u5e38\u4e25\u91cd\u3002\u800c\u5f53\u6211\u4eec\u8bbe\u7f6e\u4e86 min_samples_leaf = 10 \uff0c\u76f8\u5bf9\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u66f4\u52a0\u5408\u9002\u7684\u6a21\u578b\u4e86\uff0c\u5c31\u5982\u56fe 6-6 \u6240\u793a\u7684\u90a3\u6837\u3002 \u4e0d\u7a33\u5b9a\u6027 \u6211\u5e0c\u671b\u4f60\u73b0\u5728\u4e86\u89e3\u4e86\u51b3\u7b56\u6811\u5230\u5e95\u6709\u54ea\u4e9b\u7279\u70b9\uff1a \u5b83\u5f88\u5bb9\u6613\u7406\u89e3\u548c\u89e3\u91ca\uff0c\u6613\u4e8e\u4f7f\u7528\u4e14\u529f\u80fd\u4e30\u5bcc\u800c\u5f3a\u5927\u3002\u7136\u800c\uff0c\u5b83\u4e5f\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u9996\u5148\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u51b3\u7b56\u6811\u5f88\u559c\u6b22\u8bbe\u5b9a\u6b63\u4ea4\u5316\u7684\u51b3\u7b56\u8fb9\u754c\uff0c\uff08\u6240\u6709\u8fb9\u754c\u90fd\u662f\u548c\u67d0\u4e00\u4e2a\u8f74\u76f8\u5782\u76f4\u7684\uff09\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5bf9\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u65cb\u8f6c\u5f88\u654f\u611f\uff0c\u4f8b\u5982\u56fe 6-7 \u663e\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\u3002\u5728\u5de6\u56fe\u4e2d\uff0c\u51b3\u7b56\u6811\u53ef\u4ee5\u8f7b\u6613\u7684\u5c06\u6570\u636e\u5206\u9694\u5f00\uff0c\u4f46\u662f\u5728\u53f3\u56fe\u4e2d\uff0c\u5f53\u6211\u4eec\u628a\u6570\u636e\u65cb\u8f6c\u4e86 45\u00b0 \u4e4b\u540e\uff0c\u51b3\u7b56\u6811\u7684\u8fb9\u754c\u770b\u8d77\u6765\u53d8\u7684\u683c\u5916\u590d\u6742\u3002\u5c3d\u7ba1\u4e24\u4e2a\u51b3\u7b56\u6811\u90fd\u5b8c\u7f8e\u7684\u62df\u5408\u4e86\u8bad\u7ec3\u6570\u636e\uff0c\u53f3\u8fb9\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u5f88\u53ef\u80fd\u975e\u5e38\u5dee\u3002 \u89e3\u51b3\u8fd9\u4e2a\u96be\u9898\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528 PCA \u4e3b\u6210\u5206\u5206\u6790\uff08\u7b2c\u516b\u7ae0\uff09\uff0c\u8fd9\u6837\u901a\u5e38\u80fd\u4f7f\u8bad\u7ec3\u7ed3\u679c\u53d8\u5f97\u66f4\u597d\u4e00\u4e9b\u3002 \u66f4\u52a0\u901a\u4fd7\u7684\u8bb2\uff0c\u51b3\u7b56\u65f6\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5b83\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u5fae\u5c0f\u53d8\u5316\u975e\u5e38\u654f\u611f\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff0c\u6211\u4eec\u4ec5\u4ec5\u4ece\u9e22\u5c3e\u82b1\u8bad\u7ec3\u6570\u636e\u4e2d\u5c06\u6700\u5bbd\u7684 Iris-Versicolor \u62ff\u6389\uff08\u82b1\u74e3\u957f 4.8 \u5398\u7c73\uff0c\u5bbd 1.8 \u5398\u7c73\uff09\uff0c\u7136\u540e\u91cd\u65b0\u8bad\u7ec3\u51b3\u7b56\u6811\u6a21\u578b\uff0c\u4f60\u53ef\u80fd\u5c31\u4f1a\u5f97\u5230\u56fe 6-8 \u4e2d\u7684\u6a21\u578b\u3002\u6b63\u5982\u6211\u4eec\u770b\u5230\u7684\u90a3\u6837\uff0c\u51b3\u7b56\u6811\u6709\u4e86\u975e\u5e38\u5927\u7684\u53d8\u5316\uff08\u539f\u6765\u7684\u5982\u56fe 6-2\uff09\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u7531\u4e8e Scikit-Learn \u7684\u8bad\u7ec3\u7b97\u6cd5\u662f\u975e\u5e38\u968f\u673a\u7684\uff0c\u5373\u4f7f\u662f\u76f8\u540c\u7684\u8bad\u7ec3\u6570\u636e\u4f60\u4e5f\u53ef\u80fd\u5f97\u5230\u5dee\u522b\u5f88\u5927\u7684\u6a21\u578b\uff08\u9664\u975e\u4f60\u8bbe\u7f6e\u4e86\u968f\u673a\u6570\u79cd\u5b50\uff09\u3002 \u6211\u4eec\u4e0b\u4e00\u7ae0\u4e2d\u5c06\u4f1a\u770b\u5230\uff0c\u968f\u673a\u68ee\u6797\u53ef\u4ee5\u901a\u8fc7\u591a\u68f5\u6811\u7684\u5e73\u5747\u9884\u6d4b\u503c\u9650\u5236\u8fd9\u79cd\u4e0d\u7a33\u5b9a\u6027\u3002 \u7ec3\u4e60 \u5728 100 \u4e07\u4f8b\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\uff08\u6ca1\u6709\u9650\u5236\uff09\u7684\u51b3\u7b56\u6811\u7684\u8fd1\u4f3c\u6df1\u5ea6\u662f\u591a\u5c11\uff1f \u8282\u70b9\u7684\u57fa\u5c3c\u6307\u6570\u6bd4\u8d77\u5b83\u7684\u7236\u8282\u70b9\u662f\u66f4\u9ad8\u8fd8\u662f\u66f4\u4f4e\uff1f\u5b83\u662f\u901a\u5e38\u60c5\u51b5\u4e0b\u66f4\u9ad8/\u66f4\u4f4e\uff0c\u8fd8\u662f\u6c38\u8fdc\u66f4\u9ad8/\u66f4\u4f4e\uff1f \u5982\u679c\u51b3\u7b56\u6811\u8fc7\u62df\u5408\u4e86\uff0c\u51cf\u5c11\u6700\u5927\u6df1\u5ea6\u662f\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5\u5417\uff1f \u5982\u679c\u51b3\u7b56\u6811\u5bf9\u8bad\u7ec3\u96c6\u6b20\u62df\u5408\u4e86\uff0c\u5c1d\u8bd5\u7f29\u653e\u8f93\u5165\u7279\u5f81\u662f\u5426\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1f \u5982\u679c\u5bf9\u5305\u542b 100 \u4e07\u4e2a\u5b9e\u4f8b\u7684\u6570\u636e\u96c6\u8bad\u7ec3\u51b3\u7b56\u6811\u6a21\u578b\u9700\u8981\u4e00\u4e2a\u5c0f\u65f6\uff0c\u5728\u5305\u542b 1000 \u4e07\u4e2a\u5b9e\u4f8b\u7684\u57f9\u8bad\u96c6\u4e0a\u8bad\u7ec3\u53e6\u4e00\u4e2a\u51b3\u7b56\u6811\u5927\u6982\u9700\u8981\u591a\u5c11\u65f6\u95f4\u5462\uff1f \u5982\u679c\u4f60\u7684\u8bad\u7ec3\u96c6\u5305\u542b 100,000 \u4e2a\u5b9e\u4f8b\uff0c\u8bbe\u7f6e presort=True \u4f1a\u52a0\u5feb\u8bad\u7ec3\u7684\u901f\u5ea6\u5417\uff1f \u5bf9 moons \u6570\u636e\u96c6\u8fdb\u884c\u51b3\u7b56\u6811\u8bad\u7ec3\u5e76\u4f18\u5316\u6a21\u578b\u3002 \u901a\u8fc7\u8bed\u53e5 make_moons(n_samples=10000, noise=0.4) \u751f\u6210 moons \u6570\u636e\u96c6 \u901a\u8fc7 train_test_split() \u5c06\u6570\u636e\u96c6\u5206\u5272\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002 \u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u5e76\u4f7f\u7528\u7f51\u683c\u641c\u7d22\u6cd5\u5bfb\u627e\u6700\u597d\u7684\u8d85\u53c2\u6570\u503c\uff08\u4f7f\u7528 GridSearchCV \u7c7b\u7684\u5e2e\u52a9\u6587\u6863\uff09 \u63d0\u793a: \u5c1d\u8bd5\u5404\u79cd\u5404\u6837\u7684 max_leaf_nodes \u503c \u4f7f\u7528\u8fd9\u4e9b\u8d85\u53c2\u6570\u8bad\u7ec3\u5168\u90e8\u7684\u8bad\u7ec3\u96c6\u6570\u636e\uff0c\u5e76\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6d4b\u91cf\u6a21\u578b\u7684\u8868\u73b0\u3002\u4f60\u5e94\u8be5\u83b7\u5f97\u5927\u7ea6 85% \u5230 87% \u7684\u51c6\u786e\u5ea6\u3002 \u751f\u6210\u68ee\u6797 \u63a5\u7740\u524d\u8fb9\u7684\u7ec3\u4e60\uff0c\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u751f\u6210 1,000 \u4e2a\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6\uff0c\u6bcf\u4e2a\u5b50\u96c6\u5305\u542b 100 \u4e2a\u968f\u673a\u9009\u62e9\u7684\u5b9e\u4f8b\u3002\u63d0\u793a\uff1a\u4f60\u53ef\u4ee5\u4f7f\u7528 Scikit-Learn \u7684 ShuffleSplit \u7c7b\u3002 \u4f7f\u7528\u4e0a\u9762\u627e\u5230\u7684\u6700\u4f73\u8d85\u53c2\u6570\u503c\uff0c\u5728\u6bcf\u4e2a\u5b50\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u51b3\u7b56\u6811\u3002\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6d4b\u8bd5\u8fd9 1000 \u4e2a\u51b3\u7b56\u6811\u3002\u7531\u4e8e\u5b83\u4eec\u662f\u5728\u8f83\u5c0f\u7684\u96c6\u5408\u4e0a\u8fdb\u884c\u4e86\u8bad\u7ec3\uff0c\u56e0\u6b64\u8fd9\u4e9b\u51b3\u7b56\u6811\u53ef\u80fd\u4f1a\u6bd4\u7b2c\u4e00\u4e2a\u51b3\u7b56\u6811\u6548\u679c\u66f4\u5dee\uff0c\u53ea\u80fd\u8fbe\u5230\u7ea6 80% \u7684\u51c6\u786e\u5ea6\u3002 \u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u523b\u5230\u4e86\uff01\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u96c6\u5b9e\u4f8b\uff0c\u751f\u6210 1,000 \u4e2a\u51b3\u7b56\u6811\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u7136\u540e\u53ea\u4fdd\u7559\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u9884\u6d4b\u7ed3\u679c\uff08\u60a8\u53ef\u4ee5\u4f7f\u7528 SciPy \u7684 mode() \u51fd\u6570\uff09\u3002\u8fd9\u4e2a\u51fd\u6570\u4f7f\u4f60\u53ef\u4ee5\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u591a\u6570\u6295\u7968\u9884\u6d4b\u3002 \u5728\u6d4b\u8bd5\u96c6\u4e0a\u8bc4\u4f30\u8fd9\u4e9b\u9884\u6d4b\u7ed3\u679c\uff0c\u4f60\u5e94\u8be5\u83b7\u5f97\u4e86\u4e00\u4e2a\u6bd4\u7b2c\u4e00\u4e2a\u6a21\u578b\u9ad8\u4e00\u70b9\u7684\u51c6\u786e\u7387\uff0c\uff08\u5927\u7ea6 0.5% \u5230 1.5%\uff09\uff0c\u606d\u559c\uff0c\u4f60\u5df2\u7ecf\u5f04\u51fa\u4e86\u4e00\u4e2a\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u6a21\u578b! {% endraw %}","title":"6.\u51b3\u7b56\u6811"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_1","text":"\u548c\u652f\u6301\u5411\u91cf\u673a\u4e00\u6837\uff0c \u51b3\u7b56\u6811\u662f\u4e00\u79cd\u591a\u529f\u80fd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c \u5373\u53ef\u4ee5\u6267\u884c\u5206\u7c7b\u4efb\u52a1\u4e5f\u53ef\u4ee5\u6267\u884c\u56de\u5f52\u4efb\u52a1\uff0c \u751a\u81f3\u5305\u62ec\u591a\u8f93\u51fa\uff08multioutput\uff09\u4efb\u52a1. \u5b83\u662f\u4e00\u79cd\u529f\u80fd\u5f88\u5f3a\u5927\u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5bf9\u5f88\u590d\u6742\u7684\u6570\u636e\u96c6\u8fdb\u884c\u62df\u5408\u3002\u4f8b\u5982\uff0c\u5728\u7b2c\u4e8c\u7ae0\u4e2d\u6211\u4eec\u5bf9\u52a0\u5229\u798f\u5c3c\u4e9a\u4f4f\u623f\u6570\u636e\u96c6\u4f7f\u7528\u51b3\u7b56\u6811\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\uff0c\u5c31\u5f88\u597d\u7684\u62df\u5408\u4e86\u6570\u636e\u96c6\uff08\u5b9e\u9645\u4e0a\u662f\u8fc7\u62df\u5408\uff09\u3002 \u51b3\u7b56\u6811\u4e5f\u662f\u968f\u673a\u68ee\u6797\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff08\u89c1\u7b2c 7 \u7ae0\uff09\uff0c\u800c\u968f\u673a\u68ee\u6797\u662f\u5f53\u4eca\u6700\u5f3a\u5927\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e4b\u4e00\u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u9996\u5148\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528\u51b3\u7b56\u6811\u8fdb\u884c\u8bad\u7ec3\uff0c\u53ef\u89c6\u5316\u548c\u9884\u6d4b\u3002 \u7136\u540e\u6211\u4eec\u4f1a\u5b66\u4e60\u5728 Scikit-learn \u4e0a\u9762\u4f7f\u7528 CART \u7b97\u6cd5\uff0c\u5e76\u4e14\u63a2\u8ba8\u5982\u4f55\u8c03\u6574\u51b3\u7b56\u6811\u8ba9\u5b83\u53ef\u4ee5\u7528\u4e8e\u6267\u884c\u56de\u5f52\u4efb\u52a1\u3002 \u6700\u540e\uff0c\u6211\u4eec\u5f53\u7136\u4e5f\u9700\u8981\u8ba8\u8bba\u4e00\u4e0b\u51b3\u7b56\u6811\u76ee\u524d\u5b58\u5728\u7684\u4e00\u4e9b\u5c40\u9650\u6027\u3002","title":"\u516d\u3001\u51b3\u7b56\u6811"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_2","text":"\u4e3a\u4e86\u7406\u89e3\u51b3\u7b56\u6811\uff0c\u6211\u4eec\u9700\u8981\u5148\u6784\u5efa\u4e00\u4e2a\u51b3\u7b56\u6811\u5e76\u4eb2\u8eab\u4f53\u9a8c\u5b83\u5230\u5e95\u5982\u4f55\u8fdb\u884c\u9884\u6d4b\u3002 \u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5c31\u662f\u5728\u6211\u4eec\u719f\u77e5\u7684\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e00\u4e2a\u51b3\u7b56\u6811\u5206\u7c7b\u5668\u7684\u8bad\u7ec3\u3002 from sklearn.datasets import load_iris from sklearn.tree import DecisionTreeClassifier iris = load_iris() X = iris.data[:, 2:] # petal length and width y = iris.target tree_clf = DecisionTreeClassifier(max_depth=2) tree_clf.fit(X, y) \u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 export_graphviz() \u65b9\u6cd5\uff0c\u901a\u8fc7\u751f\u6210\u4e00\u4e2a\u53eb\u505a iris_tree.dot \u7684\u56fe\u5f62\u5b9a\u4e49\u6587\u4ef6\u5c06\u4e00\u4e2a\u8bad\u7ec3\u597d\u7684\u51b3\u7b56\u6811\u6a21\u578b\u53ef\u89c6\u5316\u3002 from sklearn.tree import export_graphviz export_graphviz( tree_clf, out_file=image_path(\"iris_tree.dot\"), feature_names=iris.feature_names[2:], class_names=iris.target_names, rounded=True, filled=True ) \u8bd1\u8005\u6ce8\uff1a\u539f\u6587\u4e2d\u7684image_path\u7528\u4e8e\u83b7\u5f97\u793a\u4f8b\u7a0b\u5e8f\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u8fd9\u91cc\u76f4\u63a5\u53bb\u6389\u6539\u6210 out_file=\"iris_tree.dot\" \u5373\u53ef \u53c2\u89c1https://github.com/ageron/handson-ml/blob/master/06_decision_trees.ipynb \u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 graphviz package [1] \u4e2d\u7684 dot \u547d\u4ee4\u884c\uff0c\u5c06 .dot \u6587\u4ef6\u8f6c\u6362\u6210 PDF \u6216 PNG \u7b49\u591a\u79cd\u6570\u636e\u683c\u5f0f\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u5c06 .dot \u6587\u4ef6\u8f6c\u6362\u6210 .png \u6587\u4ef6\u7684\u547d\u4ee4\u5982\u4e0b\uff1a [1] Graphviz\u662f\u4e00\u6b3e\u5f00\u6e90\u56fe\u5f62\u53ef\u89c6\u5316\u8f6f\u4ef6\u5305\uff0c http://www.graphviz.org/ \u3002 $ dot -Tpng iris_tree.dot -o iris_tree.png \u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u51b3\u7b56\u6811\u5982\u56fe 6-1\u3002","title":"\u51b3\u7b56\u6811\u7684\u8bad\u7ec3\u548c\u53ef\u89c6\u5316"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_3","text":"\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5728\u56fe 6-1 \u4e2d\u7684\u6811\u662f\u5982\u4f55\u8fdb\u884c\u9884\u6d4b\u7684\u3002\u5047\u8bbe\u4f60\u627e\u5230\u4e86\u4e00\u6735\u9e22\u5c3e\u82b1\u5e76\u4e14\u60f3\u5bf9\u5b83\u8fdb\u884c\u5206\u7c7b\uff0c\u4f60\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff08\u6df1\u5ea6\u4e3a 0\uff0c\u9876\u90e8\uff09\uff1a\u8be5\u8282\u70b9\u8be2\u95ee\u82b1\u6735\u7684\u82b1\u74e3\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e 2.45 \u5398\u7c73\u3002\u5982\u679c\u662f\uff0c\u60a8\u5c06\u5411\u4e0b\u79fb\u52a8\u5230\u6839\u7684\u5de6\u4fa7\u5b50\u8282\u70b9\uff08\u6df1\u5ea6\u4e3a 1\uff0c\u5de6\u4fa7\uff09\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u4e00\u7247\u53f6\u5b50\u8282\u70b9\uff08\u5373\u5b83\u6ca1\u6709\u4efb\u4f55\u5b50\u8282\u70b9\uff09\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u95ee\u4efb\u4f55\u95ee\u9898\uff1a\u4f60\u53ef\u4ee5\u65b9\u4fbf\u5730\u67e5\u770b\u8be5\u8282\u70b9\u7684\u9884\u6d4b\u7c7b\u522b\uff0c\u51b3\u7b56\u6811\u9884\u6d4b\u4f60\u7684\u82b1\u662f Iris-Setosa\uff08 class = setosa \uff09\u3002 \u73b0\u5728\u5047\u8bbe\u4f60\u627e\u5230\u4e86\u53e6\u4e00\u6735\u82b1\uff0c\u4f46\u8fd9\u6b21\u7684\u82b1\u74e3\u957f\u5ea6\u662f\u5927\u4e8e 2.45 \u5398\u7c73\u7684\u3002\u4f60\u5fc5\u987b\u5411\u4e0b\u79fb\u52a8\u5230\u6839\u7684\u53f3\u4fa7\u5b50\u8282\u70b9\uff08\u6df1\u5ea6\u4e3a 1\uff0c\u53f3\u4fa7\uff09\uff0c\u800c\u8fd9\u4e2a\u8282\u70b9\u4e0d\u662f\u53f6\u8282\u70b9\uff0c\u6240\u4ee5\u5b83\u4f1a\u95ee\u53e6\u4e00\u4e2a\u95ee\u9898\uff1a\u82b1\u74e3\u5bbd\u5ea6\u662f\u5426\u5c0f\u4e8e 1.75 \u5398\u7c73\uff1f \u5982\u679c\u662f\uff0c\u90a3\u4e48\u4f60\u7684\u82b1\u5f88\u53ef\u80fd\u662f\u4e00\u4e2a Iris-Versicolor\uff08\u6df1\u5ea6\u4e3a 2\uff0c\u5de6\uff09\u3002 \u5982\u679c\u4e0d\u662f\uff0c\u90a3\u5f88\u53ef\u80fd\u4e00\u4e2a Iris-Virginica\uff08\u6df1\u5ea6\u4e3a 2\uff0c\u53f3\uff09\uff0c\u771f\u7684\u662f\u592a\u7b80\u5355\u4e86\uff0c\u5bf9\u5427\uff01 \u51b3\u7b56\u6811\u7684\u4f17\u591a\u7279\u6027\u4e4b\u4e00\u5c31\u662f\uff0c \u5b83\u4e0d\u9700\u8981\u592a\u591a\u7684\u6570\u636e\u9884\u5904\u7406\uff0c \u5c24\u5176\u662f\u4e0d\u9700\u8981\u8fdb\u884c\u7279\u5f81\u7684\u7f29\u653e\u6216\u8005\u5f52\u4e00\u5316\u3002 \u8282\u70b9\u7684 samples \u5c5e\u6027\u7edf\u8ba1\u51fa\u5b83\u5e94\u7528\u4e8e\u591a\u5c11\u4e2a\u8bad\u7ec3\u6837\u672c\u5b9e\u4f8b\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u6709\u4e00\u767e\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u662f\u82b1\u74e3\u957f\u5ea6\u5927\u4e8e 2.45 \u91cc\u9762\u7684\uff08\u6df1\u5ea6\u4e3a 1\uff0c \u53f3\u4fa7\uff09\uff0c\u5728\u8fd9 100 \u4e2a\u6837\u4f8b\u4e2d\u53c8\u6709 54 \u4e2a\u82b1\u74e3\u5bbd\u5ea6\u5c0f\u4e8e 1.75cm\uff08\u6df1\u5ea6\u4e3a 2\uff0c\u5de6\u4fa7\uff09\u3002 \u8282\u70b9\u7684 value \u5c5e\u6027\u544a\u8bc9\u4f60\u8fd9\u4e2a\u8282\u70b9\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7c7b\u522b\u7684\u6837\u4f8b\u6709\u591a\u5c11\u4e2a\u3002 \u4f8b\u5982\uff1a\u53f3\u4e0b\u89d2\u7684\u8282\u70b9\u4e2d\u5305\u542b 0 \u4e2a Iris-Setosa\uff0c1 \u4e2a Iris-Versicolor \u548c 45 \u4e2a Iris-Virginica\u3002 \u6700\u540e\uff0c\u8282\u70b9\u7684 Gini \u5c5e\u6027\u7528\u4e8e\u6d4b\u91cf\u5b83\u7684\u7eaf\u5ea6\uff1a\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5305\u542b\u7684\u6240\u6709\u8bad\u7ec3\u6837\u4f8b\u5168\u90fd\u662f\u540c\u4e00\u7c7b\u522b\u7684\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u4e2a\u8282\u70b9\u662f\u7eaf\u7684\uff08 Gini=0 \uff09\u3002 \u4f8b\u5982\uff0c\u6df1\u5ea6\u4e3a 1 \u7684\u5de6\u4fa7\u8282\u70b9\u53ea\u5305\u542b Iris-Setosa \u8bad\u7ec3\u5b9e\u4f8b\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u7eaf\u8282\u70b9\uff0cGini \u6307\u6570\u4e3a 0\u3002 \u516c\u5f0f 6-1 \u663e\u793a\u4e86\u8bad\u7ec3\u7b97\u6cd5\u5982\u4f55\u8ba1\u7b97\u7b2c i \u4e2a\u8282\u70b9\u7684 gini \u5206\u6570 \u3002\u4f8b\u5982\uff0c \u6df1\u5ea6\u4e3a 2 \u7684\u5de6\u4fa7\u8282\u70b9\u57fa\u5c3c\u6307\u6570\u4e3a\uff1a \u3002\u53e6\u5916\u4e00\u4e2a\u7eaf\u5ea6\u6307\u6570\u4e5f\u5c06\u5728\u540e\u6587\u5f88\u5feb\u63d0\u5230\u3002 \u662f\u7b2c i \u4e2a\u8282\u70b9\u4e2d\u8bad\u7ec3\u5b9e\u4f8b\u4e3a\u7684 k \u7c7b\u5b9e\u4f8b\u7684\u6bd4\u4f8b Scikit-Learn \u7528\u7684\u662f CART \u7b97\u6cd5\uff0c CART \u7b97\u6cd5\u4ec5\u4ea7\u751f\u4e8c\u53c9\u6811\uff1a\u6bcf\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u603b\u662f\u53ea\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff08\u53ea\u6709\u662f\u6216\u5426\u4e24\u4e2a\u7ed3\u679c\uff09\u3002\u7136\u800c\uff0c\u50cf ID3 \u8fd9\u6837\u7684\u7b97\u6cd5\u53ef\u4ee5\u4ea7\u751f\u8d85\u8fc7\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u51b3\u7b56\u6811\u6a21\u578b\u3002 \u56fe 6-2 \u663e\u793a\u4e86\u51b3\u7b56\u6811\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u7c97\u7684\u5782\u76f4\u7ebf\u4ee3\u8868\u6839\u8282\u70b9\uff08\u6df1\u5ea6\u4e3a 0\uff09\u7684\u51b3\u5b9a\u8fb9\u754c\uff1a\u82b1\u74e3\u957f\u5ea6\u4e3a 2.45 \u5398\u7c73\u3002\u7531\u4e8e\u5de6\u4fa7\u533a\u57df\u662f\u7eaf\u7684\uff08\u53ea\u6709 Iris-Setosa\uff09\uff0c\u6240\u4ee5\u4e0d\u80fd\u518d\u8fdb\u4e00\u6b65\u5206\u88c2\u3002\u7136\u800c\uff0c\u53f3\u8fb9\u7684\u533a\u57df\u662f\u4e0d\u7eaf\u7684\uff0c\u6240\u4ee5\u6df1\u5ea6\u4e3a 1 \u7684\u53f3\u8fb9\u8282\u70b9\u5728\u82b1\u74e3\u5bbd\u5ea6\u4e3a 1.75 \u5398\u7c73\u5904\u5206\u88c2\uff08\u7528\u865a\u7ebf\u8868\u793a\uff09\u3002\u53c8\u7531\u4e8e max_depth \u8bbe\u7f6e\u4e3a 2\uff0c\u51b3\u7b56\u6811\u5728\u90a3\u91cc\u505c\u4e86\u4e0b\u6765\u3002\u4f46\u662f\uff0c\u5982\u679c\u5c06 max_depth \u8bbe\u7f6e\u4e3a 3\uff0c\u4e24\u4e2a\u6df1\u5ea6\u4e3a 2 \u7684\u8282\u70b9\uff0c\u6bcf\u4e2a\u90fd\u5c06\u4f1a\u6dfb\u52a0\u53e6\u4e00\u4e2a\u51b3\u7b56\u8fb9\u754c\uff08\u7528\u865a\u7ebf\u8868\u793a\uff09\u3002 \u6a21\u578b\u5c0f\u77e5\u8bc6\uff1a\u767d\u76d2\u4e0e\u9ed1\u76d2 \u6b63\u5982\u6211\u4eec\u770b\u5230\u7684\u4e00\u6837\uff0c\u51b3\u7b56\u6811\u975e\u5e38\u76f4\u89c2\uff0c\u4ed6\u4eec\u7684\u51b3\u5b9a\u5f88\u5bb9\u6613\u88ab\u89e3\u91ca\u3002\u8fd9\u79cd\u6a21\u578b\u901a\u5e38\u88ab\u79f0\u4e3a\u767d\u76d2\u6a21\u578b\u3002\u76f8\u53cd\uff0c\u968f\u673a\u68ee\u6797\u6216\u795e\u7ecf\u7f51\u7edc\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u9ed1\u76d2\u6a21\u578b\u3002\u4ed6\u4eec\u80fd\u505a\u51fa\u5f88\u597d\u7684\u9884\u6d4b\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u8f7b\u677e\u68c0\u67e5\u5b83\u4eec\u505a\u51fa\u8fd9\u4e9b\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u7684\u6267\u884c\u8fc7\u7a0b\u3002\u7136\u800c\uff0c\u4eba\u4eec\u901a\u5e38\u5f88\u96be\u7528\u7b80\u5355\u7684\u672f\u8bed\u6765\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6a21\u578b\u4f1a\u505a\u51fa\u8fd9\u6837\u7684\u9884\u6d4b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u8bf4\u4e00\u4e2a\u7279\u5b9a\u7684\u4eba\u51fa\u73b0\u5728\u56fe\u7247\u4e0a\uff0c\u6211\u4eec\u5f88\u96be\u77e5\u9053\u7a76\u7adf\u662f\u4ec0\u4e48\u5bfc\u81f4\u4e86\u8fd9\u4e00\u4e2a\u9884\u6d4b\u7684\u51fa\u73b0\uff1a \u6a21\u578b\u662f\u5426\u8ba4\u51fa\u4e86\u90a3\u4e2a\u4eba\u7684\u773c\u775b\uff1f \u5979\u7684\u5634\uff1f \u5979\u7684\u9f3b\u5b50\uff1f\u5979\u7684\u978b\uff1f\u6216\u8005\u662f\u5426\u5750\u5728\u6c99\u53d1\u4e0a\uff1f \u76f8\u53cd\uff0c\u51b3\u7b56\u6811\u63d0\u4f9b\u826f\u597d\u7684\u3001\u7b80\u5355\u7684\u5206\u7c7b\u89c4\u5219\uff0c\u751a\u81f3\u53ef\u4ee5\u6839\u636e\u9700\u8981\u624b\u52a8\u64cd\u4f5c\uff08\u4f8b\u5982\u9e22\u5c3e\u82b1\u5206\u7c7b\uff09\u3002","title":"\u5f00\u59cb\u9884\u6d4b"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_4","text":"\u51b3\u7b56\u6811\u8fd8\u53ef\u4ee5\u4f30\u8ba1\u67d0\u4e2a\u5b9e\u4f8b\u5c5e\u4e8e\u7279\u5b9a\u7c7b k \u7684\u6982\u7387\uff1a\u9996\u5148\u904d\u5386\u6811\u6765\u67e5\u627e\u6b64\u5b9e\u4f8b\u7684\u53f6\u8282\u70b9\uff0c\u7136\u540e\u5b83\u8fd4\u56de\u6b64\u8282\u70b9\u4e2d\u7c7b k \u7684\u8bad\u7ec3\u5b9e\u4f8b\u7684\u6bd4\u4f8b\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u53d1\u73b0\u4e86\u4e00\u4e2a\u82b1\u74e3\u957f 5 \u5398\u7c73\uff0c\u5bbd 1.5 \u5398\u7c73\u7684\u82b1\u6735\u3002\u76f8\u5e94\u7684\u53f6\u8282\u70b9\u662f\u6df1\u5ea6\u4e3a 2 \u7684\u5de6\u8282\u70b9\uff0c\u56e0\u6b64\u51b3\u7b56\u6811\u5e94\u8be5\u8f93\u51fa\u4ee5\u4e0b\u6982\u7387\uff1aIris-Setosa \u4e3a 0%\uff080/54\uff09\uff0cIris-Versicolor \u4e3a 90.7%\uff0849/54\uff09\uff0cIris-Virginica \u4e3a 9.3%\uff085/54\uff09\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u8981\u6c42\u5b83\u9884\u6d4b\u5177\u4f53\u7684\u7c7b\uff0c\u5b83\u5e94\u8be5\u8f93\u51fa Iris-Versicolor\uff08\u7c7b\u522b 1\uff09\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u6700\u9ad8\u7684\u6982\u7387\u3002\u6211\u4eec\u4e86\u6d4b\u8bd5\u4e00\u4e0b\uff1a >>> tree_clf.predict_proba([[5, 1.5]]) array([[ 0. , 0.90740741, 0.09259259]]) >>> tree_clf.predict([[5, 1.5]]) array([1]) \u5b8c\u7f8e\uff01\u8bf7\u6ce8\u610f\uff0c\u4f30\u8ba1\u6982\u7387\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u662f\u76f8\u540c\u7684\uff0c \u9664\u4e86\u56fe 6-2 \u4e2d\u53f3\u4e0b\u89d2\u7684\u77e9\u5f62\u90e8\u5206\uff0c\u4f8b\u5982\u82b1\u74e3\u957f 6 \u5398\u7c73\u548c\u5bbd 1.5 \u5398\u7c73\uff08\u5c3d\u7ba1\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b83\u770b\u8d77\u6765\u5f88\u53ef\u80fd\u662f Iris-Virginica\uff09\u3002","title":"\u4f30\u8ba1\u5206\u7c7b\u6982\u7387"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#cart","text":"Scikit-Learn \u7528\u5206\u88c2\u56de\u5f52\u6811\uff08Classification And Regression Tree\uff0c\u7b80\u79f0 CART\uff09\u7b97\u6cd5\u8bad\u7ec3\u51b3\u7b56\u6811\uff08\u4e5f\u53eb\u201c\u589e\u957f\u6811\u201d\uff09\u3002\u8fd9\u79cd\u7b97\u6cd5\u601d\u60f3\u771f\u7684\u975e\u5e38\u7b80\u5355\uff1a \u9996\u5148\u4f7f\u7528\u5355\u4e2a\u7279\u5f81 k \u548c\u9608\u503c \uff08\u4f8b\u5982\uff0c\u201c\u82b1\u74e3\u957f\u5ea6 \u22642.45cm \u201d\uff09\u5c06\u8bad\u7ec3\u96c6\u5206\u6210\u4e24\u4e2a\u5b50\u96c6\u3002\u5b83\u5982\u4f55\u9009\u62e9 k \u548c \u5462\uff1f\u5b83\u5bfb\u627e\u5230\u80fd\u591f\u4ea7\u751f\u6700\u7eaf\u7cb9\u7684\u5b50\u96c6\u4e00\u5bf9 \uff0c\u7136\u540e\u901a\u8fc7\u5b50\u96c6\u5927\u5c0f\u52a0\u6743\u8ba1\u7b97\u3002 \u7b97\u6cd5\u4f1a\u5c1d\u8bd5\u6700\u5c0f\u5316\u6210\u672c\u51fd\u6570\u3002\u65b9\u6cd5\u5982\u516c\u5f0f 6-2 \u5f53\u5b83\u6210\u529f\u7684\u5c06\u8bad\u7ec3\u96c6\u5206\u6210\u4e24\u90e8\u5206\u4e4b\u540e\uff0c \u5b83\u5c06\u4f1a\u7ee7\u7eed\u4f7f\u7528\u76f8\u540c\u7684\u9012\u5f52\u5f0f\u903b\u8f91\u7ee7\u7eed\u7684\u5206\u5272\u5b50\u96c6\uff0c\u7136\u540e\u662f\u5b50\u96c6\u7684\u5b50\u96c6\u3002\u5f53\u8fbe\u5230\u9884\u5b9a\u7684\u6700\u5927\u6df1\u5ea6\u4e4b\u540e\u5c06\u4f1a\u505c\u6b62\u5206\u88c2\uff08\u7531 max_depth \u8d85\u53c2\u6570\u51b3\u5b9a\uff09\uff0c\u6216\u8005\u662f\u5b83\u627e\u4e0d\u5230\u53ef\u4ee5\u7ee7\u7eed\u964d\u4f4e\u4e0d\u7eaf\u5ea6\u7684\u5206\u88c2\u65b9\u6cd5\u7684\u65f6\u5019\u3002\u51e0\u4e2a\u5176\u4ed6\u8d85\u53c2\u6570\uff08\u4e4b\u540e\u4ecb\u7ecd\uff09\u63a7\u5236\u4e86\u5176\u4ed6\u7684\u505c\u6b62\u751f\u957f\u6761\u4ef6\uff08 min_samples_split \uff0c min_samples_leaf \uff0c min_weight_fraction_leaf \uff0c max_leaf_nodes \uff09\u3002 \u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0cCART \u7b97\u6cd5\u662f\u4e00\u79cd\u8d2a\u5a6a\u7b97\u6cd5\uff1a\u5b83\u8d2a\u5a6a\u5730\u641c\u7d22\u6700\u9ad8\u7ea7\u522b\u7684\u6700\u4f73\u5206\u5272\u65b9\u5f0f\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u6df1\u5ea6\u91cd\u590d\u8be5\u8fc7\u7a0b\u3002 \u5b83\u4e0d\u68c0\u67e5\u5206\u5272\u662f\u5426\u80fd\u591f\u5728\u51e0\u4e2a\u7ea7\u522b\u4e2d\u7684\u5168\u90e8\u5206\u5272\u53ef\u80fd\u4e2d\u627e\u5230\u6700\u4f73\u65b9\u6cd5\u3002\u8d2a\u5a6a\u7b97\u6cd5\u901a\u5e38\u4f1a\u4ea7\u751f\u4e00\u4e2a\u76f8\u5f53\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f46\u5b83\u4e0d\u4fdd\u8bc1\u8fd9\u662f\u5168\u5c40\u4e2d\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u627e\u5230\u6700\u4f18\u6811\u662f\u4e00\u4e2a NP \u5b8c\u5168\u95ee\u9898\uff08\u81ea\u884c\u767e\u5ea6\uff09\uff1a\u5b83\u9700\u8981 \u65f6\u95f4\uff0c\u5373\u4f7f\u5bf9\u4e8e\u76f8\u5f53\u5c0f\u7684\u8bad\u7ec3\u96c6\u4e5f\u4f1a\u4f7f\u95ee\u9898\u53d8\u5f97\u68d8\u624b\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2a\u201c\u5408\u7406\u7684\u201d\uff08\u800c\u4e0d\u662f\u6700\u4f73\u7684\uff09\u89e3\u51b3\u65b9\u6848\u3002","title":"CART \u8bad\u7ec3\u7b97\u6cd5"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_5","text":"\u5728\u5efa\u7acb\u597d\u51b3\u7b56\u6811\u6a21\u578b\u540e\uff0c \u505a\u51fa\u9884\u6d4b\u9700\u8981\u904d\u5386\u51b3\u7b56\u6811\uff0c \u4ece\u6839\u8282\u70b9\u4e00\u76f4\u5230\u53f6\u8282\u70b9\u3002\u51b3\u7b56\u6811\u901a\u5e38\u8fd1\u4f3c\u5de6\u53f3\u5e73\u8861\uff0c\u56e0\u6b64\u904d\u5386\u51b3\u7b56\u6811\u9700\u8981\u7ecf\u5386\u5927\u81f4 [2] \u4e2a\u8282\u70b9\u3002\u7531\u4e8e\u6bcf\u4e2a\u8282\u70b9\u53ea\u9700\u8981\u68c0\u67e5\u4e00\u4e2a\u7279\u5f81\u7684\u503c\uff0c\u56e0\u6b64\u603b\u4f53\u9884\u6d4b\u590d\u6742\u5ea6\u4ec5\u4e3a \uff0c\u4e0e\u7279\u5f81\u7684\u6570\u91cf\u65e0\u5173\u3002 \u6240\u4ee5\u5373\u4f7f\u5728\u5904\u7406\u5927\u578b\u8bad\u7ec3\u96c6\u65f6\uff0c\u9884\u6d4b\u901f\u5ea6\u4e5f\u975e\u5e38\u5feb\u3002 [2] \u662f\u4e8c\u8fdb\u5236\u5bf9\u6570\uff0c\u5b83\u7b49\u4e8e \u3002 \u7136\u800c\uff0c\u8bad\u7ec3\u7b97\u6cd5\u7684\u65f6\u5019\uff08\u8bad\u7ec3\u548c\u9884\u6d4b\u4e0d\u540c\uff09\u9700\u8981\u6bd4\u8f83\u6240\u6709\u7279\u5f81\uff08\u5982\u679c\u8bbe\u7f6e\u4e86 max_features \u4f1a\u66f4\u5c11\u4e00\u4e9b\uff09 \u5728\u6bcf\u4e2a\u8282\u70b9\u7684\u6240\u6709\u6837\u672c\u4e0a\u3002\u5c31\u6709\u4e86 \u7684\u8bad\u7ec3\u590d\u6742\u5ea6\u3002\u5bf9\u4e8e\u5c0f\u578b\u8bad\u7ec3\u96c6\uff08\u5c11\u4e8e\u51e0\u5343\u4f8b\uff09\uff0cScikit-Learn \u53ef\u4ee5\u901a\u8fc7\u9884\u5148\u8bbe\u7f6e\u6570\u636e\uff08 presort = True \uff09\u6765\u52a0\u901f\u8bad\u7ec3\uff0c\u4f46\u662f\u8fd9\u5bf9\u4e8e\u8f83\u5927\u8bad\u7ec3\u96c6\u6765\u8bf4\u4f1a\u663e\u7740\u51cf\u6162\u8bad\u7ec3\u901f\u5ea6\u3002","title":"\u8ba1\u7b97\u590d\u6742\u5ea6"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_6","text":"\u901a\u5e38\uff0c\u7b97\u6cd5\u4f7f\u7528 Gini \u4e0d\u7eaf\u5ea6\u6765\u8fdb\u884c\u68c0\u6d4b\uff0c \u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5c06\u6807\u51c6\u8d85\u53c2\u6570\u8bbe\u7f6e\u4e3a \"entropy\" \u6765\u4f7f\u7528\u71b5\u4e0d\u7eaf\u5ea6\u8fdb\u884c\u68c0\u6d4b\u3002\u8fd9\u91cc\u71b5\u7684\u6982\u5ff5\u662f\u6e90\u4e8e\u70ed\u529b\u5b66\u4e2d\u5206\u5b50\u6df7\u4e71\u7a0b\u5ea6\u7684\u6982\u5ff5\uff0c\u5f53\u5206\u5b50\u4e95\u7136\u6709\u5e8f\u7684\u65f6\u5019\uff0c\u71b5\u503c\u63a5\u8fd1\u4e8e 0\u3002 \u71b5\u8fd9\u4e2a\u6982\u5ff5\u540e\u6765\u9010\u6e10\u88ab\u6269\u5c55\u5230\u4e86\u5404\u4e2a\u9886\u57df\uff0c\u5176\u4e2d\u5305\u62ec\u9999\u519c\u7684\u4fe1\u606f\u7406\u8bba\uff0c\u8fd9\u4e2a\u7406\u8bba\u88ab\u7528\u4e8e\u6d4b\u7b97\u4e00\u6bb5\u4fe1\u606f\u4e2d\u7684\u5e73\u5747\u4fe1\u606f\u5bc6\u5ea6 [3]\u3002\u5f53\u6240\u6709\u4fe1\u606f\u76f8\u540c\u7684\u65f6\u5019\u71b5\u88ab\u5b9a\u4e49\u4e3a\u96f6\u3002 \u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u71b5\u7ecf\u5e38\u88ab\u7528\u4f5c\u4e0d\u7eaf\u5ea6\u7684\u8861\u91cf\u65b9\u5f0f\uff0c\u5f53\u4e00\u4e2a\u96c6\u5408\u5185\u53ea\u5305\u542b\u4e00\u7c7b\u5b9e\u4f8b\u65f6\uff0c \u6211\u4eec\u79f0\u4e3a\u6570\u636e\u96c6\u7684\u71b5\u4e3a 0\u3002 [3] \u71b5\u7684\u51cf\u5c11\u901a\u5e38\u79f0\u4e3a\u4fe1\u606f\u589e\u76ca\u3002 \u516c\u5f0f 6-3 \u663e\u793a\u4e86\u7b2c i \u4e2a\u8282\u70b9\u7684\u71b5\u7684\u5b9a\u4e49\uff0c\u4f8b\u5982\uff0c\u5728\u56fe 6-1 \u4e2d\uff0c \u6df1\u5ea6\u4e3a 2 \u5de6\u8282\u70b9\u7684\u71b5\u4e3a \u3002 \u90a3\u4e48\u6211\u4eec\u5230\u5e95\u5e94\u8be5\u4f7f\u7528 Gini \u6307\u6570\u8fd8\u662f\u71b5\u5462\uff1f \u4e8b\u5b9e\u4e0a\u5927\u90e8\u5206\u60c5\u51b5\u90fd\u6ca1\u6709\u591a\u5927\u7684\u5dee\u522b\uff1a\u4ed6\u4eec\u4f1a\u751f\u6210\u7c7b\u4f3c\u7684\u51b3\u7b56\u6811\u3002 \u57fa\u5c3c\u6307\u6570\u8ba1\u7b97\u7a0d\u5fae\u5feb\u4e00\u70b9\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9ed8\u8ba4\u503c\u3002\u4f46\u662f\uff0c\u4e5f\u6709\u7684\u65f6\u5019\u5b83\u4eec\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u6811\uff0c\u57fa\u5c3c\u6307\u6570\u4f1a\u8d8b\u4e8e\u5728\u6811\u7684\u5206\u652f\u4e2d\u5c06\u6700\u591a\u7684\u7c7b\u9694\u79bb\u51fa\u6765\uff0c\u800c\u71b5\u6307\u6570\u8d8b\u5411\u4e8e\u4ea7\u751f\u7565\u5fae\u5e73\u8861\u4e00\u4e9b\u7684\u51b3\u7b56\u6811\u6a21\u578b\u3002","title":"\u57fa\u5c3c\u4e0d\u7eaf\u5ea6\u6216\u662f\u4fe1\u606f\u71b5"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_7","text":"\u51b3\u7b56\u6811\u51e0\u4e4e\u4e0d\u5bf9\u8bad\u7ec3\u6570\u636e\u505a\u4efb\u4f55\u5047\u8bbe\uff08\u4e8e\u6b64\u76f8\u53cd\u7684\u662f\u7ebf\u6027\u56de\u5f52\u7b49\u6a21\u578b\uff0c\u8fd9\u7c7b\u6a21\u578b\u901a\u5e38\u4f1a\u5047\u8bbe\u6570\u636e\u662f\u7b26\u5408\u7ebf\u6027\u5173\u7cfb\u7684\uff09\u3002 \u5982\u679c\u4e0d\u6dfb\u52a0\u7ea6\u675f\uff0c\u6811\u7ed3\u6784\u6a21\u578b\u901a\u5e38\u5c06\u6839\u636e\u8bad\u7ec3\u6570\u636e\u8c03\u6574\u81ea\u5df1\uff0c\u4f7f\u81ea\u8eab\u80fd\u591f\u5f88\u597d\u7684\u62df\u5408\u6570\u636e\uff0c\u800c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5927\u591a\u6570\u4f1a\u5bfc\u81f4\u6a21\u578b\u8fc7\u62df\u5408\u3002 \u8fd9\u4e00\u7c7b\u7684\u6a21\u578b\u901a\u5e38\u4f1a\u88ab\u79f0\u4e3a\u975e\u53c2\u6570\u6a21\u578b\uff0c\u8fd9\u4e0d\u662f\u56e0\u4e3a\u5b83\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\uff08\u901a\u5e38\u4e5f\u6709\u5f88\u591a\uff09\uff0c\u800c\u662f\u56e0\u4e3a\u5728\u8bad\u7ec3\u4e4b\u524d\u6ca1\u6709\u786e\u5b9a\u53c2\u6570\u7684\u5177\u4f53\u6570\u91cf\uff0c\u6240\u4ee5\u6a21\u578b\u7ed3\u6784\u53ef\u4ee5\u6839\u636e\u6570\u636e\u7684\u7279\u6027\u81ea\u7531\u751f\u957f\u3002 \u4e8e\u6b64\u76f8\u53cd\u7684\u662f\uff0c\u50cf\u7ebf\u6027\u56de\u5f52\u8fd9\u6837\u7684\u53c2\u6570\u6a21\u578b\u6709\u4e8b\u5148\u8bbe\u5b9a\u597d\u7684\u53c2\u6570\u6570\u91cf\uff0c\u6240\u4ee5\u81ea\u7531\u5ea6\u662f\u53d7\u9650\u7684\uff0c\u8fd9\u5c31\u51cf\u5c11\u4e86\u8fc7\u62df\u5408\u7684\u98ce\u9669\uff08\u4f46\u662f\u589e\u52a0\u4e86\u6b20\u62df\u5408\u7684\u98ce\u9669\uff09\u3002 DecisionTreeClassifier \u7c7b\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u53c2\u6570\u7528\u4e8e\u9650\u5236\u6811\u6a21\u578b\u7684\u5f62\u72b6: min_samples_split \uff08\u8282\u70b9\u5728\u88ab\u5206\u88c2\u4e4b\u524d\u5fc5\u987b\u5177\u6709\u7684\u6700\u5c0f\u6837\u672c\u6570\uff09\uff0c min_samples_leaf \uff08\u53f6\u8282\u70b9\u5fc5\u987b\u5177\u6709\u7684\u6700\u5c0f\u6837\u672c\u6570\uff09\uff0c min_weight_fraction_leaf \uff08\u548c min_samples_leaf \u76f8\u540c\uff0c\u4f46\u8868\u793a\u4e3a\u52a0\u6743\u603b\u6570\u7684\u4e00\u5c0f\u90e8\u5206\u5b9e\u4f8b\uff09\uff0c max_leaf_nodes \uff08\u53f6\u8282\u70b9\u7684\u6700\u5927\u6570\u91cf\uff09 \u548cmax_features \uff08\u5728\u6bcf\u4e2a\u8282\u70b9\u88ab\u8bc4\u4f30\u662f\u5426\u5206\u88c2\u7684\u65f6\u5019\uff0c\u5177\u6709\u7684\u6700\u5927\u7279\u5f81\u6570\u91cf\uff09\u3002\u589e\u52a0 min_* hyperparameters \u6216\u8005\u51cf\u5c11 max_* hyperparameters \u4f1a\u4f7f\u6a21\u578b\u6b63\u5219\u5316\u3002 \u4e00\u4e9b\u5176\u4ed6\u7b97\u6cd5\u7684\u5de5\u4f5c\u539f\u7406\u662f\u5728\u6ca1\u6709\u4efb\u4f55\u7ea6\u675f\u6761\u4ef6\u4e0b\u8bad\u7ec3\u51b3\u7b56\u6811\u6a21\u578b\uff0c\u8ba9\u6a21\u578b\u81ea\u7531\u751f\u957f\uff0c\u7136\u540e\u518d\u5bf9\u4e0d\u9700\u8981\u7684\u8282\u70b9\u8fdb\u884c\u526a\u679d\u3002 \u5f53\u4e00\u4e2a\u8282\u70b9\u7684\u5168\u90e8\u5b50\u8282\u70b9\u90fd\u662f\u53f6\u8282\u70b9\u65f6\uff0c\u5982\u679c\u5b83\u5bf9\u7eaf\u5ea6\u7684\u63d0\u5347\u4e0d\u5177\u6709\u7edf\u8ba1\u5b66\u610f\u4e49\uff0c\u6211\u4eec\u5c31\u8ba4\u4e3a\u8fd9\u4e2a\u5206\u652f\u662f\u4e0d\u5fc5\u8981\u7684\u3002 \u6807\u51c6\u7684\u5047\u8bbe\u68c0\u9a8c\uff0c\u4f8b\u5982\u5361\u65b9\u68c0\u6d4b\uff0c\u901a\u5e38\u4f1a\u88ab\u7528\u4e8e\u8bc4\u4f30\u4e00\u4e2a\u6982\u7387\u503c -- \u5373\u6539\u8fdb\u662f\u5426\u7eaf\u7cb9\u662f\u5076\u7136\u6027\u7684\u7ed3\u679c\uff08\u4e5f\u53eb\u539f\u5047\u8bbe\uff09 \u5982\u679c p \u503c\u6bd4\u7ed9\u5b9a\u7684\u9608\u503c\u66f4\u9ad8\uff08\u901a\u5e38\u8bbe\u5b9a\u4e3a 5%\uff0c\u4e5f\u5c31\u662f 95% \u7f6e\u4fe1\u5ea6\uff0c\u901a\u8fc7\u8d85\u53c2\u6570\u8bbe\u7f6e\uff09\uff0c\u90a3\u4e48\u8282\u70b9\u5c31\u88ab\u8ba4\u4e3a\u662f\u975e\u5fc5\u8981\u7684\uff0c\u5b83\u7684\u5b50\u8282\u70b9\u4f1a\u88ab\u5220\u9664\u3002 \u8fd9\u79cd\u526a\u679d\u65b9\u5f0f\u5c06\u4f1a\u4e00\u76f4\u8fdb\u884c\uff0c\u76f4\u5230\u6240\u6709\u7684\u975e\u5fc5\u8981\u8282\u70b9\u90fd\u88ab\u5220\u5149\u3002 \u56fe 6-3 \u663e\u793a\u4e86\u5bf9 moons \u6570\u636e\u96c6\uff08\u5728\u7b2c 5 \u7ae0\u4ecb\u7ecd\u8fc7\uff09\u8fdb\u884c\u8bad\u7ec3\u751f\u6210\u7684\u4e24\u4e2a\u51b3\u7b56\u6811\u6a21\u578b\uff0c\u5de6\u4fa7\u7684\u56fe\u5f62\u5bf9\u5e94\u7684\u51b3\u7b56\u6811\u4f7f\u7528\u9ed8\u8ba4\u8d85\u53c2\u6570\u751f\u6210\uff08\u6ca1\u6709\u9650\u5236\u751f\u957f\u6761\u4ef6\uff09\uff0c\u53f3\u8fb9\u7684\u51b3\u7b56\u6811\u6a21\u578b\u8bbe\u7f6e\u4e3a min_samples_leaf=4 \u3002\u5f88\u660e\u663e\uff0c\u5de6\u8fb9\u7684\u6a21\u578b\u8fc7\u62df\u5408\u4e86\uff0c\u800c\u53f3\u8fb9\u7684\u6a21\u578b\u6cdb\u7528\u6027\u66f4\u597d\u3002","title":"\u6b63\u5219\u5316\u8d85\u53c2\u6570"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_8","text":"\u51b3\u7b56\u6811\u4e5f\u80fd\u591f\u6267\u884c\u56de\u5f52\u4efb\u52a1\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528 Scikit-Learn \u7684 DecisionTreeRegressor \u7c7b\u6784\u5efa\u4e00\u4e2a\u56de\u5f52\u6811\uff0c\u8ba9\u6211\u4eec\u7528 max_depth = 2 \u5728\u5177\u6709\u566a\u58f0\u7684\u4e8c\u6b21\u9879\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\u3002 from sklearn.tree import DecisionTreeRegressor tree_reg = DecisionTreeRegressor(max_depth=2) tree_reg.fit(X, y) \u7ed3\u679c\u5982\u56fe 6-4 \u6240\u793a \u8fd9\u68f5\u6811\u770b\u8d77\u6765\u975e\u5e38\u7c7b\u4f3c\u4e8e\u4f60\u4e4b\u524d\u5efa\u7acb\u7684\u5206\u7c7b\u6811\uff0c\u5b83\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u5b83\u4e0d\u662f\u9884\u6d4b\u6bcf\u4e2a\u8282\u70b9\u4e2d\u7684\u6837\u672c\u6240\u5c5e\u7684\u5206\u7c7b\uff0c\u800c\u662f\u9884\u6d4b\u4e00\u4e2a\u5177\u4f53\u7684\u6570\u503c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u60f3\u5bf9 \u7684\u65b0\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\u3002\u4ece\u6839\u5f00\u59cb\u904d\u5386\u6811\uff0c\u6700\u7ec8\u5230\u8fbe\u9884\u6d4b\u503c\u7b49\u4e8e 0.1106 \u7684\u53f6\u8282\u70b9\u3002\u8be5\u9884\u6d4b\u4ec5\u4ec5\u662f\u4e0e\u8be5\u53f6\u8282\u70b9\u76f8\u5173\u7684 110 \u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7684\u5e73\u5747\u76ee\u6807\u503c\u3002\u800c\u8fd9\u4e2a\u9884\u6d4b\u7ed3\u679c\u5728\u5bf9\u5e94\u7684 110 \u4e2a\u5b9e\u4f8b\u4e0a\u7684\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\u7b49\u4e8e 0.0151\u3002 \u5728\u56fe 6-5 \u7684\u5de6\u4fa7\u663e\u793a\u7684\u662f\u6a21\u578b\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u5982\u679c\u4f60\u5c06 max_depth=3 \u8bbe\u7f6e\u4e3a 3\uff0c\u6a21\u578b\u5c31\u4f1a\u5982 6-5 \u56fe\u53f3\u4fa7\u663e\u793a\u7684\u90a3\u6837.\u6ce8\u610f\u6bcf\u4e2a\u533a\u57df\u7684\u9884\u6d4b\u503c\u603b\u662f\u8be5\u533a\u57df\u4e2d\u5b9e\u4f8b\u7684\u5e73\u5747\u76ee\u6807\u503c\u3002\u7b97\u6cd5\u4ee5\u4e00\u79cd\u4f7f\u5927\u591a\u6570\u8bad\u7ec3\u5b9e\u4f8b\u5c3d\u53ef\u80fd\u63a5\u8fd1\u8be5\u9884\u6d4b\u503c\u7684\u65b9\u5f0f\u5206\u5272\u6bcf\u4e2a\u533a\u57df\u3002 \u8bd1\u8005\u6ce8\uff1a\u56fe\u91cc\u9762\u7684\u7ea2\u7ebf\u5c31\u662f\u8bad\u7ec3\u5b9e\u4f8b\u7684\u5e73\u5747\u76ee\u6807\u503c\uff0c\u5bf9\u5e94\u4e0a\u56fe\u4e2d\u7684 value CART \u7b97\u6cd5\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u4e4b\u524d\u5904\u7406\u5206\u7c7b\u6a21\u578b\u57fa\u672c\u4e00\u6837\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u73b0\u5728\u4e0d\u518d\u4ee5\u6700\u5c0f\u5316\u4e0d\u7eaf\u5ea6\u7684\u65b9\u5f0f\u5206\u5272\u8bad\u7ec3\u96c6\uff0c\u800c\u662f\u8bd5\u56fe\u4ee5\u6700\u5c0f\u5316 MSE \u7684\u65b9\u5f0f\u5206\u5272\u8bad\u7ec3\u96c6\u3002 \u516c\u5f0f 6-4 \u663e\u793a\u4e86\u6210\u672c\u51fd\u6570\uff0c\u8be5\u7b97\u6cd5\u8bd5\u56fe\u6700\u5c0f\u5316\u8fd9\u4e2a\u6210\u672c\u51fd\u6570\u3002 \u548c\u5904\u7406\u5206\u7c7b\u4efb\u52a1\u65f6\u4e00\u6837\uff0c\u51b3\u7b56\u6811\u5728\u5904\u7406\u56de\u5f52\u95ee\u9898\u7684\u65f6\u5019\u4e5f\u5bb9\u6613\u8fc7\u62df\u5408\u3002\u5982\u679c\u4e0d\u6dfb\u52a0\u4efb\u4f55\u6b63\u5219\u5316\uff08\u9ed8\u8ba4\u7684\u8d85\u53c2\u6570\uff09\uff0c\u4f60\u5c31\u4f1a\u5f97\u5230\u56fe 6-6 \u5de6\u4fa7\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u663e\u7136\uff0c\u8fc7\u5ea6\u62df\u5408\u7684\u7a0b\u5ea6\u975e\u5e38\u4e25\u91cd\u3002\u800c\u5f53\u6211\u4eec\u8bbe\u7f6e\u4e86 min_samples_leaf = 10 \uff0c\u76f8\u5bf9\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u66f4\u52a0\u5408\u9002\u7684\u6a21\u578b\u4e86\uff0c\u5c31\u5982\u56fe 6-6 \u6240\u793a\u7684\u90a3\u6837\u3002","title":"\u56de\u5f52"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_9","text":"\u6211\u5e0c\u671b\u4f60\u73b0\u5728\u4e86\u89e3\u4e86\u51b3\u7b56\u6811\u5230\u5e95\u6709\u54ea\u4e9b\u7279\u70b9\uff1a \u5b83\u5f88\u5bb9\u6613\u7406\u89e3\u548c\u89e3\u91ca\uff0c\u6613\u4e8e\u4f7f\u7528\u4e14\u529f\u80fd\u4e30\u5bcc\u800c\u5f3a\u5927\u3002\u7136\u800c\uff0c\u5b83\u4e5f\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u9996\u5148\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u51b3\u7b56\u6811\u5f88\u559c\u6b22\u8bbe\u5b9a\u6b63\u4ea4\u5316\u7684\u51b3\u7b56\u8fb9\u754c\uff0c\uff08\u6240\u6709\u8fb9\u754c\u90fd\u662f\u548c\u67d0\u4e00\u4e2a\u8f74\u76f8\u5782\u76f4\u7684\uff09\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5bf9\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u65cb\u8f6c\u5f88\u654f\u611f\uff0c\u4f8b\u5982\u56fe 6-7 \u663e\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u53ef\u5206\u6570\u636e\u96c6\u3002\u5728\u5de6\u56fe\u4e2d\uff0c\u51b3\u7b56\u6811\u53ef\u4ee5\u8f7b\u6613\u7684\u5c06\u6570\u636e\u5206\u9694\u5f00\uff0c\u4f46\u662f\u5728\u53f3\u56fe\u4e2d\uff0c\u5f53\u6211\u4eec\u628a\u6570\u636e\u65cb\u8f6c\u4e86 45\u00b0 \u4e4b\u540e\uff0c\u51b3\u7b56\u6811\u7684\u8fb9\u754c\u770b\u8d77\u6765\u53d8\u7684\u683c\u5916\u590d\u6742\u3002\u5c3d\u7ba1\u4e24\u4e2a\u51b3\u7b56\u6811\u90fd\u5b8c\u7f8e\u7684\u62df\u5408\u4e86\u8bad\u7ec3\u6570\u636e\uff0c\u53f3\u8fb9\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u5f88\u53ef\u80fd\u975e\u5e38\u5dee\u3002 \u89e3\u51b3\u8fd9\u4e2a\u96be\u9898\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528 PCA \u4e3b\u6210\u5206\u5206\u6790\uff08\u7b2c\u516b\u7ae0\uff09\uff0c\u8fd9\u6837\u901a\u5e38\u80fd\u4f7f\u8bad\u7ec3\u7ed3\u679c\u53d8\u5f97\u66f4\u597d\u4e00\u4e9b\u3002 \u66f4\u52a0\u901a\u4fd7\u7684\u8bb2\uff0c\u51b3\u7b56\u65f6\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5b83\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u5fae\u5c0f\u53d8\u5316\u975e\u5e38\u654f\u611f\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff0c\u6211\u4eec\u4ec5\u4ec5\u4ece\u9e22\u5c3e\u82b1\u8bad\u7ec3\u6570\u636e\u4e2d\u5c06\u6700\u5bbd\u7684 Iris-Versicolor \u62ff\u6389\uff08\u82b1\u74e3\u957f 4.8 \u5398\u7c73\uff0c\u5bbd 1.8 \u5398\u7c73\uff09\uff0c\u7136\u540e\u91cd\u65b0\u8bad\u7ec3\u51b3\u7b56\u6811\u6a21\u578b\uff0c\u4f60\u53ef\u80fd\u5c31\u4f1a\u5f97\u5230\u56fe 6-8 \u4e2d\u7684\u6a21\u578b\u3002\u6b63\u5982\u6211\u4eec\u770b\u5230\u7684\u90a3\u6837\uff0c\u51b3\u7b56\u6811\u6709\u4e86\u975e\u5e38\u5927\u7684\u53d8\u5316\uff08\u539f\u6765\u7684\u5982\u56fe 6-2\uff09\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u7531\u4e8e Scikit-Learn \u7684\u8bad\u7ec3\u7b97\u6cd5\u662f\u975e\u5e38\u968f\u673a\u7684\uff0c\u5373\u4f7f\u662f\u76f8\u540c\u7684\u8bad\u7ec3\u6570\u636e\u4f60\u4e5f\u53ef\u80fd\u5f97\u5230\u5dee\u522b\u5f88\u5927\u7684\u6a21\u578b\uff08\u9664\u975e\u4f60\u8bbe\u7f6e\u4e86\u968f\u673a\u6570\u79cd\u5b50\uff09\u3002 \u6211\u4eec\u4e0b\u4e00\u7ae0\u4e2d\u5c06\u4f1a\u770b\u5230\uff0c\u968f\u673a\u68ee\u6797\u53ef\u4ee5\u901a\u8fc7\u591a\u68f5\u6811\u7684\u5e73\u5747\u9884\u6d4b\u503c\u9650\u5236\u8fd9\u79cd\u4e0d\u7a33\u5b9a\u6027\u3002","title":"\u4e0d\u7a33\u5b9a\u6027"},{"location":"6.%E5%86%B3%E7%AD%96%E6%A0%91/#_10","text":"\u5728 100 \u4e07\u4f8b\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\uff08\u6ca1\u6709\u9650\u5236\uff09\u7684\u51b3\u7b56\u6811\u7684\u8fd1\u4f3c\u6df1\u5ea6\u662f\u591a\u5c11\uff1f \u8282\u70b9\u7684\u57fa\u5c3c\u6307\u6570\u6bd4\u8d77\u5b83\u7684\u7236\u8282\u70b9\u662f\u66f4\u9ad8\u8fd8\u662f\u66f4\u4f4e\uff1f\u5b83\u662f\u901a\u5e38\u60c5\u51b5\u4e0b\u66f4\u9ad8/\u66f4\u4f4e\uff0c\u8fd8\u662f\u6c38\u8fdc\u66f4\u9ad8/\u66f4\u4f4e\uff1f \u5982\u679c\u51b3\u7b56\u6811\u8fc7\u62df\u5408\u4e86\uff0c\u51cf\u5c11\u6700\u5927\u6df1\u5ea6\u662f\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5\u5417\uff1f \u5982\u679c\u51b3\u7b56\u6811\u5bf9\u8bad\u7ec3\u96c6\u6b20\u62df\u5408\u4e86\uff0c\u5c1d\u8bd5\u7f29\u653e\u8f93\u5165\u7279\u5f81\u662f\u5426\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1f \u5982\u679c\u5bf9\u5305\u542b 100 \u4e07\u4e2a\u5b9e\u4f8b\u7684\u6570\u636e\u96c6\u8bad\u7ec3\u51b3\u7b56\u6811\u6a21\u578b\u9700\u8981\u4e00\u4e2a\u5c0f\u65f6\uff0c\u5728\u5305\u542b 1000 \u4e07\u4e2a\u5b9e\u4f8b\u7684\u57f9\u8bad\u96c6\u4e0a\u8bad\u7ec3\u53e6\u4e00\u4e2a\u51b3\u7b56\u6811\u5927\u6982\u9700\u8981\u591a\u5c11\u65f6\u95f4\u5462\uff1f \u5982\u679c\u4f60\u7684\u8bad\u7ec3\u96c6\u5305\u542b 100,000 \u4e2a\u5b9e\u4f8b\uff0c\u8bbe\u7f6e presort=True \u4f1a\u52a0\u5feb\u8bad\u7ec3\u7684\u901f\u5ea6\u5417\uff1f \u5bf9 moons \u6570\u636e\u96c6\u8fdb\u884c\u51b3\u7b56\u6811\u8bad\u7ec3\u5e76\u4f18\u5316\u6a21\u578b\u3002 \u901a\u8fc7\u8bed\u53e5 make_moons(n_samples=10000, noise=0.4) \u751f\u6210 moons \u6570\u636e\u96c6 \u901a\u8fc7 train_test_split() \u5c06\u6570\u636e\u96c6\u5206\u5272\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002 \u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u5e76\u4f7f\u7528\u7f51\u683c\u641c\u7d22\u6cd5\u5bfb\u627e\u6700\u597d\u7684\u8d85\u53c2\u6570\u503c\uff08\u4f7f\u7528 GridSearchCV \u7c7b\u7684\u5e2e\u52a9\u6587\u6863\uff09 \u63d0\u793a: \u5c1d\u8bd5\u5404\u79cd\u5404\u6837\u7684 max_leaf_nodes \u503c \u4f7f\u7528\u8fd9\u4e9b\u8d85\u53c2\u6570\u8bad\u7ec3\u5168\u90e8\u7684\u8bad\u7ec3\u96c6\u6570\u636e\uff0c\u5e76\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6d4b\u91cf\u6a21\u578b\u7684\u8868\u73b0\u3002\u4f60\u5e94\u8be5\u83b7\u5f97\u5927\u7ea6 85% \u5230 87% \u7684\u51c6\u786e\u5ea6\u3002 \u751f\u6210\u68ee\u6797 \u63a5\u7740\u524d\u8fb9\u7684\u7ec3\u4e60\uff0c\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u751f\u6210 1,000 \u4e2a\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6\uff0c\u6bcf\u4e2a\u5b50\u96c6\u5305\u542b 100 \u4e2a\u968f\u673a\u9009\u62e9\u7684\u5b9e\u4f8b\u3002\u63d0\u793a\uff1a\u4f60\u53ef\u4ee5\u4f7f\u7528 Scikit-Learn \u7684 ShuffleSplit \u7c7b\u3002 \u4f7f\u7528\u4e0a\u9762\u627e\u5230\u7684\u6700\u4f73\u8d85\u53c2\u6570\u503c\uff0c\u5728\u6bcf\u4e2a\u5b50\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u51b3\u7b56\u6811\u3002\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6d4b\u8bd5\u8fd9 1000 \u4e2a\u51b3\u7b56\u6811\u3002\u7531\u4e8e\u5b83\u4eec\u662f\u5728\u8f83\u5c0f\u7684\u96c6\u5408\u4e0a\u8fdb\u884c\u4e86\u8bad\u7ec3\uff0c\u56e0\u6b64\u8fd9\u4e9b\u51b3\u7b56\u6811\u53ef\u80fd\u4f1a\u6bd4\u7b2c\u4e00\u4e2a\u51b3\u7b56\u6811\u6548\u679c\u66f4\u5dee\uff0c\u53ea\u80fd\u8fbe\u5230\u7ea6 80% \u7684\u51c6\u786e\u5ea6\u3002 \u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u523b\u5230\u4e86\uff01\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u96c6\u5b9e\u4f8b\uff0c\u751f\u6210 1,000 \u4e2a\u51b3\u7b56\u6811\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u7136\u540e\u53ea\u4fdd\u7559\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u9884\u6d4b\u7ed3\u679c\uff08\u60a8\u53ef\u4ee5\u4f7f\u7528 SciPy \u7684 mode() \u51fd\u6570\uff09\u3002\u8fd9\u4e2a\u51fd\u6570\u4f7f\u4f60\u53ef\u4ee5\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u591a\u6570\u6295\u7968\u9884\u6d4b\u3002 \u5728\u6d4b\u8bd5\u96c6\u4e0a\u8bc4\u4f30\u8fd9\u4e9b\u9884\u6d4b\u7ed3\u679c\uff0c\u4f60\u5e94\u8be5\u83b7\u5f97\u4e86\u4e00\u4e2a\u6bd4\u7b2c\u4e00\u4e2a\u6a21\u578b\u9ad8\u4e00\u70b9\u7684\u51c6\u786e\u7387\uff0c\uff08\u5927\u7ea6 0.5% \u5230 1.5%\uff09\uff0c\u606d\u559c\uff0c\u4f60\u5df2\u7ecf\u5f04\u51fa\u4e86\u4e00\u4e2a\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u6a21\u578b! {% endraw %}","title":"\u7ec3\u4e60"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/","text":"\u4e03\u3001\u96c6\u6210\u5b66\u4e60\u548c\u968f\u673a\u68ee\u6797 \u5047\u8bbe\u4f60\u53bb\u968f\u673a\u95ee\u5f88\u591a\u4eba\u4e00\u4e2a\u5f88\u590d\u6742\u7684\u95ee\u9898\uff0c\u7136\u540e\u628a\u5b83\u4eec\u7684\u7b54\u6848\u5408\u5e76\u8d77\u6765\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u5408\u5e76\u7684\u7b54\u6848\u6bd4\u4e00\u4e2a\u4e13\u5bb6\u7684\u7b54\u6848\u8981\u597d\u3002\u8fd9\u5c31\u53eb\u505a \u7fa4\u4f53\u667a\u6167 \u3002\u540c\u6837\u7684\uff0c\u5982\u679c\u4f60\u5408\u5e76\u4e86\u4e00\u7ec4\u5206\u7c7b\u5668\u7684\u9884\u6d4b\uff08\u50cf\u5206\u7c7b\u6216\u8005\u56de\u5f52\uff09\uff0c\u4f60\u4e5f\u4f1a\u5f97\u5230\u4e00\u4e2a\u6bd4\u5355\u4e00\u5206\u7c7b\u5668\u66f4\u597d\u7684\u9884\u6d4b\u7ed3\u679c\u3002\u8fd9\u4e00\u7ec4\u5206\u7c7b\u5668\u5c31\u53eb\u505a\u96c6\u6210\uff1b\u56e0\u6b64\uff0c\u8fd9\u4e2a\u6280\u672f\u5c31\u53eb\u505a\u96c6\u6210\u5b66\u4e60\uff0c\u4e00\u4e2a\u96c6\u6210\u5b66\u4e60\u7b97\u6cd5\u5c31\u53eb\u505a\u96c6\u6210\u65b9\u6cd5\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u8bad\u7ec3\u4e00\u7ec4\u51b3\u7b56\u6811\u5206\u7c7b\u5668\uff0c\u6bcf\u4e00\u4e2a\u90fd\u5728\u4e00\u4e2a\u968f\u673a\u7684\u8bad\u7ec3\u96c6\u4e0a\u3002\u4e3a\u4e86\u53bb\u505a\u9884\u6d4b\uff0c\u4f60\u5fc5\u987b\u5f97\u5230\u6240\u6709\u5355\u4e00\u6811\u7684\u9884\u6d4b\u503c\uff0c\u7136\u540e\u901a\u8fc7\u6295\u7968\uff08\u4f8b\u5982\u7b2c\u516d\u7ae0\u7684\u7ec3\u4e60\uff09\u6765\u9884\u6d4b\u7c7b\u522b\u3002\u4f8b\u5982\u4e00\u79cd\u51b3\u7b56\u6811\u7684\u96c6\u6210\u5c31\u53eb\u505a\u968f\u673a\u68ee\u6797\uff0c\u5b83\u9664\u4e86\u7b80\u5355\u4e4b\u5916\u4e5f\u662f\u73b0\u4eca\u5b58\u5728\u7684\u6700\u5f3a\u5927\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e4b\u4e00\u3002 \u5411\u6211\u4eec\u5728\u7b2c\u4e8c\u7ae0\u8ba8\u8bba\u7684\u4e00\u6837\uff0c\u6211\u4eec\u4f1a\u5728\u4e00\u4e2a\u9879\u76ee\u5feb\u7ed3\u675f\u7684\u65f6\u5019\u4f7f\u7528\u96c6\u6210\u7b97\u6cd5\uff0c\u4e00\u65e6\u4f60\u5efa\u7acb\u4e86\u4e00\u4e9b\u597d\u7684\u5206\u7c7b\u5668\uff0c\u5c31\u628a\u4ed6\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u66f4\u597d\u7684\u5206\u7c7b\u5668\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u673a\u5668\u5b66\u4e60\u7ade\u8d5b\u4e2d\u83b7\u5f97\u80dc\u5229\u7684\u7b97\u6cd5\u7ecf\u5e38\u4f1a\u5305\u542b\u4e00\u4e9b\u96c6\u6210\u65b9\u6cd5\u3002 \u5728\u672c\u7ae0\u4e2d\u6211\u4eec\u4f1a\u8ba8\u8bba\u4e00\u4e0b\u7279\u522b\u8457\u540d\u7684\u96c6\u6210\u65b9\u6cd5\uff0c\u5305\u62ec bagging, boosting, stacking \uff0c\u548c\u5176\u4ed6\u4e00\u4e9b\u7b97\u6cd5\u3002\u6211\u4eec\u4e5f\u4f1a\u8ba8\u8bba\u968f\u673a\u68ee\u6797\u3002 \u6295\u7968\u5206\u7c7b \u5047\u8bbe\u4f60\u5df2\u7ecf\u8bad\u7ec3\u4e86\u4e00\u4e9b\u5206\u7c7b\u5668\uff0c\u6bcf\u4e00\u4e2a\u90fd\u6709 80% \u7684\u51c6\u786e\u7387\u3002\u4f60\u53ef\u80fd\u6709\u4e86\u4e00\u4e2a\u903b\u8f91\u65af\u8482\u56de\u5f52\u3001\u6216\u4e00\u4e2a SVM\u3001\u6216\u4e00\u4e2a\u968f\u673a\u68ee\u6797\uff0c\u6216\u8005\u4e00\u4e2a KNN\uff0c\u6216\u8bb8\u8fd8\u6709\u66f4\u591a\uff08\u8be6\u89c1\u56fe 7-1\uff09 \u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u53bb\u521b\u5efa\u4e00\u4e2a\u66f4\u597d\u7684\u5206\u7c7b\u5668\u7684\u65b9\u6cd5\u5c31\u662f\u53bb\u6574\u5408\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u7684\u9884\u6d4b\u7136\u540e\u7ecf\u8fc7\u6295\u7968\u53bb\u9884\u6d4b\u5206\u7c7b\u3002\u8fd9\u79cd\u5206\u7c7b\u5668\u5c31\u53eb\u505a\u786c\u6295\u7968\u5206\u7c7b\u5668\uff08\u8be6\u89c1\u56fe 7-2\uff09\u3002 \u4ee4\u4eba\u60ca\u5947\u7684\u662f\u8fd9\u79cd\u6295\u7968\u5206\u7c7b\u5668\u5f97\u51fa\u7684\u7ed3\u679c\u7ecf\u5e38\u4f1a\u6bd4\u96c6\u6210\u4e2d\u6700\u597d\u7684\u4e00\u4e2a\u5206\u7c7b\u5668\u7ed3\u679c\u66f4\u597d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5373\u4f7f\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u662f\u4e00\u4e2a\u5f31\u5b66\u4e60\u5668\uff08\u610f\u5473\u7740\u5b83\u4eec\u4e5f\u5c31\u6bd4\u778e\u731c\u597d\u70b9\uff09\uff0c\u96c6\u6210\u540e\u4ecd\u7136\u662f\u4e00\u4e2a\u5f3a\u5b66\u4e60\u5668\uff08\u9ad8\u51c6\u786e\u7387\uff09\uff0c\u53ea\u8981\u6709\u8db3\u591f\u6570\u91cf\u7684\u5f31\u5b66\u4e60\u8005\uff0c\u4ed6\u4eec\u5c31\u8db3\u591f\u591a\u6837\u5316\u3002 \u8fd9\u600e\u4e48\u53ef\u80fd\uff1f\u63a5\u4e0b\u6765\u7684\u5206\u6790\u5c06\u5e2e\u52a9\u4f60\u89e3\u51b3\u8fd9\u4e2a\u7591\u95ee\u3002\u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u6709\u504f\u5dee\u7684\u786c\u5e01\uff0c\u4ed6\u6709 51% \u7684\u51e0\u7387\u4e3a\u6b63\u9762\uff0c49% \u7684\u51e0\u7387\u4e3a\u80cc\u9762\u3002\u5982\u679c\u4f60\u5b9e\u9a8c 1000 \u6b21\uff0c\u4f60\u4f1a\u5f97\u5230\u5dee\u4e0d\u591a 510 \u6b21\u6b63\u9762\uff0c490 \u6b21\u80cc\u9762\uff0c\u56e0\u6b64\u5927\u591a\u6570\u90fd\u662f\u6b63\u9762\u3002\u5982\u679c\u4f60\u7528\u6570\u5b66\u8ba1\u7b97\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\u5b9e\u9a8c 1000 \u6b21\u540e\uff0c\u6b63\u9762\u6982\u7387\u4e3a 51% \u7684\u4eba\u6bd4\u4f8b\u4e3a 75%\u3002\u4f60\u5b9e\u9a8c\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u6b63\u9762\u7684\u6bd4\u4f8b\u8d8a\u5927\uff08\u4f8b\u5982\u4f60\u8bd5\u9a8c\u4e86 10000 \u6b21\uff0c\u603b\u4f53\u6bd4\u4f8b\u53ef\u80fd\u6027\u5c31\u4f1a\u8fbe\u5230 97%\uff09\u3002\u8fd9\u662f\u56e0\u4e3a \u5927\u6570\u5b9a\u5f8b \uff1a\u5f53\u4f60\u4e00\u76f4\u7528\u786c\u5e01\u5b9e\u9a8c\u65f6\uff0c\u6b63\u9762\u7684\u6bd4\u4f8b\u4f1a\u8d8a\u6765\u8d8a\u63a5\u8fd1 51%\u3002\u56fe 7-3 \u5c55\u793a\u4e86\u59cb\u7ec8\u6709\u504f\u5dee\u7684\u786c\u5e01\u5b9e\u9a8c\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u5f53\u5b9e\u9a8c\u6b21\u6570\u4e0a\u5347\u65f6\uff0c\u6b63\u9762\u7684\u6982\u7387\u63a5\u8fd1\u4e8e 51%\u3002\u6700\u7ec8\u6240\u6709 10 \u79cd\u5b9e\u9a8c\u90fd\u4f1a\u6536\u655b\u5230 51%\uff0c\u5b83\u4eec\u90fd\u5927\u4e8e 50%\u3002 \u540c\u6837\u7684\uff0c\u5047\u8bbe\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u5305\u542b 1000 \u4e2a\u5206\u7c7b\u5668\u7684\u96c6\u6210\u6a21\u578b\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5206\u7c7b\u5668\u7684\u6b63\u786e\u7387\u53ea\u6709 51%\uff08\u4ec5\u6bd4\u778e\u731c\u597d\u4e00\u70b9\u70b9\uff09\u3002\u5982\u679c\u4f60\u7528\u6295\u7968\u53bb\u9884\u6d4b\u7c7b\u522b\uff0c\u4f60\u53ef\u80fd\u5f97\u5230 75% \u7684\u51c6\u786e\u7387\uff01\u7136\u800c\uff0c\u8fd9\u4ec5\u4ec5\u5728\u6240\u6709\u7684\u5206\u7c7b\u5668\u90fd\u72ec\u7acb\u8fd0\u884c\u7684\u5f88\u597d\u3001\u4e0d\u4f1a\u53d1\u751f\u6709\u76f8\u5173\u6027\u7684\u9519\u8bef\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u8fd9\u6837\uff0c\u7136\u800c\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u5728\u540c\u4e00\u4e2a\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\uff0c\u5bfc\u81f4\u5176\u5f88\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u9519\u8bef\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u72af\u540c\u4e00\u79cd\u9519\u8bef\uff0c\u6240\u4ee5\u4e5f\u4f1a\u6709\u5f88\u591a\u7968\u6295\u7ed9\u4e86\u9519\u8bef\u7c7b\u522b\u5bfc\u81f4\u96c6\u6210\u7684\u51c6\u786e\u7387\u4e0b\u964d\u3002 \u5982\u679c\u4f7f\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u72ec\u7acb\u81ea\u4e3b\u7684\u5206\u7c7b\uff0c\u90a3\u4e48\u96c6\u6210\u6a21\u578b\u4f1a\u5de5\u4f5c\u7684\u5f88\u597d\u3002\u53bb\u5f97\u5230\u591a\u6837\u7684\u5206\u7c7b\u5668\u7684\u65b9\u6cd5\u4e4b\u4e00\u5c31\u662f\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c\u8fd9\u4f1a\u4f7f\u5b83\u4eec\u4f1a\u505a\u51fa\u4e0d\u540c\u79cd\u7c7b\u7684\u9519\u8bef\uff0c\u8fd9\u4f1a\u63d0\u9ad8\u96c6\u6210\u7684\u6b63\u786e\u7387 \u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u521b\u5efa\u548c\u8bad\u7ec3\u4e86\u5728 sklearn \u4e2d\u7684\u6295\u7968\u5206\u7c7b\u5668\u3002\u8fd9\u4e2a\u5206\u7c7b\u5668\u7531\u4e09\u4e2a\u4e0d\u540c\u7684\u5206\u7c7b\u5668\u7ec4\u6210\uff08\u8bad\u7ec3\u96c6\u662f\u7b2c\u4e94\u7ae0\u4e2d\u7684 moons \u6570\u636e\u96c6\uff09\uff1a >>> from sklearn.ensemble import RandomForestClassifier >>> from sklearn.ensemble import VotingClassifier >>> from sklearn.linear_model import LogisticRegression >>> from sklearn.svm import SVC >>> log_clf = LogisticRegression() >>> rnd_clf = RandomForestClassifier() >>> svm_clf = SVC() >>> voting_clf = VotingClassifier(estimators=[('lr', log_clf), ('rf', rnd_clf), >>> ('svc', svm_clf)],voting='hard') >>> voting_clf.fit(X_train, y_train) \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u51c6\u786e\u7387\uff1a >>> from sklearn.metrics import accuracy_score >>> for clf in (log_clf, rnd_clf, svm_clf, voting_clf): >>> clf.fit(X_train, y_train) >>> y_pred = clf.predict(X_test) >>> print(clf.__class__.__name__, accuracy_score(y_test, y_pred)) LogisticRegression 0.864 RandomForestClassifier 0.872 SVC 0.888 VotingClassifier 0.896 \u4f60\u770b\uff01\u6295\u7968\u5206\u7c7b\u5668\u6bd4\u5176\u4ed6\u5355\u72ec\u7684\u5206\u7c7b\u5668\u8868\u73b0\u7684\u90fd\u8981\u597d\u3002 \u5982\u679c\u6240\u6709\u7684\u5206\u7c7b\u5668\u90fd\u80fd\u591f\u9884\u6d4b\u7c7b\u522b\u7684\u6982\u7387\uff08\u4f8b\u5982\u4ed6\u4eec\u6709\u4e00\u4e2a predict_proba() \u65b9\u6cd5\uff09\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u8ba9 sklearn \u4ee5\u6700\u9ad8\u7684\u7c7b\u6982\u7387\u6765\u9884\u6d4b\u8fd9\u4e2a\u7c7b\uff0c\u5e73\u5747\u5728\u6240\u6709\u7684\u5206\u7c7b\u5668\u4e0a\u3002\u8fd9\u79cd\u65b9\u5f0f\u53eb\u505a\u8f6f\u6295\u7968\u3002\u4ed6\u7ecf\u5e38\u6bd4\u786c\u6295\u7968\u8868\u73b0\u7684\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u7ed9\u4e88\u9ad8\u81ea\u4fe1\u7684\u6295\u7968\u66f4\u5927\u7684\u6743\u91cd\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u628a voting=\"hard\" \u8bbe\u7f6e\u4e3a voting=\"soft\" \u6765\u4fdd\u8bc1\u5206\u7c7b\u5668\u53ef\u4ee5\u9884\u6d4b\u7c7b\u522b\u6982\u7387\u3002\u7136\u800c\u8fd9\u4e0d\u662f SVC \u7c7b\u7684\u5206\u7c7b\u5668\u9ed8\u8ba4\u7684\u9009\u9879\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u628a\u5b83\u7684 probability hyperparameter \u8bbe\u7f6e\u4e3a True \uff08\u8fd9\u4f1a\u4f7f SVC \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u53bb\u9884\u6d4b\u7c7b\u522b\u6982\u7387\uff0c\u5176\u964d\u4f4e\u4e86\u8bad\u7ec3\u901f\u5ea6\uff0c\u4f46\u4f1a\u6dfb\u52a0 predict_proba() \u65b9\u6cd5\uff09\u3002\u5982\u679c\u4f60\u4fee\u6539\u4e86\u4e4b\u524d\u7684\u4ee3\u7801\u53bb\u4f7f\u7528\u8f6f\u6295\u7968\uff0c\u4f60\u4f1a\u53d1\u73b0\u6295\u7968\u5206\u7c7b\u5668\u6b63\u786e\u7387\u9ad8\u8fbe 91% Bagging \u548c Pasting \u5c31\u50cf\u4e4b\u524d\u8bb2\u5230\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u8bad\u7ec3\u7b97\u6cd5\u53bb\u5f97\u5230\u4e00\u4e9b\u4e0d\u540c\u7684\u5206\u7c7b\u5668\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u8bad\u7ec3\u7b97\u6cd5\uff0c\u4f46\u662f\u5728\u4e0d\u540c\u7684\u8bad\u7ec3\u96c6\u4e0a\u53bb\u8bad\u7ec3\u5b83\u4eec\u3002\u6709\u653e\u56de\u91c7\u6837\u88ab\u79f0\u4e3a\u88c5\u888b\uff08 Bagging \uff0c\u662f bootstrap aggregating \u7684\u7f29\u5199\uff09\u3002\u65e0\u653e\u56de\u91c7\u6837\u79f0\u4e3a\u7c98\u8d34\uff08 pasting \uff09\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cBagging \u548c Pasting \u90fd\u5141\u8bb8\u5728\u591a\u4e2a\u5206\u7c7b\u5668\u4e0a\u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884c\u591a\u6b21\u91c7\u6837\uff0c\u4f46\u53ea\u6709 Bagging \u5141\u8bb8\u5bf9\u540c\u4e00\u79cd\u5206\u7c7b\u5668\u4e0a\u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884c\u8fdb\u884c\u591a\u6b21\u91c7\u6837\u3002\u91c7\u6837\u548c\u8bad\u7ec3\u8fc7\u7a0b\u5982\u56fe7-4\u6240\u793a\u3002 \u5f53\u6240\u6709\u7684\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\u540e\uff0c\u96c6\u6210\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6240\u6709\u5206\u7c7b\u5668\u7ed3\u679c\u7684\u7b80\u5355\u805a\u5408\u6765\u5bf9\u65b0\u7684\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\u3002\u805a\u5408\u51fd\u6570\u901a\u5e38\u5bf9\u5206\u7c7b\u662f \u7edf\u8ba1\u6a21\u5f0f \uff08\u4f8b\u5982\u786c\u6295\u7968\u5206\u7c7b\u5668\uff09\u6216\u8005\u5bf9\u56de\u5f52\u662f\u5e73\u5747\u3002\u6bcf\u4e00\u4e2a\u5355\u72ec\u7684\u5206\u7c7b\u5668\u5728\u5982\u679c\u5728\u539f\u59cb\u8bad\u7ec3\u96c6\u4e0a\u90fd\u662f\u9ad8\u504f\u5dee\uff0c\u4f46\u662f\u805a\u5408\u964d\u4f4e\u4e86\u504f\u5dee\u548c\u65b9\u5dee\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u96c6\u6210\u7684\u7ed3\u679c\u662f\u6709\u4e00\u4e2a\u76f8\u4f3c\u7684\u504f\u5dee\uff0c\u4f46\u662f\u5bf9\u6bd4\u4e0e\u5728\u539f\u59cb\u8bad\u7ec3\u96c6\u4e0a\u7684\u5355\u4e00\u5206\u7c7b\u5668\u6765\u8bb2\u6709\u66f4\u5c0f\u7684\u65b9\u5dee\u3002 \u6b63\u5982\u4f60\u5728\u56fe 7-4 \u4e0a\u6240\u770b\u5230\u7684\uff0c\u5206\u7c7b\u5668\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684 CPU \u6838\u6216\u5176\u4ed6\u7684\u670d\u52a1\u5668\u4e00\u8d77\u88ab\u8bad\u7ec3\u3002\u76f8\u4f3c\u7684\uff0c\u5206\u7c7b\u5668\u4e5f\u53ef\u4ee5\u4e00\u8d77\u88ab\u5236\u4f5c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 Bagging \u548c Pasting \u662f\u5982\u6b64\u6d41\u884c\u7684\u539f\u56e0\u4e4b\u4e00\uff1a\u5b83\u4eec\u7684\u53ef\u6269\u5c55\u6027\u5f88\u597d\u3002 \u5728 sklearn \u4e2d\u7684 Bagging \u548c Pasting sklearn \u4e3a Bagging \u548c Pasting \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684API\uff1a BaggingClassifier \u7c7b\uff08\u6216\u8005\u5bf9\u4e8e\u56de\u5f52\u53ef\u4ee5\u662f BaggingRegressor \u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u8bad\u7ec3\u4e86\u4e00\u4e2a 500 \u4e2a\u51b3\u7b56\u6811\u5206\u7c7b\u5668\u7684\u96c6\u6210\uff0c\u6bcf\u4e00\u4e2a\u90fd\u662f\u5728\u6570\u636e\u96c6\u4e0a\u6709\u653e\u56de\u91c7\u6837 100 \u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u4e0b\u8fdb\u884c\u8bad\u7ec3\uff08\u8fd9\u662f Bagging \u7684\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u60f3\u5c1d\u8bd5 Pasting\uff0c\u5c31\u8bbe\u7f6e bootstrap=False \uff09\u3002 n_jobs \u53c2\u6570\u544a\u8bc9 sklearn \u7528\u4e8e\u8bad\u7ec3\u548c\u9884\u6d4b\u6240\u9700\u8981 CPU \u6838\u7684\u6570\u91cf\u3002\uff08-1 \u4ee3\u8868\u7740 sklearn \u4f1a\u4f7f\u7528\u6240\u6709\u7a7a\u95f2\u6838\uff09\uff1a >>>from sklearn.ensemble import BaggingClassifier >>>from sklearn.tree import DecisionTreeClassifier >>>bag_clf = BaggingClassifier(DecisionTreeClassifier(), n_estimators=500, >>> max_samples=100, bootstrap=True, n_jobs=-1) >>>bag_clf.fit(X_train, y_train) >>>y_pred = bag_clf.predict(X_test) \u5982\u679c\u57fa\u5206\u7c7b\u5668\u53ef\u4ee5\u9884\u6d4b\u7c7b\u522b\u6982\u7387\uff08\u4f8b\u5982\u5b83\u62e5\u6709 predict_proba() \u65b9\u6cd5\uff09\uff0c\u90a3\u4e48 BaggingClassifier \u4f1a\u81ea\u52a8\u7684\u8fd0\u884c\u8f6f\u6295\u7968\uff0c\u8fd9\u662f\u51b3\u7b56\u6811\u5206\u7c7b\u5668\u7684\u60c5\u51b5\u3002 \u56fe 7-5 \u5bf9\u6bd4\u4e86\u5355\u4e00\u51b3\u7b56\u6811\u7684\u51b3\u7b56\u8fb9\u754c\u548c Bagging \u96c6\u6210 500 \u4e2a\u6811\u7684\u51b3\u7b56\u8fb9\u754c\uff0c\u4e24\u8005\u90fd\u5728 moons \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u3002\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u96c6\u6210\u7684\u5206\u7c7b\u6bd4\u8d77\u5355\u4e00\u51b3\u7b56\u6811\u7684\u5206\u7c7b\u4ea7\u751f\u60c5\u51b5\u66f4\u597d\uff1a\u96c6\u6210\u6709\u4e00\u4e2a\u53ef\u6bd4\u8f83\u7684\u504f\u5dee\u4f46\u662f\u6709\u4e00\u4e2a\u8f83\u5c0f\u7684\u65b9\u5dee\uff08\u5b83\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u9519\u8bef\u6570\u76ee\u5927\u81f4\u76f8\u540c\uff0c\u4f46\u51b3\u7b56\u8fb9\u754c\u8f83\u4e0d\u89c4\u5219\uff09\u3002 Bootstrap \u5728\u6bcf\u4e2a\u9884\u6d4b\u5668\u88ab\u8bad\u7ec3\u7684\u5b50\u96c6\u4e2d\u5f15\u5165\u4e86\u66f4\u591a\u7684\u5206\u96c6\uff0c\u6240\u4ee5 Bagging \u7ed3\u675f\u65f6\u7684\u504f\u5dee\u6bd4 Pasting \u66f4\u9ad8\uff0c\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u9884\u6d4b\u56e0\u5b50\u6700\u7ec8\u53d8\u5f97\u4e0d\u76f8\u5173\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u96c6\u5408\u7684\u65b9\u5dee\u3002\u603b\u4f53\u800c\u8a00\uff0cBagging \u901a\u5e38\u4f1a\u5bfc\u81f4\u66f4\u597d\u7684\u6a21\u578b\uff0c\u8fd9\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5b83\u901a\u5e38\u662f\u9996\u9009\u7684\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u6709\u7a7a\u95f2\u65f6\u95f4\u548c CPU \u529f\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u8bc4\u4f30 Bagging \u548c Pasting \u54ea\u4e00\u4e2a\u66f4\u597d\u3002 Out-of-Bag \u8bc4\u4ef7 \u5bf9\u4e8e Bagging \u6765\u8bf4\uff0c\u4e00\u4e9b\u5b9e\u4f8b\u53ef\u80fd\u88ab\u4e00\u4e9b\u5206\u7c7b\u5668\u91cd\u590d\u91c7\u6837\uff0c\u4f46\u5176\u4ed6\u7684\u6709\u53ef\u80fd\u4e0d\u4f1a\u88ab\u91c7\u6837\u3002 BaggingClassifier \u9ed8\u8ba4\u91c7\u6837\u3002 BaggingClassifier \u9ed8\u8ba4\u662f\u6709\u653e\u56de\u7684\u91c7\u6837 m \u4e2a\u5b9e\u4f8b \uff08 bootstrap=True \uff09\uff0c\u5176\u4e2d m \u662f\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\uff0c\u8fd9\u610f\u5473\u7740\u5e73\u5747\u4e0b\u6765\u53ea\u670963%\u7684\u8bad\u7ec3\u5b9e\u4f8b\u88ab\u6bcf\u4e2a\u5206\u7c7b\u5668\u91c7\u6837\uff0c\u5269\u4e0b\u768437%\u4e2a\u6ca1\u6709\u88ab\u91c7\u6837\u7684\u8bad\u7ec3\u5b9e\u4f8b\u5c31\u53eb\u505a Out-of-Bag \u5b9e\u4f8b\u3002\u6ce8\u610f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7684\u5206\u7c7b\u5668\u5b83\u4eec\u7684 37% \u4e0d\u662f\u76f8\u540c\u7684\u3002 \u56e0\u4e3a\u5728\u8bad\u7ec3\u4e2d\u5206\u7c7b\u5668\u4ece\u6765\u6ca1\u6709\u770b\u5230\u8fc7 oob \u5b9e\u4f8b\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u5728\u8fd9\u4e9b\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u8bc4\u4f30\uff0c\u800c\u4e0d\u9700\u8981\u5355\u72ec\u7684\u9a8c\u8bc1\u96c6\u6216\u4ea4\u53c9\u9a8c\u8bc1\u3002\u4f60\u53ef\u4ee5\u62ff\u51fa\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u7684 oob \u6765\u8bc4\u4f30\u96c6\u6210\u672c\u8eab\u3002 \u5728 sklearn \u4e2d\uff0c\u4f60\u53ef\u4ee5\u5728\u8bad\u7ec3\u540e\u9700\u8981\u521b\u5efa\u4e00\u4e2a BaggingClassifier \u6765\u81ea\u52a8\u8bc4\u4f30\u65f6\u8bbe\u7f6e oob_score=True \u6765\u81ea\u52a8\u8bc4\u4f30\u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u3002\u8bc4\u4f30\u7ed3\u679c\u901a\u8fc7\u53d8\u91cf oob_score_ \u6765\u663e\u793a\uff1a >>> bag_clf = BaggingClassifier(DecisionTreeClassifier(), n_estimators=500,bootstrap=True, n_jobs=-1, oob_score=True) >>> bag_clf.fit(X_train, y_train) >>> bag_clf.oob_score_ 0.93066666666666664 \u6839\u636e\u8fd9\u4e2a obb \u8bc4\u4f30\uff0c BaggingClassifier \u53ef\u4ee5\u518d\u6d4b\u8bd5\u96c6\u4e0a\u8fbe\u523093.1%\u7684\u51c6\u786e\u7387\uff0c\u8ba9\u6211\u4eec\u4fee\u6539\u4e00\u4e0b\uff1a >>> from sklearn.metrics import accuracy_score >>> y_pred = bag_clf.predict(X_test) >>> accuracy_score(y_test, y_pred) 0.93600000000000005 \u6211\u4eec\u5728\u6d4b\u8bd5\u96c6\u4e0a\u5f97\u5230\u4e86 93.6% \u7684\u51c6\u786e\u7387\uff0c\u8db3\u591f\u63a5\u8fd1\u4e86\uff01 \u5bf9\u4e8e\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b oob \u51b3\u7b56\u51fd\u6570\u4e5f\u53ef\u901a\u8fc7 oob_decision_function_ \u53d8\u91cf\u6765\u5c55\u793a\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff08\u5f53\u57fa\u51b3\u7b56\u5668\u6709 predict_proba() \u65f6\uff09\u51b3\u7b56\u51fd\u6570\u4f1a\u5bf9\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u8fd4\u56de\u7c7b\u522b\u6982\u7387\u3002\u4f8b\u5982\uff0coob \u8bc4\u4f30\u9884\u6d4b\u7b2c\u4e8c\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u6709 60.6% \u7684\u6982\u7387\u5c5e\u4e8e\u6b63\u7c7b\uff0839.4% \u5c5e\u4e8e\u8d1f\u7c7b\uff09\uff1a >>> bag_clf.oob_decision_function_ array([[ 0., 1.], [ 0.60588235, 0.39411765],[ 1., 0. ], ... [ 1. , 0. ],[ 0., 1.],[ 0.48958333, 0.51041667]]) \u968f\u673a\u8d34\u7247\u4e0e\u968f\u673a\u5b50\u7a7a\u95f4 BaggingClassifier \u4e5f\u652f\u6301\u91c7\u6837\u7279\u5f81\u3002\u5b83\u88ab\u4e24\u4e2a\u8d85\u53c2\u6570 max_features \u548c bootstrap_features \u63a7\u5236\u3002\u4ed6\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u548c max_samples \u548c bootstrap \u4e00\u6837\uff0c\u4f46\u8fd9\u662f\u5bf9\u4e8e\u7279\u5f81\u91c7\u6837\u800c\u4e0d\u662f\u5b9e\u4f8b\u91c7\u6837\u3002\u56e0\u6b64\uff0c\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u4f1a\u88ab\u5728\u968f\u673a\u7684\u8f93\u5165\u7279\u5f81\u5185\u8fdb\u884c\u8bad\u7ec3\u3002 \u5f53\u4f60\u5728\u5904\u7406\u9ad8\u7ef4\u5ea6\u8f93\u5165\u4e0b\uff08\u4f8b\u5982\u56fe\u7247\uff09\u6b64\u65b9\u6cd5\u5c24\u5176\u6709\u6548\u3002\u5bf9\u8bad\u7ec3\u5b9e\u4f8b\u548c\u7279\u5f81\u7684\u91c7\u6837\u88ab\u53eb\u505a\u968f\u673a\u8d34\u7247\u3002\u4fdd\u7559\u4e86\u6240\u6709\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff08\u4f8b\u5982 bootstrap=False \u548c max_samples=1.0 \uff09\uff0c\u4f46\u662f\u5bf9\u7279\u5f81\u91c7\u6837\uff08 bootstrap_features=True \u5e76\u4e14/\u6216\u8005 max_features \u5c0f\u4e8e 1.0\uff09\u53eb\u505a\u968f\u673a\u5b50\u7a7a\u95f4\u3002 \u91c7\u6837\u7279\u5f81\u5bfc\u81f4\u66f4\u591a\u7684\u9884\u6d4b\u591a\u6837\u6027\uff0c\u7528\u9ad8\u504f\u5dee\u6362\u4f4e\u65b9\u5dee\u3002 \u968f\u673a\u68ee\u6797 \u6b63\u5982\u6211\u4eec\u6240\u8ba8\u8bba\u7684\uff0c\u968f\u673a\u68ee\u6797\u662f\u51b3\u7b56\u6811\u7684\u4e00\u79cd\u96c6\u6210\uff0c\u901a\u5e38\u662f\u901a\u8fc7 bagging \u65b9\u6cd5\uff08\u6709\u65f6\u662f pasting \u65b9\u6cd5\uff09\u8fdb\u884c\u8bad\u7ec3\uff0c\u901a\u5e38\u7528 max_samples \u8bbe\u7f6e\u4e3a\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u3002\u4e0e\u5efa\u7acb\u4e00\u4e2a BaggingClassifier \u7136\u540e\u628a\u5b83\u653e\u5165 DecisionTreeClassifier \u76f8\u53cd\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u66f4\u65b9\u4fbf\u7684\u4e5f\u662f\u5bf9\u51b3\u7b56\u6811\u4f18\u5316\u591f\u7684 RandomForestClassifier \uff08\u5bf9\u4e8e\u56de\u5f52\u662f RandomForestRegressor \uff09\u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u8bad\u7ec3\u4e86\u5e26\u6709 500 \u4e2a\u6811\uff08\u6bcf\u4e2a\u88ab\u9650\u5236\u4e3a 16 \u53f6\u5b50\u7ed3\u70b9\uff09\u7684\u51b3\u7b56\u68ee\u6797\uff0c\u4f7f\u7528\u6240\u6709\u7a7a\u95f2\u7684 CPU \u6838\uff1a >>>from sklearn.ensemble import RandomForestClassifier >>>rnd_clf = RandomForestClassifier(n_estimators=500, max_leaf_nodes=16, n_jobs=-1) >>>rnd_clf.fit(X_train, y_train) >>>y_pred_rf = rnd_clf.predict(X_test) \u9664\u4e86\u4e00\u4e9b\u4f8b\u5916\uff0c RandomForestClassifier \u4f7f\u7528 DecisionTreeClassifier \u7684\u6240\u6709\u8d85\u53c2\u6570\uff08\u51b3\u5b9a\u6570\u600e\u4e48\u751f\u957f\uff09\uff0c\u628a BaggingClassifier \u7684\u8d85\u53c2\u6570\u52a0\u8d77\u6765\u6765\u63a7\u5236\u96c6\u6210\u672c\u8eab\u3002 \u968f\u673a\u68ee\u6797\u7b97\u6cd5\u5728\u6811\u751f\u957f\u65f6\u5f15\u5165\u4e86\u989d\u5916\u7684\u968f\u673a\uff1b\u4e0e\u5728\u8282\u70b9\u5206\u88c2\u65f6\u9700\u8981\u627e\u5230\u6700\u597d\u5206\u88c2\u7279\u5f81\u76f8\u53cd\uff08\u8be6\u89c1\u7b2c\u516d\u7ae0\uff09\uff0c\u5b83\u5728\u4e00\u4e2a\u968f\u673a\u7684\u7279\u5f81\u96c6\u4e2d\u627e\u6700\u597d\u7684\u7279\u5f81\u3002\u5b83\u5bfc\u81f4\u4e86\u6811\u7684\u5dee\u5f02\u6027\uff0c\u5e76\u4e14\u518d\u4e00\u6b21\u7528\u9ad8\u504f\u5dee\u6362\u4f4e\u65b9\u5dee\uff0c\u603b\u7684\u6765\u8bf4\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u6a21\u578b\u3002\u4ee5\u4e0b\u662f BaggingClassifier \u5927\u81f4\u76f8\u5f53\u4e8e\u4e4b\u524d\u7684 randomforestclassifier \uff1a >>>bag_clf = BaggingClassifier(DecisionTreeClassifier(splitter=\"random\", max_leaf_nodes=16),n_estimators=500, max_samples=1.0, bootstrap=True, n_jobs=-1) \u6781\u7aef\u968f\u673a\u6811 \u5f53\u4f60\u5728\u968f\u673a\u68ee\u6797\u4e0a\u751f\u957f\u6811\u65f6\uff0c\u5728\u6bcf\u4e2a\u7ed3\u70b9\u5206\u88c2\u65f6\u53ea\u8003\u8651\u968f\u673a\u7279\u5f81\u96c6\u4e0a\u7684\u7279\u5f81\uff08\u6b63\u5982\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u4e00\u6837\uff09\u3002\u76f8\u6bd4\u4e8e\u627e\u5230\u66f4\u597d\u7684\u7279\u5f81\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5bf9\u7279\u5f81\u4f7f\u7528\u968f\u673a\u9608\u503c\u4f7f\u6811\u66f4\u52a0\u968f\u673a\uff08\u50cf\u89c4\u5219\u51b3\u7b56\u6811\u4e00\u6837\uff09\u3002 \u8fd9\u79cd\u6781\u7aef\u968f\u673a\u7684\u6811\u88ab\u7b80\u79f0\u4e3a Extremely Randomized Trees \uff08\u6781\u7aef\u968f\u673a\u6811\uff09\uff0c\u6216\u8005\u66f4\u7b80\u5355\u7684\u79f0\u4e3a Extra-Tree \u3002\u518d\u4e00\u6b21\u7528\u9ad8\u504f\u5dee\u6362\u4f4e\u65b9\u5dee\u3002\u5b83\u8fd8\u4f7f\u5f97 Extra-Tree \u6bd4\u89c4\u5219\u7684\u968f\u673a\u68ee\u6797\u66f4\u5feb\u5730\u8bad\u7ec3\uff0c\u56e0\u4e3a\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u627e\u5230\u6bcf\u4e2a\u7279\u5f81\u7684\u6700\u4f73\u9608\u503c\u662f\u751f\u957f\u6811\u6700\u8017\u65f6\u7684\u4efb\u52a1\u4e4b\u4e00\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 sklearn \u7684 ExtraTreesClassifier \u6765\u521b\u5efa\u4e00\u4e2a Extra-Tree \u5206\u7c7b\u5668\u3002\u4ed6\u7684 API \u8ddf RandomForestClassifier \u662f\u76f8\u540c\u7684\uff0c\u76f8\u4f3c\u7684\uff0c ExtraTreesRegressor \u8ddf RandomForestRegressor \u4e5f\u662f\u76f8\u540c\u7684 API\u3002 \u6211\u4eec\u5f88\u96be\u53bb\u5206\u8fa8 ExtraTreesClassifier \u548c RandomForestClassifier \u5230\u5e95\u54ea\u4e2a\u66f4\u597d\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u662f\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6765\u6bd4\u8f83\u5b83\u4eec\uff08\u4f7f\u7528\u7f51\u683c\u641c\u7d22\u8c03\u6574\u8d85\u53c2\u6570\uff09\u3002 \u7279\u5f81\u91cd\u8981\u5ea6 \u6700\u540e\uff0c\u5982\u679c\u4f60\u89c2\u5bdf\u4e00\u4e2a\u5355\u4e00\u51b3\u7b56\u6811\uff0c\u91cd\u8981\u7684\u7279\u5f81\u4f1a\u51fa\u73b0\u5728\u66f4\u9760\u8fd1\u6839\u90e8\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u91cd\u8981\u7684\u7279\u5f81\u4f1a\u7ecf\u5e38\u51fa\u73b0\u5728\u9760\u8fd1\u53f6\u5b50\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u4e00\u4e2a\u7279\u5f81\u5728\u68ee\u6797\u7684\u5168\u90e8\u6811\u4e2d\u51fa\u73b0\u7684\u5e73\u5747\u6df1\u5ea6\u6765\u9884\u6d4b\u7279\u5f81\u7684\u91cd\u8981\u6027\u3002sklearn \u5728\u8bad\u7ec3\u540e\u4f1a\u81ea\u52a8\u8ba1\u7b97\u6bcf\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u5ea6\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7 feature_importances_ \u53d8\u91cf\u6765\u67e5\u770b\u7ed3\u679c\u3002\u4f8b\u5982\u5982\u4e0b\u4ee3\u7801\u5728 iris \u6570\u636e\u96c6\uff08\u7b2c\u56db\u7ae0\u4ecb\u7ecd\uff09\u4e0a\u8bad\u7ec3\u4e86\u4e00\u4e2a RandomForestClassifier \u6a21\u578b\uff0c\u7136\u540e\u8f93\u51fa\u4e86\u6bcf\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u6027\u3002\u770b\u6765\uff0c\u6700\u91cd\u8981\u7684\u7279\u5f81\u662f\u82b1\u74e3\u957f\u5ea6\uff0844%\uff09\u548c\u5bbd\u5ea6\uff0842%\uff09\uff0c\u800c\u843c\u7247\u957f\u5ea6\u548c\u5bbd\u5ea6\u76f8\u5bf9\u6bd4\u8f83\u662f\u4e0d\u91cd\u8981\u7684\uff08\u5206\u522b\u4e3a 11% \u548c 2%\uff09\uff1a >>> from sklearn.datasets import load_iris >>> iris = load_iris() >>> rnd_clf = RandomForestClassifier(n_estimators=500, n_jobs=-1) >>> rnd_clf.fit(iris[\"data\"], iris[\"target\"]) >>> for name, score in zip(iris[\"feature_names\"], rnd_clf.feature_importances_): >>> print(name, score) sepal length (cm) 0.112492250999 sepal width (cm) 0.0231192882825 petal length (cm) 0.441030464364 petal width (cm) 0.423357996355 \u76f8\u4f3c\u7684\uff0c\u5982\u679c\u4f60\u5728 MNIST \u6570\u636e\u53ca\u4e0a\u8bad\u7ec3\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\uff08\u5728\u7b2c\u4e09\u7ae0\u4e0a\u4ecb\u7ecd\uff09\uff0c\u7136\u540e\u753b\u51fa\u6bcf\u4e2a\u50cf\u7d20\u7684\u91cd\u8981\u6027\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u56fe 7-6 \u7684\u56fe\u7247\u3002 \u968f\u673a\u68ee\u6797\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5feb\u901f\u5f97\u4e86\u89e3\u54ea\u4e9b\u7279\u5f81\u5b9e\u9645\u4e0a\u662f\u91cd\u8981\u7684\uff0c\u7279\u522b\u662f\u4f60\u9700\u8981\u8fdb\u884c\u7279\u5f81\u9009\u62e9\u7684\u65f6\u5019\u3002 \u63d0\u5347 \u63d0\u5347\uff08Boosting\uff0c\u6700\u521d\u79f0\u4e3a \u5047\u8bbe\u589e\u5f3a \uff09\u6307\u7684\u662f\u53ef\u4ee5\u5c06\u51e0\u4e2a\u5f31\u5b66\u4e60\u8005\u7ec4\u5408\u6210\u5f3a\u5b66\u4e60\u8005\u7684\u96c6\u6210\u65b9\u6cd5\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7684\u63d0\u5347\u65b9\u6cd5\u7684\u601d\u60f3\u5c31\u662f\u6309\u987a\u5e8f\u53bb\u8bad\u7ec3\u5206\u7c7b\u5668\uff0c\u6bcf\u4e00\u4e2a\u90fd\u8981\u5c1d\u8bd5\u4fee\u6b63\u524d\u9762\u7684\u5206\u7c7b\u3002\u73b0\u5982\u4eca\u5df2\u7ecf\u6709\u5f88\u591a\u7684\u63d0\u5347\u65b9\u6cd5\u4e86\uff0c\u4f46\u6700\u8457\u540d\u7684\u5c31\u662f Adaboost \uff08\u9002\u5e94\u6027\u63d0\u5347\uff0c\u662f Adaptive Boosting \u7684\u7b80\u79f0\uff09 \u548c Gradient Boosting \uff08\u68af\u5ea6\u63d0\u5347\uff09\u3002\u8ba9\u6211\u4eec\u5148\u4ece Adaboost \u8bf4\u8d77\u3002 Adaboost \u4f7f\u4e00\u4e2a\u65b0\u7684\u5206\u7c7b\u5668\u53bb\u4fee\u6b63\u4e4b\u524d\u5206\u7c7b\u7ed3\u679c\u7684\u65b9\u6cd5\u5c31\u662f\u5bf9\u4e4b\u524d\u5206\u7c7b\u7ed3\u679c\u4e0d\u5bf9\u7684\u8bad\u7ec3\u5b9e\u4f8b\u591a\u52a0\u5173\u6ce8\u3002\u8fd9\u5bfc\u81f4\u65b0\u7684\u9884\u6d4b\u56e0\u5b50\u8d8a\u6765\u8d8a\u591a\u5730\u805a\u7126\u4e8e\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u662f Adaboost \u4f7f\u7528\u7684\u6280\u672f\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u53bb\u6784\u5efa\u4e00\u4e2a Adaboost \u5206\u7c7b\u5668\uff0c\u7b2c\u4e00\u4e2a\u57fa\u5206\u7c7b\u5668\uff08\u4f8b\u5982\u4e00\u4e2a\u51b3\u7b56\u6811\uff09\u88ab\u8bad\u7ec3\u7136\u540e\u5728\u8bad\u7ec3\u96c6\u4e0a\u505a\u9884\u6d4b\uff0c\u5728\u8bef\u5206\u7c7b\u8bad\u7ec3\u5b9e\u4f8b\u4e0a\u7684\u6743\u91cd\u5c31\u589e\u52a0\u4e86\u3002\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u673a\u4f7f\u7528\u66f4\u65b0\u8fc7\u7684\u6743\u91cd\u7136\u540e\u518d\u4e00\u6b21\u8bad\u7ec3\uff0c\u6743\u91cd\u66f4\u65b0\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff08\u8be6\u89c1\u56fe 7-7\uff09 \u56fe 7-8 \u663e\u793a\u8fde\u7eed\u4e94\u6b21\u9884\u6d4b\u7684 moons \u6570\u636e\u96c6\u7684\u51b3\u7b56\u8fb9\u754c\uff08\u5728\u672c\u4f8b\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u662f\u9ad8\u5ea6\u6b63\u5219\u5316\u5e26\u6709 RBF \u6838\u7684 SVM\uff09\u3002\u7b2c\u4e00\u4e2a\u5206\u7c7b\u5668\u8bef\u5206\u7c7b\u4e86\u5f88\u591a\u5b9e\u4f8b\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u6743\u91cd\u88ab\u63d0\u5347\u4e86\u3002\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u5668\u56e0\u6b64\u5bf9\u8fd9\u4e9b\u8bef\u5206\u7c7b\u7684\u5b9e\u4f8b\u5206\u7c7b\u6548\u679c\u66f4\u597d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u53f3\u8fb9\u7684\u56fe\u4ee3\u8868\u4e86\u9664\u4e86\u5b66\u4e60\u7387\u51cf\u534a\u5916\uff08\u8bef\u5206\u7c7b\u5b9e\u4f8b\u6743\u91cd\u6bcf\u6b21\u8fed\u4ee3\u4e0a\u5347\u4e00\u534a\uff09\u76f8\u540c\u7684\u9884\u6d4b\u5e8f\u5217\u3002\u4f60\u53ef\u4ee5\u770b\u51fa\uff0c\u5e8f\u5217\u5b66\u4e60\u6280\u672f\u4e0e\u68af\u5ea6\u4e0b\u964d\u5f88\u76f8\u4f3c\uff0c\u9664\u4e86\u8c03\u6574\u5355\u4e2a\u9884\u6d4b\u56e0\u5b50\u7684\u53c2\u6570\u4ee5\u6700\u5c0f\u5316\u4ee3\u4ef7\u51fd\u6570\u4e4b\u5916\uff0cAdaBoost \u589e\u52a0\u4e86\u96c6\u5408\u7684\u9884\u6d4b\u5668\uff0c\u9010\u6e10\u4f7f\u5176\u66f4\u597d\u3002 \u4e00\u65e6\u6240\u6709\u7684\u5206\u7c7b\u5668\u90fd\u88ab\u8bad\u7ec3\u540e\uff0c\u9664\u4e86\u5206\u7c7b\u5668\u6839\u636e\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u88ab\u8d4b\u4e88\u7684\u6743\u91cd\u5916\uff0c\u96c6\u6210\u9884\u6d4b\u5c31\u975e\u5e38\u50cfBagging\u548cPasting\u4e86\u3002 \u5e8f\u5217\u5b66\u4e60\u6280\u672f\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u7f3a\u70b9\u5c31\u662f\uff1a\u5b83\u4e0d\u80fd\u88ab\u5e76\u884c\u5316\uff08\u53ea\u80fd\u6309\u6b65\u9aa4\uff09\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5206\u7c7b\u5668\u53ea\u80fd\u5728\u4e4b\u524d\u7684\u5206\u7c7b\u5668\u5df2\u7ecf\u88ab\u8bad\u7ec3\u548c\u8bc4\u4ef7\u540e\u518d\u8fdb\u884c\u8bad\u7ec3\u3002\u56e0\u6b64\uff0c\u5b83\u4e0d\u50cfBagging\u548cPasting\u4e00\u6837\u3002 \u8ba9\u6211\u4eec\u8be6\u7ec6\u770b\u4e00\u4e0b Adaboost \u7b97\u6cd5\u3002\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u7684\u6743\u91cd wi \u521d\u59cb\u90fd\u88ab\u8bbe\u4e3a 1/m \u7b2c\u4e00\u4e2a\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\uff0c\u7136\u540e\u4ed6\u7684\u6743\u91cd\u8bef\u5dee\u7387 r1 \u5728\u8bad\u7ec3\u96c6\u4e0a\u7b97\u51fa\uff0c\u8be6\u89c1\u516c\u5f0f 7-1\u3002 \u516c\u5f0f7-1\uff1a\u7b2c j \u4e2a\u5206\u7c7b\u5668\u7684\u6743\u91cd\u8bef\u5dee\u7387 \u5176\u4e2d \u662f\u7b2c j \u4e2a\u5206\u7c7b\u5668\u5bf9\u4e8e\u7b2c i \u5b9e\u4f8b\u7684\u9884\u6d4b\u3002 \u5206\u7c7b\u5668\u7684\u6743\u91cd \u968f\u540e\u7528\u516c\u5f0f 7-2 \u8ba1\u7b97\u51fa\u6765\u3002\u5176\u4e2d \u03b7 \u662f\u8d85\u53c2\u6570\u5b66\u4e60\u7387\uff08\u9ed8\u8ba4\u4e3a 1\uff09\u3002\u5206\u7c7b\u5668\u51c6\u786e\u7387\u8d8a\u9ad8\uff0c\u5b83\u7684\u6743\u91cd\u5c31\u8d8a\u9ad8\u3002\u5982\u679c\u5b83\u53ea\u662f\u778e\u731c\uff0c\u90a3\u4e48\u5b83\u7684\u6743\u91cd\u4f1a\u8d8b\u8fd1\u4e8e 0\u3002\u7136\u800c\uff0c\u5982\u679c\u5b83\u603b\u662f\u51fa\u9519\uff08\u6bd4\u778e\u731c\u7684\u51e0\u7387\u90fd\u4f4e\uff09\uff0c\u5b83\u7684\u6743\u91cd\u4f1a\u4f7f\u8d1f\u6570\u3002 \u516c\u5f0f 7-2\uff1a\u5206\u7c7b\u5668\u6743\u91cd \u63a5\u4e0b\u6765\u5b9e\u4f8b\u7684\u6743\u91cd\u4f1a\u6309\u7167\u516c\u5f0f 7-3 \u66f4\u65b0\uff1a\u8bef\u5206\u7c7b\u7684\u5b9e\u4f8b\u6743\u91cd\u4f1a\u88ab\u63d0\u5347\u3002 \u516c\u5f0f7-3 \u6743\u91cd\u66f4\u65b0\u89c4\u5219 \u5bf9\u4e8e i=1, 2, ..., m \u968f\u540e\u6240\u6709\u5b9e\u4f8b\u7684\u6743\u91cd\u90fd\u88ab\u5f52\u4e00\u5316\uff08\u4f8b\u5982\u88ab \u6574\u9664\uff09 \u6700\u540e\uff0c\u4e00\u4e2a\u65b0\u7684\u5206\u7c7b\u5668\u901a\u8fc7\u66f4\u65b0\u8fc7\u7684\u6743\u91cd\u8bad\u7ec3\uff0c\u6574\u4e2a\u8fc7\u7a0b\u88ab\u91cd\u590d\uff08\u65b0\u7684\u5206\u7c7b\u5668\u6743\u91cd\u88ab\u8ba1\u7b97\uff0c\u5b9e\u4f8b\u7684\u6743\u91cd\u88ab\u66f4\u65b0\uff0c\u968f\u540e\u53e6\u4e00\u4e2a\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002\u5f53\u89c4\u5b9a\u7684\u5206\u7c7b\u5668\u6570\u91cf\u8fbe\u5230\u6216\u8005\u6700\u597d\u7684\u5206\u7c7b\u5668\u88ab\u627e\u5230\u540e\u7b97\u6cd5\u5c31\u4f1a\u505c\u6b62\u3002 \u4e3a\u4e86\u8fdb\u884c\u9884\u6d4b\uff0cAdaboost \u901a\u8fc7\u5206\u7c7b\u5668\u6743\u91cd \u7b80\u5355\u7684\u8ba1\u7b97\u4e86\u6240\u6709\u7684\u5206\u7c7b\u5668\u548c\u6743\u91cd\u3002\u9884\u6d4b\u7c7b\u522b\u4f1a\u662f\u6743\u91cd\u6295\u7968\u4e2d\u4e3b\u8981\u7684\u7c7b\u522b\u3002\uff08\u8be6\u89c1\u516c\u5f0f 7-4\uff09 \u516c\u5f0f7-4\uff1a Adaboost \u5206\u7c7b\u5668 \u5176\u4e2d N \u662f\u5206\u7c7b\u5668\u7684\u6570\u91cf\u3002 sklearn \u901a\u5e38\u4f7f\u7528 Adaboost \u7684\u591a\u5206\u7c7b\u7248\u672c SAMME \uff08\u8fd9\u5c31\u4ee3\u8868\u4e86 \u5206\u6bb5\u52a0\u5efa\u6a21\u4f7f\u7528\u591a\u7c7b\u6307\u6570\u635f\u5931\u51fd\u6570 \uff09\u3002\u5982\u679c\u53ea\u6709\u4e24\u7c7b\u522b\uff0c\u90a3\u4e48 SAMME \u662f\u4e0e Adaboost \u76f8\u540c\u7684\u3002\u5982\u679c\u5206\u7c7b\u5668\u53ef\u4ee5\u9884\u6d4b\u7c7b\u522b\u6982\u7387\uff08\u4f8b\u5982\u5982\u679c\u5b83\u4eec\u6709 predict_proba() \uff09\uff0c\u5982\u679c sklearn \u53ef\u4ee5\u4f7f\u7528 SAMME \u53eb\u505a SAMME.R \u7684\u53d8\u91cf\uff08R \u4ee3\u8868\u201cREAL\u201d\uff09\uff0c\u8fd9\u79cd\u4f9d\u8d56\u4e8e\u7c7b\u522b\u6982\u7387\u7684\u901a\u5e38\u6bd4\u4f9d\u8d56\u4e8e\u5206\u7c7b\u5668\u7684\u66f4\u597d\u3002 \u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u8bad\u7ec3\u4e86\u4f7f\u7528 sklearn \u7684 AdaBoostClassifier \u57fa\u4e8e 200 \u4e2a\u51b3\u7b56\u6811\u6869 Adaboost \u5206\u7c7b\u5668\uff08\u6b63\u5982\u4f60\u8bf4\u671f\u5f85\u7684\uff0c\u5bf9\u4e8e\u56de\u5f52\u4e5f\u6709 AdaBoostRegressor \uff09\u3002\u4e00\u4e2a\u51b3\u7b56\u6811\u6869\u662f max_depth=1 \u7684\u51b3\u7b56\u6811-\u6362\u53e5\u8bdd\u8bf4\uff0c\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u51b3\u7b56\u8282\u70b9\u52a0\u4e0a\u4e24\u4e2a\u53f6\u5b50\u7ed3\u70b9\u3002\u8fd9\u5c31\u662f AdaBoostClassifier \u7684\u9ed8\u8ba4\u57fa\u5206\u7c7b\u5668\uff1a >>>from sklearn.ensemble import AdaBoostClassifier >>>ada_clf = AdaBoostClassifier(DecisionTreeClassifier(max_depth=1), n_estimators=200,algorithm=\"SAMME.R\", learning_rate=0.5) >>>ada_clf.fit(X_train, y_train) \u5982\u679c\u4f60\u7684 Adaboost \u96c6\u6210\u8fc7\u62df\u5408\u4e86\u8bad\u7ec3\u96c6\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u51cf\u5c11\u57fa\u5206\u7c7b\u5668\u7684\u6570\u91cf\u6216\u8005\u5bf9\u57fa\u5206\u7c7b\u5668\u4f7f\u7528\u66f4\u5f3a\u7684\u6b63\u5219\u5316\u3002 \u68af\u5ea6\u63d0\u5347 \u53e6\u4e00\u4e2a\u975e\u5e38\u8457\u540d\u7684\u63d0\u5347\u7b97\u6cd5\u662f\u68af\u5ea6\u63d0\u5347\u3002\u4e0e Adaboost \u4e00\u6837\uff0c\u68af\u5ea6\u63d0\u5347\u4e5f\u662f\u901a\u8fc7\u5411\u96c6\u6210\u4e2d\u9010\u6b65\u589e\u52a0\u5206\u7c7b\u5668\u8fd0\u884c\u7684\uff0c\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u4fee\u6b63\u4e4b\u524d\u7684\u5206\u7c7b\u7ed3\u679c\u3002\u7136\u800c\uff0c\u5b83\u5e76\u4e0d\u50cf Adaboost \u90a3\u6837\u6bcf\u4e00\u6b21\u8fed\u4ee3\u90fd\u66f4\u6539\u5b9e\u4f8b\u7684\u6743\u91cd\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u53bb\u4f7f\u7528\u65b0\u7684\u5206\u7c7b\u5668\u53bb\u62df\u5408\u524d\u9762\u5206\u7c7b\u5668\u9884\u6d4b\u7684 \u6b8b\u5dee \u3002 \u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f7f\u7528\u51b3\u7b56\u6811\u5f53\u505a\u57fa\u5206\u7c7b\u5668\u7684\u7b80\u5355\u7684\u56de\u5f52\u4f8b\u5b50\uff08\u56de\u5f52\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u63d0\u5347\uff09\u3002\u8fd9\u88ab\u53eb\u505a\u68af\u5ea6\u63d0\u5347\u56de\u5f52\u6811\uff08GBRT\uff0c Gradient Tree Boosting \u6216\u8005 Gradient Boosted Regression Trees \uff09\u3002\u9996\u5148\u6211\u4eec\u7528 DecisionTreeRegressor \u53bb\u62df\u5408\u8bad\u7ec3\u96c6\uff08\u4f8b\u5982\u4e00\u4e2a\u6709\u566a\u4e8c\u6b21\u8bad\u7ec3\u96c6\uff09\uff1a >>>from sklearn.tree import DecisionTreeRegressor >>>tree_reg1 = DecisionTreeRegressor(max_depth=2) >>>tree_reg1.fit(X, y) \u73b0\u5728\u5728\u7b2c\u4e00\u4e2a\u5206\u7c7b\u5668\u7684\u6b8b\u5dee\u4e0a\u8bad\u7ec3\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u5668\uff1a >>>y2 = y - tree_reg1.predict(X) >>>tree_reg2 = DecisionTreeRegressor(max_depth=2) >>>tree_reg2.fit(X, y2) \u968f\u540e\u5728\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u5668\u7684\u6b8b\u5dee\u4e0a\u8bad\u7ec3\u7b2c\u4e09\u4e2a\u5206\u7c7b\u5668\uff1a >>>y3 = y2 - tree_reg1.predict(X) >>>tree_reg3 = DecisionTreeRegressor(max_depth=2) >>>tree_reg3.fit(X, y3) \u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u5305\u542b\u4e09\u4e2a\u56de\u5f52\u5668\u7684\u96c6\u6210\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u96c6\u6210\u6240\u6709\u6811\u7684\u9884\u6d4b\u6765\u5728\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u9884\u6d4b\u3002 >>>y_pred = sum(tree.predict(X_new) for tree in (tree_reg1, tree_reg2, tree_reg3)) \u56fe7-9\u5728\u5de6\u680f\u5c55\u793a\u4e86\u8fd9\u4e09\u4e2a\u6811\u7684\u9884\u6d4b\uff0c\u5728\u53f3\u680f\u5c55\u793a\u4e86\u96c6\u6210\u7684\u9884\u6d4b\u3002\u5728\u7b2c\u4e00\u884c\uff0c\u96c6\u6210\u53ea\u6709\u4e00\u4e2a\u6811\uff0c\u6240\u4ee5\u5b83\u4e0e\u7b2c\u4e00\u4e2a\u6811\u7684\u9884\u6d4b\u76f8\u4f3c\u3002\u5728\u7b2c\u4e8c\u884c\uff0c\u4e00\u4e2a\u65b0\u7684\u6811\u5728\u7b2c\u4e00\u4e2a\u6811\u7684\u6b8b\u5dee\u4e0a\u8fdb\u884c\u8bad\u7ec3\u3002\u5728\u53f3\u8fb9\u680f\u53ef\u4ee5\u770b\u51fa\u96c6\u6210\u7684\u9884\u6d4b\u7b49\u4e8e\u524d\u4e24\u4e2a\u6811\u9884\u6d4b\u7684\u548c\u3002\u76f8\u540c\u7684\uff0c\u5728\u7b2c\u4e09\u884c\u53e6\u4e00\u4e2a\u6811\u5728\u7b2c\u4e8c\u4e2a\u6570\u7684\u6b8b\u5dee\u4e0a\u8bad\u7ec3\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u96c6\u6210\u7684\u9884\u6d4b\u4f1a\u53d8\u7684\u66f4\u597d\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 sklean \u4e2d\u7684 GradientBoostingRegressor \u6765\u8bad\u7ec3 GBRT \u96c6\u6210\u3002\u4e0e RandomForestClassifier \u76f8\u4f3c\uff0c\u5b83\u4e5f\u6709\u8d85\u53c2\u6570\u53bb\u63a7\u5236\u51b3\u7b56\u6811\u7684\u751f\u957f\uff08\u4f8b\u5982 max_depth \uff0c min_samples_leaf \u7b49\u7b49\uff09\uff0c\u4e5f\u6709\u8d85\u53c2\u6570\u53bb\u63a7\u5236\u96c6\u6210\u8bad\u7ec3\uff0c\u4f8b\u5982\u57fa\u5206\u7c7b\u5668\u7684\u6570\u91cf\uff08 n_estimators \uff09\u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e0e\u4e4b\u524d\u76f8\u540c\u7684\u96c6\u6210\uff1a >>>from sklearn.ensemble import GradientBoostingRegressor >>>gbrt = GradientBoostingRegressor(max_depth=2, n_estimators=3, learning_rate=1.0) >>>gbrt.fit(X, y) \u8d85\u53c2\u6570 learning_rate \u786e\u7acb\u4e86\u6bcf\u4e2a\u6811\u7684\u8d21\u732e\u3002\u5982\u679c\u4f60\u628a\u5b83\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5f88\u5c0f\u7684\u6811\uff0c\u4f8b\u5982 0.1\uff0c\u5728\u96c6\u6210\u4e2d\u5c31\u9700\u8981\u66f4\u591a\u7684\u6811\u53bb\u62df\u5408\u8bad\u7ec3\u96c6\uff0c\u4f46\u9884\u6d4b\u901a\u5e38\u4f1a\u66f4\u597d\u3002\u8fd9\u4e2a\u6b63\u5219\u5316\u6280\u672f\u53eb\u505a shrinkage \u3002\u56fe 7-10 \u5c55\u793a\u4e86\u4e24\u4e2a\u5728\u4f4e\u5b66\u4e60\u7387\u4e0a\u8bad\u7ec3\u7684 GBRT \u96c6\u6210\uff1a\u5176\u4e2d\u5de6\u9762\u662f\u4e00\u4e2a\u6ca1\u6709\u8db3\u591f\u6811\u53bb\u62df\u5408\u8bad\u7ec3\u96c6\u7684\u6811\uff0c\u53f3\u9762\u662f\u6709\u8fc7\u591a\u7684\u6811\u8fc7\u62df\u5408\u8bad\u7ec3\u96c6\u7684\u6811\u3002 \u4e3a\u4e86\u627e\u5230\u6811\u7684\u6700\u4f18\u6570\u91cf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u65e9\u505c\u6280\u672f\uff08\u7b2c\u56db\u7ae0\u8ba8\u8bba\uff09\u3002\u6700\u7b80\u5355\u4f7f\u7528\u8fd9\u4e2a\u6280\u672f\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528 staged_predict() \uff1a\u5b83\u5728\u8bad\u7ec3\u7684\u6bcf\u4e2a\u9636\u6bb5\uff08\u7528\u4e00\u68f5\u6811\uff0c\u4e24\u68f5\u6811\u7b49\uff09\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u52a0\u4e0b\u6765\u7684\u4ee3\u7801\u7528 120 \u4e2a\u6811\u8bad\u7ec3\u4e86\u4e00\u4e2a GBRT \u96c6\u6210\uff0c\u7136\u540e\u5728\u8bad\u7ec3\u7684\u6bcf\u4e2a\u9636\u6bb5\u9a8c\u8bc1\u9519\u8bef\u4ee5\u627e\u5230\u6811\u7684\u6700\u4f73\u6570\u91cf\uff0c\u6700\u540e\u4f7f\u7528 GBRT \u6811\u7684\u6700\u4f18\u6570\u91cf\u8bad\u7ec3\u53e6\u4e00\u4e2a\u96c6\u6210\uff1a >>>import numpy as np >>>from sklearn.model_selection import train_test_split >>>from sklearn.metrics import mean_squared_error >>>X_train, X_val, y_train, y_val = train_test_split(X, y) >>>gbrt = GradientBoostingRegressor(max_depth=2, n_estimators=120) >>>gbrt.fit(X_train, y_train) >>>errors = [mean_squared_error(y_val, y_pred) for y_pred in gbrt.staged_predict(X_val)] >>>bst_n_estimators = np.argmin(errors) >>>gbrt_best = GradientBoostingRegressor(max_depth=2,n_estimators=bst_n_estimators) >>>gbrt_best.fit(X_train, y_train) \u9a8c\u8bc1\u9519\u8bef\u5728\u56fe 7-11 \u7684\u5de6\u9762\u5c55\u793a\uff0c\u6700\u4f18\u6a21\u578b\u9884\u6d4b\u88ab\u5c55\u793a\u5728\u53f3\u9762\u3002 \u4f60\u4e5f\u53ef\u4ee5\u65e9\u65e9\u7684\u505c\u6b62\u8bad\u7ec3\u6765\u5b9e\u73b0\u65e9\u505c\uff08\u4e0e\u5148\u5728\u4e00\u5927\u5806\u6811\u4e2d\u8bad\u7ec3\uff0c\u7136\u540e\u518d\u56de\u5934\u53bb\u627e\u6700\u4f18\u6570\u76ee\u76f8\u53cd\uff09\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e warm_start=True \u6765\u5b9e\u73b0 \uff0c\u8fd9\u4f7f\u5f97\u5f53 fit() \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6 sklearn \u4fdd\u7559\u73b0\u6709\u6811\uff0c\u5e76\u5141\u8bb8\u589e\u91cf\u8bad\u7ec3\u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5728\u5f53\u4e00\u884c\u4e2d\u7684\u4e94\u6b21\u8fed\u4ee3\u9a8c\u8bc1\u9519\u8bef\u6ca1\u6709\u6539\u5584\u65f6\u4f1a\u505c\u6b62\u8bad\u7ec3\uff1a >>>gbrt = GradientBoostingRegressor(max_depth=2, warm_start=True) min_val_error = float(\"inf\") error_going_up = 0 for n_estimators in range(1, 120): gbrt.n_estimators = n_estimators gbrt.fit(X_train, y_train) y_pred = gbrt.predict(X_val) val_error = mean_squared_error(y_val, y_pred) if val_error < min_val_error: min_val_error = val_error error_going_up = 0 else: error_going_up += 1 if error_going_up == 5: break # early stopping GradientBoostingRegressor \u4e5f\u652f\u6301\u6307\u5b9a\u7528\u4e8e\u8bad\u7ec3\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u5b9e\u4f8b\u6bd4\u4f8b\u7684\u8d85\u53c2\u6570 subsample \u3002\u4f8b\u5982\u5982\u679c subsample=0.25 \uff0c\u90a3\u4e48\u6bcf\u4e2a\u6811\u90fd\u4f1a\u5728 25% \u968f\u673a\u9009\u62e9\u7684\u8bad\u7ec3\u5b9e\u4f8b\u4e0a\u8bad\u7ec3\u3002\u4f60\u73b0\u5728\u4e5f\u80fd\u731c\u51fa\u6765\uff0c\u8fd9\u4e5f\u662f\u4e2a\u9ad8\u504f\u5dee\u6362\u4f4e\u65b9\u5dee\u7684\u4f5c\u7528\u3002\u5b83\u540c\u6837\u4e5f\u52a0\u901f\u4e86\u8bad\u7ec3\u3002\u8fd9\u4e2a\u6280\u672f\u53eb\u505a \u968f\u673a\u68af\u5ea6\u63d0\u5347 \u3002 \u4e5f\u53ef\u80fd\u5bf9\u5176\u4ed6\u635f\u5931\u51fd\u6570\u4f7f\u7528\u68af\u5ea6\u63d0\u5347\u3002\u8fd9\u662f\u7531\u635f\u5931\u8d85\u53c2\u6570\u63a7\u5236\uff08\u89c1 sklearn \u6587\u6863\uff09\u3002 Stacking \u672c\u7ae0\u8ba8\u8bba\u7684\u6700\u540e\u4e00\u4e2a\u96c6\u6210\u65b9\u6cd5\u53eb\u505a Stacking \uff08 stacked generalization \u7684\u7f29\u5199\uff09\u3002\u8fd9\u4e2a\u7b97\u6cd5\u57fa\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\uff1a\u4e0d\u4f7f\u7528\u7410\u788e\u7684\u51fd\u6570\uff08\u5982\u786c\u6295\u7968\uff09\u6765\u805a\u5408\u96c6\u5408\u4e2d\u6240\u6709\u5206\u7c7b\u5668\u7684\u9884\u6d4b\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u6267\u884c\u8fd9\u4e2a\u805a\u5408\uff1f\u56fe 7-12 \u5c55\u793a\u4e86\u8fd9\u6837\u4e00\u4e2a\u5728\u65b0\u7684\u56de\u5f52\u5b9e\u4f8b\u4e0a\u9884\u6d4b\u7684\u96c6\u6210\u3002\u5e95\u90e8\u4e09\u4e2a\u5206\u7c7b\u5668\u6bcf\u4e00\u4e2a\u90fd\u6709\u4e0d\u540c\u7684\u503c\uff083.1\uff0c2.7 \u548c 2.9\uff09\uff0c\u7136\u540e\u6700\u540e\u4e00\u4e2a\u5206\u7c7b\u5668\uff08\u53eb\u505a blender \u6216\u8005 meta learner \uff09\u628a\u8fd9\u4e09\u4e2a\u5206\u7c7b\u5668\u7684\u7ed3\u679c\u5f53\u505a\u8f93\u5165\u7136\u540e\u505a\u51fa\u6700\u7ec8\u51b3\u7b56\uff083.0\uff09\u3002 \u4e3a\u4e86\u8bad\u7ec3\u8fd9\u4e2a blender \uff0c\u4e00\u4e2a\u901a\u7528\u7684\u65b9\u6cd5\u662f\u91c7\u7528\u4fdd\u6301\u96c6\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5b83\u600e\u4e48\u5de5\u4f5c\u3002\u9996\u5148\uff0c\u8bad\u7ec3\u96c6\u88ab\u5206\u4e3a\u4e24\u4e2a\u5b50\u96c6\uff0c\u7b2c\u4e00\u4e2a\u5b50\u96c6\u88ab\u7528\u4f5c\u8bad\u7ec3\u7b2c\u4e00\u5c42\uff08\u8be6\u89c1\u56fe 7-13\uff09. \u63a5\u4e0b\u6765\uff0c\u7b2c\u4e00\u5c42\u7684\u5206\u7c7b\u5668\u88ab\u7528\u6765\u9884\u6d4b\u7b2c\u4e8c\u4e2a\u5b50\u96c6\uff08\u4fdd\u6301\u96c6\uff09\uff08\u8be6\u89c1 7-14\uff09\u3002\u8fd9\u786e\u4fdd\u4e86\u9884\u6d4b\u7ed3\u679c\u5f88\u201c\u5e72\u51c0\u201d\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5206\u7c7b\u5668\u5728\u8bad\u7ec3\u7684\u65f6\u5019\u6ca1\u6709\u4f7f\u7528\u8fc7\u8fd9\u4e9b\u4e8b\u4f8b\u3002\u73b0\u5728\u5bf9\u5728\u4fdd\u6301\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u90fd\u6709\u4e09\u4e2a\u9884\u6d4b\u503c\u3002\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u9884\u6d4b\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\u7279\u5f81\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8bad\u7ec3\u96c6\uff08\u8fd9\u4f7f\u5f97\u8fd9\u4e2a\u8bad\u7ec3\u96c6\u662f\u4e09\u7ef4\u7684\uff09\uff0c\u5e76\u4e14\u4fdd\u6301\u76ee\u6807\u6570\u503c\u4e0d\u53d8\u3002\u968f\u540e blender \u5728\u8fd9\u4e2a\u65b0\u7684\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\uff0c\u56e0\u6b64\uff0c\u5b83\u5b66\u4f1a\u4e86\u9884\u6d4b\u7b2c\u4e00\u5c42\u9884\u6d4b\u7684\u76ee\u6807\u503c\u3002 \u663e\u7136\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u8bad\u7ec3\u4e0d\u540c\u7684 blender \uff08\u4f8b\u5982\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\uff0c\u53e6\u4e00\u4e2a\u662f\u968f\u673a\u68ee\u6797\u7b49\u7b49\uff09\uff1a\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u5c42 blender \u3002\u8bc0\u7a8d\u662f\u5c06\u8bad\u7ec3\u96c6\u5206\u6210\u4e09\u4e2a\u5b50\u96c6\uff1a\u7b2c\u4e00\u4e2a\u5b50\u96c6\u7528\u6765\u8bad\u7ec3\u7b2c\u4e00\u5c42\uff0c\u7b2c\u4e8c\u4e2a\u5b50\u96c6\u7528\u6765\u521b\u5efa\u8bad\u7ec3\u7b2c\u4e8c\u5c42\u7684\u8bad\u7ec3\u96c6\uff08\u4f7f\u7528\u7b2c\u4e00\u5c42\u5206\u7c7b\u5668\u7684\u9884\u6d4b\u503c\uff09\uff0c\u7b2c\u4e09\u4e2a\u5b50\u96c6\u88ab\u7528\u6765\u521b\u5efa\u8bad\u7ec3\u7b2c\u4e09\u5c42\u7684\u8bad\u7ec3\u96c6\uff08\u4f7f\u7528\u7b2c\u4e8c\u5c42\u5206\u7c7b\u5668\u7684\u9884\u6d4b\u503c\uff09\u3002\u4ee5\u4e0a\u6b65\u9aa4\u505a\u5b8c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9010\u4e2a\u904d\u5386\u6bcf\u4e2a\u5c42\u6765\u9884\u6d4b\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u3002\u8be6\u89c1\u56fe 7-15. \u7136\u800c\u4e0d\u5e78\u7684\u662f\uff0csklearn \u5e76\u4e0d\u76f4\u63a5\u652f\u6301 stacking \uff0c\u4f46\u662f\u4f60\u81ea\u5df1\u7ec4\u5efa\u662f\u5f88\u5bb9\u6613\u7684\uff08\u770b\u63a5\u4e0b\u6765\u7684\u7ec3\u4e60\uff09\u3002\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5f00\u6e90\u7684\u9879\u76ee\u4f8b\u5982 brew \uff08\u7f51\u5740\u4e3a https://github.com/viisar/brew \uff09 \u7ec3\u4e60 \u5982\u679c\u4f60\u5728\u76f8\u540c\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3 5 \u4e2a\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u5b83\u4eec\u90fd\u6709 95% \u7684\u51c6\u786e\u7387\uff0c\u90a3\u4e48\u4f60\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u8fd9\u4e2a\u6a21\u578b\u6765\u5f97\u5230\u66f4\u597d\u7684\u7ed3\u679c\uff1f\u5982\u679c\u53ef\u4ee5\u90a3\u600e\u4e48\u505a\u5462\uff1f\u5982\u679c\u4e0d\u53ef\u4ee5\u8bf7\u7ed9\u51fa\u7406\u7531\u3002 \u8f6f\u6295\u7968\u548c\u786c\u6295\u7968\u5206\u7c7b\u5668\u4e4b\u95f4\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u662f\u5426\u6709\u53ef\u80fd\u901a\u8fc7\u5206\u914d\u591a\u4e2a\u670d\u52a1\u5668\u6765\u52a0\u901f bagging \u96c6\u6210\u7cfb\u7edf\u7684\u8bad\u7ec3\uff1fpasting \u96c6\u6210\uff0cboosting \u96c6\u6210\uff0c\u968f\u673a\u68ee\u6797\uff0c\u6216 stacking \u96c6\u6210\u600e\u4e48\u6837\uff1f out-of-bag \u8bc4\u4ef7\u7684\u597d\u5904\u662f\u4ec0\u4e48\uff1f \u662f\u4ec0\u4e48\u4f7f Extra-Tree \u6bd4\u89c4\u5219\u968f\u673a\u68ee\u6797\u66f4\u968f\u673a\u5462\uff1f\u8fd9\u4e2a\u989d\u5916\u7684\u968f\u673a\u6709\u4ec0\u4e48\u5e2e\u52a9\u5462\uff1f\u90a3\u8fd9\u4e2a Extra-Tree \u6bd4\u89c4\u5219\u968f\u673a\u68ee\u6797\u8c01\u66f4\u5feb\u5462\uff1f \u5982\u679c\u4f60\u7684 Adaboost \u6a21\u578b\u6b20\u62df\u5408\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u600e\u4e48\u8c03\u6574\u8d85\u53c2\u6570\uff1f \u5982\u679c\u4f60\u7684\u68af\u5ea6\u63d0\u5347\u8fc7\u62df\u5408\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u8c03\u9ad8\u8fd8\u662f\u8c03\u4f4e\u5b66\u4e60\u7387\u5462\uff1f \u5bfc\u5165 MNIST \u6570\u636e\uff08\u7b2c\u4e09\u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff0c\u628a\u5b83\u5207\u5206\u8fdb\u4e00\u4e2a\u8bad\u7ec3\u96c6\uff0c\u4e00\u4e2a\u9a8c\u8bc1\u96c6\uff0c\u548c\u4e00\u4e2a\u6d4b\u8bd5\u96c6\uff08\u4f8b\u5982 40000 \u4e2a\u5b9e\u4f8b\u8fdb\u884c\u8bad\u7ec3\uff0c10000 \u4e2a\u8fdb\u884c\u9a8c\u8bc1\uff0c10000 \u4e2a\u8fdb\u884c\u6d4b\u8bd5\uff09\u3002\u7136\u540e\u8bad\u7ec3\u591a\u4e2a\u5206\u7c7b\u5668\uff0c\u4f8b\u5982\u4e00\u4e2a\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\uff0c\u4e00\u4e2a Extra-Tree \u5206\u7c7b\u5668\u548c\u4e00\u4e2a SVM\u3002\u63a5\u4e0b\u6765\uff0c\u5c1d\u8bd5\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u96c6\u6210\uff0c\u4f7f\u7528\u8f6f\u6216\u786c\u6295\u7968\u5206\u7c7b\u5668\u6765\u80dc\u8fc7\u9a8c\u8bc1\u96c6\u4e0a\u7684\u6240\u6709\u96c6\u5408\u3002\u4e00\u65e6\u627e\u5230\u4e86\uff0c\u5c31\u5728\u6d4b\u8bd5\u96c6\u4e0a\u5b9e\u9a8c\u3002\u4e0e\u5355\u4e2a\u5206\u7c7b\u5668\u76f8\u6bd4\uff0c\u5b83\u7684\u6027\u80fd\u6709\u591a\u597d\uff1f \u4ece\u7ec3\u4e60 8 \u4e2d\u8fd0\u884c\u4e2a\u4f53\u5206\u7c7b\u5668\u6765\u5bf9\u9a8c\u8bc1\u96c6\u8fdb\u884c\u9884\u6d4b\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8bad\u7ec3\u96c6\u5e76\u751f\u6210\u9884\u6d4b\uff1a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5305\u542b\u6765\u81ea\u6240\u6709\u5206\u7c7b\u5668\u7684\u56fe\u50cf\u7684\u9884\u6d4b\u96c6\uff0c\u76ee\u6807\u662f\u56fe\u50cf\u7c7b\u522b\u3002\u795d\u8d3a\u4f60\uff0c\u4f60\u521a\u521a\u8bad\u7ec3\u4e86\u4e00\u4e2a blender \uff0c\u548c\u5206\u7c7b\u5668\u4e00\u8d77\u7ec4\u6210\u4e86\u4e00\u4e2a\u53e0\u52a0\u7ec4\u5408\uff01\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u8bc4\u4f30\u6d4b\u8bd5\u96c6\u4e0a\u7684\u96c6\u5408\u3002\u5bf9\u4e8e\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u56fe\u50cf\uff0c\u7528\u6240\u6709\u5206\u7c7b\u5668\u8fdb\u884c\u9884\u6d4b\uff0c\u7136\u540e\u5c06\u9884\u6d4b\u9988\u9001\u5230 blender \u4ee5\u83b7\u5f97\u96c6\u5408\u7684\u9884\u6d4b\u3002\u5b83\u4e0e\u4f60\u65e9\u671f\u8bad\u7ec3\u8fc7\u7684\u6295\u7968\u5206\u7c7b\u5668\u76f8\u6bd4\u5982\u4f55\uff1f \u7ec3\u4e60\u7684\u7b54\u6848\u90fd\u5728\u9644\u5f55 A \u4e0a\u3002","title":"7.\u96c6\u6210\u5b66\u4e60\u548c\u968f\u673a\u68ee\u6797"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_1","text":"\u5047\u8bbe\u4f60\u53bb\u968f\u673a\u95ee\u5f88\u591a\u4eba\u4e00\u4e2a\u5f88\u590d\u6742\u7684\u95ee\u9898\uff0c\u7136\u540e\u628a\u5b83\u4eec\u7684\u7b54\u6848\u5408\u5e76\u8d77\u6765\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u5408\u5e76\u7684\u7b54\u6848\u6bd4\u4e00\u4e2a\u4e13\u5bb6\u7684\u7b54\u6848\u8981\u597d\u3002\u8fd9\u5c31\u53eb\u505a \u7fa4\u4f53\u667a\u6167 \u3002\u540c\u6837\u7684\uff0c\u5982\u679c\u4f60\u5408\u5e76\u4e86\u4e00\u7ec4\u5206\u7c7b\u5668\u7684\u9884\u6d4b\uff08\u50cf\u5206\u7c7b\u6216\u8005\u56de\u5f52\uff09\uff0c\u4f60\u4e5f\u4f1a\u5f97\u5230\u4e00\u4e2a\u6bd4\u5355\u4e00\u5206\u7c7b\u5668\u66f4\u597d\u7684\u9884\u6d4b\u7ed3\u679c\u3002\u8fd9\u4e00\u7ec4\u5206\u7c7b\u5668\u5c31\u53eb\u505a\u96c6\u6210\uff1b\u56e0\u6b64\uff0c\u8fd9\u4e2a\u6280\u672f\u5c31\u53eb\u505a\u96c6\u6210\u5b66\u4e60\uff0c\u4e00\u4e2a\u96c6\u6210\u5b66\u4e60\u7b97\u6cd5\u5c31\u53eb\u505a\u96c6\u6210\u65b9\u6cd5\u3002 \u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u8bad\u7ec3\u4e00\u7ec4\u51b3\u7b56\u6811\u5206\u7c7b\u5668\uff0c\u6bcf\u4e00\u4e2a\u90fd\u5728\u4e00\u4e2a\u968f\u673a\u7684\u8bad\u7ec3\u96c6\u4e0a\u3002\u4e3a\u4e86\u53bb\u505a\u9884\u6d4b\uff0c\u4f60\u5fc5\u987b\u5f97\u5230\u6240\u6709\u5355\u4e00\u6811\u7684\u9884\u6d4b\u503c\uff0c\u7136\u540e\u901a\u8fc7\u6295\u7968\uff08\u4f8b\u5982\u7b2c\u516d\u7ae0\u7684\u7ec3\u4e60\uff09\u6765\u9884\u6d4b\u7c7b\u522b\u3002\u4f8b\u5982\u4e00\u79cd\u51b3\u7b56\u6811\u7684\u96c6\u6210\u5c31\u53eb\u505a\u968f\u673a\u68ee\u6797\uff0c\u5b83\u9664\u4e86\u7b80\u5355\u4e4b\u5916\u4e5f\u662f\u73b0\u4eca\u5b58\u5728\u7684\u6700\u5f3a\u5927\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e4b\u4e00\u3002 \u5411\u6211\u4eec\u5728\u7b2c\u4e8c\u7ae0\u8ba8\u8bba\u7684\u4e00\u6837\uff0c\u6211\u4eec\u4f1a\u5728\u4e00\u4e2a\u9879\u76ee\u5feb\u7ed3\u675f\u7684\u65f6\u5019\u4f7f\u7528\u96c6\u6210\u7b97\u6cd5\uff0c\u4e00\u65e6\u4f60\u5efa\u7acb\u4e86\u4e00\u4e9b\u597d\u7684\u5206\u7c7b\u5668\uff0c\u5c31\u628a\u4ed6\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a\u66f4\u597d\u7684\u5206\u7c7b\u5668\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u673a\u5668\u5b66\u4e60\u7ade\u8d5b\u4e2d\u83b7\u5f97\u80dc\u5229\u7684\u7b97\u6cd5\u7ecf\u5e38\u4f1a\u5305\u542b\u4e00\u4e9b\u96c6\u6210\u65b9\u6cd5\u3002 \u5728\u672c\u7ae0\u4e2d\u6211\u4eec\u4f1a\u8ba8\u8bba\u4e00\u4e0b\u7279\u522b\u8457\u540d\u7684\u96c6\u6210\u65b9\u6cd5\uff0c\u5305\u62ec bagging, boosting, stacking \uff0c\u548c\u5176\u4ed6\u4e00\u4e9b\u7b97\u6cd5\u3002\u6211\u4eec\u4e5f\u4f1a\u8ba8\u8bba\u968f\u673a\u68ee\u6797\u3002","title":"\u4e03\u3001\u96c6\u6210\u5b66\u4e60\u548c\u968f\u673a\u68ee\u6797"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_2","text":"\u5047\u8bbe\u4f60\u5df2\u7ecf\u8bad\u7ec3\u4e86\u4e00\u4e9b\u5206\u7c7b\u5668\uff0c\u6bcf\u4e00\u4e2a\u90fd\u6709 80% \u7684\u51c6\u786e\u7387\u3002\u4f60\u53ef\u80fd\u6709\u4e86\u4e00\u4e2a\u903b\u8f91\u65af\u8482\u56de\u5f52\u3001\u6216\u4e00\u4e2a SVM\u3001\u6216\u4e00\u4e2a\u968f\u673a\u68ee\u6797\uff0c\u6216\u8005\u4e00\u4e2a KNN\uff0c\u6216\u8bb8\u8fd8\u6709\u66f4\u591a\uff08\u8be6\u89c1\u56fe 7-1\uff09 \u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u53bb\u521b\u5efa\u4e00\u4e2a\u66f4\u597d\u7684\u5206\u7c7b\u5668\u7684\u65b9\u6cd5\u5c31\u662f\u53bb\u6574\u5408\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u7684\u9884\u6d4b\u7136\u540e\u7ecf\u8fc7\u6295\u7968\u53bb\u9884\u6d4b\u5206\u7c7b\u3002\u8fd9\u79cd\u5206\u7c7b\u5668\u5c31\u53eb\u505a\u786c\u6295\u7968\u5206\u7c7b\u5668\uff08\u8be6\u89c1\u56fe 7-2\uff09\u3002 \u4ee4\u4eba\u60ca\u5947\u7684\u662f\u8fd9\u79cd\u6295\u7968\u5206\u7c7b\u5668\u5f97\u51fa\u7684\u7ed3\u679c\u7ecf\u5e38\u4f1a\u6bd4\u96c6\u6210\u4e2d\u6700\u597d\u7684\u4e00\u4e2a\u5206\u7c7b\u5668\u7ed3\u679c\u66f4\u597d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5373\u4f7f\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u662f\u4e00\u4e2a\u5f31\u5b66\u4e60\u5668\uff08\u610f\u5473\u7740\u5b83\u4eec\u4e5f\u5c31\u6bd4\u778e\u731c\u597d\u70b9\uff09\uff0c\u96c6\u6210\u540e\u4ecd\u7136\u662f\u4e00\u4e2a\u5f3a\u5b66\u4e60\u5668\uff08\u9ad8\u51c6\u786e\u7387\uff09\uff0c\u53ea\u8981\u6709\u8db3\u591f\u6570\u91cf\u7684\u5f31\u5b66\u4e60\u8005\uff0c\u4ed6\u4eec\u5c31\u8db3\u591f\u591a\u6837\u5316\u3002 \u8fd9\u600e\u4e48\u53ef\u80fd\uff1f\u63a5\u4e0b\u6765\u7684\u5206\u6790\u5c06\u5e2e\u52a9\u4f60\u89e3\u51b3\u8fd9\u4e2a\u7591\u95ee\u3002\u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u6709\u504f\u5dee\u7684\u786c\u5e01\uff0c\u4ed6\u6709 51% \u7684\u51e0\u7387\u4e3a\u6b63\u9762\uff0c49% \u7684\u51e0\u7387\u4e3a\u80cc\u9762\u3002\u5982\u679c\u4f60\u5b9e\u9a8c 1000 \u6b21\uff0c\u4f60\u4f1a\u5f97\u5230\u5dee\u4e0d\u591a 510 \u6b21\u6b63\u9762\uff0c490 \u6b21\u80cc\u9762\uff0c\u56e0\u6b64\u5927\u591a\u6570\u90fd\u662f\u6b63\u9762\u3002\u5982\u679c\u4f60\u7528\u6570\u5b66\u8ba1\u7b97\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\u5b9e\u9a8c 1000 \u6b21\u540e\uff0c\u6b63\u9762\u6982\u7387\u4e3a 51% \u7684\u4eba\u6bd4\u4f8b\u4e3a 75%\u3002\u4f60\u5b9e\u9a8c\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u6b63\u9762\u7684\u6bd4\u4f8b\u8d8a\u5927\uff08\u4f8b\u5982\u4f60\u8bd5\u9a8c\u4e86 10000 \u6b21\uff0c\u603b\u4f53\u6bd4\u4f8b\u53ef\u80fd\u6027\u5c31\u4f1a\u8fbe\u5230 97%\uff09\u3002\u8fd9\u662f\u56e0\u4e3a \u5927\u6570\u5b9a\u5f8b \uff1a\u5f53\u4f60\u4e00\u76f4\u7528\u786c\u5e01\u5b9e\u9a8c\u65f6\uff0c\u6b63\u9762\u7684\u6bd4\u4f8b\u4f1a\u8d8a\u6765\u8d8a\u63a5\u8fd1 51%\u3002\u56fe 7-3 \u5c55\u793a\u4e86\u59cb\u7ec8\u6709\u504f\u5dee\u7684\u786c\u5e01\u5b9e\u9a8c\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u5f53\u5b9e\u9a8c\u6b21\u6570\u4e0a\u5347\u65f6\uff0c\u6b63\u9762\u7684\u6982\u7387\u63a5\u8fd1\u4e8e 51%\u3002\u6700\u7ec8\u6240\u6709 10 \u79cd\u5b9e\u9a8c\u90fd\u4f1a\u6536\u655b\u5230 51%\uff0c\u5b83\u4eec\u90fd\u5927\u4e8e 50%\u3002 \u540c\u6837\u7684\uff0c\u5047\u8bbe\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u5305\u542b 1000 \u4e2a\u5206\u7c7b\u5668\u7684\u96c6\u6210\u6a21\u578b\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5206\u7c7b\u5668\u7684\u6b63\u786e\u7387\u53ea\u6709 51%\uff08\u4ec5\u6bd4\u778e\u731c\u597d\u4e00\u70b9\u70b9\uff09\u3002\u5982\u679c\u4f60\u7528\u6295\u7968\u53bb\u9884\u6d4b\u7c7b\u522b\uff0c\u4f60\u53ef\u80fd\u5f97\u5230 75% \u7684\u51c6\u786e\u7387\uff01\u7136\u800c\uff0c\u8fd9\u4ec5\u4ec5\u5728\u6240\u6709\u7684\u5206\u7c7b\u5668\u90fd\u72ec\u7acb\u8fd0\u884c\u7684\u5f88\u597d\u3001\u4e0d\u4f1a\u53d1\u751f\u6709\u76f8\u5173\u6027\u7684\u9519\u8bef\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u8fd9\u6837\uff0c\u7136\u800c\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u5728\u540c\u4e00\u4e2a\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\uff0c\u5bfc\u81f4\u5176\u5f88\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u9519\u8bef\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u72af\u540c\u4e00\u79cd\u9519\u8bef\uff0c\u6240\u4ee5\u4e5f\u4f1a\u6709\u5f88\u591a\u7968\u6295\u7ed9\u4e86\u9519\u8bef\u7c7b\u522b\u5bfc\u81f4\u96c6\u6210\u7684\u51c6\u786e\u7387\u4e0b\u964d\u3002 \u5982\u679c\u4f7f\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u72ec\u7acb\u81ea\u4e3b\u7684\u5206\u7c7b\uff0c\u90a3\u4e48\u96c6\u6210\u6a21\u578b\u4f1a\u5de5\u4f5c\u7684\u5f88\u597d\u3002\u53bb\u5f97\u5230\u591a\u6837\u7684\u5206\u7c7b\u5668\u7684\u65b9\u6cd5\u4e4b\u4e00\u5c31\u662f\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c\u8fd9\u4f1a\u4f7f\u5b83\u4eec\u4f1a\u505a\u51fa\u4e0d\u540c\u79cd\u7c7b\u7684\u9519\u8bef\uff0c\u8fd9\u4f1a\u63d0\u9ad8\u96c6\u6210\u7684\u6b63\u786e\u7387 \u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u521b\u5efa\u548c\u8bad\u7ec3\u4e86\u5728 sklearn \u4e2d\u7684\u6295\u7968\u5206\u7c7b\u5668\u3002\u8fd9\u4e2a\u5206\u7c7b\u5668\u7531\u4e09\u4e2a\u4e0d\u540c\u7684\u5206\u7c7b\u5668\u7ec4\u6210\uff08\u8bad\u7ec3\u96c6\u662f\u7b2c\u4e94\u7ae0\u4e2d\u7684 moons \u6570\u636e\u96c6\uff09\uff1a >>> from sklearn.ensemble import RandomForestClassifier >>> from sklearn.ensemble import VotingClassifier >>> from sklearn.linear_model import LogisticRegression >>> from sklearn.svm import SVC >>> log_clf = LogisticRegression() >>> rnd_clf = RandomForestClassifier() >>> svm_clf = SVC() >>> voting_clf = VotingClassifier(estimators=[('lr', log_clf), ('rf', rnd_clf), >>> ('svc', svm_clf)],voting='hard') >>> voting_clf.fit(X_train, y_train) \u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u51c6\u786e\u7387\uff1a >>> from sklearn.metrics import accuracy_score >>> for clf in (log_clf, rnd_clf, svm_clf, voting_clf): >>> clf.fit(X_train, y_train) >>> y_pred = clf.predict(X_test) >>> print(clf.__class__.__name__, accuracy_score(y_test, y_pred)) LogisticRegression 0.864 RandomForestClassifier 0.872 SVC 0.888 VotingClassifier 0.896 \u4f60\u770b\uff01\u6295\u7968\u5206\u7c7b\u5668\u6bd4\u5176\u4ed6\u5355\u72ec\u7684\u5206\u7c7b\u5668\u8868\u73b0\u7684\u90fd\u8981\u597d\u3002 \u5982\u679c\u6240\u6709\u7684\u5206\u7c7b\u5668\u90fd\u80fd\u591f\u9884\u6d4b\u7c7b\u522b\u7684\u6982\u7387\uff08\u4f8b\u5982\u4ed6\u4eec\u6709\u4e00\u4e2a predict_proba() \u65b9\u6cd5\uff09\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u8ba9 sklearn \u4ee5\u6700\u9ad8\u7684\u7c7b\u6982\u7387\u6765\u9884\u6d4b\u8fd9\u4e2a\u7c7b\uff0c\u5e73\u5747\u5728\u6240\u6709\u7684\u5206\u7c7b\u5668\u4e0a\u3002\u8fd9\u79cd\u65b9\u5f0f\u53eb\u505a\u8f6f\u6295\u7968\u3002\u4ed6\u7ecf\u5e38\u6bd4\u786c\u6295\u7968\u8868\u73b0\u7684\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u7ed9\u4e88\u9ad8\u81ea\u4fe1\u7684\u6295\u7968\u66f4\u5927\u7684\u6743\u91cd\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u628a voting=\"hard\" \u8bbe\u7f6e\u4e3a voting=\"soft\" \u6765\u4fdd\u8bc1\u5206\u7c7b\u5668\u53ef\u4ee5\u9884\u6d4b\u7c7b\u522b\u6982\u7387\u3002\u7136\u800c\u8fd9\u4e0d\u662f SVC \u7c7b\u7684\u5206\u7c7b\u5668\u9ed8\u8ba4\u7684\u9009\u9879\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u628a\u5b83\u7684 probability hyperparameter \u8bbe\u7f6e\u4e3a True \uff08\u8fd9\u4f1a\u4f7f SVC \u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u53bb\u9884\u6d4b\u7c7b\u522b\u6982\u7387\uff0c\u5176\u964d\u4f4e\u4e86\u8bad\u7ec3\u901f\u5ea6\uff0c\u4f46\u4f1a\u6dfb\u52a0 predict_proba() \u65b9\u6cd5\uff09\u3002\u5982\u679c\u4f60\u4fee\u6539\u4e86\u4e4b\u524d\u7684\u4ee3\u7801\u53bb\u4f7f\u7528\u8f6f\u6295\u7968\uff0c\u4f60\u4f1a\u53d1\u73b0\u6295\u7968\u5206\u7c7b\u5668\u6b63\u786e\u7387\u9ad8\u8fbe 91%","title":"\u6295\u7968\u5206\u7c7b"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#bagging-pasting","text":"\u5c31\u50cf\u4e4b\u524d\u8bb2\u5230\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u8bad\u7ec3\u7b97\u6cd5\u53bb\u5f97\u5230\u4e00\u4e9b\u4e0d\u540c\u7684\u5206\u7c7b\u5668\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u8bad\u7ec3\u7b97\u6cd5\uff0c\u4f46\u662f\u5728\u4e0d\u540c\u7684\u8bad\u7ec3\u96c6\u4e0a\u53bb\u8bad\u7ec3\u5b83\u4eec\u3002\u6709\u653e\u56de\u91c7\u6837\u88ab\u79f0\u4e3a\u88c5\u888b\uff08 Bagging \uff0c\u662f bootstrap aggregating \u7684\u7f29\u5199\uff09\u3002\u65e0\u653e\u56de\u91c7\u6837\u79f0\u4e3a\u7c98\u8d34\uff08 pasting \uff09\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cBagging \u548c Pasting \u90fd\u5141\u8bb8\u5728\u591a\u4e2a\u5206\u7c7b\u5668\u4e0a\u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884c\u591a\u6b21\u91c7\u6837\uff0c\u4f46\u53ea\u6709 Bagging \u5141\u8bb8\u5bf9\u540c\u4e00\u79cd\u5206\u7c7b\u5668\u4e0a\u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884c\u8fdb\u884c\u591a\u6b21\u91c7\u6837\u3002\u91c7\u6837\u548c\u8bad\u7ec3\u8fc7\u7a0b\u5982\u56fe7-4\u6240\u793a\u3002 \u5f53\u6240\u6709\u7684\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\u540e\uff0c\u96c6\u6210\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6240\u6709\u5206\u7c7b\u5668\u7ed3\u679c\u7684\u7b80\u5355\u805a\u5408\u6765\u5bf9\u65b0\u7684\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\u3002\u805a\u5408\u51fd\u6570\u901a\u5e38\u5bf9\u5206\u7c7b\u662f \u7edf\u8ba1\u6a21\u5f0f \uff08\u4f8b\u5982\u786c\u6295\u7968\u5206\u7c7b\u5668\uff09\u6216\u8005\u5bf9\u56de\u5f52\u662f\u5e73\u5747\u3002\u6bcf\u4e00\u4e2a\u5355\u72ec\u7684\u5206\u7c7b\u5668\u5728\u5982\u679c\u5728\u539f\u59cb\u8bad\u7ec3\u96c6\u4e0a\u90fd\u662f\u9ad8\u504f\u5dee\uff0c\u4f46\u662f\u805a\u5408\u964d\u4f4e\u4e86\u504f\u5dee\u548c\u65b9\u5dee\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u96c6\u6210\u7684\u7ed3\u679c\u662f\u6709\u4e00\u4e2a\u76f8\u4f3c\u7684\u504f\u5dee\uff0c\u4f46\u662f\u5bf9\u6bd4\u4e0e\u5728\u539f\u59cb\u8bad\u7ec3\u96c6\u4e0a\u7684\u5355\u4e00\u5206\u7c7b\u5668\u6765\u8bb2\u6709\u66f4\u5c0f\u7684\u65b9\u5dee\u3002 \u6b63\u5982\u4f60\u5728\u56fe 7-4 \u4e0a\u6240\u770b\u5230\u7684\uff0c\u5206\u7c7b\u5668\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684 CPU \u6838\u6216\u5176\u4ed6\u7684\u670d\u52a1\u5668\u4e00\u8d77\u88ab\u8bad\u7ec3\u3002\u76f8\u4f3c\u7684\uff0c\u5206\u7c7b\u5668\u4e5f\u53ef\u4ee5\u4e00\u8d77\u88ab\u5236\u4f5c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 Bagging \u548c Pasting \u662f\u5982\u6b64\u6d41\u884c\u7684\u539f\u56e0\u4e4b\u4e00\uff1a\u5b83\u4eec\u7684\u53ef\u6269\u5c55\u6027\u5f88\u597d\u3002","title":"Bagging \u548c Pasting"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#sklearn-bagging-pasting","text":"sklearn \u4e3a Bagging \u548c Pasting \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684API\uff1a BaggingClassifier \u7c7b\uff08\u6216\u8005\u5bf9\u4e8e\u56de\u5f52\u53ef\u4ee5\u662f BaggingRegressor \u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u8bad\u7ec3\u4e86\u4e00\u4e2a 500 \u4e2a\u51b3\u7b56\u6811\u5206\u7c7b\u5668\u7684\u96c6\u6210\uff0c\u6bcf\u4e00\u4e2a\u90fd\u662f\u5728\u6570\u636e\u96c6\u4e0a\u6709\u653e\u56de\u91c7\u6837 100 \u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u4e0b\u8fdb\u884c\u8bad\u7ec3\uff08\u8fd9\u662f Bagging \u7684\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u60f3\u5c1d\u8bd5 Pasting\uff0c\u5c31\u8bbe\u7f6e bootstrap=False \uff09\u3002 n_jobs \u53c2\u6570\u544a\u8bc9 sklearn \u7528\u4e8e\u8bad\u7ec3\u548c\u9884\u6d4b\u6240\u9700\u8981 CPU \u6838\u7684\u6570\u91cf\u3002\uff08-1 \u4ee3\u8868\u7740 sklearn \u4f1a\u4f7f\u7528\u6240\u6709\u7a7a\u95f2\u6838\uff09\uff1a >>>from sklearn.ensemble import BaggingClassifier >>>from sklearn.tree import DecisionTreeClassifier >>>bag_clf = BaggingClassifier(DecisionTreeClassifier(), n_estimators=500, >>> max_samples=100, bootstrap=True, n_jobs=-1) >>>bag_clf.fit(X_train, y_train) >>>y_pred = bag_clf.predict(X_test) \u5982\u679c\u57fa\u5206\u7c7b\u5668\u53ef\u4ee5\u9884\u6d4b\u7c7b\u522b\u6982\u7387\uff08\u4f8b\u5982\u5b83\u62e5\u6709 predict_proba() \u65b9\u6cd5\uff09\uff0c\u90a3\u4e48 BaggingClassifier \u4f1a\u81ea\u52a8\u7684\u8fd0\u884c\u8f6f\u6295\u7968\uff0c\u8fd9\u662f\u51b3\u7b56\u6811\u5206\u7c7b\u5668\u7684\u60c5\u51b5\u3002 \u56fe 7-5 \u5bf9\u6bd4\u4e86\u5355\u4e00\u51b3\u7b56\u6811\u7684\u51b3\u7b56\u8fb9\u754c\u548c Bagging \u96c6\u6210 500 \u4e2a\u6811\u7684\u51b3\u7b56\u8fb9\u754c\uff0c\u4e24\u8005\u90fd\u5728 moons \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u3002\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u96c6\u6210\u7684\u5206\u7c7b\u6bd4\u8d77\u5355\u4e00\u51b3\u7b56\u6811\u7684\u5206\u7c7b\u4ea7\u751f\u60c5\u51b5\u66f4\u597d\uff1a\u96c6\u6210\u6709\u4e00\u4e2a\u53ef\u6bd4\u8f83\u7684\u504f\u5dee\u4f46\u662f\u6709\u4e00\u4e2a\u8f83\u5c0f\u7684\u65b9\u5dee\uff08\u5b83\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u9519\u8bef\u6570\u76ee\u5927\u81f4\u76f8\u540c\uff0c\u4f46\u51b3\u7b56\u8fb9\u754c\u8f83\u4e0d\u89c4\u5219\uff09\u3002 Bootstrap \u5728\u6bcf\u4e2a\u9884\u6d4b\u5668\u88ab\u8bad\u7ec3\u7684\u5b50\u96c6\u4e2d\u5f15\u5165\u4e86\u66f4\u591a\u7684\u5206\u96c6\uff0c\u6240\u4ee5 Bagging \u7ed3\u675f\u65f6\u7684\u504f\u5dee\u6bd4 Pasting \u66f4\u9ad8\uff0c\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u9884\u6d4b\u56e0\u5b50\u6700\u7ec8\u53d8\u5f97\u4e0d\u76f8\u5173\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u96c6\u5408\u7684\u65b9\u5dee\u3002\u603b\u4f53\u800c\u8a00\uff0cBagging \u901a\u5e38\u4f1a\u5bfc\u81f4\u66f4\u597d\u7684\u6a21\u578b\uff0c\u8fd9\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5b83\u901a\u5e38\u662f\u9996\u9009\u7684\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u6709\u7a7a\u95f2\u65f6\u95f4\u548c CPU \u529f\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u8bc4\u4f30 Bagging \u548c Pasting \u54ea\u4e00\u4e2a\u66f4\u597d\u3002","title":"\u5728 sklearn \u4e2d\u7684 Bagging \u548c Pasting"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#out-of-bag","text":"\u5bf9\u4e8e Bagging \u6765\u8bf4\uff0c\u4e00\u4e9b\u5b9e\u4f8b\u53ef\u80fd\u88ab\u4e00\u4e9b\u5206\u7c7b\u5668\u91cd\u590d\u91c7\u6837\uff0c\u4f46\u5176\u4ed6\u7684\u6709\u53ef\u80fd\u4e0d\u4f1a\u88ab\u91c7\u6837\u3002 BaggingClassifier \u9ed8\u8ba4\u91c7\u6837\u3002 BaggingClassifier \u9ed8\u8ba4\u662f\u6709\u653e\u56de\u7684\u91c7\u6837 m \u4e2a\u5b9e\u4f8b \uff08 bootstrap=True \uff09\uff0c\u5176\u4e2d m \u662f\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\uff0c\u8fd9\u610f\u5473\u7740\u5e73\u5747\u4e0b\u6765\u53ea\u670963%\u7684\u8bad\u7ec3\u5b9e\u4f8b\u88ab\u6bcf\u4e2a\u5206\u7c7b\u5668\u91c7\u6837\uff0c\u5269\u4e0b\u768437%\u4e2a\u6ca1\u6709\u88ab\u91c7\u6837\u7684\u8bad\u7ec3\u5b9e\u4f8b\u5c31\u53eb\u505a Out-of-Bag \u5b9e\u4f8b\u3002\u6ce8\u610f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7684\u5206\u7c7b\u5668\u5b83\u4eec\u7684 37% \u4e0d\u662f\u76f8\u540c\u7684\u3002 \u56e0\u4e3a\u5728\u8bad\u7ec3\u4e2d\u5206\u7c7b\u5668\u4ece\u6765\u6ca1\u6709\u770b\u5230\u8fc7 oob \u5b9e\u4f8b\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u5728\u8fd9\u4e9b\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u8bc4\u4f30\uff0c\u800c\u4e0d\u9700\u8981\u5355\u72ec\u7684\u9a8c\u8bc1\u96c6\u6216\u4ea4\u53c9\u9a8c\u8bc1\u3002\u4f60\u53ef\u4ee5\u62ff\u51fa\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u7684 oob \u6765\u8bc4\u4f30\u96c6\u6210\u672c\u8eab\u3002 \u5728 sklearn \u4e2d\uff0c\u4f60\u53ef\u4ee5\u5728\u8bad\u7ec3\u540e\u9700\u8981\u521b\u5efa\u4e00\u4e2a BaggingClassifier \u6765\u81ea\u52a8\u8bc4\u4f30\u65f6\u8bbe\u7f6e oob_score=True \u6765\u81ea\u52a8\u8bc4\u4f30\u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u3002\u8bc4\u4f30\u7ed3\u679c\u901a\u8fc7\u53d8\u91cf oob_score_ \u6765\u663e\u793a\uff1a >>> bag_clf = BaggingClassifier(DecisionTreeClassifier(), n_estimators=500,bootstrap=True, n_jobs=-1, oob_score=True) >>> bag_clf.fit(X_train, y_train) >>> bag_clf.oob_score_ 0.93066666666666664 \u6839\u636e\u8fd9\u4e2a obb \u8bc4\u4f30\uff0c BaggingClassifier \u53ef\u4ee5\u518d\u6d4b\u8bd5\u96c6\u4e0a\u8fbe\u523093.1%\u7684\u51c6\u786e\u7387\uff0c\u8ba9\u6211\u4eec\u4fee\u6539\u4e00\u4e0b\uff1a >>> from sklearn.metrics import accuracy_score >>> y_pred = bag_clf.predict(X_test) >>> accuracy_score(y_test, y_pred) 0.93600000000000005 \u6211\u4eec\u5728\u6d4b\u8bd5\u96c6\u4e0a\u5f97\u5230\u4e86 93.6% \u7684\u51c6\u786e\u7387\uff0c\u8db3\u591f\u63a5\u8fd1\u4e86\uff01 \u5bf9\u4e8e\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b oob \u51b3\u7b56\u51fd\u6570\u4e5f\u53ef\u901a\u8fc7 oob_decision_function_ \u53d8\u91cf\u6765\u5c55\u793a\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff08\u5f53\u57fa\u51b3\u7b56\u5668\u6709 predict_proba() \u65f6\uff09\u51b3\u7b56\u51fd\u6570\u4f1a\u5bf9\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u8fd4\u56de\u7c7b\u522b\u6982\u7387\u3002\u4f8b\u5982\uff0coob \u8bc4\u4f30\u9884\u6d4b\u7b2c\u4e8c\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u6709 60.6% \u7684\u6982\u7387\u5c5e\u4e8e\u6b63\u7c7b\uff0839.4% \u5c5e\u4e8e\u8d1f\u7c7b\uff09\uff1a >>> bag_clf.oob_decision_function_ array([[ 0., 1.], [ 0.60588235, 0.39411765],[ 1., 0. ], ... [ 1. , 0. ],[ 0., 1.],[ 0.48958333, 0.51041667]])","title":"Out-of-Bag \u8bc4\u4ef7"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_3","text":"BaggingClassifier \u4e5f\u652f\u6301\u91c7\u6837\u7279\u5f81\u3002\u5b83\u88ab\u4e24\u4e2a\u8d85\u53c2\u6570 max_features \u548c bootstrap_features \u63a7\u5236\u3002\u4ed6\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u548c max_samples \u548c bootstrap \u4e00\u6837\uff0c\u4f46\u8fd9\u662f\u5bf9\u4e8e\u7279\u5f81\u91c7\u6837\u800c\u4e0d\u662f\u5b9e\u4f8b\u91c7\u6837\u3002\u56e0\u6b64\uff0c\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u4f1a\u88ab\u5728\u968f\u673a\u7684\u8f93\u5165\u7279\u5f81\u5185\u8fdb\u884c\u8bad\u7ec3\u3002 \u5f53\u4f60\u5728\u5904\u7406\u9ad8\u7ef4\u5ea6\u8f93\u5165\u4e0b\uff08\u4f8b\u5982\u56fe\u7247\uff09\u6b64\u65b9\u6cd5\u5c24\u5176\u6709\u6548\u3002\u5bf9\u8bad\u7ec3\u5b9e\u4f8b\u548c\u7279\u5f81\u7684\u91c7\u6837\u88ab\u53eb\u505a\u968f\u673a\u8d34\u7247\u3002\u4fdd\u7559\u4e86\u6240\u6709\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff08\u4f8b\u5982 bootstrap=False \u548c max_samples=1.0 \uff09\uff0c\u4f46\u662f\u5bf9\u7279\u5f81\u91c7\u6837\uff08 bootstrap_features=True \u5e76\u4e14/\u6216\u8005 max_features \u5c0f\u4e8e 1.0\uff09\u53eb\u505a\u968f\u673a\u5b50\u7a7a\u95f4\u3002 \u91c7\u6837\u7279\u5f81\u5bfc\u81f4\u66f4\u591a\u7684\u9884\u6d4b\u591a\u6837\u6027\uff0c\u7528\u9ad8\u504f\u5dee\u6362\u4f4e\u65b9\u5dee\u3002","title":"\u968f\u673a\u8d34\u7247\u4e0e\u968f\u673a\u5b50\u7a7a\u95f4"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_4","text":"\u6b63\u5982\u6211\u4eec\u6240\u8ba8\u8bba\u7684\uff0c\u968f\u673a\u68ee\u6797\u662f\u51b3\u7b56\u6811\u7684\u4e00\u79cd\u96c6\u6210\uff0c\u901a\u5e38\u662f\u901a\u8fc7 bagging \u65b9\u6cd5\uff08\u6709\u65f6\u662f pasting \u65b9\u6cd5\uff09\u8fdb\u884c\u8bad\u7ec3\uff0c\u901a\u5e38\u7528 max_samples \u8bbe\u7f6e\u4e3a\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u3002\u4e0e\u5efa\u7acb\u4e00\u4e2a BaggingClassifier \u7136\u540e\u628a\u5b83\u653e\u5165 DecisionTreeClassifier \u76f8\u53cd\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u66f4\u65b9\u4fbf\u7684\u4e5f\u662f\u5bf9\u51b3\u7b56\u6811\u4f18\u5316\u591f\u7684 RandomForestClassifier \uff08\u5bf9\u4e8e\u56de\u5f52\u662f RandomForestRegressor \uff09\u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u8bad\u7ec3\u4e86\u5e26\u6709 500 \u4e2a\u6811\uff08\u6bcf\u4e2a\u88ab\u9650\u5236\u4e3a 16 \u53f6\u5b50\u7ed3\u70b9\uff09\u7684\u51b3\u7b56\u68ee\u6797\uff0c\u4f7f\u7528\u6240\u6709\u7a7a\u95f2\u7684 CPU \u6838\uff1a >>>from sklearn.ensemble import RandomForestClassifier >>>rnd_clf = RandomForestClassifier(n_estimators=500, max_leaf_nodes=16, n_jobs=-1) >>>rnd_clf.fit(X_train, y_train) >>>y_pred_rf = rnd_clf.predict(X_test) \u9664\u4e86\u4e00\u4e9b\u4f8b\u5916\uff0c RandomForestClassifier \u4f7f\u7528 DecisionTreeClassifier \u7684\u6240\u6709\u8d85\u53c2\u6570\uff08\u51b3\u5b9a\u6570\u600e\u4e48\u751f\u957f\uff09\uff0c\u628a BaggingClassifier \u7684\u8d85\u53c2\u6570\u52a0\u8d77\u6765\u6765\u63a7\u5236\u96c6\u6210\u672c\u8eab\u3002 \u968f\u673a\u68ee\u6797\u7b97\u6cd5\u5728\u6811\u751f\u957f\u65f6\u5f15\u5165\u4e86\u989d\u5916\u7684\u968f\u673a\uff1b\u4e0e\u5728\u8282\u70b9\u5206\u88c2\u65f6\u9700\u8981\u627e\u5230\u6700\u597d\u5206\u88c2\u7279\u5f81\u76f8\u53cd\uff08\u8be6\u89c1\u7b2c\u516d\u7ae0\uff09\uff0c\u5b83\u5728\u4e00\u4e2a\u968f\u673a\u7684\u7279\u5f81\u96c6\u4e2d\u627e\u6700\u597d\u7684\u7279\u5f81\u3002\u5b83\u5bfc\u81f4\u4e86\u6811\u7684\u5dee\u5f02\u6027\uff0c\u5e76\u4e14\u518d\u4e00\u6b21\u7528\u9ad8\u504f\u5dee\u6362\u4f4e\u65b9\u5dee\uff0c\u603b\u7684\u6765\u8bf4\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u6a21\u578b\u3002\u4ee5\u4e0b\u662f BaggingClassifier \u5927\u81f4\u76f8\u5f53\u4e8e\u4e4b\u524d\u7684 randomforestclassifier \uff1a >>>bag_clf = BaggingClassifier(DecisionTreeClassifier(splitter=\"random\", max_leaf_nodes=16),n_estimators=500, max_samples=1.0, bootstrap=True, n_jobs=-1)","title":"\u968f\u673a\u68ee\u6797"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_5","text":"\u5f53\u4f60\u5728\u968f\u673a\u68ee\u6797\u4e0a\u751f\u957f\u6811\u65f6\uff0c\u5728\u6bcf\u4e2a\u7ed3\u70b9\u5206\u88c2\u65f6\u53ea\u8003\u8651\u968f\u673a\u7279\u5f81\u96c6\u4e0a\u7684\u7279\u5f81\uff08\u6b63\u5982\u4e4b\u524d\u8ba8\u8bba\u8fc7\u7684\u4e00\u6837\uff09\u3002\u76f8\u6bd4\u4e8e\u627e\u5230\u66f4\u597d\u7684\u7279\u5f81\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5bf9\u7279\u5f81\u4f7f\u7528\u968f\u673a\u9608\u503c\u4f7f\u6811\u66f4\u52a0\u968f\u673a\uff08\u50cf\u89c4\u5219\u51b3\u7b56\u6811\u4e00\u6837\uff09\u3002 \u8fd9\u79cd\u6781\u7aef\u968f\u673a\u7684\u6811\u88ab\u7b80\u79f0\u4e3a Extremely Randomized Trees \uff08\u6781\u7aef\u968f\u673a\u6811\uff09\uff0c\u6216\u8005\u66f4\u7b80\u5355\u7684\u79f0\u4e3a Extra-Tree \u3002\u518d\u4e00\u6b21\u7528\u9ad8\u504f\u5dee\u6362\u4f4e\u65b9\u5dee\u3002\u5b83\u8fd8\u4f7f\u5f97 Extra-Tree \u6bd4\u89c4\u5219\u7684\u968f\u673a\u68ee\u6797\u66f4\u5feb\u5730\u8bad\u7ec3\uff0c\u56e0\u4e3a\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u627e\u5230\u6bcf\u4e2a\u7279\u5f81\u7684\u6700\u4f73\u9608\u503c\u662f\u751f\u957f\u6811\u6700\u8017\u65f6\u7684\u4efb\u52a1\u4e4b\u4e00\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 sklearn \u7684 ExtraTreesClassifier \u6765\u521b\u5efa\u4e00\u4e2a Extra-Tree \u5206\u7c7b\u5668\u3002\u4ed6\u7684 API \u8ddf RandomForestClassifier \u662f\u76f8\u540c\u7684\uff0c\u76f8\u4f3c\u7684\uff0c ExtraTreesRegressor \u8ddf RandomForestRegressor \u4e5f\u662f\u76f8\u540c\u7684 API\u3002 \u6211\u4eec\u5f88\u96be\u53bb\u5206\u8fa8 ExtraTreesClassifier \u548c RandomForestClassifier \u5230\u5e95\u54ea\u4e2a\u66f4\u597d\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u662f\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u6765\u6bd4\u8f83\u5b83\u4eec\uff08\u4f7f\u7528\u7f51\u683c\u641c\u7d22\u8c03\u6574\u8d85\u53c2\u6570\uff09\u3002","title":"\u6781\u7aef\u968f\u673a\u6811"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_6","text":"\u6700\u540e\uff0c\u5982\u679c\u4f60\u89c2\u5bdf\u4e00\u4e2a\u5355\u4e00\u51b3\u7b56\u6811\uff0c\u91cd\u8981\u7684\u7279\u5f81\u4f1a\u51fa\u73b0\u5728\u66f4\u9760\u8fd1\u6839\u90e8\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u91cd\u8981\u7684\u7279\u5f81\u4f1a\u7ecf\u5e38\u51fa\u73b0\u5728\u9760\u8fd1\u53f6\u5b50\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u4e00\u4e2a\u7279\u5f81\u5728\u68ee\u6797\u7684\u5168\u90e8\u6811\u4e2d\u51fa\u73b0\u7684\u5e73\u5747\u6df1\u5ea6\u6765\u9884\u6d4b\u7279\u5f81\u7684\u91cd\u8981\u6027\u3002sklearn \u5728\u8bad\u7ec3\u540e\u4f1a\u81ea\u52a8\u8ba1\u7b97\u6bcf\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u5ea6\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7 feature_importances_ \u53d8\u91cf\u6765\u67e5\u770b\u7ed3\u679c\u3002\u4f8b\u5982\u5982\u4e0b\u4ee3\u7801\u5728 iris \u6570\u636e\u96c6\uff08\u7b2c\u56db\u7ae0\u4ecb\u7ecd\uff09\u4e0a\u8bad\u7ec3\u4e86\u4e00\u4e2a RandomForestClassifier \u6a21\u578b\uff0c\u7136\u540e\u8f93\u51fa\u4e86\u6bcf\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u6027\u3002\u770b\u6765\uff0c\u6700\u91cd\u8981\u7684\u7279\u5f81\u662f\u82b1\u74e3\u957f\u5ea6\uff0844%\uff09\u548c\u5bbd\u5ea6\uff0842%\uff09\uff0c\u800c\u843c\u7247\u957f\u5ea6\u548c\u5bbd\u5ea6\u76f8\u5bf9\u6bd4\u8f83\u662f\u4e0d\u91cd\u8981\u7684\uff08\u5206\u522b\u4e3a 11% \u548c 2%\uff09\uff1a >>> from sklearn.datasets import load_iris >>> iris = load_iris() >>> rnd_clf = RandomForestClassifier(n_estimators=500, n_jobs=-1) >>> rnd_clf.fit(iris[\"data\"], iris[\"target\"]) >>> for name, score in zip(iris[\"feature_names\"], rnd_clf.feature_importances_): >>> print(name, score) sepal length (cm) 0.112492250999 sepal width (cm) 0.0231192882825 petal length (cm) 0.441030464364 petal width (cm) 0.423357996355 \u76f8\u4f3c\u7684\uff0c\u5982\u679c\u4f60\u5728 MNIST \u6570\u636e\u53ca\u4e0a\u8bad\u7ec3\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\uff08\u5728\u7b2c\u4e09\u7ae0\u4e0a\u4ecb\u7ecd\uff09\uff0c\u7136\u540e\u753b\u51fa\u6bcf\u4e2a\u50cf\u7d20\u7684\u91cd\u8981\u6027\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u56fe 7-6 \u7684\u56fe\u7247\u3002 \u968f\u673a\u68ee\u6797\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5feb\u901f\u5f97\u4e86\u89e3\u54ea\u4e9b\u7279\u5f81\u5b9e\u9645\u4e0a\u662f\u91cd\u8981\u7684\uff0c\u7279\u522b\u662f\u4f60\u9700\u8981\u8fdb\u884c\u7279\u5f81\u9009\u62e9\u7684\u65f6\u5019\u3002","title":"\u7279\u5f81\u91cd\u8981\u5ea6"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_7","text":"\u63d0\u5347\uff08Boosting\uff0c\u6700\u521d\u79f0\u4e3a \u5047\u8bbe\u589e\u5f3a \uff09\u6307\u7684\u662f\u53ef\u4ee5\u5c06\u51e0\u4e2a\u5f31\u5b66\u4e60\u8005\u7ec4\u5408\u6210\u5f3a\u5b66\u4e60\u8005\u7684\u96c6\u6210\u65b9\u6cd5\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7684\u63d0\u5347\u65b9\u6cd5\u7684\u601d\u60f3\u5c31\u662f\u6309\u987a\u5e8f\u53bb\u8bad\u7ec3\u5206\u7c7b\u5668\uff0c\u6bcf\u4e00\u4e2a\u90fd\u8981\u5c1d\u8bd5\u4fee\u6b63\u524d\u9762\u7684\u5206\u7c7b\u3002\u73b0\u5982\u4eca\u5df2\u7ecf\u6709\u5f88\u591a\u7684\u63d0\u5347\u65b9\u6cd5\u4e86\uff0c\u4f46\u6700\u8457\u540d\u7684\u5c31\u662f Adaboost \uff08\u9002\u5e94\u6027\u63d0\u5347\uff0c\u662f Adaptive Boosting \u7684\u7b80\u79f0\uff09 \u548c Gradient Boosting \uff08\u68af\u5ea6\u63d0\u5347\uff09\u3002\u8ba9\u6211\u4eec\u5148\u4ece Adaboost \u8bf4\u8d77\u3002","title":"\u63d0\u5347"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#adaboost","text":"\u4f7f\u4e00\u4e2a\u65b0\u7684\u5206\u7c7b\u5668\u53bb\u4fee\u6b63\u4e4b\u524d\u5206\u7c7b\u7ed3\u679c\u7684\u65b9\u6cd5\u5c31\u662f\u5bf9\u4e4b\u524d\u5206\u7c7b\u7ed3\u679c\u4e0d\u5bf9\u7684\u8bad\u7ec3\u5b9e\u4f8b\u591a\u52a0\u5173\u6ce8\u3002\u8fd9\u5bfc\u81f4\u65b0\u7684\u9884\u6d4b\u56e0\u5b50\u8d8a\u6765\u8d8a\u591a\u5730\u805a\u7126\u4e8e\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u662f Adaboost \u4f7f\u7528\u7684\u6280\u672f\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u53bb\u6784\u5efa\u4e00\u4e2a Adaboost \u5206\u7c7b\u5668\uff0c\u7b2c\u4e00\u4e2a\u57fa\u5206\u7c7b\u5668\uff08\u4f8b\u5982\u4e00\u4e2a\u51b3\u7b56\u6811\uff09\u88ab\u8bad\u7ec3\u7136\u540e\u5728\u8bad\u7ec3\u96c6\u4e0a\u505a\u9884\u6d4b\uff0c\u5728\u8bef\u5206\u7c7b\u8bad\u7ec3\u5b9e\u4f8b\u4e0a\u7684\u6743\u91cd\u5c31\u589e\u52a0\u4e86\u3002\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u673a\u4f7f\u7528\u66f4\u65b0\u8fc7\u7684\u6743\u91cd\u7136\u540e\u518d\u4e00\u6b21\u8bad\u7ec3\uff0c\u6743\u91cd\u66f4\u65b0\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff08\u8be6\u89c1\u56fe 7-7\uff09 \u56fe 7-8 \u663e\u793a\u8fde\u7eed\u4e94\u6b21\u9884\u6d4b\u7684 moons \u6570\u636e\u96c6\u7684\u51b3\u7b56\u8fb9\u754c\uff08\u5728\u672c\u4f8b\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u662f\u9ad8\u5ea6\u6b63\u5219\u5316\u5e26\u6709 RBF \u6838\u7684 SVM\uff09\u3002\u7b2c\u4e00\u4e2a\u5206\u7c7b\u5668\u8bef\u5206\u7c7b\u4e86\u5f88\u591a\u5b9e\u4f8b\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u6743\u91cd\u88ab\u63d0\u5347\u4e86\u3002\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u5668\u56e0\u6b64\u5bf9\u8fd9\u4e9b\u8bef\u5206\u7c7b\u7684\u5b9e\u4f8b\u5206\u7c7b\u6548\u679c\u66f4\u597d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u53f3\u8fb9\u7684\u56fe\u4ee3\u8868\u4e86\u9664\u4e86\u5b66\u4e60\u7387\u51cf\u534a\u5916\uff08\u8bef\u5206\u7c7b\u5b9e\u4f8b\u6743\u91cd\u6bcf\u6b21\u8fed\u4ee3\u4e0a\u5347\u4e00\u534a\uff09\u76f8\u540c\u7684\u9884\u6d4b\u5e8f\u5217\u3002\u4f60\u53ef\u4ee5\u770b\u51fa\uff0c\u5e8f\u5217\u5b66\u4e60\u6280\u672f\u4e0e\u68af\u5ea6\u4e0b\u964d\u5f88\u76f8\u4f3c\uff0c\u9664\u4e86\u8c03\u6574\u5355\u4e2a\u9884\u6d4b\u56e0\u5b50\u7684\u53c2\u6570\u4ee5\u6700\u5c0f\u5316\u4ee3\u4ef7\u51fd\u6570\u4e4b\u5916\uff0cAdaBoost \u589e\u52a0\u4e86\u96c6\u5408\u7684\u9884\u6d4b\u5668\uff0c\u9010\u6e10\u4f7f\u5176\u66f4\u597d\u3002 \u4e00\u65e6\u6240\u6709\u7684\u5206\u7c7b\u5668\u90fd\u88ab\u8bad\u7ec3\u540e\uff0c\u9664\u4e86\u5206\u7c7b\u5668\u6839\u636e\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u88ab\u8d4b\u4e88\u7684\u6743\u91cd\u5916\uff0c\u96c6\u6210\u9884\u6d4b\u5c31\u975e\u5e38\u50cfBagging\u548cPasting\u4e86\u3002 \u5e8f\u5217\u5b66\u4e60\u6280\u672f\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u7f3a\u70b9\u5c31\u662f\uff1a\u5b83\u4e0d\u80fd\u88ab\u5e76\u884c\u5316\uff08\u53ea\u80fd\u6309\u6b65\u9aa4\uff09\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5206\u7c7b\u5668\u53ea\u80fd\u5728\u4e4b\u524d\u7684\u5206\u7c7b\u5668\u5df2\u7ecf\u88ab\u8bad\u7ec3\u548c\u8bc4\u4ef7\u540e\u518d\u8fdb\u884c\u8bad\u7ec3\u3002\u56e0\u6b64\uff0c\u5b83\u4e0d\u50cfBagging\u548cPasting\u4e00\u6837\u3002 \u8ba9\u6211\u4eec\u8be6\u7ec6\u770b\u4e00\u4e0b Adaboost \u7b97\u6cd5\u3002\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u7684\u6743\u91cd wi \u521d\u59cb\u90fd\u88ab\u8bbe\u4e3a 1/m \u7b2c\u4e00\u4e2a\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\uff0c\u7136\u540e\u4ed6\u7684\u6743\u91cd\u8bef\u5dee\u7387 r1 \u5728\u8bad\u7ec3\u96c6\u4e0a\u7b97\u51fa\uff0c\u8be6\u89c1\u516c\u5f0f 7-1\u3002 \u516c\u5f0f7-1\uff1a\u7b2c j \u4e2a\u5206\u7c7b\u5668\u7684\u6743\u91cd\u8bef\u5dee\u7387 \u5176\u4e2d \u662f\u7b2c j \u4e2a\u5206\u7c7b\u5668\u5bf9\u4e8e\u7b2c i \u5b9e\u4f8b\u7684\u9884\u6d4b\u3002 \u5206\u7c7b\u5668\u7684\u6743\u91cd \u968f\u540e\u7528\u516c\u5f0f 7-2 \u8ba1\u7b97\u51fa\u6765\u3002\u5176\u4e2d \u03b7 \u662f\u8d85\u53c2\u6570\u5b66\u4e60\u7387\uff08\u9ed8\u8ba4\u4e3a 1\uff09\u3002\u5206\u7c7b\u5668\u51c6\u786e\u7387\u8d8a\u9ad8\uff0c\u5b83\u7684\u6743\u91cd\u5c31\u8d8a\u9ad8\u3002\u5982\u679c\u5b83\u53ea\u662f\u778e\u731c\uff0c\u90a3\u4e48\u5b83\u7684\u6743\u91cd\u4f1a\u8d8b\u8fd1\u4e8e 0\u3002\u7136\u800c\uff0c\u5982\u679c\u5b83\u603b\u662f\u51fa\u9519\uff08\u6bd4\u778e\u731c\u7684\u51e0\u7387\u90fd\u4f4e\uff09\uff0c\u5b83\u7684\u6743\u91cd\u4f1a\u4f7f\u8d1f\u6570\u3002 \u516c\u5f0f 7-2\uff1a\u5206\u7c7b\u5668\u6743\u91cd \u63a5\u4e0b\u6765\u5b9e\u4f8b\u7684\u6743\u91cd\u4f1a\u6309\u7167\u516c\u5f0f 7-3 \u66f4\u65b0\uff1a\u8bef\u5206\u7c7b\u7684\u5b9e\u4f8b\u6743\u91cd\u4f1a\u88ab\u63d0\u5347\u3002 \u516c\u5f0f7-3 \u6743\u91cd\u66f4\u65b0\u89c4\u5219 \u5bf9\u4e8e i=1, 2, ..., m \u968f\u540e\u6240\u6709\u5b9e\u4f8b\u7684\u6743\u91cd\u90fd\u88ab\u5f52\u4e00\u5316\uff08\u4f8b\u5982\u88ab \u6574\u9664\uff09 \u6700\u540e\uff0c\u4e00\u4e2a\u65b0\u7684\u5206\u7c7b\u5668\u901a\u8fc7\u66f4\u65b0\u8fc7\u7684\u6743\u91cd\u8bad\u7ec3\uff0c\u6574\u4e2a\u8fc7\u7a0b\u88ab\u91cd\u590d\uff08\u65b0\u7684\u5206\u7c7b\u5668\u6743\u91cd\u88ab\u8ba1\u7b97\uff0c\u5b9e\u4f8b\u7684\u6743\u91cd\u88ab\u66f4\u65b0\uff0c\u968f\u540e\u53e6\u4e00\u4e2a\u5206\u7c7b\u5668\u88ab\u8bad\u7ec3\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002\u5f53\u89c4\u5b9a\u7684\u5206\u7c7b\u5668\u6570\u91cf\u8fbe\u5230\u6216\u8005\u6700\u597d\u7684\u5206\u7c7b\u5668\u88ab\u627e\u5230\u540e\u7b97\u6cd5\u5c31\u4f1a\u505c\u6b62\u3002 \u4e3a\u4e86\u8fdb\u884c\u9884\u6d4b\uff0cAdaboost \u901a\u8fc7\u5206\u7c7b\u5668\u6743\u91cd \u7b80\u5355\u7684\u8ba1\u7b97\u4e86\u6240\u6709\u7684\u5206\u7c7b\u5668\u548c\u6743\u91cd\u3002\u9884\u6d4b\u7c7b\u522b\u4f1a\u662f\u6743\u91cd\u6295\u7968\u4e2d\u4e3b\u8981\u7684\u7c7b\u522b\u3002\uff08\u8be6\u89c1\u516c\u5f0f 7-4\uff09 \u516c\u5f0f7-4\uff1a Adaboost \u5206\u7c7b\u5668 \u5176\u4e2d N \u662f\u5206\u7c7b\u5668\u7684\u6570\u91cf\u3002 sklearn \u901a\u5e38\u4f7f\u7528 Adaboost \u7684\u591a\u5206\u7c7b\u7248\u672c SAMME \uff08\u8fd9\u5c31\u4ee3\u8868\u4e86 \u5206\u6bb5\u52a0\u5efa\u6a21\u4f7f\u7528\u591a\u7c7b\u6307\u6570\u635f\u5931\u51fd\u6570 \uff09\u3002\u5982\u679c\u53ea\u6709\u4e24\u7c7b\u522b\uff0c\u90a3\u4e48 SAMME \u662f\u4e0e Adaboost \u76f8\u540c\u7684\u3002\u5982\u679c\u5206\u7c7b\u5668\u53ef\u4ee5\u9884\u6d4b\u7c7b\u522b\u6982\u7387\uff08\u4f8b\u5982\u5982\u679c\u5b83\u4eec\u6709 predict_proba() \uff09\uff0c\u5982\u679c sklearn \u53ef\u4ee5\u4f7f\u7528 SAMME \u53eb\u505a SAMME.R \u7684\u53d8\u91cf\uff08R \u4ee3\u8868\u201cREAL\u201d\uff09\uff0c\u8fd9\u79cd\u4f9d\u8d56\u4e8e\u7c7b\u522b\u6982\u7387\u7684\u901a\u5e38\u6bd4\u4f9d\u8d56\u4e8e\u5206\u7c7b\u5668\u7684\u66f4\u597d\u3002 \u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u8bad\u7ec3\u4e86\u4f7f\u7528 sklearn \u7684 AdaBoostClassifier \u57fa\u4e8e 200 \u4e2a\u51b3\u7b56\u6811\u6869 Adaboost \u5206\u7c7b\u5668\uff08\u6b63\u5982\u4f60\u8bf4\u671f\u5f85\u7684\uff0c\u5bf9\u4e8e\u56de\u5f52\u4e5f\u6709 AdaBoostRegressor \uff09\u3002\u4e00\u4e2a\u51b3\u7b56\u6811\u6869\u662f max_depth=1 \u7684\u51b3\u7b56\u6811-\u6362\u53e5\u8bdd\u8bf4\uff0c\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u51b3\u7b56\u8282\u70b9\u52a0\u4e0a\u4e24\u4e2a\u53f6\u5b50\u7ed3\u70b9\u3002\u8fd9\u5c31\u662f AdaBoostClassifier \u7684\u9ed8\u8ba4\u57fa\u5206\u7c7b\u5668\uff1a >>>from sklearn.ensemble import AdaBoostClassifier >>>ada_clf = AdaBoostClassifier(DecisionTreeClassifier(max_depth=1), n_estimators=200,algorithm=\"SAMME.R\", learning_rate=0.5) >>>ada_clf.fit(X_train, y_train) \u5982\u679c\u4f60\u7684 Adaboost \u96c6\u6210\u8fc7\u62df\u5408\u4e86\u8bad\u7ec3\u96c6\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u51cf\u5c11\u57fa\u5206\u7c7b\u5668\u7684\u6570\u91cf\u6216\u8005\u5bf9\u57fa\u5206\u7c7b\u5668\u4f7f\u7528\u66f4\u5f3a\u7684\u6b63\u5219\u5316\u3002","title":"Adaboost"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_8","text":"\u53e6\u4e00\u4e2a\u975e\u5e38\u8457\u540d\u7684\u63d0\u5347\u7b97\u6cd5\u662f\u68af\u5ea6\u63d0\u5347\u3002\u4e0e Adaboost \u4e00\u6837\uff0c\u68af\u5ea6\u63d0\u5347\u4e5f\u662f\u901a\u8fc7\u5411\u96c6\u6210\u4e2d\u9010\u6b65\u589e\u52a0\u5206\u7c7b\u5668\u8fd0\u884c\u7684\uff0c\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u90fd\u4fee\u6b63\u4e4b\u524d\u7684\u5206\u7c7b\u7ed3\u679c\u3002\u7136\u800c\uff0c\u5b83\u5e76\u4e0d\u50cf Adaboost \u90a3\u6837\u6bcf\u4e00\u6b21\u8fed\u4ee3\u90fd\u66f4\u6539\u5b9e\u4f8b\u7684\u6743\u91cd\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u53bb\u4f7f\u7528\u65b0\u7684\u5206\u7c7b\u5668\u53bb\u62df\u5408\u524d\u9762\u5206\u7c7b\u5668\u9884\u6d4b\u7684 \u6b8b\u5dee \u3002 \u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f7f\u7528\u51b3\u7b56\u6811\u5f53\u505a\u57fa\u5206\u7c7b\u5668\u7684\u7b80\u5355\u7684\u56de\u5f52\u4f8b\u5b50\uff08\u56de\u5f52\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u63d0\u5347\uff09\u3002\u8fd9\u88ab\u53eb\u505a\u68af\u5ea6\u63d0\u5347\u56de\u5f52\u6811\uff08GBRT\uff0c Gradient Tree Boosting \u6216\u8005 Gradient Boosted Regression Trees \uff09\u3002\u9996\u5148\u6211\u4eec\u7528 DecisionTreeRegressor \u53bb\u62df\u5408\u8bad\u7ec3\u96c6\uff08\u4f8b\u5982\u4e00\u4e2a\u6709\u566a\u4e8c\u6b21\u8bad\u7ec3\u96c6\uff09\uff1a >>>from sklearn.tree import DecisionTreeRegressor >>>tree_reg1 = DecisionTreeRegressor(max_depth=2) >>>tree_reg1.fit(X, y) \u73b0\u5728\u5728\u7b2c\u4e00\u4e2a\u5206\u7c7b\u5668\u7684\u6b8b\u5dee\u4e0a\u8bad\u7ec3\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u5668\uff1a >>>y2 = y - tree_reg1.predict(X) >>>tree_reg2 = DecisionTreeRegressor(max_depth=2) >>>tree_reg2.fit(X, y2) \u968f\u540e\u5728\u7b2c\u4e8c\u4e2a\u5206\u7c7b\u5668\u7684\u6b8b\u5dee\u4e0a\u8bad\u7ec3\u7b2c\u4e09\u4e2a\u5206\u7c7b\u5668\uff1a >>>y3 = y2 - tree_reg1.predict(X) >>>tree_reg3 = DecisionTreeRegressor(max_depth=2) >>>tree_reg3.fit(X, y3) \u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u5305\u542b\u4e09\u4e2a\u56de\u5f52\u5668\u7684\u96c6\u6210\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u96c6\u6210\u6240\u6709\u6811\u7684\u9884\u6d4b\u6765\u5728\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u9884\u6d4b\u3002 >>>y_pred = sum(tree.predict(X_new) for tree in (tree_reg1, tree_reg2, tree_reg3)) \u56fe7-9\u5728\u5de6\u680f\u5c55\u793a\u4e86\u8fd9\u4e09\u4e2a\u6811\u7684\u9884\u6d4b\uff0c\u5728\u53f3\u680f\u5c55\u793a\u4e86\u96c6\u6210\u7684\u9884\u6d4b\u3002\u5728\u7b2c\u4e00\u884c\uff0c\u96c6\u6210\u53ea\u6709\u4e00\u4e2a\u6811\uff0c\u6240\u4ee5\u5b83\u4e0e\u7b2c\u4e00\u4e2a\u6811\u7684\u9884\u6d4b\u76f8\u4f3c\u3002\u5728\u7b2c\u4e8c\u884c\uff0c\u4e00\u4e2a\u65b0\u7684\u6811\u5728\u7b2c\u4e00\u4e2a\u6811\u7684\u6b8b\u5dee\u4e0a\u8fdb\u884c\u8bad\u7ec3\u3002\u5728\u53f3\u8fb9\u680f\u53ef\u4ee5\u770b\u51fa\u96c6\u6210\u7684\u9884\u6d4b\u7b49\u4e8e\u524d\u4e24\u4e2a\u6811\u9884\u6d4b\u7684\u548c\u3002\u76f8\u540c\u7684\uff0c\u5728\u7b2c\u4e09\u884c\u53e6\u4e00\u4e2a\u6811\u5728\u7b2c\u4e8c\u4e2a\u6570\u7684\u6b8b\u5dee\u4e0a\u8bad\u7ec3\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u96c6\u6210\u7684\u9884\u6d4b\u4f1a\u53d8\u7684\u66f4\u597d\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 sklean \u4e2d\u7684 GradientBoostingRegressor \u6765\u8bad\u7ec3 GBRT \u96c6\u6210\u3002\u4e0e RandomForestClassifier \u76f8\u4f3c\uff0c\u5b83\u4e5f\u6709\u8d85\u53c2\u6570\u53bb\u63a7\u5236\u51b3\u7b56\u6811\u7684\u751f\u957f\uff08\u4f8b\u5982 max_depth \uff0c min_samples_leaf \u7b49\u7b49\uff09\uff0c\u4e5f\u6709\u8d85\u53c2\u6570\u53bb\u63a7\u5236\u96c6\u6210\u8bad\u7ec3\uff0c\u4f8b\u5982\u57fa\u5206\u7c7b\u5668\u7684\u6570\u91cf\uff08 n_estimators \uff09\u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e0e\u4e4b\u524d\u76f8\u540c\u7684\u96c6\u6210\uff1a >>>from sklearn.ensemble import GradientBoostingRegressor >>>gbrt = GradientBoostingRegressor(max_depth=2, n_estimators=3, learning_rate=1.0) >>>gbrt.fit(X, y) \u8d85\u53c2\u6570 learning_rate \u786e\u7acb\u4e86\u6bcf\u4e2a\u6811\u7684\u8d21\u732e\u3002\u5982\u679c\u4f60\u628a\u5b83\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5f88\u5c0f\u7684\u6811\uff0c\u4f8b\u5982 0.1\uff0c\u5728\u96c6\u6210\u4e2d\u5c31\u9700\u8981\u66f4\u591a\u7684\u6811\u53bb\u62df\u5408\u8bad\u7ec3\u96c6\uff0c\u4f46\u9884\u6d4b\u901a\u5e38\u4f1a\u66f4\u597d\u3002\u8fd9\u4e2a\u6b63\u5219\u5316\u6280\u672f\u53eb\u505a shrinkage \u3002\u56fe 7-10 \u5c55\u793a\u4e86\u4e24\u4e2a\u5728\u4f4e\u5b66\u4e60\u7387\u4e0a\u8bad\u7ec3\u7684 GBRT \u96c6\u6210\uff1a\u5176\u4e2d\u5de6\u9762\u662f\u4e00\u4e2a\u6ca1\u6709\u8db3\u591f\u6811\u53bb\u62df\u5408\u8bad\u7ec3\u96c6\u7684\u6811\uff0c\u53f3\u9762\u662f\u6709\u8fc7\u591a\u7684\u6811\u8fc7\u62df\u5408\u8bad\u7ec3\u96c6\u7684\u6811\u3002 \u4e3a\u4e86\u627e\u5230\u6811\u7684\u6700\u4f18\u6570\u91cf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u65e9\u505c\u6280\u672f\uff08\u7b2c\u56db\u7ae0\u8ba8\u8bba\uff09\u3002\u6700\u7b80\u5355\u4f7f\u7528\u8fd9\u4e2a\u6280\u672f\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528 staged_predict() \uff1a\u5b83\u5728\u8bad\u7ec3\u7684\u6bcf\u4e2a\u9636\u6bb5\uff08\u7528\u4e00\u68f5\u6811\uff0c\u4e24\u68f5\u6811\u7b49\uff09\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u52a0\u4e0b\u6765\u7684\u4ee3\u7801\u7528 120 \u4e2a\u6811\u8bad\u7ec3\u4e86\u4e00\u4e2a GBRT \u96c6\u6210\uff0c\u7136\u540e\u5728\u8bad\u7ec3\u7684\u6bcf\u4e2a\u9636\u6bb5\u9a8c\u8bc1\u9519\u8bef\u4ee5\u627e\u5230\u6811\u7684\u6700\u4f73\u6570\u91cf\uff0c\u6700\u540e\u4f7f\u7528 GBRT \u6811\u7684\u6700\u4f18\u6570\u91cf\u8bad\u7ec3\u53e6\u4e00\u4e2a\u96c6\u6210\uff1a >>>import numpy as np >>>from sklearn.model_selection import train_test_split >>>from sklearn.metrics import mean_squared_error >>>X_train, X_val, y_train, y_val = train_test_split(X, y) >>>gbrt = GradientBoostingRegressor(max_depth=2, n_estimators=120) >>>gbrt.fit(X_train, y_train) >>>errors = [mean_squared_error(y_val, y_pred) for y_pred in gbrt.staged_predict(X_val)] >>>bst_n_estimators = np.argmin(errors) >>>gbrt_best = GradientBoostingRegressor(max_depth=2,n_estimators=bst_n_estimators) >>>gbrt_best.fit(X_train, y_train) \u9a8c\u8bc1\u9519\u8bef\u5728\u56fe 7-11 \u7684\u5de6\u9762\u5c55\u793a\uff0c\u6700\u4f18\u6a21\u578b\u9884\u6d4b\u88ab\u5c55\u793a\u5728\u53f3\u9762\u3002 \u4f60\u4e5f\u53ef\u4ee5\u65e9\u65e9\u7684\u505c\u6b62\u8bad\u7ec3\u6765\u5b9e\u73b0\u65e9\u505c\uff08\u4e0e\u5148\u5728\u4e00\u5927\u5806\u6811\u4e2d\u8bad\u7ec3\uff0c\u7136\u540e\u518d\u56de\u5934\u53bb\u627e\u6700\u4f18\u6570\u76ee\u76f8\u53cd\uff09\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e warm_start=True \u6765\u5b9e\u73b0 \uff0c\u8fd9\u4f7f\u5f97\u5f53 fit() \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6 sklearn \u4fdd\u7559\u73b0\u6709\u6811\uff0c\u5e76\u5141\u8bb8\u589e\u91cf\u8bad\u7ec3\u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5728\u5f53\u4e00\u884c\u4e2d\u7684\u4e94\u6b21\u8fed\u4ee3\u9a8c\u8bc1\u9519\u8bef\u6ca1\u6709\u6539\u5584\u65f6\u4f1a\u505c\u6b62\u8bad\u7ec3\uff1a >>>gbrt = GradientBoostingRegressor(max_depth=2, warm_start=True) min_val_error = float(\"inf\") error_going_up = 0 for n_estimators in range(1, 120): gbrt.n_estimators = n_estimators gbrt.fit(X_train, y_train) y_pred = gbrt.predict(X_val) val_error = mean_squared_error(y_val, y_pred) if val_error < min_val_error: min_val_error = val_error error_going_up = 0 else: error_going_up += 1 if error_going_up == 5: break # early stopping GradientBoostingRegressor \u4e5f\u652f\u6301\u6307\u5b9a\u7528\u4e8e\u8bad\u7ec3\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u5b9e\u4f8b\u6bd4\u4f8b\u7684\u8d85\u53c2\u6570 subsample \u3002\u4f8b\u5982\u5982\u679c subsample=0.25 \uff0c\u90a3\u4e48\u6bcf\u4e2a\u6811\u90fd\u4f1a\u5728 25% \u968f\u673a\u9009\u62e9\u7684\u8bad\u7ec3\u5b9e\u4f8b\u4e0a\u8bad\u7ec3\u3002\u4f60\u73b0\u5728\u4e5f\u80fd\u731c\u51fa\u6765\uff0c\u8fd9\u4e5f\u662f\u4e2a\u9ad8\u504f\u5dee\u6362\u4f4e\u65b9\u5dee\u7684\u4f5c\u7528\u3002\u5b83\u540c\u6837\u4e5f\u52a0\u901f\u4e86\u8bad\u7ec3\u3002\u8fd9\u4e2a\u6280\u672f\u53eb\u505a \u968f\u673a\u68af\u5ea6\u63d0\u5347 \u3002 \u4e5f\u53ef\u80fd\u5bf9\u5176\u4ed6\u635f\u5931\u51fd\u6570\u4f7f\u7528\u68af\u5ea6\u63d0\u5347\u3002\u8fd9\u662f\u7531\u635f\u5931\u8d85\u53c2\u6570\u63a7\u5236\uff08\u89c1 sklearn \u6587\u6863\uff09\u3002","title":"\u68af\u5ea6\u63d0\u5347"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#stacking","text":"\u672c\u7ae0\u8ba8\u8bba\u7684\u6700\u540e\u4e00\u4e2a\u96c6\u6210\u65b9\u6cd5\u53eb\u505a Stacking \uff08 stacked generalization \u7684\u7f29\u5199\uff09\u3002\u8fd9\u4e2a\u7b97\u6cd5\u57fa\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\uff1a\u4e0d\u4f7f\u7528\u7410\u788e\u7684\u51fd\u6570\uff08\u5982\u786c\u6295\u7968\uff09\u6765\u805a\u5408\u96c6\u5408\u4e2d\u6240\u6709\u5206\u7c7b\u5668\u7684\u9884\u6d4b\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u6267\u884c\u8fd9\u4e2a\u805a\u5408\uff1f\u56fe 7-12 \u5c55\u793a\u4e86\u8fd9\u6837\u4e00\u4e2a\u5728\u65b0\u7684\u56de\u5f52\u5b9e\u4f8b\u4e0a\u9884\u6d4b\u7684\u96c6\u6210\u3002\u5e95\u90e8\u4e09\u4e2a\u5206\u7c7b\u5668\u6bcf\u4e00\u4e2a\u90fd\u6709\u4e0d\u540c\u7684\u503c\uff083.1\uff0c2.7 \u548c 2.9\uff09\uff0c\u7136\u540e\u6700\u540e\u4e00\u4e2a\u5206\u7c7b\u5668\uff08\u53eb\u505a blender \u6216\u8005 meta learner \uff09\u628a\u8fd9\u4e09\u4e2a\u5206\u7c7b\u5668\u7684\u7ed3\u679c\u5f53\u505a\u8f93\u5165\u7136\u540e\u505a\u51fa\u6700\u7ec8\u51b3\u7b56\uff083.0\uff09\u3002 \u4e3a\u4e86\u8bad\u7ec3\u8fd9\u4e2a blender \uff0c\u4e00\u4e2a\u901a\u7528\u7684\u65b9\u6cd5\u662f\u91c7\u7528\u4fdd\u6301\u96c6\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5b83\u600e\u4e48\u5de5\u4f5c\u3002\u9996\u5148\uff0c\u8bad\u7ec3\u96c6\u88ab\u5206\u4e3a\u4e24\u4e2a\u5b50\u96c6\uff0c\u7b2c\u4e00\u4e2a\u5b50\u96c6\u88ab\u7528\u4f5c\u8bad\u7ec3\u7b2c\u4e00\u5c42\uff08\u8be6\u89c1\u56fe 7-13\uff09. \u63a5\u4e0b\u6765\uff0c\u7b2c\u4e00\u5c42\u7684\u5206\u7c7b\u5668\u88ab\u7528\u6765\u9884\u6d4b\u7b2c\u4e8c\u4e2a\u5b50\u96c6\uff08\u4fdd\u6301\u96c6\uff09\uff08\u8be6\u89c1 7-14\uff09\u3002\u8fd9\u786e\u4fdd\u4e86\u9884\u6d4b\u7ed3\u679c\u5f88\u201c\u5e72\u51c0\u201d\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5206\u7c7b\u5668\u5728\u8bad\u7ec3\u7684\u65f6\u5019\u6ca1\u6709\u4f7f\u7528\u8fc7\u8fd9\u4e9b\u4e8b\u4f8b\u3002\u73b0\u5728\u5bf9\u5728\u4fdd\u6301\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u90fd\u6709\u4e09\u4e2a\u9884\u6d4b\u503c\u3002\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u9884\u6d4b\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\u7279\u5f81\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8bad\u7ec3\u96c6\uff08\u8fd9\u4f7f\u5f97\u8fd9\u4e2a\u8bad\u7ec3\u96c6\u662f\u4e09\u7ef4\u7684\uff09\uff0c\u5e76\u4e14\u4fdd\u6301\u76ee\u6807\u6570\u503c\u4e0d\u53d8\u3002\u968f\u540e blender \u5728\u8fd9\u4e2a\u65b0\u7684\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\uff0c\u56e0\u6b64\uff0c\u5b83\u5b66\u4f1a\u4e86\u9884\u6d4b\u7b2c\u4e00\u5c42\u9884\u6d4b\u7684\u76ee\u6807\u503c\u3002 \u663e\u7136\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u8bad\u7ec3\u4e0d\u540c\u7684 blender \uff08\u4f8b\u5982\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\uff0c\u53e6\u4e00\u4e2a\u662f\u968f\u673a\u68ee\u6797\u7b49\u7b49\uff09\uff1a\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u5c42 blender \u3002\u8bc0\u7a8d\u662f\u5c06\u8bad\u7ec3\u96c6\u5206\u6210\u4e09\u4e2a\u5b50\u96c6\uff1a\u7b2c\u4e00\u4e2a\u5b50\u96c6\u7528\u6765\u8bad\u7ec3\u7b2c\u4e00\u5c42\uff0c\u7b2c\u4e8c\u4e2a\u5b50\u96c6\u7528\u6765\u521b\u5efa\u8bad\u7ec3\u7b2c\u4e8c\u5c42\u7684\u8bad\u7ec3\u96c6\uff08\u4f7f\u7528\u7b2c\u4e00\u5c42\u5206\u7c7b\u5668\u7684\u9884\u6d4b\u503c\uff09\uff0c\u7b2c\u4e09\u4e2a\u5b50\u96c6\u88ab\u7528\u6765\u521b\u5efa\u8bad\u7ec3\u7b2c\u4e09\u5c42\u7684\u8bad\u7ec3\u96c6\uff08\u4f7f\u7528\u7b2c\u4e8c\u5c42\u5206\u7c7b\u5668\u7684\u9884\u6d4b\u503c\uff09\u3002\u4ee5\u4e0a\u6b65\u9aa4\u505a\u5b8c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9010\u4e2a\u904d\u5386\u6bcf\u4e2a\u5c42\u6765\u9884\u6d4b\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u3002\u8be6\u89c1\u56fe 7-15. \u7136\u800c\u4e0d\u5e78\u7684\u662f\uff0csklearn \u5e76\u4e0d\u76f4\u63a5\u652f\u6301 stacking \uff0c\u4f46\u662f\u4f60\u81ea\u5df1\u7ec4\u5efa\u662f\u5f88\u5bb9\u6613\u7684\uff08\u770b\u63a5\u4e0b\u6765\u7684\u7ec3\u4e60\uff09\u3002\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5f00\u6e90\u7684\u9879\u76ee\u4f8b\u5982 brew \uff08\u7f51\u5740\u4e3a https://github.com/viisar/brew \uff09","title":"Stacking"},{"location":"7.%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/#_9","text":"\u5982\u679c\u4f60\u5728\u76f8\u540c\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3 5 \u4e2a\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u5b83\u4eec\u90fd\u6709 95% \u7684\u51c6\u786e\u7387\uff0c\u90a3\u4e48\u4f60\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u8fd9\u4e2a\u6a21\u578b\u6765\u5f97\u5230\u66f4\u597d\u7684\u7ed3\u679c\uff1f\u5982\u679c\u53ef\u4ee5\u90a3\u600e\u4e48\u505a\u5462\uff1f\u5982\u679c\u4e0d\u53ef\u4ee5\u8bf7\u7ed9\u51fa\u7406\u7531\u3002 \u8f6f\u6295\u7968\u548c\u786c\u6295\u7968\u5206\u7c7b\u5668\u4e4b\u95f4\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u662f\u5426\u6709\u53ef\u80fd\u901a\u8fc7\u5206\u914d\u591a\u4e2a\u670d\u52a1\u5668\u6765\u52a0\u901f bagging \u96c6\u6210\u7cfb\u7edf\u7684\u8bad\u7ec3\uff1fpasting \u96c6\u6210\uff0cboosting \u96c6\u6210\uff0c\u968f\u673a\u68ee\u6797\uff0c\u6216 stacking \u96c6\u6210\u600e\u4e48\u6837\uff1f out-of-bag \u8bc4\u4ef7\u7684\u597d\u5904\u662f\u4ec0\u4e48\uff1f \u662f\u4ec0\u4e48\u4f7f Extra-Tree \u6bd4\u89c4\u5219\u968f\u673a\u68ee\u6797\u66f4\u968f\u673a\u5462\uff1f\u8fd9\u4e2a\u989d\u5916\u7684\u968f\u673a\u6709\u4ec0\u4e48\u5e2e\u52a9\u5462\uff1f\u90a3\u8fd9\u4e2a Extra-Tree \u6bd4\u89c4\u5219\u968f\u673a\u68ee\u6797\u8c01\u66f4\u5feb\u5462\uff1f \u5982\u679c\u4f60\u7684 Adaboost \u6a21\u578b\u6b20\u62df\u5408\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u600e\u4e48\u8c03\u6574\u8d85\u53c2\u6570\uff1f \u5982\u679c\u4f60\u7684\u68af\u5ea6\u63d0\u5347\u8fc7\u62df\u5408\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u8c03\u9ad8\u8fd8\u662f\u8c03\u4f4e\u5b66\u4e60\u7387\u5462\uff1f \u5bfc\u5165 MNIST \u6570\u636e\uff08\u7b2c\u4e09\u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff0c\u628a\u5b83\u5207\u5206\u8fdb\u4e00\u4e2a\u8bad\u7ec3\u96c6\uff0c\u4e00\u4e2a\u9a8c\u8bc1\u96c6\uff0c\u548c\u4e00\u4e2a\u6d4b\u8bd5\u96c6\uff08\u4f8b\u5982 40000 \u4e2a\u5b9e\u4f8b\u8fdb\u884c\u8bad\u7ec3\uff0c10000 \u4e2a\u8fdb\u884c\u9a8c\u8bc1\uff0c10000 \u4e2a\u8fdb\u884c\u6d4b\u8bd5\uff09\u3002\u7136\u540e\u8bad\u7ec3\u591a\u4e2a\u5206\u7c7b\u5668\uff0c\u4f8b\u5982\u4e00\u4e2a\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\uff0c\u4e00\u4e2a Extra-Tree \u5206\u7c7b\u5668\u548c\u4e00\u4e2a SVM\u3002\u63a5\u4e0b\u6765\uff0c\u5c1d\u8bd5\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u96c6\u6210\uff0c\u4f7f\u7528\u8f6f\u6216\u786c\u6295\u7968\u5206\u7c7b\u5668\u6765\u80dc\u8fc7\u9a8c\u8bc1\u96c6\u4e0a\u7684\u6240\u6709\u96c6\u5408\u3002\u4e00\u65e6\u627e\u5230\u4e86\uff0c\u5c31\u5728\u6d4b\u8bd5\u96c6\u4e0a\u5b9e\u9a8c\u3002\u4e0e\u5355\u4e2a\u5206\u7c7b\u5668\u76f8\u6bd4\uff0c\u5b83\u7684\u6027\u80fd\u6709\u591a\u597d\uff1f \u4ece\u7ec3\u4e60 8 \u4e2d\u8fd0\u884c\u4e2a\u4f53\u5206\u7c7b\u5668\u6765\u5bf9\u9a8c\u8bc1\u96c6\u8fdb\u884c\u9884\u6d4b\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8bad\u7ec3\u96c6\u5e76\u751f\u6210\u9884\u6d4b\uff1a\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5305\u542b\u6765\u81ea\u6240\u6709\u5206\u7c7b\u5668\u7684\u56fe\u50cf\u7684\u9884\u6d4b\u96c6\uff0c\u76ee\u6807\u662f\u56fe\u50cf\u7c7b\u522b\u3002\u795d\u8d3a\u4f60\uff0c\u4f60\u521a\u521a\u8bad\u7ec3\u4e86\u4e00\u4e2a blender \uff0c\u548c\u5206\u7c7b\u5668\u4e00\u8d77\u7ec4\u6210\u4e86\u4e00\u4e2a\u53e0\u52a0\u7ec4\u5408\uff01\u73b0\u5728\u8ba9\u6211\u4eec\u6765\u8bc4\u4f30\u6d4b\u8bd5\u96c6\u4e0a\u7684\u96c6\u5408\u3002\u5bf9\u4e8e\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u56fe\u50cf\uff0c\u7528\u6240\u6709\u5206\u7c7b\u5668\u8fdb\u884c\u9884\u6d4b\uff0c\u7136\u540e\u5c06\u9884\u6d4b\u9988\u9001\u5230 blender \u4ee5\u83b7\u5f97\u96c6\u5408\u7684\u9884\u6d4b\u3002\u5b83\u4e0e\u4f60\u65e9\u671f\u8bad\u7ec3\u8fc7\u7684\u6295\u7968\u5206\u7c7b\u5668\u76f8\u6bd4\u5982\u4f55\uff1f \u7ec3\u4e60\u7684\u7b54\u6848\u90fd\u5728\u9644\u5f55 A \u4e0a\u3002","title":"\u7ec3\u4e60"},{"location":"8.%E9%99%8D%E7%BB%B4/","text":"\u516b\u3001\u964d\u7ef4 \u5f88\u591a\u673a\u5668\u5b66\u4e60\u7684\u95ee\u9898\u90fd\u4f1a\u6d89\u53ca\u5230\u6709\u7740\u51e0\u5343\u751a\u81f3\u6570\u767e\u4e07\u7ef4\u7684\u7279\u5f81\u7684\u8bad\u7ec3\u5b9e\u4f8b\u3002\u8fd9\u4e0d\u4ec5\u8ba9\u8bad\u7ec3\u8fc7\u7a0b\u53d8\u5f97\u975e\u5e38\u7f13\u6162\uff0c\u540c\u65f6\u8fd8\u5f88\u96be\u627e\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u4f1a\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u79cd\u95ee\u9898\u901a\u5e38\u88ab\u79f0\u4e3a\u7ef4\u6570\u707e\u96be\uff08curse of dimentionality\uff09\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u6211\u4eec\u7ecf\u5e38\u53ef\u4ee5\u6781\u5927\u7684\u964d\u4f4e\u7279\u5f81\u7ef4\u5ea6\uff0c\u5c06\u4e00\u4e2a\u5341\u5206\u68d8\u624b\u7684\u95ee\u9898\u8f6c\u53d8\u6210\u4e00\u4e2a\u53ef\u4ee5\u8f83\u4e3a\u5bb9\u6613\u89e3\u51b3\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e MNIST \u56fe\u7247\u96c6\uff08\u7b2c 3 \u7ae0\u4e2d\u63d0\u5230\uff09\uff1a\u56fe\u7247\u56db\u5468\u8fb9\u7f18\u90e8\u5206\u7684\u50cf\u7d20\u51e0\u4e4e\u603b\u662f\u767d\u7684\uff0c\u56e0\u6b64\u4f60\u5b8c\u5168\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u50cf\u7d20\u4ece\u4f60\u7684\u8bad\u7ec3\u96c6\u4e2d\u6254\u6389\u800c\u4e0d\u4f1a\u4e22\u5931\u592a\u591a\u4fe1\u606f\u3002\u56fe 7-6 \u5411\u6211\u4eec\u8bc1\u5b9e\u4e86\u8fd9\u4e9b\u50cf\u7d20\u7684\u786e\u5bf9\u6211\u4eec\u7684\u5206\u7c7b\u4efb\u52a1\u662f\u5b8c\u5168\u4e0d\u91cd\u8981\u7684\u3002\u540c\u65f6\uff0c\u4e24\u4e2a\u76f8\u90bb\u7684\u50cf\u7d20\u5f80\u5f80\u662f\u9ad8\u5ea6\u76f8\u5173\u7684\uff1a\u5982\u679c\u4f60\u60f3\u8981\u5c06\u4ed6\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u50cf\u7d20\uff08\u6bd4\u5982\u53d6\u8fd9\u4e24\u4e2a\u50cf\u7d20\u70b9\u7684\u5e73\u5747\u503c\uff09\u4f60\u5e76\u4e0d\u4f1a\u4e22\u5931\u5f88\u591a\u4fe1\u606f\u3002 \u8b66\u544a\uff1a\u964d\u7ef4\u80af\u5b9a\u4f1a\u4e22\u5931\u4e00\u4e9b\u4fe1\u606f\uff08\u8fd9\u5c31\u597d\u6bd4\u5c06\u4e00\u4e2a\u56fe\u7247\u538b\u7f29\u6210 JPEG \u7684\u683c\u5f0f\u4f1a\u964d\u4f4e\u56fe\u50cf\u7684\u8d28\u91cf\uff09\uff0c\u56e0\u6b64\u5373\u4f7f\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u52a0\u5feb\u8bad\u7ec3\u7684\u901f\u5ea6\uff0c\u540c\u65f6\u4e5f\u4f1a\u8ba9\u4f60\u7684\u7cfb\u7edf\u8868\u73b0\u7684\u7a0d\u5fae\u5dee\u4e00\u70b9\u3002\u964d\u7ef4\u4f1a\u8ba9\u4f60\u7684\u5de5\u4f5c\u6d41\u6c34\u7ebf\u66f4\u590d\u6742\u56e0\u800c\u66f4\u96be\u7ef4\u62a4\u3002\u6240\u6709\u4f60\u5e94\u8be5\u5148\u5c1d\u8bd5\u4f7f\u7528\u539f\u59cb\u7684\u6570\u636e\u6765\u8bad\u7ec3\uff0c\u5982\u679c\u8bad\u7ec3\u901f\u5ea6\u592a\u6162\u7684\u8bdd\u518d\u8003\u8651\u4f7f\u7528\u964d\u7ef4\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u964d\u4f4e\u8bad\u7ec3\u96c6\u6570\u636e\u7684\u7ef4\u5ea6\u53ef\u80fd\u4f1a\u7b5b\u9009\u6389\u4e00\u4e9b\u566a\u97f3\u548c\u4e0d\u5fc5\u8981\u7684\u7ec6\u8282\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4f60\u7684\u7ed3\u679c\u6bd4\u964d\u7ef4\u4e4b\u524d\u66f4\u597d\uff08\u8fd9\u79cd\u60c5\u51b5\u901a\u5e38\u4e0d\u4f1a\u53d1\u751f\uff1b\u5b83\u53ea\u4f1a\u52a0\u5feb\u4f60\u8bad\u7ec3\u7684\u901f\u5ea6\uff09\u3002 \u964d\u7ef4\u9664\u4e86\u53ef\u4ee5\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\u5916\uff0c\u5728\u6570\u636e\u53ef\u89c6\u5316\u65b9\u9762\uff08\u6216\u8005 DataViz\uff09\u4e5f\u5341\u5206\u6709\u7528\u3002\u964d\u4f4e\u7279\u5f81\u7ef4\u5ea6\u5230 2\uff08\u6216\u8005 3\uff09\u7ef4\u4ece\u800c\u53ef\u4ee5\u5728\u56fe\u4e2d\u753b\u51fa\u4e00\u4e2a\u9ad8\u7ef4\u5ea6\u7684\u8bad\u7ec3\u96c6\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c6\u89c9\u76f4\u89c2\u7684\u53d1\u73b0\u4e00\u4e9b\u975e\u5e38\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u805a\u7c7b\u3002 \u5728\u8fd9\u4e00\u7ae0\u91cc\uff0c\u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u7ef4\u6570\u707e\u96be\u95ee\u9898\u5e76\u4e14\u4e86\u89e3\u5728\u9ad8\u7ef4\u7a7a\u95f4\u7684\u6570\u636e\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u4f1a\u5c55\u793a\u4e24\u79cd\u4e3b\u8981\u7684\u964d\u7ef4\u65b9\u6cd5\uff1a\u6295\u5f71\uff08projection\uff09\u548c\u6d41\u5f62\u5b66\u4e60\uff08Manifold Learning\uff09\uff0c\u540c\u65f6\u6211\u4eec\u8fd8\u4f1a\u4ecb\u7ecd\u4e09\u79cd\u6d41\u884c\u7684\u964d\u7ef4\u6280\u672f\uff1a\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\uff0c\u6838\u4e3b\u6210\u5206\u5206\u6790\uff08Kernel PCA\uff09\u548c\u5c40\u90e8\u7ebf\u6027\u5d4c\u5165\uff08LLE\uff09\u3002 \u7ef4\u6570\u707e\u96be \u6211\u4eec\u5df2\u7ecf\u4e60\u60ef\u751f\u6d3b\u5728\u4e00\u4e2a\u4e09\u7ef4\u7684\u4e16\u754c\u91cc\uff0c\u4ee5\u81f3\u4e8e\u5f53\u6211\u4eec\u5c1d\u8bd5\u60f3\u8c61\u66f4\u9ad8\u7ef4\u7684\u7a7a\u95f4\u65f6\uff0c\u6211\u4eec\u7684\u76f4\u89c9\u4e0d\u7ba1\u7528\u4e86\u3002\u5373\u4f7f\u662f\u4e00\u4e2a\u57fa\u672c\u7684 4D \u8d85\u6b63\u65b9\u4f53\u4e5f\u5f88\u96be\u5728\u6211\u4eec\u7684\u8111\u4e2d\u60f3\u8c61\u51fa\u6765\uff08\u89c1\u56fe 8-1\uff09\uff0c\u66f4\u4e0d\u7528\u8bf4\u4e00\u4e2a 200 \u7ef4\u7684\u692d\u7403\u5f2f\u66f2\u5728\u4e00\u4e2a 1000 \u7ef4\u7684\u7a7a\u95f4\u91cc\u4e86\u3002 \u56fe 8-1 \u70b9\uff0c\u7ebf\uff0c\u65b9\u5f62\uff0c\u7acb\u65b9\u4f53\u548c\u8d85\u6b63\u65b9\u4f53\uff080D \u5230 4D \u8d85\u6b63\u65b9\u4f53\uff09 \u8fd9\u8868\u660e\u5f88\u591a\u7269\u4f53\u5728\u9ad8\u7ef4\u7a7a\u95f4\u8868\u73b0\u7684\u5341\u5206\u4e0d\u540c\u3002\u6bd4\u5982\uff0c\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u6b63\u65b9\u5f62\u5355\u5143\u4e2d\u968f\u673a\u53d6\u4e00\u4e2a\u70b9\uff08\u4e00\u4e2a 1\u00d71 \u7684\u6b63\u65b9\u5f62\uff09\uff0c\u90a3\u4e48\u968f\u673a\u9009\u7684\u70b9\u79bb\u6240\u6709\u8fb9\u754c\u5927\u4e8e 0.001\uff08\u9760\u8fd1\u4e2d\u95f4\u4f4d\u7f6e\uff09\u7684\u6982\u7387\u4e3a 0.4%\uff08 1 - 0.998^2 \uff09\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u968f\u673a\u4ea7\u751f\u7684\u70b9\u4e0d\u5927\u53ef\u80fd\u4e25\u683c\u843d\u5728\u67d0\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u3002\u4f46\u662f\u5728\u4e00\u4e2a 1,0000 \u7ef4\u7684\u5355\u4f4d\u8d85\u6b63\u65b9\u4f53\uff08\u4e00\u4e2a 1\u00d71\u00d7...\u00d71 \u7684\u7acb\u65b9\u4f53\uff0c\u6709 10,000 \u4e2a 1\uff09\uff0c\u8fd9\u79cd\u53ef\u80fd\u6027\u8d85\u8fc7\u4e86 99.999999%\u3002\u5728\u9ad8\u7ef4\u8d85\u6b63\u65b9\u4f53\u4e2d\uff0c\u5927\u591a\u6570\u70b9\u90fd\u5206\u5e03\u5728\u8fb9\u754c\u5904\u3002 \u8fd8\u6709\u4e00\u4e2a\u66f4\u9ebb\u70e6\u7684\u533a\u522b\uff1a\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u5e73\u65b9\u5355\u4f4d\u4e2d\u968f\u673a\u9009\u53d6\u4e24\u4e2a\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e73\u5747\u7ea6\u4e3a 0.52\u3002\u5982\u679c\u60a8\u5728\u5355\u4f4d 3D \u7acb\u65b9\u4f53\u4e2d\u9009\u53d6\u4e24\u4e2a\u968f\u673a\u70b9\uff0c\u5e73\u5747\u8ddd\u79bb\u5c06\u5927\u81f4\u4e3a 0.66\u3002\u4f46\u662f\uff0c\u5728\u4e00\u4e2a 1,000,000 \u7ef4\u8d85\u7acb\u65b9\u4f53\u4e2d\u968f\u673a\u62bd\u53d6\u4e24\u70b9\u5462\uff1f\u90a3\u4e48\uff0c\u5e73\u5747\u8ddd\u79bb\uff0c\u4fe1\u4e0d\u4fe1\u7531\u4f60\uff0c\u5927\u6982\u4e3a 408.25\uff08\u5927\u81f4 \uff09\uff01\u8fd9\u975e\u5e38\u8fdd\u53cd\u76f4\u89c9\uff1a\u5f53\u5b83\u4eec\u90fd\u4f4d\u4e8e\u540c\u4e00\u5355\u5143\u8d85\u7acb\u65b9\u4f53\u5185\u65f6\uff0c\u4e24\u70b9\u662f\u600e\u4e48\u8ddd\u79bb\u8fd9\u4e48\u8fdc\u7684\uff1f\u8fd9\u4e00\u4e8b\u5b9e\u610f\u5473\u7740\u9ad8\u7ef4\u6570\u636e\u96c6\u6709\u5f88\u5927\u98ce\u9669\u5206\u5e03\u7684\u975e\u5e38\u7a00\u758f\uff1a\u5927\u591a\u6570\u8bad\u7ec3\u5b9e\u4f8b\u53ef\u80fd\u5f7c\u6b64\u8fdc\u79bb\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u53ef\u80fd\u8fdc\u79bb\u4efb\u4f55\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u8fd9\u4f7f\u5f97\u9884\u6d4b\u7684\u53ef\u9760\u6027\u8fdc\u4f4e\u4e8e\u6211\u4eec\u5904\u7406\u8f83\u4f4e\u7ef4\u5ea6\u6570\u636e\u7684\u9884\u6d4b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u57fa\u4e8e\u66f4\u5927\u7684\u63a8\u6d4b\uff08extrapolations\uff09\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8bad\u7ec3\u96c6\u7684\u7ef4\u5ea6\u8d8a\u9ad8\uff0c\u8fc7\u62df\u5408\u7684\u98ce\u9669\u5c31\u8d8a\u5927\u3002 \u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u7ef4\u6570\u7206\u70b8\u7684\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u589e\u52a0\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u4ece\u800c\u8fbe\u5230\u62e5\u6709\u8db3\u591f\u5bc6\u5ea6\u7684\u8bad\u7ec3\u96c6\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fbe\u5230\u7ed9\u5b9a\u5bc6\u5ea6\u6240\u9700\u7684\u8bad\u7ec3\u5b9e\u4f8b\u7684\u6570\u91cf\u968f\u7740\u7ef4\u5ea6\u7684\u6570\u91cf\u5448\u6307\u6570\u589e\u957f\u3002\u5982\u679c\u53ea\u6709 100 \u4e2a\u7279\u5f81\uff08\u6bd4 MNIST \u95ee\u9898\u8981\u5c11\u5f97\u591a\uff09\u5e76\u4e14\u5047\u8bbe\u5b83\u4eec\u5747\u5300\u5206\u5e03\u5728\u6240\u6709\u7ef4\u5ea6\u4e0a\uff0c\u90a3\u4e48\u5982\u679c\u60f3\u8981\u5404\u4e2a\u4e34\u8fd1\u7684\u8bad\u7ec3\u5b9e\u4f8b\u4e4b\u95f4\u7684\u8ddd\u79bb\u5728 0.1 \u4ee5\u5185\uff0c\u60a8\u9700\u8981\u6bd4\u5b87\u5b99\u4e2d\u7684\u539f\u5b50\u8fd8\u8981\u591a\u7684\u8bad\u7ec3\u5b9e\u4f8b\u3002 \u964d\u7ef4\u7684\u4e3b\u8981\u65b9\u6cd5 \u5728\u6211\u4eec\u6df1\u5165\u7814\u7a76\u5177\u4f53\u7684\u964d\u7ef4\u7b97\u6cd5\u4e4b\u524d\uff0c\u6211\u4eec\u6765\u770b\u770b\u964d\u4f4e\u7ef4\u5ea6\u7684\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff1a\u6295\u5f71\u548c\u6d41\u5f62\u5b66\u4e60\u3002 \u6295\u5f71\uff08Projection\uff09 \u5728\u5927\u591a\u6570\u73b0\u5b9e\u751f\u6d3b\u7684\u95ee\u9898\u4e2d\uff0c\u8bad\u7ec3\u5b9e\u4f8b\u5e76\u4e0d\u662f\u5728\u6240\u6709\u7ef4\u5ea6\u4e0a\u5747\u5300\u5206\u5e03\u7684\u3002\u8bb8\u591a\u7279\u5f81\u51e0\u4e4e\u662f\u5e38\u6570\uff0c\u800c\u5176\u4ed6\u7279\u5f81\u5219\u9ad8\u5ea6\u76f8\u5173\uff08\u5982\u524d\u9762\u8ba8\u8bba\u7684 MNIST\uff09\u3002\u7ed3\u679c\uff0c\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u5b9e\u9645\u4e0a\u4f4d\u4e8e\uff08\u6216\u63a5\u8fd1\uff09\u9ad8\u7ef4\u7a7a\u95f4\u7684\u4f4e\u7ef4\u5b50\u7a7a\u95f4\u5185\u3002\u8fd9\u542c\u8d77\u6765\u6709\u4e9b\u62bd\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002\u5728\u56fe 8-2 \u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u7531\u5706\u5708\u8868\u793a\u7684 3D \u6570\u636e\u96c6\u3002 \u56fe 8-2 \u4e00\u4e2a\u5206\u5e03\u63a5\u8fd1\u4e8e2D\u5b50\u7a7a\u95f4\u76843D\u6570\u636e\u96c6 \u6ce8\u610f\u5230\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u7684\u5206\u5e03\u90fd\u8d34\u8fd1\u4e00\u4e2a\u5e73\u9762\uff1a\u8fd9\u662f\u9ad8\u7ef4\uff083D\uff09\u7a7a\u95f4\u7684\u8f83\u4f4e\u7ef4\uff082D\uff09\u5b50\u7a7a\u95f4\u3002\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u5c06\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u5782\u76f4\u6295\u5f71\u5230\u8fd9\u4e2a\u5b50\u7a7a\u95f4\u4e0a\uff08\u5c31\u50cf\u5c06\u77ed\u7ebf\u8fde\u63a5\u5230\u5e73\u9762\u7684\u70b9\u6240\u8868\u793a\u7684\u90a3\u6837\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u5982\u56fe8-3\u6240\u793a\u7684\u65b02D\u6570\u636e\u96c6\u3002\u94db\u94db\u94db\uff01\u6211\u4eec\u521a\u521a\u5c06\u6570\u636e\u96c6\u7684\u7ef4\u5ea6\u4ece 3D \u964d\u4f4e\u5230\u4e86 2D\u3002\u8bf7\u6ce8\u610f\uff0c\u5750\u6807\u8f74\u5bf9\u5e94\u4e8e\u65b0\u7684\u7279\u5f81 z1 \u548c z2 \uff08\u5e73\u9762\u4e0a\u6295\u5f71\u7684\u5750\u6807\uff09\u3002 \u56fe 8-3 \u4e00\u4e2a\u7ecf\u8fc7\u6295\u5f71\u540e\u7684\u65b0\u7684 2D \u6570\u636e\u96c6 \u4f46\u662f\uff0c\u6295\u5f71\u5e76\u4e0d\u603b\u662f\u964d\u7ef4\u7684\u6700\u4f73\u65b9\u6cd5\u3002\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u5b50\u7a7a\u95f4\u53ef\u80fd\u4f1a\u626d\u66f2\u548c\u8f6c\u52a8\uff0c\u6bd4\u5982\u56fe 8-4 \u6240\u793a\u7684\u7740\u540d\u745e\u58eb\u6eda\u52a8\u73a9\u5177\u6570\u636e\u96c6\u3002 \u56fe 8-4 \u745e\u58eb\u6eda\u52a8\u6570\u73a9\u5177\u6570\u636e\u96c6 \u7b80\u5355\u5730\u5c06\u6570\u636e\u96c6\u6295\u5c04\u5230\u4e00\u4e2a\u5e73\u9762\u4e0a\uff08\u4f8b\u5982\uff0c\u76f4\u63a5\u4e22\u5f03 x3 \uff09\u4f1a\u5c06\u745e\u58eb\u5377\u7684\u4e0d\u540c\u5c42\u53e0\u5728\u4e00\u8d77\uff0c\u5982\u56fe 8-5 \u5de6\u4fa7\u6240\u793a\u3002\u4f46\u662f\uff0c\u4f60\u771f\u6b63\u60f3\u8981\u7684\u662f\u5c55\u5f00\u745e\u58eb\u5377\u6240\u83b7\u53d6\u5230\u7684\u7c7b\u4f3c\u56fe 8-5 \u53f3\u4fa7\u7684 2D \u6570\u636e\u96c6\u3002 \u56fe 8-5 \u6295\u5c04\u5230\u5e73\u9762\u7684\u538b\u7f29\uff08\u5de6\uff09vs \u5c55\u5f00\u745e\u58eb\u5377\uff08\u53f3\uff09 \u6d41\u5f62\u5b66\u4e60 \u745e\u58eb\u5377\u4e00\u4e2a\u662f\u4e8c\u7ef4\u6d41\u5f62\u7684\u4f8b\u5b50\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4e8c\u7ef4\u6d41\u5f62\u662f\u4e00\u79cd\u4e8c\u7ef4\u5f62\u72b6\uff0c\u5b83\u53ef\u4ee5\u5728\u66f4\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u5f2f\u66f2\u6216\u626d\u66f2\u3002\u66f4\u4e00\u822c\u5730\uff0c\u4e00\u4e2a d \u7ef4\u6d41\u5f62\u662f\u7c7b\u4f3c\u4e8e d \u7ef4\u8d85\u5e73\u9762\u7684 n \u7ef4\u7a7a\u95f4\uff08\u5176\u4e2d d < n \uff09\u7684\u4e00\u90e8\u5206\u3002\u5728\u6211\u4eec\u745e\u58eb\u5377\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c d = 2 \uff0c n = 3 \uff1a\u5b83\u6709\u4e9b\u50cf 2D \u5e73\u9762\uff0c\u4f46\u662f\u5b83\u5b9e\u9645\u4e0a\u662f\u5728\u7b2c\u4e09\u7ef4\u4e2d\u5377\u66f2\u3002 \u8bb8\u591a\u964d\u7ef4\u7b97\u6cd5\u901a\u8fc7\u5bf9\u8bad\u7ec3\u5b9e\u4f8b\u6240\u5728\u7684\u6d41\u5f62\u8fdb\u884c\u5efa\u6a21\u4ece\u800c\u8fbe\u5230\u964d\u7ef4\u76ee\u7684\uff1b\u8fd9\u53eb\u505a\u6d41\u5f62\u5b66\u4e60\u3002\u5b83\u4f9d\u8d56\u4e8e\u6d41\u5f62\u731c\u60f3\uff08manifold assumption\uff09\uff0c\u4e5f\u88ab\u79f0\u4e3a\u6d41\u5f62\u5047\u8bbe\uff08manifold hypothesis\uff09\uff0c\u5b83\u8ba4\u4e3a\u5927\u591a\u6570\u73b0\u5b9e\u4e16\u754c\u7684\u9ad8\u7ef4\u6570\u636e\u96c6\u5927\u90fd\u9760\u8fd1\u4e00\u4e2a\u66f4\u4f4e\u7ef4\u7684\u6d41\u5f62\u3002\u8fd9\u79cd\u5047\u8bbe\u7ecf\u5e38\u5728\u5b9e\u8df5\u4e2d\u88ab\u8bc1\u5b9e\u3002 \u8ba9\u6211\u4eec\u518d\u56de\u5230 MNIST \u6570\u636e\u96c6\uff1a\u6240\u6709\u624b\u5199\u6570\u5b57\u56fe\u50cf\u90fd\u6709\u4e00\u4e9b\u76f8\u4f3c\u4e4b\u5904\u3002\u5b83\u4eec\u7531\u8fde\u7ebf\u7ec4\u6210\uff0c\u8fb9\u754c\u662f\u767d\u8272\u7684\uff0c\u5927\u591a\u662f\u5728\u56fe\u7247\u4e2d\u4e2d\u95f4\u7684\uff0c\u7b49\u7b49\u3002\u5982\u679c\u4f60\u968f\u673a\u751f\u6210\u56fe\u50cf\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u770b\u8d77\u6765\u50cf\u624b\u5199\u6570\u5b57\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u521b\u5efa\u6570\u5b57\u56fe\u50cf\uff0c\u90a3\u4e48\u60a8\u7684\u81ea\u7531\u5ea6\u8fdc\u4f4e\u4e8e\u60a8\u751f\u6210\u4efb\u4f55\u968f\u4fbf\u4e00\u4e2a\u56fe\u50cf\u65f6\u7684\u81ea\u7531\u5ea6\u3002\u8fd9\u4e9b\u7ea6\u675f\u5f80\u5f80\u4f1a\u5c06\u6570\u636e\u96c6\u538b\u7f29\u5230\u8f83\u4f4e\u7ef4\u6d41\u5f62\u4e2d\u3002 \u6d41\u5f62\u5047\u8bbe\u901a\u5e38\u5305\u542b\u7740\u53e6\u4e00\u4e2a\u9690\u542b\u7684\u5047\u8bbe\uff1a\u4f60\u73b0\u5728\u7684\u624b\u4e0a\u7684\u5de5\u4f5c\uff08\u4f8b\u5982\u5206\u7c7b\u6216\u56de\u5f52\uff09\u5982\u679c\u5728\u6d41\u5f62\u7684\u8f83\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u8868\u793a\uff0c\u90a3\u4e48\u5b83\u4eec\u4f1a\u53d8\u5f97\u66f4\u7b80\u5355\u3002\u4f8b\u5982\uff0c\u5728\u56fe 8-6 \u7684\u7b2c\u4e00\u884c\u4e2d\uff0c\u745e\u58eb\u5377\u88ab\u5206\u4e3a\u4e24\u7c7b\uff1a\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\uff08\u56fe\u5de6\u4e0a\uff09\uff0c\u5206\u7c7b\u8fb9\u754c\u4f1a\u76f8\u5f53\u590d\u6742\uff0c\u4f46\u5728\u4e8c\u7ef4\u5c55\u5f00\u7684\u6d41\u5f62\u7a7a\u95f4\u4e2d\uff08\u56fe\u53f3\u4e0a\uff09\uff0c\u5206\u7c7b\u8fb9\u754c\u662f\u4e00\u6761\u7b80\u5355\u7684\u76f4\u7ebf\u3002 \u4f46\u662f\uff0c\u8fd9\u4e2a\u5047\u8bbe\u5e76\u4e0d\u603b\u662f\u6210\u7acb\u3002\u4f8b\u5982\uff0c\u5728\u56fe 8-6 \u7684\u6700\u4e0b\u9762\u4e00\u884c\uff0c\u51b3\u7b56\u8fb9\u754c\u4f4d\u4e8e x1 = 5 \uff08\u56fe\u5de6\u4e0b\uff09\u3002\u8fd9\u4e2a\u51b3\u7b56\u8fb9\u754c\u5728\u539f\u59cb\u4e09\u7ef4\u7a7a\u95f4\uff08\u4e00\u4e2a\u5782\u76f4\u5e73\u9762\uff09\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u5728\u5c55\u5f00\u7684\u6d41\u5f62\u4e2d\u5374\u53d8\u5f97\u66f4\u590d\u6742\u4e86\uff08\u56db\u4e2a\u72ec\u7acb\u7ebf\u6bb5\u7684\u96c6\u5408\uff09\uff08\u56fe\u53f3\u4e0b\uff09\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u5728\u8bad\u7ec3\u6a21\u578b\u4e4b\u524d\u964d\u4f4e\u8bad\u7ec3\u96c6\u7684\u7ef4\u6570\uff0c\u90a3\u8bad\u7ec3\u901f\u5ea6\u80af\u5b9a\u4f1a\u52a0\u5feb\uff0c\u4f46\u5e76\u4e0d\u603b\u662f\u4f1a\u5f97\u51fa\u66f4\u597d\u7684\u8bad\u7ec3\u6548\u679c\uff1b\u8fd9\u4e00\u5207\u90fd\u53d6\u51b3\u4e8e\u6570\u636e\u96c6\u3002 \u5e0c\u671b\u4f60\u73b0\u5728\u5bf9\u4e8e\u7ef4\u6570\u7206\u70b8\u4ee5\u53ca\u964d\u7ef4\u7b97\u6cd5\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6709\u4e86\u4e00\u5b9a\u7684\u7406\u89e3\uff0c\u7279\u522b\u662f\u5bf9\u6d41\u5f62\u5047\u8bbe\u63d0\u51fa\u7684\u5185\u5bb9\u3002\u672c\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u964d\u7ef4\u7b97\u6cd5\u3002 \u56fe 8-6 \u51b3\u7b56\u8fb9\u754c\u5e76\u4e0d\u603b\u662f\u4f1a\u5728\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u53d8\u7684\u7b80\u5355 \u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09 \u4e3b\u6210\u5206\u5206\u6790\uff08Principal Component Analysis\uff09\u662f\u76ee\u524d\u4e3a\u6b62\u6700\u6d41\u884c\u7684\u964d\u7ef4\u7b97\u6cd5\u3002\u9996\u5148\u5b83\u627e\u5230\u63a5\u8fd1\u6570\u636e\u96c6\u5206\u5e03\u7684\u8d85\u5e73\u9762\uff0c\u7136\u540e\u5c06\u6240\u6709\u7684\u6570\u636e\u90fd\u6295\u5f71\u5230\u8fd9\u4e2a\u8d85\u5e73\u9762\u4e0a\u3002 \u4fdd\u7559\uff08\u6700\u5927\uff09\u65b9\u5dee \u5728\u5c06\u8bad\u7ec3\u96c6\u6295\u5f71\u5230\u8f83\u4f4e\u7ef4\u8d85\u5e73\u9762\u4e4b\u524d\uff0c\u60a8\u9996\u5148\u9700\u8981\u9009\u62e9\u6b63\u786e\u7684\u8d85\u5e73\u9762\u3002\u4f8b\u5982\u56fe 8-7 \u5de6\u4fa7\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u7ef4\u6570\u636e\u96c6\uff0c\u4ee5\u53ca\u4e09\u4e2a\u4e0d\u540c\u7684\u8f74\uff08\u5373\u4e00\u7ef4\u8d85\u5e73\u9762\uff09\u3002\u56fe\u53f3\u8fb9\u662f\u5c06\u6570\u636e\u96c6\u6295\u5f71\u5230\u6bcf\u4e2a\u8f74\u4e0a\u7684\u7ed3\u679c\u3002\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u6295\u5f71\u5230\u5b9e\u7ebf\u4e0a\u4fdd\u7559\u4e86\u6700\u5927\u65b9\u5dee\uff0c\u800c\u5728\u70b9\u7ebf\u4e0a\u7684\u6295\u5f71\u53ea\u4fdd\u7559\u4e86\u975e\u5e38\u5c0f\u7684\u65b9\u5dee\uff0c\u6295\u5f71\u5230\u865a\u7ebf\u4e0a\u4fdd\u7559\u7684\u65b9\u5dee\u5219\u5904\u4e8e\u4e0a\u8ff0\u4e24\u8005\u4e4b\u95f4\u3002 \u56fe 8-7 \u9009\u62e9\u6295\u5c04\u5230\u54ea\u4e00\u4e2a\u5b50\u7a7a\u95f4 \u9009\u62e9\u4fdd\u6301\u6700\u5927\u65b9\u5dee\u7684\u8f74\u770b\u8d77\u6765\u662f\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u5b83\u5f88\u53ef\u80fd\u6bd4\u5176\u4ed6\u6295\u5f71\u635f\u5931\u66f4\u5c11\u7684\u4fe1\u606f\u3002\u8bc1\u660e\u8fd9\u79cd\u9009\u62e9\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u9009\u62e9\u8fd9\u4e2a\u8f74\u4f7f\u5f97\u5c06\u539f\u59cb\u6570\u636e\u96c6\u6295\u5f71\u5230\u8be5\u8f74\u4e0a\u7684\u5747\u65b9\u8ddd\u79bb\u6700\u5c0f\u3002\u8fd9\u662f\u5c31 PCA \u80cc\u540e\u7684\u601d\u60f3\uff0c\u76f8\u5f53\u7b80\u5355\u3002 \u4e3b\u6210\u5206\uff08Principle Componets\uff09 PCA \u5bfb\u627e\u8bad\u7ec3\u96c6\u4e2d\u53ef\u83b7\u5f97\u6700\u5927\u65b9\u5dee\u7684\u8f74\u3002\u5728\u56fe 8-7 \u4e2d\uff0c\u5b83\u662f\u4e00\u6761\u5b9e\u7ebf\u3002\u5b83\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e2a\u4e0e\u7b2c\u4e00\u4e2a\u8f74\u6b63\u4ea4\u7684\u7b2c\u4e8c\u4e2a\u8f74\uff0c\u9009\u62e9\u5b83\u53ef\u4ee5\u83b7\u5f97\u6700\u5927\u7684\u6b8b\u5dee\u3002\u5728\u8fd9\u4e2a 2D \u4f8b\u5b50\u4e2d\uff0c\u6ca1\u6709\u9009\u62e9\uff1a\u5c31\u53ea\u6709\u8fd9\u6761\u70b9\u7ebf\u3002\u4f46\u5982\u679c\u5728\u4e00\u4e2a\u66f4\u9ad8\u7ef4\u7684\u6570\u636e\u96c6\u4e2d\uff0cPCA \u4e5f\u53ef\u4ee5\u627e\u5230\u4e0e\u524d\u4e24\u4e2a\u8f74\u6b63\u4ea4\u7684\u7b2c\u4e09\u4e2a\u8f74\uff0c\u4ee5\u53ca\u4e0e\u6570\u636e\u96c6\u4e2d\u7ef4\u6570\u76f8\u540c\u7684\u7b2c\u56db\u4e2a\u8f74\uff0c\u7b2c\u4e94\u4e2a\u8f74\u7b49\u3002 \u5b9a\u4e49\u7b2c i \u4e2a\u8f74\u7684\u5355\u4f4d\u77e2\u91cf\u88ab\u79f0\u4e3a\u7b2c i \u4e2a\u4e3b\u6210\u5206\uff08PC\uff09\u3002\u5728\u56fe 8-7 \u4e2d\uff0c\u7b2c\u4e00\u4e2a PC \u662f c1 \uff0c\u7b2c\u4e8c\u4e2a PC \u662f c2 \u3002\u5728\u56fe 8-2 \u4e2d\uff0c\u524d\u4e24\u4e2a PC \u7528\u5e73\u9762\u4e2d\u7684\u6b63\u4ea4\u7bad\u5934\u8868\u793a\uff0c\u7b2c\u4e09\u4e2a PC \u4e0e\u4e0a\u8ff0 PC \u5f62\u6210\u7684\u5e73\u9762\u6b63\u4ea4\uff08\u6307\u5411\u4e0a\u6216\u4e0b\uff09\u3002 \u6982\u8ff0\uff1a \u4e3b\u6210\u5206\u7684\u65b9\u5411\u4e0d\u7a33\u5b9a\uff1a\u5982\u679c\u60a8\u7a0d\u5fae\u6253\u4e71\u4e00\u4e0b\u8bad\u7ec3\u96c6\u5e76\u518d\u6b21\u8fd0\u884c PCA\uff0c\u5219\u67d0\u4e9b\u65b0 PC \u53ef\u80fd\u4f1a\u6307\u5411\u4e0e\u539f\u59cb PC \u65b9\u5411\u76f8\u53cd\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u901a\u5e38\u4ecd\u4f4d\u4e8e\u540c\u4e00\u8f74\u7ebf\u4e0a\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u5bf9 PC \u751a\u81f3\u53ef\u80fd\u4f1a\u65cb\u8f6c\u6216\u4ea4\u6362\uff0c\u4f46\u5b83\u4eec\u5b9a\u4e49\u7684\u5e73\u9762\u901a\u5e38\u4fdd\u6301\u4e0d\u53d8\u3002 \u90a3\u4e48\u5982\u4f55\u627e\u5230\u8bad\u7ec3\u96c6\u7684\u4e3b\u6210\u5206\u5462\uff1f\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u79cd\u79f0\u4e3a\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09\u7684\u6807\u51c6\u77e9\u9635\u5206\u89e3\u6280\u672f\uff0c\u53ef\u4ee5\u5c06\u8bad\u7ec3\u96c6\u77e9\u9635 X \u5206\u89e3\u4e3a\u4e09\u4e2a\u77e9\u9635 U\u00b7\u03a3\u00b7V^T \u7684\u70b9\u79ef\uff0c\u5176\u4e2d V^T \u5305\u542b\u6211\u4eec\u60f3\u8981\u7684\u6240\u6709\u4e3b\u6210\u5206\uff0c\u5982\u516c\u5f0f 8-1 \u6240\u793a\u3002 \u516c\u5f0f 8-1 \u4e3b\u6210\u5206\u77e9\u9635 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u4f7f\u7528\u4e86 Numpy \u63d0\u4f9b\u7684 svd() \u51fd\u6570\u83b7\u5f97\u8bad\u7ec3\u96c6\u7684\u6240\u6709\u4e3b\u6210\u5206\uff0c\u7136\u540e\u63d0\u53d6\u524d\u4e24\u4e2a PC: X_centered=X-X.mean(axis=0) U,s,V=np.linalg.svd(X_centered) c1=V.T[:,0] c2=V.T[:,1] \u8b66\u544a\uff1aPCA \u5047\u5b9a\u6570\u636e\u96c6\u4ee5\u539f\u70b9\u4e3a\u4e2d\u5fc3\u3002\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0cScikit-Learn \u7684 PCA \u7c7b\u8d1f\u8d23\u4e3a\u60a8\u7684\u6570\u636e\u96c6\u4e2d\u5fc3\u5316\u5904\u7406\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u81ea\u5df1\u5b9e\u73b0 PCA\uff08\u5982\u524d\u9762\u7684\u793a\u4f8b\u6240\u793a\uff09\uff0c\u6216\u8005\u5982\u679c\u60a8\u4f7f\u7528\u5176\u4ed6\u5e93\uff0c\u4e0d\u8981\u5fd8\u8bb0\u9996\u5148\u8981\u5148\u5bf9\u6570\u636e\u505a\u4e2d\u5fc3\u5316\u5904\u7406\u3002 \u6295\u5f71\u5230 d \u7ef4\u7a7a\u95f4 \u4e00\u65e6\u786e\u5b9a\u4e86\u6240\u6709\u7684\u4e3b\u6210\u5206\uff0c\u4f60\u5c31\u53ef\u4ee5\u901a\u8fc7\u5c06\u6570\u636e\u96c6\u6295\u5f71\u5230\u7531\u524d d \u4e2a\u4e3b\u6210\u5206\u6784\u6210\u7684\u8d85\u5e73\u9762\u4e0a\uff0c\u4ece\u800c\u5c06\u6570\u636e\u96c6\u7684\u7ef4\u6570\u964d\u81f3 d \u7ef4\u3002\u9009\u62e9\u8fd9\u4e2a\u8d85\u5e73\u9762\u53ef\u4ee5\u786e\u4fdd\u6295\u5f71\u5c06\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684\u65b9\u5dee\u3002\u4f8b\u5982\uff0c\u5728\u56fe 8-2 \u4e2d\uff0c3D \u6570\u636e\u96c6\u88ab\u6295\u5f71\u5230\u7531\u524d\u4e24\u4e2a\u4e3b\u6210\u5206\u5b9a\u4e49\u7684 2D \u5e73\u9762\uff0c\u4fdd\u7559\u4e86\u5927\u90e8\u5206\u6570\u636e\u96c6\u7684\u65b9\u5dee\u3002\u56e0\u6b64\uff0c2D \u6295\u5f71\u770b\u8d77\u6765\u975e\u5e38\u50cf\u539f\u59cb 3D \u6570\u636e\u96c6\u3002 \u4e3a\u4e86\u5c06\u8bad\u7ec3\u96c6\u6295\u5f71\u5230\u8d85\u5e73\u9762\u4e0a\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u8ba1\u7b97\u8bad\u7ec3\u96c6\u77e9\u9635 X \u548c Wd \u7684\u70b9\u79ef\uff0c Wd \u5b9a\u4e49\u4e3a\u5305\u542b\u524d d \u4e2a\u4e3b\u6210\u5206\u7684\u77e9\u9635\uff08\u5373\u7531 V^T \u7684\u524d d \u5217\u7ec4\u6210\u7684\u77e9\u9635\uff09\uff0c\u5982\u516c\u5f0f 8-2 \u6240\u793a\u3002 \u516c\u5f0f 8-2 \u5c06\u8bad\u7ec3\u96c6\u6295\u5f71\u5230 d \u7ef4\u7a7a\u95f4 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u5c06\u8bad\u7ec3\u96c6\u6295\u5f71\u5230\u7531\u524d\u4e24\u4e2a\u4e3b\u6210\u5206\u5b9a\u4e49\u7684\u8d85\u5e73\u9762\u4e0a\uff1a W2=V.T[:,:2] X2D=X_centered.dot(W2) \u597d\u4e86\u4f60\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e2a\u4e1c\u897f\u4e86\uff01\u4f60\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u7ed9\u4efb\u4f55\u4e00\u4e2a\u6570\u636e\u96c6\u964d\u7ef4\u800c\u53c8\u80fd\u5c3d\u53ef\u80fd\u7684\u4fdd\u7559\u539f\u6570\u636e\u96c6\u7684\u65b9\u5dee\u4e86\u3002 \u4f7f\u7528 Scikit-Learn Scikit-Learn \u7684 PCA \u7c7b\u4f7f\u7528 SVD \u5206\u89e3\u6765\u5b9e\u73b0\uff0c\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u505a\u7684\u90a3\u6837\u3002\u4ee5\u4e0b\u4ee3\u7801\u5e94\u7528 PCA \u5c06\u6570\u636e\u96c6\u7684\u7ef4\u5ea6\u964d\u81f3\u4e24\u7ef4\uff08\u8bf7\u6ce8\u610f\uff0c\u5b83\u4f1a\u81ea\u52a8\u5904\u7406\u6570\u636e\u7684\u4e2d\u5fc3\u5316\uff09\uff1a from sklearn.decomposition import PCA pca=PCA(n_components=2) X2D=pca.fit_transform(X) \u5c06 PCA \u8f6c\u5316\u5668\u5e94\u7528\u4e8e\u6570\u636e\u96c6\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 components_ \u8bbf\u95ee\u6bcf\u4e00\u4e2a\u4e3b\u6210\u5206\uff08\u6ce8\u610f\uff0c\u5b83\u8fd4\u56de\u4ee5 PC \u4f5c\u4e3a\u6c34\u5e73\u5411\u91cf\u7684\u77e9\u9635\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u83b7\u5f97\u7b2c\u4e00\u4e2a\u4e3b\u6210\u5206\u5219\u53ef\u4ee5\u5199\u6210 pca.components_.T[:,0] \uff09\u3002 \u65b9\u5dee\u89e3\u91ca\u7387\uff08Explained Variance Ratio\uff09 \u53e6\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u4fe1\u606f\u662f\u6bcf\u4e2a\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u89e3\u91ca\u7387\uff0c\u53ef\u901a\u8fc7 explained_variance_ratio_ \u53d8\u91cf\u83b7\u5f97\u3002\u5b83\u8868\u793a\u4f4d\u4e8e\u6bcf\u4e2a\u4e3b\u6210\u5206\u8f74\u4e0a\u7684\u6570\u636e\u96c6\u65b9\u5dee\u7684\u6bd4\u4f8b\u3002\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u56fe 8-2 \u4e2d\u8868\u793a\u7684\u4e09\u7ef4\u6570\u636e\u96c6\u524d\u4e24\u4e2a\u5206\u91cf\u7684\u65b9\u5dee\u89e3\u91ca\u7387\uff1a >>> print(pca.explained_variance_ratio_) array([0.84248607, 0.14631839]) \u8fd9\u8868\u660e\uff0c84.2% \u7684\u6570\u636e\u96c6\u65b9\u5dee\u4f4d\u4e8e\u7b2c\u4e00\u8f74\uff0c14.6% \u7684\u65b9\u5dee\u4f4d\u4e8e\u7b2c\u4e8c\u8f74\u3002\u7b2c\u4e09\u8f74\u7684\u8fd9\u4e00\u6bd4\u4f8b\u4e0d\u52301.2\uff05\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u53ef\u80fd\u6ca1\u6709\u5305\u542b\u4ec0\u4e48\u4fe1\u606f\u3002 \u9009\u62e9\u6b63\u786e\u7684\u7ef4\u5ea6 \u901a\u5e38\u6211\u4eec\u503e\u5411\u4e8e\u9009\u62e9\u52a0\u8d77\u6765\u5230\u65b9\u5dee\u89e3\u91ca\u7387\u80fd\u591f\u8fbe\u5230\u8db3\u591f\u5360\u6bd4\uff08\u4f8b\u5982 95%\uff09\u7684\u7ef4\u5ea6\u7684\u6570\u91cf\uff0c\u800c\u4e0d\u662f\u4efb\u610f\u9009\u62e9\u8981\u964d\u4f4e\u5230\u7684\u7ef4\u5ea6\u6570\u91cf\u3002\u5f53\u7136\uff0c\u9664\u975e\u60a8\u6b63\u5728\u4e3a\u6570\u636e\u53ef\u89c6\u5316\u800c\u964d\u4f4e\u7ef4\u5ea6 -- \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u901a\u5e38\u5e0c\u671b\u5c06\u7ef4\u5ea6\u964d\u4f4e\u5230 2 \u6216 3\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5728\u4e0d\u964d\u7ef4\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c PCA\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u4fdd\u7559\u8bad\u7ec3\u96c6\u65b9\u5dee 95% \u6240\u9700\u7684\u6700\u5c0f\u7ef4\u6570\uff1a pca=PCA() pac.fit(X) cumsum=np.cumsum(pca.explained_variance_ratio_) d=np.argmax(cumsum>=0.95)+1 \u4f60\u53ef\u4ee5\u8bbe\u7f6e n_components = d \u5e76\u518d\u6b21\u8fd0\u884c PCA\u3002\u4f46\u662f\uff0c\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\uff1a\u4e0d\u6307\u5b9a\u4f60\u60f3\u8981\u4fdd\u7559\u7684\u4e3b\u6210\u5206\u4e2a\u6570\uff0c\u800c\u662f\u5c06 n_components \u8bbe\u7f6e\u4e3a 0.0 \u5230 1.0 \u4e4b\u95f4\u7684\u6d6e\u70b9\u6570\uff0c\u8868\u660e\u60a8\u5e0c\u671b\u4fdd\u7559\u7684\u65b9\u5dee\u6bd4\u7387\uff1a pca=PCA(n_components=0.95) X_reduced=pca.fit_transform(X) \u53e6\u4e00\u79cd\u9009\u62e9\u662f\u753b\u51fa\u65b9\u5dee\u89e3\u91ca\u7387\u5173\u4e8e\u7ef4\u6570\u7684\u51fd\u6570\uff08\u7b80\u5355\u5730\u7ed8\u5236 cumsum \uff1b\u53c2\u89c1\u56fe 8-8\uff09\u3002\u66f2\u7ebf\u4e2d\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u8098\u90e8\uff0c\u65b9\u5dee\u89e3\u91ca\u7387\u505c\u6b62\u5feb\u901f\u589e\u957f\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u6570\u636e\u96c6\u7684\u771f\u6b63\u7684\u7ef4\u5ea6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5c06\u7ef4\u5ea6\u964d\u4f4e\u5230\u5927\u7ea6100\u4e2a\u7ef4\u5ea6\u4e0d\u4f1a\u5931\u53bb\u592a\u591a\u7684\u53ef\u89e3\u91ca\u65b9\u5dee\u3002 \u56fe 8-8 \u53ef\u89e3\u91ca\u65b9\u5dee\u5173\u4e8e\u7ef4\u6570\u7684\u51fd\u6570 PCA \u538b\u7f29 \u663e\u7136\uff0c\u5728\u964d\u7ef4\u4e4b\u540e\uff0c\u8bad\u7ec3\u96c6\u5360\u7528\u7684\u7a7a\u95f4\u8981\u5c11\u5f97\u591a\u3002\u4f8b\u5982\uff0c\u5c1d\u8bd5\u5c06 PCA \u5e94\u7528\u4e8e MNIST \u6570\u636e\u96c6\uff0c\u540c\u65f6\u4fdd\u7559 95% \u7684\u65b9\u5dee\u3002\u4f60\u5e94\u8be5\u53d1\u73b0\u6bcf\u4e2a\u5b9e\u4f8b\u53ea\u6709 150 \u591a\u4e2a\u7279\u5f81\uff0c\u800c\u4e0d\u662f\u539f\u6765\u7684 784 \u4e2a\u7279\u5f81\u3002\u56e0\u6b64\uff0c\u5c3d\u7ba1\u5927\u90e8\u5206\u65b9\u5dee\u90fd\u4fdd\u7559\u4e0b\u6765\uff0c\u4f46\u6570\u636e\u96c6\u73b0\u5728\u8fd8\u4e0d\u5230\u5176\u539f\u59cb\u5927\u5c0f\u7684 20%\uff01\u8fd9\u662f\u4e00\u4e2a\u5408\u7406\u7684\u538b\u7f29\u6bd4\u7387\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u8fd9\u53ef\u4ee5\u5982\u4f55\u6781\u5927\u5730\u52a0\u5feb\u5206\u7c7b\u7b97\u6cd5\uff08\u5982 SVM \u5206\u7c7b\u5668\uff09\u7684\u901f\u5ea6\u3002 \u901a\u8fc7\u5e94\u7528 PCA \u6295\u5f71\u7684\u9006\u53d8\u6362\uff0c\u4e5f\u53ef\u4ee5\u5c06\u7f29\u5c0f\u7684\u6570\u636e\u96c6\u89e3\u538b\u7f29\u56de 784 \u7ef4\u3002\u5f53\u7136\u8fd9\u5e76\u4e0d\u4f1a\u8fd4\u56de\u7ed9\u4f60\u6700\u539f\u59cb\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u6295\u5f71\u4e22\u5931\u4e86\u4e00\u4e9b\u4fe1\u606f\uff08\u57285\uff05\u7684\u65b9\u5dee\u5185\uff09\uff0c\u4f46\u5b83\u53ef\u80fd\u975e\u5e38\u63a5\u8fd1\u539f\u59cb\u6570\u636e\u3002\u539f\u59cb\u6570\u636e\u548c\u91cd\u6784\u6570\u636e\u4e4b\u95f4\u7684\u5747\u65b9\u8ddd\u79bb\uff08\u538b\u7f29\u7136\u540e\u89e3\u538b\u7f29\uff09\u88ab\u79f0\u4e3a\u91cd\u6784\u8bef\u5dee\uff08reconstruction error\uff09\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c06 MNIST \u6570\u636e\u96c6\u538b\u7f29\u5230 154 \u7ef4\uff0c\u7136\u540e\u4f7f\u7528 inverse_transform() \u65b9\u6cd5\u5c06\u5176\u89e3\u538b\u7f29\u56de 784 \u7ef4\u3002\u56fe 8-9 \u663e\u793a\u4e86\u539f\u59cb\u8bad\u7ec3\u96c6\uff08\u5de6\u4fa7\uff09\u7684\u51e0\u4f4d\u6570\u5b57\u5728\u538b\u7f29\u5e76\u89e3\u538b\u7f29\u540e\uff08\u53f3\u4fa7\uff09\u7684\u5bf9\u5e94\u6570\u5b57\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u6709\u8f7b\u5fae\u7684\u56fe\u50cf\u8d28\u91cf\u964d\u4f4e\uff0c\u4f46\u6570\u5b57\u4ecd\u7136\u5927\u90e8\u5206\u5b8c\u597d\u65e0\u635f\u3002 pca=PCA(n_components=154) X_mnist_reduced=pca.fit_transform(X_mnist) X_mnist_recovered=pca.inverse_transform(X_mnist_reduced) \u56fe 8-9 MNIST \u4fdd\u7559 95 \u65b9\u5dee\u7684\u538b\u7f29 \u9006\u53d8\u6362\u7684\u516c\u5f0f\u5982\u516c\u5f0f 8-3 \u6240\u793a \u516c\u5f0f 8-3 PCA\u9006\u53d8\u6362\uff0c\u56de\u9000\u5230\u539f\u6765\u7684\u6570\u636e\u7ef4\u5ea6 \u589e\u91cf PCA\uff08Incremental PCA\uff09 \u5148\u524d PCA \u5b9e\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u5b83\u9700\u8981\u5728\u5185\u5b58\u4e2d\u5904\u7406\u6574\u4e2a\u8bad\u7ec3\u96c6\u4ee5\u4fbf SVD \u7b97\u6cd5\u8fd0\u884c\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u5f00\u53d1\u4e86\u589e\u91cf PCA\uff08IPCA\uff09\u7b97\u6cd5\uff1a\u60a8\u53ef\u4ee5\u5c06\u8bad\u7ec3\u96c6\u5206\u6279\uff0c\u5e76\u4e00\u6b21\u53ea\u5bf9\u4e00\u4e2a\u6279\u91cf\u4f7f\u7528 IPCA \u7b97\u6cd5\u3002\u8fd9\u5bf9\u5927\u578b\u8bad\u7ec3\u96c6\u975e\u5e38\u6709\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u7ebf\u5e94\u7528 PCA\uff08\u5373\u5728\u65b0\u5b9e\u4f8b\u5230\u8fbe\u65f6\u5373\u65f6\u8fd0\u884c\uff09\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5c06 MNIST \u6570\u636e\u96c6\u5206\u6210 100 \u4e2a\u5c0f\u6279\u91cf\uff08\u4f7f\u7528 NumPy \u7684 array_split() \u51fd\u6570\uff09\uff0c\u5e76\u5c06\u5b83\u4eec\u63d0\u4f9b\u7ed9 Scikit-Learn \u7684 IncrementalPCA \u7c7b\uff0c\u4ee5\u5c06 MNIST \u6570\u636e\u96c6\u7684\u7ef4\u5ea6\u964d\u4f4e\u5230 154 \u7ef4\uff08\u5c31\u50cf\u4ee5\u524d\u4e00\u6837\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u5fc5\u987b\u5bf9\u6bcf\u4e2a\u6700\u5c0f\u6279\u6b21\u8c03\u7528 partial_fit() \u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u5bf9\u6574\u4e2a\u8bad\u7ec3\u96c6\u4f7f\u7528 fit() \u65b9\u6cd5\uff1a from sklearn.decomposition import IncrementalPCA n_batches=100 inc_pca=IncrementalPCA(n_components=154) for X_batch in np.array_spplit(X_mnist,n_batches): inc_pca.partial_fit(X_batch) X_mnist_reduced=inc_pca.transform(X_mnist) \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 NumPy \u7684 memmap \u7c7b\uff0c\u5b83\u5141\u8bb8\u60a8\u64cd\u4f5c\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u7684\u5927\u578b\u6570\u7ec4\uff0c\u5c31\u597d\u50cf\u5b83\u5b8c\u5168\u5728\u5185\u5b58\u4e2d\uff1b\u8be5\u7c7b\u4ec5\u5728\u9700\u8981\u65f6\u52a0\u8f7d\u5185\u5b58\u4e2d\u6240\u9700\u7684\u6570\u636e\u3002\u7531\u4e8e\u589e\u91cf PCA \u7c7b\u5728\u4efb\u4f55\u65f6\u95f4\u5185\u4ec5\u4f7f\u7528\u6570\u7ec4\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u56e0\u6b64\u5185\u5b58\u4f7f\u7528\u91cf\u4ecd\u53d7\u5230\u63a7\u5236\u3002\u8fd9\u53ef\u4ee5\u8c03\u7528\u901a\u5e38\u7684 fit() \u65b9\u6cd5\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\uff1a X_mm=np.memmap(filename,dtype='float32',mode='readonly',shape=(m,n)) batch_size=m//n_batches inc_pca=IncrementalPCA(n_components=154,batch_size=batch_size) inc_pca.fit(X_mm) \u968f\u673a PCA\uff08Randomized PCA\uff09 Scikit-Learn \u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u6267\u884c PCA \u7684\u9009\u62e9\uff0c\u79f0\u4e3a\u968f\u673a PCA\u3002\u8fd9\u662f\u4e00\u79cd\u968f\u673a\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u524dd\u4e2a\u4e3b\u6210\u5206\u7684\u8fd1\u4f3c\u503c\u3002\u5b83\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u662f O(m \u00d7 d^2) + O(d^3) \uff0c\u800c\u4e0d\u662f O(m \u00d7 n^2) + O(n^3) \uff0c\u6240\u4ee5\u5f53 d \u8fdc\u5c0f\u4e8e n \u65f6\uff0c\u5b83\u6bd4\u4e4b\u524d\u7684\u7b97\u6cd5\u5feb\u5f97\u591a\u3002 rnd_pca=PCA(n_components=154,svd_solver='randomized') X_reduced=rnd_pca.fit_transform(X_mnist) \u6838 PCA\uff08Kernel PCA\uff09 \u5728\u7b2c 5 \u7ae0\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u6838\u6280\u5de7\uff0c\u4e00\u79cd\u5c06\u5b9e\u4f8b\u9690\u5f0f\u6620\u5c04\u5230\u975e\u5e38\u9ad8\u7ef4\u7a7a\u95f4\uff08\u79f0\u4e3a\u7279\u5f81\u7a7a\u95f4\uff09\u7684\u6570\u5b66\u6280\u672f\uff0c\u8ba9\u652f\u6301\u5411\u91cf\u673a\u53ef\u4ee5\u5e94\u7528\u4e8e\u975e\u7ebf\u6027\u5206\u7c7b\u548c\u56de\u5f52\u3002\u56de\u60f3\u4e00\u4e0b\uff0c\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c\u5bf9\u5e94\u4e8e\u539f\u59cb\u7a7a\u95f4\u4e2d\u7684\u590d\u6742\u975e\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c\u3002 \u4e8b\u5b9e\u8bc1\u660e\uff0c\u540c\u6837\u7684\u6280\u5de7\u53ef\u4ee5\u5e94\u7528\u4e8e PCA\uff0c\u4ece\u800c\u53ef\u4ee5\u6267\u884c\u590d\u6742\u7684\u975e\u7ebf\u6027\u6295\u5f71\u6765\u964d\u4f4e\u7ef4\u5ea6\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u6838 PCA\uff08kPCA\uff09\u3002\u5b83\u901a\u5e38\u80fd\u591f\u5f88\u597d\u5730\u4fdd\u7559\u6295\u5f71\u540e\u7684\u7c07\uff0c\u6709\u65f6\u751a\u81f3\u53ef\u4ee5\u5c55\u5f00\u5206\u5e03\u8fd1\u4f3c\u4e8e\u626d\u66f2\u6d41\u5f62\u7684\u6570\u636e\u96c6\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528 Scikit-Learn \u7684 KernelPCA \u7c7b\u6765\u6267\u884c\u5e26\u6709 RBF \u6838\u7684 kPCA\uff08\u6709\u5173 RBF \u6838\u548c\u5176\u4ed6\u6838\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u7b2c 5 \u7ae0\uff09\uff1a from sklearn.decomposition import KernelPCA rbf_pca=KernelPCA(n_components=2,kernel='rbf',gamma=0.04) X_reduced=rbf_pca.fit_transform(X) \u56fe 8-10 \u5c55\u793a\u4e86\u4f7f\u7528\u7ebf\u6027\u6838\uff08\u7b49\u540c\u4e8e\u7b80\u5355\u7684\u4f7f\u7528 PCA \u7c7b\uff09\uff0cRBF \u6838\uff0csigmoid \u6838\uff08Logistic\uff09\u5c06\u745e\u58eb\u5377\u964d\u5230 2 \u7ef4\u3002 \u56fe 8-10 \u4f7f\u7528\u4e0d\u540c\u6838\u7684 kPCA \u5c06\u745e\u58eb\u5377\u964d\u5230 2 \u7ef4 \u9009\u62e9\u4e00\u79cd\u6838\u5e76\u8c03\u6574\u8d85\u53c2\u6570 \u7531\u4e8e kPCA \u662f\u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u56e0\u6b64\u6ca1\u6709\u660e\u663e\u7684\u6027\u80fd\u6307\u6807\u53ef\u4ee5\u5e2e\u52a9\u60a8\u9009\u62e9\u6700\u4f73\u7684\u6838\u65b9\u6cd5\u548c\u8d85\u53c2\u6570\u503c\u3002\u4f46\u662f\uff0c\u964d\u7ef4\u901a\u5e38\u662f\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff08\u4f8b\u5982\u5206\u7c7b\uff09\u7684\u51c6\u5907\u6b65\u9aa4\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u7f51\u683c\u641c\u7d22\u6765\u9009\u62e9\u53ef\u4ee5\u8ba9\u8be5\u4efb\u52a1\u8fbe\u5230\u6700\u4f73\u8868\u73b0\u7684\u6838\u65b9\u6cd5\u548c\u8d85\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u4e24\u6b65\u7684\u6d41\u6c34\u7ebf\uff0c\u9996\u5148\u4f7f\u7528 kPCA \u5c06\u7ef4\u5ea6\u964d\u81f3\u4e24\u7ef4\uff0c\u7136\u540e\u5e94\u7528 Logistic \u56de\u5f52\u8fdb\u884c\u5206\u7c7b\u3002\u7136\u540e\u5b83\u4f7f\u7528 Grid SearchCV \u4e3a kPCA \u627e\u5230\u6700\u4f73\u7684\u6838\u548c gamma \u503c\uff0c\u4ee5\u4fbf\u5728\u6700\u540e\u83b7\u5f97\u6700\u4f73\u7684\u5206\u7c7b\u51c6\u786e\u6027\uff1a from sklearn.model_selection import GridSearchCV from sklearn.linear_model import LogisticRegression from sklearn.pipeline import Pipeline clf = Pipeline([ (\"kpca\", KernelPCA(n_components=2)), (\"log_reg\", LogisticRegression()) ]) param_grid = [{ \"kpca__gamma\": np.linspace(0.03, 0.05, 10), \"kpca__kernel\": [\"rbf\", \"sigmoid\"] }] grid_search = GridSearchCV(clf, param_grid, cv=3) grid_search.fit(X, y) \u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 best_params_ \u53d8\u91cf\u6765\u67e5\u770b\u4f7f\u6a21\u578b\u6548\u679c\u6700\u597d\u7684\u6838\u548c\u8d85\u53c2\u6570\uff1a >>> print(grid_search.best_params_) {'kpca__gamma': 0.043333333333333335, 'kpca__kernel': 'rbf'} \u53e6\u4e00\u79cd\u5b8c\u5168\u4e3a\u975e\u76d1\u7763\u7684\u65b9\u6cd5\uff0c\u662f\u9009\u62e9\u4ea7\u751f\u6700\u4f4e\u91cd\u5efa\u8bef\u5dee\u7684\u6838\u548c\u8d85\u53c2\u6570\u3002\u4f46\u662f\uff0c\u91cd\u5efa\u5e76\u4e0d\u50cf\u7ebf\u6027 PCA \u90a3\u6837\u5bb9\u6613\u3002\u8fd9\u91cc\u662f\u539f\u56e0\uff1a\u56fe 8-11 \u663e\u793a\u4e86\u539f\u59cb\u745e\u58eb\u5377 3D \u6570\u636e\u96c6\uff08\u5de6\u4e0a\u89d2\uff09\uff0c\u5e76\u4e14\u4f7f\u7528 RBF \u6838\u5e94\u7528 kPCA \u540e\u751f\u6210\u7684\u4e8c\u7ef4\u6570\u636e\u96c6\uff08\u53f3\u4e0a\u89d2\uff09\u3002\u7531\u4e8e\u6838\u6280\u5de7\uff0c\u8fd9\u5728\u6570\u5b66\u4e0a\u7b49\u540c\u4e8e\u4f7f\u7528\u7279\u5f81\u6620\u5c04 \u03c6 \u5c06\u8bad\u7ec3\u96c6\u6620\u5c04\u5230\u65e0\u9650\u7ef4\u7279\u5f81\u7a7a\u95f4\uff08\u53f3\u4e0b\uff09\uff0c\u7136\u540e\u4f7f\u7528\u7ebf\u6027 PCA \u5c06\u53d8\u6362\u7684\u8bad\u7ec3\u96c6\u6295\u5f71\u5230 2D\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5728\u7f29\u51cf\u7a7a\u95f4\u4e2d\u5bf9\u7ed9\u5b9a\u5b9e\u4f8b\u5b9e\u73b0\u53cd\u5411\u7ebf\u6027 PCA \u6b65\u9aa4\uff0c\u5219\u91cd\u6784\u70b9\u5c06\u4f4d\u4e8e\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u800c\u4e0d\u662f\u4f4d\u4e8e\u539f\u59cb\u7a7a\u95f4\u4e2d\uff08\u4f8b\u5982\uff0c\u5982\u56fe\u4e2d\u7531 x \u8868\u793a\u7684\u90a3\u6837\uff09\u3002\u7531\u4e8e\u7279\u5f81\u7a7a\u95f4\u662f\u65e0\u9650\u7ef4\u7684\uff0c\u6211\u4eec\u4e0d\u80fd\u627e\u51fa\u91cd\u5efa\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u6cd5\u8ba1\u7b97\u771f\u5b9e\u7684\u91cd\u5efa\u8bef\u5dee\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u53ef\u4ee5\u5728\u539f\u59cb\u7a7a\u95f4\u4e2d\u627e\u5230\u4e00\u4e2a\u8d34\u8fd1\u91cd\u5efa\u70b9\u7684\u70b9\u3002\u8fd9\u88ab\u79f0\u4e3a\u91cd\u5efa\u524d\u56fe\u50cf\uff08reconstruction pre-image\uff09\u3002\u4e00\u65e6\u4f60\u6709\u8fd9\u4e2a\u524d\u56fe\u50cf\uff0c\u4f60\u5c31\u53ef\u4ee5\u6d4b\u91cf\u5176\u4e0e\u539f\u59cb\u5b9e\u4f8b\u7684\u5e73\u65b9\u8ddd\u79bb\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u6700\u5c0f\u5316\u91cd\u5efa\u524d\u56fe\u50cf\u9519\u8bef\u7684\u6838\u548c\u8d85\u53c2\u6570\u3002 \u56fe 8-11 \u6838 PCA \u548c\u91cd\u5efa\u524d\u56fe\u50cf\u8bef\u5dee \u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u5982\u4f55\u8fdb\u884c\u8fd9\u79cd\u91cd\u5efa\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u8bad\u7ec3\u4e00\u4e2a\u76d1\u7763\u56de\u5f52\u6a21\u578b\uff0c\u5c06\u9884\u8ba1\u5b9e\u4f8b\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u5e76\u5c06\u539f\u59cb\u5b9e\u4f8b\u4f5c\u4e3a\u8bad\u7ec3\u76ee\u6807\u3002\u5982\u679c\u60a8\u8bbe\u7f6e\u4e86 fit_inverse_transform = True \uff0cScikit-Learn \u5c06\u81ea\u52a8\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a rbf_pca = KernelPCA(n_components = 2, kernel=\"rbf\", gamma=0.0433,fit_inverse_transform=True) X_reduced = rbf_pca.fit_transform(X) X_preimage = rbf_pca.inverse_transform(X_reduced) \u6982\u8ff0\uff1a\u9ed8\u8ba4\u6761\u4ef6\u4e0b\uff0c fit_inverse_transform = False \u5e76\u4e14 KernelPCA \u6ca1\u6709 inverse_tranfrom() \u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u4ec5\u4ec5\u5f53 fit_inverse_transform = True \u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u521b\u5efa\u3002 \u4f60\u53ef\u4ee5\u8ba1\u7b97\u91cd\u5efa\u524d\u56fe\u50cf\u8bef\u5dee\uff1a >>> from sklearn.metrics import mean_squared_error >>> mean_squared_error(X, X_preimage) 32.786308795766132 \u73b0\u5728\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u683c\u641c\u7d22\u6765\u5bfb\u627e\u53ef\u4ee5\u6700\u5c0f\u5316\u91cd\u5efa\u524d\u56fe\u50cf\u8bef\u5dee\u7684\u6838\u65b9\u6cd5\u548c\u8d85\u53c2\u6570\u3002 LLE \u5c40\u90e8\u7ebf\u6027\u5d4c\u5165\uff08Locally Linear Embedding\uff09\u662f\u53e6\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u975e\u7ebf\u6027\u964d\u7ef4\uff08NLDR\uff09\u65b9\u6cd5\u3002\u8fd9\u662f\u4e00\u79cd\u6d41\u5f62\u5b66\u4e60\u6280\u672f\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u50cf\u4ee5\u524d\u7b97\u6cd5\u90a3\u6837\u7684\u6295\u5f71\u3002\u7b80\u800c\u8a00\u4e4b\uff0cLLE \u9996\u5148\u6d4b\u91cf\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u4e0e\u5176\u6700\u8fd1\u90bb\uff08c.n.\uff09\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u7136\u540e\u5bfb\u627e\u80fd\u6700\u597d\u5730\u4fdd\u7559\u8fd9\u4e9b\u5c40\u90e8\u5173\u7cfb\u7684\u8bad\u7ec3\u96c6\u7684\u4f4e\u7ef4\u8868\u793a\uff08\u7a0d\u540e\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\uff09 \u3002\u8fd9\u4f7f\u5f97\u5b83\u7279\u522b\u64c5\u957f\u5c55\u5f00\u626d\u66f2\u7684\u6d41\u5f62\uff0c\u5c24\u5176\u662f\u5728\u6ca1\u6709\u592a\u591a\u566a\u97f3\u7684\u60c5\u51b5\u4e0b\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 Scikit-Learn \u7684 LocallyLinearEmbedding \u7c7b\u6765\u5c55\u5f00\u745e\u58eb\u5377\u3002\u5f97\u5230\u7684\u4e8c\u7ef4\u6570\u636e\u96c6\u5982\u56fe 8-12 \u6240\u793a\u3002\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u745e\u58eb\u5377\u88ab\u5b8c\u5168\u5c55\u5f00\uff0c\u5b9e\u4f8b\u4e4b\u95f4\u7684\u8ddd\u79bb\u4fdd\u5b58\u5f97\u5f88\u597d\u3002\u4f46\u662f\uff0c\u8ddd\u79bb\u4e0d\u80fd\u5728\u8f83\u5927\u8303\u56f4\u5185\u4fdd\u7559\u7684\u5f88\u597d\uff1a\u5c55\u5f00\u7684\u745e\u58eb\u5377\u7684\u5de6\u4fa7\u88ab\u6324\u538b\uff0c\u800c\u53f3\u4fa7\u7684\u90e8\u5206\u88ab\u62c9\u957f\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cLLE \u5728\u5bf9\u6d41\u5f62\u5efa\u6a21\u65b9\u9762\u505a\u5f97\u975e\u5e38\u597d\u3002 from sklearn.manifold import LocallyLinearEmbedding lle=LocallyLinearEmbedding(n_components=2,n_neighbors=10) X_reduced=lle.fit_transform(X) \u56fe 8-12 \u4f7f\u7528 LLE \u5c55\u5f00\u745e\u58eb\u5377 \u8fd9\u662fLLE\u7684\u5de5\u4f5c\u539f\u7406\uff1a\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b \uff0c\u8be5\u7b97\u6cd5\u8bc6\u522b\u5176\u6700\u8fd1\u7684 k \u4e2a\u90bb\u5c45\uff08\u5728\u524d\u9762\u7684\u4ee3\u7801\u4e2d k = 10 \u4e2d\uff09\uff0c\u7136\u540e\u5c1d\u8bd5\u5c06 \u91cd\u6784\u4e3a\u8fd9\u4e9b\u90bb\u5c45\u7684\u7ebf\u6027\u51fd\u6570\u3002\u66f4\u5177\u4f53\u5730\uff0c\u627e\u5230\u6743\u91cd \u4ece\u800c\u4f7f \u548c \u4e4b\u95f4\u7684\u5e73\u65b9\u8ddd\u79bb\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u5047\u8bbe\u5982\u679c \u4e0d\u662f \u7684 k \u4e2a\u6700\u8fd1\u90bb\u65f6 \u3002\u56e0\u6b64\uff0cLLE \u7684\u7b2c\u4e00\u6b65\u662f\u65b9\u7a0b 8-4 \u4e2d\u63cf\u8ff0\u7684\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff0c\u5176\u4e2d W \u662f\u5305\u542b\u6240\u6709\u6743\u91cd \u7684\u6743\u91cd\u77e9\u9635\u3002\u7b2c\u4e8c\u4e2a\u7ea6\u675f\u7b80\u5355\u5730\u5bf9\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b \u7684\u6743\u91cd\u8fdb\u884c\u5f52\u4e00\u5316\u3002 \u516c\u5f0f 8-2 LLE \u7b2c\u4e00\u6b65\uff1a\u5bf9\u5c40\u90e8\u5173\u7cfb\u8fdb\u884c\u7ebf\u6027\u5efa\u6a21 \u5728\u8fd9\u6b65\u4e4b\u540e\uff0c\u6743\u91cd\u77e9\u9635 \uff08\u5305\u542b\u6743\u91cd \u5bf9\u8bad\u7ec3\u5b9e\u4f8b\u7684\u7ebf\u5f62\u5173\u7cfb\u8fdb\u884c\u7f16\u7801\u3002\u73b0\u5728\u7b2c\u4e8c\u6b65\u662f\u5c06\u8bad\u7ec3\u5b9e\u4f8b\u6295\u5f71\u5230\u4e00\u4e2a d \u7ef4\u7a7a\u95f4\uff08 d < n \uff09\u4e2d\u53bb\uff0c\u540c\u65f6\u5c3d\u53ef\u80fd\u7684\u4fdd\u7559\u8fd9\u4e9b\u5c40\u90e8\u5173\u7cfb\u3002\u5982\u679c \u662f \u5728\u8fd9\u4e2a d \u7ef4\u7a7a\u95f4\u7684\u56fe\u50cf\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u8981 \u548c \u4e4b\u95f4\u7684\u5e73\u65b9\u8ddd\u79bb\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002\u8fd9\u4e2a\u60f3\u6cd5\u8ba9\u6211\u4eec\u63d0\u51fa\u4e86\u516c\u5f0f8-5\u4e2d\u7684\u975e\u9650\u5236\u6027\u4f18\u5316\u95ee\u9898\u3002\u5b83\u770b\u8d77\u6765\u4e0e\u7b2c\u4e00\u6b65\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6211\u4eec\u8981\u505a\u7684\u4e0d\u662f\u4fdd\u6301\u5b9e\u4f8b\u56fa\u5b9a\u5e76\u627e\u5230\u6700\u4f73\u6743\u91cd\uff0c\u800c\u662f\u6070\u76f8\u53cd\uff1a\u4fdd\u6301\u6743\u91cd\u4e0d\u53d8\uff0c\u5e76\u5728\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u627e\u5230\u5b9e\u4f8b\u56fe\u50cf\u7684\u6700\u4f73\u4f4d\u7f6e\u3002\u8bf7\u6ce8\u610f\uff0c Z \u662f\u5305\u542b\u6240\u6709 \u7684\u77e9\u9635\u3002 \u516c\u5f0f 8-3 LLE \u7b2c\u4e8c\u6b65\uff1a\u4fdd\u6301\u5173\u7cfb\u7684\u540c\u65f6\u8fdb\u884c\u964d\u7ef4 Scikit-Learn \u7684 LLE \u5b9e\u73b0\u5177\u6709\u5982\u4e0b\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\uff1a\u67e5\u627e k \u4e2a\u6700\u8fd1\u90bb\u4e3a O(m log(m) n log(k)) \uff0c\u4f18\u5316\u6743\u91cd\u4e3a O(m n k^3) \uff0c\u5efa\u7acb\u4f4e\u7ef4\u8868\u793a\u4e3a O(d m^2) \u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6700\u540e\u4e00\u9879 m^2 \u4f7f\u5f97\u8fd9\u4e2a\u7b97\u6cd5\u5728\u5904\u7406\u5927\u6570\u636e\u96c6\u7684\u65f6\u5019\u8868\u73b0\u8f83\u5dee\u3002 \u5176\u4ed6\u964d\u7ef4\u65b9\u6cd5 \u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u964d\u7ef4\u65b9\u6cd5\uff0cScikit-Learn \u652f\u6301\u5176\u4e2d\u7684\u597d\u51e0\u79cd\u3002\u8fd9\u91cc\u662f\u5176\u4e2d\u6700\u6d41\u884c\u7684\uff1a \u591a\u7ef4\u7f29\u653e\uff08MDS\uff09\u5728\u5c1d\u8bd5\u4fdd\u6301\u5b9e\u4f8b\u4e4b\u95f4\u8ddd\u79bb\u7684\u540c\u65f6\u964d\u4f4e\u4e86\u7ef4\u5ea6\uff08\u53c2\u89c1\u56fe 8-13\uff09 Isomap \u901a\u8fc7\u5c06\u6bcf\u4e2a\u5b9e\u4f8b\u8fde\u63a5\u5230\u6700\u8fd1\u7684\u90bb\u5c45\u6765\u521b\u5efa\u56fe\u5f62\uff0c\u7136\u540e\u5728\u5c1d\u8bd5\u4fdd\u6301\u5b9e\u4f8b\u4e4b\u95f4\u7684\u6d4b\u5730\u8ddd\u79bb\u65f6\u964d\u4f4e\u7ef4\u5ea6\u3002 t-\u5206\u5e03\u968f\u673a\u90bb\u57df\u5d4c\u5165\uff08t-Distributed Stochastic Neighbor Embedding\uff0ct-SNE\uff09\u53ef\u4ee5\u7528\u4e8e\u964d\u4f4e\u7ef4\u200b\u200b\u5ea6\uff0c\u540c\u65f6\u8bd5\u56fe\u4fdd\u6301\u76f8\u4f3c\u7684\u5b9e\u4f8b\u4e34\u8fd1\u5e76\u5c06\u4e0d\u76f8\u4f3c\u7684\u5b9e\u4f8b\u5206\u5f00\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u53ef\u89c6\u5316\uff0c\u5c24\u5176\u662f\u7528\u4e8e\u53ef\u89c6\u5316\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u5b9e\u4f8b\uff08\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06MNIST\u56fe\u50cf\u964d\u7ef4\u5230 2D \u53ef\u89c6\u5316\uff09\u3002 \u7ebf\u6027\u5224\u522b\u5206\u6790\uff08Linear Discriminant Analysis\uff0cLDA\uff09\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u5206\u7c7b\u7b97\u6cd5\uff0c\u4f46\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u5b83\u4f1a\u5b66\u4e60\u7c7b\u4e4b\u95f4\u6700\u6709\u533a\u522b\u7684\u8f74\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u8f74\u6765\u5b9a\u4e49\u7528\u4e8e\u6295\u5f71\u6570\u636e\u7684\u8d85\u5e73\u9762\u3002LDA \u7684\u597d\u5904\u662f\u6295\u5f71\u4f1a\u5c3d\u53ef\u80fd\u5730\u4fdd\u6301\u5404\u4e2a\u7c7b\u4e4b\u95f4\u8ddd\u79bb\uff0c\u6240\u4ee5\u5728\u8fd0\u884c\u53e6\u4e00\u79cd\u5206\u7c7b\u7b97\u6cd5\uff08\u5982 SVM \u5206\u7c7b\u5668\uff09\u4e4b\u524d\uff0cLDA \u662f\u5f88\u597d\u7684\u964d\u7ef4\u6280\u672f\u3002 \u56fe 8-13 \u4f7f\u7528\u4e0d\u540c\u7684\u6280\u672f\u5c06\u745e\u58eb\u5377\u964d\u7ef4\u81f3 2D \u7ec3\u4e60 \u51cf\u5c11\u6570\u636e\u96c6\u7ef4\u5ea6\u7684\u4e3b\u8981\u52a8\u673a\u662f\u4ec0\u4e48\uff1f\u4e3b\u8981\u7f3a\u70b9\u662f\u4ec0\u4e48\uff1f \u4ec0\u4e48\u662f\u7ef4\u5ea6\u7206\u70b8\uff1f \u4e00\u65e6\u5bf9\u67d0\u6570\u636e\u96c6\u964d\u7ef4\uff0c\u6211\u4eec\u53ef\u80fd\u6062\u590d\u5b83\u5417\uff1f\u5982\u679c\u53ef\u4ee5\uff0c\u600e\u6837\u505a\u624d\u80fd\u6062\u590d\uff1f\u5982\u679c\u4e0d\u53ef\u4ee5\uff0c\u4e3a\u4ec0\u4e48\uff1f PCA \u53ef\u4ee5\u7528\u4e8e\u964d\u4f4e\u4e00\u4e2a\u9ad8\u5ea6\u975e\u7ebf\u6027\u5bf9\u6570\u636e\u96c6\u5417\uff1f \u5047\u8bbe\u4f60\u5bf9\u4e00\u4e2a 1000 \u7ef4\u7684\u6570\u636e\u96c6\u5e94\u7528 PCA\uff0c\u540c\u65f6\u8bbe\u7f6e\u65b9\u5dee\u89e3\u91ca\u7387\u4e3a 95%\uff0c\u4f60\u7684\u6700\u7ec8\u6570\u636e\u96c6\u5c06\u4f1a\u6709\u591a\u5c11\u7ef4\uff1f \u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f60\u4f1a\u4f7f\u7528\u666e\u901a\u7684 PCA\uff0c\u589e\u91cf PCA\uff0c\u968f\u673a PCA \u548c\u6838 PCA\uff1f \u4f60\u8be5\u5982\u4f55\u8bc4\u4ef7\u4f60\u7684\u964d\u7ef4\u7b97\u6cd5\u5728\u4f60\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\uff1f \u5c06\u4e24\u4e2a\u4e0d\u540c\u7684\u964d\u7ef4\u7b97\u6cd5\u4e32\u8054\u4f7f\u7528\u6709\u610f\u4e49\u5417\uff1f \u52a0\u8f7d MNIST \u6570\u636e\u96c6\uff08\u5728\u7b2c 3 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff0c\u5e76\u5c06\u5176\u5206\u6210\u4e00\u4e2a\u8bad\u7ec3\u96c6\u548c\u4e00\u4e2a\u6d4b\u8bd5\u96c6\uff08\u5c06\u524d 60,000 \u4e2a\u5b9e\u4f8b\u7528\u4e8e\u8bad\u7ec3\uff0c\u5176\u4f59 10,000 \u4e2a\u7528\u4e8e\u6d4b\u8bd5\uff09\u3002\u5728\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\uff0c\u5e76\u8bb0\u5f55\u4e86\u82b1\u8d39\u591a\u957f\u65f6\u95f4\uff0c\u7136\u540e\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8bc4\u4f30\u6a21\u578b\u3002\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528 PCA \u964d\u4f4e\u6570\u636e\u96c6\u7684\u7ef4\u5ea6\uff0c\u8bbe\u7f6e\u65b9\u5dee\u89e3\u91ca\u7387\u4e3a 95%\u3002\u5728\u964d\u7ef4\u540e\u7684\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u65b0\u7684\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\uff0c\u5e76\u67e5\u770b\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u8bad\u7ec3\u901f\u5ea6\u66f4\u5feb\uff1f\u63a5\u4e0b\u6765\u8bc4\u4f30\u6d4b\u8bd5\u96c6\u4e0a\u7684\u5206\u7c7b\u5668\uff1a\u5b83\u4e0e\u4ee5\u524d\u7684\u5206\u7c7b\u5668\u6bd4\u8f83\u8d77\u6765\u5982\u4f55\uff1f \u4f7f\u7528 t-SNE \u5c06 MNIST \u6570\u636e\u96c6\u7f29\u51cf\u5230\u4e8c\u7ef4\uff0c\u5e76\u4f7f\u7528 Matplotlib \u7ed8\u5236\u7ed3\u679c\u56fe\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 10 \u79cd\u4e0d\u540c\u989c\u8272\u7684\u6563\u70b9\u56fe\u6765\u8868\u793a\u6bcf\u4e2a\u56fe\u50cf\u7684\u76ee\u6807\u7c7b\u522b\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u4f4d\u7f6e\u5199\u5165\u5f69\u8272\u6570\u5b57\uff0c\u751a\u81f3\u53ef\u4ee5\u7ed8\u5236\u6570\u5b57\u56fe\u50cf\u672c\u8eab\u7684\u964d\u7ef4\u7248\u672c\uff08\u5982\u679c\u7ed8\u5236\u6240\u6709\u6570\u5b57\uff0c\u5219\u53ef\u89c6\u5316\u53ef\u80fd\u4f1a\u8fc7\u4e8e\u6df7\u4e71\uff0c\u56e0\u6b64\u60a8\u5e94\u8be5\u7ed8\u5236\u968f\u673a\u6837\u672c\u6216\u53ea\u5728\u5468\u56f4\u6ca1\u6709\u5176\u4ed6\u5b9e\u4f8b\u88ab\u7ed8\u5236\u7684\u60c5\u51b5\u4e0b\u7ed8\u5236\uff09\u3002\u4f60\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u5206\u9694\u826f\u597d\u7684\u7684\u53ef\u89c6\u5316\u6570\u5b57\u96c6\u7fa4\u3002\u5c1d\u8bd5\u4f7f\u7528\u5176\u4ed6\u964d\u7ef4\u7b97\u6cd5\uff0c\u5982 PCA\uff0cLLE \u6216 MDS\uff0c\u5e76\u6bd4\u8f83\u53ef\u89c6\u5316\u7ed3\u679c\u3002 \u7ec3\u4e60\u7b54\u6848\u8bf7\u89c1\u9644\u5f55 A\u3002","title":"8.\u964d\u7ef4"},{"location":"8.%E9%99%8D%E7%BB%B4/#_1","text":"\u5f88\u591a\u673a\u5668\u5b66\u4e60\u7684\u95ee\u9898\u90fd\u4f1a\u6d89\u53ca\u5230\u6709\u7740\u51e0\u5343\u751a\u81f3\u6570\u767e\u4e07\u7ef4\u7684\u7279\u5f81\u7684\u8bad\u7ec3\u5b9e\u4f8b\u3002\u8fd9\u4e0d\u4ec5\u8ba9\u8bad\u7ec3\u8fc7\u7a0b\u53d8\u5f97\u975e\u5e38\u7f13\u6162\uff0c\u540c\u65f6\u8fd8\u5f88\u96be\u627e\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u4f1a\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u79cd\u95ee\u9898\u901a\u5e38\u88ab\u79f0\u4e3a\u7ef4\u6570\u707e\u96be\uff08curse of dimentionality\uff09\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u6211\u4eec\u7ecf\u5e38\u53ef\u4ee5\u6781\u5927\u7684\u964d\u4f4e\u7279\u5f81\u7ef4\u5ea6\uff0c\u5c06\u4e00\u4e2a\u5341\u5206\u68d8\u624b\u7684\u95ee\u9898\u8f6c\u53d8\u6210\u4e00\u4e2a\u53ef\u4ee5\u8f83\u4e3a\u5bb9\u6613\u89e3\u51b3\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e MNIST \u56fe\u7247\u96c6\uff08\u7b2c 3 \u7ae0\u4e2d\u63d0\u5230\uff09\uff1a\u56fe\u7247\u56db\u5468\u8fb9\u7f18\u90e8\u5206\u7684\u50cf\u7d20\u51e0\u4e4e\u603b\u662f\u767d\u7684\uff0c\u56e0\u6b64\u4f60\u5b8c\u5168\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u50cf\u7d20\u4ece\u4f60\u7684\u8bad\u7ec3\u96c6\u4e2d\u6254\u6389\u800c\u4e0d\u4f1a\u4e22\u5931\u592a\u591a\u4fe1\u606f\u3002\u56fe 7-6 \u5411\u6211\u4eec\u8bc1\u5b9e\u4e86\u8fd9\u4e9b\u50cf\u7d20\u7684\u786e\u5bf9\u6211\u4eec\u7684\u5206\u7c7b\u4efb\u52a1\u662f\u5b8c\u5168\u4e0d\u91cd\u8981\u7684\u3002\u540c\u65f6\uff0c\u4e24\u4e2a\u76f8\u90bb\u7684\u50cf\u7d20\u5f80\u5f80\u662f\u9ad8\u5ea6\u76f8\u5173\u7684\uff1a\u5982\u679c\u4f60\u60f3\u8981\u5c06\u4ed6\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u50cf\u7d20\uff08\u6bd4\u5982\u53d6\u8fd9\u4e24\u4e2a\u50cf\u7d20\u70b9\u7684\u5e73\u5747\u503c\uff09\u4f60\u5e76\u4e0d\u4f1a\u4e22\u5931\u5f88\u591a\u4fe1\u606f\u3002 \u8b66\u544a\uff1a\u964d\u7ef4\u80af\u5b9a\u4f1a\u4e22\u5931\u4e00\u4e9b\u4fe1\u606f\uff08\u8fd9\u5c31\u597d\u6bd4\u5c06\u4e00\u4e2a\u56fe\u7247\u538b\u7f29\u6210 JPEG \u7684\u683c\u5f0f\u4f1a\u964d\u4f4e\u56fe\u50cf\u7684\u8d28\u91cf\uff09\uff0c\u56e0\u6b64\u5373\u4f7f\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u52a0\u5feb\u8bad\u7ec3\u7684\u901f\u5ea6\uff0c\u540c\u65f6\u4e5f\u4f1a\u8ba9\u4f60\u7684\u7cfb\u7edf\u8868\u73b0\u7684\u7a0d\u5fae\u5dee\u4e00\u70b9\u3002\u964d\u7ef4\u4f1a\u8ba9\u4f60\u7684\u5de5\u4f5c\u6d41\u6c34\u7ebf\u66f4\u590d\u6742\u56e0\u800c\u66f4\u96be\u7ef4\u62a4\u3002\u6240\u6709\u4f60\u5e94\u8be5\u5148\u5c1d\u8bd5\u4f7f\u7528\u539f\u59cb\u7684\u6570\u636e\u6765\u8bad\u7ec3\uff0c\u5982\u679c\u8bad\u7ec3\u901f\u5ea6\u592a\u6162\u7684\u8bdd\u518d\u8003\u8651\u4f7f\u7528\u964d\u7ef4\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u964d\u4f4e\u8bad\u7ec3\u96c6\u6570\u636e\u7684\u7ef4\u5ea6\u53ef\u80fd\u4f1a\u7b5b\u9009\u6389\u4e00\u4e9b\u566a\u97f3\u548c\u4e0d\u5fc5\u8981\u7684\u7ec6\u8282\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4f60\u7684\u7ed3\u679c\u6bd4\u964d\u7ef4\u4e4b\u524d\u66f4\u597d\uff08\u8fd9\u79cd\u60c5\u51b5\u901a\u5e38\u4e0d\u4f1a\u53d1\u751f\uff1b\u5b83\u53ea\u4f1a\u52a0\u5feb\u4f60\u8bad\u7ec3\u7684\u901f\u5ea6\uff09\u3002 \u964d\u7ef4\u9664\u4e86\u53ef\u4ee5\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\u5916\uff0c\u5728\u6570\u636e\u53ef\u89c6\u5316\u65b9\u9762\uff08\u6216\u8005 DataViz\uff09\u4e5f\u5341\u5206\u6709\u7528\u3002\u964d\u4f4e\u7279\u5f81\u7ef4\u5ea6\u5230 2\uff08\u6216\u8005 3\uff09\u7ef4\u4ece\u800c\u53ef\u4ee5\u5728\u56fe\u4e2d\u753b\u51fa\u4e00\u4e2a\u9ad8\u7ef4\u5ea6\u7684\u8bad\u7ec3\u96c6\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c6\u89c9\u76f4\u89c2\u7684\u53d1\u73b0\u4e00\u4e9b\u975e\u5e38\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u805a\u7c7b\u3002 \u5728\u8fd9\u4e00\u7ae0\u91cc\uff0c\u6211\u4eec\u5c06\u4f1a\u8ba8\u8bba\u7ef4\u6570\u707e\u96be\u95ee\u9898\u5e76\u4e14\u4e86\u89e3\u5728\u9ad8\u7ef4\u7a7a\u95f4\u7684\u6570\u636e\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u4f1a\u5c55\u793a\u4e24\u79cd\u4e3b\u8981\u7684\u964d\u7ef4\u65b9\u6cd5\uff1a\u6295\u5f71\uff08projection\uff09\u548c\u6d41\u5f62\u5b66\u4e60\uff08Manifold Learning\uff09\uff0c\u540c\u65f6\u6211\u4eec\u8fd8\u4f1a\u4ecb\u7ecd\u4e09\u79cd\u6d41\u884c\u7684\u964d\u7ef4\u6280\u672f\uff1a\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\uff0c\u6838\u4e3b\u6210\u5206\u5206\u6790\uff08Kernel PCA\uff09\u548c\u5c40\u90e8\u7ebf\u6027\u5d4c\u5165\uff08LLE\uff09\u3002","title":"\u516b\u3001\u964d\u7ef4"},{"location":"8.%E9%99%8D%E7%BB%B4/#_2","text":"\u6211\u4eec\u5df2\u7ecf\u4e60\u60ef\u751f\u6d3b\u5728\u4e00\u4e2a\u4e09\u7ef4\u7684\u4e16\u754c\u91cc\uff0c\u4ee5\u81f3\u4e8e\u5f53\u6211\u4eec\u5c1d\u8bd5\u60f3\u8c61\u66f4\u9ad8\u7ef4\u7684\u7a7a\u95f4\u65f6\uff0c\u6211\u4eec\u7684\u76f4\u89c9\u4e0d\u7ba1\u7528\u4e86\u3002\u5373\u4f7f\u662f\u4e00\u4e2a\u57fa\u672c\u7684 4D \u8d85\u6b63\u65b9\u4f53\u4e5f\u5f88\u96be\u5728\u6211\u4eec\u7684\u8111\u4e2d\u60f3\u8c61\u51fa\u6765\uff08\u89c1\u56fe 8-1\uff09\uff0c\u66f4\u4e0d\u7528\u8bf4\u4e00\u4e2a 200 \u7ef4\u7684\u692d\u7403\u5f2f\u66f2\u5728\u4e00\u4e2a 1000 \u7ef4\u7684\u7a7a\u95f4\u91cc\u4e86\u3002 \u56fe 8-1 \u70b9\uff0c\u7ebf\uff0c\u65b9\u5f62\uff0c\u7acb\u65b9\u4f53\u548c\u8d85\u6b63\u65b9\u4f53\uff080D \u5230 4D \u8d85\u6b63\u65b9\u4f53\uff09 \u8fd9\u8868\u660e\u5f88\u591a\u7269\u4f53\u5728\u9ad8\u7ef4\u7a7a\u95f4\u8868\u73b0\u7684\u5341\u5206\u4e0d\u540c\u3002\u6bd4\u5982\uff0c\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u6b63\u65b9\u5f62\u5355\u5143\u4e2d\u968f\u673a\u53d6\u4e00\u4e2a\u70b9\uff08\u4e00\u4e2a 1\u00d71 \u7684\u6b63\u65b9\u5f62\uff09\uff0c\u90a3\u4e48\u968f\u673a\u9009\u7684\u70b9\u79bb\u6240\u6709\u8fb9\u754c\u5927\u4e8e 0.001\uff08\u9760\u8fd1\u4e2d\u95f4\u4f4d\u7f6e\uff09\u7684\u6982\u7387\u4e3a 0.4%\uff08 1 - 0.998^2 \uff09\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u968f\u673a\u4ea7\u751f\u7684\u70b9\u4e0d\u5927\u53ef\u80fd\u4e25\u683c\u843d\u5728\u67d0\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u3002\u4f46\u662f\u5728\u4e00\u4e2a 1,0000 \u7ef4\u7684\u5355\u4f4d\u8d85\u6b63\u65b9\u4f53\uff08\u4e00\u4e2a 1\u00d71\u00d7...\u00d71 \u7684\u7acb\u65b9\u4f53\uff0c\u6709 10,000 \u4e2a 1\uff09\uff0c\u8fd9\u79cd\u53ef\u80fd\u6027\u8d85\u8fc7\u4e86 99.999999%\u3002\u5728\u9ad8\u7ef4\u8d85\u6b63\u65b9\u4f53\u4e2d\uff0c\u5927\u591a\u6570\u70b9\u90fd\u5206\u5e03\u5728\u8fb9\u754c\u5904\u3002 \u8fd8\u6709\u4e00\u4e2a\u66f4\u9ebb\u70e6\u7684\u533a\u522b\uff1a\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u5e73\u65b9\u5355\u4f4d\u4e2d\u968f\u673a\u9009\u53d6\u4e24\u4e2a\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e73\u5747\u7ea6\u4e3a 0.52\u3002\u5982\u679c\u60a8\u5728\u5355\u4f4d 3D \u7acb\u65b9\u4f53\u4e2d\u9009\u53d6\u4e24\u4e2a\u968f\u673a\u70b9\uff0c\u5e73\u5747\u8ddd\u79bb\u5c06\u5927\u81f4\u4e3a 0.66\u3002\u4f46\u662f\uff0c\u5728\u4e00\u4e2a 1,000,000 \u7ef4\u8d85\u7acb\u65b9\u4f53\u4e2d\u968f\u673a\u62bd\u53d6\u4e24\u70b9\u5462\uff1f\u90a3\u4e48\uff0c\u5e73\u5747\u8ddd\u79bb\uff0c\u4fe1\u4e0d\u4fe1\u7531\u4f60\uff0c\u5927\u6982\u4e3a 408.25\uff08\u5927\u81f4 \uff09\uff01\u8fd9\u975e\u5e38\u8fdd\u53cd\u76f4\u89c9\uff1a\u5f53\u5b83\u4eec\u90fd\u4f4d\u4e8e\u540c\u4e00\u5355\u5143\u8d85\u7acb\u65b9\u4f53\u5185\u65f6\uff0c\u4e24\u70b9\u662f\u600e\u4e48\u8ddd\u79bb\u8fd9\u4e48\u8fdc\u7684\uff1f\u8fd9\u4e00\u4e8b\u5b9e\u610f\u5473\u7740\u9ad8\u7ef4\u6570\u636e\u96c6\u6709\u5f88\u5927\u98ce\u9669\u5206\u5e03\u7684\u975e\u5e38\u7a00\u758f\uff1a\u5927\u591a\u6570\u8bad\u7ec3\u5b9e\u4f8b\u53ef\u80fd\u5f7c\u6b64\u8fdc\u79bb\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u53ef\u80fd\u8fdc\u79bb\u4efb\u4f55\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u8fd9\u4f7f\u5f97\u9884\u6d4b\u7684\u53ef\u9760\u6027\u8fdc\u4f4e\u4e8e\u6211\u4eec\u5904\u7406\u8f83\u4f4e\u7ef4\u5ea6\u6570\u636e\u7684\u9884\u6d4b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u57fa\u4e8e\u66f4\u5927\u7684\u63a8\u6d4b\uff08extrapolations\uff09\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8bad\u7ec3\u96c6\u7684\u7ef4\u5ea6\u8d8a\u9ad8\uff0c\u8fc7\u62df\u5408\u7684\u98ce\u9669\u5c31\u8d8a\u5927\u3002 \u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u7ef4\u6570\u7206\u70b8\u7684\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u589e\u52a0\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\u4ece\u800c\u8fbe\u5230\u62e5\u6709\u8db3\u591f\u5bc6\u5ea6\u7684\u8bad\u7ec3\u96c6\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fbe\u5230\u7ed9\u5b9a\u5bc6\u5ea6\u6240\u9700\u7684\u8bad\u7ec3\u5b9e\u4f8b\u7684\u6570\u91cf\u968f\u7740\u7ef4\u5ea6\u7684\u6570\u91cf\u5448\u6307\u6570\u589e\u957f\u3002\u5982\u679c\u53ea\u6709 100 \u4e2a\u7279\u5f81\uff08\u6bd4 MNIST \u95ee\u9898\u8981\u5c11\u5f97\u591a\uff09\u5e76\u4e14\u5047\u8bbe\u5b83\u4eec\u5747\u5300\u5206\u5e03\u5728\u6240\u6709\u7ef4\u5ea6\u4e0a\uff0c\u90a3\u4e48\u5982\u679c\u60f3\u8981\u5404\u4e2a\u4e34\u8fd1\u7684\u8bad\u7ec3\u5b9e\u4f8b\u4e4b\u95f4\u7684\u8ddd\u79bb\u5728 0.1 \u4ee5\u5185\uff0c\u60a8\u9700\u8981\u6bd4\u5b87\u5b99\u4e2d\u7684\u539f\u5b50\u8fd8\u8981\u591a\u7684\u8bad\u7ec3\u5b9e\u4f8b\u3002","title":"\u7ef4\u6570\u707e\u96be"},{"location":"8.%E9%99%8D%E7%BB%B4/#_3","text":"\u5728\u6211\u4eec\u6df1\u5165\u7814\u7a76\u5177\u4f53\u7684\u964d\u7ef4\u7b97\u6cd5\u4e4b\u524d\uff0c\u6211\u4eec\u6765\u770b\u770b\u964d\u4f4e\u7ef4\u5ea6\u7684\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff1a\u6295\u5f71\u548c\u6d41\u5f62\u5b66\u4e60\u3002","title":"\u964d\u7ef4\u7684\u4e3b\u8981\u65b9\u6cd5"},{"location":"8.%E9%99%8D%E7%BB%B4/#projection","text":"\u5728\u5927\u591a\u6570\u73b0\u5b9e\u751f\u6d3b\u7684\u95ee\u9898\u4e2d\uff0c\u8bad\u7ec3\u5b9e\u4f8b\u5e76\u4e0d\u662f\u5728\u6240\u6709\u7ef4\u5ea6\u4e0a\u5747\u5300\u5206\u5e03\u7684\u3002\u8bb8\u591a\u7279\u5f81\u51e0\u4e4e\u662f\u5e38\u6570\uff0c\u800c\u5176\u4ed6\u7279\u5f81\u5219\u9ad8\u5ea6\u76f8\u5173\uff08\u5982\u524d\u9762\u8ba8\u8bba\u7684 MNIST\uff09\u3002\u7ed3\u679c\uff0c\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u5b9e\u9645\u4e0a\u4f4d\u4e8e\uff08\u6216\u63a5\u8fd1\uff09\u9ad8\u7ef4\u7a7a\u95f4\u7684\u4f4e\u7ef4\u5b50\u7a7a\u95f4\u5185\u3002\u8fd9\u542c\u8d77\u6765\u6709\u4e9b\u62bd\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002\u5728\u56fe 8-2 \u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u7531\u5706\u5708\u8868\u793a\u7684 3D \u6570\u636e\u96c6\u3002 \u56fe 8-2 \u4e00\u4e2a\u5206\u5e03\u63a5\u8fd1\u4e8e2D\u5b50\u7a7a\u95f4\u76843D\u6570\u636e\u96c6 \u6ce8\u610f\u5230\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u7684\u5206\u5e03\u90fd\u8d34\u8fd1\u4e00\u4e2a\u5e73\u9762\uff1a\u8fd9\u662f\u9ad8\u7ef4\uff083D\uff09\u7a7a\u95f4\u7684\u8f83\u4f4e\u7ef4\uff082D\uff09\u5b50\u7a7a\u95f4\u3002\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u5c06\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u5782\u76f4\u6295\u5f71\u5230\u8fd9\u4e2a\u5b50\u7a7a\u95f4\u4e0a\uff08\u5c31\u50cf\u5c06\u77ed\u7ebf\u8fde\u63a5\u5230\u5e73\u9762\u7684\u70b9\u6240\u8868\u793a\u7684\u90a3\u6837\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u5982\u56fe8-3\u6240\u793a\u7684\u65b02D\u6570\u636e\u96c6\u3002\u94db\u94db\u94db\uff01\u6211\u4eec\u521a\u521a\u5c06\u6570\u636e\u96c6\u7684\u7ef4\u5ea6\u4ece 3D \u964d\u4f4e\u5230\u4e86 2D\u3002\u8bf7\u6ce8\u610f\uff0c\u5750\u6807\u8f74\u5bf9\u5e94\u4e8e\u65b0\u7684\u7279\u5f81 z1 \u548c z2 \uff08\u5e73\u9762\u4e0a\u6295\u5f71\u7684\u5750\u6807\uff09\u3002 \u56fe 8-3 \u4e00\u4e2a\u7ecf\u8fc7\u6295\u5f71\u540e\u7684\u65b0\u7684 2D \u6570\u636e\u96c6 \u4f46\u662f\uff0c\u6295\u5f71\u5e76\u4e0d\u603b\u662f\u964d\u7ef4\u7684\u6700\u4f73\u65b9\u6cd5\u3002\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u5b50\u7a7a\u95f4\u53ef\u80fd\u4f1a\u626d\u66f2\u548c\u8f6c\u52a8\uff0c\u6bd4\u5982\u56fe 8-4 \u6240\u793a\u7684\u7740\u540d\u745e\u58eb\u6eda\u52a8\u73a9\u5177\u6570\u636e\u96c6\u3002 \u56fe 8-4 \u745e\u58eb\u6eda\u52a8\u6570\u73a9\u5177\u6570\u636e\u96c6 \u7b80\u5355\u5730\u5c06\u6570\u636e\u96c6\u6295\u5c04\u5230\u4e00\u4e2a\u5e73\u9762\u4e0a\uff08\u4f8b\u5982\uff0c\u76f4\u63a5\u4e22\u5f03 x3 \uff09\u4f1a\u5c06\u745e\u58eb\u5377\u7684\u4e0d\u540c\u5c42\u53e0\u5728\u4e00\u8d77\uff0c\u5982\u56fe 8-5 \u5de6\u4fa7\u6240\u793a\u3002\u4f46\u662f\uff0c\u4f60\u771f\u6b63\u60f3\u8981\u7684\u662f\u5c55\u5f00\u745e\u58eb\u5377\u6240\u83b7\u53d6\u5230\u7684\u7c7b\u4f3c\u56fe 8-5 \u53f3\u4fa7\u7684 2D \u6570\u636e\u96c6\u3002 \u56fe 8-5 \u6295\u5c04\u5230\u5e73\u9762\u7684\u538b\u7f29\uff08\u5de6\uff09vs \u5c55\u5f00\u745e\u58eb\u5377\uff08\u53f3\uff09","title":"\u6295\u5f71\uff08Projection\uff09"},{"location":"8.%E9%99%8D%E7%BB%B4/#_4","text":"\u745e\u58eb\u5377\u4e00\u4e2a\u662f\u4e8c\u7ef4\u6d41\u5f62\u7684\u4f8b\u5b50\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4e8c\u7ef4\u6d41\u5f62\u662f\u4e00\u79cd\u4e8c\u7ef4\u5f62\u72b6\uff0c\u5b83\u53ef\u4ee5\u5728\u66f4\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u5f2f\u66f2\u6216\u626d\u66f2\u3002\u66f4\u4e00\u822c\u5730\uff0c\u4e00\u4e2a d \u7ef4\u6d41\u5f62\u662f\u7c7b\u4f3c\u4e8e d \u7ef4\u8d85\u5e73\u9762\u7684 n \u7ef4\u7a7a\u95f4\uff08\u5176\u4e2d d < n \uff09\u7684\u4e00\u90e8\u5206\u3002\u5728\u6211\u4eec\u745e\u58eb\u5377\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c d = 2 \uff0c n = 3 \uff1a\u5b83\u6709\u4e9b\u50cf 2D \u5e73\u9762\uff0c\u4f46\u662f\u5b83\u5b9e\u9645\u4e0a\u662f\u5728\u7b2c\u4e09\u7ef4\u4e2d\u5377\u66f2\u3002 \u8bb8\u591a\u964d\u7ef4\u7b97\u6cd5\u901a\u8fc7\u5bf9\u8bad\u7ec3\u5b9e\u4f8b\u6240\u5728\u7684\u6d41\u5f62\u8fdb\u884c\u5efa\u6a21\u4ece\u800c\u8fbe\u5230\u964d\u7ef4\u76ee\u7684\uff1b\u8fd9\u53eb\u505a\u6d41\u5f62\u5b66\u4e60\u3002\u5b83\u4f9d\u8d56\u4e8e\u6d41\u5f62\u731c\u60f3\uff08manifold assumption\uff09\uff0c\u4e5f\u88ab\u79f0\u4e3a\u6d41\u5f62\u5047\u8bbe\uff08manifold hypothesis\uff09\uff0c\u5b83\u8ba4\u4e3a\u5927\u591a\u6570\u73b0\u5b9e\u4e16\u754c\u7684\u9ad8\u7ef4\u6570\u636e\u96c6\u5927\u90fd\u9760\u8fd1\u4e00\u4e2a\u66f4\u4f4e\u7ef4\u7684\u6d41\u5f62\u3002\u8fd9\u79cd\u5047\u8bbe\u7ecf\u5e38\u5728\u5b9e\u8df5\u4e2d\u88ab\u8bc1\u5b9e\u3002 \u8ba9\u6211\u4eec\u518d\u56de\u5230 MNIST \u6570\u636e\u96c6\uff1a\u6240\u6709\u624b\u5199\u6570\u5b57\u56fe\u50cf\u90fd\u6709\u4e00\u4e9b\u76f8\u4f3c\u4e4b\u5904\u3002\u5b83\u4eec\u7531\u8fde\u7ebf\u7ec4\u6210\uff0c\u8fb9\u754c\u662f\u767d\u8272\u7684\uff0c\u5927\u591a\u662f\u5728\u56fe\u7247\u4e2d\u4e2d\u95f4\u7684\uff0c\u7b49\u7b49\u3002\u5982\u679c\u4f60\u968f\u673a\u751f\u6210\u56fe\u50cf\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u770b\u8d77\u6765\u50cf\u624b\u5199\u6570\u5b57\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u521b\u5efa\u6570\u5b57\u56fe\u50cf\uff0c\u90a3\u4e48\u60a8\u7684\u81ea\u7531\u5ea6\u8fdc\u4f4e\u4e8e\u60a8\u751f\u6210\u4efb\u4f55\u968f\u4fbf\u4e00\u4e2a\u56fe\u50cf\u65f6\u7684\u81ea\u7531\u5ea6\u3002\u8fd9\u4e9b\u7ea6\u675f\u5f80\u5f80\u4f1a\u5c06\u6570\u636e\u96c6\u538b\u7f29\u5230\u8f83\u4f4e\u7ef4\u6d41\u5f62\u4e2d\u3002 \u6d41\u5f62\u5047\u8bbe\u901a\u5e38\u5305\u542b\u7740\u53e6\u4e00\u4e2a\u9690\u542b\u7684\u5047\u8bbe\uff1a\u4f60\u73b0\u5728\u7684\u624b\u4e0a\u7684\u5de5\u4f5c\uff08\u4f8b\u5982\u5206\u7c7b\u6216\u56de\u5f52\uff09\u5982\u679c\u5728\u6d41\u5f62\u7684\u8f83\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u8868\u793a\uff0c\u90a3\u4e48\u5b83\u4eec\u4f1a\u53d8\u5f97\u66f4\u7b80\u5355\u3002\u4f8b\u5982\uff0c\u5728\u56fe 8-6 \u7684\u7b2c\u4e00\u884c\u4e2d\uff0c\u745e\u58eb\u5377\u88ab\u5206\u4e3a\u4e24\u7c7b\uff1a\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\uff08\u56fe\u5de6\u4e0a\uff09\uff0c\u5206\u7c7b\u8fb9\u754c\u4f1a\u76f8\u5f53\u590d\u6742\uff0c\u4f46\u5728\u4e8c\u7ef4\u5c55\u5f00\u7684\u6d41\u5f62\u7a7a\u95f4\u4e2d\uff08\u56fe\u53f3\u4e0a\uff09\uff0c\u5206\u7c7b\u8fb9\u754c\u662f\u4e00\u6761\u7b80\u5355\u7684\u76f4\u7ebf\u3002 \u4f46\u662f\uff0c\u8fd9\u4e2a\u5047\u8bbe\u5e76\u4e0d\u603b\u662f\u6210\u7acb\u3002\u4f8b\u5982\uff0c\u5728\u56fe 8-6 \u7684\u6700\u4e0b\u9762\u4e00\u884c\uff0c\u51b3\u7b56\u8fb9\u754c\u4f4d\u4e8e x1 = 5 \uff08\u56fe\u5de6\u4e0b\uff09\u3002\u8fd9\u4e2a\u51b3\u7b56\u8fb9\u754c\u5728\u539f\u59cb\u4e09\u7ef4\u7a7a\u95f4\uff08\u4e00\u4e2a\u5782\u76f4\u5e73\u9762\uff09\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u5728\u5c55\u5f00\u7684\u6d41\u5f62\u4e2d\u5374\u53d8\u5f97\u66f4\u590d\u6742\u4e86\uff08\u56db\u4e2a\u72ec\u7acb\u7ebf\u6bb5\u7684\u96c6\u5408\uff09\uff08\u56fe\u53f3\u4e0b\uff09\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u5728\u8bad\u7ec3\u6a21\u578b\u4e4b\u524d\u964d\u4f4e\u8bad\u7ec3\u96c6\u7684\u7ef4\u6570\uff0c\u90a3\u8bad\u7ec3\u901f\u5ea6\u80af\u5b9a\u4f1a\u52a0\u5feb\uff0c\u4f46\u5e76\u4e0d\u603b\u662f\u4f1a\u5f97\u51fa\u66f4\u597d\u7684\u8bad\u7ec3\u6548\u679c\uff1b\u8fd9\u4e00\u5207\u90fd\u53d6\u51b3\u4e8e\u6570\u636e\u96c6\u3002 \u5e0c\u671b\u4f60\u73b0\u5728\u5bf9\u4e8e\u7ef4\u6570\u7206\u70b8\u4ee5\u53ca\u964d\u7ef4\u7b97\u6cd5\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6709\u4e86\u4e00\u5b9a\u7684\u7406\u89e3\uff0c\u7279\u522b\u662f\u5bf9\u6d41\u5f62\u5047\u8bbe\u63d0\u51fa\u7684\u5185\u5bb9\u3002\u672c\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u6700\u6d41\u884c\u7684\u964d\u7ef4\u7b97\u6cd5\u3002 \u56fe 8-6 \u51b3\u7b56\u8fb9\u754c\u5e76\u4e0d\u603b\u662f\u4f1a\u5728\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u53d8\u7684\u7b80\u5355","title":"\u6d41\u5f62\u5b66\u4e60"},{"location":"8.%E9%99%8D%E7%BB%B4/#pca","text":"\u4e3b\u6210\u5206\u5206\u6790\uff08Principal Component Analysis\uff09\u662f\u76ee\u524d\u4e3a\u6b62\u6700\u6d41\u884c\u7684\u964d\u7ef4\u7b97\u6cd5\u3002\u9996\u5148\u5b83\u627e\u5230\u63a5\u8fd1\u6570\u636e\u96c6\u5206\u5e03\u7684\u8d85\u5e73\u9762\uff0c\u7136\u540e\u5c06\u6240\u6709\u7684\u6570\u636e\u90fd\u6295\u5f71\u5230\u8fd9\u4e2a\u8d85\u5e73\u9762\u4e0a\u3002","title":"\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09"},{"location":"8.%E9%99%8D%E7%BB%B4/#_5","text":"\u5728\u5c06\u8bad\u7ec3\u96c6\u6295\u5f71\u5230\u8f83\u4f4e\u7ef4\u8d85\u5e73\u9762\u4e4b\u524d\uff0c\u60a8\u9996\u5148\u9700\u8981\u9009\u62e9\u6b63\u786e\u7684\u8d85\u5e73\u9762\u3002\u4f8b\u5982\u56fe 8-7 \u5de6\u4fa7\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e8c\u7ef4\u6570\u636e\u96c6\uff0c\u4ee5\u53ca\u4e09\u4e2a\u4e0d\u540c\u7684\u8f74\uff08\u5373\u4e00\u7ef4\u8d85\u5e73\u9762\uff09\u3002\u56fe\u53f3\u8fb9\u662f\u5c06\u6570\u636e\u96c6\u6295\u5f71\u5230\u6bcf\u4e2a\u8f74\u4e0a\u7684\u7ed3\u679c\u3002\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u6295\u5f71\u5230\u5b9e\u7ebf\u4e0a\u4fdd\u7559\u4e86\u6700\u5927\u65b9\u5dee\uff0c\u800c\u5728\u70b9\u7ebf\u4e0a\u7684\u6295\u5f71\u53ea\u4fdd\u7559\u4e86\u975e\u5e38\u5c0f\u7684\u65b9\u5dee\uff0c\u6295\u5f71\u5230\u865a\u7ebf\u4e0a\u4fdd\u7559\u7684\u65b9\u5dee\u5219\u5904\u4e8e\u4e0a\u8ff0\u4e24\u8005\u4e4b\u95f4\u3002 \u56fe 8-7 \u9009\u62e9\u6295\u5c04\u5230\u54ea\u4e00\u4e2a\u5b50\u7a7a\u95f4 \u9009\u62e9\u4fdd\u6301\u6700\u5927\u65b9\u5dee\u7684\u8f74\u770b\u8d77\u6765\u662f\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u5b83\u5f88\u53ef\u80fd\u6bd4\u5176\u4ed6\u6295\u5f71\u635f\u5931\u66f4\u5c11\u7684\u4fe1\u606f\u3002\u8bc1\u660e\u8fd9\u79cd\u9009\u62e9\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u9009\u62e9\u8fd9\u4e2a\u8f74\u4f7f\u5f97\u5c06\u539f\u59cb\u6570\u636e\u96c6\u6295\u5f71\u5230\u8be5\u8f74\u4e0a\u7684\u5747\u65b9\u8ddd\u79bb\u6700\u5c0f\u3002\u8fd9\u662f\u5c31 PCA \u80cc\u540e\u7684\u601d\u60f3\uff0c\u76f8\u5f53\u7b80\u5355\u3002","title":"\u4fdd\u7559\uff08\u6700\u5927\uff09\u65b9\u5dee"},{"location":"8.%E9%99%8D%E7%BB%B4/#principle-componets","text":"PCA \u5bfb\u627e\u8bad\u7ec3\u96c6\u4e2d\u53ef\u83b7\u5f97\u6700\u5927\u65b9\u5dee\u7684\u8f74\u3002\u5728\u56fe 8-7 \u4e2d\uff0c\u5b83\u662f\u4e00\u6761\u5b9e\u7ebf\u3002\u5b83\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e2a\u4e0e\u7b2c\u4e00\u4e2a\u8f74\u6b63\u4ea4\u7684\u7b2c\u4e8c\u4e2a\u8f74\uff0c\u9009\u62e9\u5b83\u53ef\u4ee5\u83b7\u5f97\u6700\u5927\u7684\u6b8b\u5dee\u3002\u5728\u8fd9\u4e2a 2D \u4f8b\u5b50\u4e2d\uff0c\u6ca1\u6709\u9009\u62e9\uff1a\u5c31\u53ea\u6709\u8fd9\u6761\u70b9\u7ebf\u3002\u4f46\u5982\u679c\u5728\u4e00\u4e2a\u66f4\u9ad8\u7ef4\u7684\u6570\u636e\u96c6\u4e2d\uff0cPCA \u4e5f\u53ef\u4ee5\u627e\u5230\u4e0e\u524d\u4e24\u4e2a\u8f74\u6b63\u4ea4\u7684\u7b2c\u4e09\u4e2a\u8f74\uff0c\u4ee5\u53ca\u4e0e\u6570\u636e\u96c6\u4e2d\u7ef4\u6570\u76f8\u540c\u7684\u7b2c\u56db\u4e2a\u8f74\uff0c\u7b2c\u4e94\u4e2a\u8f74\u7b49\u3002 \u5b9a\u4e49\u7b2c i \u4e2a\u8f74\u7684\u5355\u4f4d\u77e2\u91cf\u88ab\u79f0\u4e3a\u7b2c i \u4e2a\u4e3b\u6210\u5206\uff08PC\uff09\u3002\u5728\u56fe 8-7 \u4e2d\uff0c\u7b2c\u4e00\u4e2a PC \u662f c1 \uff0c\u7b2c\u4e8c\u4e2a PC \u662f c2 \u3002\u5728\u56fe 8-2 \u4e2d\uff0c\u524d\u4e24\u4e2a PC \u7528\u5e73\u9762\u4e2d\u7684\u6b63\u4ea4\u7bad\u5934\u8868\u793a\uff0c\u7b2c\u4e09\u4e2a PC \u4e0e\u4e0a\u8ff0 PC \u5f62\u6210\u7684\u5e73\u9762\u6b63\u4ea4\uff08\u6307\u5411\u4e0a\u6216\u4e0b\uff09\u3002 \u6982\u8ff0\uff1a \u4e3b\u6210\u5206\u7684\u65b9\u5411\u4e0d\u7a33\u5b9a\uff1a\u5982\u679c\u60a8\u7a0d\u5fae\u6253\u4e71\u4e00\u4e0b\u8bad\u7ec3\u96c6\u5e76\u518d\u6b21\u8fd0\u884c PCA\uff0c\u5219\u67d0\u4e9b\u65b0 PC \u53ef\u80fd\u4f1a\u6307\u5411\u4e0e\u539f\u59cb PC \u65b9\u5411\u76f8\u53cd\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u901a\u5e38\u4ecd\u4f4d\u4e8e\u540c\u4e00\u8f74\u7ebf\u4e0a\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u5bf9 PC \u751a\u81f3\u53ef\u80fd\u4f1a\u65cb\u8f6c\u6216\u4ea4\u6362\uff0c\u4f46\u5b83\u4eec\u5b9a\u4e49\u7684\u5e73\u9762\u901a\u5e38\u4fdd\u6301\u4e0d\u53d8\u3002 \u90a3\u4e48\u5982\u4f55\u627e\u5230\u8bad\u7ec3\u96c6\u7684\u4e3b\u6210\u5206\u5462\uff1f\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u79cd\u79f0\u4e3a\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09\u7684\u6807\u51c6\u77e9\u9635\u5206\u89e3\u6280\u672f\uff0c\u53ef\u4ee5\u5c06\u8bad\u7ec3\u96c6\u77e9\u9635 X \u5206\u89e3\u4e3a\u4e09\u4e2a\u77e9\u9635 U\u00b7\u03a3\u00b7V^T \u7684\u70b9\u79ef\uff0c\u5176\u4e2d V^T \u5305\u542b\u6211\u4eec\u60f3\u8981\u7684\u6240\u6709\u4e3b\u6210\u5206\uff0c\u5982\u516c\u5f0f 8-1 \u6240\u793a\u3002 \u516c\u5f0f 8-1 \u4e3b\u6210\u5206\u77e9\u9635 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u4f7f\u7528\u4e86 Numpy \u63d0\u4f9b\u7684 svd() \u51fd\u6570\u83b7\u5f97\u8bad\u7ec3\u96c6\u7684\u6240\u6709\u4e3b\u6210\u5206\uff0c\u7136\u540e\u63d0\u53d6\u524d\u4e24\u4e2a PC: X_centered=X-X.mean(axis=0) U,s,V=np.linalg.svd(X_centered) c1=V.T[:,0] c2=V.T[:,1] \u8b66\u544a\uff1aPCA \u5047\u5b9a\u6570\u636e\u96c6\u4ee5\u539f\u70b9\u4e3a\u4e2d\u5fc3\u3002\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0cScikit-Learn \u7684 PCA \u7c7b\u8d1f\u8d23\u4e3a\u60a8\u7684\u6570\u636e\u96c6\u4e2d\u5fc3\u5316\u5904\u7406\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u81ea\u5df1\u5b9e\u73b0 PCA\uff08\u5982\u524d\u9762\u7684\u793a\u4f8b\u6240\u793a\uff09\uff0c\u6216\u8005\u5982\u679c\u60a8\u4f7f\u7528\u5176\u4ed6\u5e93\uff0c\u4e0d\u8981\u5fd8\u8bb0\u9996\u5148\u8981\u5148\u5bf9\u6570\u636e\u505a\u4e2d\u5fc3\u5316\u5904\u7406\u3002","title":"\u4e3b\u6210\u5206\uff08Principle Componets\uff09"},{"location":"8.%E9%99%8D%E7%BB%B4/#d","text":"\u4e00\u65e6\u786e\u5b9a\u4e86\u6240\u6709\u7684\u4e3b\u6210\u5206\uff0c\u4f60\u5c31\u53ef\u4ee5\u901a\u8fc7\u5c06\u6570\u636e\u96c6\u6295\u5f71\u5230\u7531\u524d d \u4e2a\u4e3b\u6210\u5206\u6784\u6210\u7684\u8d85\u5e73\u9762\u4e0a\uff0c\u4ece\u800c\u5c06\u6570\u636e\u96c6\u7684\u7ef4\u6570\u964d\u81f3 d \u7ef4\u3002\u9009\u62e9\u8fd9\u4e2a\u8d85\u5e73\u9762\u53ef\u4ee5\u786e\u4fdd\u6295\u5f71\u5c06\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684\u65b9\u5dee\u3002\u4f8b\u5982\uff0c\u5728\u56fe 8-2 \u4e2d\uff0c3D \u6570\u636e\u96c6\u88ab\u6295\u5f71\u5230\u7531\u524d\u4e24\u4e2a\u4e3b\u6210\u5206\u5b9a\u4e49\u7684 2D \u5e73\u9762\uff0c\u4fdd\u7559\u4e86\u5927\u90e8\u5206\u6570\u636e\u96c6\u7684\u65b9\u5dee\u3002\u56e0\u6b64\uff0c2D \u6295\u5f71\u770b\u8d77\u6765\u975e\u5e38\u50cf\u539f\u59cb 3D \u6570\u636e\u96c6\u3002 \u4e3a\u4e86\u5c06\u8bad\u7ec3\u96c6\u6295\u5f71\u5230\u8d85\u5e73\u9762\u4e0a\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u8ba1\u7b97\u8bad\u7ec3\u96c6\u77e9\u9635 X \u548c Wd \u7684\u70b9\u79ef\uff0c Wd \u5b9a\u4e49\u4e3a\u5305\u542b\u524d d \u4e2a\u4e3b\u6210\u5206\u7684\u77e9\u9635\uff08\u5373\u7531 V^T \u7684\u524d d \u5217\u7ec4\u6210\u7684\u77e9\u9635\uff09\uff0c\u5982\u516c\u5f0f 8-2 \u6240\u793a\u3002 \u516c\u5f0f 8-2 \u5c06\u8bad\u7ec3\u96c6\u6295\u5f71\u5230 d \u7ef4\u7a7a\u95f4 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u5c06\u8bad\u7ec3\u96c6\u6295\u5f71\u5230\u7531\u524d\u4e24\u4e2a\u4e3b\u6210\u5206\u5b9a\u4e49\u7684\u8d85\u5e73\u9762\u4e0a\uff1a W2=V.T[:,:2] X2D=X_centered.dot(W2) \u597d\u4e86\u4f60\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e2a\u4e1c\u897f\u4e86\uff01\u4f60\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u7ed9\u4efb\u4f55\u4e00\u4e2a\u6570\u636e\u96c6\u964d\u7ef4\u800c\u53c8\u80fd\u5c3d\u53ef\u80fd\u7684\u4fdd\u7559\u539f\u6570\u636e\u96c6\u7684\u65b9\u5dee\u4e86\u3002","title":"\u6295\u5f71\u5230d\u7ef4\u7a7a\u95f4"},{"location":"8.%E9%99%8D%E7%BB%B4/#scikit-learn","text":"Scikit-Learn \u7684 PCA \u7c7b\u4f7f\u7528 SVD \u5206\u89e3\u6765\u5b9e\u73b0\uff0c\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u505a\u7684\u90a3\u6837\u3002\u4ee5\u4e0b\u4ee3\u7801\u5e94\u7528 PCA \u5c06\u6570\u636e\u96c6\u7684\u7ef4\u5ea6\u964d\u81f3\u4e24\u7ef4\uff08\u8bf7\u6ce8\u610f\uff0c\u5b83\u4f1a\u81ea\u52a8\u5904\u7406\u6570\u636e\u7684\u4e2d\u5fc3\u5316\uff09\uff1a from sklearn.decomposition import PCA pca=PCA(n_components=2) X2D=pca.fit_transform(X) \u5c06 PCA \u8f6c\u5316\u5668\u5e94\u7528\u4e8e\u6570\u636e\u96c6\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528 components_ \u8bbf\u95ee\u6bcf\u4e00\u4e2a\u4e3b\u6210\u5206\uff08\u6ce8\u610f\uff0c\u5b83\u8fd4\u56de\u4ee5 PC \u4f5c\u4e3a\u6c34\u5e73\u5411\u91cf\u7684\u77e9\u9635\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u83b7\u5f97\u7b2c\u4e00\u4e2a\u4e3b\u6210\u5206\u5219\u53ef\u4ee5\u5199\u6210 pca.components_.T[:,0] \uff09\u3002","title":"\u4f7f\u7528 Scikit-Learn"},{"location":"8.%E9%99%8D%E7%BB%B4/#explained-variance-ratio","text":"\u53e6\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u4fe1\u606f\u662f\u6bcf\u4e2a\u4e3b\u6210\u5206\u7684\u65b9\u5dee\u89e3\u91ca\u7387\uff0c\u53ef\u901a\u8fc7 explained_variance_ratio_ \u53d8\u91cf\u83b7\u5f97\u3002\u5b83\u8868\u793a\u4f4d\u4e8e\u6bcf\u4e2a\u4e3b\u6210\u5206\u8f74\u4e0a\u7684\u6570\u636e\u96c6\u65b9\u5dee\u7684\u6bd4\u4f8b\u3002\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u56fe 8-2 \u4e2d\u8868\u793a\u7684\u4e09\u7ef4\u6570\u636e\u96c6\u524d\u4e24\u4e2a\u5206\u91cf\u7684\u65b9\u5dee\u89e3\u91ca\u7387\uff1a >>> print(pca.explained_variance_ratio_) array([0.84248607, 0.14631839]) \u8fd9\u8868\u660e\uff0c84.2% \u7684\u6570\u636e\u96c6\u65b9\u5dee\u4f4d\u4e8e\u7b2c\u4e00\u8f74\uff0c14.6% \u7684\u65b9\u5dee\u4f4d\u4e8e\u7b2c\u4e8c\u8f74\u3002\u7b2c\u4e09\u8f74\u7684\u8fd9\u4e00\u6bd4\u4f8b\u4e0d\u52301.2\uff05\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u53ef\u80fd\u6ca1\u6709\u5305\u542b\u4ec0\u4e48\u4fe1\u606f\u3002","title":"\u65b9\u5dee\u89e3\u91ca\u7387\uff08Explained Variance Ratio\uff09"},{"location":"8.%E9%99%8D%E7%BB%B4/#_6","text":"\u901a\u5e38\u6211\u4eec\u503e\u5411\u4e8e\u9009\u62e9\u52a0\u8d77\u6765\u5230\u65b9\u5dee\u89e3\u91ca\u7387\u80fd\u591f\u8fbe\u5230\u8db3\u591f\u5360\u6bd4\uff08\u4f8b\u5982 95%\uff09\u7684\u7ef4\u5ea6\u7684\u6570\u91cf\uff0c\u800c\u4e0d\u662f\u4efb\u610f\u9009\u62e9\u8981\u964d\u4f4e\u5230\u7684\u7ef4\u5ea6\u6570\u91cf\u3002\u5f53\u7136\uff0c\u9664\u975e\u60a8\u6b63\u5728\u4e3a\u6570\u636e\u53ef\u89c6\u5316\u800c\u964d\u4f4e\u7ef4\u5ea6 -- \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u901a\u5e38\u5e0c\u671b\u5c06\u7ef4\u5ea6\u964d\u4f4e\u5230 2 \u6216 3\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5728\u4e0d\u964d\u7ef4\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c PCA\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u4fdd\u7559\u8bad\u7ec3\u96c6\u65b9\u5dee 95% \u6240\u9700\u7684\u6700\u5c0f\u7ef4\u6570\uff1a pca=PCA() pac.fit(X) cumsum=np.cumsum(pca.explained_variance_ratio_) d=np.argmax(cumsum>=0.95)+1 \u4f60\u53ef\u4ee5\u8bbe\u7f6e n_components = d \u5e76\u518d\u6b21\u8fd0\u884c PCA\u3002\u4f46\u662f\uff0c\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\uff1a\u4e0d\u6307\u5b9a\u4f60\u60f3\u8981\u4fdd\u7559\u7684\u4e3b\u6210\u5206\u4e2a\u6570\uff0c\u800c\u662f\u5c06 n_components \u8bbe\u7f6e\u4e3a 0.0 \u5230 1.0 \u4e4b\u95f4\u7684\u6d6e\u70b9\u6570\uff0c\u8868\u660e\u60a8\u5e0c\u671b\u4fdd\u7559\u7684\u65b9\u5dee\u6bd4\u7387\uff1a pca=PCA(n_components=0.95) X_reduced=pca.fit_transform(X) \u53e6\u4e00\u79cd\u9009\u62e9\u662f\u753b\u51fa\u65b9\u5dee\u89e3\u91ca\u7387\u5173\u4e8e\u7ef4\u6570\u7684\u51fd\u6570\uff08\u7b80\u5355\u5730\u7ed8\u5236 cumsum \uff1b\u53c2\u89c1\u56fe 8-8\uff09\u3002\u66f2\u7ebf\u4e2d\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u8098\u90e8\uff0c\u65b9\u5dee\u89e3\u91ca\u7387\u505c\u6b62\u5feb\u901f\u589e\u957f\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u6570\u636e\u96c6\u7684\u771f\u6b63\u7684\u7ef4\u5ea6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5c06\u7ef4\u5ea6\u964d\u4f4e\u5230\u5927\u7ea6100\u4e2a\u7ef4\u5ea6\u4e0d\u4f1a\u5931\u53bb\u592a\u591a\u7684\u53ef\u89e3\u91ca\u65b9\u5dee\u3002 \u56fe 8-8 \u53ef\u89e3\u91ca\u65b9\u5dee\u5173\u4e8e\u7ef4\u6570\u7684\u51fd\u6570","title":"\u9009\u62e9\u6b63\u786e\u7684\u7ef4\u5ea6"},{"location":"8.%E9%99%8D%E7%BB%B4/#pca_1","text":"\u663e\u7136\uff0c\u5728\u964d\u7ef4\u4e4b\u540e\uff0c\u8bad\u7ec3\u96c6\u5360\u7528\u7684\u7a7a\u95f4\u8981\u5c11\u5f97\u591a\u3002\u4f8b\u5982\uff0c\u5c1d\u8bd5\u5c06 PCA \u5e94\u7528\u4e8e MNIST \u6570\u636e\u96c6\uff0c\u540c\u65f6\u4fdd\u7559 95% \u7684\u65b9\u5dee\u3002\u4f60\u5e94\u8be5\u53d1\u73b0\u6bcf\u4e2a\u5b9e\u4f8b\u53ea\u6709 150 \u591a\u4e2a\u7279\u5f81\uff0c\u800c\u4e0d\u662f\u539f\u6765\u7684 784 \u4e2a\u7279\u5f81\u3002\u56e0\u6b64\uff0c\u5c3d\u7ba1\u5927\u90e8\u5206\u65b9\u5dee\u90fd\u4fdd\u7559\u4e0b\u6765\uff0c\u4f46\u6570\u636e\u96c6\u73b0\u5728\u8fd8\u4e0d\u5230\u5176\u539f\u59cb\u5927\u5c0f\u7684 20%\uff01\u8fd9\u662f\u4e00\u4e2a\u5408\u7406\u7684\u538b\u7f29\u6bd4\u7387\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u8fd9\u53ef\u4ee5\u5982\u4f55\u6781\u5927\u5730\u52a0\u5feb\u5206\u7c7b\u7b97\u6cd5\uff08\u5982 SVM \u5206\u7c7b\u5668\uff09\u7684\u901f\u5ea6\u3002 \u901a\u8fc7\u5e94\u7528 PCA \u6295\u5f71\u7684\u9006\u53d8\u6362\uff0c\u4e5f\u53ef\u4ee5\u5c06\u7f29\u5c0f\u7684\u6570\u636e\u96c6\u89e3\u538b\u7f29\u56de 784 \u7ef4\u3002\u5f53\u7136\u8fd9\u5e76\u4e0d\u4f1a\u8fd4\u56de\u7ed9\u4f60\u6700\u539f\u59cb\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u6295\u5f71\u4e22\u5931\u4e86\u4e00\u4e9b\u4fe1\u606f\uff08\u57285\uff05\u7684\u65b9\u5dee\u5185\uff09\uff0c\u4f46\u5b83\u53ef\u80fd\u975e\u5e38\u63a5\u8fd1\u539f\u59cb\u6570\u636e\u3002\u539f\u59cb\u6570\u636e\u548c\u91cd\u6784\u6570\u636e\u4e4b\u95f4\u7684\u5747\u65b9\u8ddd\u79bb\uff08\u538b\u7f29\u7136\u540e\u89e3\u538b\u7f29\uff09\u88ab\u79f0\u4e3a\u91cd\u6784\u8bef\u5dee\uff08reconstruction error\uff09\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c06 MNIST \u6570\u636e\u96c6\u538b\u7f29\u5230 154 \u7ef4\uff0c\u7136\u540e\u4f7f\u7528 inverse_transform() \u65b9\u6cd5\u5c06\u5176\u89e3\u538b\u7f29\u56de 784 \u7ef4\u3002\u56fe 8-9 \u663e\u793a\u4e86\u539f\u59cb\u8bad\u7ec3\u96c6\uff08\u5de6\u4fa7\uff09\u7684\u51e0\u4f4d\u6570\u5b57\u5728\u538b\u7f29\u5e76\u89e3\u538b\u7f29\u540e\uff08\u53f3\u4fa7\uff09\u7684\u5bf9\u5e94\u6570\u5b57\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u6709\u8f7b\u5fae\u7684\u56fe\u50cf\u8d28\u91cf\u964d\u4f4e\uff0c\u4f46\u6570\u5b57\u4ecd\u7136\u5927\u90e8\u5206\u5b8c\u597d\u65e0\u635f\u3002 pca=PCA(n_components=154) X_mnist_reduced=pca.fit_transform(X_mnist) X_mnist_recovered=pca.inverse_transform(X_mnist_reduced) \u56fe 8-9 MNIST \u4fdd\u7559 95 \u65b9\u5dee\u7684\u538b\u7f29 \u9006\u53d8\u6362\u7684\u516c\u5f0f\u5982\u516c\u5f0f 8-3 \u6240\u793a \u516c\u5f0f 8-3 PCA\u9006\u53d8\u6362\uff0c\u56de\u9000\u5230\u539f\u6765\u7684\u6570\u636e\u7ef4\u5ea6","title":"PCA \u538b\u7f29"},{"location":"8.%E9%99%8D%E7%BB%B4/#pcaincremental-pca","text":"\u5148\u524d PCA \u5b9e\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u5b83\u9700\u8981\u5728\u5185\u5b58\u4e2d\u5904\u7406\u6574\u4e2a\u8bad\u7ec3\u96c6\u4ee5\u4fbf SVD \u7b97\u6cd5\u8fd0\u884c\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u5f00\u53d1\u4e86\u589e\u91cf PCA\uff08IPCA\uff09\u7b97\u6cd5\uff1a\u60a8\u53ef\u4ee5\u5c06\u8bad\u7ec3\u96c6\u5206\u6279\uff0c\u5e76\u4e00\u6b21\u53ea\u5bf9\u4e00\u4e2a\u6279\u91cf\u4f7f\u7528 IPCA \u7b97\u6cd5\u3002\u8fd9\u5bf9\u5927\u578b\u8bad\u7ec3\u96c6\u975e\u5e38\u6709\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u7ebf\u5e94\u7528 PCA\uff08\u5373\u5728\u65b0\u5b9e\u4f8b\u5230\u8fbe\u65f6\u5373\u65f6\u8fd0\u884c\uff09\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u5c06 MNIST \u6570\u636e\u96c6\u5206\u6210 100 \u4e2a\u5c0f\u6279\u91cf\uff08\u4f7f\u7528 NumPy \u7684 array_split() \u51fd\u6570\uff09\uff0c\u5e76\u5c06\u5b83\u4eec\u63d0\u4f9b\u7ed9 Scikit-Learn \u7684 IncrementalPCA \u7c7b\uff0c\u4ee5\u5c06 MNIST \u6570\u636e\u96c6\u7684\u7ef4\u5ea6\u964d\u4f4e\u5230 154 \u7ef4\uff08\u5c31\u50cf\u4ee5\u524d\u4e00\u6837\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u5fc5\u987b\u5bf9\u6bcf\u4e2a\u6700\u5c0f\u6279\u6b21\u8c03\u7528 partial_fit() \u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u5bf9\u6574\u4e2a\u8bad\u7ec3\u96c6\u4f7f\u7528 fit() \u65b9\u6cd5\uff1a from sklearn.decomposition import IncrementalPCA n_batches=100 inc_pca=IncrementalPCA(n_components=154) for X_batch in np.array_spplit(X_mnist,n_batches): inc_pca.partial_fit(X_batch) X_mnist_reduced=inc_pca.transform(X_mnist) \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 NumPy \u7684 memmap \u7c7b\uff0c\u5b83\u5141\u8bb8\u60a8\u64cd\u4f5c\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u7684\u5927\u578b\u6570\u7ec4\uff0c\u5c31\u597d\u50cf\u5b83\u5b8c\u5168\u5728\u5185\u5b58\u4e2d\uff1b\u8be5\u7c7b\u4ec5\u5728\u9700\u8981\u65f6\u52a0\u8f7d\u5185\u5b58\u4e2d\u6240\u9700\u7684\u6570\u636e\u3002\u7531\u4e8e\u589e\u91cf PCA \u7c7b\u5728\u4efb\u4f55\u65f6\u95f4\u5185\u4ec5\u4f7f\u7528\u6570\u7ec4\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u56e0\u6b64\u5185\u5b58\u4f7f\u7528\u91cf\u4ecd\u53d7\u5230\u63a7\u5236\u3002\u8fd9\u53ef\u4ee5\u8c03\u7528\u901a\u5e38\u7684 fit() \u65b9\u6cd5\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\uff1a X_mm=np.memmap(filename,dtype='float32',mode='readonly',shape=(m,n)) batch_size=m//n_batches inc_pca=IncrementalPCA(n_components=154,batch_size=batch_size) inc_pca.fit(X_mm)","title":"\u589e\u91cf PCA\uff08Incremental PCA\uff09"},{"location":"8.%E9%99%8D%E7%BB%B4/#pcarandomized-pca","text":"Scikit-Learn \u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u6267\u884c PCA \u7684\u9009\u62e9\uff0c\u79f0\u4e3a\u968f\u673a PCA\u3002\u8fd9\u662f\u4e00\u79cd\u968f\u673a\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u524dd\u4e2a\u4e3b\u6210\u5206\u7684\u8fd1\u4f3c\u503c\u3002\u5b83\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u662f O(m \u00d7 d^2) + O(d^3) \uff0c\u800c\u4e0d\u662f O(m \u00d7 n^2) + O(n^3) \uff0c\u6240\u4ee5\u5f53 d \u8fdc\u5c0f\u4e8e n \u65f6\uff0c\u5b83\u6bd4\u4e4b\u524d\u7684\u7b97\u6cd5\u5feb\u5f97\u591a\u3002 rnd_pca=PCA(n_components=154,svd_solver='randomized') X_reduced=rnd_pca.fit_transform(X_mnist)","title":"\u968f\u673a PCA\uff08Randomized PCA\uff09"},{"location":"8.%E9%99%8D%E7%BB%B4/#pcakernel-pca","text":"\u5728\u7b2c 5 \u7ae0\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u6838\u6280\u5de7\uff0c\u4e00\u79cd\u5c06\u5b9e\u4f8b\u9690\u5f0f\u6620\u5c04\u5230\u975e\u5e38\u9ad8\u7ef4\u7a7a\u95f4\uff08\u79f0\u4e3a\u7279\u5f81\u7a7a\u95f4\uff09\u7684\u6570\u5b66\u6280\u672f\uff0c\u8ba9\u652f\u6301\u5411\u91cf\u673a\u53ef\u4ee5\u5e94\u7528\u4e8e\u975e\u7ebf\u6027\u5206\u7c7b\u548c\u56de\u5f52\u3002\u56de\u60f3\u4e00\u4e0b\uff0c\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c\u5bf9\u5e94\u4e8e\u539f\u59cb\u7a7a\u95f4\u4e2d\u7684\u590d\u6742\u975e\u7ebf\u6027\u51b3\u7b56\u8fb9\u754c\u3002 \u4e8b\u5b9e\u8bc1\u660e\uff0c\u540c\u6837\u7684\u6280\u5de7\u53ef\u4ee5\u5e94\u7528\u4e8e PCA\uff0c\u4ece\u800c\u53ef\u4ee5\u6267\u884c\u590d\u6742\u7684\u975e\u7ebf\u6027\u6295\u5f71\u6765\u964d\u4f4e\u7ef4\u5ea6\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u6838 PCA\uff08kPCA\uff09\u3002\u5b83\u901a\u5e38\u80fd\u591f\u5f88\u597d\u5730\u4fdd\u7559\u6295\u5f71\u540e\u7684\u7c07\uff0c\u6709\u65f6\u751a\u81f3\u53ef\u4ee5\u5c55\u5f00\u5206\u5e03\u8fd1\u4f3c\u4e8e\u626d\u66f2\u6d41\u5f62\u7684\u6570\u636e\u96c6\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528 Scikit-Learn \u7684 KernelPCA \u7c7b\u6765\u6267\u884c\u5e26\u6709 RBF \u6838\u7684 kPCA\uff08\u6709\u5173 RBF \u6838\u548c\u5176\u4ed6\u6838\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u7b2c 5 \u7ae0\uff09\uff1a from sklearn.decomposition import KernelPCA rbf_pca=KernelPCA(n_components=2,kernel='rbf',gamma=0.04) X_reduced=rbf_pca.fit_transform(X) \u56fe 8-10 \u5c55\u793a\u4e86\u4f7f\u7528\u7ebf\u6027\u6838\uff08\u7b49\u540c\u4e8e\u7b80\u5355\u7684\u4f7f\u7528 PCA \u7c7b\uff09\uff0cRBF \u6838\uff0csigmoid \u6838\uff08Logistic\uff09\u5c06\u745e\u58eb\u5377\u964d\u5230 2 \u7ef4\u3002 \u56fe 8-10 \u4f7f\u7528\u4e0d\u540c\u6838\u7684 kPCA \u5c06\u745e\u58eb\u5377\u964d\u5230 2 \u7ef4","title":"\u6838 PCA\uff08Kernel PCA\uff09"},{"location":"8.%E9%99%8D%E7%BB%B4/#_7","text":"\u7531\u4e8e kPCA \u662f\u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u56e0\u6b64\u6ca1\u6709\u660e\u663e\u7684\u6027\u80fd\u6307\u6807\u53ef\u4ee5\u5e2e\u52a9\u60a8\u9009\u62e9\u6700\u4f73\u7684\u6838\u65b9\u6cd5\u548c\u8d85\u53c2\u6570\u503c\u3002\u4f46\u662f\uff0c\u964d\u7ef4\u901a\u5e38\u662f\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff08\u4f8b\u5982\u5206\u7c7b\uff09\u7684\u51c6\u5907\u6b65\u9aa4\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u7f51\u683c\u641c\u7d22\u6765\u9009\u62e9\u53ef\u4ee5\u8ba9\u8be5\u4efb\u52a1\u8fbe\u5230\u6700\u4f73\u8868\u73b0\u7684\u6838\u65b9\u6cd5\u548c\u8d85\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u4e24\u6b65\u7684\u6d41\u6c34\u7ebf\uff0c\u9996\u5148\u4f7f\u7528 kPCA \u5c06\u7ef4\u5ea6\u964d\u81f3\u4e24\u7ef4\uff0c\u7136\u540e\u5e94\u7528 Logistic \u56de\u5f52\u8fdb\u884c\u5206\u7c7b\u3002\u7136\u540e\u5b83\u4f7f\u7528 Grid SearchCV \u4e3a kPCA \u627e\u5230\u6700\u4f73\u7684\u6838\u548c gamma \u503c\uff0c\u4ee5\u4fbf\u5728\u6700\u540e\u83b7\u5f97\u6700\u4f73\u7684\u5206\u7c7b\u51c6\u786e\u6027\uff1a from sklearn.model_selection import GridSearchCV from sklearn.linear_model import LogisticRegression from sklearn.pipeline import Pipeline clf = Pipeline([ (\"kpca\", KernelPCA(n_components=2)), (\"log_reg\", LogisticRegression()) ]) param_grid = [{ \"kpca__gamma\": np.linspace(0.03, 0.05, 10), \"kpca__kernel\": [\"rbf\", \"sigmoid\"] }] grid_search = GridSearchCV(clf, param_grid, cv=3) grid_search.fit(X, y) \u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 best_params_ \u53d8\u91cf\u6765\u67e5\u770b\u4f7f\u6a21\u578b\u6548\u679c\u6700\u597d\u7684\u6838\u548c\u8d85\u53c2\u6570\uff1a >>> print(grid_search.best_params_) {'kpca__gamma': 0.043333333333333335, 'kpca__kernel': 'rbf'} \u53e6\u4e00\u79cd\u5b8c\u5168\u4e3a\u975e\u76d1\u7763\u7684\u65b9\u6cd5\uff0c\u662f\u9009\u62e9\u4ea7\u751f\u6700\u4f4e\u91cd\u5efa\u8bef\u5dee\u7684\u6838\u548c\u8d85\u53c2\u6570\u3002\u4f46\u662f\uff0c\u91cd\u5efa\u5e76\u4e0d\u50cf\u7ebf\u6027 PCA \u90a3\u6837\u5bb9\u6613\u3002\u8fd9\u91cc\u662f\u539f\u56e0\uff1a\u56fe 8-11 \u663e\u793a\u4e86\u539f\u59cb\u745e\u58eb\u5377 3D \u6570\u636e\u96c6\uff08\u5de6\u4e0a\u89d2\uff09\uff0c\u5e76\u4e14\u4f7f\u7528 RBF \u6838\u5e94\u7528 kPCA \u540e\u751f\u6210\u7684\u4e8c\u7ef4\u6570\u636e\u96c6\uff08\u53f3\u4e0a\u89d2\uff09\u3002\u7531\u4e8e\u6838\u6280\u5de7\uff0c\u8fd9\u5728\u6570\u5b66\u4e0a\u7b49\u540c\u4e8e\u4f7f\u7528\u7279\u5f81\u6620\u5c04 \u03c6 \u5c06\u8bad\u7ec3\u96c6\u6620\u5c04\u5230\u65e0\u9650\u7ef4\u7279\u5f81\u7a7a\u95f4\uff08\u53f3\u4e0b\uff09\uff0c\u7136\u540e\u4f7f\u7528\u7ebf\u6027 PCA \u5c06\u53d8\u6362\u7684\u8bad\u7ec3\u96c6\u6295\u5f71\u5230 2D\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5728\u7f29\u51cf\u7a7a\u95f4\u4e2d\u5bf9\u7ed9\u5b9a\u5b9e\u4f8b\u5b9e\u73b0\u53cd\u5411\u7ebf\u6027 PCA \u6b65\u9aa4\uff0c\u5219\u91cd\u6784\u70b9\u5c06\u4f4d\u4e8e\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u800c\u4e0d\u662f\u4f4d\u4e8e\u539f\u59cb\u7a7a\u95f4\u4e2d\uff08\u4f8b\u5982\uff0c\u5982\u56fe\u4e2d\u7531 x \u8868\u793a\u7684\u90a3\u6837\uff09\u3002\u7531\u4e8e\u7279\u5f81\u7a7a\u95f4\u662f\u65e0\u9650\u7ef4\u7684\uff0c\u6211\u4eec\u4e0d\u80fd\u627e\u51fa\u91cd\u5efa\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u6cd5\u8ba1\u7b97\u771f\u5b9e\u7684\u91cd\u5efa\u8bef\u5dee\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u53ef\u4ee5\u5728\u539f\u59cb\u7a7a\u95f4\u4e2d\u627e\u5230\u4e00\u4e2a\u8d34\u8fd1\u91cd\u5efa\u70b9\u7684\u70b9\u3002\u8fd9\u88ab\u79f0\u4e3a\u91cd\u5efa\u524d\u56fe\u50cf\uff08reconstruction pre-image\uff09\u3002\u4e00\u65e6\u4f60\u6709\u8fd9\u4e2a\u524d\u56fe\u50cf\uff0c\u4f60\u5c31\u53ef\u4ee5\u6d4b\u91cf\u5176\u4e0e\u539f\u59cb\u5b9e\u4f8b\u7684\u5e73\u65b9\u8ddd\u79bb\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u6700\u5c0f\u5316\u91cd\u5efa\u524d\u56fe\u50cf\u9519\u8bef\u7684\u6838\u548c\u8d85\u53c2\u6570\u3002 \u56fe 8-11 \u6838 PCA \u548c\u91cd\u5efa\u524d\u56fe\u50cf\u8bef\u5dee \u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u5982\u4f55\u8fdb\u884c\u8fd9\u79cd\u91cd\u5efa\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u8bad\u7ec3\u4e00\u4e2a\u76d1\u7763\u56de\u5f52\u6a21\u578b\uff0c\u5c06\u9884\u8ba1\u5b9e\u4f8b\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u5e76\u5c06\u539f\u59cb\u5b9e\u4f8b\u4f5c\u4e3a\u8bad\u7ec3\u76ee\u6807\u3002\u5982\u679c\u60a8\u8bbe\u7f6e\u4e86 fit_inverse_transform = True \uff0cScikit-Learn \u5c06\u81ea\u52a8\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a rbf_pca = KernelPCA(n_components = 2, kernel=\"rbf\", gamma=0.0433,fit_inverse_transform=True) X_reduced = rbf_pca.fit_transform(X) X_preimage = rbf_pca.inverse_transform(X_reduced) \u6982\u8ff0\uff1a\u9ed8\u8ba4\u6761\u4ef6\u4e0b\uff0c fit_inverse_transform = False \u5e76\u4e14 KernelPCA \u6ca1\u6709 inverse_tranfrom() \u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u4ec5\u4ec5\u5f53 fit_inverse_transform = True \u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u521b\u5efa\u3002 \u4f60\u53ef\u4ee5\u8ba1\u7b97\u91cd\u5efa\u524d\u56fe\u50cf\u8bef\u5dee\uff1a >>> from sklearn.metrics import mean_squared_error >>> mean_squared_error(X, X_preimage) 32.786308795766132 \u73b0\u5728\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u683c\u641c\u7d22\u6765\u5bfb\u627e\u53ef\u4ee5\u6700\u5c0f\u5316\u91cd\u5efa\u524d\u56fe\u50cf\u8bef\u5dee\u7684\u6838\u65b9\u6cd5\u548c\u8d85\u53c2\u6570\u3002","title":"\u9009\u62e9\u4e00\u79cd\u6838\u5e76\u8c03\u6574\u8d85\u53c2\u6570"},{"location":"8.%E9%99%8D%E7%BB%B4/#lle","text":"\u5c40\u90e8\u7ebf\u6027\u5d4c\u5165\uff08Locally Linear Embedding\uff09\u662f\u53e6\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u975e\u7ebf\u6027\u964d\u7ef4\uff08NLDR\uff09\u65b9\u6cd5\u3002\u8fd9\u662f\u4e00\u79cd\u6d41\u5f62\u5b66\u4e60\u6280\u672f\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u50cf\u4ee5\u524d\u7b97\u6cd5\u90a3\u6837\u7684\u6295\u5f71\u3002\u7b80\u800c\u8a00\u4e4b\uff0cLLE \u9996\u5148\u6d4b\u91cf\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u4e0e\u5176\u6700\u8fd1\u90bb\uff08c.n.\uff09\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u7136\u540e\u5bfb\u627e\u80fd\u6700\u597d\u5730\u4fdd\u7559\u8fd9\u4e9b\u5c40\u90e8\u5173\u7cfb\u7684\u8bad\u7ec3\u96c6\u7684\u4f4e\u7ef4\u8868\u793a\uff08\u7a0d\u540e\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\uff09 \u3002\u8fd9\u4f7f\u5f97\u5b83\u7279\u522b\u64c5\u957f\u5c55\u5f00\u626d\u66f2\u7684\u6d41\u5f62\uff0c\u5c24\u5176\u662f\u5728\u6ca1\u6709\u592a\u591a\u566a\u97f3\u7684\u60c5\u51b5\u4e0b\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 Scikit-Learn \u7684 LocallyLinearEmbedding \u7c7b\u6765\u5c55\u5f00\u745e\u58eb\u5377\u3002\u5f97\u5230\u7684\u4e8c\u7ef4\u6570\u636e\u96c6\u5982\u56fe 8-12 \u6240\u793a\u3002\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u745e\u58eb\u5377\u88ab\u5b8c\u5168\u5c55\u5f00\uff0c\u5b9e\u4f8b\u4e4b\u95f4\u7684\u8ddd\u79bb\u4fdd\u5b58\u5f97\u5f88\u597d\u3002\u4f46\u662f\uff0c\u8ddd\u79bb\u4e0d\u80fd\u5728\u8f83\u5927\u8303\u56f4\u5185\u4fdd\u7559\u7684\u5f88\u597d\uff1a\u5c55\u5f00\u7684\u745e\u58eb\u5377\u7684\u5de6\u4fa7\u88ab\u6324\u538b\uff0c\u800c\u53f3\u4fa7\u7684\u90e8\u5206\u88ab\u62c9\u957f\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cLLE \u5728\u5bf9\u6d41\u5f62\u5efa\u6a21\u65b9\u9762\u505a\u5f97\u975e\u5e38\u597d\u3002 from sklearn.manifold import LocallyLinearEmbedding lle=LocallyLinearEmbedding(n_components=2,n_neighbors=10) X_reduced=lle.fit_transform(X) \u56fe 8-12 \u4f7f\u7528 LLE \u5c55\u5f00\u745e\u58eb\u5377 \u8fd9\u662fLLE\u7684\u5de5\u4f5c\u539f\u7406\uff1a\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b \uff0c\u8be5\u7b97\u6cd5\u8bc6\u522b\u5176\u6700\u8fd1\u7684 k \u4e2a\u90bb\u5c45\uff08\u5728\u524d\u9762\u7684\u4ee3\u7801\u4e2d k = 10 \u4e2d\uff09\uff0c\u7136\u540e\u5c1d\u8bd5\u5c06 \u91cd\u6784\u4e3a\u8fd9\u4e9b\u90bb\u5c45\u7684\u7ebf\u6027\u51fd\u6570\u3002\u66f4\u5177\u4f53\u5730\uff0c\u627e\u5230\u6743\u91cd \u4ece\u800c\u4f7f \u548c \u4e4b\u95f4\u7684\u5e73\u65b9\u8ddd\u79bb\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u5047\u8bbe\u5982\u679c \u4e0d\u662f \u7684 k \u4e2a\u6700\u8fd1\u90bb\u65f6 \u3002\u56e0\u6b64\uff0cLLE \u7684\u7b2c\u4e00\u6b65\u662f\u65b9\u7a0b 8-4 \u4e2d\u63cf\u8ff0\u7684\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff0c\u5176\u4e2d W \u662f\u5305\u542b\u6240\u6709\u6743\u91cd \u7684\u6743\u91cd\u77e9\u9635\u3002\u7b2c\u4e8c\u4e2a\u7ea6\u675f\u7b80\u5355\u5730\u5bf9\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b \u7684\u6743\u91cd\u8fdb\u884c\u5f52\u4e00\u5316\u3002 \u516c\u5f0f 8-2 LLE \u7b2c\u4e00\u6b65\uff1a\u5bf9\u5c40\u90e8\u5173\u7cfb\u8fdb\u884c\u7ebf\u6027\u5efa\u6a21 \u5728\u8fd9\u6b65\u4e4b\u540e\uff0c\u6743\u91cd\u77e9\u9635 \uff08\u5305\u542b\u6743\u91cd \u5bf9\u8bad\u7ec3\u5b9e\u4f8b\u7684\u7ebf\u5f62\u5173\u7cfb\u8fdb\u884c\u7f16\u7801\u3002\u73b0\u5728\u7b2c\u4e8c\u6b65\u662f\u5c06\u8bad\u7ec3\u5b9e\u4f8b\u6295\u5f71\u5230\u4e00\u4e2a d \u7ef4\u7a7a\u95f4\uff08 d < n \uff09\u4e2d\u53bb\uff0c\u540c\u65f6\u5c3d\u53ef\u80fd\u7684\u4fdd\u7559\u8fd9\u4e9b\u5c40\u90e8\u5173\u7cfb\u3002\u5982\u679c \u662f \u5728\u8fd9\u4e2a d \u7ef4\u7a7a\u95f4\u7684\u56fe\u50cf\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u8981 \u548c \u4e4b\u95f4\u7684\u5e73\u65b9\u8ddd\u79bb\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002\u8fd9\u4e2a\u60f3\u6cd5\u8ba9\u6211\u4eec\u63d0\u51fa\u4e86\u516c\u5f0f8-5\u4e2d\u7684\u975e\u9650\u5236\u6027\u4f18\u5316\u95ee\u9898\u3002\u5b83\u770b\u8d77\u6765\u4e0e\u7b2c\u4e00\u6b65\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u6211\u4eec\u8981\u505a\u7684\u4e0d\u662f\u4fdd\u6301\u5b9e\u4f8b\u56fa\u5b9a\u5e76\u627e\u5230\u6700\u4f73\u6743\u91cd\uff0c\u800c\u662f\u6070\u76f8\u53cd\uff1a\u4fdd\u6301\u6743\u91cd\u4e0d\u53d8\uff0c\u5e76\u5728\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u627e\u5230\u5b9e\u4f8b\u56fe\u50cf\u7684\u6700\u4f73\u4f4d\u7f6e\u3002\u8bf7\u6ce8\u610f\uff0c Z \u662f\u5305\u542b\u6240\u6709 \u7684\u77e9\u9635\u3002 \u516c\u5f0f 8-3 LLE \u7b2c\u4e8c\u6b65\uff1a\u4fdd\u6301\u5173\u7cfb\u7684\u540c\u65f6\u8fdb\u884c\u964d\u7ef4 Scikit-Learn \u7684 LLE \u5b9e\u73b0\u5177\u6709\u5982\u4e0b\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\uff1a\u67e5\u627e k \u4e2a\u6700\u8fd1\u90bb\u4e3a O(m log(m) n log(k)) \uff0c\u4f18\u5316\u6743\u91cd\u4e3a O(m n k^3) \uff0c\u5efa\u7acb\u4f4e\u7ef4\u8868\u793a\u4e3a O(d m^2) \u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6700\u540e\u4e00\u9879 m^2 \u4f7f\u5f97\u8fd9\u4e2a\u7b97\u6cd5\u5728\u5904\u7406\u5927\u6570\u636e\u96c6\u7684\u65f6\u5019\u8868\u73b0\u8f83\u5dee\u3002","title":"LLE"},{"location":"8.%E9%99%8D%E7%BB%B4/#_8","text":"\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u964d\u7ef4\u65b9\u6cd5\uff0cScikit-Learn \u652f\u6301\u5176\u4e2d\u7684\u597d\u51e0\u79cd\u3002\u8fd9\u91cc\u662f\u5176\u4e2d\u6700\u6d41\u884c\u7684\uff1a \u591a\u7ef4\u7f29\u653e\uff08MDS\uff09\u5728\u5c1d\u8bd5\u4fdd\u6301\u5b9e\u4f8b\u4e4b\u95f4\u8ddd\u79bb\u7684\u540c\u65f6\u964d\u4f4e\u4e86\u7ef4\u5ea6\uff08\u53c2\u89c1\u56fe 8-13\uff09 Isomap \u901a\u8fc7\u5c06\u6bcf\u4e2a\u5b9e\u4f8b\u8fde\u63a5\u5230\u6700\u8fd1\u7684\u90bb\u5c45\u6765\u521b\u5efa\u56fe\u5f62\uff0c\u7136\u540e\u5728\u5c1d\u8bd5\u4fdd\u6301\u5b9e\u4f8b\u4e4b\u95f4\u7684\u6d4b\u5730\u8ddd\u79bb\u65f6\u964d\u4f4e\u7ef4\u5ea6\u3002 t-\u5206\u5e03\u968f\u673a\u90bb\u57df\u5d4c\u5165\uff08t-Distributed Stochastic Neighbor Embedding\uff0ct-SNE\uff09\u53ef\u4ee5\u7528\u4e8e\u964d\u4f4e\u7ef4\u200b\u200b\u5ea6\uff0c\u540c\u65f6\u8bd5\u56fe\u4fdd\u6301\u76f8\u4f3c\u7684\u5b9e\u4f8b\u4e34\u8fd1\u5e76\u5c06\u4e0d\u76f8\u4f3c\u7684\u5b9e\u4f8b\u5206\u5f00\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u53ef\u89c6\u5316\uff0c\u5c24\u5176\u662f\u7528\u4e8e\u53ef\u89c6\u5316\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u5b9e\u4f8b\uff08\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06MNIST\u56fe\u50cf\u964d\u7ef4\u5230 2D \u53ef\u89c6\u5316\uff09\u3002 \u7ebf\u6027\u5224\u522b\u5206\u6790\uff08Linear Discriminant Analysis\uff0cLDA\uff09\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u5206\u7c7b\u7b97\u6cd5\uff0c\u4f46\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u5b83\u4f1a\u5b66\u4e60\u7c7b\u4e4b\u95f4\u6700\u6709\u533a\u522b\u7684\u8f74\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u8f74\u6765\u5b9a\u4e49\u7528\u4e8e\u6295\u5f71\u6570\u636e\u7684\u8d85\u5e73\u9762\u3002LDA \u7684\u597d\u5904\u662f\u6295\u5f71\u4f1a\u5c3d\u53ef\u80fd\u5730\u4fdd\u6301\u5404\u4e2a\u7c7b\u4e4b\u95f4\u8ddd\u79bb\uff0c\u6240\u4ee5\u5728\u8fd0\u884c\u53e6\u4e00\u79cd\u5206\u7c7b\u7b97\u6cd5\uff08\u5982 SVM \u5206\u7c7b\u5668\uff09\u4e4b\u524d\uff0cLDA \u662f\u5f88\u597d\u7684\u964d\u7ef4\u6280\u672f\u3002 \u56fe 8-13 \u4f7f\u7528\u4e0d\u540c\u7684\u6280\u672f\u5c06\u745e\u58eb\u5377\u964d\u7ef4\u81f3 2D","title":"\u5176\u4ed6\u964d\u7ef4\u65b9\u6cd5"},{"location":"8.%E9%99%8D%E7%BB%B4/#_9","text":"\u51cf\u5c11\u6570\u636e\u96c6\u7ef4\u5ea6\u7684\u4e3b\u8981\u52a8\u673a\u662f\u4ec0\u4e48\uff1f\u4e3b\u8981\u7f3a\u70b9\u662f\u4ec0\u4e48\uff1f \u4ec0\u4e48\u662f\u7ef4\u5ea6\u7206\u70b8\uff1f \u4e00\u65e6\u5bf9\u67d0\u6570\u636e\u96c6\u964d\u7ef4\uff0c\u6211\u4eec\u53ef\u80fd\u6062\u590d\u5b83\u5417\uff1f\u5982\u679c\u53ef\u4ee5\uff0c\u600e\u6837\u505a\u624d\u80fd\u6062\u590d\uff1f\u5982\u679c\u4e0d\u53ef\u4ee5\uff0c\u4e3a\u4ec0\u4e48\uff1f PCA \u53ef\u4ee5\u7528\u4e8e\u964d\u4f4e\u4e00\u4e2a\u9ad8\u5ea6\u975e\u7ebf\u6027\u5bf9\u6570\u636e\u96c6\u5417\uff1f \u5047\u8bbe\u4f60\u5bf9\u4e00\u4e2a 1000 \u7ef4\u7684\u6570\u636e\u96c6\u5e94\u7528 PCA\uff0c\u540c\u65f6\u8bbe\u7f6e\u65b9\u5dee\u89e3\u91ca\u7387\u4e3a 95%\uff0c\u4f60\u7684\u6700\u7ec8\u6570\u636e\u96c6\u5c06\u4f1a\u6709\u591a\u5c11\u7ef4\uff1f \u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f60\u4f1a\u4f7f\u7528\u666e\u901a\u7684 PCA\uff0c\u589e\u91cf PCA\uff0c\u968f\u673a PCA \u548c\u6838 PCA\uff1f \u4f60\u8be5\u5982\u4f55\u8bc4\u4ef7\u4f60\u7684\u964d\u7ef4\u7b97\u6cd5\u5728\u4f60\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\uff1f \u5c06\u4e24\u4e2a\u4e0d\u540c\u7684\u964d\u7ef4\u7b97\u6cd5\u4e32\u8054\u4f7f\u7528\u6709\u610f\u4e49\u5417\uff1f \u52a0\u8f7d MNIST \u6570\u636e\u96c6\uff08\u5728\u7b2c 3 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff0c\u5e76\u5c06\u5176\u5206\u6210\u4e00\u4e2a\u8bad\u7ec3\u96c6\u548c\u4e00\u4e2a\u6d4b\u8bd5\u96c6\uff08\u5c06\u524d 60,000 \u4e2a\u5b9e\u4f8b\u7528\u4e8e\u8bad\u7ec3\uff0c\u5176\u4f59 10,000 \u4e2a\u7528\u4e8e\u6d4b\u8bd5\uff09\u3002\u5728\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\uff0c\u5e76\u8bb0\u5f55\u4e86\u82b1\u8d39\u591a\u957f\u65f6\u95f4\uff0c\u7136\u540e\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8bc4\u4f30\u6a21\u578b\u3002\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528 PCA \u964d\u4f4e\u6570\u636e\u96c6\u7684\u7ef4\u5ea6\uff0c\u8bbe\u7f6e\u65b9\u5dee\u89e3\u91ca\u7387\u4e3a 95%\u3002\u5728\u964d\u7ef4\u540e\u7684\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u65b0\u7684\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\uff0c\u5e76\u67e5\u770b\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u8bad\u7ec3\u901f\u5ea6\u66f4\u5feb\uff1f\u63a5\u4e0b\u6765\u8bc4\u4f30\u6d4b\u8bd5\u96c6\u4e0a\u7684\u5206\u7c7b\u5668\uff1a\u5b83\u4e0e\u4ee5\u524d\u7684\u5206\u7c7b\u5668\u6bd4\u8f83\u8d77\u6765\u5982\u4f55\uff1f \u4f7f\u7528 t-SNE \u5c06 MNIST \u6570\u636e\u96c6\u7f29\u51cf\u5230\u4e8c\u7ef4\uff0c\u5e76\u4f7f\u7528 Matplotlib \u7ed8\u5236\u7ed3\u679c\u56fe\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 10 \u79cd\u4e0d\u540c\u989c\u8272\u7684\u6563\u70b9\u56fe\u6765\u8868\u793a\u6bcf\u4e2a\u56fe\u50cf\u7684\u76ee\u6807\u7c7b\u522b\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u4f4d\u7f6e\u5199\u5165\u5f69\u8272\u6570\u5b57\uff0c\u751a\u81f3\u53ef\u4ee5\u7ed8\u5236\u6570\u5b57\u56fe\u50cf\u672c\u8eab\u7684\u964d\u7ef4\u7248\u672c\uff08\u5982\u679c\u7ed8\u5236\u6240\u6709\u6570\u5b57\uff0c\u5219\u53ef\u89c6\u5316\u53ef\u80fd\u4f1a\u8fc7\u4e8e\u6df7\u4e71\uff0c\u56e0\u6b64\u60a8\u5e94\u8be5\u7ed8\u5236\u968f\u673a\u6837\u672c\u6216\u53ea\u5728\u5468\u56f4\u6ca1\u6709\u5176\u4ed6\u5b9e\u4f8b\u88ab\u7ed8\u5236\u7684\u60c5\u51b5\u4e0b\u7ed8\u5236\uff09\u3002\u4f60\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u5206\u9694\u826f\u597d\u7684\u7684\u53ef\u89c6\u5316\u6570\u5b57\u96c6\u7fa4\u3002\u5c1d\u8bd5\u4f7f\u7528\u5176\u4ed6\u964d\u7ef4\u7b97\u6cd5\uff0c\u5982 PCA\uff0cLLE \u6216 MDS\uff0c\u5e76\u6bd4\u8f83\u53ef\u89c6\u5316\u7ed3\u679c\u3002 \u7ec3\u4e60\u7b54\u6848\u8bf7\u89c1\u9644\u5f55 A\u3002","title":"\u7ec3\u4e60"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/","text":"\u4e5d\u3001\u542f\u52a8\u5e76\u8fd0\u884c TensorFlow TensorFlow \u662f\u4e00\u6b3e\u7528\u4e8e\u6570\u503c\u8ba1\u7b97\u7684\u5f3a\u5927\u7684\u5f00\u6e90\u8f6f\u4ef6\u5e93\uff0c\u7279\u522b\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u673a\u5668\u5b66\u4e60\u7684\u5fae\u8c03\u3002 \u5b83\u7684\u57fa\u672c\u539f\u7406\u5f88\u7b80\u5355\uff1a\u9996\u5148\u5728 Python \u4e2d\u5b9a\u4e49\u8981\u6267\u884c\u7684\u8ba1\u7b97\u56fe\uff08\u4f8b\u5982\u56fe 9-1\uff09\uff0c\u7136\u540e TensorFlow \u4f7f\u7528\u8be5\u56fe\u5e76\u4f7f\u7528\u4f18\u5316\u7684 C++ \u4ee3\u7801\u9ad8\u6548\u8fd0\u884c\u8be5\u56fe\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0cTensorflow \u53ef\u4ee5\u5c06\u56fe\u5206\u89e3\u4e3a\u591a\u4e2a\u5757\u5e76\u5728\u591a\u4e2a CPU \u6216 GPU \u4e0a\u5e76\u884c\u8fd0\u884c\uff08\u5982\u56fe 9-2 \u6240\u793a\uff09\u3002 TensorFlow \u8fd8\u652f\u6301\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728\u6570\u767e\u53f0\u670d\u52a1\u5668\u4e0a\u5206\u5272\u8ba1\u7b97\uff0c\u4ece\u800c\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u5728\u5e9e\u5927\u7684\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u5e9e\u5927\u7684\u795e\u7ecf\u7f51\u7edc\uff08\u8bf7\u53c2\u9605\u7b2c 12 \u7ae0\uff09\u3002 TensorFlow \u53ef\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u62e5\u6709\u6570\u767e\u4e07\u4e2a\u53c2\u6570\u7684\u7f51\u7edc\uff0c\u8bad\u7ec3\u96c6\u7531\u6570\u5341\u4ebf\u4e2a\u5177\u6709\u6570\u767e\u4e07\u4e2a\u7279\u5f81\u7684\u5b9e\u4f8b\u7ec4\u6210\u3002 \u8fd9\u5e94\u8be5\u4e0d\u4f1a\u8ba9\u60a8\u5403\u60ca\uff0c\u56e0\u4e3a TensorFlow \u662f \u7531Google \u5927\u8111\u56e2\u961f\u5f00\u53d1\u7684\uff0c\u5b83\u652f\u6301\u8c37\u6b4c\u7684\u5927\u91cf\u670d\u52a1\uff0c\u4f8b\u5982 Google Cloud Speech\uff0cGoogle Photos \u548c Google Search\u3002 \u5f53 TensorFlow \u4e8e 2015 \u5e74 11 \u6708\u5f00\u653e\u6e90\u4ee3\u7801\u65f6\uff0c\u5df2\u6709\u8bb8\u591a\u6df1\u5ea6\u5b66\u4e60\u7684\u6d41\u884c\u5f00\u6e90\u5e93\uff08\u8868 9-1 \u5217\u51fa\u4e86\u4e00\u4e9b\uff09\uff0c\u516c\u5e73\u5730\u8bf4\uff0c\u5927\u90e8\u5206 TensorFlow \u7684\u529f\u80fd\u5df2\u7ecf\u5b58\u5728\u4e8e\u4e00\u4e2a\u5e93\u6216\u53e6\u4e00\u4e2a\u5e93\u4e2d\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0cTensorFlow \u7684\u6574\u6d01\u8bbe\u8ba1\uff0c\u53ef\u6269\u5c55\u6027\uff0c\u7075\u6d3b\u6027\u548c\u51fa\u8272\u7684\u6587\u6863\uff08\u66f4\u4e0d\u7528\u8bf4\u8c37\u6b4c\u7684\u540d\u5b57\uff09\u8fc5\u901f\u5c06\u5176\u63a8\u5411\u4e86\u699c\u9996\u3002 \u7b80\u800c\u8a00\u4e4b\uff0cTensorFlow \u7684\u8bbe\u8ba1\u7075\u6d3b\u6027\uff0c\u53ef\u6269\u5c55\u6027\u548c\u751f\u4ea7\u5c31\u7eea\u6027\uff0c\u73b0\u6709\u6846\u67b6\u53ef\u4ee5\u8bf4\u53ea\u6709\u5176\u4e2d\u4e09\u79cd\u53ef\u7528\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b TensorFlow \u7684\u4eae\u70b9\uff1a \u5b83\u4e0d\u4ec5\u5728 Windows\uff0cLinux \u548c MacOS \u4e0a\u8fd0\u884c\uff0c\u800c\u4e14\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u8fd0\u884c\uff0c\u5305\u62ec iOS \u548c Android\u3002 \u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 Python API\uff0c\u540d\u4e3a TF.Learn2\uff08 tensorflow.con trib.learn \uff09\uff0c\u4e0e Scikit-Learn \u517c\u5bb9\u3002\u6b63\u5982\u4f60\u5c06\u4f1a\u770b\u5230\u7684\uff0c\u4f60\u53ef\u4ee5\u7528\u51e0\u884c\u4ee3\u7801\u6765\u8bad\u7ec3\u4e0d\u540c\u7c7b\u578b\u7684\u795e\u7ecf\u7f51\u7edc\u3002\u4e4b\u524d\u662f\u4e00\u4e2a\u540d\u4e3a Scikit Flow\uff08\u6216 Skow\uff09\u7684\u72ec\u7acb\u9879\u76ee\u3002 \u5b83\u8fd8\u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u7b80\u5355\u7684\u79f0\u4e3a TF-slim\uff08 tensorflow.contrib.slim \uff09\u7684 API \u6765\u7b80\u5316\u6784\u5efa\uff0c\u8bad\u7ec3\u548c\u6c42\u51fa\u795e\u7ecf\u7f51\u7edc\u3002 \u5176\u4ed6\u51e0\u4e2a\u9ad8\u7ea7 API \u5df2\u7ecf\u5728 TensorFlow \u4e4b\u4e0a\u72ec\u7acb\u6784\u5efa\uff0c\u5982 Keras \u6216 Pretty Tensor \u3002 \u5b83\u7684\u4e3b\u8981 Python API \u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff08\u4ee5\u66f4\u9ad8\u590d\u6742\u5ea6\u4e3a\u4ee3\u4ef7\uff09\u6765\u521b\u5efa\u5404\u79cd\u8ba1\u7b97\uff0c\u5305\u62ec\u4efb\u4f55\u4f60\u80fd\u60f3\u5230\u7684\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u3002 \u5b83\u5305\u62ec\u8bb8\u591a ML \u64cd\u4f5c\u7684\u9ad8\u6548 C ++ \u5b9e\u73b0\uff0c\u7279\u522b\u662f\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\u6240\u9700\u7684 C++ \u5b9e\u73b0\u3002\u8fd8\u6709\u4e00\u4e2a C++ API \u6765\u5b9a\u4e49\u60a8\u81ea\u5df1\u7684\u9ad8\u6027\u80fd\u64cd\u4f5c\u3002 \u5b83\u63d0\u4f9b\u4e86\u51e0\u4e2a\u9ad8\u7ea7\u4f18\u5316\u8282\u70b9\u6765\u641c\u7d22\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u7684\u53c2\u6570\u3002\u7531\u4e8e TensorFlow \u81ea\u52a8\u5904\u7406\u8ba1\u7b97\u60a8\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u68af\u5ea6\uff0c\u56e0\u6b64\u8fd9\u4e9b\u975e\u5e38\u6613\u4e8e\u4f7f\u7528\u3002\u8fd9\u79f0\u4e3a\u81ea\u52a8\u5206\u89e3\uff08\u6216 autodi \uff09\u3002 \u5b83\u8fd8\u9644\u5e26\u4e00\u4e2a\u540d\u4e3a TensorBoard \u7684\u5f3a\u5927\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u53ef\u8ba9\u60a8\u6d4f\u89c8\u8ba1\u7b97\u56fe\u8868\uff0c\u67e5\u770b\u5b66\u4e60\u66f2\u7ebf\u7b49\u3002 Google \u8fd8\u63a8\u51fa\u4e86\u4e91\u670d\u52a1\u6765\u8fd0\u884c TensorFlow \u8868\u3002 \u6700\u540e\uff0c\u5b83\u62e5\u6709\u4e00\u652f\u5145\u6ee1\u70ed\u60c5\u548c\u4e50\u4e8e\u52a9\u4eba\u7684\u5f00\u53d1\u56e2\u961f\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4e0d\u65ad\u6210\u957f\u7684\u793e\u533a\uff0c\u81f4\u529b\u4e8e\u6539\u5584\u5b83\u3002\u5b83\u662f GitHub \u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u5f00\u6e90\u9879\u76ee\u4e4b\u4e00\uff0c\u5e76\u4e14\u8d8a\u6765\u8d8a\u591a\u7684\u4f18\u79c0\u9879\u76ee\u6b63\u5728\u6784\u5efa\u4e4b\u4e0a\uff08\u4f8b\u5982\uff0c\u67e5\u770b https://www.tensorflow.org/ \u6216 https://github.com/jtoy/awesome-tensorflow \uff09\u3002 \u8981\u95ee\u6280\u672f\u95ee\u9898\uff0c\u60a8\u5e94\u8be5\u4f7f\u7528 http://stackoverflow.com/ \u5e76\u7528 tensorflow \u6807\u8bb0\u60a8\u7684\u95ee\u9898\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7 GitHub \u63d0\u4ea4\u9519\u8bef\u548c\u529f\u80fd\u8bf7\u6c42\u3002\u6709\u5173\u4e00\u822c\u8ba8\u8bba\uff0c\u8bf7\u52a0\u5165 Google \u5c0f\u7ec4 \u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd TensorFlow \u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4ece\u5b89\u88c5\u5230\u521b\u5efa\uff0c\u8fd0\u884c\uff0c\u4fdd\u5b58\u548c\u53ef\u89c6\u5316\u7b80\u5355\u7684\u8ba1\u7b97\u56fe\u3002 \u5728\u6784\u5efa\u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u4e4b\u524d\u638c\u63e1\u8fd9\u4e9b\u57fa\u7840\u77e5\u8bc6\u5f88\u91cd\u8981\uff08\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002 \u5b89\u88c5 \u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01\u5047\u8bbe\u60a8\u6309\u7167\u7b2c 2 \u7ae0\u4e2d\u7684\u5b89\u88c5\u8bf4\u660e\u5b89\u88c5\u4e86 Jupyter \u548c Scikit-Learn\uff0c\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528 pip \u6765\u5b89\u88c5 TensorFlow\u3002 \u5982\u679c\u4f60\u4f7f\u7528 virtualenv \u521b\u5efa\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u73af\u5883\uff0c\u4f60\u9996\u5148\u9700\u8981\u6fc0\u6d3b\u5b83\uff1a $ cd $ML_PATH #Your ML working directory(e.g., $HOME/ml) $ source env/bin/activate \u4e0b\u4e00\u6b65\uff0c\u5b89\u88c5 Tensorflow\u3002 $ pip3 install --upgrade tensorflow \u5bf9\u4e8e GPU \u652f\u6301\uff0c\u4f60\u9700\u8981\u5b89\u88c5 tensorflow-gpu \u800c\u4e0d\u662f tensorflow \u3002\u5177\u4f53\u8bf7\u53c2\u89c1 12 \u7ae0\u5185\u5bb9\u3002 \u4e3a\u4e86\u6d4b\u8bd5\u60a8\u7684\u5b89\u88c5\uff0c\u8bf7\u8f93\u5165\u4e00\u4e0b\u547d\u4ee4\u3002\u5176\u8f93\u51fa\u5e94\u8be5\u662f\u60a8\u5b89\u88c5\u7684 Tensorflow \u7684\u7248\u672c\u53f7\u3002 $ python -c 'import tensorflow; print(tensorflow.__version__)' 1.0.0 \u521b\u9020\u7b2c\u4e00\u4e2a\u56fe\u8c31\uff0c\u7136\u540e\u8fd0\u884c\u5b83 import tensorflow as tf x = tf.Variable(3, name=\"x\") y = tf.Variable(4, name=\"y\") f = x*x*y + y + 2 \u8fd9\u5c31\u662f\u5b83\u7684\u4e00\u5207\uff01 \u6700\u91cd\u8981\u7684\u662f\u8981\u77e5\u9053\u8fd9\u4e2a\u4ee3\u7801\u5b9e\u9645\u4e0a\u5e76\u4e0d\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\uff0c\u5373\u4f7f\u5b83\u770b\u8d77\u6765\u50cf(\u5c24\u5176\u662f\u6700\u540e\u4e00\u884c\uff09\u3002 \u5b83\u53ea\u662f\u521b\u5efa\u4e00\u4e2a\u8ba1\u7b97\u56fe\u8c31\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u53d8\u91cf\u90fd\u6ca1\u6709\u521d\u59cb\u5316.\u8981\u6c42\u51fa\u6b64\u56fe\uff0c\u60a8\u9700\u8981\u6253\u5f00\u4e00\u4e2a TensorFlow \u4f1a\u8bdd\u5e76\u4f7f\u7528\u5b83\u521d\u59cb\u5316\u53d8\u91cf\u5e76\u6c42\u51fa f \u3002TensorFlow \u4f1a\u8bdd\u8d1f\u8d23\u5904\u7406\u5728\u8bf8\u5982 CPU \u548c GPU \u4e4b\u7c7b\u7684\u8bbe\u5907\u4e0a\u7684\u64cd\u4f5c\u5e76\u8fd0\u884c\u5b83\u4eec\uff0c\u5e76\u4e14\u5b83\u4fdd\u7559\u6240\u6709\u53d8\u91cf\u503c\u3002\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd\uff0c\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u5e76\u6c42\u51fa f \uff0c\u7136\u540e\u5173\u95ed\u4f1a\u8bdd\uff08\u91ca\u653e\u8d44\u6e90\uff09\uff1a # way1 sess = tf.Session() sess.run(x.initializer) sess.run(y.initializer) result = sess.run(f) print(result) sess.close() \u4e0d\u5f97\u4e0d\u6bcf\u6b21\u91cd\u590dsess.run() \u6709\u70b9\u9ebb\u70e6\uff0c\u4f46\u5e78\u8fd0\u7684\u662f\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u6cd5\uff1a # way2 with tf.Session() as sess: x.initializer.run() y.initializer.run() result = f.eval() print(result) \u5728 with \u5757\u4e2d\uff0c\u4f1a\u8bdd\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u4f1a\u8bdd\u3002 \u8c03\u7528 x.initializer.run() \u7b49\u6548\u4e8e\u8c03\u7528 tf.get_default_session().run(x.initial) \uff0c f.eval() \u7b49\u6548\u4e8e\u8c03\u7528 tf.get_default_session().run(f) \u3002 \u8fd9\u4f7f\u5f97\u4ee3\u7801\u66f4\u5bb9\u6613\u9605\u8bfb\u3002 \u6b64\u5916\uff0c\u4f1a\u8bdd\u5728\u5757\u7684\u672b\u5c3e\u81ea\u52a8\u5173\u95ed\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 global_variables_initializer() \u51fd\u6570\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u521d\u59cb\u5316\u6bcf\u4e2a\u53d8\u91cf\u3002 \u8bf7\u6ce8\u610f\uff0c\u5b83\u5b9e\u9645\u4e0a\u6ca1\u6709\u7acb\u5373\u6267\u884c\u521d\u59cb\u5316\uff0c\u800c\u662f\u5728\u56fe\u8c31\u4e2d\u521b\u5efa\u4e00\u4e2a\u5f53\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6240\u6709\u53d8\u91cf\u90fd\u4f1a\u521d\u59cb\u5316\u7684\u8282\u70b9\uff1a # way3 init = tf.global_variables_initializer() with tf.Session() as sess: init.run() result = f.eval() print(result) \u5728 Jupyter \u5185\u90e8\u6216\u5728 Python shell \u4e2d\uff0c\u60a8\u53ef\u80fd\u66f4\u559c\u6b22\u521b\u5efa\u4e00\u4e2a InteractiveSession \u3002 \u4e0e\u5e38\u89c4\u4f1a\u8bdd\u7684\u552f\u4e00\u533a\u522b\u662f\uff0c\u5f53\u521b\u5efa InteractiveSession \u65f6\uff0c\u5b83\u5c06\u81ea\u52a8\u5c06\u5176\u81ea\u8eab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u4f1a\u8bdd\uff0c\u56e0\u6b64\u60a8\u4e0d\u9700\u8981\u4f7f\u7528\u6a21\u5757\uff08\u4f46\u662f\u60a8\u9700\u8981\u5728\u5b8c\u6210\u540e\u624b\u52a8\u5173\u95ed\u4f1a\u8bdd\uff09\uff1a # way4 init = tf.global_variables_initializer() sess = tf.InteractiveSession() init.run() result = f.eval() print(result) sess.close() TensorFlow \u7a0b\u5e8f\u901a\u5e38\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u7b2c\u4e00\u90e8\u5206\u6784\u5efa\u8ba1\u7b97\u56fe\u8c31\uff08\u8fd9\u79f0\u4e3a\u6784\u9020\u9636\u6bb5\uff09\uff0c\u7b2c\u4e8c\u90e8\u5206\u8fd0\u884c\u5b83\uff08\u8fd9\u662f\u6267\u884c\u9636\u6bb5\uff09\u3002 \u5efa\u8bbe\u9636\u6bb5\u901a\u5e38\u6784\u5efa\u4e00\u4e2a\u8868\u793a ML \u6a21\u578b\u7684\u8ba1\u7b97\u56fe\u8c31,\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u8bad\u7ec3,\u8ba1\u7b97\u3002 \u6267\u884c\u9636\u6bb5\u901a\u5e38\u8fd0\u884c\u5faa\u73af\uff0c\u91cd\u590d\u5730\u6c42\u51fa\u8bad\u7ec3\u6b65\u9aa4\uff08\u4f8b\u5982\uff0c\u6bcf\u4e2a\u5c0f\u6279\u6b21\uff09\uff0c\u9010\u6e10\u6539\u8fdb\u6a21\u578b\u53c2\u6570\u3002 \u7ba1\u7406\u56fe\u8c31 \u60a8\u521b\u5efa\u7684\u4efb\u4f55\u8282\u70b9\u90fd\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230\u9ed8\u8ba4\u56fe\u5f62\u4e2d\uff1a >>> x1 = tf.Variable(1) >>> x1.graph is tf.get_default_graph() True \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u5f88\u597d\u7684\uff0c\u4f46\u6709\u65f6\u60a8\u53ef\u80fd\u9700\u8981\u7ba1\u7406\u591a\u4e2a\u72ec\u7acb\u56fe\u5f62\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u56fe\u5f62\u5e76\u6682\u65f6\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5757\u4e2d\u7684\u9ed8\u8ba4\u56fe\u5f62\uff0c\u5982\u4e0b\u6240\u793a\uff1a >>> graph = tf.Graph() >>> with graph.as_default(): ... x2 = tf.Variable(2) ... >>> x2.graph is graph True >>> x2.graph is tf.get_default_graph() False \u5728 Jupyter\uff08\u6216 Python shell\uff09\u4e2d\uff0c\u901a\u5e38\u5728\u5b9e\u9a8c\u65f6\u591a\u6b21\u8fd0\u884c\u76f8\u540c\u7684\u547d\u4ee4\u3002 \u56e0\u6b64\uff0c\u60a8\u53ef\u80fd\u4f1a\u6536\u5230\u5305\u542b\u8bb8\u591a\u91cd\u590d\u8282\u70b9\u7684\u9ed8\u8ba4\u56fe\u5f62\u3002 \u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u91cd\u65b0\u542f\u52a8 Jupyter \u5185\u6838\uff08\u6216 Python shell\uff09\uff0c\u4f46\u662f\u4e00\u4e2a\u66f4\u65b9\u4fbf\u7684\u89e3\u51b3\u65b9\u6848\u662f\u901a\u8fc7\u8fd0\u884c tf.reset_default_graph() \u6765\u91cd\u7f6e\u9ed8\u8ba4\u56fe\u3002 \u8282\u70b9\u503c\u7684\u751f\u547d\u5468\u671f \u6c42\u51fa\u8282\u70b9\u65f6\uff0cTensorFlow \u4f1a\u81ea\u52a8\u786e\u5b9a\u6240\u4f9d\u8d56\u7684\u8282\u70b9\u96c6\uff0c\u5e76\u9996\u5148\u6c42\u51fa\u8fd9\u4e9b\u8282\u70b9\u3002 \u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u4ee3\u7801\uff1a # w = tf.constant(3) # x = w + 2 # y = x + 5 # z = x * 3 # with tf.Session() as sess: # print(y.eval()) # print(z.eval()) \u9996\u5148\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u56fe\u3002\u7136\u540e\uff0c\u5b83\u542f\u52a8\u4e00\u4e2a\u4f1a\u8bdd\u5e76\u8fd0\u884c\u56fe\u6765\u6c42\u51fa y \uff1aTensorFlow \u81ea\u52a8\u68c0\u6d4b\u5230 y \u53d6\u51b3\u4e8e x \uff0c\u5b83\u53d6\u51b3\u4e8e w \uff0c\u6240\u4ee5\u5b83\u9996\u5148\u6c42\u51fa w \uff0c\u7136\u540e x \uff0c\u7136\u540e y \uff0c\u5e76\u8fd4\u56de y \u7684\u503c\u3002\u6700\u540e\uff0c\u4ee3\u7801\u8fd0\u884c\u56fe\u6765\u6c42\u51fa z \u3002\u540c\u6837\uff0cTensorFlow \u68c0\u6d4b\u5230\u5b83\u5fc5\u987b\u9996\u5148\u6c42\u51fa w \u548c x \u3002\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\uff0c\u5b83\u4e0d\u4f1a\u590d\u7528\u4ee5\u524d\u7684w\u548cx\u7684\u6c42\u51fa\u7ed3\u679c\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u524d\u9762\u7684\u4ee3\u7801\u6c42\u51fa w \u548c x \u4e24\u6b21\u3002 \u6240\u6709\u8282\u70b9\u503c\u90fd\u5728\u56fe\u8fd0\u884c\u4e4b\u95f4\u5220\u9664\uff0c\u9664\u4e86\u53d8\u91cf\u503c\uff0c\u7531\u4f1a\u8bdd\u8de8\u56fe\u5f62\u8fd0\u884c\u7ef4\u62a4\uff08\u961f\u5217\u548c\u8bfb\u8005\u4e5f\u4fdd\u6301\u4e00\u4e9b\u72b6\u6001\uff09\u3002\u53d8\u91cf\u5728\u5176\u521d\u59cb\u5316\u7a0b\u5e8f\u8fd0\u884c\u65f6\u542f\u52a8\u5176\u751f\u547d\u5468\u671f\uff0c\u5e76\u4e14\u5728\u4f1a\u8bdd\u5173\u95ed\u65f6\u7ed3\u675f\u3002 \u5982\u679c\u8981\u6709\u6548\u5730\u6c42\u51fa y \u548c z \uff0c\u800c\u4e0d\u50cf\u4e4b\u524d\u7684\u4ee3\u7801\u90a3\u6837\u6c42\u51fa w \u548c x \u4e24\u6b21\uff0c\u90a3\u4e48\u60a8\u5fc5\u987b\u8981\u6c42 TensorFlow \u5728\u4e00\u4e2a\u56fe\u5f62\u8fd0\u884c\u4e2d\u6c42\u51fa y \u548c z \uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\uff1a # with tf.Session() as sess: # y_val, z_val = sess.run([y, z]) # print(y_val) # 10 # print(z_val) # 15 \u5728\u5355\u8fdb\u7a0b TensorFlow \u4e2d\uff0c\u591a\u4e2a\u4f1a\u8bdd\u4e0d\u5171\u4eab\u4efb\u4f55\u72b6\u6001\uff0c\u5373\u4f7f\u5b83\u4eec\u590d\u7528\u540c\u4e00\u4e2a\u56fe\uff08\u6bcf\u4e2a\u4f1a\u8bdd\u90fd\u6709\u81ea\u5df1\u7684\u6bcf\u4e2a\u53d8\u91cf\u7684\u526f\u672c\uff09\u3002 \u5728\u5206\u5e03\u5f0f TensorFlow \u4e2d\uff0c\u53d8\u91cf\u72b6\u6001\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u800c\u4e0d\u662f\u5728\u4f1a\u8bdd\u4e2d\uff0c\u56e0\u6b64\u591a\u4e2a\u4f1a\u8bdd\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u53d8\u91cf\u3002 Linear Regression with TensorFlow TensorFlow \u64cd\u4f5c\uff08\u4e5f\u7b80\u79f0\u4e3a ops\uff09\u53ef\u4ee5\u91c7\u7528\u4efb\u610f\u6570\u91cf\u7684\u8f93\u5165\u5e76\u4ea7\u751f\u4efb\u610f\u6570\u91cf\u7684\u8f93\u51fa\u3002 \u4f8b\u5982\uff0c\u52a0\u6cd5\u8fd0\u7b97\u548c\u4e58\u6cd5\u8fd0\u7b97\u90fd\u9700\u8981\u4e24\u4e2a\u8f93\u5165\u5e76\u4ea7\u751f\u4e00\u4e2a\u8f93\u51fa\u3002 \u5e38\u91cf\u548c\u53d8\u91cf\u4e0d\u8f93\u5165\uff08\u5b83\u4eec\u88ab\u79f0\u4e3a\u6e90\u64cd\u4f5c\uff09\u3002 \u8f93\u5165\u548c\u8f93\u51fa\u662f\u79f0\u4e3a\u5f20\u91cf\u7684\u591a\u7ef4\u6570\u7ec4\uff08\u56e0\u6b64\u79f0\u4e3a\u201ctensor flow\u201d\uff09\u3002 \u5c31\u50cf NumPy \u6570\u7ec4\u4e00\u6837\uff0c\u5f20\u91cf\u5177\u6709\u7c7b\u578b\u548c\u5f62\u72b6\u3002 \u5b9e\u9645\u4e0a\uff0c\u5728 Python API \u4e2d\uff0c\u5f20\u91cf\u7b80\u5355\u5730\u7531 NumPy ndarray \u8868\u793a\u3002 \u5b83\u4eec\u901a\u5e38\u5305\u542b\u6d6e\u70b9\u6570\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u4f20\u9001\u5b57\u7b26\u4e32\uff08\u4efb\u610f\u5b57\u8282\u6570\u7ec4\uff09\u3002 \u8fc4\u4eca\u4e3a\u6b62\u7684\u793a\u4f8b\uff0c\u5f20\u91cf\u53ea\u5305\u542b\u5355\u4e2a\u6807\u91cf\u503c\uff0c\u4f46\u662f\u5f53\u7136\u53ef\u4ee5\u5bf9\u4efb\u4f55\u5f62\u72b6\u7684\u6570\u7ec4\u6267\u884c\u8ba1\u7b97\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u64cd\u4f5c\u4e8c\u7ef4\u6570\u7ec4\u6765\u5bf9\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u5c4b\u6570\u636e\u96c6\u8fdb\u884c\u7ebf\u6027\u56de\u5f52\uff08\u5728\u7b2c 2 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002\u5b83\u4ece\u83b7\u53d6\u6570\u636e\u96c6\u5f00\u59cb\uff1b\u4e4b\u540e\u5b83\u4f1a\u5411\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u504f\u7f6e\u8f93\u5165\u7279\u5f81\uff08 x0 = 1 \uff09\uff08\u5b83\u4f7f\u7528 NumPy \u8fdb\u884c\uff0c\u56e0\u6b64\u7acb\u5373\u8fd0\u884c\uff09\uff1b\u4e4b\u540e\u5b83\u521b\u5efa\u4e24\u4e2a TensorFlow \u5e38\u91cf\u8282\u70b9 X \u548c y \u6765\u4fdd\u5b58\u8be5\u6570\u636e\u548c\u76ee\u6807\uff0c\u5e76\u4e14\u5b83\u4f7f\u7528 TensorFlow \u63d0\u4f9b\u7684\u4e00\u4e9b\u77e9\u9635\u8fd0\u7b97\u6765\u5b9a\u4e49 theta \u3002\u8fd9\u4e9b\u77e9\u9635\u51fd\u6570 transpose() \uff0c matmul() \u548c matrix_inverse() \u662f\u4e0d\u8a00\u81ea\u660e\u7684\uff0c\u4f46\u662f\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u5b83\u4eec\u4e0d\u4f1a\u7acb\u5373\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\uff1b\u76f8\u53cd\uff0c\u5b83\u4eec\u4f1a\u5728\u56fe\u5f62\u4e2d\u521b\u5efa\u5728\u8fd0\u884c\u56fe\u5f62\u65f6\u6267\u884c\u5b83\u4eec\u7684\u8282\u70b9\u3002\u60a8\u53ef\u4ee5\u8ba4\u8bc6\u5230 \u03b8 \u7684\u5b9a\u4e49\u5bf9\u5e94\u4e8e\u65b9\u7a0b \u3002 \u6700\u540e\uff0c\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a session \u5e76\u4f7f\u7528\u5b83\u6765\u6c42\u51fa theta \u3002 import numpy as np from sklearn.datasets import fetch_california_housing housing = fetch_california_housing() m, n = housing.data.shape #np.c_\u6309colunm\u6765\u7ec4\u5408array housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] X = tf.constant(housing_data_plus_bias, dtype=tf.float32, name=\"X\") y = tf.constant(housing.target.reshape(-1, 1), dtype=tf.float32, name=\"y\") XT = tf.transpose(X) theta = tf.matmul(tf.matmul(tf.matrix_inverse(tf.matmul(XT, X)), XT), y) with tf.Session() as sess: theta_value = theta.eval() print(theta_value) \u5982\u679c\u60a8\u6709\u4e00\u4e2a GPU \u7684\u8bdd\uff0c\u4e0a\u8ff0\u4ee3\u7801\u76f8\u8f83\u4e8e\u76f4\u63a5\u4f7f\u7528 NumPy \u8ba1\u7b97\u6b63\u6001\u65b9\u7a0b\u5f0f\u7684\u4e3b\u8981\u4f18\u70b9\u662f TensorFlow \u4f1a\u81ea\u52a8\u8fd0\u884c\u5728\u60a8\u7684 GPU \u4e0a\uff08\u5982\u679c\u60a8\u5b89\u88c5\u4e86\u652f\u6301 GPU \u7684 TensorFlow\uff0c\u5219 TensorFlow \u5c06\u81ea\u52a8\u8fd0\u884c\u5728 GPU \u4e0a\uff0c\u8bf7\u53c2\u9605\u7b2c 12 \u7ae0\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff09\u3002 \u5176\u5b9e\u8fd9\u91cc\u5c31\u662f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u7b97 \u03b8 http://blog.csdn.net/akon_wang_hkbu/article/details/77503725 \u5b9e\u73b0\u68af\u5ea6\u4e0b\u964d \u8ba9\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08\u5728\u7b2c 4 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff0c\u800c\u4e0d\u662f\u666e\u901a\u65b9\u7a0b\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u624b\u52a8\u8ba1\u7b97\u68af\u5ea6\u6765\u5b9e\u73b0\uff0c\u7136\u540e\u6211\u4eec\u5c06\u4f7f\u7528 TensorFlow \u7684\u81ea\u52a8\u6269\u5c55\u529f\u80fd\u6765\u4f7f TensorFlow \u81ea\u52a8\u8ba1\u7b97\u68af\u5ea6\uff0c\u6700\u540e\u6211\u4eec\u5c06\u4f7f\u7528\u51e0\u4e2a TensorFlow \u7684\u4f18\u5316\u5668\u3002 \u5f53\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u65f6\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u9996\u5148\u8981\u5bf9\u8f93\u5165\u7279\u5f81\u5411\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u5426\u5219\u8bad\u7ec3\u53ef\u80fd\u8981\u6162\u5f97\u591a\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 TensorFlow\uff0cNumPy\uff0cScikit-Learn \u7684 StandardScaler \u6216\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u5176\u4ed6\u89e3\u51b3\u65b9\u6848\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5047\u5b9a\u6b64\u89c4\u8303\u5316\u5df2\u7ecf\u5b8c\u6210\u3002 \u624b\u52a8\u8ba1\u7b97\u6e10\u53d8 \u4ee5\u4e0b\u4ee3\u7801\u5e94\u8be5\u662f\u76f8\u5f53\u4e0d\u8a00\u81ea\u660e\u7684\uff0c\u9664\u4e86\u51e0\u4e2a\u65b0\u5143\u7d20\uff1a random_uniform() \u51fd\u6570\u5728\u56fe\u5f62\u4e2d\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u5c06\u751f\u6210\u5305\u542b\u968f\u673a\u503c\u7684\u5f20\u91cf\uff0c\u7ed9\u5b9a\u5176\u5f62\u72b6\u548c\u503c\u4f5c\u7528\u57df\uff0c\u5c31\u50cf NumPy \u7684 rand() \u51fd\u6570\u4e00\u6837\u3002 assign() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u4e3a\u53d8\u91cf\u5206\u914d\u65b0\u503c\u7684\u8282\u70b9\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u5b9e\u73b0\u4e86\u6279\u6b21\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4 \u3002 \u4e3b\u5faa\u73af\u4e00\u6b21\u53c8\u4e00\u6b21\uff08\u5171 n_epochs \u6b21\uff09\u6267\u884c\u8bad\u7ec3\u6b65\u9aa4\uff0c\u6bcf 100 \u6b21\u8fed\u4ee3\u90fd\u6253\u5370\u51fa\u5f53\u524d\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\u3002 \u4f60\u5e94\u8be5\u770b\u5230 MSE \u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u90fd\u4f1a\u4e0b\u964d\u3002 housing = fetch_california_housing() m, n = housing.data.shape m, n = housing.data.shape #np.c_\u6309colunm\u6765\u7ec4\u5408array housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaled_housing_data_plus_bias = scale(housing_data_plus_bias) n_epochs = 1000 learning_rate = 0.01 X = tf.constant(scaled_housing_data_plus_bias, dtype=tf.float32, name=\"X\") y = tf.constant(housing.target.reshape(-1, 1), dtype=tf.float32, name=\"y\") theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") gradients = 2/m * tf.matmul(tf.transpose(X), error) training_op = tf.assign(theta, theta - learning_rate * gradients) init = tf.global_variables_initializer() with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): if epoch % 100 == 0: print(\"Epoch\", epoch, \"MSE =\", mse.eval()) sess.run(training_op) best_theta = theta.eval() Using autodi\ufb00 \u524d\u9762\u7684\u4ee3\u7801\u5de5\u4f5c\u6b63\u5e38\uff0c\u4f46\u5b83\u9700\u8981\u4ece\u4ee3\u4ef7\u51fd\u6570\uff08MSE\uff09\u4e2d\u5229\u7528\u6570\u5b66\u516c\u5f0f\u63a8\u5bfc\u68af\u5ea6\u3002 \u5728\u7ebf\u6027\u56de\u5f52\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u76f8\u5f53\u5bb9\u6613\u7684\uff0c\u4f46\u662f\u5982\u679c\u4f60\u5fc5\u987b\u7528\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5\uff0c\u4f60\u4f1a\u611f\u5230\u5934\u75db\uff1a\u8fd9\u5c06\u662f\u4e4f\u5473\u548c\u5bb9\u6613\u51fa\u9519\u7684\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u7b26\u53f7\u6c42\u5bfc\u6765\u4e3a\u60a8\u81ea\u52a8\u627e\u5230\u504f\u5bfc\u6570\u7684\u65b9\u7a0b\u5f0f\uff0c\u4f46\u7ed3\u679c\u4ee3\u7801\u4e0d\u4e00\u5b9a\u975e\u5e38\u6709\u6548\u3002 \u4e3a\u4e86\u7406\u89e3\u4e3a\u4ec0\u4e48\uff0c\u8003\u8651\u51fd\u6570 f(x) = exp(exp(exp(x))) \u3002\u5982\u679c\u4f60\u77e5\u9053\u5fae\u79ef\u5206\uff0c\u4f60\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5b83\u7684\u5bfc\u6570 f'(x) = exp(x) * exp(exp(x)) * exp(exp(exp(x))) \u3002\u5982\u679c\u60a8\u6309\u7167\u666e\u901a\u7684\u8ba1\u7b97\u65b9\u5f0f\u5206\u522b\u53bb\u5199 f(x) \u548c f'(x) \uff0c\u60a8\u7684\u4ee3\u7801\u5c06\u4e0d\u4f1a\u5982\u6b64\u6709\u6548\u3002 \u4e00\u4e2a\u66f4\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5199\u4e00\u4e2a\u9996\u5148\u8ba1\u7b97 exp(x) \uff0c\u7136\u540e exp(exp(x)) \uff0c\u7136\u540e exp(exp(exp(x))) \u7684\u51fd\u6570\uff0c\u5e76\u8fd4\u56de\u6240\u6709\u4e09\u4e2a\u3002\u8fd9\u76f4\u63a5\u7ed9\u4f60\uff08\u7b2c\u4e09\u9879\uff09 f(x) \uff0c\u5982\u679c\u4f60\u9700\u8981\u6c42\u5bfc\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e09\u4e2a\u5b50\u5f0f\u76f8\u4e58\uff0c\u4f60\u5c31\u5b8c\u6210\u4e86\u3002 \u901a\u8fc7\u4f20\u7edf\u7684\u65b9\u6cd5\uff0c\u60a8\u4e0d\u5f97\u4e0d\u5c06 exp \u51fd\u6570\u8c03\u7528 9 \u6b21\u6765\u8ba1\u7b97 f(x) \u548c f'(x) \u3002 \u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f60\u53ea\u9700\u8981\u8c03\u7528\u5b83\u4e09\u6b21\u3002 \u5f53\u60a8\u7684\u529f\u80fd\u7531\u67d0\u4e9b\u4efb\u610f\u4ee3\u7801\u5b9a\u4e49\u65f6\uff0c\u5b83\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002 \u4f60\u80fd\u627e\u5230\u65b9\u7a0b\uff08\u6216\u4ee3\u7801\uff09\u6765\u8ba1\u7b97\u4ee5\u4e0b\u51fd\u6570\u7684\u504f\u5bfc\u6570\u5417\uff1f \u63d0\u793a\uff1a\u4e0d\u8981\u5c1d\u8bd5\u3002 def my_func(a, b): z = 0 for i in range(100): z = a * np.cos(z + i) + z * np.sin(b - i) return z \u5e78\u8fd0\u7684\u662f\uff0cTensorFlow \u7684\u81ea\u52a8\u8ba1\u7b97\u68af\u5ea6\u529f\u80fd\u53ef\u4ee5\u8ba1\u7b97\u8fd9\u4e2a\u516c\u5f0f\uff1a\u5b83\u53ef\u4ee5\u81ea\u52a8\u9ad8\u6548\u5730\u4e3a\u60a8\u8ba1\u7b97\u68af\u5ea6\u3002 \u53ea\u9700\u7528\u4ee5\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u66ff\u6362\u4e0a\u4e00\u8282\u4e2d\u4ee3\u7801\u7684 gradients = ... \u884c\uff0c\u4ee3\u7801\u5c06\u7ee7\u7eed\u5de5\u4f5c\u6b63\u5e38\uff1a gradients = tf.gradients(mse, [theta])[0] gradients() \u51fd\u6570\u4f7f\u7528\u4e00\u4e2a op \uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662fMSE\uff09\u548c\u4e00\u4e2a\u53d8\u91cf\u5217\u8868\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53ea\u662f theta \uff09\uff0c\u5b83\u521b\u5efa\u4e00\u4e2a ops \u5217\u8868\uff08\u6bcf\u4e2a\u53d8\u91cf\u4e00\u4e2a\uff09\u6765\u8ba1\u7b97 op \u7684\u68af\u5ea6\u53d8\u91cf\u3002 \u56e0\u6b64\uff0c\u68af\u5ea6\u8282\u70b9\u5c06\u8ba1\u7b97 MSE \u76f8\u5bf9\u4e8e theta \u7684\u68af\u5ea6\u5411\u91cf\u3002 \u81ea\u52a8\u8ba1\u7b97\u68af\u5ea6\u6709\u56db\u79cd\u4e3b\u8981\u65b9\u6cd5\u3002 \u5b83\u4eec\u603b\u7ed3\u5728\u8868 9-2 \u4e2d\u3002 TensorFlow \u4f7f\u7528\u53cd\u5411\u6a21\u5f0f\uff0c\u8fd9\u662f\u5b8c\u7f8e\u7684\uff08\u9ad8\u6548\u548c\u51c6\u786e\uff09\uff0c\u5f53\u6709\u5f88\u591a\u8f93\u5165\u548c\u5c11\u91cf\u7684\u8f93\u51fa\uff0c\u5982\u901a\u5e38\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u60c5\u51b5\u3002 \u5b83\u53ea\u9700\u8981\u901a\u8fc7 \u6b21\u56fe\u904d\u5386\u5373\u53ef\u8ba1\u7b97\u6240\u6709\u8f93\u51fa\u7684\u504f\u5bfc\u6570\u3002 \u4f7f\u7528\u4f18\u5316\u5668 \u6240\u4ee5 TensorFlow \u4e3a\u60a8\u8ba1\u7b97\u68af\u5ea6\u3002 \u4f46\u5b83\u8fd8\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff1a\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684\u4f18\u5316\u5668\uff0c\u5305\u62ec\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u5668\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u7b80\u5355\u5730\u66ff\u6362\u4ee5\u524d\u7684 gradients = ... \u548c training_op = ... \u884c\uff0c\u5e76\u4e14\u4e00\u5207\u90fd\u5c06\u6b63\u5e38\u5de5\u4f5c\uff1a optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(mse) \u5982\u679c\u8981\u4f7f\u7528\u5176\u4ed6\u7c7b\u578b\u7684\u4f18\u5316\u5668\uff0c\u5219\u53ea\u9700\u8981\u66f4\u6539\u4e00\u884c\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u4f18\u5316\u5668\u6765\u4f7f\u7528\u52a8\u91cf\u4f18\u5316\u5668\uff08\u901a\u5e38\u4f1a\u6bd4\u6e10\u53d8\u6536\u655b\u7684\u6536\u655b\u901f\u5ea6\u5feb\u5f97\u591a\uff1b\u53c2\u89c1\u7b2c 11 \u7ae0\uff09 optimizer = tf.train.MomentumOptimizer(learning_rate=learning_rate, momentum=0.9) \u5c06\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u7b97\u6cd5 \u6211\u4eec\u5c1d\u8bd5\u4fee\u6539\u4ee5\u524d\u7684\u4ee3\u7801\u6765\u5b9e\u73b0\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08Mini-batch Gradient Descent\uff09\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\u7528\u4e0b\u4e00\u4e2a\u5c0f\u6279\u91cf\u66ff\u6362 X \u548c Y \u7684\u65b9\u6cd5\u3002 \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5360\u4f4d\u7b26\uff08placeholder\uff09\u8282\u70b9\u3002 \u8fd9\u4e9b\u8282\u70b9\u662f\u7279\u522b\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b9e\u9645\u4e0a\u5e76\u4e0d\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\uff0c\u53ea\u662f\u8f93\u51fa\u60a8\u5728\u8fd0\u884c\u65f6\u8f93\u51fa\u7684\u6570\u636e\u3002 \u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u5c06\u8bad\u7ec3\u6570\u636e\u4f20\u9012\u7ed9 TensorFlow\u3002 \u5982\u679c\u5728\u8fd0\u884c\u65f6\u6ca1\u6709\u4e3a\u5360\u4f4d\u7b26\u6307\u5b9a\u503c\uff0c\u5219\u4f1a\u6536\u5230\u5f02\u5e38\u3002 \u8981\u521b\u5efa\u5360\u4f4d\u7b26\u8282\u70b9\uff0c\u60a8\u5fc5\u987b\u8c03\u7528 placeholder() \u51fd\u6570\u5e76\u6307\u5b9a\u8f93\u51fa\u5f20\u91cf\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6216\u8005\uff0c\u60a8\u8fd8\u53ef\u4ee5\u6307\u5b9a\u5176\u5f62\u72b6\uff0c\u5982\u679c\u8981\u5f3a\u5236\u6267\u884c\u3002 \u5982\u679c\u6307\u5b9a\u7ef4\u5ea6\u4e3a None \uff0c\u5219\u8868\u793a\u201c\u4efb\u4f55\u5927\u5c0f\u201d\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5360\u4f4d\u7b26\u8282\u70b9 A \uff0c\u8fd8\u6709\u4e00\u4e2a\u8282\u70b9 B = A + 5 \u3002\u5f53\u6211\u4eec\u6c42\u51fa B \u65f6\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a feed_dict \u4f20\u9012\u7ed9 eval() \u65b9\u6cd5\u5e76\u6307\u5b9a A \u7684\u503c\u3002\u6ce8\u610f\uff0c A \u5fc5\u987b\u5177\u6709 2 \u7ea7\uff08\u5373\u5b83\u5fc5\u987b\u662f\u4e8c\u7ef4\u7684\uff09\uff0c\u5e76\u4e14\u5fc5\u987b\u6709\u4e09\u5217\uff08\u5426\u5219\u5f15\u53d1\u5f02\u5e38\uff09\uff0c\u4f46\u5b83\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u884c\u3002 >>> A = tf.placeholder(tf.float32, shape=(None, 3)) >>> B = A + 5 >>> with tf.Session() as sess: ... B_val_1 = B.eval(feed_dict={A: [[1, 2, 3]]}) ... B_val_2 = B.eval(feed_dict={A: [[4, 5, 6], [7, 8, 9]]}) ... >>> print(B_val_1) [[ 6. 7. 8.]] >>> print(B_val_2) [[ 9. 10. 11.] [ 12. 13. 14.]] \u60a8\u5b9e\u9645\u4e0a\u53ef\u4ee5\u63d0\u4f9b\u4efb\u4f55\u64cd\u4f5c\u7684\u8f93\u51fa\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5360\u4f4d\u7b26\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cTensorFlow \u4e0d\u4f1a\u5c1d\u8bd5\u6c42\u51fa\u8fd9\u4e9b\u64cd\u4f5c\uff1b\u5b83\u4f7f\u7528\u60a8\u63d0\u4f9b\u7684\u503c\u3002 \u8981\u5b9e\u73b0\u5c0f\u6279\u91cf\u6e10\u53d8\u4e0b\u964d\uff0c\u6211\u4eec\u53ea\u9700\u7a0d\u5fae\u8c03\u6574\u73b0\u6709\u7684\u4ee3\u7801\u3002 \u9996\u5148\u66f4\u6539 X \u548c Y \u7684\u5b9a\u4e49\uff0c\u4f7f\u5176\u5b9a\u4e49\u4e3a\u5360\u4f4d\u7b26\u8282\u70b9\uff1a X = tf.placeholder(tf.float32, shape=(None, n + 1), name=\"X\") y = tf.placeholder(tf.float32, shape=(None, 1), name=\"y\") \u7136\u540e\u5b9a\u4e49\u6279\u91cf\u5927\u5c0f\u5e76\u8ba1\u7b97\u603b\u6279\u6b21\u6570\uff1a batch_size = 100 n_batches = int(np.ceil(m / batch_size)) \u6700\u540e\uff0c\u5728\u6267\u884c\u9636\u6bb5\uff0c\u9010\u4e2a\u83b7\u53d6\u5c0f\u6279\u91cf\uff0c\u7136\u540e\u5728\u6c42\u51fa\u4f9d\u8d56\u4e8e X \u548c y \u7684\u503c\u7684\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u901a\u8fc7 feed_dict \u63d0\u4f9b X \u548c y \u7684\u503c\u3002 def fetch_batch(epoch, batch_index, batch_size): [...] # load the data from disk return X_batch, y_batch with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) best_theta = theta.eval() \u5728\u6c42\u51fatheta\u65f6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4f20\u9012X\u548cy\u7684\u503c\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u5b83\u4eec\u3002 MINI-BATCH \u5b8c\u6574\u4ee3\u7801 import numpy as np from sklearn.datasets import fetch_california_housing import tensorflow as tf from sklearn.preprocessing import StandardScaler housing = fetch_california_housing() m, n = housing.data.shape print(\"\u6570\u636e\u96c6:{}\u884c,{}\u5217\".format(m,n)) housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaler = StandardScaler() scaled_housing_data = scaler.fit_transform(housing.data) scaled_housing_data_plus_bias = np.c_[np.ones((m, 1)), scaled_housing_data] n_epochs = 1000 learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=(None, n + 1), name=\"X\") y = tf.placeholder(tf.float32, shape=(None, 1), name=\"y\") theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0, seed=42), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(mse) init = tf.global_variables_initializer() n_epochs = 10 batch_size = 100 n_batches = int(np.ceil(m / batch_size)) # ceil() \u65b9\u6cd5\u8fd4\u56de x \u7684\u503c\u4e0a\u9650 - \u4e0d\u5c0f\u4e8e x \u7684\u6700\u5c0f\u6574\u6570\u3002 def fetch_batch(epoch, batch_index, batch_size): know = np.random.seed(epoch * n_batches + batch_index) # not shown in the book print(\"\u6211\u662fknow:\",know) indices = np.random.randint(m, size=batch_size) # not shown X_batch = scaled_housing_data_plus_bias[indices] # not shown y_batch = housing.target.reshape(-1, 1)[indices] # not shown return X_batch, y_batch with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) best_theta = theta.eval() print(best_theta) \u4fdd\u5b58\u548c\u6062\u590d\u6a21\u578b \u4e00\u65e6\u4f60\u8bad\u7ec3\u4e86\u4f60\u7684\u6a21\u578b\uff0c\u4f60\u5e94\u8be5\u628a\u5b83\u7684\u53c2\u6570\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u56de\u5230\u5b83\uff0c\u5728\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\uff0c\u4e0e\u5176\u4ed6\u6a21\u578b\u6bd4\u8f83\uff0c\u7b49\u7b49\u3002 \u6b64\u5916\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u8bad\u7ec3\u671f\u95f4\u5b9a\u671f\u4fdd\u5b58\u68c0\u67e5\u70b9\uff0c\u4ee5\u4fbf\u5982\u679c\u60a8\u7684\u8ba1\u7b97\u673a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5d29\u6e83\uff0c\u60a8\u53ef\u4ee5\u4ece\u4e0a\u6b21\u68c0\u67e5\u70b9\u7ee7\u7eed\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u4ece\u5934\u5f00\u59cb\u3002 TensorFlow \u53ef\u4ee5\u8f7b\u677e\u4fdd\u5b58\u548c\u6062\u590d\u6a21\u578b\u3002 \u53ea\u9700\u5728\u6784\u9020\u9636\u6bb5\u7ed3\u675f\uff08\u521b\u5efa\u6240\u6709\u53d8\u91cf\u8282\u70b9\u4e4b\u540e\uff09\u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u8282\u70b9; \u90a3\u4e48\u5728\u6267\u884c\u9636\u6bb5\uff0c\u53ea\u8981\u4f60\u60f3\u4fdd\u5b58\u6a21\u578b\uff0c\u53ea\u8981\u8c03\u7528\u5b83\u7684 save() \u65b9\u6cd5: [...] theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0), name=\"theta\") [...] init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): if epoch % 100 == 0: # checkpoint every 100 epochs save_path = saver.save(sess, \"/tmp/my_model.ckpt\") sess.run(training_op) best_theta = theta.eval() save_path = saver.save(sess, \"/tmp/my_model_final.ckpt\") \u6062\u590d\u6a21\u578b\u540c\u6837\u5bb9\u6613\uff1a\u5728\u6784\u5efa\u9636\u6bb5\u7ed3\u675f\u65f6\u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u5668\uff0c\u5c31\u50cf\u4e4b\u524d\u4e00\u6837\uff0c\u4f46\u662f\u5728\u6267\u884c\u9636\u6bb5\u7684\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 init \u8282\u70b9\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u4f60\u53ef\u4ee5\u8c03\u7528 restore() \u65b9\u6cd5 \u7684\u4fdd\u5b58\u5668\u5bf9\u8c61\uff1a with tf.Session() as sess: saver.restore(sess, \"/tmp/my_model_final.ckpt\") [...] \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4fdd\u5b58\u5668\u5c06\u4ee5\u81ea\u5df1\u7684\u540d\u79f0\u4fdd\u5b58\u5e76\u8fd8\u539f\u6240\u6709\u53d8\u91cf\uff0c\u4f46\u5982\u679c\u9700\u8981\u66f4\u591a\u63a7\u5236\uff0c\u5219\u53ef\u4ee5\u6307\u5b9a\u8981\u4fdd\u5b58\u6216\u8fd8\u539f\u7684\u53d8\u91cf\u4ee5\u53ca\u8981\u4f7f\u7528\u7684\u540d\u79f0\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4fdd\u5b58\u5668\u5c06\u4ec5\u4fdd\u5b58\u6216\u6062\u590d theta \u53d8\u91cf\uff0c\u5b83\u7684\u952e\u540d\u79f0\u662f weights \uff1a saver = tf.train.Saver({\"weights\": theta}) \u5b8c\u6574\u4ee3\u7801 import numpy as np from sklearn.datasets import fetch_california_housing import tensorflow as tf from sklearn.preprocessing import StandardScaler housing = fetch_california_housing() m, n = housing.data.shape print(\"\u6570\u636e\u96c6:{}\u884c,{}\u5217\".format(m,n)) housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaler = StandardScaler() scaled_housing_data = scaler.fit_transform(housing.data) scaled_housing_data_plus_bias = np.c_[np.ones((m, 1)), scaled_housing_data] n_epochs = 1000 # not shown in the book learning_rate = 0.01 # not shown X = tf.constant(scaled_housing_data_plus_bias, dtype=tf.float32, name=\"X\") # not shown y = tf.constant(housing.target.reshape(-1, 1), dtype=tf.float32, name=\"y\") # not shown theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0, seed=42), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") # not shown error = y_pred - y # not shown mse = tf.reduce_mean(tf.square(error), name=\"mse\") # not shown optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) # not shown training_op = optimizer.minimize(mse) # not shown init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): if epoch % 100 == 0: print(\"Epoch\", epoch, \"MSE =\", mse.eval()) # not shown save_path = saver.save(sess, \"/tmp/my_model.ckpt\") sess.run(training_op) best_theta = theta.eval() save_path = saver.save(sess, \"/tmp/my_model_final.ckpt\") #\u627e\u5230tmp\u6587\u4ef6\u5939\u5c31\u627e\u5230\u6587\u4ef6\u4e86 \u4f7f\u7528 TensorBoard \u5c55\u73b0\u56fe\u5f62\u548c\u8bad\u7ec3\u66f2\u7ebf \u6240\u4ee5\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u4f7f\u7528\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u8bad\u7ec3\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u8ba1\u7b97\u56fe\u8c31\uff0c\u6211\u4eec\u6b63\u5728\u5b9a\u671f\u4fdd\u5b58\u68c0\u67e5\u70b9\u3002 \u542c\u8d77\u6765\u5f88\u590d\u6742\uff0c\u4e0d\u662f\u5417\uff1f \u7136\u800c\uff0c\u6211\u4eec\u4ecd\u7136\u4f9d\u9760 print() \u51fd\u6570\u53ef\u89c6\u5316\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u8fdb\u5ea6\u3002 \u6709\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u6cd5\uff1a\u8fdb\u5165 TensorBoard\u3002\u5982\u679c\u60a8\u63d0\u4f9b\u4e00\u4e9b\u8bad\u7ec3\u7edf\u8ba1\u4fe1\u606f\uff0c\u5b83\u5c06\u5728\u60a8\u7684\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u8fd9\u4e9b\u7edf\u8ba1\u4fe1\u606f\u7684\u826f\u597d\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\uff08\u4f8b\u5982\u5b66\u4e60\u66f2\u7ebf\uff09\u3002 \u60a8\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u56fe\u5f62\u7684\u5b9a\u4e49\uff0c\u5b83\u5c06\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u5f88\u597d\u7684\u754c\u9762\u6765\u6d4f\u89c8\u5b83\u3002 \u8fd9\u5bf9\u4e8e\u8bc6\u522b\u56fe\u4e2d\u7684\u9519\u8bef\uff0c\u627e\u5230\u74f6\u9888\u7b49\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 \u7b2c\u4e00\u6b65\u662f\u8c03\u6574\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u5c06\u56fe\u5f62\u5b9a\u4e49\u548c\u4e00\u4e9b\u8bad\u7ec3\u7edf\u8ba1\u4fe1\u606f\uff08\u4f8b\u5982\uff0c training_error \uff08MSE\uff09\uff09\u5199\u5165 TensorBoard \u5c06\u8bfb\u53d6\u7684\u65e5\u5fd7\u76ee\u5f55\u3002 \u60a8\u6bcf\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6\u90fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u65e5\u5fd7\u76ee\u5f55\uff0c\u5426\u5219 TensorBoard \u5c06\u4f1a\u5408\u5e76\u6765\u81ea\u4e0d\u540c\u8fd0\u884c\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u8fd9\u5c06\u4f1a\u6df7\u4e71\u53ef\u89c6\u5316\u3002 \u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u65e5\u5fd7\u76ee\u5f55\u540d\u79f0\u4e2d\u5305\u542b\u65f6\u95f4\u6233\u3002 \u5728\u7a0b\u5e8f\u5f00\u5934\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a from datetime import datetime now = datetime.utcnow().strftime(\"%Y%m%d%H%M%S\") root_logdir = \"tf_logs\" logdir = \"{}/run-{}/\".format(root_logdir, now) \u63a5\u4e0b\u6765\uff0c\u5728\u6784\u5efa\u9636\u6bb5\u7ed3\u675f\u65f6\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a mse_summary = tf.summary.scalar('MSE', mse) file_writer = tf.summary.FileWriter(logdir, tf.get_default_graph()) \u7b2c\u4e00\u884c\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u5c06\u6c42\u51fa MSE \u503c\u5e76\u5c06\u5176\u5199\u5165 TensorBoard \u517c\u5bb9\u7684\u4e8c\u8fdb\u5236\u65e5\u5fd7\u5b57\u7b26\u4e32\uff08\u79f0\u4e3a\u6458\u8981\uff09\u4e2d\u3002 \u7b2c\u4e8c\u884c\u521b\u5efa\u4e00\u4e2a FileWriter \uff0c\u60a8\u5c06\u7528\u5b83\u6765\u5c06\u6458\u8981\u5199\u5165\u65e5\u5fd7\u76ee\u5f55\u4e2d\u7684\u65e5\u5fd7\u6587\u4ef6\u4e2d\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u793a\u65e5\u5fd7\u76ee\u5f55\u7684\u8def\u5f84\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a tf_logs/run-20160906091959/ \uff0c\u76f8\u5bf9\u4e8e\u5f53\u524d\u76ee\u5f55\uff09\u3002 \u7b2c\u4e8c\u4e2a\uff08\u53ef\u9009\uff09\u53c2\u6570\u662f\u60a8\u60f3\u8981\u53ef\u89c6\u5316\u7684\u56fe\u5f62\u3002 \u521b\u5efa\u65f6\uff0c\u6587\u4ef6\u5199\u5165\u5668\u521b\u5efa\u65e5\u5fd7\u76ee\u5f55\uff08\u5982\u679c\u9700\u8981\uff09\uff0c\u5e76\u5c06\u5176\u5b9a\u4e49\u5728\u4e8c\u8fdb\u5236\u65e5\u5fd7\u6587\u4ef6\uff08\u79f0\u4e3a\u4e8b\u4ef6\u6587\u4ef6\uff09\u4e2d\u3002 \u63a5\u4e0b\u6765\uff0c\u60a8\u9700\u8981\u66f4\u65b0\u6267\u884c\u9636\u6bb5\uff0c\u4ee5\u4fbf\u5728\u8bad\u7ec3\u671f\u95f4\u5b9a\u671f\u6c42\u51fa mse_summary \u8282\u70b9\uff08\u4f8b\u5982\uff0c\u6bcf 10 \u4e2a\u5c0f\u6279\u91cf\uff09\u3002 \u8fd9\u5c06\u8f93\u51fa\u4e00\u4e2a\u6458\u8981\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528 file_writer \u5199\u5165\u4e8b\u4ef6\u6587\u4ef6\u3002 \u4ee5\u4e0b\u662f\u66f4\u65b0\u7684\u4ee3\u7801\uff1a [...] for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) if batch_index % 10 == 0: summary_str = mse_summary.eval(feed_dict={X: X_batch, y: y_batch}) step = epoch * n_batches + batch_index file_writer.add_summary(summary_str, step) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) [...] \u907f\u514d\u5728\u6bcf\u4e00\u4e2a\u8bad\u7ec3\u9636\u6bb5\u8bb0\u5f55\u8bad\u7ec3\u6570\u636e\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5927\u5927\u51cf\u6162\u8bad\u7ec3\u901f\u5ea6\uff08\u4ee5\u4e0a\u4ee3\u7801\u6bcf 10 \u4e2a\u5c0f\u6279\u91cf\u8bb0\u5f55\u4e00\u6b21\uff09. \u6700\u540e\uff0c\u8981\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u5173\u95ed FileWriter \uff1a file_writer.close() \u5b8c\u6574\u4ee3\u7801 import numpy as np from sklearn.datasets import fetch_california_housing import tensorflow as tf from sklearn.preprocessing import StandardScaler housing = fetch_california_housing() m, n = housing.data.shape print(\"\u6570\u636e\u96c6:{}\u884c,{}\u5217\".format(m,n)) housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaler = StandardScaler() scaled_housing_data = scaler.fit_transform(housing.data) scaled_housing_data_plus_bias = np.c_[np.ones((m, 1)), scaled_housing_data] from datetime import datetime now = datetime.utcnow().strftime(\"%Y%m%d%H%M%S\") root_logdir = r\"D://tf_logs\" logdir = \"{}/run-{}/\".format(root_logdir, now) n_epochs = 1000 learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=(None, n + 1), name=\"X\") y = tf.placeholder(tf.float32, shape=(None, 1), name=\"y\") theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0, seed=42), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(mse) init = tf.global_variables_initializer() mse_summary = tf.summary.scalar('MSE', mse) file_writer = tf.summary.FileWriter(logdir, tf.get_default_graph()) n_epochs = 10 batch_size = 100 n_batches = int(np.ceil(m / batch_size)) def fetch_batch(epoch, batch_index, batch_size): np.random.seed(epoch * n_batches + batch_index) # not shown in the book indices = np.random.randint(m, size=batch_size) # not shown X_batch = scaled_housing_data_plus_bias[indices] # not shown y_batch = housing.target.reshape(-1, 1)[indices] # not shown return X_batch, y_batch with tf.Session() as sess: # not shown in the book sess.run(init) # not shown for epoch in range(n_epochs): # not shown for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) if batch_index % 10 == 0: summary_str = mse_summary.eval(feed_dict={X: X_batch, y: y_batch}) step = epoch * n_batches + batch_index file_writer.add_summary(summary_str, step) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) best_theta = theta.eval() file_writer.close() print(best_theta) \u540d\u79f0\u4f5c\u7528\u57df \u5f53\u5904\u7406\u66f4\u590d\u6742\u7684\u6a21\u578b\uff08\u5982\u795e\u7ecf\u7f51\u7edc\uff09\u65f6\uff0c\u8be5\u56fe\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e0e\u6570\u5343\u4e2a\u8282\u70b9\u6df7\u6dc6\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u540d\u79f0\u4f5c\u7528\u57df\u6765\u5bf9\u76f8\u5173\u8282\u70b9\u8fdb\u884c\u5206\u7ec4\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u4fee\u6539\u4ee5\u524d\u7684\u4ee3\u7801\u6765\u5b9a\u4e49\u540d\u4e3a loss \u7684\u540d\u79f0\u4f5c\u7528\u57df\u5185\u7684\u9519\u8bef\u548c mse \u64cd\u4f5c\uff1a with tf.name_scope(\"loss\") as scope: error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") \u5728\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u7684\u6bcf\u4e2a op \u7684\u540d\u79f0\u73b0\u5728\u4ee5 loss/ \u4e3a\u524d\u7f00\uff1a >>> print(error.op.name) loss/sub >>> print(mse.op.name) loss/mse \u5728 TensorBoard \u4e2d\uff0c mse \u548c error \u8282\u70b9\u73b0\u5728\u51fa\u73b0\u5728 loss \u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u5d29\u6e83\uff08\u56fe 9-5\uff09\u3002 \u5b8c\u6574\u4ee3\u7801 import numpy as np from sklearn.datasets import fetch_california_housing import tensorflow as tf from sklearn.preprocessing import StandardScaler housing = fetch_california_housing() m, n = housing.data.shape print(\"\u6570\u636e\u96c6:{}\u884c,{}\u5217\".format(m,n)) housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaler = StandardScaler() scaled_housing_data = scaler.fit_transform(housing.data) scaled_housing_data_plus_bias = np.c_[np.ones((m, 1)), scaled_housing_data] from datetime import datetime now = datetime.utcnow().strftime(\"%Y%m%d%H%M%S\") root_logdir = r\"D://tf_logs\" logdir = \"{}/run-{}/\".format(root_logdir, now) n_epochs = 1000 learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=(None, n + 1), name=\"X\") y = tf.placeholder(tf.float32, shape=(None, 1), name=\"y\") theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0, seed=42), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") def fetch_batch(epoch, batch_index, batch_size): np.random.seed(epoch * n_batches + batch_index) # not shown in the book indices = np.random.randint(m, size=batch_size) # not shown X_batch = scaled_housing_data_plus_bias[indices] # not shown y_batch = housing.target.reshape(-1, 1)[indices] # not shown return X_batch, y_batch with tf.name_scope(\"loss\") as scope: error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(mse) init = tf.global_variables_initializer() mse_summary = tf.summary.scalar('MSE', mse) file_writer = tf.summary.FileWriter(logdir, tf.get_default_graph()) n_epochs = 10 batch_size = 100 n_batches = int(np.ceil(m / batch_size)) with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) if batch_index % 10 == 0: summary_str = mse_summary.eval(feed_dict={X: X_batch, y: y_batch}) step = epoch * n_batches + batch_index file_writer.add_summary(summary_str, step) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) best_theta = theta.eval() file_writer.flush() file_writer.close() print(\"Best theta:\") print(best_theta) \u6a21\u5757\u6027 \u5047\u8bbe\u60a8\u8981\u521b\u5efa\u4e00\u4e2a\u56fe\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u4e24\u4e2a\u6574\u6d41\u7ebf\u6027\u5355\u5143\uff08ReLU\uff09\u7684\u8f93\u51fa\u503c\u76f8\u52a0\u3002 ReLU \u8ba1\u7b97\u4e00\u4e2a\u8f93\u5165\u503c\u7684\u5bf9\u5e94\u7ebf\u6027\u51fd\u6570\u8f93\u51fa\u503c\uff0c\u5982\u679c\u4e3a\u6b63\uff0c\u5219\u8f93\u51fa\u8be5\u7ed3\u503c\uff0c\u5426\u5219\u4e3a 0\uff0c\u5982\u7b49\u5f0f 9-1 \u6240\u793a\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u505a\u8fd9\u4e2a\u5de5\u4f5c\uff0c\u4f46\u662f\u5b83\u662f\u76f8\u5f53\u91cd\u590d\u7684\uff1a n_features = 3 X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") w1 = tf.Variable(tf.random_normal((n_features, 1)), name=\"weights1\") w2 = tf.Variable(tf.random_normal((n_features, 1)), name=\"weights2\") b1 = tf.Variable(0.0, name=\"bias1\") b2 = tf.Variable(0.0, name=\"bias2\") z1 = tf.add(tf.matmul(X, w1), b1, name=\"z1\") z2 = tf.add(tf.matmul(X, w2), b2, name=\"z2\") relu1 = tf.maximum(z1, 0., name=\"relu1\") relu2 = tf.maximum(z1, 0., name=\"relu2\") output = tf.add(relu1, relu2, name=\"output\") \u8fd9\u6837\u7684\u91cd\u590d\u4ee3\u7801\u5f88\u96be\u7ef4\u62a4\uff0c\u5bb9\u6613\u51fa\u9519\uff08\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5305\u542b\u4e86\u4e00\u4e2a\u526a\u8d34\u9519\u8bef\uff0c\u4f60\u53d1\u73b0\u4e86\u5417\uff1f\uff09 \u5982\u679c\u4f60\u60f3\u6dfb\u52a0\u66f4\u591a\u7684 ReLU\uff0c\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002 \u5e78\u8fd0\u7684\u662f\uff0cTensorFlow \u53ef\u4ee5\u8ba9\u60a8\u4fdd\u6301 DRY\uff08\u4e0d\u8981\u91cd\u590d\u81ea\u5df1\uff09\uff1a\u53ea\u9700\u521b\u5efa\u4e00\u4e2a\u529f\u80fd\u6765\u6784\u5efa ReLU\u3002 \u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e94\u4e2a ReLU \u5e76\u8f93\u51fa\u5176\u603b\u548c\uff08\u6ce8\u610f\uff0c add_n() \u521b\u5efa\u4e00\u4e2a\u8ba1\u7b97\u5f20\u91cf\u5217\u8868\u4e4b\u548c\u7684\u64cd\u4f5c\uff09\uff1a def relu(X): w_shape = (int(X.get_shape()[1]), 1) w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") b = tf.Variable(0.0, name=\"bias\") z = tf.add(tf.matmul(X, w), b, name=\"z\") return tf.maximum(z, 0., name=\"relu\") n_features = 3 X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") relus = [relu(X) for i in range(5)] output = tf.add_n(relus, name=\"output\") \u8bf7\u6ce8\u610f\uff0c\u521b\u5efa\u8282\u70b9\u65f6\uff0cTensorFlow \u5c06\u68c0\u67e5\u5176\u540d\u79f0\u662f\u5426\u5df2\u5b58\u5728\uff0c\u5982\u679c\u5b83\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4f1a\u9644\u52a0\u4e00\u4e2a\u4e0b\u5212\u7ebf\uff0c\u540e\u8ddf\u4e00\u4e2a\u7d22\u5f15\uff0c\u4ee5\u4f7f\u8be5\u540d\u79f0\u662f\u552f\u4e00\u7684\u3002 \u56e0\u6b64\uff0c\u7b2c\u4e00\u4e2a ReLU \u5305\u542b\u540d\u4e3a weights \uff0c bias \uff0c z \u548c relu \u7684\u8282\u70b9\uff08\u52a0\u4e0a\u5176\u4ed6\u9ed8\u8ba4\u540d\u79f0\u7684\u66f4\u591a\u8282\u70b9\uff0c\u5982 MatMul \uff09; \u7b2c\u4e8c\u4e2a ReLU \u5305\u542b\u540d\u4e3a weights_1 \uff0c bias_1 \u7b49\u8282\u70b9\u7684\u8282\u70b9; \u7b2c\u4e09\u4e2a ReLU \u5305\u542b\u540d\u4e3a weights_2 \uff0c bias_2 \u7684\u8282\u70b9\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 TensorBoard \u8bc6\u522b\u8fd9\u6837\u7684\u7cfb\u5217\u5e76\u5c06\u5b83\u4eec\u6298\u53e0\u5728\u4e00\u8d77\u4ee5\u51cf\u5c11\u6df7\u4e71\uff08\u5982\u56fe 9-6 \u6240\u793a\uff09 \u4f7f\u7528\u540d\u79f0\u4f5c\u7528\u57df\uff0c\u60a8\u53ef\u4ee5\u4f7f\u56fe\u5f62\u66f4\u6e05\u6670\u3002 \u7b80\u5355\u5730\u5c06 relu() \u51fd\u6570\u7684\u6240\u6709\u5185\u5bb9\u79fb\u52a8\u5230\u540d\u79f0\u4f5c\u7528\u57df\u5185\u3002 \u56fe 9-7 \u663e\u793a\u4e86\u7ed3\u679c\u56fe\u3002 \u8bf7\u6ce8\u610f\uff0cTensorFlow \u8fd8\u901a\u8fc7\u9644\u52a0 _1 \uff0c _2 \u7b49\u6765\u63d0\u4f9b\u540d\u79f0\u4f5c\u7528\u57df\u7684\u552f\u4e00\u540d\u79f0\u3002 def relu(X): with tf.name_scope(\"relu\"): w_shape = (int(X.get_shape()[1]), 1) # not shown in the book w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, 0., name=\"max\") # not shown \u5171\u4eab\u53d8\u91cf \u5982\u679c\u8981\u5728\u56fe\u5f62\u7684\u5404\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u5171\u4eab\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u9009\u9879\u662f\u9996\u5148\u521b\u5efa\u5b83\uff0c\u7136\u540e\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u9700\u8981\u5b83\u7684\u51fd\u6570\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u8981\u4f7f\u7528\u6240\u6709 ReLU \u7684\u5171\u4eab\u9608\u503c\u53d8\u91cf\u6765\u63a7\u5236 ReLU \u9608\u503c\uff08\u5f53\u524d\u786c\u7f16\u7801\u4e3a 0\uff09\u3002 \u60a8\u53ef\u4ee5\u5148\u521b\u5efa\u8be5\u53d8\u91cf\uff0c\u7136\u540e\u5c06\u5176\u4f20\u9012\u7ed9 relu() \u51fd\u6570\uff1a reset_graph() def relu(X, threshold): with tf.name_scope(\"relu\"): w_shape = (int(X.get_shape()[1]), 1) # not shown in the book w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, threshold, name=\"max\") threshold = tf.Variable(0.0, name=\"threshold\") X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") relus = [relu(X, threshold) for i in range(5)] output = tf.add_n(relus, name=\"output\") \u8fd9\u5f88\u597d:\u73b0\u5728\u60a8\u53ef\u4ee5\u4f7f\u7528\u9608\u503c\u53d8\u91cf\u6765\u63a7\u5236\u6240\u6709 ReLU \u7684\u9608\u503c\u3002\u4f46\u662f\uff0c\u5982\u679c\u6709\u8bb8\u591a\u5171\u4eab\u53c2\u6570\uff0c\u6bd4\u5982\u8fd9\u4e00\u9879\uff0c\u90a3\u4e48\u5fc5\u987b\u4e00\u76f4\u5c06\u5b83\u4eec\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u8fd9\u5c06\u662f\u975e\u5e38\u75db\u82e6\u7684\u3002\u8bb8\u591a\u4eba\u521b\u5efa\u4e86\u4e00\u4e2a\u5305\u542b\u6a21\u578b\u4e2d\u6240\u6709\u53d8\u91cf\u7684 Python \u5b57\u5178\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9\u6bcf\u4e2a\u51fd\u6570\u3002\u53e6\u4e00\u4e9b\u5219\u4e3a\u6bcf\u4e2a\u6a21\u5757\u521b\u5efa\u4e00\u4e2a\u7c7b\uff08\u4f8b\u5982\uff1a\u4e00\u4e2a\u4f7f\u7528\u7c7b\u53d8\u91cf\u6765\u5904\u7406\u5171\u4eab\u53c2\u6570\u7684 ReLU \u7c7b\uff09\u3002\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u5c06\u5171\u4eab\u53d8\u91cf\u8bbe\u7f6e\u4e3a relu() \u51fd\u6570\u7684\u5c5e\u6027\uff0c\u5982\u4e0b\u6240\u793a: def relu(X): with tf.name_scope(\"relu\"): if not hasattr(relu, \"threshold\"): relu.threshold = tf.Variable(0.0, name=\"threshold\") w_shape = int(X.get_shape()[1]), 1 # not shown in the book w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, relu.threshold, name=\"max\") TensorFlow \u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u9009\u9879\uff0c\u8fd9\u5c06\u63d0\u4f9b\u6bd4\u4ee5\u524d\u7684\u89e3\u51b3\u65b9\u6848\u7a0d\u5fae\u66f4\u6e05\u6d01\u548c\u66f4\u6a21\u5757\u5316\u7684\u4ee3\u7801\u3002\u9996\u5148\u8981\u660e\u767d\u4e00\u70b9\uff0c\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u5f88\u5201\u94bb\u96be\u61c2\uff0c\u4f46\u662f\u7531\u4e8e\u5b83\u5728 TensorFlow \u4e2d\u4f7f\u7528\u4e86\u5f88\u591a\uff0c\u6240\u4ee5\u503c\u5f97\u6211\u4eec\u53bb\u6df1\u5165\u7ec6\u8282\u3002 \u8fd9\u4e2a\u60f3\u6cd5\u662f\u4f7f\u7528 get_variable() \u51fd\u6570\u6765\u521b\u5efa\u5171\u4eab\u53d8\u91cf\uff0c\u5982\u679c\u5b83\u8fd8\u4e0d\u5b58\u5728\uff0c\u6216\u8005\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u590d\u7528\u5b83\u3002 \u6240\u9700\u7684\u884c\u4e3a\uff08\u521b\u5efa\u6216\u590d\u7528\uff09\u7531\u5f53\u524d variable_scope() \u7684\u5c5e\u6027\u63a7\u5236\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a relu/threshold \u7684\u53d8\u91cf\uff08\u4f5c\u4e3a\u6807\u91cf\uff0c\u56e0\u4e3a shape = () \uff0c\u5e76\u4f7f\u7528 0.0 \u4f5c\u4e3a\u521d\u59cb\u503c\uff09\uff1a with tf.variable_scope(\"relu\"): threshold = tf.get_variable(\"threshold\", shape=(), initializer=tf.constant_initializer(0.0)) \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u53d8\u91cf\u5df2\u7ecf\u901a\u8fc7\u8f83\u65e9\u7684 get_variable() \u8c03\u7528\u521b\u5efa\uff0c\u5219\u6b64\u4ee3\u7801\u5c06\u5f15\u53d1\u5f02\u5e38\u3002 \u8fd9\u79cd\u884c\u4e3a\u53ef\u4ee5\u9632\u6b62\u9519\u8bef\u5730\u590d\u7528\u53d8\u91cf\u3002\u5982\u679c\u8981\u590d\u7528\u53d8\u91cf\uff0c\u5219\u9700\u8981\u901a\u8fc7\u5c06\u53d8\u91cf scope \u7684\u590d\u7528\u5c5e\u6027\u8bbe\u7f6e\u4e3a True \u6765\u660e\u786e\u8bf4\u660e\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u4e0d\u5fc5\u6307\u5b9a\u5f62\u72b6\u6216\u521d\u59cb\u503c\uff09\uff1a with tf.variable_scope(\"relu\", reuse=True): threshold = tf.get_variable(\"threshold\") \u8be5\u4ee3\u7801\u5c06\u83b7\u53d6\u73b0\u6709\u7684 relu/threshold \u53d8\u91cf\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u5f15\u53d1\u5f02\u5e38\uff08\u5982\u679c\u6ca1\u6709\u4f7f\u7528 get_variable() \u521b\u5efa\uff09\u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 scope \u7684 reuse_variables() \u65b9\u6cd5\u5c06\u590d\u7528\u5c5e\u6027\u8bbe\u7f6e\u4e3a true \uff1a with tf.variable_scope(\"relu\") as scope: scope.reuse_variables() threshold = tf.get_variable(\"threshold\") \u4e00\u65e6\u91cd\u65b0\u4f7f\u7528\u8bbe\u7f6e\u4e3a True \uff0c\u5b83\u5c06\u4e0d\u80fd\u5728\u5757\u5185\u8bbe\u7f6e\u4e3a False \u3002 \u800c\u4e14\uff0c\u5982\u679c\u5728\u5176\u4e2d\u5b9a\u4e49\u5176\u4ed6\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u5b83\u4eec\u5c06\u81ea\u52a8\u7ee7\u627f reuse = True \u3002 \u6700\u540e\uff0c\u53ea\u6709\u901a\u8fc7 get_variable() \u521b\u5efa\u7684\u53d8\u91cf\u624d\u53ef\u4ee5\u8fd9\u6837\u590d\u7528. \u73b0\u5728\uff0c\u60a8\u62e5\u6709\u6240\u6709\u9700\u8981\u7684\u90e8\u5206\uff0c\u4f7f relu() \u51fd\u6570\u8bbf\u95ee\u9608\u503c\u53d8\u91cf\uff0c\u800c\u4e0d\u5fc5\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff1a def relu(X): with tf.variable_scope(\"relu\", reuse=True): threshold = tf.get_variable(\"threshold\") w_shape = int(X.get_shape()[1]), 1 # not shown w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, threshold, name=\"max\") X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") with tf.variable_scope(\"relu\"): threshold = tf.get_variable(\"threshold\", shape=(), initializer=tf.constant_initializer(0.0)) relus = [relu(X) for relu_index in range(5)] output = tf.add_n(relus, name=\"output\") \u8be5\u4ee3\u7801\u9996\u5148\u5b9a\u4e49 relu() \u51fd\u6570\uff0c\u7136\u540e\u521b\u5efa relu/threshold \u53d8\u91cf\uff08\u4f5c\u4e3a\u6807\u91cf\uff0c\u7a0d\u540e\u5c06\u88ab\u521d\u59cb\u5316\u4e3a 0.0\uff09\uff0c\u5e76\u901a\u8fc7\u8c03\u7528 relu() \u51fd\u6570\u6784\u5efa\u4e94\u4e2aReLU\u3002 relu() \u51fd\u6570\u590d\u7528 relu/threshold \u53d8\u91cf\uff0c\u5e76\u521b\u5efa\u5176\u4ed6 ReLU \u8282\u70b9\u3002 \u4f7f\u7528 get_variable() \u521b\u5efa\u7684\u53d8\u91cf\u59cb\u7ec8\u4ee5\u5176 variable_scope \u7684\u540d\u79f0\u4f5c\u4e3a\u524d\u7f00\u547d\u540d\uff08\u4f8b\u5982\uff0c relu/threshold \uff09\uff0c\u4f46\u5bf9\u4e8e\u6240\u6709\u5176\u4ed6\u8282\u70b9\uff08\u5305\u62ec\u4f7f\u7528 tf.Variable() \u521b\u5efa\u7684\u53d8\u91cf\uff09\uff0c\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u884c\u4e3a\u5c31\u50cf\u4e00\u4e2a\u65b0\u540d\u79f0\u7684\u4f5c\u7528\u57df\u3002 \u7279\u522b\u662f\uff0c\u5982\u679c\u5df2\u7ecf\u521b\u5efa\u4e86\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u540d\u79f0\u4f5c\u7528\u57df\uff0c\u5219\u6dfb\u52a0\u540e\u7f00\u4ee5\u4f7f\u8be5\u540d\u79f0\u662f\u552f\u4e00\u7684\u3002 \u4f8b\u5982\uff0c\u5728\u524d\u9762\u7684\u4ee3\u7801\u4e2d\u521b\u5efa\u7684\u6240\u6709\u8282\u70b9\uff08\u9608\u503c\u53d8\u91cf\u9664\u5916\uff09\u7684\u540d\u79f0\u524d\u7f00\u4e3a relu_1/ \u5230 relu_5/ \uff0c\u5982\u56fe 9-8 \u6240\u793a\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u5fc5\u987b\u5728 relu() \u51fd\u6570\u4e4b\u5916\u5b9a\u4e49\u9608\u503c\u53d8\u91cf\uff0c\u5176\u4e2d ReLU \u4ee3\u7801\u7684\u5176\u4f59\u90e8\u5206\u90fd\u9a7b\u7559\u5728\u5176\u4e2d\u3002 \u8981\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u5728 relu() \u51fd\u6570\u4e2d\u521b\u5efa\u9608\u503c\u53d8\u91cf\uff0c\u7136\u540e\u5728\u540e\u7eed\u8c03\u7528\u4e2d\u91cd\u65b0\u4f7f\u7528\u3002 \u73b0\u5728\uff0c relu() \u51fd\u6570\u4e0d\u5fc5\u62c5\u5fc3\u540d\u79f0\u4f5c\u7528\u57df\u6216\u53d8\u91cf\u5171\u4eab\uff1a\u5b83\u53ea\u662f\u8c03\u7528 get_variable() \uff0c\u5b83\u5c06\u521b\u5efa\u6216\u590d\u7528\u9608\u503c\u53d8\u91cf\uff08\u5b83\u4e0d\u9700\u8981\u77e5\u9053\u662f\u54ea\u79cd\u60c5\u51b5\uff09\u3002 \u5176\u4f59\u7684\u4ee3\u7801\u8c03\u7528 relu() \u4e94\u6b21\uff0c\u786e\u4fdd\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u8bbe\u7f6e reuse = False \uff0c\u800c\u5bf9\u4e8e\u5176\u4ed6\u8c03\u7528\u6765\u8bf4\uff0c reuse = True \u3002 def relu(X): threshold = tf.get_variable(\"threshold\", shape=(), initializer=tf.constant_initializer(0.0)) w_shape = (int(X.get_shape()[1]), 1) # not shown in the book w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, threshold, name=\"max\") X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") relus = [] for relu_index in range(5): with tf.variable_scope(\"relu\", reuse=(relu_index >= 1)) as scope: relus.append(relu(X)) output = tf.add_n(relus, name=\"output\") \u751f\u6210\u7684\u56fe\u5f62\u4e0e\u4e4b\u524d\u7565\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a\u5171\u4eab\u53d8\u91cf\u5b58\u5728\u4e8e\u7b2c\u4e00\u4e2a ReLU \u4e2d\uff08\u89c1\u56fe 9-9\uff09\u3002 TensorFlow \u7684\u8fd9\u4e2a\u4ecb\u7ecd\u5230\u6b64\u7ed3\u675f\u3002 \u6211\u4eec\u5c06\u5728\u4ee5\u4e0b\u7ae0\u8282\u4e2d\u8ba8\u8bba\u66f4\u591a\u9ad8\u7ea7\u8bfe\u9898\uff0c\u7279\u522b\u662f\u4e0e\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u548c\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\u76f8\u5173\u7684\u8bb8\u591a\u64cd\u4f5c\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u961f\u5217\uff0c\u591a\u4e2a GPU \u4ee5\u53ca\u5982\u4f55\u5c06 TensorFlow \u6269\u5c55\u5230\u591a\u53f0\u670d\u52a1\u5668\u3002","title":"9.\u542f\u52a8\u5e76\u8fd0\u884c_TensorFlow"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#tensorflow","text":"TensorFlow \u662f\u4e00\u6b3e\u7528\u4e8e\u6570\u503c\u8ba1\u7b97\u7684\u5f3a\u5927\u7684\u5f00\u6e90\u8f6f\u4ef6\u5e93\uff0c\u7279\u522b\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u673a\u5668\u5b66\u4e60\u7684\u5fae\u8c03\u3002 \u5b83\u7684\u57fa\u672c\u539f\u7406\u5f88\u7b80\u5355\uff1a\u9996\u5148\u5728 Python \u4e2d\u5b9a\u4e49\u8981\u6267\u884c\u7684\u8ba1\u7b97\u56fe\uff08\u4f8b\u5982\u56fe 9-1\uff09\uff0c\u7136\u540e TensorFlow \u4f7f\u7528\u8be5\u56fe\u5e76\u4f7f\u7528\u4f18\u5316\u7684 C++ \u4ee3\u7801\u9ad8\u6548\u8fd0\u884c\u8be5\u56fe\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0cTensorflow \u53ef\u4ee5\u5c06\u56fe\u5206\u89e3\u4e3a\u591a\u4e2a\u5757\u5e76\u5728\u591a\u4e2a CPU \u6216 GPU \u4e0a\u5e76\u884c\u8fd0\u884c\uff08\u5982\u56fe 9-2 \u6240\u793a\uff09\u3002 TensorFlow \u8fd8\u652f\u6301\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728\u6570\u767e\u53f0\u670d\u52a1\u5668\u4e0a\u5206\u5272\u8ba1\u7b97\uff0c\u4ece\u800c\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u5728\u5e9e\u5927\u7684\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u5e9e\u5927\u7684\u795e\u7ecf\u7f51\u7edc\uff08\u8bf7\u53c2\u9605\u7b2c 12 \u7ae0\uff09\u3002 TensorFlow \u53ef\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u62e5\u6709\u6570\u767e\u4e07\u4e2a\u53c2\u6570\u7684\u7f51\u7edc\uff0c\u8bad\u7ec3\u96c6\u7531\u6570\u5341\u4ebf\u4e2a\u5177\u6709\u6570\u767e\u4e07\u4e2a\u7279\u5f81\u7684\u5b9e\u4f8b\u7ec4\u6210\u3002 \u8fd9\u5e94\u8be5\u4e0d\u4f1a\u8ba9\u60a8\u5403\u60ca\uff0c\u56e0\u4e3a TensorFlow \u662f \u7531Google \u5927\u8111\u56e2\u961f\u5f00\u53d1\u7684\uff0c\u5b83\u652f\u6301\u8c37\u6b4c\u7684\u5927\u91cf\u670d\u52a1\uff0c\u4f8b\u5982 Google Cloud Speech\uff0cGoogle Photos \u548c Google Search\u3002 \u5f53 TensorFlow \u4e8e 2015 \u5e74 11 \u6708\u5f00\u653e\u6e90\u4ee3\u7801\u65f6\uff0c\u5df2\u6709\u8bb8\u591a\u6df1\u5ea6\u5b66\u4e60\u7684\u6d41\u884c\u5f00\u6e90\u5e93\uff08\u8868 9-1 \u5217\u51fa\u4e86\u4e00\u4e9b\uff09\uff0c\u516c\u5e73\u5730\u8bf4\uff0c\u5927\u90e8\u5206 TensorFlow \u7684\u529f\u80fd\u5df2\u7ecf\u5b58\u5728\u4e8e\u4e00\u4e2a\u5e93\u6216\u53e6\u4e00\u4e2a\u5e93\u4e2d\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0cTensorFlow \u7684\u6574\u6d01\u8bbe\u8ba1\uff0c\u53ef\u6269\u5c55\u6027\uff0c\u7075\u6d3b\u6027\u548c\u51fa\u8272\u7684\u6587\u6863\uff08\u66f4\u4e0d\u7528\u8bf4\u8c37\u6b4c\u7684\u540d\u5b57\uff09\u8fc5\u901f\u5c06\u5176\u63a8\u5411\u4e86\u699c\u9996\u3002 \u7b80\u800c\u8a00\u4e4b\uff0cTensorFlow \u7684\u8bbe\u8ba1\u7075\u6d3b\u6027\uff0c\u53ef\u6269\u5c55\u6027\u548c\u751f\u4ea7\u5c31\u7eea\u6027\uff0c\u73b0\u6709\u6846\u67b6\u53ef\u4ee5\u8bf4\u53ea\u6709\u5176\u4e2d\u4e09\u79cd\u53ef\u7528\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b TensorFlow \u7684\u4eae\u70b9\uff1a \u5b83\u4e0d\u4ec5\u5728 Windows\uff0cLinux \u548c MacOS \u4e0a\u8fd0\u884c\uff0c\u800c\u4e14\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u8fd0\u884c\uff0c\u5305\u62ec iOS \u548c Android\u3002 \u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 Python API\uff0c\u540d\u4e3a TF.Learn2\uff08 tensorflow.con trib.learn \uff09\uff0c\u4e0e Scikit-Learn \u517c\u5bb9\u3002\u6b63\u5982\u4f60\u5c06\u4f1a\u770b\u5230\u7684\uff0c\u4f60\u53ef\u4ee5\u7528\u51e0\u884c\u4ee3\u7801\u6765\u8bad\u7ec3\u4e0d\u540c\u7c7b\u578b\u7684\u795e\u7ecf\u7f51\u7edc\u3002\u4e4b\u524d\u662f\u4e00\u4e2a\u540d\u4e3a Scikit Flow\uff08\u6216 Skow\uff09\u7684\u72ec\u7acb\u9879\u76ee\u3002 \u5b83\u8fd8\u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u7b80\u5355\u7684\u79f0\u4e3a TF-slim\uff08 tensorflow.contrib.slim \uff09\u7684 API \u6765\u7b80\u5316\u6784\u5efa\uff0c\u8bad\u7ec3\u548c\u6c42\u51fa\u795e\u7ecf\u7f51\u7edc\u3002 \u5176\u4ed6\u51e0\u4e2a\u9ad8\u7ea7 API \u5df2\u7ecf\u5728 TensorFlow \u4e4b\u4e0a\u72ec\u7acb\u6784\u5efa\uff0c\u5982 Keras \u6216 Pretty Tensor \u3002 \u5b83\u7684\u4e3b\u8981 Python API \u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u7075\u6d3b\u6027\uff08\u4ee5\u66f4\u9ad8\u590d\u6742\u5ea6\u4e3a\u4ee3\u4ef7\uff09\u6765\u521b\u5efa\u5404\u79cd\u8ba1\u7b97\uff0c\u5305\u62ec\u4efb\u4f55\u4f60\u80fd\u60f3\u5230\u7684\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u3002 \u5b83\u5305\u62ec\u8bb8\u591a ML \u64cd\u4f5c\u7684\u9ad8\u6548 C ++ \u5b9e\u73b0\uff0c\u7279\u522b\u662f\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\u6240\u9700\u7684 C++ \u5b9e\u73b0\u3002\u8fd8\u6709\u4e00\u4e2a C++ API \u6765\u5b9a\u4e49\u60a8\u81ea\u5df1\u7684\u9ad8\u6027\u80fd\u64cd\u4f5c\u3002 \u5b83\u63d0\u4f9b\u4e86\u51e0\u4e2a\u9ad8\u7ea7\u4f18\u5316\u8282\u70b9\u6765\u641c\u7d22\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u7684\u53c2\u6570\u3002\u7531\u4e8e TensorFlow \u81ea\u52a8\u5904\u7406\u8ba1\u7b97\u60a8\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u68af\u5ea6\uff0c\u56e0\u6b64\u8fd9\u4e9b\u975e\u5e38\u6613\u4e8e\u4f7f\u7528\u3002\u8fd9\u79f0\u4e3a\u81ea\u52a8\u5206\u89e3\uff08\u6216 autodi \uff09\u3002 \u5b83\u8fd8\u9644\u5e26\u4e00\u4e2a\u540d\u4e3a TensorBoard \u7684\u5f3a\u5927\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u53ef\u8ba9\u60a8\u6d4f\u89c8\u8ba1\u7b97\u56fe\u8868\uff0c\u67e5\u770b\u5b66\u4e60\u66f2\u7ebf\u7b49\u3002 Google \u8fd8\u63a8\u51fa\u4e86\u4e91\u670d\u52a1\u6765\u8fd0\u884c TensorFlow \u8868\u3002 \u6700\u540e\uff0c\u5b83\u62e5\u6709\u4e00\u652f\u5145\u6ee1\u70ed\u60c5\u548c\u4e50\u4e8e\u52a9\u4eba\u7684\u5f00\u53d1\u56e2\u961f\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4e0d\u65ad\u6210\u957f\u7684\u793e\u533a\uff0c\u81f4\u529b\u4e8e\u6539\u5584\u5b83\u3002\u5b83\u662f GitHub \u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u5f00\u6e90\u9879\u76ee\u4e4b\u4e00\uff0c\u5e76\u4e14\u8d8a\u6765\u8d8a\u591a\u7684\u4f18\u79c0\u9879\u76ee\u6b63\u5728\u6784\u5efa\u4e4b\u4e0a\uff08\u4f8b\u5982\uff0c\u67e5\u770b https://www.tensorflow.org/ \u6216 https://github.com/jtoy/awesome-tensorflow \uff09\u3002 \u8981\u95ee\u6280\u672f\u95ee\u9898\uff0c\u60a8\u5e94\u8be5\u4f7f\u7528 http://stackoverflow.com/ \u5e76\u7528 tensorflow \u6807\u8bb0\u60a8\u7684\u95ee\u9898\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7 GitHub \u63d0\u4ea4\u9519\u8bef\u548c\u529f\u80fd\u8bf7\u6c42\u3002\u6709\u5173\u4e00\u822c\u8ba8\u8bba\uff0c\u8bf7\u52a0\u5165 Google \u5c0f\u7ec4 \u3002 \u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd TensorFlow \u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4ece\u5b89\u88c5\u5230\u521b\u5efa\uff0c\u8fd0\u884c\uff0c\u4fdd\u5b58\u548c\u53ef\u89c6\u5316\u7b80\u5355\u7684\u8ba1\u7b97\u56fe\u3002 \u5728\u6784\u5efa\u7b2c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u4e4b\u524d\u638c\u63e1\u8fd9\u4e9b\u57fa\u7840\u77e5\u8bc6\u5f88\u91cd\u8981\uff08\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002","title":"\u4e5d\u3001\u542f\u52a8\u5e76\u8fd0\u884c TensorFlow"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_1","text":"\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01\u5047\u8bbe\u60a8\u6309\u7167\u7b2c 2 \u7ae0\u4e2d\u7684\u5b89\u88c5\u8bf4\u660e\u5b89\u88c5\u4e86 Jupyter \u548c Scikit-Learn\uff0c\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528 pip \u6765\u5b89\u88c5 TensorFlow\u3002 \u5982\u679c\u4f60\u4f7f\u7528 virtualenv \u521b\u5efa\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u73af\u5883\uff0c\u4f60\u9996\u5148\u9700\u8981\u6fc0\u6d3b\u5b83\uff1a $ cd $ML_PATH #Your ML working directory(e.g., $HOME/ml) $ source env/bin/activate \u4e0b\u4e00\u6b65\uff0c\u5b89\u88c5 Tensorflow\u3002 $ pip3 install --upgrade tensorflow \u5bf9\u4e8e GPU \u652f\u6301\uff0c\u4f60\u9700\u8981\u5b89\u88c5 tensorflow-gpu \u800c\u4e0d\u662f tensorflow \u3002\u5177\u4f53\u8bf7\u53c2\u89c1 12 \u7ae0\u5185\u5bb9\u3002 \u4e3a\u4e86\u6d4b\u8bd5\u60a8\u7684\u5b89\u88c5\uff0c\u8bf7\u8f93\u5165\u4e00\u4e0b\u547d\u4ee4\u3002\u5176\u8f93\u51fa\u5e94\u8be5\u662f\u60a8\u5b89\u88c5\u7684 Tensorflow \u7684\u7248\u672c\u53f7\u3002 $ python -c 'import tensorflow; print(tensorflow.__version__)' 1.0.0","title":"\u5b89\u88c5"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_2","text":"import tensorflow as tf x = tf.Variable(3, name=\"x\") y = tf.Variable(4, name=\"y\") f = x*x*y + y + 2 \u8fd9\u5c31\u662f\u5b83\u7684\u4e00\u5207\uff01 \u6700\u91cd\u8981\u7684\u662f\u8981\u77e5\u9053\u8fd9\u4e2a\u4ee3\u7801\u5b9e\u9645\u4e0a\u5e76\u4e0d\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\uff0c\u5373\u4f7f\u5b83\u770b\u8d77\u6765\u50cf(\u5c24\u5176\u662f\u6700\u540e\u4e00\u884c\uff09\u3002 \u5b83\u53ea\u662f\u521b\u5efa\u4e00\u4e2a\u8ba1\u7b97\u56fe\u8c31\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u53d8\u91cf\u90fd\u6ca1\u6709\u521d\u59cb\u5316.\u8981\u6c42\u51fa\u6b64\u56fe\uff0c\u60a8\u9700\u8981\u6253\u5f00\u4e00\u4e2a TensorFlow \u4f1a\u8bdd\u5e76\u4f7f\u7528\u5b83\u521d\u59cb\u5316\u53d8\u91cf\u5e76\u6c42\u51fa f \u3002TensorFlow \u4f1a\u8bdd\u8d1f\u8d23\u5904\u7406\u5728\u8bf8\u5982 CPU \u548c GPU \u4e4b\u7c7b\u7684\u8bbe\u5907\u4e0a\u7684\u64cd\u4f5c\u5e76\u8fd0\u884c\u5b83\u4eec\uff0c\u5e76\u4e14\u5b83\u4fdd\u7559\u6240\u6709\u53d8\u91cf\u503c\u3002\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd\uff0c\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u5e76\u6c42\u51fa f \uff0c\u7136\u540e\u5173\u95ed\u4f1a\u8bdd\uff08\u91ca\u653e\u8d44\u6e90\uff09\uff1a # way1 sess = tf.Session() sess.run(x.initializer) sess.run(y.initializer) result = sess.run(f) print(result) sess.close() \u4e0d\u5f97\u4e0d\u6bcf\u6b21\u91cd\u590dsess.run() \u6709\u70b9\u9ebb\u70e6\uff0c\u4f46\u5e78\u8fd0\u7684\u662f\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u6cd5\uff1a # way2 with tf.Session() as sess: x.initializer.run() y.initializer.run() result = f.eval() print(result) \u5728 with \u5757\u4e2d\uff0c\u4f1a\u8bdd\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u4f1a\u8bdd\u3002 \u8c03\u7528 x.initializer.run() \u7b49\u6548\u4e8e\u8c03\u7528 tf.get_default_session().run(x.initial) \uff0c f.eval() \u7b49\u6548\u4e8e\u8c03\u7528 tf.get_default_session().run(f) \u3002 \u8fd9\u4f7f\u5f97\u4ee3\u7801\u66f4\u5bb9\u6613\u9605\u8bfb\u3002 \u6b64\u5916\uff0c\u4f1a\u8bdd\u5728\u5757\u7684\u672b\u5c3e\u81ea\u52a8\u5173\u95ed\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 global_variables_initializer() \u51fd\u6570\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u521d\u59cb\u5316\u6bcf\u4e2a\u53d8\u91cf\u3002 \u8bf7\u6ce8\u610f\uff0c\u5b83\u5b9e\u9645\u4e0a\u6ca1\u6709\u7acb\u5373\u6267\u884c\u521d\u59cb\u5316\uff0c\u800c\u662f\u5728\u56fe\u8c31\u4e2d\u521b\u5efa\u4e00\u4e2a\u5f53\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6240\u6709\u53d8\u91cf\u90fd\u4f1a\u521d\u59cb\u5316\u7684\u8282\u70b9\uff1a # way3 init = tf.global_variables_initializer() with tf.Session() as sess: init.run() result = f.eval() print(result) \u5728 Jupyter \u5185\u90e8\u6216\u5728 Python shell \u4e2d\uff0c\u60a8\u53ef\u80fd\u66f4\u559c\u6b22\u521b\u5efa\u4e00\u4e2a InteractiveSession \u3002 \u4e0e\u5e38\u89c4\u4f1a\u8bdd\u7684\u552f\u4e00\u533a\u522b\u662f\uff0c\u5f53\u521b\u5efa InteractiveSession \u65f6\uff0c\u5b83\u5c06\u81ea\u52a8\u5c06\u5176\u81ea\u8eab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u4f1a\u8bdd\uff0c\u56e0\u6b64\u60a8\u4e0d\u9700\u8981\u4f7f\u7528\u6a21\u5757\uff08\u4f46\u662f\u60a8\u9700\u8981\u5728\u5b8c\u6210\u540e\u624b\u52a8\u5173\u95ed\u4f1a\u8bdd\uff09\uff1a # way4 init = tf.global_variables_initializer() sess = tf.InteractiveSession() init.run() result = f.eval() print(result) sess.close() TensorFlow \u7a0b\u5e8f\u901a\u5e38\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u7b2c\u4e00\u90e8\u5206\u6784\u5efa\u8ba1\u7b97\u56fe\u8c31\uff08\u8fd9\u79f0\u4e3a\u6784\u9020\u9636\u6bb5\uff09\uff0c\u7b2c\u4e8c\u90e8\u5206\u8fd0\u884c\u5b83\uff08\u8fd9\u662f\u6267\u884c\u9636\u6bb5\uff09\u3002 \u5efa\u8bbe\u9636\u6bb5\u901a\u5e38\u6784\u5efa\u4e00\u4e2a\u8868\u793a ML \u6a21\u578b\u7684\u8ba1\u7b97\u56fe\u8c31,\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u8bad\u7ec3,\u8ba1\u7b97\u3002 \u6267\u884c\u9636\u6bb5\u901a\u5e38\u8fd0\u884c\u5faa\u73af\uff0c\u91cd\u590d\u5730\u6c42\u51fa\u8bad\u7ec3\u6b65\u9aa4\uff08\u4f8b\u5982\uff0c\u6bcf\u4e2a\u5c0f\u6279\u6b21\uff09\uff0c\u9010\u6e10\u6539\u8fdb\u6a21\u578b\u53c2\u6570\u3002","title":"\u521b\u9020\u7b2c\u4e00\u4e2a\u56fe\u8c31\uff0c\u7136\u540e\u8fd0\u884c\u5b83"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_3","text":"\u60a8\u521b\u5efa\u7684\u4efb\u4f55\u8282\u70b9\u90fd\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230\u9ed8\u8ba4\u56fe\u5f62\u4e2d\uff1a >>> x1 = tf.Variable(1) >>> x1.graph is tf.get_default_graph() True \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u5f88\u597d\u7684\uff0c\u4f46\u6709\u65f6\u60a8\u53ef\u80fd\u9700\u8981\u7ba1\u7406\u591a\u4e2a\u72ec\u7acb\u56fe\u5f62\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u56fe\u5f62\u5e76\u6682\u65f6\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5757\u4e2d\u7684\u9ed8\u8ba4\u56fe\u5f62\uff0c\u5982\u4e0b\u6240\u793a\uff1a >>> graph = tf.Graph() >>> with graph.as_default(): ... x2 = tf.Variable(2) ... >>> x2.graph is graph True >>> x2.graph is tf.get_default_graph() False \u5728 Jupyter\uff08\u6216 Python shell\uff09\u4e2d\uff0c\u901a\u5e38\u5728\u5b9e\u9a8c\u65f6\u591a\u6b21\u8fd0\u884c\u76f8\u540c\u7684\u547d\u4ee4\u3002 \u56e0\u6b64\uff0c\u60a8\u53ef\u80fd\u4f1a\u6536\u5230\u5305\u542b\u8bb8\u591a\u91cd\u590d\u8282\u70b9\u7684\u9ed8\u8ba4\u56fe\u5f62\u3002 \u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u91cd\u65b0\u542f\u52a8 Jupyter \u5185\u6838\uff08\u6216 Python shell\uff09\uff0c\u4f46\u662f\u4e00\u4e2a\u66f4\u65b9\u4fbf\u7684\u89e3\u51b3\u65b9\u6848\u662f\u901a\u8fc7\u8fd0\u884c tf.reset_default_graph() \u6765\u91cd\u7f6e\u9ed8\u8ba4\u56fe\u3002","title":"\u7ba1\u7406\u56fe\u8c31"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_4","text":"\u6c42\u51fa\u8282\u70b9\u65f6\uff0cTensorFlow \u4f1a\u81ea\u52a8\u786e\u5b9a\u6240\u4f9d\u8d56\u7684\u8282\u70b9\u96c6\uff0c\u5e76\u9996\u5148\u6c42\u51fa\u8fd9\u4e9b\u8282\u70b9\u3002 \u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u4ee3\u7801\uff1a # w = tf.constant(3) # x = w + 2 # y = x + 5 # z = x * 3 # with tf.Session() as sess: # print(y.eval()) # print(z.eval()) \u9996\u5148\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u56fe\u3002\u7136\u540e\uff0c\u5b83\u542f\u52a8\u4e00\u4e2a\u4f1a\u8bdd\u5e76\u8fd0\u884c\u56fe\u6765\u6c42\u51fa y \uff1aTensorFlow \u81ea\u52a8\u68c0\u6d4b\u5230 y \u53d6\u51b3\u4e8e x \uff0c\u5b83\u53d6\u51b3\u4e8e w \uff0c\u6240\u4ee5\u5b83\u9996\u5148\u6c42\u51fa w \uff0c\u7136\u540e x \uff0c\u7136\u540e y \uff0c\u5e76\u8fd4\u56de y \u7684\u503c\u3002\u6700\u540e\uff0c\u4ee3\u7801\u8fd0\u884c\u56fe\u6765\u6c42\u51fa z \u3002\u540c\u6837\uff0cTensorFlow \u68c0\u6d4b\u5230\u5b83\u5fc5\u987b\u9996\u5148\u6c42\u51fa w \u548c x \u3002\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\uff0c\u5b83\u4e0d\u4f1a\u590d\u7528\u4ee5\u524d\u7684w\u548cx\u7684\u6c42\u51fa\u7ed3\u679c\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u524d\u9762\u7684\u4ee3\u7801\u6c42\u51fa w \u548c x \u4e24\u6b21\u3002 \u6240\u6709\u8282\u70b9\u503c\u90fd\u5728\u56fe\u8fd0\u884c\u4e4b\u95f4\u5220\u9664\uff0c\u9664\u4e86\u53d8\u91cf\u503c\uff0c\u7531\u4f1a\u8bdd\u8de8\u56fe\u5f62\u8fd0\u884c\u7ef4\u62a4\uff08\u961f\u5217\u548c\u8bfb\u8005\u4e5f\u4fdd\u6301\u4e00\u4e9b\u72b6\u6001\uff09\u3002\u53d8\u91cf\u5728\u5176\u521d\u59cb\u5316\u7a0b\u5e8f\u8fd0\u884c\u65f6\u542f\u52a8\u5176\u751f\u547d\u5468\u671f\uff0c\u5e76\u4e14\u5728\u4f1a\u8bdd\u5173\u95ed\u65f6\u7ed3\u675f\u3002 \u5982\u679c\u8981\u6709\u6548\u5730\u6c42\u51fa y \u548c z \uff0c\u800c\u4e0d\u50cf\u4e4b\u524d\u7684\u4ee3\u7801\u90a3\u6837\u6c42\u51fa w \u548c x \u4e24\u6b21\uff0c\u90a3\u4e48\u60a8\u5fc5\u987b\u8981\u6c42 TensorFlow \u5728\u4e00\u4e2a\u56fe\u5f62\u8fd0\u884c\u4e2d\u6c42\u51fa y \u548c z \uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\uff1a # with tf.Session() as sess: # y_val, z_val = sess.run([y, z]) # print(y_val) # 10 # print(z_val) # 15 \u5728\u5355\u8fdb\u7a0b TensorFlow \u4e2d\uff0c\u591a\u4e2a\u4f1a\u8bdd\u4e0d\u5171\u4eab\u4efb\u4f55\u72b6\u6001\uff0c\u5373\u4f7f\u5b83\u4eec\u590d\u7528\u540c\u4e00\u4e2a\u56fe\uff08\u6bcf\u4e2a\u4f1a\u8bdd\u90fd\u6709\u81ea\u5df1\u7684\u6bcf\u4e2a\u53d8\u91cf\u7684\u526f\u672c\uff09\u3002 \u5728\u5206\u5e03\u5f0f TensorFlow \u4e2d\uff0c\u53d8\u91cf\u72b6\u6001\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u800c\u4e0d\u662f\u5728\u4f1a\u8bdd\u4e2d\uff0c\u56e0\u6b64\u591a\u4e2a\u4f1a\u8bdd\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u53d8\u91cf\u3002","title":"\u8282\u70b9\u503c\u7684\u751f\u547d\u5468\u671f"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#linear-regression-with-tensorflow","text":"TensorFlow \u64cd\u4f5c\uff08\u4e5f\u7b80\u79f0\u4e3a ops\uff09\u53ef\u4ee5\u91c7\u7528\u4efb\u610f\u6570\u91cf\u7684\u8f93\u5165\u5e76\u4ea7\u751f\u4efb\u610f\u6570\u91cf\u7684\u8f93\u51fa\u3002 \u4f8b\u5982\uff0c\u52a0\u6cd5\u8fd0\u7b97\u548c\u4e58\u6cd5\u8fd0\u7b97\u90fd\u9700\u8981\u4e24\u4e2a\u8f93\u5165\u5e76\u4ea7\u751f\u4e00\u4e2a\u8f93\u51fa\u3002 \u5e38\u91cf\u548c\u53d8\u91cf\u4e0d\u8f93\u5165\uff08\u5b83\u4eec\u88ab\u79f0\u4e3a\u6e90\u64cd\u4f5c\uff09\u3002 \u8f93\u5165\u548c\u8f93\u51fa\u662f\u79f0\u4e3a\u5f20\u91cf\u7684\u591a\u7ef4\u6570\u7ec4\uff08\u56e0\u6b64\u79f0\u4e3a\u201ctensor flow\u201d\uff09\u3002 \u5c31\u50cf NumPy \u6570\u7ec4\u4e00\u6837\uff0c\u5f20\u91cf\u5177\u6709\u7c7b\u578b\u548c\u5f62\u72b6\u3002 \u5b9e\u9645\u4e0a\uff0c\u5728 Python API \u4e2d\uff0c\u5f20\u91cf\u7b80\u5355\u5730\u7531 NumPy ndarray \u8868\u793a\u3002 \u5b83\u4eec\u901a\u5e38\u5305\u542b\u6d6e\u70b9\u6570\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u4f20\u9001\u5b57\u7b26\u4e32\uff08\u4efb\u610f\u5b57\u8282\u6570\u7ec4\uff09\u3002 \u8fc4\u4eca\u4e3a\u6b62\u7684\u793a\u4f8b\uff0c\u5f20\u91cf\u53ea\u5305\u542b\u5355\u4e2a\u6807\u91cf\u503c\uff0c\u4f46\u662f\u5f53\u7136\u53ef\u4ee5\u5bf9\u4efb\u4f55\u5f62\u72b6\u7684\u6570\u7ec4\u6267\u884c\u8ba1\u7b97\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u64cd\u4f5c\u4e8c\u7ef4\u6570\u7ec4\u6765\u5bf9\u52a0\u5229\u798f\u5c3c\u4e9a\u623f\u5c4b\u6570\u636e\u96c6\u8fdb\u884c\u7ebf\u6027\u56de\u5f52\uff08\u5728\u7b2c 2 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\u3002\u5b83\u4ece\u83b7\u53d6\u6570\u636e\u96c6\u5f00\u59cb\uff1b\u4e4b\u540e\u5b83\u4f1a\u5411\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u504f\u7f6e\u8f93\u5165\u7279\u5f81\uff08 x0 = 1 \uff09\uff08\u5b83\u4f7f\u7528 NumPy \u8fdb\u884c\uff0c\u56e0\u6b64\u7acb\u5373\u8fd0\u884c\uff09\uff1b\u4e4b\u540e\u5b83\u521b\u5efa\u4e24\u4e2a TensorFlow \u5e38\u91cf\u8282\u70b9 X \u548c y \u6765\u4fdd\u5b58\u8be5\u6570\u636e\u548c\u76ee\u6807\uff0c\u5e76\u4e14\u5b83\u4f7f\u7528 TensorFlow \u63d0\u4f9b\u7684\u4e00\u4e9b\u77e9\u9635\u8fd0\u7b97\u6765\u5b9a\u4e49 theta \u3002\u8fd9\u4e9b\u77e9\u9635\u51fd\u6570 transpose() \uff0c matmul() \u548c matrix_inverse() \u662f\u4e0d\u8a00\u81ea\u660e\u7684\uff0c\u4f46\u662f\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u5b83\u4eec\u4e0d\u4f1a\u7acb\u5373\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\uff1b\u76f8\u53cd\uff0c\u5b83\u4eec\u4f1a\u5728\u56fe\u5f62\u4e2d\u521b\u5efa\u5728\u8fd0\u884c\u56fe\u5f62\u65f6\u6267\u884c\u5b83\u4eec\u7684\u8282\u70b9\u3002\u60a8\u53ef\u4ee5\u8ba4\u8bc6\u5230 \u03b8 \u7684\u5b9a\u4e49\u5bf9\u5e94\u4e8e\u65b9\u7a0b \u3002 \u6700\u540e\uff0c\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a session \u5e76\u4f7f\u7528\u5b83\u6765\u6c42\u51fa theta \u3002 import numpy as np from sklearn.datasets import fetch_california_housing housing = fetch_california_housing() m, n = housing.data.shape #np.c_\u6309colunm\u6765\u7ec4\u5408array housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] X = tf.constant(housing_data_plus_bias, dtype=tf.float32, name=\"X\") y = tf.constant(housing.target.reshape(-1, 1), dtype=tf.float32, name=\"y\") XT = tf.transpose(X) theta = tf.matmul(tf.matmul(tf.matrix_inverse(tf.matmul(XT, X)), XT), y) with tf.Session() as sess: theta_value = theta.eval() print(theta_value) \u5982\u679c\u60a8\u6709\u4e00\u4e2a GPU \u7684\u8bdd\uff0c\u4e0a\u8ff0\u4ee3\u7801\u76f8\u8f83\u4e8e\u76f4\u63a5\u4f7f\u7528 NumPy \u8ba1\u7b97\u6b63\u6001\u65b9\u7a0b\u5f0f\u7684\u4e3b\u8981\u4f18\u70b9\u662f TensorFlow \u4f1a\u81ea\u52a8\u8fd0\u884c\u5728\u60a8\u7684 GPU \u4e0a\uff08\u5982\u679c\u60a8\u5b89\u88c5\u4e86\u652f\u6301 GPU \u7684 TensorFlow\uff0c\u5219 TensorFlow \u5c06\u81ea\u52a8\u8fd0\u884c\u5728 GPU \u4e0a\uff0c\u8bf7\u53c2\u9605\u7b2c 12 \u7ae0\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff09\u3002 \u5176\u5b9e\u8fd9\u91cc\u5c31\u662f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u7b97 \u03b8 http://blog.csdn.net/akon_wang_hkbu/article/details/77503725","title":"Linear Regression with TensorFlow"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_5","text":"\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08\u5728\u7b2c 4 \u7ae0\u4e2d\u4ecb\u7ecd\uff09\uff0c\u800c\u4e0d\u662f\u666e\u901a\u65b9\u7a0b\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u624b\u52a8\u8ba1\u7b97\u68af\u5ea6\u6765\u5b9e\u73b0\uff0c\u7136\u540e\u6211\u4eec\u5c06\u4f7f\u7528 TensorFlow \u7684\u81ea\u52a8\u6269\u5c55\u529f\u80fd\u6765\u4f7f TensorFlow \u81ea\u52a8\u8ba1\u7b97\u68af\u5ea6\uff0c\u6700\u540e\u6211\u4eec\u5c06\u4f7f\u7528\u51e0\u4e2a TensorFlow \u7684\u4f18\u5316\u5668\u3002 \u5f53\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u65f6\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u9996\u5148\u8981\u5bf9\u8f93\u5165\u7279\u5f81\u5411\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u5426\u5219\u8bad\u7ec3\u53ef\u80fd\u8981\u6162\u5f97\u591a\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 TensorFlow\uff0cNumPy\uff0cScikit-Learn \u7684 StandardScaler \u6216\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u5176\u4ed6\u89e3\u51b3\u65b9\u6848\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5047\u5b9a\u6b64\u89c4\u8303\u5316\u5df2\u7ecf\u5b8c\u6210\u3002","title":"\u5b9e\u73b0\u68af\u5ea6\u4e0b\u964d"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_6","text":"\u4ee5\u4e0b\u4ee3\u7801\u5e94\u8be5\u662f\u76f8\u5f53\u4e0d\u8a00\u81ea\u660e\u7684\uff0c\u9664\u4e86\u51e0\u4e2a\u65b0\u5143\u7d20\uff1a random_uniform() \u51fd\u6570\u5728\u56fe\u5f62\u4e2d\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u5c06\u751f\u6210\u5305\u542b\u968f\u673a\u503c\u7684\u5f20\u91cf\uff0c\u7ed9\u5b9a\u5176\u5f62\u72b6\u548c\u503c\u4f5c\u7528\u57df\uff0c\u5c31\u50cf NumPy \u7684 rand() \u51fd\u6570\u4e00\u6837\u3002 assign() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u4e3a\u53d8\u91cf\u5206\u914d\u65b0\u503c\u7684\u8282\u70b9\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u5b9e\u73b0\u4e86\u6279\u6b21\u68af\u5ea6\u4e0b\u964d\u6b65\u9aa4 \u3002 \u4e3b\u5faa\u73af\u4e00\u6b21\u53c8\u4e00\u6b21\uff08\u5171 n_epochs \u6b21\uff09\u6267\u884c\u8bad\u7ec3\u6b65\u9aa4\uff0c\u6bcf 100 \u6b21\u8fed\u4ee3\u90fd\u6253\u5370\u51fa\u5f53\u524d\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\u3002 \u4f60\u5e94\u8be5\u770b\u5230 MSE \u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u90fd\u4f1a\u4e0b\u964d\u3002 housing = fetch_california_housing() m, n = housing.data.shape m, n = housing.data.shape #np.c_\u6309colunm\u6765\u7ec4\u5408array housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaled_housing_data_plus_bias = scale(housing_data_plus_bias) n_epochs = 1000 learning_rate = 0.01 X = tf.constant(scaled_housing_data_plus_bias, dtype=tf.float32, name=\"X\") y = tf.constant(housing.target.reshape(-1, 1), dtype=tf.float32, name=\"y\") theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") gradients = 2/m * tf.matmul(tf.transpose(X), error) training_op = tf.assign(theta, theta - learning_rate * gradients) init = tf.global_variables_initializer() with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): if epoch % 100 == 0: print(\"Epoch\", epoch, \"MSE =\", mse.eval()) sess.run(training_op) best_theta = theta.eval()","title":"\u624b\u52a8\u8ba1\u7b97\u6e10\u53d8"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#using-autodiff","text":"\u524d\u9762\u7684\u4ee3\u7801\u5de5\u4f5c\u6b63\u5e38\uff0c\u4f46\u5b83\u9700\u8981\u4ece\u4ee3\u4ef7\u51fd\u6570\uff08MSE\uff09\u4e2d\u5229\u7528\u6570\u5b66\u516c\u5f0f\u63a8\u5bfc\u68af\u5ea6\u3002 \u5728\u7ebf\u6027\u56de\u5f52\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u76f8\u5f53\u5bb9\u6613\u7684\uff0c\u4f46\u662f\u5982\u679c\u4f60\u5fc5\u987b\u7528\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5\uff0c\u4f60\u4f1a\u611f\u5230\u5934\u75db\uff1a\u8fd9\u5c06\u662f\u4e4f\u5473\u548c\u5bb9\u6613\u51fa\u9519\u7684\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u7b26\u53f7\u6c42\u5bfc\u6765\u4e3a\u60a8\u81ea\u52a8\u627e\u5230\u504f\u5bfc\u6570\u7684\u65b9\u7a0b\u5f0f\uff0c\u4f46\u7ed3\u679c\u4ee3\u7801\u4e0d\u4e00\u5b9a\u975e\u5e38\u6709\u6548\u3002 \u4e3a\u4e86\u7406\u89e3\u4e3a\u4ec0\u4e48\uff0c\u8003\u8651\u51fd\u6570 f(x) = exp(exp(exp(x))) \u3002\u5982\u679c\u4f60\u77e5\u9053\u5fae\u79ef\u5206\uff0c\u4f60\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5b83\u7684\u5bfc\u6570 f'(x) = exp(x) * exp(exp(x)) * exp(exp(exp(x))) \u3002\u5982\u679c\u60a8\u6309\u7167\u666e\u901a\u7684\u8ba1\u7b97\u65b9\u5f0f\u5206\u522b\u53bb\u5199 f(x) \u548c f'(x) \uff0c\u60a8\u7684\u4ee3\u7801\u5c06\u4e0d\u4f1a\u5982\u6b64\u6709\u6548\u3002 \u4e00\u4e2a\u66f4\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5199\u4e00\u4e2a\u9996\u5148\u8ba1\u7b97 exp(x) \uff0c\u7136\u540e exp(exp(x)) \uff0c\u7136\u540e exp(exp(exp(x))) \u7684\u51fd\u6570\uff0c\u5e76\u8fd4\u56de\u6240\u6709\u4e09\u4e2a\u3002\u8fd9\u76f4\u63a5\u7ed9\u4f60\uff08\u7b2c\u4e09\u9879\uff09 f(x) \uff0c\u5982\u679c\u4f60\u9700\u8981\u6c42\u5bfc\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e09\u4e2a\u5b50\u5f0f\u76f8\u4e58\uff0c\u4f60\u5c31\u5b8c\u6210\u4e86\u3002 \u901a\u8fc7\u4f20\u7edf\u7684\u65b9\u6cd5\uff0c\u60a8\u4e0d\u5f97\u4e0d\u5c06 exp \u51fd\u6570\u8c03\u7528 9 \u6b21\u6765\u8ba1\u7b97 f(x) \u548c f'(x) \u3002 \u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f60\u53ea\u9700\u8981\u8c03\u7528\u5b83\u4e09\u6b21\u3002 \u5f53\u60a8\u7684\u529f\u80fd\u7531\u67d0\u4e9b\u4efb\u610f\u4ee3\u7801\u5b9a\u4e49\u65f6\uff0c\u5b83\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002 \u4f60\u80fd\u627e\u5230\u65b9\u7a0b\uff08\u6216\u4ee3\u7801\uff09\u6765\u8ba1\u7b97\u4ee5\u4e0b\u51fd\u6570\u7684\u504f\u5bfc\u6570\u5417\uff1f \u63d0\u793a\uff1a\u4e0d\u8981\u5c1d\u8bd5\u3002 def my_func(a, b): z = 0 for i in range(100): z = a * np.cos(z + i) + z * np.sin(b - i) return z \u5e78\u8fd0\u7684\u662f\uff0cTensorFlow \u7684\u81ea\u52a8\u8ba1\u7b97\u68af\u5ea6\u529f\u80fd\u53ef\u4ee5\u8ba1\u7b97\u8fd9\u4e2a\u516c\u5f0f\uff1a\u5b83\u53ef\u4ee5\u81ea\u52a8\u9ad8\u6548\u5730\u4e3a\u60a8\u8ba1\u7b97\u68af\u5ea6\u3002 \u53ea\u9700\u7528\u4ee5\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u66ff\u6362\u4e0a\u4e00\u8282\u4e2d\u4ee3\u7801\u7684 gradients = ... \u884c\uff0c\u4ee3\u7801\u5c06\u7ee7\u7eed\u5de5\u4f5c\u6b63\u5e38\uff1a gradients = tf.gradients(mse, [theta])[0] gradients() \u51fd\u6570\u4f7f\u7528\u4e00\u4e2a op \uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662fMSE\uff09\u548c\u4e00\u4e2a\u53d8\u91cf\u5217\u8868\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53ea\u662f theta \uff09\uff0c\u5b83\u521b\u5efa\u4e00\u4e2a ops \u5217\u8868\uff08\u6bcf\u4e2a\u53d8\u91cf\u4e00\u4e2a\uff09\u6765\u8ba1\u7b97 op \u7684\u68af\u5ea6\u53d8\u91cf\u3002 \u56e0\u6b64\uff0c\u68af\u5ea6\u8282\u70b9\u5c06\u8ba1\u7b97 MSE \u76f8\u5bf9\u4e8e theta \u7684\u68af\u5ea6\u5411\u91cf\u3002 \u81ea\u52a8\u8ba1\u7b97\u68af\u5ea6\u6709\u56db\u79cd\u4e3b\u8981\u65b9\u6cd5\u3002 \u5b83\u4eec\u603b\u7ed3\u5728\u8868 9-2 \u4e2d\u3002 TensorFlow \u4f7f\u7528\u53cd\u5411\u6a21\u5f0f\uff0c\u8fd9\u662f\u5b8c\u7f8e\u7684\uff08\u9ad8\u6548\u548c\u51c6\u786e\uff09\uff0c\u5f53\u6709\u5f88\u591a\u8f93\u5165\u548c\u5c11\u91cf\u7684\u8f93\u51fa\uff0c\u5982\u901a\u5e38\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u60c5\u51b5\u3002 \u5b83\u53ea\u9700\u8981\u901a\u8fc7 \u6b21\u56fe\u904d\u5386\u5373\u53ef\u8ba1\u7b97\u6240\u6709\u8f93\u51fa\u7684\u504f\u5bfc\u6570\u3002","title":"Using autodi\ufb00"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_7","text":"\u6240\u4ee5 TensorFlow \u4e3a\u60a8\u8ba1\u7b97\u68af\u5ea6\u3002 \u4f46\u5b83\u8fd8\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff1a\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684\u4f18\u5316\u5668\uff0c\u5305\u62ec\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u5668\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u7b80\u5355\u5730\u66ff\u6362\u4ee5\u524d\u7684 gradients = ... \u548c training_op = ... \u884c\uff0c\u5e76\u4e14\u4e00\u5207\u90fd\u5c06\u6b63\u5e38\u5de5\u4f5c\uff1a optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(mse) \u5982\u679c\u8981\u4f7f\u7528\u5176\u4ed6\u7c7b\u578b\u7684\u4f18\u5316\u5668\uff0c\u5219\u53ea\u9700\u8981\u66f4\u6539\u4e00\u884c\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u4f18\u5316\u5668\u6765\u4f7f\u7528\u52a8\u91cf\u4f18\u5316\u5668\uff08\u901a\u5e38\u4f1a\u6bd4\u6e10\u53d8\u6536\u655b\u7684\u6536\u655b\u901f\u5ea6\u5feb\u5f97\u591a\uff1b\u53c2\u89c1\u7b2c 11 \u7ae0\uff09 optimizer = tf.train.MomentumOptimizer(learning_rate=learning_rate, momentum=0.9)","title":"\u4f7f\u7528\u4f18\u5316\u5668"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_8","text":"\u6211\u4eec\u5c1d\u8bd5\u4fee\u6539\u4ee5\u524d\u7684\u4ee3\u7801\u6765\u5b9e\u73b0\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff08Mini-batch Gradient Descent\uff09\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\u7528\u4e0b\u4e00\u4e2a\u5c0f\u6279\u91cf\u66ff\u6362 X \u548c Y \u7684\u65b9\u6cd5\u3002 \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5360\u4f4d\u7b26\uff08placeholder\uff09\u8282\u70b9\u3002 \u8fd9\u4e9b\u8282\u70b9\u662f\u7279\u522b\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b9e\u9645\u4e0a\u5e76\u4e0d\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\uff0c\u53ea\u662f\u8f93\u51fa\u60a8\u5728\u8fd0\u884c\u65f6\u8f93\u51fa\u7684\u6570\u636e\u3002 \u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u5c06\u8bad\u7ec3\u6570\u636e\u4f20\u9012\u7ed9 TensorFlow\u3002 \u5982\u679c\u5728\u8fd0\u884c\u65f6\u6ca1\u6709\u4e3a\u5360\u4f4d\u7b26\u6307\u5b9a\u503c\uff0c\u5219\u4f1a\u6536\u5230\u5f02\u5e38\u3002 \u8981\u521b\u5efa\u5360\u4f4d\u7b26\u8282\u70b9\uff0c\u60a8\u5fc5\u987b\u8c03\u7528 placeholder() \u51fd\u6570\u5e76\u6307\u5b9a\u8f93\u51fa\u5f20\u91cf\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6216\u8005\uff0c\u60a8\u8fd8\u53ef\u4ee5\u6307\u5b9a\u5176\u5f62\u72b6\uff0c\u5982\u679c\u8981\u5f3a\u5236\u6267\u884c\u3002 \u5982\u679c\u6307\u5b9a\u7ef4\u5ea6\u4e3a None \uff0c\u5219\u8868\u793a\u201c\u4efb\u4f55\u5927\u5c0f\u201d\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5360\u4f4d\u7b26\u8282\u70b9 A \uff0c\u8fd8\u6709\u4e00\u4e2a\u8282\u70b9 B = A + 5 \u3002\u5f53\u6211\u4eec\u6c42\u51fa B \u65f6\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a feed_dict \u4f20\u9012\u7ed9 eval() \u65b9\u6cd5\u5e76\u6307\u5b9a A \u7684\u503c\u3002\u6ce8\u610f\uff0c A \u5fc5\u987b\u5177\u6709 2 \u7ea7\uff08\u5373\u5b83\u5fc5\u987b\u662f\u4e8c\u7ef4\u7684\uff09\uff0c\u5e76\u4e14\u5fc5\u987b\u6709\u4e09\u5217\uff08\u5426\u5219\u5f15\u53d1\u5f02\u5e38\uff09\uff0c\u4f46\u5b83\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u884c\u3002 >>> A = tf.placeholder(tf.float32, shape=(None, 3)) >>> B = A + 5 >>> with tf.Session() as sess: ... B_val_1 = B.eval(feed_dict={A: [[1, 2, 3]]}) ... B_val_2 = B.eval(feed_dict={A: [[4, 5, 6], [7, 8, 9]]}) ... >>> print(B_val_1) [[ 6. 7. 8.]] >>> print(B_val_2) [[ 9. 10. 11.] [ 12. 13. 14.]] \u60a8\u5b9e\u9645\u4e0a\u53ef\u4ee5\u63d0\u4f9b\u4efb\u4f55\u64cd\u4f5c\u7684\u8f93\u51fa\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5360\u4f4d\u7b26\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cTensorFlow \u4e0d\u4f1a\u5c1d\u8bd5\u6c42\u51fa\u8fd9\u4e9b\u64cd\u4f5c\uff1b\u5b83\u4f7f\u7528\u60a8\u63d0\u4f9b\u7684\u503c\u3002 \u8981\u5b9e\u73b0\u5c0f\u6279\u91cf\u6e10\u53d8\u4e0b\u964d\uff0c\u6211\u4eec\u53ea\u9700\u7a0d\u5fae\u8c03\u6574\u73b0\u6709\u7684\u4ee3\u7801\u3002 \u9996\u5148\u66f4\u6539 X \u548c Y \u7684\u5b9a\u4e49\uff0c\u4f7f\u5176\u5b9a\u4e49\u4e3a\u5360\u4f4d\u7b26\u8282\u70b9\uff1a X = tf.placeholder(tf.float32, shape=(None, n + 1), name=\"X\") y = tf.placeholder(tf.float32, shape=(None, 1), name=\"y\") \u7136\u540e\u5b9a\u4e49\u6279\u91cf\u5927\u5c0f\u5e76\u8ba1\u7b97\u603b\u6279\u6b21\u6570\uff1a batch_size = 100 n_batches = int(np.ceil(m / batch_size)) \u6700\u540e\uff0c\u5728\u6267\u884c\u9636\u6bb5\uff0c\u9010\u4e2a\u83b7\u53d6\u5c0f\u6279\u91cf\uff0c\u7136\u540e\u5728\u6c42\u51fa\u4f9d\u8d56\u4e8e X \u548c y \u7684\u503c\u7684\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u901a\u8fc7 feed_dict \u63d0\u4f9b X \u548c y \u7684\u503c\u3002 def fetch_batch(epoch, batch_index, batch_size): [...] # load the data from disk return X_batch, y_batch with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) best_theta = theta.eval() \u5728\u6c42\u51fatheta\u65f6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4f20\u9012X\u548cy\u7684\u503c\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u5b83\u4eec\u3002","title":"\u5c06\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u7b97\u6cd5"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#mini-batch","text":"import numpy as np from sklearn.datasets import fetch_california_housing import tensorflow as tf from sklearn.preprocessing import StandardScaler housing = fetch_california_housing() m, n = housing.data.shape print(\"\u6570\u636e\u96c6:{}\u884c,{}\u5217\".format(m,n)) housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaler = StandardScaler() scaled_housing_data = scaler.fit_transform(housing.data) scaled_housing_data_plus_bias = np.c_[np.ones((m, 1)), scaled_housing_data] n_epochs = 1000 learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=(None, n + 1), name=\"X\") y = tf.placeholder(tf.float32, shape=(None, 1), name=\"y\") theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0, seed=42), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(mse) init = tf.global_variables_initializer() n_epochs = 10 batch_size = 100 n_batches = int(np.ceil(m / batch_size)) # ceil() \u65b9\u6cd5\u8fd4\u56de x \u7684\u503c\u4e0a\u9650 - \u4e0d\u5c0f\u4e8e x \u7684\u6700\u5c0f\u6574\u6570\u3002 def fetch_batch(epoch, batch_index, batch_size): know = np.random.seed(epoch * n_batches + batch_index) # not shown in the book print(\"\u6211\u662fknow:\",know) indices = np.random.randint(m, size=batch_size) # not shown X_batch = scaled_housing_data_plus_bias[indices] # not shown y_batch = housing.target.reshape(-1, 1)[indices] # not shown return X_batch, y_batch with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) best_theta = theta.eval() print(best_theta)","title":"MINI-BATCH \u5b8c\u6574\u4ee3\u7801"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_9","text":"\u4e00\u65e6\u4f60\u8bad\u7ec3\u4e86\u4f60\u7684\u6a21\u578b\uff0c\u4f60\u5e94\u8be5\u628a\u5b83\u7684\u53c2\u6570\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u56de\u5230\u5b83\uff0c\u5728\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\uff0c\u4e0e\u5176\u4ed6\u6a21\u578b\u6bd4\u8f83\uff0c\u7b49\u7b49\u3002 \u6b64\u5916\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u8bad\u7ec3\u671f\u95f4\u5b9a\u671f\u4fdd\u5b58\u68c0\u67e5\u70b9\uff0c\u4ee5\u4fbf\u5982\u679c\u60a8\u7684\u8ba1\u7b97\u673a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5d29\u6e83\uff0c\u60a8\u53ef\u4ee5\u4ece\u4e0a\u6b21\u68c0\u67e5\u70b9\u7ee7\u7eed\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u4ece\u5934\u5f00\u59cb\u3002 TensorFlow \u53ef\u4ee5\u8f7b\u677e\u4fdd\u5b58\u548c\u6062\u590d\u6a21\u578b\u3002 \u53ea\u9700\u5728\u6784\u9020\u9636\u6bb5\u7ed3\u675f\uff08\u521b\u5efa\u6240\u6709\u53d8\u91cf\u8282\u70b9\u4e4b\u540e\uff09\u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u8282\u70b9; \u90a3\u4e48\u5728\u6267\u884c\u9636\u6bb5\uff0c\u53ea\u8981\u4f60\u60f3\u4fdd\u5b58\u6a21\u578b\uff0c\u53ea\u8981\u8c03\u7528\u5b83\u7684 save() \u65b9\u6cd5: [...] theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0), name=\"theta\") [...] init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): if epoch % 100 == 0: # checkpoint every 100 epochs save_path = saver.save(sess, \"/tmp/my_model.ckpt\") sess.run(training_op) best_theta = theta.eval() save_path = saver.save(sess, \"/tmp/my_model_final.ckpt\") \u6062\u590d\u6a21\u578b\u540c\u6837\u5bb9\u6613\uff1a\u5728\u6784\u5efa\u9636\u6bb5\u7ed3\u675f\u65f6\u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u5668\uff0c\u5c31\u50cf\u4e4b\u524d\u4e00\u6837\uff0c\u4f46\u662f\u5728\u6267\u884c\u9636\u6bb5\u7684\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 init \u8282\u70b9\u521d\u59cb\u5316\u53d8\u91cf\uff0c\u4f60\u53ef\u4ee5\u8c03\u7528 restore() \u65b9\u6cd5 \u7684\u4fdd\u5b58\u5668\u5bf9\u8c61\uff1a with tf.Session() as sess: saver.restore(sess, \"/tmp/my_model_final.ckpt\") [...] \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4fdd\u5b58\u5668\u5c06\u4ee5\u81ea\u5df1\u7684\u540d\u79f0\u4fdd\u5b58\u5e76\u8fd8\u539f\u6240\u6709\u53d8\u91cf\uff0c\u4f46\u5982\u679c\u9700\u8981\u66f4\u591a\u63a7\u5236\uff0c\u5219\u53ef\u4ee5\u6307\u5b9a\u8981\u4fdd\u5b58\u6216\u8fd8\u539f\u7684\u53d8\u91cf\u4ee5\u53ca\u8981\u4f7f\u7528\u7684\u540d\u79f0\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4fdd\u5b58\u5668\u5c06\u4ec5\u4fdd\u5b58\u6216\u6062\u590d theta \u53d8\u91cf\uff0c\u5b83\u7684\u952e\u540d\u79f0\u662f weights \uff1a saver = tf.train.Saver({\"weights\": theta}) \u5b8c\u6574\u4ee3\u7801 import numpy as np from sklearn.datasets import fetch_california_housing import tensorflow as tf from sklearn.preprocessing import StandardScaler housing = fetch_california_housing() m, n = housing.data.shape print(\"\u6570\u636e\u96c6:{}\u884c,{}\u5217\".format(m,n)) housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaler = StandardScaler() scaled_housing_data = scaler.fit_transform(housing.data) scaled_housing_data_plus_bias = np.c_[np.ones((m, 1)), scaled_housing_data] n_epochs = 1000 # not shown in the book learning_rate = 0.01 # not shown X = tf.constant(scaled_housing_data_plus_bias, dtype=tf.float32, name=\"X\") # not shown y = tf.constant(housing.target.reshape(-1, 1), dtype=tf.float32, name=\"y\") # not shown theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0, seed=42), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") # not shown error = y_pred - y # not shown mse = tf.reduce_mean(tf.square(error), name=\"mse\") # not shown optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) # not shown training_op = optimizer.minimize(mse) # not shown init = tf.global_variables_initializer() saver = tf.train.Saver() with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): if epoch % 100 == 0: print(\"Epoch\", epoch, \"MSE =\", mse.eval()) # not shown save_path = saver.save(sess, \"/tmp/my_model.ckpt\") sess.run(training_op) best_theta = theta.eval() save_path = saver.save(sess, \"/tmp/my_model_final.ckpt\") #\u627e\u5230tmp\u6587\u4ef6\u5939\u5c31\u627e\u5230\u6587\u4ef6\u4e86 \u4f7f\u7528 TensorBoard \u5c55\u73b0\u56fe\u5f62\u548c\u8bad\u7ec3\u66f2\u7ebf \u6240\u4ee5\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u4f7f\u7528\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u8bad\u7ec3\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u8ba1\u7b97\u56fe\u8c31\uff0c\u6211\u4eec\u6b63\u5728\u5b9a\u671f\u4fdd\u5b58\u68c0\u67e5\u70b9\u3002 \u542c\u8d77\u6765\u5f88\u590d\u6742\uff0c\u4e0d\u662f\u5417\uff1f \u7136\u800c\uff0c\u6211\u4eec\u4ecd\u7136\u4f9d\u9760 print() \u51fd\u6570\u53ef\u89c6\u5316\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u8fdb\u5ea6\u3002 \u6709\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u6cd5\uff1a\u8fdb\u5165 TensorBoard\u3002\u5982\u679c\u60a8\u63d0\u4f9b\u4e00\u4e9b\u8bad\u7ec3\u7edf\u8ba1\u4fe1\u606f\uff0c\u5b83\u5c06\u5728\u60a8\u7684\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u8fd9\u4e9b\u7edf\u8ba1\u4fe1\u606f\u7684\u826f\u597d\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\uff08\u4f8b\u5982\u5b66\u4e60\u66f2\u7ebf\uff09\u3002 \u60a8\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u56fe\u5f62\u7684\u5b9a\u4e49\uff0c\u5b83\u5c06\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u5f88\u597d\u7684\u754c\u9762\u6765\u6d4f\u89c8\u5b83\u3002 \u8fd9\u5bf9\u4e8e\u8bc6\u522b\u56fe\u4e2d\u7684\u9519\u8bef\uff0c\u627e\u5230\u74f6\u9888\u7b49\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 \u7b2c\u4e00\u6b65\u662f\u8c03\u6574\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u5c06\u56fe\u5f62\u5b9a\u4e49\u548c\u4e00\u4e9b\u8bad\u7ec3\u7edf\u8ba1\u4fe1\u606f\uff08\u4f8b\u5982\uff0c training_error \uff08MSE\uff09\uff09\u5199\u5165 TensorBoard \u5c06\u8bfb\u53d6\u7684\u65e5\u5fd7\u76ee\u5f55\u3002 \u60a8\u6bcf\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6\u90fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u65e5\u5fd7\u76ee\u5f55\uff0c\u5426\u5219 TensorBoard \u5c06\u4f1a\u5408\u5e76\u6765\u81ea\u4e0d\u540c\u8fd0\u884c\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u8fd9\u5c06\u4f1a\u6df7\u4e71\u53ef\u89c6\u5316\u3002 \u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u65e5\u5fd7\u76ee\u5f55\u540d\u79f0\u4e2d\u5305\u542b\u65f6\u95f4\u6233\u3002 \u5728\u7a0b\u5e8f\u5f00\u5934\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a from datetime import datetime now = datetime.utcnow().strftime(\"%Y%m%d%H%M%S\") root_logdir = \"tf_logs\" logdir = \"{}/run-{}/\".format(root_logdir, now) \u63a5\u4e0b\u6765\uff0c\u5728\u6784\u5efa\u9636\u6bb5\u7ed3\u675f\u65f6\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a mse_summary = tf.summary.scalar('MSE', mse) file_writer = tf.summary.FileWriter(logdir, tf.get_default_graph()) \u7b2c\u4e00\u884c\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u5c06\u6c42\u51fa MSE \u503c\u5e76\u5c06\u5176\u5199\u5165 TensorBoard \u517c\u5bb9\u7684\u4e8c\u8fdb\u5236\u65e5\u5fd7\u5b57\u7b26\u4e32\uff08\u79f0\u4e3a\u6458\u8981\uff09\u4e2d\u3002 \u7b2c\u4e8c\u884c\u521b\u5efa\u4e00\u4e2a FileWriter \uff0c\u60a8\u5c06\u7528\u5b83\u6765\u5c06\u6458\u8981\u5199\u5165\u65e5\u5fd7\u76ee\u5f55\u4e2d\u7684\u65e5\u5fd7\u6587\u4ef6\u4e2d\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u793a\u65e5\u5fd7\u76ee\u5f55\u7684\u8def\u5f84\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a tf_logs/run-20160906091959/ \uff0c\u76f8\u5bf9\u4e8e\u5f53\u524d\u76ee\u5f55\uff09\u3002 \u7b2c\u4e8c\u4e2a\uff08\u53ef\u9009\uff09\u53c2\u6570\u662f\u60a8\u60f3\u8981\u53ef\u89c6\u5316\u7684\u56fe\u5f62\u3002 \u521b\u5efa\u65f6\uff0c\u6587\u4ef6\u5199\u5165\u5668\u521b\u5efa\u65e5\u5fd7\u76ee\u5f55\uff08\u5982\u679c\u9700\u8981\uff09\uff0c\u5e76\u5c06\u5176\u5b9a\u4e49\u5728\u4e8c\u8fdb\u5236\u65e5\u5fd7\u6587\u4ef6\uff08\u79f0\u4e3a\u4e8b\u4ef6\u6587\u4ef6\uff09\u4e2d\u3002 \u63a5\u4e0b\u6765\uff0c\u60a8\u9700\u8981\u66f4\u65b0\u6267\u884c\u9636\u6bb5\uff0c\u4ee5\u4fbf\u5728\u8bad\u7ec3\u671f\u95f4\u5b9a\u671f\u6c42\u51fa mse_summary \u8282\u70b9\uff08\u4f8b\u5982\uff0c\u6bcf 10 \u4e2a\u5c0f\u6279\u91cf\uff09\u3002 \u8fd9\u5c06\u8f93\u51fa\u4e00\u4e2a\u6458\u8981\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528 file_writer \u5199\u5165\u4e8b\u4ef6\u6587\u4ef6\u3002 \u4ee5\u4e0b\u662f\u66f4\u65b0\u7684\u4ee3\u7801\uff1a [...] for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) if batch_index % 10 == 0: summary_str = mse_summary.eval(feed_dict={X: X_batch, y: y_batch}) step = epoch * n_batches + batch_index file_writer.add_summary(summary_str, step) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) [...] \u907f\u514d\u5728\u6bcf\u4e00\u4e2a\u8bad\u7ec3\u9636\u6bb5\u8bb0\u5f55\u8bad\u7ec3\u6570\u636e\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5927\u5927\u51cf\u6162\u8bad\u7ec3\u901f\u5ea6\uff08\u4ee5\u4e0a\u4ee3\u7801\u6bcf 10 \u4e2a\u5c0f\u6279\u91cf\u8bb0\u5f55\u4e00\u6b21\uff09. \u6700\u540e\uff0c\u8981\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u5173\u95ed FileWriter \uff1a file_writer.close() \u5b8c\u6574\u4ee3\u7801 import numpy as np from sklearn.datasets import fetch_california_housing import tensorflow as tf from sklearn.preprocessing import StandardScaler housing = fetch_california_housing() m, n = housing.data.shape print(\"\u6570\u636e\u96c6:{}\u884c,{}\u5217\".format(m,n)) housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaler = StandardScaler() scaled_housing_data = scaler.fit_transform(housing.data) scaled_housing_data_plus_bias = np.c_[np.ones((m, 1)), scaled_housing_data] from datetime import datetime now = datetime.utcnow().strftime(\"%Y%m%d%H%M%S\") root_logdir = r\"D://tf_logs\" logdir = \"{}/run-{}/\".format(root_logdir, now) n_epochs = 1000 learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=(None, n + 1), name=\"X\") y = tf.placeholder(tf.float32, shape=(None, 1), name=\"y\") theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0, seed=42), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(mse) init = tf.global_variables_initializer() mse_summary = tf.summary.scalar('MSE', mse) file_writer = tf.summary.FileWriter(logdir, tf.get_default_graph()) n_epochs = 10 batch_size = 100 n_batches = int(np.ceil(m / batch_size)) def fetch_batch(epoch, batch_index, batch_size): np.random.seed(epoch * n_batches + batch_index) # not shown in the book indices = np.random.randint(m, size=batch_size) # not shown X_batch = scaled_housing_data_plus_bias[indices] # not shown y_batch = housing.target.reshape(-1, 1)[indices] # not shown return X_batch, y_batch with tf.Session() as sess: # not shown in the book sess.run(init) # not shown for epoch in range(n_epochs): # not shown for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) if batch_index % 10 == 0: summary_str = mse_summary.eval(feed_dict={X: X_batch, y: y_batch}) step = epoch * n_batches + batch_index file_writer.add_summary(summary_str, step) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) best_theta = theta.eval() file_writer.close() print(best_theta)","title":"\u4fdd\u5b58\u548c\u6062\u590d\u6a21\u578b"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_10","text":"\u5f53\u5904\u7406\u66f4\u590d\u6742\u7684\u6a21\u578b\uff08\u5982\u795e\u7ecf\u7f51\u7edc\uff09\u65f6\uff0c\u8be5\u56fe\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e0e\u6570\u5343\u4e2a\u8282\u70b9\u6df7\u6dc6\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u540d\u79f0\u4f5c\u7528\u57df\u6765\u5bf9\u76f8\u5173\u8282\u70b9\u8fdb\u884c\u5206\u7ec4\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u4fee\u6539\u4ee5\u524d\u7684\u4ee3\u7801\u6765\u5b9a\u4e49\u540d\u4e3a loss \u7684\u540d\u79f0\u4f5c\u7528\u57df\u5185\u7684\u9519\u8bef\u548c mse \u64cd\u4f5c\uff1a with tf.name_scope(\"loss\") as scope: error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") \u5728\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u7684\u6bcf\u4e2a op \u7684\u540d\u79f0\u73b0\u5728\u4ee5 loss/ \u4e3a\u524d\u7f00\uff1a >>> print(error.op.name) loss/sub >>> print(mse.op.name) loss/mse \u5728 TensorBoard \u4e2d\uff0c mse \u548c error \u8282\u70b9\u73b0\u5728\u51fa\u73b0\u5728 loss \u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u5d29\u6e83\uff08\u56fe 9-5\uff09\u3002 \u5b8c\u6574\u4ee3\u7801 import numpy as np from sklearn.datasets import fetch_california_housing import tensorflow as tf from sklearn.preprocessing import StandardScaler housing = fetch_california_housing() m, n = housing.data.shape print(\"\u6570\u636e\u96c6:{}\u884c,{}\u5217\".format(m,n)) housing_data_plus_bias = np.c_[np.ones((m, 1)), housing.data] scaler = StandardScaler() scaled_housing_data = scaler.fit_transform(housing.data) scaled_housing_data_plus_bias = np.c_[np.ones((m, 1)), scaled_housing_data] from datetime import datetime now = datetime.utcnow().strftime(\"%Y%m%d%H%M%S\") root_logdir = r\"D://tf_logs\" logdir = \"{}/run-{}/\".format(root_logdir, now) n_epochs = 1000 learning_rate = 0.01 X = tf.placeholder(tf.float32, shape=(None, n + 1), name=\"X\") y = tf.placeholder(tf.float32, shape=(None, 1), name=\"y\") theta = tf.Variable(tf.random_uniform([n + 1, 1], -1.0, 1.0, seed=42), name=\"theta\") y_pred = tf.matmul(X, theta, name=\"predictions\") def fetch_batch(epoch, batch_index, batch_size): np.random.seed(epoch * n_batches + batch_index) # not shown in the book indices = np.random.randint(m, size=batch_size) # not shown X_batch = scaled_housing_data_plus_bias[indices] # not shown y_batch = housing.target.reshape(-1, 1)[indices] # not shown return X_batch, y_batch with tf.name_scope(\"loss\") as scope: error = y_pred - y mse = tf.reduce_mean(tf.square(error), name=\"mse\") optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate) training_op = optimizer.minimize(mse) init = tf.global_variables_initializer() mse_summary = tf.summary.scalar('MSE', mse) file_writer = tf.summary.FileWriter(logdir, tf.get_default_graph()) n_epochs = 10 batch_size = 100 n_batches = int(np.ceil(m / batch_size)) with tf.Session() as sess: sess.run(init) for epoch in range(n_epochs): for batch_index in range(n_batches): X_batch, y_batch = fetch_batch(epoch, batch_index, batch_size) if batch_index % 10 == 0: summary_str = mse_summary.eval(feed_dict={X: X_batch, y: y_batch}) step = epoch * n_batches + batch_index file_writer.add_summary(summary_str, step) sess.run(training_op, feed_dict={X: X_batch, y: y_batch}) best_theta = theta.eval() file_writer.flush() file_writer.close() print(\"Best theta:\") print(best_theta)","title":"\u540d\u79f0\u4f5c\u7528\u57df"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_11","text":"\u5047\u8bbe\u60a8\u8981\u521b\u5efa\u4e00\u4e2a\u56fe\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u4e24\u4e2a\u6574\u6d41\u7ebf\u6027\u5355\u5143\uff08ReLU\uff09\u7684\u8f93\u51fa\u503c\u76f8\u52a0\u3002 ReLU \u8ba1\u7b97\u4e00\u4e2a\u8f93\u5165\u503c\u7684\u5bf9\u5e94\u7ebf\u6027\u51fd\u6570\u8f93\u51fa\u503c\uff0c\u5982\u679c\u4e3a\u6b63\uff0c\u5219\u8f93\u51fa\u8be5\u7ed3\u503c\uff0c\u5426\u5219\u4e3a 0\uff0c\u5982\u7b49\u5f0f 9-1 \u6240\u793a\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u505a\u8fd9\u4e2a\u5de5\u4f5c\uff0c\u4f46\u662f\u5b83\u662f\u76f8\u5f53\u91cd\u590d\u7684\uff1a n_features = 3 X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") w1 = tf.Variable(tf.random_normal((n_features, 1)), name=\"weights1\") w2 = tf.Variable(tf.random_normal((n_features, 1)), name=\"weights2\") b1 = tf.Variable(0.0, name=\"bias1\") b2 = tf.Variable(0.0, name=\"bias2\") z1 = tf.add(tf.matmul(X, w1), b1, name=\"z1\") z2 = tf.add(tf.matmul(X, w2), b2, name=\"z2\") relu1 = tf.maximum(z1, 0., name=\"relu1\") relu2 = tf.maximum(z1, 0., name=\"relu2\") output = tf.add(relu1, relu2, name=\"output\") \u8fd9\u6837\u7684\u91cd\u590d\u4ee3\u7801\u5f88\u96be\u7ef4\u62a4\uff0c\u5bb9\u6613\u51fa\u9519\uff08\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5305\u542b\u4e86\u4e00\u4e2a\u526a\u8d34\u9519\u8bef\uff0c\u4f60\u53d1\u73b0\u4e86\u5417\uff1f\uff09 \u5982\u679c\u4f60\u60f3\u6dfb\u52a0\u66f4\u591a\u7684 ReLU\uff0c\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002 \u5e78\u8fd0\u7684\u662f\uff0cTensorFlow \u53ef\u4ee5\u8ba9\u60a8\u4fdd\u6301 DRY\uff08\u4e0d\u8981\u91cd\u590d\u81ea\u5df1\uff09\uff1a\u53ea\u9700\u521b\u5efa\u4e00\u4e2a\u529f\u80fd\u6765\u6784\u5efa ReLU\u3002 \u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e94\u4e2a ReLU \u5e76\u8f93\u51fa\u5176\u603b\u548c\uff08\u6ce8\u610f\uff0c add_n() \u521b\u5efa\u4e00\u4e2a\u8ba1\u7b97\u5f20\u91cf\u5217\u8868\u4e4b\u548c\u7684\u64cd\u4f5c\uff09\uff1a def relu(X): w_shape = (int(X.get_shape()[1]), 1) w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") b = tf.Variable(0.0, name=\"bias\") z = tf.add(tf.matmul(X, w), b, name=\"z\") return tf.maximum(z, 0., name=\"relu\") n_features = 3 X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") relus = [relu(X) for i in range(5)] output = tf.add_n(relus, name=\"output\") \u8bf7\u6ce8\u610f\uff0c\u521b\u5efa\u8282\u70b9\u65f6\uff0cTensorFlow \u5c06\u68c0\u67e5\u5176\u540d\u79f0\u662f\u5426\u5df2\u5b58\u5728\uff0c\u5982\u679c\u5b83\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4f1a\u9644\u52a0\u4e00\u4e2a\u4e0b\u5212\u7ebf\uff0c\u540e\u8ddf\u4e00\u4e2a\u7d22\u5f15\uff0c\u4ee5\u4f7f\u8be5\u540d\u79f0\u662f\u552f\u4e00\u7684\u3002 \u56e0\u6b64\uff0c\u7b2c\u4e00\u4e2a ReLU \u5305\u542b\u540d\u4e3a weights \uff0c bias \uff0c z \u548c relu \u7684\u8282\u70b9\uff08\u52a0\u4e0a\u5176\u4ed6\u9ed8\u8ba4\u540d\u79f0\u7684\u66f4\u591a\u8282\u70b9\uff0c\u5982 MatMul \uff09; \u7b2c\u4e8c\u4e2a ReLU \u5305\u542b\u540d\u4e3a weights_1 \uff0c bias_1 \u7b49\u8282\u70b9\u7684\u8282\u70b9; \u7b2c\u4e09\u4e2a ReLU \u5305\u542b\u540d\u4e3a weights_2 \uff0c bias_2 \u7684\u8282\u70b9\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 TensorBoard \u8bc6\u522b\u8fd9\u6837\u7684\u7cfb\u5217\u5e76\u5c06\u5b83\u4eec\u6298\u53e0\u5728\u4e00\u8d77\u4ee5\u51cf\u5c11\u6df7\u4e71\uff08\u5982\u56fe 9-6 \u6240\u793a\uff09 \u4f7f\u7528\u540d\u79f0\u4f5c\u7528\u57df\uff0c\u60a8\u53ef\u4ee5\u4f7f\u56fe\u5f62\u66f4\u6e05\u6670\u3002 \u7b80\u5355\u5730\u5c06 relu() \u51fd\u6570\u7684\u6240\u6709\u5185\u5bb9\u79fb\u52a8\u5230\u540d\u79f0\u4f5c\u7528\u57df\u5185\u3002 \u56fe 9-7 \u663e\u793a\u4e86\u7ed3\u679c\u56fe\u3002 \u8bf7\u6ce8\u610f\uff0cTensorFlow \u8fd8\u901a\u8fc7\u9644\u52a0 _1 \uff0c _2 \u7b49\u6765\u63d0\u4f9b\u540d\u79f0\u4f5c\u7528\u57df\u7684\u552f\u4e00\u540d\u79f0\u3002 def relu(X): with tf.name_scope(\"relu\"): w_shape = (int(X.get_shape()[1]), 1) # not shown in the book w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, 0., name=\"max\") # not shown","title":"\u6a21\u5757\u6027"},{"location":"9.%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%90%E8%A1%8C_TensorFlow/#_12","text":"\u5982\u679c\u8981\u5728\u56fe\u5f62\u7684\u5404\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u5171\u4eab\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u9009\u9879\u662f\u9996\u5148\u521b\u5efa\u5b83\uff0c\u7136\u540e\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u9700\u8981\u5b83\u7684\u51fd\u6570\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u8981\u4f7f\u7528\u6240\u6709 ReLU \u7684\u5171\u4eab\u9608\u503c\u53d8\u91cf\u6765\u63a7\u5236 ReLU \u9608\u503c\uff08\u5f53\u524d\u786c\u7f16\u7801\u4e3a 0\uff09\u3002 \u60a8\u53ef\u4ee5\u5148\u521b\u5efa\u8be5\u53d8\u91cf\uff0c\u7136\u540e\u5c06\u5176\u4f20\u9012\u7ed9 relu() \u51fd\u6570\uff1a reset_graph() def relu(X, threshold): with tf.name_scope(\"relu\"): w_shape = (int(X.get_shape()[1]), 1) # not shown in the book w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, threshold, name=\"max\") threshold = tf.Variable(0.0, name=\"threshold\") X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") relus = [relu(X, threshold) for i in range(5)] output = tf.add_n(relus, name=\"output\") \u8fd9\u5f88\u597d:\u73b0\u5728\u60a8\u53ef\u4ee5\u4f7f\u7528\u9608\u503c\u53d8\u91cf\u6765\u63a7\u5236\u6240\u6709 ReLU \u7684\u9608\u503c\u3002\u4f46\u662f\uff0c\u5982\u679c\u6709\u8bb8\u591a\u5171\u4eab\u53c2\u6570\uff0c\u6bd4\u5982\u8fd9\u4e00\u9879\uff0c\u90a3\u4e48\u5fc5\u987b\u4e00\u76f4\u5c06\u5b83\u4eec\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u8fd9\u5c06\u662f\u975e\u5e38\u75db\u82e6\u7684\u3002\u8bb8\u591a\u4eba\u521b\u5efa\u4e86\u4e00\u4e2a\u5305\u542b\u6a21\u578b\u4e2d\u6240\u6709\u53d8\u91cf\u7684 Python \u5b57\u5178\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9\u6bcf\u4e2a\u51fd\u6570\u3002\u53e6\u4e00\u4e9b\u5219\u4e3a\u6bcf\u4e2a\u6a21\u5757\u521b\u5efa\u4e00\u4e2a\u7c7b\uff08\u4f8b\u5982\uff1a\u4e00\u4e2a\u4f7f\u7528\u7c7b\u53d8\u91cf\u6765\u5904\u7406\u5171\u4eab\u53c2\u6570\u7684 ReLU \u7c7b\uff09\u3002\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u5c06\u5171\u4eab\u53d8\u91cf\u8bbe\u7f6e\u4e3a relu() \u51fd\u6570\u7684\u5c5e\u6027\uff0c\u5982\u4e0b\u6240\u793a: def relu(X): with tf.name_scope(\"relu\"): if not hasattr(relu, \"threshold\"): relu.threshold = tf.Variable(0.0, name=\"threshold\") w_shape = int(X.get_shape()[1]), 1 # not shown in the book w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, relu.threshold, name=\"max\") TensorFlow \u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u9009\u9879\uff0c\u8fd9\u5c06\u63d0\u4f9b\u6bd4\u4ee5\u524d\u7684\u89e3\u51b3\u65b9\u6848\u7a0d\u5fae\u66f4\u6e05\u6d01\u548c\u66f4\u6a21\u5757\u5316\u7684\u4ee3\u7801\u3002\u9996\u5148\u8981\u660e\u767d\u4e00\u70b9\uff0c\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u5f88\u5201\u94bb\u96be\u61c2\uff0c\u4f46\u662f\u7531\u4e8e\u5b83\u5728 TensorFlow \u4e2d\u4f7f\u7528\u4e86\u5f88\u591a\uff0c\u6240\u4ee5\u503c\u5f97\u6211\u4eec\u53bb\u6df1\u5165\u7ec6\u8282\u3002 \u8fd9\u4e2a\u60f3\u6cd5\u662f\u4f7f\u7528 get_variable() \u51fd\u6570\u6765\u521b\u5efa\u5171\u4eab\u53d8\u91cf\uff0c\u5982\u679c\u5b83\u8fd8\u4e0d\u5b58\u5728\uff0c\u6216\u8005\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u590d\u7528\u5b83\u3002 \u6240\u9700\u7684\u884c\u4e3a\uff08\u521b\u5efa\u6216\u590d\u7528\uff09\u7531\u5f53\u524d variable_scope() \u7684\u5c5e\u6027\u63a7\u5236\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a relu/threshold \u7684\u53d8\u91cf\uff08\u4f5c\u4e3a\u6807\u91cf\uff0c\u56e0\u4e3a shape = () \uff0c\u5e76\u4f7f\u7528 0.0 \u4f5c\u4e3a\u521d\u59cb\u503c\uff09\uff1a with tf.variable_scope(\"relu\"): threshold = tf.get_variable(\"threshold\", shape=(), initializer=tf.constant_initializer(0.0)) \u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u53d8\u91cf\u5df2\u7ecf\u901a\u8fc7\u8f83\u65e9\u7684 get_variable() \u8c03\u7528\u521b\u5efa\uff0c\u5219\u6b64\u4ee3\u7801\u5c06\u5f15\u53d1\u5f02\u5e38\u3002 \u8fd9\u79cd\u884c\u4e3a\u53ef\u4ee5\u9632\u6b62\u9519\u8bef\u5730\u590d\u7528\u53d8\u91cf\u3002\u5982\u679c\u8981\u590d\u7528\u53d8\u91cf\uff0c\u5219\u9700\u8981\u901a\u8fc7\u5c06\u53d8\u91cf scope \u7684\u590d\u7528\u5c5e\u6027\u8bbe\u7f6e\u4e3a True \u6765\u660e\u786e\u8bf4\u660e\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u4e0d\u5fc5\u6307\u5b9a\u5f62\u72b6\u6216\u521d\u59cb\u503c\uff09\uff1a with tf.variable_scope(\"relu\", reuse=True): threshold = tf.get_variable(\"threshold\") \u8be5\u4ee3\u7801\u5c06\u83b7\u53d6\u73b0\u6709\u7684 relu/threshold \u53d8\u91cf\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u5f15\u53d1\u5f02\u5e38\uff08\u5982\u679c\u6ca1\u6709\u4f7f\u7528 get_variable() \u521b\u5efa\uff09\u3002 \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 scope \u7684 reuse_variables() \u65b9\u6cd5\u5c06\u590d\u7528\u5c5e\u6027\u8bbe\u7f6e\u4e3a true \uff1a with tf.variable_scope(\"relu\") as scope: scope.reuse_variables() threshold = tf.get_variable(\"threshold\") \u4e00\u65e6\u91cd\u65b0\u4f7f\u7528\u8bbe\u7f6e\u4e3a True \uff0c\u5b83\u5c06\u4e0d\u80fd\u5728\u5757\u5185\u8bbe\u7f6e\u4e3a False \u3002 \u800c\u4e14\uff0c\u5982\u679c\u5728\u5176\u4e2d\u5b9a\u4e49\u5176\u4ed6\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u5b83\u4eec\u5c06\u81ea\u52a8\u7ee7\u627f reuse = True \u3002 \u6700\u540e\uff0c\u53ea\u6709\u901a\u8fc7 get_variable() \u521b\u5efa\u7684\u53d8\u91cf\u624d\u53ef\u4ee5\u8fd9\u6837\u590d\u7528. \u73b0\u5728\uff0c\u60a8\u62e5\u6709\u6240\u6709\u9700\u8981\u7684\u90e8\u5206\uff0c\u4f7f relu() \u51fd\u6570\u8bbf\u95ee\u9608\u503c\u53d8\u91cf\uff0c\u800c\u4e0d\u5fc5\u5c06\u5176\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff1a def relu(X): with tf.variable_scope(\"relu\", reuse=True): threshold = tf.get_variable(\"threshold\") w_shape = int(X.get_shape()[1]), 1 # not shown w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, threshold, name=\"max\") X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") with tf.variable_scope(\"relu\"): threshold = tf.get_variable(\"threshold\", shape=(), initializer=tf.constant_initializer(0.0)) relus = [relu(X) for relu_index in range(5)] output = tf.add_n(relus, name=\"output\") \u8be5\u4ee3\u7801\u9996\u5148\u5b9a\u4e49 relu() \u51fd\u6570\uff0c\u7136\u540e\u521b\u5efa relu/threshold \u53d8\u91cf\uff08\u4f5c\u4e3a\u6807\u91cf\uff0c\u7a0d\u540e\u5c06\u88ab\u521d\u59cb\u5316\u4e3a 0.0\uff09\uff0c\u5e76\u901a\u8fc7\u8c03\u7528 relu() \u51fd\u6570\u6784\u5efa\u4e94\u4e2aReLU\u3002 relu() \u51fd\u6570\u590d\u7528 relu/threshold \u53d8\u91cf\uff0c\u5e76\u521b\u5efa\u5176\u4ed6 ReLU \u8282\u70b9\u3002 \u4f7f\u7528 get_variable() \u521b\u5efa\u7684\u53d8\u91cf\u59cb\u7ec8\u4ee5\u5176 variable_scope \u7684\u540d\u79f0\u4f5c\u4e3a\u524d\u7f00\u547d\u540d\uff08\u4f8b\u5982\uff0c relu/threshold \uff09\uff0c\u4f46\u5bf9\u4e8e\u6240\u6709\u5176\u4ed6\u8282\u70b9\uff08\u5305\u62ec\u4f7f\u7528 tf.Variable() \u521b\u5efa\u7684\u53d8\u91cf\uff09\uff0c\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u884c\u4e3a\u5c31\u50cf\u4e00\u4e2a\u65b0\u540d\u79f0\u7684\u4f5c\u7528\u57df\u3002 \u7279\u522b\u662f\uff0c\u5982\u679c\u5df2\u7ecf\u521b\u5efa\u4e86\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u540d\u79f0\u4f5c\u7528\u57df\uff0c\u5219\u6dfb\u52a0\u540e\u7f00\u4ee5\u4f7f\u8be5\u540d\u79f0\u662f\u552f\u4e00\u7684\u3002 \u4f8b\u5982\uff0c\u5728\u524d\u9762\u7684\u4ee3\u7801\u4e2d\u521b\u5efa\u7684\u6240\u6709\u8282\u70b9\uff08\u9608\u503c\u53d8\u91cf\u9664\u5916\uff09\u7684\u540d\u79f0\u524d\u7f00\u4e3a relu_1/ \u5230 relu_5/ \uff0c\u5982\u56fe 9-8 \u6240\u793a\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u5fc5\u987b\u5728 relu() \u51fd\u6570\u4e4b\u5916\u5b9a\u4e49\u9608\u503c\u53d8\u91cf\uff0c\u5176\u4e2d ReLU \u4ee3\u7801\u7684\u5176\u4f59\u90e8\u5206\u90fd\u9a7b\u7559\u5728\u5176\u4e2d\u3002 \u8981\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u5728 relu() \u51fd\u6570\u4e2d\u521b\u5efa\u9608\u503c\u53d8\u91cf\uff0c\u7136\u540e\u5728\u540e\u7eed\u8c03\u7528\u4e2d\u91cd\u65b0\u4f7f\u7528\u3002 \u73b0\u5728\uff0c relu() \u51fd\u6570\u4e0d\u5fc5\u62c5\u5fc3\u540d\u79f0\u4f5c\u7528\u57df\u6216\u53d8\u91cf\u5171\u4eab\uff1a\u5b83\u53ea\u662f\u8c03\u7528 get_variable() \uff0c\u5b83\u5c06\u521b\u5efa\u6216\u590d\u7528\u9608\u503c\u53d8\u91cf\uff08\u5b83\u4e0d\u9700\u8981\u77e5\u9053\u662f\u54ea\u79cd\u60c5\u51b5\uff09\u3002 \u5176\u4f59\u7684\u4ee3\u7801\u8c03\u7528 relu() \u4e94\u6b21\uff0c\u786e\u4fdd\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u8bbe\u7f6e reuse = False \uff0c\u800c\u5bf9\u4e8e\u5176\u4ed6\u8c03\u7528\u6765\u8bf4\uff0c reuse = True \u3002 def relu(X): threshold = tf.get_variable(\"threshold\", shape=(), initializer=tf.constant_initializer(0.0)) w_shape = (int(X.get_shape()[1]), 1) # not shown in the book w = tf.Variable(tf.random_normal(w_shape), name=\"weights\") # not shown b = tf.Variable(0.0, name=\"bias\") # not shown z = tf.add(tf.matmul(X, w), b, name=\"z\") # not shown return tf.maximum(z, threshold, name=\"max\") X = tf.placeholder(tf.float32, shape=(None, n_features), name=\"X\") relus = [] for relu_index in range(5): with tf.variable_scope(\"relu\", reuse=(relu_index >= 1)) as scope: relus.append(relu(X)) output = tf.add_n(relus, name=\"output\") \u751f\u6210\u7684\u56fe\u5f62\u4e0e\u4e4b\u524d\u7565\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a\u5171\u4eab\u53d8\u91cf\u5b58\u5728\u4e8e\u7b2c\u4e00\u4e2a ReLU \u4e2d\uff08\u89c1\u56fe 9-9\uff09\u3002 TensorFlow \u7684\u8fd9\u4e2a\u4ecb\u7ecd\u5230\u6b64\u7ed3\u675f\u3002 \u6211\u4eec\u5c06\u5728\u4ee5\u4e0b\u7ae0\u8282\u4e2d\u8ba8\u8bba\u66f4\u591a\u9ad8\u7ea7\u8bfe\u9898\uff0c\u7279\u522b\u662f\u4e0e\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u548c\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\u76f8\u5173\u7684\u8bb8\u591a\u64cd\u4f5c\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u961f\u5217\uff0c\u591a\u4e2a GPU \u4ee5\u53ca\u5982\u4f55\u5c06 TensorFlow \u6269\u5c55\u5230\u591a\u53f0\u670d\u52a1\u5668\u3002","title":"\u5171\u4eab\u53d8\u91cf"},{"location":"C.SVM_%E5%AF%B9%E5%81%B6%E9%97%AE%E9%A2%98/","text":"\u9644\u5f55 C\u3001SVM \u5bf9\u5076\u95ee\u9898 \u4e3a\u4e86\u7406\u89e3\u5bf9\u5076\u6027\uff0c\u4f60\u9996\u5148\u5f97\u7406\u89e3\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u3002\u5b83\u57fa\u672c\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u6709\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u65e0\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff0c\u5176\u65b9\u6cd5\u662f\u5c06\u7ea6\u675f\u6761\u4ef6\u79fb\u52a8\u5230\u76ee\u6807\u51fd\u6570\u4e2d\u53bb\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4f8b\u5982\u8981\u627e\u5230\u5408\u9002\u7684 \u548c \u4f7f\u5f97\u51fd\u6570 \u6700\u5c0f\u5316\uff0c\u4e14\u5176\u7ea6\u675f\u6761\u4ef6\u662f\u4e00\u4e2a\u7b49\u5f0f\u7ea6\u675f\uff1a \u3002\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u79f0\u4e3a \u62c9\u683c\u6717\u65e5\u51fd\u6570 \uff1a \u3002\u6bcf\u4e2a\u7ea6\u675f\u6761\u4ef6\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u53ea\u6709\u4e00\u4e2a\uff09\u4e0e\u65b0\u7684\u53d8\u91cf\uff08\u79f0\u4e3a\u62c9\u683c\u6717\u65e5\u4e58\u6570\uff09\u76f8\u4e58\uff0c\u4f5c\u4e3a\u539f\u76ee\u6807\u51fd\u6570\u7684\u51cf\u6570\u3002 Joseph-Louis Lagrange \u5927\u725b\u8bc1\u660e\u4e86\u5982\u679c \u662f\u539f\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u7684\u89e3\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a \uff0c\u4f7f\u5f97 \u662f\u62c9\u683c\u6717\u65e5\u51fd\u6570\u7684\u9a7b\u70b9\uff08\u9a7b\u70b9\u6307\u7684\u662f\uff0c\u5728\u8be5\u70b9\u5904\uff0c\u8be5\u51fd\u6570\u6240\u6709\u7684\u504f\u5bfc\u6570\u5747\u4e3a 0\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u62c9\u683c\u6717\u65e5\u51fd\u6570 \u5173\u4e8e \u4ee5\u53ca \u7684\u504f\u5bfc\u6570\uff1b\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u90a3\u4e9b\u504f\u5bfc\u6570\u5747\u4e3a 0 \u7684\u9a7b\u70b9\uff1b\u6700\u540e\u539f\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u7684\u89e3\uff08\u5982\u679c\u5b58\u5728\uff09\u4e00\u5b9a\u5728\u8fd9\u4e9b\u9a7b\u70b9\u91cc\u9762\u3002 \u5728\u4e0a\u8ff0\u4f8b\u5b50\u91cc\uff0c\u504f\u5bfc\u6570\u4e3a \u5f53\u8fd9\u4e9b\u504f\u5bfc\u6570\u5747\u4e3a 0 \u65f6\uff0c\u5373 \uff0c\u5373\u53ef\u5f97 \u3002\u8fd9\u662f\u552f\u4e00\u4e00\u4e2a\u9a7b\u70b9\uff0c\u90a3\u5b83\u4e00\u5b9a\u662f\u539f\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u7684\u89e3\u3002\u7136\u800c\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u4ec5\u5e94\u7528\u4e8e\u7b49\u5f0f\u7ea6\u675f\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u5728\u67d0\u4e9b\u6b63\u5219\u6027\u6761\u4ef6\u4e0b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u53ef\u88ab\u4e00\u822c\u5316\u5e94\u7528\u4e8e\u4e0d\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\uff08\u4f8b\u5982\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c \uff09\u3002\u5982\u4e0b\u516c\u5f0f C-1 \uff0c\u7ed9\u4e86 SVM \u786c\u95f4\u9694\u95ee\u9898\u65f6\u7684\u4e00\u822c\u5316\u62c9\u683c\u6717\u65e5\u51fd\u6570\u3002\u5728\u8be5\u516c\u5f0f\u4e2d\uff0c \u662f KKT \u4e58\u5b50\uff0c\u5b83\u5fc5\u987b\u5927\u4e8e\u6216\u7b49\u4e8e 0\u3002 \u8bd1\u8005\u6ce8 \u662f \u6291\u6216 \uff0c\u53d6\u51b3\u4e8e\u62c9\u683c\u6717\u65e5\u51fd\u6570\u7684\u5199\u6cd5\uff0c\u4ee5\u53ca\u539f\u76ee\u6807\u51fd\u6570\u51fd\u6570\u6700\u5927\u5316\u6291\u6216\u6700\u5c0f\u5316\u3002 \u5c31\u50cf\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u4e0a\u8ff0\u5f0f\u5b50\u7684\u504f\u5bfc\u6570\u3001\u5b9a\u4f4d\u9a7b\u70b9\u3002\u5982\u679c\u8be5\u539f\u95ee\u9898\u5b58\u5728\u4e00\u4e2a\u89e3\uff0c\u90a3\u5b83\u4e00\u5b9a\u5728\u9a7b\u70b9 \u4e4b\u4e2d\uff0c\u4e14\u9075\u5faa KKT \u6761\u4ef6\uff1a \u9075\u5faa\u539f\u95ee\u9898\u7684\u7ea6\u675f\uff1a , \u5bf9\u4e8e \u9075\u5faa\u73b0\u95ee\u9898\u91cc\u7684\u7ea6\u675f\uff0c\u5373 \u6216\u8005\u7b2c i \u4e2a\u7ea6\u675f\u6761\u4ef6\u662f\u79ef\u6781\u7ea6\u675f\uff0c\u610f\u5473\u7740\u8be5\u7b49\u5f0f\u6210\u7acb\uff1a \u3002\u8fd9\u4e2a\u6761\u4ef6\u53eb\u505a \u4e92\u8865\u677e\u5f1b\u6761\u4ef6\u3002\u5b83\u6697\u793a\u4e86 \u548c\u7b2c i \u4e2a\u6837\u672c\u4f4d\u4e8e SVM \u95f4\u9694\u7684\u8fb9\u754c\u4e0a\uff08\u8be5\u6837\u672c\u662f\u652f\u6301\u5411\u91cf\uff09\u3002 \u6ce8\u610f KKT \u6761\u4ef6\u662f\u786e\u5b9a\u9a7b\u70b9\u662f\u5426\u4e3a\u539f\u95ee\u9898\u89e3\u7684\u5fc5\u8981\u6761\u4ef6\u3002\u5728\u67d0\u4e9b\u6761\u4ef6\u4e0b\uff0cKKT \u6761\u4ef6\u4e5f\u662f\u5145\u5206\u6761\u4ef6\u3002\u5e78\u8fd0\u7684\u662f\uff0cSVM \u4f18\u5316\u95ee\u9898\u78b0\u5de7\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\uff0c\u6240\u4ee5\u4efb\u4f55\u6ee1\u8db3 KKT \u6761\u4ef6\u7684\u9a7b\u70b9\u4fdd\u8bc1\u662f\u539f\u95ee\u9898\u7684\u89e3\u3002 \u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u4e0a\u8ff0\u4e00\u822c\u5316\u62c9\u683c\u6717\u65e5\u51fd\u6570\u5173\u4e8e w \u548c b \u7684\u504f\u5bfc\u6570\uff0c\u5982\u516c\u5f0f C-2\u3002 \u4ee4\u4e0a\u8ff0\u504f\u5bfc\u6570\u4e3a 0\uff0c\u53ef\u5f97\u5230\u516c\u5f0f C-3\u3002 \u5982\u679c\u6211\u4eec\u628a\u4e0a\u8ff0\u5f0f\u5b50\u4ee3\u5165\u5230\u4e00\u822c\u5316\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff08\u516c\u5f0f C-1\uff09\u4e2d\uff0c\u67d0\u4e9b\u9879\u4f1a\u6d88\u5931\uff0c\u4ece\u800c\u5f97\u5230\u516c\u5f0f C-4\uff0c\u5e76\u79f0\u4e4b\u4e3a\u539f\u95ee\u9898\u7684\u5bf9\u5076\u5f62\u5f0f\u3002 \u73b0\u5728\u8be5\u5bf9\u5076\u5f62\u5f0f\u7684\u76ee\u6807\u662f\u627e\u5230\u5408\u9002\u7684\u5411\u91cf \uff0c\u4f7f\u5f97\u8be5\u51fd\u6570 \u6700\u5c0f\u5316\uff0c\u4e14 \u3002\u73b0\u5728\u8fd9\u4e2a\u6709\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u6b63\u662f\u6211\u4eec\u82e6\u82e6\u8ffd\u5bfb\u7684\u5bf9\u5076\u95ee\u9898\u3002 \u4e00\u65e6\u4f60\u627e\u5230\u4e86\u6700\u4f18\u7684 \uff0c\u4f60\u53ef\u4ee5\u5229\u7528\u516c\u5f0f C-3 \u7b2c\u4e00\u884c\u8ba1\u7b97 \u3002\u4e3a\u4e86\u8ba1\u7b97 \uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u652f\u6301\u5411\u91cf\u7684\u5df2\u77e5\u6761\u4ef6 \uff0c\u5f53\u7b2c k \u4e2a\u6837\u672c\u662f\u652f\u6301\u5411\u91cf\u65f6\uff08\u5373\u5b83\u5bf9\u5e94\u7684 \uff09\uff0c\u6b64\u65f6\u4f7f\u7528\u5b83\u8ba1\u7b97 \u3002\u5bf9\u4e86\uff0c\u6211\u4eec\u66f4\u559c\u6b22\u5229\u7528\u6240\u6709\u652f\u6301\u5411\u91cf\u8ba1\u7b97\u4e00\u4e2a\u5e73\u5747\u503c\uff0c\u4ee5\u83b7\u5f97\u66f4\u7a33\u5b9a\u548c\u66f4\u51c6\u786e\u7684\u7ed3\u679c\uff0c\u5982\u516c\u5f0f C-5\u3002","title":"C.SVM_\u5bf9\u5076\u95ee\u9898"},{"location":"C.SVM_%E5%AF%B9%E5%81%B6%E9%97%AE%E9%A2%98/#csvm","text":"\u4e3a\u4e86\u7406\u89e3\u5bf9\u5076\u6027\uff0c\u4f60\u9996\u5148\u5f97\u7406\u89e3\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u3002\u5b83\u57fa\u672c\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u6709\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u65e0\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff0c\u5176\u65b9\u6cd5\u662f\u5c06\u7ea6\u675f\u6761\u4ef6\u79fb\u52a8\u5230\u76ee\u6807\u51fd\u6570\u4e2d\u53bb\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4f8b\u5982\u8981\u627e\u5230\u5408\u9002\u7684 \u548c \u4f7f\u5f97\u51fd\u6570 \u6700\u5c0f\u5316\uff0c\u4e14\u5176\u7ea6\u675f\u6761\u4ef6\u662f\u4e00\u4e2a\u7b49\u5f0f\u7ea6\u675f\uff1a \u3002\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u79f0\u4e3a \u62c9\u683c\u6717\u65e5\u51fd\u6570 \uff1a \u3002\u6bcf\u4e2a\u7ea6\u675f\u6761\u4ef6\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u53ea\u6709\u4e00\u4e2a\uff09\u4e0e\u65b0\u7684\u53d8\u91cf\uff08\u79f0\u4e3a\u62c9\u683c\u6717\u65e5\u4e58\u6570\uff09\u76f8\u4e58\uff0c\u4f5c\u4e3a\u539f\u76ee\u6807\u51fd\u6570\u7684\u51cf\u6570\u3002 Joseph-Louis Lagrange \u5927\u725b\u8bc1\u660e\u4e86\u5982\u679c \u662f\u539f\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u7684\u89e3\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a \uff0c\u4f7f\u5f97 \u662f\u62c9\u683c\u6717\u65e5\u51fd\u6570\u7684\u9a7b\u70b9\uff08\u9a7b\u70b9\u6307\u7684\u662f\uff0c\u5728\u8be5\u70b9\u5904\uff0c\u8be5\u51fd\u6570\u6240\u6709\u7684\u504f\u5bfc\u6570\u5747\u4e3a 0\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u62c9\u683c\u6717\u65e5\u51fd\u6570 \u5173\u4e8e \u4ee5\u53ca \u7684\u504f\u5bfc\u6570\uff1b\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u90a3\u4e9b\u504f\u5bfc\u6570\u5747\u4e3a 0 \u7684\u9a7b\u70b9\uff1b\u6700\u540e\u539f\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u7684\u89e3\uff08\u5982\u679c\u5b58\u5728\uff09\u4e00\u5b9a\u5728\u8fd9\u4e9b\u9a7b\u70b9\u91cc\u9762\u3002 \u5728\u4e0a\u8ff0\u4f8b\u5b50\u91cc\uff0c\u504f\u5bfc\u6570\u4e3a \u5f53\u8fd9\u4e9b\u504f\u5bfc\u6570\u5747\u4e3a 0 \u65f6\uff0c\u5373 \uff0c\u5373\u53ef\u5f97 \u3002\u8fd9\u662f\u552f\u4e00\u4e00\u4e2a\u9a7b\u70b9\uff0c\u90a3\u5b83\u4e00\u5b9a\u662f\u539f\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u7684\u89e3\u3002\u7136\u800c\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u4ec5\u5e94\u7528\u4e8e\u7b49\u5f0f\u7ea6\u675f\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u5728\u67d0\u4e9b\u6b63\u5219\u6027\u6761\u4ef6\u4e0b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u53ef\u88ab\u4e00\u822c\u5316\u5e94\u7528\u4e8e\u4e0d\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\uff08\u4f8b\u5982\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff0c \uff09\u3002\u5982\u4e0b\u516c\u5f0f C-1 \uff0c\u7ed9\u4e86 SVM \u786c\u95f4\u9694\u95ee\u9898\u65f6\u7684\u4e00\u822c\u5316\u62c9\u683c\u6717\u65e5\u51fd\u6570\u3002\u5728\u8be5\u516c\u5f0f\u4e2d\uff0c \u662f KKT \u4e58\u5b50\uff0c\u5b83\u5fc5\u987b\u5927\u4e8e\u6216\u7b49\u4e8e 0\u3002 \u8bd1\u8005\u6ce8 \u662f \u6291\u6216 \uff0c\u53d6\u51b3\u4e8e\u62c9\u683c\u6717\u65e5\u51fd\u6570\u7684\u5199\u6cd5\uff0c\u4ee5\u53ca\u539f\u76ee\u6807\u51fd\u6570\u51fd\u6570\u6700\u5927\u5316\u6291\u6216\u6700\u5c0f\u5316\u3002 \u5c31\u50cf\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u4e0a\u8ff0\u5f0f\u5b50\u7684\u504f\u5bfc\u6570\u3001\u5b9a\u4f4d\u9a7b\u70b9\u3002\u5982\u679c\u8be5\u539f\u95ee\u9898\u5b58\u5728\u4e00\u4e2a\u89e3\uff0c\u90a3\u5b83\u4e00\u5b9a\u5728\u9a7b\u70b9 \u4e4b\u4e2d\uff0c\u4e14\u9075\u5faa KKT \u6761\u4ef6\uff1a \u9075\u5faa\u539f\u95ee\u9898\u7684\u7ea6\u675f\uff1a , \u5bf9\u4e8e \u9075\u5faa\u73b0\u95ee\u9898\u91cc\u7684\u7ea6\u675f\uff0c\u5373 \u6216\u8005\u7b2c i \u4e2a\u7ea6\u675f\u6761\u4ef6\u662f\u79ef\u6781\u7ea6\u675f\uff0c\u610f\u5473\u7740\u8be5\u7b49\u5f0f\u6210\u7acb\uff1a \u3002\u8fd9\u4e2a\u6761\u4ef6\u53eb\u505a \u4e92\u8865\u677e\u5f1b\u6761\u4ef6\u3002\u5b83\u6697\u793a\u4e86 \u548c\u7b2c i \u4e2a\u6837\u672c\u4f4d\u4e8e SVM \u95f4\u9694\u7684\u8fb9\u754c\u4e0a\uff08\u8be5\u6837\u672c\u662f\u652f\u6301\u5411\u91cf\uff09\u3002 \u6ce8\u610f KKT \u6761\u4ef6\u662f\u786e\u5b9a\u9a7b\u70b9\u662f\u5426\u4e3a\u539f\u95ee\u9898\u89e3\u7684\u5fc5\u8981\u6761\u4ef6\u3002\u5728\u67d0\u4e9b\u6761\u4ef6\u4e0b\uff0cKKT \u6761\u4ef6\u4e5f\u662f\u5145\u5206\u6761\u4ef6\u3002\u5e78\u8fd0\u7684\u662f\uff0cSVM \u4f18\u5316\u95ee\u9898\u78b0\u5de7\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\uff0c\u6240\u4ee5\u4efb\u4f55\u6ee1\u8db3 KKT \u6761\u4ef6\u7684\u9a7b\u70b9\u4fdd\u8bc1\u662f\u539f\u95ee\u9898\u7684\u89e3\u3002 \u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u4e0a\u8ff0\u4e00\u822c\u5316\u62c9\u683c\u6717\u65e5\u51fd\u6570\u5173\u4e8e w \u548c b \u7684\u504f\u5bfc\u6570\uff0c\u5982\u516c\u5f0f C-2\u3002 \u4ee4\u4e0a\u8ff0\u504f\u5bfc\u6570\u4e3a 0\uff0c\u53ef\u5f97\u5230\u516c\u5f0f C-3\u3002 \u5982\u679c\u6211\u4eec\u628a\u4e0a\u8ff0\u5f0f\u5b50\u4ee3\u5165\u5230\u4e00\u822c\u5316\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff08\u516c\u5f0f C-1\uff09\u4e2d\uff0c\u67d0\u4e9b\u9879\u4f1a\u6d88\u5931\uff0c\u4ece\u800c\u5f97\u5230\u516c\u5f0f C-4\uff0c\u5e76\u79f0\u4e4b\u4e3a\u539f\u95ee\u9898\u7684\u5bf9\u5076\u5f62\u5f0f\u3002 \u73b0\u5728\u8be5\u5bf9\u5076\u5f62\u5f0f\u7684\u76ee\u6807\u662f\u627e\u5230\u5408\u9002\u7684\u5411\u91cf \uff0c\u4f7f\u5f97\u8be5\u51fd\u6570 \u6700\u5c0f\u5316\uff0c\u4e14 \u3002\u73b0\u5728\u8fd9\u4e2a\u6709\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u6b63\u662f\u6211\u4eec\u82e6\u82e6\u8ffd\u5bfb\u7684\u5bf9\u5076\u95ee\u9898\u3002 \u4e00\u65e6\u4f60\u627e\u5230\u4e86\u6700\u4f18\u7684 \uff0c\u4f60\u53ef\u4ee5\u5229\u7528\u516c\u5f0f C-3 \u7b2c\u4e00\u884c\u8ba1\u7b97 \u3002\u4e3a\u4e86\u8ba1\u7b97 \uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u652f\u6301\u5411\u91cf\u7684\u5df2\u77e5\u6761\u4ef6 \uff0c\u5f53\u7b2c k \u4e2a\u6837\u672c\u662f\u652f\u6301\u5411\u91cf\u65f6\uff08\u5373\u5b83\u5bf9\u5e94\u7684 \uff09\uff0c\u6b64\u65f6\u4f7f\u7528\u5b83\u8ba1\u7b97 \u3002\u5bf9\u4e86\uff0c\u6211\u4eec\u66f4\u559c\u6b22\u5229\u7528\u6240\u6709\u652f\u6301\u5411\u91cf\u8ba1\u7b97\u4e00\u4e2a\u5e73\u5747\u503c\uff0c\u4ee5\u83b7\u5f97\u66f4\u7a33\u5b9a\u548c\u66f4\u51c6\u786e\u7684\u7ed3\u679c\uff0c\u5982\u516c\u5f0f C-5\u3002","title":"\u9644\u5f55 C\u3001SVM \u5bf9\u5076\u95ee\u9898"},{"location":"D.%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/","text":"\u9644\u5f55 D\u3001\u81ea\u52a8\u5fae\u5206 \u8fd9\u4e2a\u9644\u5f55\u89e3\u91ca\u4e86 TensorFlow \u7684\u81ea\u52a8\u5fae\u5206\u529f\u80fd\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5b83\u4e0e\u5176\u4ed6\u89e3\u51b3\u65b9\u6848\u7684\u5bf9\u6bd4\u3002 \u5047\u5b9a\u4f60\u5b9a\u4e49\u4e86\u51fd\u6570 \uff0c\u9700\u8981\u5f97\u5230\u5b83\u7684\u504f\u5bfc\u6570 \u548c \uff0c\u4ee5\u7528\u4e8e\u68af\u5ea6\u4e0b\u964d\u6216\u8005\u5176\u4ed6\u4f18\u5316\u7b97\u6cd5\u3002\u4f60\u7684\u53ef\u9009\u65b9\u6848\u6709\u624b\u52a8\u5fae\u5206\u6cd5\uff0c\u7b26\u53f7\u5fae\u5206\u6cd5\uff0c\u6570\u503c\u5fae\u5206\u6cd5\uff0c\u524d\u5411\u81ea\u52a8\u5fae\u5206\uff0c\u548c\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u3002TensorFlow \u5b9e\u73b0\u7684\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u6cd5\u3002\u6211\u4eec\u6765\u770b\u770b\u6bcf\u79cd\u65b9\u6848\u3002 \u624b\u52a8\u5fae\u5206\u6cd5 \u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f\u62ff\u8d77\u4e00\u76f4\u7b14\u548c\u4e00\u5f20\u7eb8\uff0c\u4f7f\u7528\u4f60\u7684\u4ee3\u6570\u77e5\u8bc6\u53bb\u624b\u52a8\u7684\u6c42\u504f\u5bfc\u6570\u3002\u5bf9\u4e8e\u5df2\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u6c42\u5b83\u7684\u504f\u5bfc\u5e76\u4e0d\u592a\u56f0\u96be\u3002\u4f60\u9700\u8981\u4f7f\u7528\u5982\u4e0b 5 \u6761\u89c4\u5219\uff1a \u5e38\u6570\u7684\u5bfc\u6570\u4e3a 0\u3002 \u7684\u5bfc\u6570\u4e3a \uff0c \u4e3a\u5e38\u6570\u3002 \u7684\u5bfc\u6570\u662f \u51fd\u6570\u7684\u548c\u7684\u5bfc\u6570\uff0c\u7b49\u4e8e\u51fd\u6570\u7684\u5bfc\u6570\u7684\u548c \u4e58\u4ee5\u51fd\u6570\uff0c\u518d\u6c42\u5bfc\uff0c\u7b49\u4e8e \u4e58\u4ee5\u51fd\u6570\u7684\u5bfc\u6570 \u4ece\u4e0a\u8ff0\u8fd9\u4e9b\u89c4\u5219\uff0c\u53ef\u5f97\u5230\u516c\u5f0f D-1\u3002 \u8fd9\u4e2a\u79cd\u65b9\u6cd5\u5e94\u7528\u4e8e\u66f4\u590d\u6742\u51fd\u6570\u65f6\u5c06\u53d8\u5f97\u975e\u5e38\u7f57\u55e6\uff0c\u5e76\u4e14\u6709\u53ef\u80fd\u51fa\u9519\u3002\u597d\u6d88\u606f\u662f\uff0c\u50cf\u521a\u624d\u6211\u4eec\u505a\u7684\u6c42\u6570\u5b66\u5f0f\u5b50\u7684\u504f\u5bfc\u6570\u53ef\u4ee5\u88ab\u81ea\u52a8\u5316\uff0c\u901a\u8fc7\u4e00\u4e2a\u79f0\u4e3a\u7b26\u53f7\u5fae\u5206\u7684\u8fc7\u7a0b\u3002 \u7b26\u53f7\u5fae\u5206 \u56fe D-1 \u5c55\u793a\u4e86\u7b26\u53f7\u5fae\u5206\u662f\u5982\u4f55\u8fd0\u884c\u5728\u76f8\u5f53\u7b80\u5355\u7684\u51fd\u6570\u4e0a\u7684\uff0c \u3002\u8be5\u51fd\u6570\u7684\u8ba1\u7b97\u56fe\u5982\u56fe\u7684\u5de6\u8fb9\u6240\u793a\u3002\u901a\u8fc7\u7b26\u53f7\u5fae\u5206\uff0c\u6211\u4eec\u53ef\u5f97\u5230\u56fe\u7684\u53f3\u90e8\u5206\uff0c\u5b83\u4ee3\u8868\u4e86 \uff0c\u76f8\u4f3c\u5730\u4e5f\u53ef\u5f97\u5230\u5173\u4e8e y \u7684\u5bfc\u6570\u3002 \u6982\u7b97\u6cd5\u5148\u83b7\u5f97\u53f6\u5b50\u8282\u70b9\u7684\u504f\u5bfc\u6570\u3002\u5e38\u6570 5 \u8fd4\u56de\u5e38\u6570 0\uff0c\u56e0\u4e3a\u5e38\u6570\u7684\u5bfc\u6570\u603b\u662f 0\u3002\u53d8\u91cf x \u8fd4\u56de\u5e38\u6570 1\uff0c\u53d8\u91cf y \u8fd4\u56de\u5e38\u6570 0\uff0c\u56e0\u4e3a \uff08\u5982\u679c\u6211\u4eec\u627e\u5173\u4e8e y \u7684\u504f\u5bfc\u6570\uff0c\u90a3\u5b83\u5c06\u53cd\u8fc7\u6765\uff09\u3002 \u73b0\u5728\u6211\u4eec\u79fb\u52a8\u5230\u8ba1\u7b97\u56fe\u7684\u76f8\u4e58\u8282\u70b9\u5904\uff0c\u4ee3\u6570\u544a\u8bc9\u6211\u4eec\uff0c u \u548c v \u76f8\u4e58\u540e\u7684\u5bfc\u6570\u4e3a \u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u6709\u56fe\u4e2d\u5927\u7684\u90e8\u5206\uff0c\u4ee3\u8868 0 \u00d7 x + y \u00d7 1 \u3002 \u6700\u540e\u6211\u4eec\u5f80\u4e0a\u8d70\u5230\u8ba1\u7b97\u56fe\u7684\u76f8\u52a0\u8282\u70b9\u5904\uff0c\u6b63\u5982 5 \u6761\u89c4\u5219\u91cc\u63d0\u5230\u7684\uff0c\u548c\u7684\u5bfc\u6570\u7b49\u4e8e\u5bfc\u6570\u7684\u548c\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u76f8\u52a0\u8282\u70b9\uff0c\u8fde\u63a5\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u51fa\u6765\u7684\u90e8\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u504f\u5bfc\u6570\uff0c\u5373\uff1a \u3002 \u7136\u800c\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u7b80\u5316\u3002\u5bf9\u8be5\u56fe\u5e94\u7528\u4e00\u4e9b\u5fae\u4e0d\u8db3\u9053\u7684\u526a\u679d\u6b65\u9aa4\uff0c\u53ef\u4ee5\u53bb\u6389\u6240\u6709\u4e0d\u5fc5\u8981\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5c0f\u5f97\u591a\u7684\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u504f\u5bfc\u8ba1\u7b97\u56fe\uff1a \u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u7b80\u5316\u64cd\u4f5c\u662f\u76f8\u5f53\u7b80\u5355\u7684\uff0c\u4f46\u5bf9\u66f4\u590d\u6742\u7684\u51fd\u6570\u6765\u8bf4\uff0c\u7b26\u53f7\u5fae\u5206\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5de8\u5927\u7684\u8ba1\u7b97\u56fe\uff0c\u8be5\u56fe\u53ef\u80fd\u5f88\u96be\u53bb\u7b80\u5316\uff0c\u4ee5\u5bfc\u81f4\u6b21\u4f18\u7684\u6027\u80fd\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u7b26\u53f7\u5fae\u5206\u4e0d\u80fd\u5904\u7406\u7531\u4efb\u610f\u4ee3\u7801\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u4f8b\u5982\uff0c\u5982\u4e0b\u5df2\u5728\u7b2c 9 \u7ae0\u8ba8\u8bba\u8fc7\u7684\u51fd\u6570\uff1a def my_func(a, b): z = 0 for i in range(100): z = a * np.cos(z + i) + z * np.sin(b - i) return z \u6570\u503c\u5fae\u5206 \u4ece\u6570\u503c\u4e0a\u8bf4\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6848\u662f\u53bb\u8ba1\u7b97\u5bfc\u6570\u7684\u8fd1\u4f3c\u503c\u3002\u56de\u5fc6 h(x) \u5728 \u7684\u5bfc\u6570 \uff0c\u662f\u8be5\u51fd\u6570\u5728\u8be5\u70b9\u5904\u7684\u659c\u7387\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5982\u516c\u5f0f D-2 \u6240\u793a\u3002 \u56e0\u6b64\u5982\u679c\u6211\u4eec\u60f3\u8981\u8ba1\u7b97 \u5173\u4e8e x \uff0c\u5728 \u5904\u7684\u5bfc\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u8ba1\u7b97 \u7684\u503c\uff0c\u5c06\u8fd9\u4e2a\u7ed3\u679c\u9664\u4ee5 \uff0c\u4e14 \u53bb\u5f88\u5c0f\u7684\u503c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6b63\u662f\u5982\u4e0b\u7684\u4ee3\u7801\u6240\u8981\u5e72\u7684\u3002 def f(x, y): return x**2*y + y + 2 def derivative(f, x, y, x_eps, y_eps): return (f(x + x_eps, y + y_eps) - f(x, y)) / (x_eps + y_eps) df_dx = derivative(f, 3, 4, 0.00001, 0) df_dy = derivative(f, 3, 4, 0, 0.00001) \u4e0d\u5e78\u7684\u662f\uff0c\u504f\u5bfc\u7684\u7ed3\u679c\u5e76\u4e0d\u51c6\u786e\uff08\u5e76\u4e14\u53ef\u80fd\u5728\u6c42\u89e3\u590d\u6742\u51fd\u6570\u65f6\u66f4\u7cdf\u7cd5\uff09\u3002\u4e0a\u8ff0\u6b63\u786e\u7b54\u6848\u5206\u522b\u662f 24 \u548c 10 \uff0c\u4f46\u6211\u4eec\u5f97\u5230\u7684\u662f\uff1a >>> print(df_dx) 24.000039999805264 >>> print(df_dy) 10.000000000331966 \u6ce8\u610f\u5230\u4e3a\u4e86\u8ba1\u7b97\u4e24\u4e2a\u504f\u5bfc\u6570\uff0c \u6211\u4eec\u4e0d\u5f97\u4e0d\u8c03\u7528 f() \u81f3\u5c11\u4e09\u6b21\uff08\u5728\u4e0a\u8ff0\u4ee3\u7801\u91cc\u6211\u4eec\u8c03\u7528\u4e86\u56db\u6b21\uff0c\u4f46\u53ef\u4ee5\u4f18\u5316\uff09\u3002\u5982\u679c\u5b58\u5728 1000 \u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u5c06\u4f1a\u8c03\u7528 f() \u81f3\u5c11 1001 \u6b21\u3002\u5f53\u5904\u7406\u5927\u7684\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u5f88\u6ca1\u6709\u6548\u7387\u3002 \u7136\u800c\uff0c\u6570\u503c\u5fae\u5206\u5b9e\u73b0\u8d77\u6765\u5982\u6b64\u7b80\u5355\uff0c\u4ee5\u81f3\u4e8e\u5b83\u662f\u68c0\u67e5\u5176\u4ed6\u65b9\u6cd5\u6b63\u786e\u6027\u7684\u4f18\u79c0\u5de5\u5177\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5b83\u7684\u7ed3\u679c\u4e0e\u60a8\u624b\u52a8\u8ba1\u7b97\u7684\u5bfc\u6570\u4e0d\u540c\uff0c\u90a3\u4e48\u4f60\u7684\u5bfc\u6570\u53ef\u80fd\u5305\u542b\u9519\u8bef\u3002 \u524d\u5411\u81ea\u52a8\u5fae\u5206 \u524d\u5411\u81ea\u52a8\u5fae\u5206\u65e2\u4e0d\u662f\u6570\u503c\u5fae\u5206\uff0c\u4e5f\u4e0d\u662f\u7b26\u53f7\u5fae\u5206\uff0c\u4f46\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u5b83\u662f\u4ed6\u4eec\u7684\u7231\u60c5\u7ed3\u6676\u3002\u5b83\u4f9d\u8d56\u5bf9\u5076\u6570\u3002\u5bf9\u5076\u6570\u662f\u5947\u602a\u4f46\u8ff7\u4eba\u7684\uff0c\u662f \u5f62\u5f0f\u7684\u6570\uff0c\u8fd9\u91cc a \u548c b \u662f\u5b9e\u6570\uff0c \u662f\u65e0\u7a77\u5c0f\u7684\u6570\uff0c\u6ee1\u8db3 \uff0c\u4f46 \u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u5bf9\u5076\u6570 \u7c7b\u4f3c\u4e8e\u6709\u7740\u65e0\u7a77\u4e2a 0 \u7684 42.0000\u22ef000024\uff08\u4f46\u5f53\u7136\u8fd9\u662f\u7b80\u5316\u540e\u7684\uff0c\u4ec5\u4ec5\u7ed9\u4f60\u5bf9\u5076\u6570\u4ec0\u4e48\u7684\u60f3\u6cd5\uff09\u3002\u4e00\u4e2a\u5bf9\u5076\u6570\u5728\u5185\u5b58\u4e2d\u8868\u793a\u4e3a\u4e00\u4e2a\u6d6e\u70b9\u6570\u5bf9\uff0c\u4f8b\u5982\uff0c \u8868\u793a\u4e3a (42.0, 24.0) \u3002 \u5bf9\u5076\u6570\u53ef\u76f8\u52a0\u3001\u76f8\u4e58\u3001\u7b49\u7b49\u64cd\u4f5c\uff0c\u6b63\u5982\u516c\u5f0f D-3 \u6240\u793a\u3002 \u6700\u91cd\u8981\u7684\uff0c\u53ef\u8bc1\u660e h(a + b\u03f5) = h(a) + b \u00d7 h'(a)\u03f5 \uff0c\u6240\u4ee5\u8ba1\u7b97\u4e00\u6b21 h(a + \u03f5) \u5c31\u5f97\u5230\u4e86\u4e24\u4e2a\u503c h(a) \u548c h'(a) \u3002\u56fe D-2 \u5c55\u793a\u4e86\u524d\u5411\u81ea\u52a8\u5fae\u5206\u5982\u4f55\u8ba1\u7b97 \u5173\u4e8e x \uff0c\u5728 \u5904\u7684\u5bfc\u6570\u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u4e00\u5207\u53ea\u662f\u8ba1\u7b97 \uff1b\u5b83\u5c06\u8f93\u51fa\u4e00\u4e2a\u5bf9\u5076\u6570\uff0c\u5176\u7b2c\u4e00\u90e8\u5206\u7b49\u4e8e \uff0c\u7b2c\u4e8c\u90e8\u5206\u7b49\u4e8e \u3002 \u4e3a\u4e86\u8ba1\u7b97 \u6211\u4eec\u4e0d\u5f97\u4e0d\u518d\u904d\u5386\u4e00\u904d\u8ba1\u7b97\u56fe\uff0c\u4f46\u8fd9\u6b21\u524d\u9988\u7684\u503c\u4e3a \u3002 \u6240\u4ee5\u524d\u5411\u81ea\u52a8\u5fae\u5206\u6bd4\u6570\u503c\u5fae\u5206\u51c6\u786e\u5f97\u591a\uff0c\u4f46\u5b83\u906d\u53d7\u540c\u6837\u7684\u7f3a\u9677\uff1a\u5982\u679c\u6709 1000 \u4e2a\u53c2\u6570\uff0c\u90a3\u4e3a\u4e86\u8ba1\u7b97\u6240\u6709\u7684\u504f\u5bfc\u6570\uff0c\u5f97\u5386\u7ecf\u8ba1\u7b97\u56fe 1000 \u6b21\u3002\u8fd9\u6b63\u662f\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u8000\u773c\u7684\u5730\u65b9\uff1a\u8ba1\u7b97\u6240\u6709\u7684\u504f\u5bfc\u6570\uff0c\u5b83\u53ea\u9700\u8981\u904d\u5386\u8ba1\u7b97\u56fe 2 \u6b21\u3002 \u53cd\u5411\u81ea\u52a8\u5fae\u5206 \u53cd\u5411\u81ea\u52a8\u5fae\u5206\u662f TensorFlow \u91c7\u53d6\u7684\u65b9\u6848\u3002\u5b83\u9996\u5148\u524d\u9988\u904d\u5386\u8ba1\u7b97\u56fe\uff08\u5373\uff0c\u4ece\u8f93\u5165\u5230\u8f93\u51fa\uff09\uff0c\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u3002\u7136\u540e\u8fdb\u884c\u7b2c\u4e8c\u6b21\u904d\u5386\uff0c\u8fd9\u6b21\u662f\u53cd\u5411\u904d\u5386\uff08\u5373\uff0c\u4ece\u8f93\u51fa\u5230\u8f93\u5165\uff09\uff0c\u8ba1\u7b97\u51fa\u6240\u6709\u7684\u504f\u5bfc\u6570\u3002\u56fe D-3 \u5c55\u793a\u4e86\u7b2c\u4e8c\u6b21\u904d\u5386\u7684\u8fc7\u7a0b\u3002\u5728\u7b2c\u4e00\u6b21\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u8282\u70b9\u503c\u5df2\u88ab\u8ba1\u7b97\uff0c\u8f93\u5165\u662f \u3002\u4f60\u53ef\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u5e95\u90e8\u53f3\u65b9\u770b\u5230\u8fd9\u4e9b\u503c\uff08\u4f8b\u5982\uff0c \uff09\u3002\u8282\u70b9\u5df2\u88ab\u6807\u53f7\uff0c\u4ece \u5230 \u3002\u8f93\u51fa\u8282\u70b9\u662f \u3002 \u8fd9\u4e2a\u8ba1\u7b97\u5173\u4e8e\u6bcf\u4e2a\u8fde\u7eed\u8282\u70b9\u7684\u504f\u5bfc\u6570\u7684\u601d\u60f3\u9010\u6e10\u5730\u4ece\u4e0a\u5230\u4e0b\u904d\u5386\u56fe\uff0c\u76f4\u5230\u5230\u8fbe\u53d8\u91cf\u8282\u70b9\u3002\u4e3a\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u5f3a\u70c8\u4f9d\u8d56\u4e8e\u94fe\u5f0f\u6cd5\u5219\uff0c\u5982\u516c\u5f0f D-4 \u6240\u793a\u3002 \u7531\u4e8e \u662f\u8f93\u51fa\u8282\u70b9\uff0c\u5373 \uff0c\u6240\u4ee5 \u3002 \u63a5\u7740\u5230\u4e86\u56fe\u7684 \u8282\u70b9\uff1a\u5f53 \u53d8\u5316\u65f6\uff0c \u4f1a\u53d8\u5316\u591a\u5c11\uff1f\u7b54\u6848\u662f \u3002\u6211\u4eec\u5df2\u7ecf\u77e5\u9053 \uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 \u5c31\u884c\u3002\u56e0\u4e3a \u662f \u7684\u548c\uff0c\u56e0\u6b64\u53ef\u5f97\u5230 \uff0c\u56e0\u6b64 \u3002 \u73b0\u5728\u524d\u8fdb\u5230 \uff1a\u5f53 \u53d8\u5316\u65f6\uff0c \u4f1a\u53d8\u5316\u591a\u5c11\uff1f\u7b54\u6848\u662f \u3002\u7531\u4e8e \uff0c\u6211\u4eec\u53ef\u5f97\u5230 \uff0c\u6240\u4ee5 \u3002 \u8fd9\u4e2a\u904d\u5386\u8fc7\u7a0b\u4e00\u76f4\u6301\u7eed\uff0c\u6b64\u65f6\u6211\u4eec\u8fbe\u5230\u56fe\u7684\u5e95\u90e8\u3002\u8fd9\u65f6\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u6240\u6709\u504f\u5bfc\u6570\u5728\u70b9 \u5904\u7684\u503c\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u6211\u4eec\u5f97\u5230 \u3002\u542c\u8d77\u6765\u5f88\u7f8e\u5999\uff01 \u53cd\u5411\u81ea\u52a8\u5fae\u5206\u662f\u975e\u5e38\u5f3a\u5927\u4e14\u51c6\u786e\u7684\u6280\u672f\uff0c\u5c24\u5176\u662f\u5f53\u6709\u5f88\u591a\u8f93\u5165\u53c2\u6570\u548c\u6781\u5c11\u8f93\u51fa\u65f6\uff0c\u56e0\u4e3a\u5b83\u53ea\u8981\u6c42\u4e00\u6b21\u524d\u9988\u4f20\u9012\u52a0\u4e0a\u4e00\u6b21\u53cd\u5411\u4f20\u9012\uff0c\u5c31\u53ef\u8ba1\u7b97\u6240\u6709\u8f93\u51fa\u5173\u4e8e\u6240\u6709\u8f93\u5165\u7684\u504f\u5bfc\u6570\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u4ee3\u7801\u5b9a\u4e49\u7684\u51fd\u6570\u3002\u5b83\u4e5f\u53ef\u4ee5\u5904\u7406\u90a3\u4e9b\u4e0d\u5b8c\u5168\u53ef\u5fae\u7684\u51fd\u6570\uff0c\u53ea\u8981 \u4f60\u8981\u6c42\u4ed6\u8ba1\u7b97\u7684\u504f\u5bfc\u6570\u5728\u8be5\u70b9\u5904\u662f\u53ef\u5fae\u7684\u3002 \u5982\u679c\u4f60\u5728 TensorFlow \u4e2d\u5b9e\u73b0\u4e86\u65b0\u7b97\u5b50\uff0c\u4f60\u60f3\u4f7f\u5b83\u4e0e\u73b0\u6709\u7684\u81ea\u52a8\u5fae\u5206\u76f8\u517c\u5bb9\uff0c\u90a3\u4f60\u9700\u8981\u63d0\u4f9b\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u6784\u5efa\u4e00\u4e2a\u5b50\u56fe\uff0c\u6765\u8ba1\u7b97\u5173\u4e8e\u65b0\u7b97\u5b50\u8f93\u5165\u7684\u504f\u5bfc\u6570\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5176\u8f93\u5165\u7684\u5e73\u65b9\u7684\u51fd\u6570\uff0c\u5e73\u65b9\u7b97\u5b50 \uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u4f60\u9700\u8981\u63d0\u4f9b\u76f8\u5e94\u7684\u5bfc\u51fd\u6570 \u3002\u6ce8\u610f\u8fd9\u4e2a\u5bfc\u51fd\u6570\u4e0d\u8ba1\u7b97\u4e00\u4e2a\u6570\u503c\u7ed3\u679c\uff0c\u800c\u662f\u7528\u4e8e\u6784\u5efa\u5b50\u56fe\uff0c\u8be5\u5b50\u56fe\u540e\u7eed\u5c06\u8ba1\u7b97\u504f\u5bfc\u7ed3\u679c\u3002\u8fd9\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u8ba1\u7b97\u68af\u5ea6\u7684\u68af\u5ea6\uff08\u4e3a\u4e86\u8ba1\u7b97\u4e8c\u9636\u5bfc\u6570\uff0c\u6216\u8005\u751a\u81f3\u66f4\u9ad8\u9636\u7684\u5bfc\u6570\uff09\u3002","title":"D.\u81ea\u52a8\u5fae\u5206"},{"location":"D.%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/#d","text":"\u8fd9\u4e2a\u9644\u5f55\u89e3\u91ca\u4e86 TensorFlow \u7684\u81ea\u52a8\u5fae\u5206\u529f\u80fd\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5b83\u4e0e\u5176\u4ed6\u89e3\u51b3\u65b9\u6848\u7684\u5bf9\u6bd4\u3002 \u5047\u5b9a\u4f60\u5b9a\u4e49\u4e86\u51fd\u6570 \uff0c\u9700\u8981\u5f97\u5230\u5b83\u7684\u504f\u5bfc\u6570 \u548c \uff0c\u4ee5\u7528\u4e8e\u68af\u5ea6\u4e0b\u964d\u6216\u8005\u5176\u4ed6\u4f18\u5316\u7b97\u6cd5\u3002\u4f60\u7684\u53ef\u9009\u65b9\u6848\u6709\u624b\u52a8\u5fae\u5206\u6cd5\uff0c\u7b26\u53f7\u5fae\u5206\u6cd5\uff0c\u6570\u503c\u5fae\u5206\u6cd5\uff0c\u524d\u5411\u81ea\u52a8\u5fae\u5206\uff0c\u548c\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u3002TensorFlow \u5b9e\u73b0\u7684\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u6cd5\u3002\u6211\u4eec\u6765\u770b\u770b\u6bcf\u79cd\u65b9\u6848\u3002","title":"\u9644\u5f55 D\u3001\u81ea\u52a8\u5fae\u5206"},{"location":"D.%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/#_1","text":"\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f\u62ff\u8d77\u4e00\u76f4\u7b14\u548c\u4e00\u5f20\u7eb8\uff0c\u4f7f\u7528\u4f60\u7684\u4ee3\u6570\u77e5\u8bc6\u53bb\u624b\u52a8\u7684\u6c42\u504f\u5bfc\u6570\u3002\u5bf9\u4e8e\u5df2\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u6c42\u5b83\u7684\u504f\u5bfc\u5e76\u4e0d\u592a\u56f0\u96be\u3002\u4f60\u9700\u8981\u4f7f\u7528\u5982\u4e0b 5 \u6761\u89c4\u5219\uff1a \u5e38\u6570\u7684\u5bfc\u6570\u4e3a 0\u3002 \u7684\u5bfc\u6570\u4e3a \uff0c \u4e3a\u5e38\u6570\u3002 \u7684\u5bfc\u6570\u662f \u51fd\u6570\u7684\u548c\u7684\u5bfc\u6570\uff0c\u7b49\u4e8e\u51fd\u6570\u7684\u5bfc\u6570\u7684\u548c \u4e58\u4ee5\u51fd\u6570\uff0c\u518d\u6c42\u5bfc\uff0c\u7b49\u4e8e \u4e58\u4ee5\u51fd\u6570\u7684\u5bfc\u6570 \u4ece\u4e0a\u8ff0\u8fd9\u4e9b\u89c4\u5219\uff0c\u53ef\u5f97\u5230\u516c\u5f0f D-1\u3002 \u8fd9\u4e2a\u79cd\u65b9\u6cd5\u5e94\u7528\u4e8e\u66f4\u590d\u6742\u51fd\u6570\u65f6\u5c06\u53d8\u5f97\u975e\u5e38\u7f57\u55e6\uff0c\u5e76\u4e14\u6709\u53ef\u80fd\u51fa\u9519\u3002\u597d\u6d88\u606f\u662f\uff0c\u50cf\u521a\u624d\u6211\u4eec\u505a\u7684\u6c42\u6570\u5b66\u5f0f\u5b50\u7684\u504f\u5bfc\u6570\u53ef\u4ee5\u88ab\u81ea\u52a8\u5316\uff0c\u901a\u8fc7\u4e00\u4e2a\u79f0\u4e3a\u7b26\u53f7\u5fae\u5206\u7684\u8fc7\u7a0b\u3002","title":"\u624b\u52a8\u5fae\u5206\u6cd5"},{"location":"D.%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/#_2","text":"\u56fe D-1 \u5c55\u793a\u4e86\u7b26\u53f7\u5fae\u5206\u662f\u5982\u4f55\u8fd0\u884c\u5728\u76f8\u5f53\u7b80\u5355\u7684\u51fd\u6570\u4e0a\u7684\uff0c \u3002\u8be5\u51fd\u6570\u7684\u8ba1\u7b97\u56fe\u5982\u56fe\u7684\u5de6\u8fb9\u6240\u793a\u3002\u901a\u8fc7\u7b26\u53f7\u5fae\u5206\uff0c\u6211\u4eec\u53ef\u5f97\u5230\u56fe\u7684\u53f3\u90e8\u5206\uff0c\u5b83\u4ee3\u8868\u4e86 \uff0c\u76f8\u4f3c\u5730\u4e5f\u53ef\u5f97\u5230\u5173\u4e8e y \u7684\u5bfc\u6570\u3002 \u6982\u7b97\u6cd5\u5148\u83b7\u5f97\u53f6\u5b50\u8282\u70b9\u7684\u504f\u5bfc\u6570\u3002\u5e38\u6570 5 \u8fd4\u56de\u5e38\u6570 0\uff0c\u56e0\u4e3a\u5e38\u6570\u7684\u5bfc\u6570\u603b\u662f 0\u3002\u53d8\u91cf x \u8fd4\u56de\u5e38\u6570 1\uff0c\u53d8\u91cf y \u8fd4\u56de\u5e38\u6570 0\uff0c\u56e0\u4e3a \uff08\u5982\u679c\u6211\u4eec\u627e\u5173\u4e8e y \u7684\u504f\u5bfc\u6570\uff0c\u90a3\u5b83\u5c06\u53cd\u8fc7\u6765\uff09\u3002 \u73b0\u5728\u6211\u4eec\u79fb\u52a8\u5230\u8ba1\u7b97\u56fe\u7684\u76f8\u4e58\u8282\u70b9\u5904\uff0c\u4ee3\u6570\u544a\u8bc9\u6211\u4eec\uff0c u \u548c v \u76f8\u4e58\u540e\u7684\u5bfc\u6570\u4e3a \u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u6709\u56fe\u4e2d\u5927\u7684\u90e8\u5206\uff0c\u4ee3\u8868 0 \u00d7 x + y \u00d7 1 \u3002 \u6700\u540e\u6211\u4eec\u5f80\u4e0a\u8d70\u5230\u8ba1\u7b97\u56fe\u7684\u76f8\u52a0\u8282\u70b9\u5904\uff0c\u6b63\u5982 5 \u6761\u89c4\u5219\u91cc\u63d0\u5230\u7684\uff0c\u548c\u7684\u5bfc\u6570\u7b49\u4e8e\u5bfc\u6570\u7684\u548c\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u76f8\u52a0\u8282\u70b9\uff0c\u8fde\u63a5\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u51fa\u6765\u7684\u90e8\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u504f\u5bfc\u6570\uff0c\u5373\uff1a \u3002 \u7136\u800c\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u7b80\u5316\u3002\u5bf9\u8be5\u56fe\u5e94\u7528\u4e00\u4e9b\u5fae\u4e0d\u8db3\u9053\u7684\u526a\u679d\u6b65\u9aa4\uff0c\u53ef\u4ee5\u53bb\u6389\u6240\u6709\u4e0d\u5fc5\u8981\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5c0f\u5f97\u591a\u7684\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u504f\u5bfc\u8ba1\u7b97\u56fe\uff1a \u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u7b80\u5316\u64cd\u4f5c\u662f\u76f8\u5f53\u7b80\u5355\u7684\uff0c\u4f46\u5bf9\u66f4\u590d\u6742\u7684\u51fd\u6570\u6765\u8bf4\uff0c\u7b26\u53f7\u5fae\u5206\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5de8\u5927\u7684\u8ba1\u7b97\u56fe\uff0c\u8be5\u56fe\u53ef\u80fd\u5f88\u96be\u53bb\u7b80\u5316\uff0c\u4ee5\u5bfc\u81f4\u6b21\u4f18\u7684\u6027\u80fd\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u7b26\u53f7\u5fae\u5206\u4e0d\u80fd\u5904\u7406\u7531\u4efb\u610f\u4ee3\u7801\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u4f8b\u5982\uff0c\u5982\u4e0b\u5df2\u5728\u7b2c 9 \u7ae0\u8ba8\u8bba\u8fc7\u7684\u51fd\u6570\uff1a def my_func(a, b): z = 0 for i in range(100): z = a * np.cos(z + i) + z * np.sin(b - i) return z","title":"\u7b26\u53f7\u5fae\u5206"},{"location":"D.%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/#_3","text":"\u4ece\u6570\u503c\u4e0a\u8bf4\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6848\u662f\u53bb\u8ba1\u7b97\u5bfc\u6570\u7684\u8fd1\u4f3c\u503c\u3002\u56de\u5fc6 h(x) \u5728 \u7684\u5bfc\u6570 \uff0c\u662f\u8be5\u51fd\u6570\u5728\u8be5\u70b9\u5904\u7684\u659c\u7387\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5982\u516c\u5f0f D-2 \u6240\u793a\u3002 \u56e0\u6b64\u5982\u679c\u6211\u4eec\u60f3\u8981\u8ba1\u7b97 \u5173\u4e8e x \uff0c\u5728 \u5904\u7684\u5bfc\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u8ba1\u7b97 \u7684\u503c\uff0c\u5c06\u8fd9\u4e2a\u7ed3\u679c\u9664\u4ee5 \uff0c\u4e14 \u53bb\u5f88\u5c0f\u7684\u503c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6b63\u662f\u5982\u4e0b\u7684\u4ee3\u7801\u6240\u8981\u5e72\u7684\u3002 def f(x, y): return x**2*y + y + 2 def derivative(f, x, y, x_eps, y_eps): return (f(x + x_eps, y + y_eps) - f(x, y)) / (x_eps + y_eps) df_dx = derivative(f, 3, 4, 0.00001, 0) df_dy = derivative(f, 3, 4, 0, 0.00001) \u4e0d\u5e78\u7684\u662f\uff0c\u504f\u5bfc\u7684\u7ed3\u679c\u5e76\u4e0d\u51c6\u786e\uff08\u5e76\u4e14\u53ef\u80fd\u5728\u6c42\u89e3\u590d\u6742\u51fd\u6570\u65f6\u66f4\u7cdf\u7cd5\uff09\u3002\u4e0a\u8ff0\u6b63\u786e\u7b54\u6848\u5206\u522b\u662f 24 \u548c 10 \uff0c\u4f46\u6211\u4eec\u5f97\u5230\u7684\u662f\uff1a >>> print(df_dx) 24.000039999805264 >>> print(df_dy) 10.000000000331966 \u6ce8\u610f\u5230\u4e3a\u4e86\u8ba1\u7b97\u4e24\u4e2a\u504f\u5bfc\u6570\uff0c \u6211\u4eec\u4e0d\u5f97\u4e0d\u8c03\u7528 f() \u81f3\u5c11\u4e09\u6b21\uff08\u5728\u4e0a\u8ff0\u4ee3\u7801\u91cc\u6211\u4eec\u8c03\u7528\u4e86\u56db\u6b21\uff0c\u4f46\u53ef\u4ee5\u4f18\u5316\uff09\u3002\u5982\u679c\u5b58\u5728 1000 \u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u5c06\u4f1a\u8c03\u7528 f() \u81f3\u5c11 1001 \u6b21\u3002\u5f53\u5904\u7406\u5927\u7684\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u5f88\u6ca1\u6709\u6548\u7387\u3002 \u7136\u800c\uff0c\u6570\u503c\u5fae\u5206\u5b9e\u73b0\u8d77\u6765\u5982\u6b64\u7b80\u5355\uff0c\u4ee5\u81f3\u4e8e\u5b83\u662f\u68c0\u67e5\u5176\u4ed6\u65b9\u6cd5\u6b63\u786e\u6027\u7684\u4f18\u79c0\u5de5\u5177\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5b83\u7684\u7ed3\u679c\u4e0e\u60a8\u624b\u52a8\u8ba1\u7b97\u7684\u5bfc\u6570\u4e0d\u540c\uff0c\u90a3\u4e48\u4f60\u7684\u5bfc\u6570\u53ef\u80fd\u5305\u542b\u9519\u8bef\u3002","title":"\u6570\u503c\u5fae\u5206"},{"location":"D.%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/#_4","text":"\u524d\u5411\u81ea\u52a8\u5fae\u5206\u65e2\u4e0d\u662f\u6570\u503c\u5fae\u5206\uff0c\u4e5f\u4e0d\u662f\u7b26\u53f7\u5fae\u5206\uff0c\u4f46\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u5b83\u662f\u4ed6\u4eec\u7684\u7231\u60c5\u7ed3\u6676\u3002\u5b83\u4f9d\u8d56\u5bf9\u5076\u6570\u3002\u5bf9\u5076\u6570\u662f\u5947\u602a\u4f46\u8ff7\u4eba\u7684\uff0c\u662f \u5f62\u5f0f\u7684\u6570\uff0c\u8fd9\u91cc a \u548c b \u662f\u5b9e\u6570\uff0c \u662f\u65e0\u7a77\u5c0f\u7684\u6570\uff0c\u6ee1\u8db3 \uff0c\u4f46 \u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u5bf9\u5076\u6570 \u7c7b\u4f3c\u4e8e\u6709\u7740\u65e0\u7a77\u4e2a 0 \u7684 42.0000\u22ef000024\uff08\u4f46\u5f53\u7136\u8fd9\u662f\u7b80\u5316\u540e\u7684\uff0c\u4ec5\u4ec5\u7ed9\u4f60\u5bf9\u5076\u6570\u4ec0\u4e48\u7684\u60f3\u6cd5\uff09\u3002\u4e00\u4e2a\u5bf9\u5076\u6570\u5728\u5185\u5b58\u4e2d\u8868\u793a\u4e3a\u4e00\u4e2a\u6d6e\u70b9\u6570\u5bf9\uff0c\u4f8b\u5982\uff0c \u8868\u793a\u4e3a (42.0, 24.0) \u3002 \u5bf9\u5076\u6570\u53ef\u76f8\u52a0\u3001\u76f8\u4e58\u3001\u7b49\u7b49\u64cd\u4f5c\uff0c\u6b63\u5982\u516c\u5f0f D-3 \u6240\u793a\u3002 \u6700\u91cd\u8981\u7684\uff0c\u53ef\u8bc1\u660e h(a + b\u03f5) = h(a) + b \u00d7 h'(a)\u03f5 \uff0c\u6240\u4ee5\u8ba1\u7b97\u4e00\u6b21 h(a + \u03f5) \u5c31\u5f97\u5230\u4e86\u4e24\u4e2a\u503c h(a) \u548c h'(a) \u3002\u56fe D-2 \u5c55\u793a\u4e86\u524d\u5411\u81ea\u52a8\u5fae\u5206\u5982\u4f55\u8ba1\u7b97 \u5173\u4e8e x \uff0c\u5728 \u5904\u7684\u5bfc\u6570\u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u4e00\u5207\u53ea\u662f\u8ba1\u7b97 \uff1b\u5b83\u5c06\u8f93\u51fa\u4e00\u4e2a\u5bf9\u5076\u6570\uff0c\u5176\u7b2c\u4e00\u90e8\u5206\u7b49\u4e8e \uff0c\u7b2c\u4e8c\u90e8\u5206\u7b49\u4e8e \u3002 \u4e3a\u4e86\u8ba1\u7b97 \u6211\u4eec\u4e0d\u5f97\u4e0d\u518d\u904d\u5386\u4e00\u904d\u8ba1\u7b97\u56fe\uff0c\u4f46\u8fd9\u6b21\u524d\u9988\u7684\u503c\u4e3a \u3002 \u6240\u4ee5\u524d\u5411\u81ea\u52a8\u5fae\u5206\u6bd4\u6570\u503c\u5fae\u5206\u51c6\u786e\u5f97\u591a\uff0c\u4f46\u5b83\u906d\u53d7\u540c\u6837\u7684\u7f3a\u9677\uff1a\u5982\u679c\u6709 1000 \u4e2a\u53c2\u6570\uff0c\u90a3\u4e3a\u4e86\u8ba1\u7b97\u6240\u6709\u7684\u504f\u5bfc\u6570\uff0c\u5f97\u5386\u7ecf\u8ba1\u7b97\u56fe 1000 \u6b21\u3002\u8fd9\u6b63\u662f\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u8000\u773c\u7684\u5730\u65b9\uff1a\u8ba1\u7b97\u6240\u6709\u7684\u504f\u5bfc\u6570\uff0c\u5b83\u53ea\u9700\u8981\u904d\u5386\u8ba1\u7b97\u56fe 2 \u6b21\u3002","title":"\u524d\u5411\u81ea\u52a8\u5fae\u5206"},{"location":"D.%E8%87%AA%E5%8A%A8%E5%BE%AE%E5%88%86/#_5","text":"\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u662f TensorFlow \u91c7\u53d6\u7684\u65b9\u6848\u3002\u5b83\u9996\u5148\u524d\u9988\u904d\u5386\u8ba1\u7b97\u56fe\uff08\u5373\uff0c\u4ece\u8f93\u5165\u5230\u8f93\u51fa\uff09\uff0c\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u3002\u7136\u540e\u8fdb\u884c\u7b2c\u4e8c\u6b21\u904d\u5386\uff0c\u8fd9\u6b21\u662f\u53cd\u5411\u904d\u5386\uff08\u5373\uff0c\u4ece\u8f93\u51fa\u5230\u8f93\u5165\uff09\uff0c\u8ba1\u7b97\u51fa\u6240\u6709\u7684\u504f\u5bfc\u6570\u3002\u56fe D-3 \u5c55\u793a\u4e86\u7b2c\u4e8c\u6b21\u904d\u5386\u7684\u8fc7\u7a0b\u3002\u5728\u7b2c\u4e00\u6b21\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u8282\u70b9\u503c\u5df2\u88ab\u8ba1\u7b97\uff0c\u8f93\u5165\u662f \u3002\u4f60\u53ef\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u5e95\u90e8\u53f3\u65b9\u770b\u5230\u8fd9\u4e9b\u503c\uff08\u4f8b\u5982\uff0c \uff09\u3002\u8282\u70b9\u5df2\u88ab\u6807\u53f7\uff0c\u4ece \u5230 \u3002\u8f93\u51fa\u8282\u70b9\u662f \u3002 \u8fd9\u4e2a\u8ba1\u7b97\u5173\u4e8e\u6bcf\u4e2a\u8fde\u7eed\u8282\u70b9\u7684\u504f\u5bfc\u6570\u7684\u601d\u60f3\u9010\u6e10\u5730\u4ece\u4e0a\u5230\u4e0b\u904d\u5386\u56fe\uff0c\u76f4\u5230\u5230\u8fbe\u53d8\u91cf\u8282\u70b9\u3002\u4e3a\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u53cd\u5411\u81ea\u52a8\u5fae\u5206\u5f3a\u70c8\u4f9d\u8d56\u4e8e\u94fe\u5f0f\u6cd5\u5219\uff0c\u5982\u516c\u5f0f D-4 \u6240\u793a\u3002 \u7531\u4e8e \u662f\u8f93\u51fa\u8282\u70b9\uff0c\u5373 \uff0c\u6240\u4ee5 \u3002 \u63a5\u7740\u5230\u4e86\u56fe\u7684 \u8282\u70b9\uff1a\u5f53 \u53d8\u5316\u65f6\uff0c \u4f1a\u53d8\u5316\u591a\u5c11\uff1f\u7b54\u6848\u662f \u3002\u6211\u4eec\u5df2\u7ecf\u77e5\u9053 \uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 \u5c31\u884c\u3002\u56e0\u4e3a \u662f \u7684\u548c\uff0c\u56e0\u6b64\u53ef\u5f97\u5230 \uff0c\u56e0\u6b64 \u3002 \u73b0\u5728\u524d\u8fdb\u5230 \uff1a\u5f53 \u53d8\u5316\u65f6\uff0c \u4f1a\u53d8\u5316\u591a\u5c11\uff1f\u7b54\u6848\u662f \u3002\u7531\u4e8e \uff0c\u6211\u4eec\u53ef\u5f97\u5230 \uff0c\u6240\u4ee5 \u3002 \u8fd9\u4e2a\u904d\u5386\u8fc7\u7a0b\u4e00\u76f4\u6301\u7eed\uff0c\u6b64\u65f6\u6211\u4eec\u8fbe\u5230\u56fe\u7684\u5e95\u90e8\u3002\u8fd9\u65f6\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u6240\u6709\u504f\u5bfc\u6570\u5728\u70b9 \u5904\u7684\u503c\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u6211\u4eec\u5f97\u5230 \u3002\u542c\u8d77\u6765\u5f88\u7f8e\u5999\uff01 \u53cd\u5411\u81ea\u52a8\u5fae\u5206\u662f\u975e\u5e38\u5f3a\u5927\u4e14\u51c6\u786e\u7684\u6280\u672f\uff0c\u5c24\u5176\u662f\u5f53\u6709\u5f88\u591a\u8f93\u5165\u53c2\u6570\u548c\u6781\u5c11\u8f93\u51fa\u65f6\uff0c\u56e0\u4e3a\u5b83\u53ea\u8981\u6c42\u4e00\u6b21\u524d\u9988\u4f20\u9012\u52a0\u4e0a\u4e00\u6b21\u53cd\u5411\u4f20\u9012\uff0c\u5c31\u53ef\u8ba1\u7b97\u6240\u6709\u8f93\u51fa\u5173\u4e8e\u6240\u6709\u8f93\u5165\u7684\u504f\u5bfc\u6570\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u4ee3\u7801\u5b9a\u4e49\u7684\u51fd\u6570\u3002\u5b83\u4e5f\u53ef\u4ee5\u5904\u7406\u90a3\u4e9b\u4e0d\u5b8c\u5168\u53ef\u5fae\u7684\u51fd\u6570\uff0c\u53ea\u8981 \u4f60\u8981\u6c42\u4ed6\u8ba1\u7b97\u7684\u504f\u5bfc\u6570\u5728\u8be5\u70b9\u5904\u662f\u53ef\u5fae\u7684\u3002 \u5982\u679c\u4f60\u5728 TensorFlow \u4e2d\u5b9e\u73b0\u4e86\u65b0\u7b97\u5b50\uff0c\u4f60\u60f3\u4f7f\u5b83\u4e0e\u73b0\u6709\u7684\u81ea\u52a8\u5fae\u5206\u76f8\u517c\u5bb9\uff0c\u90a3\u4f60\u9700\u8981\u63d0\u4f9b\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u6784\u5efa\u4e00\u4e2a\u5b50\u56fe\uff0c\u6765\u8ba1\u7b97\u5173\u4e8e\u65b0\u7b97\u5b50\u8f93\u5165\u7684\u504f\u5bfc\u6570\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5176\u8f93\u5165\u7684\u5e73\u65b9\u7684\u51fd\u6570\uff0c\u5e73\u65b9\u7b97\u5b50 \uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u4f60\u9700\u8981\u63d0\u4f9b\u76f8\u5e94\u7684\u5bfc\u51fd\u6570 \u3002\u6ce8\u610f\u8fd9\u4e2a\u5bfc\u51fd\u6570\u4e0d\u8ba1\u7b97\u4e00\u4e2a\u6570\u503c\u7ed3\u679c\uff0c\u800c\u662f\u7528\u4e8e\u6784\u5efa\u5b50\u56fe\uff0c\u8be5\u5b50\u56fe\u540e\u7eed\u5c06\u8ba1\u7b97\u504f\u5bfc\u7ed3\u679c\u3002\u8fd9\u662f\u975e\u5e38\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u8ba1\u7b97\u68af\u5ea6\u7684\u68af\u5ea6\uff08\u4e3a\u4e86\u8ba1\u7b97\u4e8c\u9636\u5bfc\u6570\uff0c\u6216\u8005\u751a\u81f3\u66f4\u9ad8\u9636\u7684\u5bfc\u6570\uff09\u3002","title":"\u53cd\u5411\u81ea\u52a8\u5fae\u5206"}]}